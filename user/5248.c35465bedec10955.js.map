{"version":3,"file":"5248.c35465bedec10955.js","mappings":"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","names":["rust","Object","freeze","displayName","name","patterns","begin","beginCaptures","comment","end","endCaptures","include","captures","match","repository","attributes","comments","constants","escapes","functions","gtypes","interpolations","keywords","lifetimes","lvariables","macros","namespaces","punctuation","strings","types","variables","scopeName","aliases"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./node_modules/shiki/dist/langs/rust.mjs"],"sourcesContent":["const lang = Object.freeze({ \"displayName\": \"Rust\", \"name\": \"rust\", \"patterns\": [{ \"begin\": \"(<)(\\\\[)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.brackets.angle.rust\" }, \"2\": { \"name\": \"punctuation.brackets.square.rust\" } }, \"comment\": \"boxed slice literal\", \"end\": \">\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.brackets.angle.rust\" } }, \"patterns\": [{ \"include\": \"#block-comments\" }, { \"include\": \"#comments\" }, { \"include\": \"#gtypes\" }, { \"include\": \"#lvariables\" }, { \"include\": \"#lifetimes\" }, { \"include\": \"#punctuation\" }, { \"include\": \"#types\" }] }, { \"captures\": { \"1\": { \"name\": \"keyword.operator.macro.dollar.rust\" }, \"3\": { \"name\": \"keyword.other.crate.rust\" }, \"4\": { \"name\": \"entity.name.type.metavariable.rust\" }, \"6\": { \"name\": \"keyword.operator.key-value.rust\" }, \"7\": { \"name\": \"variable.other.metavariable.specifier.rust\" } }, \"comment\": \"macro type metavariables\", \"match\": \"(\\\\$)((crate)|([A-Z][A-Za-z0-9_]*))((:)(block|expr|ident|item|lifetime|literal|meta|path?|stmt|tt|ty|vis))?\", \"name\": \"meta.macro.metavariable.type.rust\", \"patterns\": [{ \"include\": \"#keywords\" }] }, { \"captures\": { \"1\": { \"name\": \"keyword.operator.macro.dollar.rust\" }, \"2\": { \"name\": \"variable.other.metavariable.name.rust\" }, \"4\": { \"name\": \"keyword.operator.key-value.rust\" }, \"5\": { \"name\": \"variable.other.metavariable.specifier.rust\" } }, \"comment\": \"macro metavariables\", \"match\": \"(\\\\$)([a-z][A-Za-z0-9_]*)((:)(block|expr|ident|item|lifetime|literal|meta|path?|stmt|tt|ty|vis))?\", \"name\": \"meta.macro.metavariable.rust\", \"patterns\": [{ \"include\": \"#keywords\" }] }, { \"captures\": { \"1\": { \"name\": \"entity.name.function.macro.rules.rust\" }, \"3\": { \"name\": \"entity.name.function.macro.rust\" }, \"4\": { \"name\": \"entity.name.type.macro.rust\" }, \"5\": { \"name\": \"punctuation.brackets.curly.rust\" } }, \"comment\": \"macro rules\", \"match\": \"\\\\b(macro_rules!)\\\\s+(([a-z0-9_]+)|([A-Z][a-z0-9_]*))\\\\s+(\\\\{)\", \"name\": \"meta.macro.rules.rust\" }, { \"captures\": { \"1\": { \"name\": \"storage.type.rust\" }, \"2\": { \"name\": \"entity.name.module.rust\" } }, \"comment\": \"modules\", \"match\": \"(mod)\\\\s+((?:r#(?!crate|[Ss]elf|super))?[a-z][A-Za-z0-9_]*)\" }, { \"begin\": \"\\\\b(extern)\\\\s+(crate)\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.rust\" }, \"2\": { \"name\": \"keyword.other.crate.rust\" } }, \"comment\": \"external crate imports\", \"end\": \";\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.semi.rust\" } }, \"name\": \"meta.import.rust\", \"patterns\": [{ \"include\": \"#block-comments\" }, { \"include\": \"#comments\" }, { \"include\": \"#keywords\" }, { \"include\": \"#punctuation\" }] }, { \"begin\": \"\\\\b(use)\\\\s\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.other.rust\" } }, \"comment\": \"use statements\", \"end\": \";\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.semi.rust\" } }, \"name\": \"meta.use.rust\", \"patterns\": [{ \"include\": \"#block-comments\" }, { \"include\": \"#comments\" }, { \"include\": \"#keywords\" }, { \"include\": \"#namespaces\" }, { \"include\": \"#punctuation\" }, { \"include\": \"#types\" }, { \"include\": \"#lvariables\" }] }, { \"include\": \"#block-comments\" }, { \"include\": \"#comments\" }, { \"include\": \"#attributes\" }, { \"include\": \"#lvariables\" }, { \"include\": \"#constants\" }, { \"include\": \"#gtypes\" }, { \"include\": \"#functions\" }, { \"include\": \"#types\" }, { \"include\": \"#keywords\" }, { \"include\": \"#lifetimes\" }, { \"include\": \"#macros\" }, { \"include\": \"#namespaces\" }, { \"include\": \"#punctuation\" }, { \"include\": \"#strings\" }, { \"include\": \"#variables\" }], \"repository\": { \"attributes\": { \"begin\": \"(#)(\\\\!?)(\\\\[)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.attribute.rust\" }, \"3\": { \"name\": \"punctuation.brackets.attribute.rust\" } }, \"comment\": \"attributes\", \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.brackets.attribute.rust\" } }, \"name\": \"meta.attribute.rust\", \"patterns\": [{ \"include\": \"#block-comments\" }, { \"include\": \"#comments\" }, { \"include\": \"#keywords\" }, { \"include\": \"#lifetimes\" }, { \"include\": \"#punctuation\" }, { \"include\": \"#strings\" }, { \"include\": \"#gtypes\" }, { \"include\": \"#types\" }] }, \"block-comments\": { \"patterns\": [{ \"comment\": \"empty block comments\", \"match\": \"/\\\\*\\\\*/\", \"name\": \"comment.block.rust\" }, { \"begin\": \"/\\\\*\\\\*\", \"comment\": \"block documentation comments\", \"end\": \"\\\\*/\", \"name\": \"comment.block.documentation.rust\", \"patterns\": [{ \"include\": \"#block-comments\" }] }, { \"begin\": \"/\\\\*(?!\\\\*)\", \"comment\": \"block comments\", \"end\": \"\\\\*/\", \"name\": \"comment.block.rust\", \"patterns\": [{ \"include\": \"#block-comments\" }] }] }, \"comments\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"punctuation.definition.comment.rust\" } }, \"comment\": \"documentation comments\", \"match\": \"(///).*$\", \"name\": \"comment.line.documentation.rust\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.comment.rust\" } }, \"comment\": \"line comments\", \"match\": \"(//).*$\", \"name\": \"comment.line.double-slash.rust\" }] }, \"constants\": { \"patterns\": [{ \"comment\": \"ALL CAPS constants\", \"match\": \"\\\\b[A-Z]{2}[A-Z0-9_]*\\\\b\", \"name\": \"constant.other.caps.rust\" }, { \"captures\": { \"1\": { \"name\": \"storage.type.rust\" }, \"2\": { \"name\": \"constant.other.caps.rust\" } }, \"comment\": \"constant declarations\", \"match\": \"\\\\b(const)\\\\s+([A-Z][A-Za-z0-9_]*)\\\\b\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.dot.decimal.rust\" }, \"2\": { \"name\": \"keyword.operator.exponent.rust\" }, \"3\": { \"name\": \"keyword.operator.exponent.sign.rust\" }, \"4\": { \"name\": \"constant.numeric.decimal.exponent.mantissa.rust\" }, \"5\": { \"name\": \"entity.name.type.numeric.rust\" } }, \"comment\": \"decimal integers and floats\", \"match\": \"\\\\b\\\\d[\\\\d_]*(\\\\.?)[\\\\d_]*(?:(E|e)([+-]?)([\\\\d_]+))?(f32|f64|i128|i16|i32|i64|i8|isize|u128|u16|u32|u64|u8|usize)?\\\\b\", \"name\": \"constant.numeric.decimal.rust\" }, { \"captures\": { \"1\": { \"name\": \"entity.name.type.numeric.rust\" } }, \"comment\": \"hexadecimal integers\", \"match\": \"\\\\b0x[\\\\da-fA-F_]+(i128|i16|i32|i64|i8|isize|u128|u16|u32|u64|u8|usize)?\\\\b\", \"name\": \"constant.numeric.hex.rust\" }, { \"captures\": { \"1\": { \"name\": \"entity.name.type.numeric.rust\" } }, \"comment\": \"octal integers\", \"match\": \"\\\\b0o[0-7_]+(i128|i16|i32|i64|i8|isize|u128|u16|u32|u64|u8|usize)?\\\\b\", \"name\": \"constant.numeric.oct.rust\" }, { \"captures\": { \"1\": { \"name\": \"entity.name.type.numeric.rust\" } }, \"comment\": \"binary integers\", \"match\": \"\\\\b0b[01_]+(i128|i16|i32|i64|i8|isize|u128|u16|u32|u64|u8|usize)?\\\\b\", \"name\": \"constant.numeric.bin.rust\" }, { \"comment\": \"booleans\", \"match\": \"\\\\b(true|false)\\\\b\", \"name\": \"constant.language.bool.rust\" }] }, \"escapes\": { \"captures\": { \"1\": { \"name\": \"constant.character.escape.backslash.rust\" }, \"2\": { \"name\": \"constant.character.escape.bit.rust\" }, \"3\": { \"name\": \"constant.character.escape.unicode.rust\" }, \"4\": { \"name\": \"constant.character.escape.unicode.punctuation.rust\" }, \"5\": { \"name\": \"constant.character.escape.unicode.punctuation.rust\" } }, \"comment\": \"escapes: ASCII, byte, Unicode, quote, regex\", \"match\": \"(\\\\\\\\)(?:(?:(x[0-7][\\\\da-fA-F])|(u(\\\\{)[\\\\da-fA-F]{4,6}(\\\\}))|.))\", \"name\": \"constant.character.escape.rust\" }, \"functions\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"keyword.other.rust\" }, \"2\": { \"name\": \"punctuation.brackets.round.rust\" } }, \"comment\": \"pub as a function\", \"match\": \"\\\\b(pub)(\\\\()\" }, { \"begin\": \"\\\\b(fn)\\\\s+((?:r#(?!crate|[Ss]elf|super))?[A-Za-z0-9_]+)((\\\\()|(<))\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.other.fn.rust\" }, \"2\": { \"name\": \"entity.name.function.rust\" }, \"4\": { \"name\": \"punctuation.brackets.round.rust\" }, \"5\": { \"name\": \"punctuation.brackets.angle.rust\" } }, \"comment\": \"function definition\", \"end\": \"\\\\{|;\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.brackets.curly.rust\" } }, \"name\": \"meta.function.definition.rust\", \"patterns\": [{ \"include\": \"#block-comments\" }, { \"include\": \"#comments\" }, { \"include\": \"#keywords\" }, { \"include\": \"#lvariables\" }, { \"include\": \"#constants\" }, { \"include\": \"#gtypes\" }, { \"include\": \"#functions\" }, { \"include\": \"#lifetimes\" }, { \"include\": \"#macros\" }, { \"include\": \"#namespaces\" }, { \"include\": \"#punctuation\" }, { \"include\": \"#strings\" }, { \"include\": \"#types\" }, { \"include\": \"#variables\" }] }, { \"begin\": \"((?:r#(?!crate|[Ss]elf|super))?[A-Za-z0-9_]+)(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.function.rust\" }, \"2\": { \"name\": \"punctuation.brackets.round.rust\" } }, \"comment\": \"function/method calls, chaining\", \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.brackets.round.rust\" } }, \"name\": \"meta.function.call.rust\", \"patterns\": [{ \"include\": \"#block-comments\" }, { \"include\": \"#comments\" }, { \"include\": \"#attributes\" }, { \"include\": \"#keywords\" }, { \"include\": \"#lvariables\" }, { \"include\": \"#constants\" }, { \"include\": \"#gtypes\" }, { \"include\": \"#functions\" }, { \"include\": \"#lifetimes\" }, { \"include\": \"#macros\" }, { \"include\": \"#namespaces\" }, { \"include\": \"#punctuation\" }, { \"include\": \"#strings\" }, { \"include\": \"#types\" }, { \"include\": \"#variables\" }] }, { \"begin\": \"((?:r#(?!crate|[Ss]elf|super))?[A-Za-z0-9_]+)(?=::<.*>\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.function.rust\" } }, \"comment\": \"function/method calls with turbofish\", \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.brackets.round.rust\" } }, \"name\": \"meta.function.call.rust\", \"patterns\": [{ \"include\": \"#block-comments\" }, { \"include\": \"#comments\" }, { \"include\": \"#attributes\" }, { \"include\": \"#keywords\" }, { \"include\": \"#lvariables\" }, { \"include\": \"#constants\" }, { \"include\": \"#gtypes\" }, { \"include\": \"#functions\" }, { \"include\": \"#lifetimes\" }, { \"include\": \"#macros\" }, { \"include\": \"#namespaces\" }, { \"include\": \"#punctuation\" }, { \"include\": \"#strings\" }, { \"include\": \"#types\" }, { \"include\": \"#variables\" }] }] }, \"gtypes\": { \"patterns\": [{ \"comment\": \"option types\", \"match\": \"\\\\b(Some|None)\\\\b\", \"name\": \"entity.name.type.option.rust\" }, { \"comment\": \"result types\", \"match\": \"\\\\b(Ok|Err)\\\\b\", \"name\": \"entity.name.type.result.rust\" }] }, \"interpolations\": { \"captures\": { \"1\": { \"name\": \"punctuation.definition.interpolation.rust\" }, \"2\": { \"name\": \"punctuation.definition.interpolation.rust\" } }, \"comment\": \"curly brace interpolations\", \"match\": '({)[^\"{}]*(})', \"name\": \"meta.interpolation.rust\" }, \"keywords\": { \"patterns\": [{ \"comment\": \"control flow keywords\", \"match\": \"\\\\b(await|break|continue|do|else|for|if|loop|match|return|try|while|yield)\\\\b\", \"name\": \"keyword.control.rust\" }, { \"comment\": \"storage keywords\", \"match\": \"\\\\b(extern|let|macro|mod)\\\\b\", \"name\": \"keyword.other.rust storage.type.rust\" }, { \"comment\": \"const keyword\", \"match\": \"\\\\b(const)\\\\b\", \"name\": \"storage.modifier.rust\" }, { \"comment\": \"type keyword\", \"match\": \"\\\\b(type)\\\\b\", \"name\": \"keyword.declaration.type.rust storage.type.rust\" }, { \"comment\": \"enum keyword\", \"match\": \"\\\\b(enum)\\\\b\", \"name\": \"keyword.declaration.enum.rust storage.type.rust\" }, { \"comment\": \"trait keyword\", \"match\": \"\\\\b(trait)\\\\b\", \"name\": \"keyword.declaration.trait.rust storage.type.rust\" }, { \"comment\": \"struct keyword\", \"match\": \"\\\\b(struct)\\\\b\", \"name\": \"keyword.declaration.struct.rust storage.type.rust\" }, { \"comment\": \"storage modifiers\", \"match\": \"\\\\b(abstract|static)\\\\b\", \"name\": \"storage.modifier.rust\" }, { \"comment\": \"other keywords\", \"match\": \"\\\\b(as|async|become|box|dyn|move|final|gen|impl|in|override|priv|pub|ref|typeof|union|unsafe|unsized|use|virtual|where)\\\\b\", \"name\": \"keyword.other.rust\" }, { \"comment\": \"fn\", \"match\": \"\\\\bfn\\\\b\", \"name\": \"keyword.other.fn.rust\" }, { \"comment\": \"crate\", \"match\": \"\\\\bcrate\\\\b\", \"name\": \"keyword.other.crate.rust\" }, { \"comment\": \"mut\", \"match\": \"\\\\bmut\\\\b\", \"name\": \"storage.modifier.mut.rust\" }, { \"comment\": \"logical operators\", \"match\": \"(\\\\^|\\\\||\\\\|\\\\||&&|<<|>>|!)(?!=)\", \"name\": \"keyword.operator.logical.rust\" }, { \"comment\": \"logical AND, borrow references\", \"match\": \"&(?![&=])\", \"name\": \"keyword.operator.borrow.and.rust\" }, { \"comment\": \"assignment operators\", \"match\": \"(\\\\+=|-=|\\\\*=|/=|%=|\\\\^=|&=|\\\\|=|<<=|>>=)\", \"name\": \"keyword.operator.assignment.rust\" }, { \"comment\": \"single equal\", \"match\": \"(?<![<>])=(?!=|>)\", \"name\": \"keyword.operator.assignment.equal.rust\" }, { \"comment\": \"comparison operators\", \"match\": \"(=(=)?(?!>)|!=|<=|(?<!=)>=)\", \"name\": \"keyword.operator.comparison.rust\" }, { \"comment\": \"math operators\", \"match\": \"(([+%]|(\\\\*(?!\\\\w)))(?!=))|(-(?!>))|(/(?!/))\", \"name\": \"keyword.operator.math.rust\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.brackets.round.rust\" }, \"2\": { \"name\": \"punctuation.brackets.square.rust\" }, \"3\": { \"name\": \"punctuation.brackets.curly.rust\" }, \"4\": { \"name\": \"keyword.operator.comparison.rust\" }, \"5\": { \"name\": \"punctuation.brackets.round.rust\" }, \"6\": { \"name\": \"punctuation.brackets.square.rust\" }, \"7\": { \"name\": \"punctuation.brackets.curly.rust\" } }, \"comment\": \"less than, greater than (special case)\", \"match\": \"(?:\\\\b|(?:(\\\\))|(\\\\])|(\\\\})))[ \\\\t]+([<>])[ \\\\t]+(?:\\\\b|(?:(\\\\()|(\\\\[)|(\\\\{)))\" }, { \"comment\": \"namespace operator\", \"match\": \"::\", \"name\": \"keyword.operator.namespace.rust\" }, { \"captures\": { \"1\": { \"name\": \"keyword.operator.dereference.rust\" } }, \"comment\": \"dereference asterisk\", \"match\": \"(\\\\*)(?=\\\\w+)\" }, { \"comment\": \"subpattern binding\", \"match\": \"@\", \"name\": \"keyword.operator.subpattern.rust\" }, { \"comment\": \"dot access\", \"match\": \"\\\\.(?!\\\\.)\", \"name\": \"keyword.operator.access.dot.rust\" }, { \"comment\": \"ranges, range patterns\", \"match\": \"\\\\.{2}(=|\\\\.)?\", \"name\": \"keyword.operator.range.rust\" }, { \"comment\": \"colon\", \"match\": \":(?!:)\", \"name\": \"keyword.operator.key-value.rust\" }, { \"comment\": \"dashrocket, skinny arrow\", \"match\": \"->\", \"name\": \"keyword.operator.arrow.skinny.rust\" }, { \"comment\": \"hashrocket, fat arrow\", \"match\": \"=>\", \"name\": \"keyword.operator.arrow.fat.rust\" }, { \"comment\": \"dollar macros\", \"match\": \"\\\\$\", \"name\": \"keyword.operator.macro.dollar.rust\" }, { \"comment\": \"question mark operator, questionably sized, macro kleene matcher\", \"match\": \"\\\\?\", \"name\": \"keyword.operator.question.rust\" }] }, \"lifetimes\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"punctuation.definition.lifetime.rust\" }, \"2\": { \"name\": \"entity.name.type.lifetime.rust\" } }, \"comment\": \"named lifetime parameters\", \"match\": \"(['])([a-zA-Z_][0-9a-zA-Z_]*)(?!['])\\\\b\" }, { \"captures\": { \"1\": { \"name\": \"keyword.operator.borrow.rust\" }, \"2\": { \"name\": \"punctuation.definition.lifetime.rust\" }, \"3\": { \"name\": \"entity.name.type.lifetime.rust\" } }, \"comment\": \"borrowing references to named lifetimes\", \"match\": \"(\\\\&)(['])([a-zA-Z_][0-9a-zA-Z_]*)(?!['])\\\\b\" }] }, \"lvariables\": { \"patterns\": [{ \"comment\": \"self\", \"match\": \"\\\\b[Ss]elf\\\\b\", \"name\": \"variable.language.self.rust\" }, { \"comment\": \"super\", \"match\": \"\\\\bsuper\\\\b\", \"name\": \"variable.language.super.rust\" }] }, \"macros\": { \"patterns\": [{ \"captures\": { \"2\": { \"name\": \"entity.name.function.macro.rust\" }, \"3\": { \"name\": \"entity.name.type.macro.rust\" } }, \"comment\": \"macros\", \"match\": \"(([a-z_][A-Za-z0-9_]*!)|([A-Z_][A-Za-z0-9_]*!))\", \"name\": \"meta.macro.rust\" }] }, \"namespaces\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"entity.name.namespace.rust\" }, \"2\": { \"name\": \"keyword.operator.namespace.rust\" } }, \"comment\": \"namespace (non-type, non-function path segment)\", \"match\": \"(?<![A-Za-z0-9_])([A-Za-z0-9_]+)((?<!super|self)::)\" }] }, \"punctuation\": { \"patterns\": [{ \"comment\": \"comma\", \"match\": \",\", \"name\": \"punctuation.comma.rust\" }, { \"comment\": \"curly braces\", \"match\": \"[{}]\", \"name\": \"punctuation.brackets.curly.rust\" }, { \"comment\": \"parentheses, round brackets\", \"match\": \"[()]\", \"name\": \"punctuation.brackets.round.rust\" }, { \"comment\": \"semicolon\", \"match\": \";\", \"name\": \"punctuation.semi.rust\" }, { \"comment\": \"square brackets\", \"match\": \"[\\\\[\\\\]]\", \"name\": \"punctuation.brackets.square.rust\" }, { \"comment\": \"angle brackets\", \"match\": \"(?<!=)[<>]\", \"name\": \"punctuation.brackets.angle.rust\" }] }, \"strings\": { \"patterns\": [{ \"begin\": '(b?)(\")', \"beginCaptures\": { \"1\": { \"name\": \"string.quoted.byte.raw.rust\" }, \"2\": { \"name\": \"punctuation.definition.string.rust\" } }, \"comment\": \"double-quoted strings and byte strings\", \"end\": '\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.rust\" } }, \"name\": \"string.quoted.double.rust\", \"patterns\": [{ \"include\": \"#escapes\" }, { \"include\": \"#interpolations\" }] }, { \"begin\": '(b?r)(#*)(\")', \"beginCaptures\": { \"1\": { \"name\": \"string.quoted.byte.raw.rust\" }, \"2\": { \"name\": \"punctuation.definition.string.raw.rust\" }, \"3\": { \"name\": \"punctuation.definition.string.rust\" } }, \"comment\": \"double-quoted raw strings and raw byte strings\", \"end\": '(\")(\\\\2)', \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.rust\" }, \"2\": { \"name\": \"punctuation.definition.string.raw.rust\" } }, \"name\": \"string.quoted.double.rust\" }, { \"begin\": \"(b)?(')\", \"beginCaptures\": { \"1\": { \"name\": \"string.quoted.byte.raw.rust\" }, \"2\": { \"name\": \"punctuation.definition.char.rust\" } }, \"comment\": \"characters and bytes\", \"end\": \"'\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.char.rust\" } }, \"name\": \"string.quoted.single.char.rust\", \"patterns\": [{ \"include\": \"#escapes\" }] }] }, \"types\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"entity.name.type.numeric.rust\" } }, \"comment\": \"numeric types\", \"match\": \"(?<![A-Za-z])(f32|f64|i128|i16|i32|i64|i8|isize|u128|u16|u32|u64|u8|usize)\\\\b\" }, { \"begin\": \"\\\\b(_?[A-Z][A-Za-z0-9_]*)(<)\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.type.rust\" }, \"2\": { \"name\": \"punctuation.brackets.angle.rust\" } }, \"comment\": \"parameterized types\", \"end\": \">\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.brackets.angle.rust\" } }, \"patterns\": [{ \"include\": \"#block-comments\" }, { \"include\": \"#comments\" }, { \"include\": \"#keywords\" }, { \"include\": \"#lvariables\" }, { \"include\": \"#lifetimes\" }, { \"include\": \"#punctuation\" }, { \"include\": \"#types\" }, { \"include\": \"#variables\" }] }, { \"comment\": \"primitive types\", \"match\": \"\\\\b(bool|char|str)\\\\b\", \"name\": \"entity.name.type.primitive.rust\" }, { \"captures\": { \"1\": { \"name\": \"keyword.declaration.trait.rust storage.type.rust\" }, \"2\": { \"name\": \"entity.name.type.trait.rust\" } }, \"comment\": \"trait declarations\", \"match\": \"\\\\b(trait)\\\\s+(_?[A-Z][A-Za-z0-9_]*)\\\\b\" }, { \"captures\": { \"1\": { \"name\": \"keyword.declaration.struct.rust storage.type.rust\" }, \"2\": { \"name\": \"entity.name.type.struct.rust\" } }, \"comment\": \"struct declarations\", \"match\": \"\\\\b(struct)\\\\s+(_?[A-Z][A-Za-z0-9_]*)\\\\b\" }, { \"captures\": { \"1\": { \"name\": \"keyword.declaration.enum.rust storage.type.rust\" }, \"2\": { \"name\": \"entity.name.type.enum.rust\" } }, \"comment\": \"enum declarations\", \"match\": \"\\\\b(enum)\\\\s+(_?[A-Z][A-Za-z0-9_]*)\\\\b\" }, { \"captures\": { \"1\": { \"name\": \"keyword.declaration.type.rust storage.type.rust\" }, \"2\": { \"name\": \"entity.name.type.declaration.rust\" } }, \"comment\": \"type declarations\", \"match\": \"\\\\b(type)\\\\s+(_?[A-Z][A-Za-z0-9_]*)\\\\b\" }, { \"comment\": \"types\", \"match\": \"\\\\b_?[A-Z][A-Za-z0-9_]*\\\\b(?!!)\", \"name\": \"entity.name.type.rust\" }] }, \"variables\": { \"patterns\": [{ \"comment\": \"variables\", \"match\": \"\\\\b(?<!(?<!\\\\.)\\\\.)(?:r#(?!(crate|[Ss]elf|super)))?[a-z0-9_]+\\\\b\", \"name\": \"variable.other.rust\" }] } }, \"scopeName\": \"source.rust\", \"aliases\": [\"rs\"] });\nvar rust = [\n  lang\n];\n\nexport { rust as default };\n"],"x_google_ignoreList":[0]}