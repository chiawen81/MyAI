{"version":3,"file":"4115.74c18f1bd17052ef.js","mappings":"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","names":["lang","Object","freeze","displayName","fileTypes","firstLineMatch","foldingStartMarker","foldingStopMarker","name","patterns","begin","beginCaptures","end","include","captures","match","endCaptures","repository","core_syntax","comment","escaped_char","interpolated_elixir","contentName","nest_curly_and_self","scopeName","embeddedLangs","elixir","html"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./node_modules/shiki/dist/langs/elixir.mjs"],"sourcesContent":["import html from './html.mjs';\nimport './javascript.mjs';\nimport './css.mjs';\n\nconst lang = Object.freeze({ \"displayName\": \"Elixir\", \"fileTypes\": [\"ex\", \"exs\"], \"firstLineMatch\": \"^#!/.*\\\\belixir\", \"foldingStartMarker\": \"(after|else|catch|rescue|\\\\-\\\\>|\\\\{|\\\\[|do)\\\\s*$\", \"foldingStopMarker\": \"^\\\\s*((\\\\}|\\\\]|after|else|catch|rescue)\\\\s*$|end\\\\b)\", \"name\": \"elixir\", \"patterns\": [{ \"begin\": \"\\\\b(fn)\\\\b(?!.*->)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.elixir\" } }, \"end\": \"$\", \"patterns\": [{ \"include\": \"#core_syntax\" }] }, { \"captures\": { \"1\": { \"name\": \"entity.name.type.class.elixir\" }, \"2\": { \"name\": \"punctuation.separator.method.elixir\" }, \"3\": { \"name\": \"entity.name.function.elixir\" } }, \"match\": \"([A-Z]\\\\w+)\\\\s*(\\\\.)\\\\s*([a-z_]\\\\w*[!?]?)\" }, { \"captures\": { \"1\": { \"name\": \"constant.other.symbol.elixir\" }, \"2\": { \"name\": \"punctuation.separator.method.elixir\" }, \"3\": { \"name\": \"entity.name.function.elixir\" } }, \"match\": \"(\\\\:\\\\w+)\\\\s*(\\\\.)\\\\s*([_]?\\\\w*[!?]?)\" }, { \"captures\": { \"1\": { \"name\": \"keyword.operator.other.elixir\" }, \"2\": { \"name\": \"entity.name.function.elixir\" } }, \"match\": \"(\\\\|\\\\>)\\\\s*([a-z_]\\\\w*[!?]?)\" }, { \"match\": \"\\\\b[a-z_]\\\\w*[!?]?(?=\\\\s*\\\\.?\\\\s*\\\\()\", \"name\": \"entity.name.function.elixir\" }, { \"begin\": \"\\\\b(fn)\\\\b(?=.*->)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.elixir\" } }, \"end\": \"(?>(->)|(when)|(\\\\)))\", \"endCaptures\": { \"1\": { \"name\": \"keyword.operator.other.elixir\" }, \"2\": { \"name\": \"keyword.control.elixir\" }, \"3\": { \"name\": \"punctuation.section.function.elixir\" } }, \"patterns\": [{ \"include\": \"#core_syntax\" }] }, { \"include\": \"#core_syntax\" }, { \"begin\": `^(?=.*->)((?![^\"']*(\"|')[^\"']*->)|(?=.*->[^\"']*(\"|')[^\"']*->))((?!.*\\\\([^\\\\)]*->)|(?=[^\\\\(\\\\)]*->)|(?=\\\\s*\\\\(.*\\\\).*->))((?!.*\\\\b(fn)\\\\b)|(?=.*->.*\\\\bfn\\\\b))`, \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.elixir\" } }, \"end\": \"(?>(->)|(when)|(\\\\)))\", \"endCaptures\": { \"1\": { \"name\": \"keyword.operator.other.elixir\" }, \"2\": { \"name\": \"keyword.control.elixir\" }, \"3\": { \"name\": \"punctuation.section.function.elixir\" } }, \"patterns\": [{ \"include\": \"#core_syntax\" }] }], \"repository\": { \"core_syntax\": { \"patterns\": [{ \"begin\": \"^\\\\s*(defmodule)\\\\b\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.module.elixir\" } }, \"end\": \"\\\\b(do)\\\\b\", \"endCaptures\": { \"1\": { \"name\": \"keyword.control.module.elixir\" } }, \"name\": \"meta.module.elixir\", \"patterns\": [{ \"match\": \"\\\\b[A-Z]\\\\w*(?=\\\\.)\", \"name\": \"entity.other.inherited-class.elixir\" }, { \"match\": \"\\\\b[A-Z]\\\\w*\\\\b\", \"name\": \"entity.name.type.class.elixir\" }] }, { \"begin\": \"^\\\\s*(defprotocol)\\\\b\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.protocol.elixir\" } }, \"end\": \"\\\\b(do)\\\\b\", \"endCaptures\": { \"1\": { \"name\": \"keyword.control.protocol.elixir\" } }, \"name\": \"meta.protocol_declaration.elixir\", \"patterns\": [{ \"match\": \"\\\\b[A-Z]\\\\w*\\\\b\", \"name\": \"entity.name.type.protocol.elixir\" }] }, { \"begin\": \"^\\\\s*(defimpl)\\\\b\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.protocol.elixir\" } }, \"end\": \"\\\\b(do)\\\\b\", \"endCaptures\": { \"1\": { \"name\": \"keyword.control.protocol.elixir\" } }, \"name\": \"meta.protocol_implementation.elixir\", \"patterns\": [{ \"match\": \"\\\\b[A-Z]\\\\w*\\\\b\", \"name\": \"entity.name.type.protocol.elixir\" }] }, { \"begin\": \"^\\\\s*(def|defmacro|defdelegate|defguard)\\\\s+((?>[a-zA-Z_]\\\\w*(?>\\\\.|::))?(?>[a-zA-Z_]\\\\w*(?>[?!]|=(?!>))?|===?|>[>=]?|<=>|<[<=]?|[%&`/\\\\|]|\\\\*\\\\*?|=?~|[-+]@?|\\\\[\\\\]=?))((\\\\()|\\\\s*)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.module.elixir\" }, \"2\": { \"name\": \"entity.name.function.public.elixir\" }, \"4\": { \"name\": \"punctuation.section.function.elixir\" } }, \"end\": \"(\\\\bdo:)|(\\\\bdo\\\\b)|(?=\\\\s+(def|defn|defmacro|defdelegate|defguard)\\\\b)\", \"endCaptures\": { \"1\": { \"name\": \"constant.other.keywords.elixir\" }, \"2\": { \"name\": \"keyword.control.module.elixir\" } }, \"name\": \"meta.function.public.elixir\", \"patterns\": [{ \"include\": \"$self\" }, { \"begin\": \"\\\\s(\\\\\\\\\\\\\\\\)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.other.elixir\" } }, \"end\": \",|\\\\)|$\", \"patterns\": [{ \"include\": \"$self\" }] }, { \"match\": \"\\\\b(is_atom|is_binary|is_bitstring|is_boolean|is_float|is_function|is_integer|is_list|is_map|is_nil|is_number|is_pid|is_port|is_record|is_reference|is_tuple|is_exception|abs|bit_size|byte_size|div|elem|hd|length|map_size|node|rem|round|tl|trunc|tuple_size)\\\\b\", \"name\": \"keyword.control.elixir\" }] }, { \"begin\": \"^\\\\s*(defp|defnp|defmacrop|defguardp)\\\\s+((?>[a-zA-Z_]\\\\w*(?>\\\\.|::))?(?>[a-zA-Z_]\\\\w*(?>[?!]|=(?!>))?|===?|>[>=]?|<=>|<[<=]?|[%&`/\\\\|]|\\\\*\\\\*?|=?~|[-+]@?|\\\\[\\\\]=?))((\\\\()|\\\\s*)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.module.elixir\" }, \"2\": { \"name\": \"entity.name.function.private.elixir\" }, \"4\": { \"name\": \"punctuation.section.function.elixir\" } }, \"end\": \"(\\\\bdo:)|(\\\\bdo\\\\b)|(?=\\\\s+(defp|defmacrop|defguardp)\\\\b)\", \"endCaptures\": { \"1\": { \"name\": \"constant.other.keywords.elixir\" }, \"2\": { \"name\": \"keyword.control.module.elixir\" } }, \"name\": \"meta.function.private.elixir\", \"patterns\": [{ \"include\": \"$self\" }, { \"begin\": \"\\\\s(\\\\\\\\\\\\\\\\)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.other.elixir\" } }, \"end\": \",|\\\\)|$\", \"patterns\": [{ \"include\": \"$self\" }] }, { \"match\": \"\\\\b(is_atom|is_binary|is_bitstring|is_boolean|is_float|is_function|is_integer|is_list|is_map|is_nil|is_number|is_pid|is_port|is_record|is_reference|is_tuple|is_exception|abs|bit_size|byte_size|div|elem|hd|length|map_size|node|rem|round|tl|trunc|tuple_size)\\\\b\", \"name\": \"keyword.control.elixir\" }] }, { \"begin\": '\\\\s*~L\"\"\"', \"comment\": \"Leex Sigil\", \"end\": '\\\\s*\"\"\"', \"name\": \"sigil.leex\", \"patterns\": [{ \"include\": \"text.elixir\" }, { \"include\": \"text.html.basic\" }] }, { \"begin\": '\\\\s*~H\"\"\"', \"comment\": \"HEEx Sigil\", \"end\": '\\\\s*\"\"\"', \"name\": \"sigil.heex\", \"patterns\": [{ \"include\": \"text.elixir\" }, { \"include\": \"text.html.basic\" }] }, { \"begin\": '@(module|type)?doc (~[a-z])?\"\"\"', \"comment\": \"@doc with heredocs is treated as documentation\", \"end\": '\\\\s*\"\"\"', \"name\": \"comment.block.documentation.heredoc\", \"patterns\": [{ \"include\": \"#interpolated_elixir\" }, { \"include\": \"#escaped_char\" }] }, { \"begin\": '@(module|type)?doc ~[A-Z]\"\"\"', \"comment\": \"@doc with heredocs is treated as documentation\", \"end\": '\\\\s*\"\"\"', \"name\": \"comment.block.documentation.heredoc\" }, { \"begin\": \"@(module|type)?doc (~[a-z])?'''\", \"comment\": \"@doc with heredocs is treated as documentation\", \"end\": \"\\\\s*'''\", \"name\": \"comment.block.documentation.heredoc\", \"patterns\": [{ \"include\": \"#interpolated_elixir\" }, { \"include\": \"#escaped_char\" }] }, { \"begin\": \"@(module|type)?doc ~[A-Z]'''\", \"comment\": \"@doc with heredocs is treated as documentation\", \"end\": \"\\\\s*'''\", \"name\": \"comment.block.documentation.heredoc\" }, { \"comment\": \"@doc false is treated as documentation\", \"match\": \"@(module|type)?doc false\", \"name\": \"comment.block.documentation.false\" }, { \"begin\": '@(module|type)?doc \"', \"comment\": \"@doc with string is treated as documentation\", \"end\": '\"', \"name\": \"comment.block.documentation.string\", \"patterns\": [{ \"include\": \"#interpolated_elixir\" }, { \"include\": \"#escaped_char\" }] }, { \"match\": \"(?<!\\\\.)\\\\b(do|end|case|bc|lc|for|if|cond|unless|try|receive|fn|defmodule|defp?|defprotocol|defimpl|defrecord|defstruct|defnp?|defmacrop?|defguardp?|defdelegate|defexception|defoverridable|exit|after|rescue|catch|else|raise|reraise|throw|import|require|alias|use|quote|unquote|super|with)\\\\b(?![?!:])\", \"name\": \"keyword.control.elixir\" }, { \"comment\": \" as above, just doesn't need a 'end' and does a logic operation\", \"match\": \"(?<!\\\\.)\\\\b(and|not|or|when|xor|in)\\\\b\", \"name\": \"keyword.operator.elixir\" }, { \"match\": \"\\\\b[A-Z]\\\\w*\\\\b\", \"name\": \"entity.name.type.class.elixir\" }, { \"match\": \"\\\\b(nil|true|false)\\\\b(?![?!])\", \"name\": \"constant.language.elixir\" }, { \"match\": \"\\\\b(__(CALLER|ENV|MODULE|DIR|STACKTRACE)__)\\\\b(?![?!])\", \"name\": \"variable.language.elixir\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.variable.elixir\" } }, \"match\": \"(@)[a-zA-Z_]\\\\w*\", \"name\": \"variable.other.readwrite.module.elixir\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.variable.elixir\" } }, \"match\": \"(&)\\\\d+\", \"name\": \"variable.other.anonymous.elixir\" }, { \"match\": \"&(?![&])\", \"name\": \"variable.other.anonymous.elixir\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.variable.elixir\" } }, \"match\": \"\\\\^[a-z_]\\\\w*\", \"name\": \"variable.other.capture.elixir\" }, { \"match\": \"\\\\b0x[0-9A-Fa-f](?>_?[0-9A-Fa-f])*\\\\b\", \"name\": \"constant.numeric.hex.elixir\" }, { \"match\": \"\\\\b\\\\d(?>_?\\\\d)*(\\\\.(?![^[:space:][:digit:]])(?>_?\\\\d)+)([eE][-+]?\\\\d(?>_?\\\\d)*)?\\\\b\", \"name\": \"constant.numeric.float.elixir\" }, { \"match\": \"\\\\b\\\\d(?>_?\\\\d)*\\\\b\", \"name\": \"constant.numeric.integer.elixir\" }, { \"match\": \"\\\\b0b[01](?>_?[01])*\\\\b\", \"name\": \"constant.numeric.binary.elixir\" }, { \"match\": \"\\\\b0o[0-7](?>_?[0-7])*\\\\b\", \"name\": \"constant.numeric.octal.elixir\" }, { \"begin\": \":'\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.constant.elixir\" } }, \"end\": \"'\", \"name\": \"constant.other.symbol.single-quoted.elixir\", \"patterns\": [{ \"include\": \"#interpolated_elixir\" }, { \"include\": \"#escaped_char\" }] }, { \"begin\": ':\"', \"captures\": { \"0\": { \"name\": \"punctuation.definition.constant.elixir\" } }, \"end\": '\"', \"name\": \"constant.other.symbol.double-quoted.elixir\", \"patterns\": [{ \"include\": \"#interpolated_elixir\" }, { \"include\": \"#escaped_char\" }] }, { \"begin\": \"(?>''')\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.elixir\" } }, \"comment\": \"Single-quoted heredocs\", \"end\": \"^\\\\s*'''\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.elixir\" } }, \"name\": \"string.quoted.single.heredoc.elixir\", \"patterns\": [{ \"include\": \"#interpolated_elixir\" }, { \"include\": \"#escaped_char\" }] }, { \"begin\": \"'\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.elixir\" } }, \"comment\": \"single quoted string (allows for interpolation)\", \"end\": \"'\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.elixir\" } }, \"name\": \"string.quoted.single.elixir\", \"patterns\": [{ \"include\": \"#interpolated_elixir\" }, { \"include\": \"#escaped_char\" }] }, { \"begin\": '(?>\"\"\")', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.elixir\" } }, \"comment\": \"Double-quoted heredocs\", \"end\": '^\\\\s*\"\"\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.elixir\" } }, \"name\": \"string.quoted.double.heredoc.elixir\", \"patterns\": [{ \"include\": \"#interpolated_elixir\" }, { \"include\": \"#escaped_char\" }] }, { \"begin\": '\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.elixir\" } }, \"comment\": \"double quoted string (allows for interpolation)\", \"end\": '\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.elixir\" } }, \"name\": \"string.quoted.double.elixir\", \"patterns\": [{ \"include\": \"#interpolated_elixir\" }, { \"include\": \"#escaped_char\" }] }, { \"begin\": '~[a-z](?>\"\"\")', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.elixir\" } }, \"comment\": \"Double-quoted heredocs sigils\", \"end\": '^\\\\s*\"\"\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.elixir\" } }, \"name\": \"string.quoted.other.sigil.heredoc.elixir\", \"patterns\": [{ \"include\": \"#interpolated_elixir\" }, { \"include\": \"#escaped_char\" }] }, { \"begin\": \"~[a-z]\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.elixir\" } }, \"comment\": \"sigil (allow for interpolation)\", \"end\": \"\\\\}[a-z]*\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.elixir\" } }, \"name\": \"string.quoted.other.sigil.elixir\", \"patterns\": [{ \"include\": \"#interpolated_elixir\" }, { \"include\": \"#escaped_char\" }] }, { \"begin\": \"~[a-z]\\\\[\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.elixir\" } }, \"comment\": \"sigil (allow for interpolation)\", \"end\": \"\\\\][a-z]*\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.elixir\" } }, \"name\": \"string.quoted.other.sigil.elixir\", \"patterns\": [{ \"include\": \"#interpolated_elixir\" }, { \"include\": \"#escaped_char\" }] }, { \"begin\": \"~[a-z]\\\\<\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.elixir\" } }, \"comment\": \"sigil (allow for interpolation)\", \"end\": \"\\\\>[a-z]*\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.elixir\" } }, \"name\": \"string.quoted.other.sigil.elixir\", \"patterns\": [{ \"include\": \"#interpolated_elixir\" }, { \"include\": \"#escaped_char\" }] }, { \"begin\": \"~[a-z]\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.elixir\" } }, \"comment\": \"sigil (allow for interpolation)\", \"end\": \"\\\\)[a-z]*\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.elixir\" } }, \"name\": \"string.quoted.other.sigil.elixir\", \"patterns\": [{ \"include\": \"#interpolated_elixir\" }, { \"include\": \"#escaped_char\" }] }, { \"begin\": \"~[a-z]([^\\\\w])\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.elixir\" } }, \"comment\": \"sigil (allow for interpolation)\", \"end\": \"\\\\1[a-z]*\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.elixir\" } }, \"name\": \"string.quoted.other.sigil.elixir\", \"patterns\": [{ \"include\": \"#interpolated_elixir\" }, { \"include\": \"#escaped_char\" }] }, { \"begin\": '~[A-Z](?>\"\"\")', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.elixir\" } }, \"comment\": \"Double-quoted heredocs sigils\", \"end\": '^\\\\s*\"\"\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.elixir\" } }, \"name\": \"string.quoted.other.sigil.heredoc.literal.elixir\" }, { \"begin\": \"~[A-Z]\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.elixir\" } }, \"comment\": \"sigil (without interpolation)\", \"end\": \"\\\\}[a-z]*\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.elixir\" } }, \"name\": \"string.quoted.other.sigil.literal.elixir\" }, { \"begin\": \"~[A-Z]\\\\[\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.elixir\" } }, \"comment\": \"sigil (without interpolation)\", \"end\": \"\\\\][a-z]*\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.elixir\" } }, \"name\": \"string.quoted.other.sigil.literal.elixir\" }, { \"begin\": \"~[A-Z]\\\\<\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.elixir\" } }, \"comment\": \"sigil (without interpolation)\", \"end\": \"\\\\>[a-z]*\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.elixir\" } }, \"name\": \"string.quoted.other.sigil.literal.elixir\" }, { \"begin\": \"~[A-Z]\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.elixir\" } }, \"comment\": \"sigil (without interpolation)\", \"end\": \"\\\\)[a-z]*\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.elixir\" } }, \"name\": \"string.quoted.other.sigil.literal.elixir\" }, { \"begin\": \"~[A-Z]([^\\\\w])\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.elixir\" } }, \"comment\": \"sigil (without interpolation)\", \"end\": \"\\\\1[a-z]*\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.elixir\" } }, \"name\": \"string.quoted.other.sigil.literal.elixir\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.constant.elixir\" } }, \"comment\": \"symbols\", \"match\": \"(?<!:)(:)(?>[a-zA-Z_][\\\\w@]*(?>[?!]|=(?![>=]))?|\\\\<\\\\>|===?|!==?|<<>>|<<<|>>>|~~~|::|<\\\\-|\\\\|>|=>|=~|=|/|\\\\\\\\\\\\\\\\|\\\\*\\\\*?|\\\\.\\\\.?\\\\.?|\\\\.\\\\.//|>=?|<=?|&&?&?|\\\\+\\\\+?|\\\\-\\\\-?|\\\\|\\\\|?\\\\|?|\\\\!|@|\\\\%?\\\\{\\\\}|%|\\\\[\\\\]|\\\\^(\\\\^\\\\^)?)\", \"name\": \"constant.other.symbol.elixir\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.constant.elixir\" } }, \"comment\": \"symbols\", \"match\": \"(?>[a-zA-Z_][\\\\w@]*(?>[?!])?)(:)(?!:)\", \"name\": \"constant.other.keywords.elixir\" }, { \"begin\": \"(^[ \\\\t]+)?(?=##)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.whitespace.comment.leading.elixir\" } }, \"end\": \"(?!#)\", \"patterns\": [{ \"begin\": \"##\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.elixir\" } }, \"end\": \"\\\\n\", \"name\": \"comment.line.section.elixir\" }] }, { \"begin\": \"(^[ \\\\t]+)?(?=#)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.whitespace.comment.leading.elixir\" } }, \"end\": \"(?!#)\", \"patterns\": [{ \"begin\": \"#\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.elixir\" } }, \"end\": \"\\\\n\", \"name\": \"comment.line.number-sign.elixir\" }] }, { \"match\": \"\\\\b_([^_][\\\\w]+[?!]?)\", \"name\": \"comment.unused.elixir\" }, { \"match\": \"\\\\b_\\\\b\", \"name\": \"comment.wildcard.elixir\" }, { \"comment\": '\\n\t\t\tmatches questionmark-letters.\\n\\n\t\t\texamples (1st alternation = hex):\\n\t\t\t?\\\\x1     ?\\\\x61\\n\\n\t\t\texamples (2rd alternation = escaped):\\n\t\t\t?\\\\n      ?\\\\b\\n\\n\t\t\texamples (3rd alternation = normal):\\n\t\t\t?a       ?A       ?0\\n\t\t\t?*       ?\"       ?(\\n\t\t\t?.       ?#\\n\\n\t\t\tthe negative lookbehind prevents against matching\\n\t\t\tp(42.tainted?)\\n\t\t\t', \"match\": \"(?<!\\\\w)\\\\?(\\\\\\\\(x[0-9A-Fa-f]{1,2}(?![0-9A-Fa-f])\\\\b|[^xMC])|[^\\\\s\\\\\\\\])\", \"name\": \"constant.numeric.elixir\" }, { \"match\": \"\\\\+\\\\+|\\\\-\\\\-|<\\\\|>\", \"name\": \"keyword.operator.concatenation.elixir\" }, { \"match\": \"\\\\|\\\\>|<~>|<>|<<<|>>>|~>>|<<~|~>|<~|<\\\\|>\", \"name\": \"keyword.operator.sigils_1.elixir\" }, { \"match\": \"&&&|&&\", \"name\": \"keyword.operator.sigils_2.elixir\" }, { \"match\": \"<\\\\-|\\\\\\\\\\\\\\\\\", \"name\": \"keyword.operator.sigils_3.elixir\" }, { \"match\": \"===?|!==?|<=?|>=?\", \"name\": \"keyword.operator.comparison.elixir\" }, { \"match\": \"(\\\\|\\\\|\\\\||&&&|\\\\^\\\\^\\\\^|<<<|>>>|~~~)\", \"name\": \"keyword.operator.bitwise.elixir\" }, { \"match\": \"(?<=[ \\\\t])!+|\\\\bnot\\\\b|&&|\\\\band\\\\b|\\\\|\\\\||\\\\bor\\\\b|\\\\bxor\\\\b\", \"name\": \"keyword.operator.logical.elixir\" }, { \"match\": \"(\\\\*|\\\\+|\\\\-|/)\", \"name\": \"keyword.operator.arithmetic.elixir\" }, { \"match\": \"\\\\||\\\\+\\\\+|\\\\-\\\\-|\\\\*\\\\*|\\\\\\\\\\\\\\\\|\\\\<\\\\-|\\\\<\\\\>|\\\\<\\\\<|\\\\>\\\\>|\\\\:\\\\:|\\\\.\\\\.|//|\\\\|>|~|=>|&\", \"name\": \"keyword.operator.other.elixir\" }, { \"match\": \"=\", \"name\": \"keyword.operator.assignment.elixir\" }, { \"match\": \":\", \"name\": \"punctuation.separator.other.elixir\" }, { \"match\": \"\\\\;\", \"name\": \"punctuation.separator.statement.elixir\" }, { \"match\": \",\", \"name\": \"punctuation.separator.object.elixir\" }, { \"match\": \"\\\\.\", \"name\": \"punctuation.separator.method.elixir\" }, { \"match\": \"\\\\{|\\\\}\", \"name\": \"punctuation.section.scope.elixir\" }, { \"match\": \"\\\\[|\\\\]\", \"name\": \"punctuation.section.array.elixir\" }, { \"match\": \"\\\\(|\\\\)\", \"name\": \"punctuation.section.function.elixir\" }] }, \"escaped_char\": { \"match\": \"\\\\\\\\(x[\\\\da-fA-F]{1,2}|.)\", \"name\": \"constant.character.escaped.elixir\" }, \"interpolated_elixir\": { \"begin\": \"#\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.embedded.begin.elixir\" } }, \"contentName\": \"source.elixir\", \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.embedded.end.elixir\" } }, \"name\": \"meta.embedded.line.elixir\", \"patterns\": [{ \"include\": \"#nest_curly_and_self\" }, { \"include\": \"$self\" }] }, \"nest_curly_and_self\": { \"patterns\": [{ \"begin\": \"\\\\{\", \"captures\": { \"0\": { \"name\": \"punctuation.section.scope.elixir\" } }, \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"#nest_curly_and_self\" }] }, { \"include\": \"$self\" }] } }, \"scopeName\": \"source.elixir\", \"embeddedLangs\": [\"html\"] });\nvar elixir = [\n  ...html,\n  lang\n];\n\nexport { elixir as default };\n"],"x_google_ignoreList":[0]}