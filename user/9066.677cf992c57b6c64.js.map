{"version":3,"file":"9066.677cf992c57b6c64.js","mappings":"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","names":["codeql","Object","freeze","displayName","fileTypes","name","patterns","include","repository","abstract","match","additional","and","annotation","any","as","asc","avg","bindingset","begin","beginCaptures","end","endCaptures","boolean","by","cached","class","comma","comment","while","concat","count","date","default","deprecated","desc","dot","dotdot","else","exists","extends","external","false","final","float","forall","forex","from","if","implements","implies","import","in","instanceof","int","keyword","language","library","literal","max","min","module","newtype","none","not","or","order","override","pipe","pragma","predicate","private","query","rank","result","select","semicolon","signature","strictconcat","strictcount","strictsum","string","sum","super","then","this","transient","true","unique","where","scopeName","aliases"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./node_modules/shiki/dist/langs/codeql.mjs"],"sourcesContent":["const lang = Object.freeze({ \"displayName\": \"CodeQL\", \"fileTypes\": [\"ql\", \"qll\"], \"name\": \"codeql\", \"patterns\": [{ \"include\": \"#module-member\" }], \"repository\": { \"abstract\": { \"match\": \"(?x)\\\\b(?:abstract)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"storage.modifier.abstract.ql\" }, \"additional\": { \"match\": \"(?x)\\\\b(?:additional)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"storage.modifier.additional.ql\" }, \"and\": { \"match\": \"(?x)\\\\b(?:and)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.other.and.ql\" }, \"annotation\": { \"patterns\": [{ \"include\": \"#bindingset-annotation\" }, { \"include\": \"#language-annotation\" }, { \"include\": \"#pragma-annotation\" }, { \"include\": \"#annotation-keyword\" }] }, \"annotation-keyword\": { \"patterns\": [{ \"include\": \"#abstract\" }, { \"include\": \"#additional\" }, { \"include\": \"#bindingset\" }, { \"include\": \"#cached\" }, { \"include\": \"#default\" }, { \"include\": \"#deprecated\" }, { \"include\": \"#external\" }, { \"include\": \"#final\" }, { \"include\": \"#language\" }, { \"include\": \"#library\" }, { \"include\": \"#override\" }, { \"include\": \"#pragma\" }, { \"include\": \"#private\" }, { \"include\": \"#query\" }, { \"include\": \"#signature\" }, { \"include\": \"#transient\" }] }, \"any\": { \"match\": \"(?x)\\\\b(?:any)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.quantifier.any.ql\" }, \"arithmetic-operator\": { \"match\": \"(?x)\\\\+|-|\\\\*|/|%\", \"name\": \"keyword.operator.arithmetic.ql\" }, \"as\": { \"match\": \"(?x)\\\\b(?:as)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.other.as.ql\" }, \"asc\": { \"match\": \"(?x)\\\\b(?:asc)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.order.asc.ql\" }, \"at-lower-id\": { \"match\": \"(?x)@[a-z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_])))\" }, \"avg\": { \"match\": \"(?x)\\\\b(?:avg)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.aggregate.avg.ql\" }, \"bindingset\": { \"match\": \"(?x)\\\\b(?:bindingset)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"storage.modifier.bindingset.ql\" }, \"bindingset-annotation\": { \"begin\": \"(?x)((?:\\\\b(?:bindingset)(?:(?!(?:[0-9A-Za-z_])))))\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#bindingset\" }] } }, \"end\": \"(?x)(?! (?:\\\\s | $ | (?:// | /\\\\*)) | \\\\[ ) | (?<=\\\\])\", \"name\": \"meta.block.bindingset-annotation.ql\", \"patterns\": [{ \"include\": \"#bindingset-annotation-body\" }, { \"include\": \"#non-context-sensitive\" }] }, \"bindingset-annotation-body\": { \"begin\": \"(?x)((?:\\\\[))\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#open-bracket\" }] } }, \"end\": \"(?x)((?:\\\\]))\", \"endCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#close-bracket\" }] } }, \"name\": \"meta.block.bindingset-annotation-body.ql\", \"patterns\": [{ \"include\": \"#non-context-sensitive\" }, { \"match\": \"(?x)(?:\\\\b [A-Za-z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))\", \"name\": \"variable.parameter.ql\" }] }, \"boolean\": { \"match\": \"(?x)\\\\b(?:boolean)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.type.boolean.ql\" }, \"by\": { \"match\": \"(?x)\\\\b(?:by)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.order.by.ql\" }, \"cached\": { \"match\": \"(?x)\\\\b(?:cached)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"storage.modifier.cached.ql\" }, \"class\": { \"match\": \"(?x)\\\\b(?:class)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.other.class.ql\" }, \"class-body\": { \"begin\": \"(?x)((?:\\\\{))\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#open-brace\" }] } }, \"end\": \"(?x)((?:\\\\}))\", \"endCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#close-brace\" }] } }, \"name\": \"meta.block.class-body.ql\", \"patterns\": [{ \"include\": \"#class-member\" }] }, \"class-declaration\": { \"begin\": \"(?x)((?:\\\\b(?:class)(?:(?!(?:[0-9A-Za-z_])))))\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#class\" }] } }, \"end\": \"(?x)(?<= \\\\} | ; )\", \"name\": \"meta.block.class-declaration.ql\", \"patterns\": [{ \"include\": \"#class-body\" }, { \"include\": \"#extends-clause\" }, { \"include\": \"#non-context-sensitive\" }, { \"match\": \"(?x)(?:\\\\b [A-Z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))\", \"name\": \"entity.name.type.class.ql\" }] }, \"class-member\": { \"patterns\": [{ \"include\": \"#predicate-or-field-declaration\" }, { \"include\": \"#annotation\" }, { \"include\": \"#non-context-sensitive\" }] }, \"close-angle\": { \"match\": \"(?x)>\", \"name\": \"punctuation.anglebracket.close.ql\" }, \"close-brace\": { \"match\": \"(?x)\\\\}\", \"name\": \"punctuation.curlybrace.close.ql\" }, \"close-bracket\": { \"match\": \"(?x)\\\\]\", \"name\": \"punctuation.squarebracket.close.ql\" }, \"close-paren\": { \"match\": \"(?x)\\\\)\", \"name\": \"punctuation.parenthesis.close.ql\" }, \"comma\": { \"match\": \"(?x),\", \"name\": \"punctuation.separator.comma.ql\" }, \"comment\": { \"patterns\": [{ \"begin\": \"(?x)/\\\\*\\\\*\", \"end\": \"(?x)\\\\*/\", \"name\": \"comment.block.documentation.ql\", \"patterns\": [{ \"begin\": \"(?x)(?<=/\\\\*\\\\*)([^*]|\\\\*(?!/))*$\", \"patterns\": [{ \"match\": \"(?x)\\\\G\\\\s* (@\\\\S+)\", \"name\": \"keyword.tag.ql\" }], \"while\": \"(?x)(^|\\\\G)\\\\s*([^*]|\\\\*(?!/))(?=([^*]|[*](?!/))*$)\" }] }, { \"begin\": \"(?x)/\\\\*\", \"end\": \"(?x)\\\\*/\", \"name\": \"comment.block.ql\" }, { \"match\": \"(?x)//.*$\", \"name\": \"comment.line.double-slash.ql\" }] }, \"comment-start\": { \"match\": \"(?x)// | /\\\\*\" }, \"comparison-operator\": { \"match\": \"(?x)=|\\\\!\\\\=\", \"name\": \"keyword.operator.comparison.ql\" }, \"concat\": { \"match\": \"(?x)\\\\b(?:concat)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.aggregate.concat.ql\" }, \"count\": { \"match\": \"(?x)\\\\b(?:count)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.aggregate.count.ql\" }, \"date\": { \"match\": \"(?x)\\\\b(?:date)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.type.date.ql\" }, \"default\": { \"match\": \"(?x)\\\\b(?:default)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"storage.modifier.default.ql\" }, \"deprecated\": { \"match\": \"(?x)\\\\b(?:deprecated)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"storage.modifier.deprecated.ql\" }, \"desc\": { \"match\": \"(?x)\\\\b(?:desc)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.order.desc.ql\" }, \"dont-care\": { \"match\": \"(?x)\\\\b(?:_)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"variable.language.dont-care.ql\" }, \"dot\": { \"match\": \"(?x)\\\\.\", \"name\": \"punctuation.accessor.ql\" }, \"dotdot\": { \"match\": \"(?x)\\\\.\\\\.\", \"name\": \"punctuation.operator.range.ql\" }, \"else\": { \"match\": \"(?x)\\\\b(?:else)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.other.else.ql\" }, \"end-of-as-clause\": { \"match\": \"(?x)(?: (?<=(?:[0-9A-Za-z_])) (?!(?:[0-9A-Za-z_])) (?<!(?<!(?:[0-9A-Za-z_]))as)) | (?=\\\\s* (?!(?:// | /\\\\*) | (?:\\\\b [A-Za-z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))) \\\\S) | (?=\\\\s* (?:(?:(?:\\\\b(?:_)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:and)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:any)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:as)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:asc)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:avg)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:boolean)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:by)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:class)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:concat)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:count)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:date)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:desc)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:else)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:exists)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:extends)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:false)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:float)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:forall)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:forex)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:from)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:if)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:implies)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:import)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:in)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:instanceof)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:int)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:max)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:min)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:module)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:newtype)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:none)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:not)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:or)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:order)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:predicate)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:rank)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:result)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:select)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:strictconcat)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:strictcount)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:strictsum)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:string)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:sum)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:super)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:then)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:this)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:true)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:unique)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:where)(?:(?!(?:[0-9A-Za-z_])))))))\" }, \"end-of-id\": { \"match\": \"(?x)(?!(?:[0-9A-Za-z_]))\" }, \"exists\": { \"match\": \"(?x)\\\\b(?:exists)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.quantifier.exists.ql\" }, \"expr-as-clause\": { \"begin\": \"(?x)((?:\\\\b(?:as)(?:(?!(?:[0-9A-Za-z_])))))\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#as\" }] } }, \"end\": \"(?x)(?:(?: (?<=(?:[0-9A-Za-z_])) (?!(?:[0-9A-Za-z_])) (?<!(?<!(?:[0-9A-Za-z_]))as)) | (?=\\\\s* (?!(?:// | /\\\\*) | (?:\\\\b [A-Za-z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))) \\\\S) | (?=\\\\s* (?:(?:(?:\\\\b(?:_)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:and)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:any)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:as)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:asc)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:avg)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:boolean)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:by)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:class)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:concat)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:count)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:date)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:desc)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:else)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:exists)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:extends)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:false)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:float)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:forall)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:forex)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:from)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:if)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:implies)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:import)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:in)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:instanceof)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:int)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:max)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:min)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:module)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:newtype)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:none)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:not)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:or)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:order)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:predicate)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:rank)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:result)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:select)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:strictconcat)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:strictcount)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:strictsum)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:string)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:sum)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:super)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:then)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:this)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:true)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:unique)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:where)(?:(?!(?:[0-9A-Za-z_]))))))))\", \"name\": \"meta.block.expr-as-clause.ql\", \"patterns\": [{ \"include\": \"#non-context-sensitive\" }, { \"match\": \"(?x)(?:\\\\b [A-Za-z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))\", \"name\": \"variable.other.ql\" }] }, \"extends\": { \"match\": \"(?x)\\\\b(?:extends)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.other.extends.ql\" }, \"extends-clause\": { \"begin\": \"(?x)((?:\\\\b(?:extends)(?:(?!(?:[0-9A-Za-z_])))))\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#extends\" }] } }, \"end\": \"(?x)(?= \\\\{ )\", \"name\": \"meta.block.extends-clause.ql\", \"patterns\": [{ \"include\": \"#non-context-sensitive\" }, { \"match\": \"(?x)(?:\\\\b [A-Za-z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))|(?:@[a-z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))\", \"name\": \"entity.name.type.ql\" }] }, \"external\": { \"match\": \"(?x)\\\\b(?:external)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"storage.modifier.external.ql\" }, \"false\": { \"match\": \"(?x)\\\\b(?:false)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"constant.language.boolean.false.ql\" }, \"final\": { \"match\": \"(?x)\\\\b(?:final)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"storage.modifier.final.ql\" }, \"float\": { \"match\": \"(?x)\\\\b(?:float)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.type.float.ql\" }, \"float-literal\": { \"match\": \"(?x)-?[0-9]+\\\\.[0-9]+(?![0-9])\", \"name\": \"constant.numeric.decimal.ql\" }, \"forall\": { \"match\": \"(?x)\\\\b(?:forall)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.quantifier.forall.ql\" }, \"forex\": { \"match\": \"(?x)\\\\b(?:forex)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.quantifier.forex.ql\" }, \"from\": { \"match\": \"(?x)\\\\b(?:from)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.other.from.ql\" }, \"from-section\": { \"begin\": \"(?x)((?:\\\\b(?:from)(?:(?!(?:[0-9A-Za-z_])))))\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#from\" }] } }, \"end\": \"(?x)(?= (?:\\\\b(?:select)(?:(?!(?:[0-9A-Za-z_])))) | (?:\\\\b(?:where)(?:(?!(?:[0-9A-Za-z_])))) )\", \"name\": \"meta.block.from-section.ql\", \"patterns\": [{ \"include\": \"#non-context-sensitive\" }, { \"match\": \"(?x)(?:\\\\b [A-Z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))(?=\\\\s*(?:,|(?:\\\\b(?:where)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:select)(?:(?!(?:[0-9A-Za-z_]))))|$))\", \"name\": \"variable.parameter.ql\" }, { \"include\": \"#module-qualifier\" }, { \"match\": \"(?x)(?:\\\\b [A-Z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))|(?:@[a-z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))\", \"name\": \"entity.name.type.ql\" }, { \"match\": \"(?x)(?:\\\\b [a-z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))\", \"name\": \"variable.parameter.ql\" }] }, \"id-character\": { \"match\": \"(?x)[0-9A-Za-z_]\" }, \"if\": { \"match\": \"(?x)\\\\b(?:if)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.other.if.ql\" }, \"implements\": { \"match\": \"(?x)\\\\b(?:implements)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.other.implements.ql\" }, \"implements-clause\": { \"begin\": \"(?x)((?:\\\\b(?:implements)(?:(?!(?:[0-9A-Za-z_])))))\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#implements\" }] } }, \"end\": \"(?x)(?= \\\\{ )\", \"name\": \"meta.block.implements-clause.ql\", \"patterns\": [{ \"include\": \"#non-context-sensitive\" }, { \"match\": \"(?x)(?:\\\\b [A-Za-z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))|(?:@[a-z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))\", \"name\": \"entity.name.type.ql\" }] }, \"implies\": { \"match\": \"(?x)\\\\b(?:implies)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.other.implies.ql\" }, \"import\": { \"match\": \"(?x)\\\\b(?:import)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.other.import.ql\" }, \"import-as-clause\": { \"begin\": \"(?x)((?:\\\\b(?:as)(?:(?!(?:[0-9A-Za-z_])))))\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#as\" }] } }, \"end\": \"(?x)(?:(?: (?<=(?:[0-9A-Za-z_])) (?!(?:[0-9A-Za-z_])) (?<!(?<!(?:[0-9A-Za-z_]))as)) | (?=\\\\s* (?!(?:// | /\\\\*) | (?:\\\\b [A-Za-z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))) \\\\S) | (?=\\\\s* (?:(?:(?:\\\\b(?:_)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:and)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:any)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:as)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:asc)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:avg)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:boolean)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:by)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:class)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:concat)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:count)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:date)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:desc)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:else)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:exists)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:extends)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:false)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:float)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:forall)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:forex)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:from)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:if)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:implies)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:import)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:in)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:instanceof)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:int)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:max)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:min)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:module)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:newtype)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:none)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:not)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:or)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:order)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:predicate)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:rank)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:result)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:select)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:strictconcat)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:strictcount)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:strictsum)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:string)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:sum)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:super)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:then)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:this)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:true)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:unique)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:where)(?:(?!(?:[0-9A-Za-z_]))))))))\", \"name\": \"meta.block.import-as-clause.ql\", \"patterns\": [{ \"include\": \"#non-context-sensitive\" }, { \"match\": \"(?x)(?:\\\\b [A-Za-z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))\", \"name\": \"entity.name.type.namespace.ql\" }] }, \"import-directive\": { \"begin\": \"(?x)((?:\\\\b(?:import)(?:(?!(?:[0-9A-Za-z_])))))\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#import\" }] } }, \"end\": \"(?x)(?<!\\\\bimport)(?<=(?:\\\\>)|[A-Za-z0-9_]) (?!\\\\s*(\\\\.|\\\\:\\\\:|\\\\,|(?:<)))\", \"name\": \"meta.block.import-directive.ql\", \"patterns\": [{ \"include\": \"#instantiation-args\" }, { \"include\": \"#non-context-sensitive\" }, { \"match\": \"(?x)(?:\\\\b [A-Za-z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))\", \"name\": \"entity.name.type.namespace.ql\" }] }, \"in\": { \"match\": \"(?x)\\\\b(?:in)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.other.in.ql\" }, \"instanceof\": { \"match\": \"(?x)\\\\b(?:instanceof)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.other.instanceof.ql\" }, \"instantiation-args\": { \"begin\": \"(?x)((?:<))\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#open-angle\" }] } }, \"end\": \"(?x)((?:>))\", \"endCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#close-angle\" }] } }, \"name\": \"meta.type.parameters.ql\", \"patterns\": [{ \"include\": \"#instantiation-args\" }, { \"include\": \"#non-context-sensitive\" }, { \"match\": \"(?x)(?:\\\\b [A-Za-z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))\", \"name\": \"entity.name.type.namespace.ql\" }] }, \"int\": { \"match\": \"(?x)\\\\b(?:int)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.type.int.ql\" }, \"int-literal\": { \"match\": \"(?x)-?[0-9]+(?![0-9])\", \"name\": \"constant.numeric.decimal.ql\" }, \"keyword\": { \"patterns\": [{ \"include\": \"#dont-care\" }, { \"include\": \"#and\" }, { \"include\": \"#any\" }, { \"include\": \"#as\" }, { \"include\": \"#asc\" }, { \"include\": \"#avg\" }, { \"include\": \"#boolean\" }, { \"include\": \"#by\" }, { \"include\": \"#class\" }, { \"include\": \"#concat\" }, { \"include\": \"#count\" }, { \"include\": \"#date\" }, { \"include\": \"#desc\" }, { \"include\": \"#else\" }, { \"include\": \"#exists\" }, { \"include\": \"#extends\" }, { \"include\": \"#false\" }, { \"include\": \"#float\" }, { \"include\": \"#forall\" }, { \"include\": \"#forex\" }, { \"include\": \"#from\" }, { \"include\": \"#if\" }, { \"include\": \"#implies\" }, { \"include\": \"#import\" }, { \"include\": \"#in\" }, { \"include\": \"#instanceof\" }, { \"include\": \"#int\" }, { \"include\": \"#max\" }, { \"include\": \"#min\" }, { \"include\": \"#module\" }, { \"include\": \"#newtype\" }, { \"include\": \"#none\" }, { \"include\": \"#not\" }, { \"include\": \"#or\" }, { \"include\": \"#order\" }, { \"include\": \"#predicate\" }, { \"include\": \"#rank\" }, { \"include\": \"#result\" }, { \"include\": \"#select\" }, { \"include\": \"#strictconcat\" }, { \"include\": \"#strictcount\" }, { \"include\": \"#strictsum\" }, { \"include\": \"#string\" }, { \"include\": \"#sum\" }, { \"include\": \"#super\" }, { \"include\": \"#then\" }, { \"include\": \"#this\" }, { \"include\": \"#true\" }, { \"include\": \"#unique\" }, { \"include\": \"#where\" }] }, \"language\": { \"match\": \"(?x)\\\\b(?:language)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"storage.modifier.language.ql\" }, \"language-annotation\": { \"begin\": \"(?x)((?:\\\\b(?:language)(?:(?!(?:[0-9A-Za-z_])))))\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#language\" }] } }, \"end\": \"(?x)(?! (?:\\\\s | $ | (?:// | /\\\\*)) | \\\\[ ) | (?<=\\\\])\", \"name\": \"meta.block.language-annotation.ql\", \"patterns\": [{ \"include\": \"#language-annotation-body\" }, { \"include\": \"#non-context-sensitive\" }] }, \"language-annotation-body\": { \"begin\": \"(?x)((?:\\\\[))\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#open-bracket\" }] } }, \"end\": \"(?x)((?:\\\\]))\", \"endCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#close-bracket\" }] } }, \"name\": \"meta.block.language-annotation-body.ql\", \"patterns\": [{ \"include\": \"#non-context-sensitive\" }, { \"match\": \"(?x)\\\\b(?:monotonicAggregates)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"storage.modifier.ql\" }] }, \"library\": { \"match\": \"(?x)\\\\b(?:library)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"storage.modifier.library.ql\" }, \"literal\": { \"patterns\": [{ \"include\": \"#float-literal\" }, { \"include\": \"#int-literal\" }, { \"include\": \"#string-literal\" }] }, \"lower-id\": { \"match\": \"(?x)\\\\b [a-z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_])))\" }, \"max\": { \"match\": \"(?x)\\\\b(?:max)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.aggregate.max.ql\" }, \"min\": { \"match\": \"(?x)\\\\b(?:min)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.aggregate.min.ql\" }, \"module\": { \"match\": \"(?x)\\\\b(?:module)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.other.module.ql\" }, \"module-body\": { \"begin\": \"(?x)((?:\\\\{))\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#open-brace\" }] } }, \"end\": \"(?x)((?:\\\\}))\", \"endCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#close-brace\" }] } }, \"name\": \"meta.block.module-body.ql\", \"patterns\": [{ \"include\": \"#module-member\" }] }, \"module-declaration\": { \"begin\": \"(?x)((?:\\\\b(?:module)(?:(?!(?:[0-9A-Za-z_])))))\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#module\" }] } }, \"end\": \"(?x)(?<=\\\\}|;)\", \"name\": \"meta.block.module-declaration.ql\", \"patterns\": [{ \"include\": \"#module-body\" }, { \"include\": \"#implements-clause\" }, { \"include\": \"#non-context-sensitive\" }, { \"match\": \"(?x)(?:\\\\b [A-Za-z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))\", \"name\": \"entity.name.type.namespace.ql\" }] }, \"module-member\": { \"patterns\": [{ \"include\": \"#import-directive\" }, { \"include\": \"#import-as-clause\" }, { \"include\": \"#module-declaration\" }, { \"include\": \"#newtype-declaration\" }, { \"include\": \"#newtype-branch-name-with-prefix\" }, { \"include\": \"#predicate-parameter-list\" }, { \"include\": \"#predicate-body\" }, { \"include\": \"#class-declaration\" }, { \"include\": \"#select-clause\" }, { \"include\": \"#predicate-or-field-declaration\" }, { \"include\": \"#non-context-sensitive\" }, { \"include\": \"#annotation\" }] }, \"module-qualifier\": { \"match\": \"(?x)(?:\\\\b [A-Za-z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_])))) (?=\\\\s*\\\\:\\\\:)\", \"name\": \"entity.name.type.namespace.ql\" }, \"newtype\": { \"match\": \"(?x)\\\\b(?:newtype)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.other.newtype.ql\" }, \"newtype-branch-name-with-prefix\": { \"begin\": \"(?x)\\\\= | (?:\\\\b(?:or)(?:(?!(?:[0-9A-Za-z_]))))\", \"beginCaptures\": { \"0\": { \"patterns\": [{ \"include\": \"#or\" }, { \"include\": \"#comparison-operator\" }] } }, \"end\": \"(?x)(?:\\\\b [A-Z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))\", \"endCaptures\": { \"0\": { \"name\": \"entity.name.type.ql\" } }, \"name\": \"meta.block.newtype-branch-name-with-prefix.ql\", \"patterns\": [{ \"include\": \"#non-context-sensitive\" }] }, \"newtype-declaration\": { \"begin\": \"(?x)((?:\\\\b(?:newtype)(?:(?!(?:[0-9A-Za-z_])))))\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#newtype\" }] } }, \"end\": \"(?x)(?:\\\\b [A-Z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))\", \"endCaptures\": { \"0\": { \"name\": \"entity.name.type.ql\" } }, \"name\": \"meta.block.newtype-declaration.ql\", \"patterns\": [{ \"include\": \"#non-context-sensitive\" }] }, \"non-context-sensitive\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#literal\" }, { \"include\": \"#operator-or-punctuation\" }, { \"include\": \"#keyword\" }] }, \"none\": { \"match\": \"(?x)\\\\b(?:none)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.quantifier.none.ql\" }, \"not\": { \"match\": \"(?x)\\\\b(?:not)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.other.not.ql\" }, \"open-angle\": { \"match\": \"(?x)<\", \"name\": \"punctuation.anglebracket.open.ql\" }, \"open-brace\": { \"match\": \"(?x)\\\\{\", \"name\": \"punctuation.curlybrace.open.ql\" }, \"open-bracket\": { \"match\": \"(?x)\\\\[\", \"name\": \"punctuation.squarebracket.open.ql\" }, \"open-paren\": { \"match\": \"(?x)\\\\(\", \"name\": \"punctuation.parenthesis.open.ql\" }, \"operator-or-punctuation\": { \"patterns\": [{ \"include\": \"#relational-operator\" }, { \"include\": \"#comparison-operator\" }, { \"include\": \"#arithmetic-operator\" }, { \"include\": \"#comma\" }, { \"include\": \"#semicolon\" }, { \"include\": \"#dot\" }, { \"include\": \"#dotdot\" }, { \"include\": \"#pipe\" }, { \"include\": \"#open-paren\" }, { \"include\": \"#close-paren\" }, { \"include\": \"#open-brace\" }, { \"include\": \"#close-brace\" }, { \"include\": \"#open-bracket\" }, { \"include\": \"#close-bracket\" }, { \"include\": \"#open-angle\" }, { \"include\": \"#close-angle\" }] }, \"or\": { \"match\": \"(?x)\\\\b(?:or)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.other.or.ql\" }, \"order\": { \"match\": \"(?x)\\\\b(?:order)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.order.order.ql\" }, \"override\": { \"match\": \"(?x)\\\\b(?:override)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"storage.modifier.override.ql\" }, \"pipe\": { \"match\": \"(?x)\\\\|\", \"name\": \"punctuation.separator.pipe.ql\" }, \"pragma\": { \"match\": \"(?x)\\\\b(?:pragma)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"storage.modifier.pragma.ql\" }, \"pragma-annotation\": { \"begin\": \"(?x)((?:\\\\b(?:pragma)(?:(?!(?:[0-9A-Za-z_])))))\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#pragma\" }] } }, \"end\": \"(?x)(?! (?:\\\\s | $ | (?:// | /\\\\*)) | \\\\[ ) | (?<=\\\\])\", \"name\": \"meta.block.pragma-annotation.ql\", \"patterns\": [{ \"include\": \"#pragma-annotation-body\" }, { \"include\": \"#non-context-sensitive\" }] }, \"pragma-annotation-body\": { \"begin\": \"(?x)((?:\\\\[))\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#open-bracket\" }] } }, \"end\": \"(?x)((?:\\\\]))\", \"endCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#close-bracket\" }] } }, \"name\": \"meta.block.pragma-annotation-body.ql\", \"patterns\": [{ \"match\": \"(?x)\\\\b(?:inline|noinline|nomagic|noopt)\\\\b\", \"name\": \"storage.modifier.ql\" }] }, \"predicate\": { \"match\": \"(?x)\\\\b(?:predicate)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.other.predicate.ql\" }, \"predicate-body\": { \"begin\": \"(?x)((?:\\\\{))\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#open-brace\" }] } }, \"end\": \"(?x)((?:\\\\}))\", \"endCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#close-brace\" }] } }, \"name\": \"meta.block.predicate-body.ql\", \"patterns\": [{ \"include\": \"#predicate-body-contents\" }] }, \"predicate-body-contents\": { \"patterns\": [{ \"include\": \"#expr-as-clause\" }, { \"include\": \"#non-context-sensitive\" }, { \"include\": \"#module-qualifier\" }, { \"match\": \"(?x)(?:\\\\b [a-z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))\\\\s*(?:\\\\*|\\\\+)?\\\\s*(?=\\\\()\", \"name\": \"entity.name.function.ql\" }, { \"match\": \"(?x)(?:\\\\b [a-z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))\", \"name\": \"variable.other.ql\" }, { \"match\": \"(?x)(?:\\\\b [A-Z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))|(?:@[a-z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))\", \"name\": \"entity.name.type.ql\" }] }, \"predicate-or-field-declaration\": { \"begin\": \"(?x)(?:(?=(?:\\\\b [A-Za-z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_])))))(?!(?:(?:(?:\\\\b(?:_)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:and)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:any)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:as)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:asc)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:avg)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:boolean)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:by)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:class)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:concat)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:count)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:date)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:desc)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:else)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:exists)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:extends)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:false)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:float)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:forall)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:forex)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:from)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:if)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:implies)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:import)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:in)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:instanceof)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:int)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:max)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:min)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:module)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:newtype)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:none)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:not)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:or)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:order)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:predicate)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:rank)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:result)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:select)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:strictconcat)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:strictcount)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:strictsum)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:string)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:sum)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:super)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:then)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:this)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:true)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:unique)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:where)(?:(?!(?:[0-9A-Za-z_]))))))|(?:(?:(?:\\\\b(?:abstract)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:additional)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:bindingset)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:cached)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:default)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:deprecated)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:external)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:final)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:language)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:library)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:override)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:pragma)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:private)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:query)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:signature)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:transient)(?:(?!(?:[0-9A-Za-z_])))))))) | (?=(?:(?:(?:\\\\b(?:boolean)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:date)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:float)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:int)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:predicate)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:string)(?:(?!(?:[0-9A-Za-z_]))))))) | (?=(?:@[a-z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_])))))\", \"end\": \"(?x)(?<=\\\\}|;)\", \"name\": \"meta.block.predicate-or-field-declaration.ql\", \"patterns\": [{ \"include\": \"#predicate-parameter-list\" }, { \"include\": \"#predicate-body\" }, { \"include\": \"#non-context-sensitive\" }, { \"include\": \"#module-qualifier\" }, { \"match\": \"(?x)(?:\\\\b [a-z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))(?=\\\\s*;)\", \"name\": \"variable.field.ql\" }, { \"match\": \"(?x)(?:\\\\b [a-z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))\", \"name\": \"entity.name.function.ql\" }, { \"match\": \"(?x)(?:\\\\b [A-Z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))|(?:@[a-z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))\", \"name\": \"entity.name.type.ql\" }] }, \"predicate-parameter-list\": { \"begin\": \"(?x)((?:\\\\())\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#open-paren\" }] } }, \"end\": \"(?x)((?:\\\\)))\", \"endCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#close-paren\" }] } }, \"name\": \"meta.block.predicate-parameter-list.ql\", \"patterns\": [{ \"include\": \"#non-context-sensitive\" }, { \"match\": \"(?x)(?:\\\\b [A-Z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))(?=\\\\s*(?:,|\\\\)))\", \"name\": \"variable.parameter.ql\" }, { \"include\": \"#module-qualifier\" }, { \"match\": \"(?x)(?:\\\\b [A-Z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))|(?:@[a-z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))\", \"name\": \"entity.name.type.ql\" }, { \"match\": \"(?x)(?:\\\\b [a-z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))\", \"name\": \"variable.parameter.ql\" }] }, \"predicate-start-keyword\": { \"patterns\": [{ \"include\": \"#boolean\" }, { \"include\": \"#date\" }, { \"include\": \"#float\" }, { \"include\": \"#int\" }, { \"include\": \"#predicate\" }, { \"include\": \"#string\" }] }, \"private\": { \"match\": \"(?x)\\\\b(?:private)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"storage.modifier.private.ql\" }, \"query\": { \"match\": \"(?x)\\\\b(?:query)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"storage.modifier.query.ql\" }, \"rank\": { \"match\": \"(?x)\\\\b(?:rank)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.aggregate.rank.ql\" }, \"relational-operator\": { \"match\": \"(?x)<=|<|>=|>\", \"name\": \"keyword.operator.relational.ql\" }, \"result\": { \"match\": \"(?x)\\\\b(?:result)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"variable.language.result.ql\" }, \"select\": { \"match\": \"(?x)\\\\b(?:select)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.query.select.ql\" }, \"select-as-clause\": { \"begin\": \"(?x)((?:\\\\b(?:as)(?:(?!(?:[0-9A-Za-z_])))))\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#as\" }] } }, \"end\": \"(?x)(?<=(?:[0-9A-Za-z_])(?:(?!(?:[0-9A-Za-z_]))))\", \"match\": \"(?x)meta.block.select-as-clause.ql\", \"patterns\": [{ \"include\": \"#non-context-sensitive\" }, { \"match\": \"(?x)(?:\\\\b [A-Za-z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))\", \"name\": \"variable.other.ql\" }] }, \"select-clause\": { \"begin\": \"(?x)(?=(?:\\\\b(?:from)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:where)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:select)(?:(?!(?:[0-9A-Za-z_])))))\", \"end\": \"(?x)(?!(?:\\\\b(?:from)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:where)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:select)(?:(?!(?:[0-9A-Za-z_])))))\", \"name\": \"meta.block.select-clause.ql\", \"patterns\": [{ \"include\": \"#from-section\" }, { \"include\": \"#where-section\" }, { \"include\": \"#select-section\" }] }, \"select-section\": { \"begin\": \"(?x)((?:\\\\b(?:select)(?:(?!(?:[0-9A-Za-z_])))))\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#select\" }] } }, \"end\": \"(?x)(?=\\\\n)\", \"name\": \"meta.block.select-section.ql\", \"patterns\": [{ \"include\": \"#predicate-body-contents\" }, { \"include\": \"#select-as-clause\" }] }, \"semicolon\": { \"match\": \"(?x);\", \"name\": \"punctuation.separator.statement.ql\" }, \"signature\": { \"match\": \"(?x)\\\\b(?:signature)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"storage.modifier.signature.ql\" }, \"simple-id\": { \"match\": \"(?x)\\\\b [A-Za-z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_])))\" }, \"strictconcat\": { \"match\": \"(?x)\\\\b(?:strictconcat)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.aggregate.strictconcat.ql\" }, \"strictcount\": { \"match\": \"(?x)\\\\b(?:strictcount)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.aggregate.strictcount.ql\" }, \"strictsum\": { \"match\": \"(?x)\\\\b(?:strictsum)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.aggregate.strictsum.ql\" }, \"string\": { \"match\": \"(?x)\\\\b(?:string)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.type.string.ql\" }, \"string-escape\": { \"match\": '(?x)\\\\\\\\[\"\\\\\\\\nrt]', \"name\": \"constant.character.escape.ql\" }, \"string-literal\": { \"begin\": '(?x)\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ql\" } }, \"end\": '(?x)(\") | ((?:[^\\\\\\\\\\\\n])$)', \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.ql\" }, \"2\": { \"name\": \"invalid.illegal.newline.ql\" } }, \"name\": \"string.quoted.double.ql\", \"patterns\": [{ \"include\": \"#string-escape\" }] }, \"sum\": { \"match\": \"(?x)\\\\b(?:sum)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.aggregate.sum.ql\" }, \"super\": { \"match\": \"(?x)\\\\b(?:super)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"variable.language.super.ql\" }, \"then\": { \"match\": \"(?x)\\\\b(?:then)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.other.then.ql\" }, \"this\": { \"match\": \"(?x)\\\\b(?:this)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"variable.language.this.ql\" }, \"transient\": { \"match\": \"(?x)\\\\b(?:transient)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"storage.modifier.transient.ql\" }, \"true\": { \"match\": \"(?x)\\\\b(?:true)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"constant.language.boolean.true.ql\" }, \"unique\": { \"match\": \"(?x)\\\\b(?:unique)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.aggregate.unique.ql\" }, \"upper-id\": { \"match\": \"(?x)\\\\b [A-Z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_])))\" }, \"where\": { \"match\": \"(?x)\\\\b(?:where)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.query.where.ql\" }, \"where-section\": { \"begin\": \"(?x)((?:\\\\b(?:where)(?:(?!(?:[0-9A-Za-z_])))))\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#where\" }] } }, \"end\": \"(?x)(?=(?:\\\\b(?:select)(?:(?!(?:[0-9A-Za-z_])))))\", \"name\": \"meta.block.where-section.ql\", \"patterns\": [{ \"include\": \"#predicate-body-contents\" }] }, \"whitespace-or-comment-start\": { \"match\": \"(?x)\\\\s | $ | (?:// | /\\\\*)\" } }, \"scopeName\": \"source.ql\", \"aliases\": [\"ql\"] });\nvar codeql = [\n  lang\n];\n\nexport { codeql as default };\n"],"x_google_ignoreList":[0]}