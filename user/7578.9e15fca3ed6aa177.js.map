{"version":3,"file":"7578.9e15fca3ed6aa177.js","mappings":"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","names":["lang","Object","freeze","displayName","name","patterns","captures","match","comment","begin","contentName","end","include","beginCaptures","endCaptures","repository","braces","parens","escaped_char","heredoc","interpolated_ruby","nest_curly_and_self","percent_literals","angles","brackets","symbol","string","regex_sub","scopeName","embeddedLangs","aliases","ruby","html","xml","sql","css","c","javascript","shellscript","lua","EntityDecl","comments","doublequotedString","entity","internalSubset","parameterEntity","singlequotedString","tagStuff","java"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./node_modules/shiki/dist/langs/ruby.mjs","./node_modules/shiki/dist/langs/xml.mjs"],"sourcesContent":["import html from './html.mjs';\nimport xml from './xml.mjs';\nimport sql from './sql.mjs';\nimport css from './css.mjs';\nimport c from './c.mjs';\nimport javascript from './javascript.mjs';\nimport shellscript from './shellscript.mjs';\nimport lua from './lua.mjs';\nimport './java.mjs';\n\nconst lang = Object.freeze({ \"displayName\": \"Ruby\", \"name\": \"ruby\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"keyword.control.class.ruby\" }, \"2\": { \"name\": \"entity.name.type.class.ruby\" }, \"3\": { \"name\": \"keyword.operator.other.ruby\" }, \"4\": { \"name\": \"entity.other.inherited-class.ruby\" }, \"5\": { \"name\": \"keyword.operator.other.ruby\" }, \"6\": { \"name\": \"variable.other.object.ruby\" } }, \"match\": \"^\\\\s*(class)\\\\s+(?:([.a-zA-Z0-9_:]+)(?:\\\\s*(<)\\\\s*([.a-zA-Z0-9_:]+))?|(<<)\\\\s*([.a-zA-Z0-9_:]+))\", \"name\": \"meta.class.ruby\" }, { \"captures\": { \"1\": { \"name\": \"keyword.control.module.ruby\" }, \"2\": { \"name\": \"entity.name.type.module.ruby\" }, \"3\": { \"name\": \"entity.other.inherited-class.module.first.ruby\" }, \"4\": { \"name\": \"punctuation.separator.inheritance.ruby\" }, \"5\": { \"name\": \"entity.other.inherited-class.module.second.ruby\" }, \"6\": { \"name\": \"punctuation.separator.inheritance.ruby\" }, \"7\": { \"name\": \"entity.other.inherited-class.module.third.ruby\" }, \"8\": { \"name\": \"punctuation.separator.inheritance.ruby\" } }, \"match\": \"^\\\\s*(module)\\\\s+(([A-Z]\\\\w*(::))?([A-Z]\\\\w*(::))?([A-Z]\\\\w*(::))*[A-Z]\\\\w*)\", \"name\": \"meta.module.ruby\" }, { \"comment\": \"else if is a common mistake carried over from other languages. it works if you put in a second end, but it\\u2019s never what you want.\", \"match\": \"(?<!\\\\.)\\\\belse(\\\\s)+if\\\\b\", \"name\": \"invalid.deprecated.ruby\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.constant.ruby\" } }, \"comment\": \"symbols as hash key (1.9 syntax)\", \"match\": \"(?>[a-zA-Z_]\\\\w*(?>[?!])?)(:)(?!:)\", \"name\": \"constant.other.symbol.hashkey.ruby\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.constant.ruby\" } }, \"comment\": \"symbols as hash key (1.8 syntax)\", \"match\": \"(?<!:)(:)(?>[a-zA-Z_]\\\\w*(?>[?!])?)(?=\\\\s*=>)\", \"name\": \"constant.other.symbol.hashkey.ruby\" }, { \"comment\": \"everything being a reserved word, not a value and needing a 'end' is a..\", \"match\": \"(?<!\\\\.)\\\\b(BEGIN|begin|case|class|else|elsif|END|end|ensure|for|if|in|module|rescue|then|unless|until|when|while)\\\\b(?![?!])\", \"name\": \"keyword.control.ruby\" }, { \"comment\": \"contextual smart pair support for block parameters\", \"match\": \"(?<!\\\\.)\\\\bdo\\\\b\", \"name\": \"keyword.control.start-block.ruby\" }, { \"comment\": \"contextual smart pair support\", \"match\": \"(?<=\\\\{)(\\\\s+)\", \"name\": \"meta.syntax.ruby.start-block\" }, { \"match\": \"(?<!\\\\.)\\\\b(alias|alias_method|block_given[?]|break|defined[?]|iterator[?]|next|redo|retry|return|super|undef|yield)(\\\\b|(?<=[?]))(?![?!])\", \"name\": \"keyword.control.pseudo-method.ruby\" }, { \"match\": \"\\\\b(nil|true|false)\\\\b(?![?!])\", \"name\": \"constant.language.ruby\" }, { \"match\": \"\\\\b(__(dir|FILE|LINE)__)\\\\b(?![?!])\", \"name\": \"variable.language.ruby\" }, { \"begin\": \"^__END__\\\\n\", \"captures\": { \"0\": { \"name\": \"string.unquoted.program-block.ruby\" } }, \"comment\": \"__END__ marker\", \"contentName\": \"text.plain\", \"end\": \"(?=not)impossible\", \"patterns\": [{ \"begin\": \"(?=<?xml|<(?i:html\\\\b)|!DOCTYPE (?i:html\\\\b))\", \"end\": \"(?=not)impossible\", \"name\": \"text.html.embedded.ruby\", \"patterns\": [{ \"include\": \"text.html.basic\" }] }] }, { \"match\": \"\\\\b(self)\\\\b(?![?!])\", \"name\": \"variable.language.self.ruby\" }, { \"comment\": \" everything being a method but having a special function is a..\", \"match\": \"\\\\b(initialize|new|loop|include|extend|prepend|fail|raise|attr_reader|attr_writer|attr_accessor|attr|catch|throw|private|private_class_method|module_function|public|public_class_method|protected|refine|using)\\\\b(?![?!])\", \"name\": \"keyword.other.special-method.ruby\" }, { \"begin\": \"\\\\b(?<!\\\\.|::)(require|require_relative)\\\\b\", \"captures\": { \"1\": { \"name\": \"keyword.other.special-method.ruby\" } }, \"end\": \"$|(?=#|\\\\})\", \"name\": \"meta.require.ruby\", \"patterns\": [{ \"include\": \"$self\" }] }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.variable.ruby\" } }, \"match\": \"(@)[a-zA-Z_]\\\\w*\", \"name\": \"variable.other.readwrite.instance.ruby\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.variable.ruby\" } }, \"match\": \"(@@)[a-zA-Z_]\\\\w*\", \"name\": \"variable.other.readwrite.class.ruby\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.variable.ruby\" } }, \"match\": \"(\\\\$)[a-zA-Z_]\\\\w*\", \"name\": \"variable.other.readwrite.global.ruby\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.variable.ruby\" } }, \"match\": \"(\\\\$)(!|@|&|`|'|\\\\+|\\\\d+|~|=|/|\\\\\\\\|,|;|\\\\.|<|>|_|\\\\*|\\\\$|\\\\?|:|\\\"|-[0adFiIlpvw])\", \"name\": \"variable.other.readwrite.global.pre-defined.ruby\" }, { \"begin\": \"\\\\b(ENV)\\\\[\", \"beginCaptures\": { \"1\": { \"name\": \"variable.other.constant.ruby\" } }, \"end\": \"\\\\]\", \"name\": \"meta.environment-variable.ruby\", \"patterns\": [{ \"include\": \"$self\" }] }, { \"match\": \"\\\\b[A-Z]\\\\w*(?=((\\\\.|::)[A-Za-z]|\\\\[))\", \"name\": \"support.class.ruby\" }, { \"match\": \"\\\\b(abort|at_exit|autoload[?]?|binding|callcc|caller|caller_locations|chomp|chop|eval|exec|exit|exit!|fork|format|gets|global_variables|gsub|lambda|load|local_variables|open|p|print|printf|proc|putc|puts|rand|readline|readlines|select|set_trace_func|sleep|spawn|sprintf|srand|sub|syscall|system|test|trace_var|trap|untrace_var|warn)(\\\\b|(?<=[?!]))(?![?!])\", \"name\": \"support.function.kernel.ruby\" }, { \"match\": \"\\\\b[A-Z]\\\\w*\\\\b\", \"name\": \"variable.other.constant.ruby\" }, { \"begin\": \"(?x)\\n(?=def\\\\b)\\n(?<=^|\\\\s)(def)\\\\s+\\n( (?>[a-zA-Z_]\\\\w*(?>\\\\.|::))?\\n(?>[a-zA-Z_]\\\\w*(?>[?!]|=(?!>))?\\n|===?|!=|!~|>[>=]?|<=>|<[<=]?|[%&`/\\\\|^]|\\\\*\\\\*?|=?~|[-+]@?|\\\\[\\\\]=?) )\\n\\\\s*(\\\\()\\n\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.def.ruby\" }, \"2\": { \"name\": \"entity.name.function.ruby\" }, \"3\": { \"name\": \"punctuation.definition.parameters.ruby\" } }, \"comment\": \"the method pattern comes from the symbol pattern, see there for a explaination\", \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.parameters.ruby\" } }, \"name\": \"meta.function.method.with-arguments.ruby\", \"patterns\": [{ \"begin\": \"(?=[&*_a-zA-Z])\", \"end\": \"(?=[,)])\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"storage.type.variable.ruby\" }, \"2\": { \"name\": \"constant.other.symbol.hashkey.parameter.function.ruby\" }, \"3\": { \"name\": \"punctuation.definition.constant.ruby\" }, \"4\": { \"name\": \"variable.parameter.function.ruby\" } }, \"match\": \"\\\\G([&*]?)(?:([_a-zA-Z]\\\\w*(:))|([_a-zA-Z]\\\\w*))\" }, { \"include\": \"#parens\" }, { \"include\": \"#braces\" }, { \"include\": \"$self\" }] }], \"repository\": { \"braces\": { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.function.begin.ruby\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.function.end.ruby\" } }, \"patterns\": [{ \"include\": \"#parens\" }, { \"include\": \"#braces\" }, { \"include\": \"$self\" }] }, \"parens\": { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.function.begin.ruby\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.function.end.ruby\" } }, \"patterns\": [{ \"include\": \"#parens\" }, { \"include\": \"#braces\" }, { \"include\": \"$self\" }] } } }, { \"begin\": \"(?x)\\n(?=def\\\\b)\\n(?<=^|\\\\s)(def)\\\\s+\\n( (?>[a-zA-Z_]\\\\w*(?>\\\\.|::))?\\n(?>[a-zA-Z_]\\\\w*(?>[?!]|=(?!>))?\\n|===?|!=|!~|>[>=]?|<=>|<[<=]?|[%&`/\\\\|^]|\\\\*\\\\*?|=?~|[-+]@?|\\\\[\\\\]=?) )\\n[ \\\\t]\\n(?=[ \\\\t]*[^\\\\s#;])\\n\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.def.ruby\" }, \"2\": { \"name\": \"entity.name.function.ruby\" } }, \"comment\": \"same as the previous rule, but without parentheses around the arguments\", \"end\": \"$\", \"name\": \"meta.function.method.with-arguments.ruby\", \"patterns\": [{ \"begin\": \"(?![\\\\s,])\", \"end\": \"(?=,|$)\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"storage.type.variable.ruby\" }, \"2\": { \"name\": \"constant.other.symbol.hashkey.parameter.function.ruby\" }, \"3\": { \"name\": \"punctuation.definition.constant.ruby\" }, \"4\": { \"name\": \"variable.parameter.function.ruby\" } }, \"match\": \"\\\\G([&*]?)(?:([_a-zA-Z]\\\\w*(:))|([_a-zA-Z]\\\\w*))\", \"name\": \"variable.parameter.function.ruby\" }, { \"include\": \"$self\" }] }] }, { \"captures\": { \"1\": { \"name\": \"keyword.control.def.ruby\" }, \"3\": { \"name\": \"entity.name.function.ruby\" } }, \"comment\": \" the optional name is just to catch the def also without a method-name\", \"match\": \"(?x)\\n(?=def\\\\b)\\n(?<=^|\\\\s)(def)\\\\b\\n( \\\\s+\\n( (?>[a-zA-Z_]\\\\w*(?>\\\\.|::))?\\n(?>[a-zA-Z_]\\\\w*(?>[?!]|=(?!>))?\\n|===?|!=|!~|>[>=]?|<=>|<[<=]?|[%&`/\\\\|^]|\\\\*\\\\*?|=?~|[-+]@?|\\\\[\\\\]=?) ) )?\\n\", \"name\": \"meta.function.method.without-arguments.ruby\" }, { \"match\": \"\\\\b\\\\d(?>_?\\\\d)*(?=\\\\.\\\\d|[eE])(\\\\.\\\\d(?>_?\\\\d)*)?([eE][-+]?\\\\d(?>_?\\\\d)*)?r?i?\\\\b\", \"name\": \"constant.numeric.float.ruby\" }, { \"match\": \"\\\\b(0|(0[dD]\\\\d|[1-9])(?>_?\\\\d)*)r?i?\\\\b\", \"name\": \"constant.numeric.integer.ruby\" }, { \"match\": \"\\\\b0[xX]\\\\h(?>_?\\\\h)*r?i?\\\\b\", \"name\": \"constant.numeric.hex.ruby\" }, { \"match\": \"\\\\b0[bB][01](?>_?[01])*r?i?\\\\b\", \"name\": \"constant.numeric.binary.ruby\" }, { \"match\": \"\\\\b0([oO]?[0-7](?>_?[0-7])*)?r?i?\\\\b\", \"name\": \"constant.numeric.octal.ruby\" }, { \"begin\": \":'\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.constant.ruby\" } }, \"end\": \"'\", \"name\": \"constant.other.symbol.single-quoted.ruby\", \"patterns\": [{ \"match\": \"\\\\\\\\['\\\\\\\\]\", \"name\": \"constant.character.escape.ruby\" }] }, { \"begin\": ':\"', \"captures\": { \"0\": { \"name\": \"punctuation.definition.constant.ruby\" } }, \"end\": '\"', \"name\": \"constant.other.symbol.double-quoted.ruby\", \"patterns\": [{ \"include\": \"#interpolated_ruby\" }, { \"include\": \"#escaped_char\" }] }, { \"comment\": \"Needs higher precedence than regular expressions.\", \"match\": \"(?<!\\\\()/=\", \"name\": \"keyword.operator.assignment.augmented.ruby\" }, { \"begin\": \"'\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"comment\": \"single quoted string (does not allow interpolation)\", \"end\": \"'\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.quoted.single.ruby\", \"patterns\": [{ \"match\": \"\\\\\\\\'|\\\\\\\\\\\\\\\\\", \"name\": \"constant.character.escape.ruby\" }] }, { \"begin\": '\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"comment\": \"double quoted string (allows for interpolation)\", \"end\": '\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.quoted.double.ruby\", \"patterns\": [{ \"include\": \"#interpolated_ruby\" }, { \"include\": \"#escaped_char\" }] }, { \"begin\": \"`\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"comment\": \"execute string (allows for interpolation)\", \"end\": \"`\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.interpolated.ruby\", \"patterns\": [{ \"include\": \"#interpolated_ruby\" }, { \"include\": \"#escaped_char\" }] }, { \"include\": \"#percent_literals\" }, { \"begin\": \"(?x)\\n(?:\\n^\\n| (?<=\\n[=>~(?:\\\\[,|&;]\\n| [\\\\s;]if\\\\s\\n| [\\\\s;]elsif\\\\s\\n| [\\\\s;]while\\\\s\\n| [\\\\s;]unless\\\\s\\n| [\\\\s;]when\\\\s\\n| [\\\\s;]assert_match\\\\s\\n| [\\\\s;]or\\\\s\\n| [\\\\s;]and\\\\s\\n| [\\\\s;]not\\\\s\\n| [\\\\s.]index\\\\s\\n| [\\\\s.]scan\\\\s\\n| [\\\\s.]sub\\\\s\\n| [\\\\s.]sub!\\\\s\\n| [\\\\s.]gsub\\\\s\\n| [\\\\s.]gsub!\\\\s\\n| [\\\\s.]match\\\\s\\n)\\n| (?<=\\n^when\\\\s\\n| ^if\\\\s\\n| ^elsif\\\\s\\n| ^while\\\\s\\n| ^unless\\\\s\\n)\\n)\\n\\\\s*((/))(?![*+{}?])\\n\", \"captures\": { \"1\": { \"name\": \"string.regexp.classic.ruby\" }, \"2\": { \"name\": \"punctuation.definition.string.ruby\" } }, \"comment\": \"regular expressions (normal)\\n\t\t\twe only start a regexp if the character before it (excluding whitespace)\\n\t\t\tis what we think is before a regexp\\n\t\t\t\", \"contentName\": \"string.regexp.classic.ruby\", \"end\": \"((/[eimnosux]*))\", \"patterns\": [{ \"include\": \"#regex_sub\" }] }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.constant.ruby\" } }, \"comment\": \"symbols\", \"match\": \"(?<!:)(:)(?>[a-zA-Z_]\\\\w*(?>[?!]|=(?![>=]))?|===?|>[>=]?|<=>|<[<=]?|[%&`/\\\\|]|\\\\*\\\\*?|=?~|[-+]@?|\\\\[\\\\]=?|(@@?|\\\\$)[a-zA-Z_]\\\\w*)\", \"name\": \"constant.other.symbol.ruby\" }, { \"begin\": \"^=begin\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.comment.ruby\" } }, \"comment\": \"multiline comments\", \"end\": \"^=end\", \"name\": \"comment.block.documentation.ruby\" }, { \"begin\": \"(^[ \\\\t]+)?(?=#)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.whitespace.comment.leading.ruby\" } }, \"end\": \"(?!\\\\G)\", \"patterns\": [{ \"begin\": \"#\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.ruby\" } }, \"end\": \"\\\\n\", \"name\": \"comment.line.number-sign.ruby\" }] }, { \"comment\": '\\n\t\t\tmatches questionmark-letters.\\n\\n\t\t\texamples (1st alternation = hex):\\n\t\t\t?\\\\x1     ?\\\\x61\\n\\n\t\t\texamples (2nd alternation = octal):\\n\t\t\t?\\\\0      ?\\\\07     ?\\\\017\\n\\n\t\t\texamples (3rd alternation = escaped):\\n\t\t\t?\\\\n      ?\\\\b\\n\\n\t\t\texamples (4th alternation = meta-ctrl):\\n\t\t\t?\\\\C-a    ?\\\\M-a    ?\\\\C-\\\\M-\\\\C-\\\\M-a\\n\\n\t\t\texamples (4th alternation = normal):\\n\t\t\t?a       ?A       ?0 \\n\t\t\t?*       ?\"       ?( \\n\t\t\t?.       ?#\\n\t\t\t\\n\t\t\t\\n\t\t\tthe negative lookbehind prevents against matching\\n\t\t\tp(42.tainted?)\\n\t\t\t', \"match\": \"(?<!\\\\w)\\\\?(\\\\\\\\(x\\\\h{1,2}(?!\\\\h)\\\\b|0[0-7]{0,2}(?![0-7])\\\\b|[^x0MC])|(\\\\\\\\[MC]-)+\\\\w|[^\\\\s\\\\\\\\])\", \"name\": \"constant.numeric.ruby\" }, { \"begin\": '(?=(?><<[-~](\"?)((?:[_\\\\w]+_|)HTML)\\\\b\\\\1))', \"comment\": \"Heredoc with embedded html\", \"end\": \"(?!\\\\G)\", \"name\": \"meta.embedded.block.html\", \"patterns\": [{ \"begin\": '(?><<[-~](\"?)((?:[_\\\\w]+_|)HTML)\\\\b\\\\1)', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"contentName\": \"text.html\", \"end\": \"\\\\s*\\\\2$\\\\n?\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.unquoted.heredoc.ruby\", \"patterns\": [{ \"include\": \"#heredoc\" }, { \"include\": \"#interpolated_ruby\" }, { \"include\": \"text.html.basic\" }, { \"include\": \"#escaped_char\" }] }] }, { \"begin\": '(?=(?><<[-~](\"?)((?:[_\\\\w]+_|)XML)\\\\b\\\\1))', \"comment\": \"Heredoc with embedded xml\", \"end\": \"(?!\\\\G)\", \"name\": \"meta.embedded.block.xml\", \"patterns\": [{ \"begin\": '(?><<[-~](\"?)((?:[_\\\\w]+_|)XML)\\\\b\\\\1)', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"contentName\": \"text.xml\", \"end\": \"\\\\s*\\\\2$\\\\n?\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.unquoted.heredoc.ruby\", \"patterns\": [{ \"include\": \"#heredoc\" }, { \"include\": \"#interpolated_ruby\" }, { \"include\": \"text.xml\" }, { \"include\": \"#escaped_char\" }] }] }, { \"begin\": '(?=(?><<[-~](\"?)((?:[_\\\\w]+_|)SQL)\\\\b\\\\1))', \"comment\": \"Heredoc with embedded sql\", \"end\": \"(?!\\\\G)\", \"name\": \"meta.embedded.block.sql\", \"patterns\": [{ \"begin\": '(?><<[-~](\"?)((?:[_\\\\w]+_|)SQL)\\\\b\\\\1)', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"contentName\": \"source.sql\", \"end\": \"\\\\s*\\\\2$\\\\n?\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.unquoted.heredoc.ruby\", \"patterns\": [{ \"include\": \"#heredoc\" }, { \"include\": \"#interpolated_ruby\" }, { \"include\": \"source.sql\" }, { \"include\": \"#escaped_char\" }] }] }, { \"begin\": '(?=(?><<[-~](\"?)((?:[_\\\\w]+_|)CSS)\\\\b\\\\1))', \"comment\": \"Heredoc with embedded css\", \"end\": \"(?!\\\\G)\", \"name\": \"meta.embedded.block.css\", \"patterns\": [{ \"begin\": '(?><<[-~](\"?)((?:[_\\\\w]+_|)CSS)\\\\b\\\\1)', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"contentName\": \"source.css\", \"end\": \"\\\\s*\\\\2$\\\\n?\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.unquoted.heredoc.ruby\", \"patterns\": [{ \"include\": \"#heredoc\" }, { \"include\": \"#interpolated_ruby\" }, { \"include\": \"source.css\" }, { \"include\": \"#escaped_char\" }] }] }, { \"begin\": '(?=(?><<[-~](\"?)((?:[_\\\\w]+_|)CPP)\\\\b\\\\1))', \"comment\": \"Heredoc with embedded c++\", \"end\": \"(?!\\\\G)\", \"name\": \"meta.embedded.block.c++\", \"patterns\": [{ \"begin\": '(?><<[-~](\"?)((?:[_\\\\w]+_|)CPP)\\\\b\\\\1)', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"contentName\": \"source.c++\", \"end\": \"\\\\s*\\\\2$\\\\n?\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.unquoted.heredoc.ruby\", \"patterns\": [{ \"include\": \"#heredoc\" }, { \"include\": \"#interpolated_ruby\" }, { \"include\": \"source.c++\" }, { \"include\": \"#escaped_char\" }] }] }, { \"begin\": '(?=(?><<[-~](\"?)((?:[_\\\\w]+_|)C)\\\\b\\\\1))', \"comment\": \"Heredoc with embedded c\", \"end\": \"(?!\\\\G)\", \"name\": \"meta.embedded.block.c\", \"patterns\": [{ \"begin\": '(?><<[-~](\"?)((?:[_\\\\w]+_|)C)\\\\b\\\\1)', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"contentName\": \"source.c\", \"end\": \"\\\\s*\\\\2$\\\\n?\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.unquoted.heredoc.ruby\", \"patterns\": [{ \"include\": \"#heredoc\" }, { \"include\": \"#interpolated_ruby\" }, { \"include\": \"source.c\" }, { \"include\": \"#escaped_char\" }] }] }, { \"begin\": '(?=(?><<[-~](\"?)((?:[_\\\\w]+_|)(?:JS|JAVASCRIPT))\\\\b\\\\1))', \"comment\": \"Heredoc with embedded javascript\", \"end\": \"(?!\\\\G)\", \"name\": \"meta.embedded.block.js\", \"patterns\": [{ \"begin\": '(?><<[-~](\"?)((?:[_\\\\w]+_|)(?:JS|JAVASCRIPT))\\\\b\\\\1)', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"contentName\": \"source.js\", \"end\": \"\\\\s*\\\\2$\\\\n?\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.unquoted.heredoc.ruby\", \"patterns\": [{ \"include\": \"#heredoc\" }, { \"include\": \"#interpolated_ruby\" }, { \"include\": \"source.js\" }, { \"include\": \"#escaped_char\" }] }] }, { \"begin\": '(?=(?><<[-~](\"?)((?:[_\\\\w]+_|)JQUERY)\\\\b\\\\1))', \"comment\": \"Heredoc with embedded jQuery javascript\", \"end\": \"(?!\\\\G)\", \"name\": \"meta.embedded.block.js.jquery\", \"patterns\": [{ \"begin\": '(?><<[-~](\"?)((?:[_\\\\w]+_|)JQUERY)\\\\b\\\\1)', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"contentName\": \"source.js.jquery\", \"end\": \"\\\\s*\\\\2$\\\\n?\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.unquoted.heredoc.ruby\", \"patterns\": [{ \"include\": \"#heredoc\" }, { \"include\": \"#interpolated_ruby\" }, { \"include\": \"source.js.jquery\" }, { \"include\": \"#escaped_char\" }] }] }, { \"begin\": '(?=(?><<[-~](\"?)((?:[_\\\\w]+_|)(?:SH|SHELL))\\\\b\\\\1))', \"comment\": \"Heredoc with embedded shell\", \"end\": \"(?!\\\\G)\", \"name\": \"meta.embedded.block.shell\", \"patterns\": [{ \"begin\": '(?><<[-~](\"?)((?:[_\\\\w]+_|)(?:SH|SHELL))\\\\b\\\\1)', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"contentName\": \"source.shell\", \"end\": \"\\\\s*\\\\2$\\\\n?\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.unquoted.heredoc.ruby\", \"patterns\": [{ \"include\": \"#heredoc\" }, { \"include\": \"#interpolated_ruby\" }, { \"include\": \"source.shell\" }, { \"include\": \"#escaped_char\" }] }] }, { \"begin\": '(?=(?><<[-~](\"?)((?:[_\\\\w]+_|)LUA)\\\\b\\\\1))', \"comment\": \"Heredoc with embedded lua\", \"end\": \"(?!\\\\G)\", \"name\": \"meta.embedded.block.lua\", \"patterns\": [{ \"begin\": '(?><<[-~](\"?)((?:[_\\\\w]+_|)LUA)\\\\b\\\\1)', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"contentName\": \"source.lua\", \"end\": \"\\\\s*\\\\2$\\\\n?\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.unquoted.heredoc.ruby\", \"patterns\": [{ \"include\": \"#heredoc\" }, { \"include\": \"#interpolated_ruby\" }, { \"include\": \"source.lua\" }, { \"include\": \"#escaped_char\" }] }] }, { \"begin\": '(?=(?><<[-~](\"?)((?:[_\\\\w]+_|)RUBY)\\\\b\\\\1))', \"comment\": \"Heredoc with embedded ruby\", \"end\": \"(?!\\\\G)\", \"name\": \"meta.embedded.block.ruby\", \"patterns\": [{ \"begin\": '(?><<[-~](\"?)((?:[_\\\\w]+_|)RUBY)\\\\b\\\\1)', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"contentName\": \"source.ruby\", \"end\": \"\\\\s*\\\\2$\\\\n?\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.unquoted.heredoc.ruby\", \"patterns\": [{ \"include\": \"#heredoc\" }, { \"include\": \"#interpolated_ruby\" }, { \"include\": \"source.ruby\" }, { \"include\": \"#escaped_char\" }] }] }, { \"begin\": \"(?>=\\\\s*<<(\\\\w+))\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"end\": \"^\\\\1$\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.unquoted.heredoc.ruby\", \"patterns\": [{ \"include\": \"#heredoc\" }, { \"include\": \"#interpolated_ruby\" }, { \"include\": \"#escaped_char\" }] }, { \"begin\": \"(?><<[-~](\\\\w+))\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"comment\": \"heredoc with indented terminator\", \"end\": \"\\\\s*\\\\1$\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.unquoted.heredoc.ruby\", \"patterns\": [{ \"include\": \"#heredoc\" }, { \"include\": \"#interpolated_ruby\" }, { \"include\": \"#escaped_char\" }] }, { \"begin\": \"(?<=\\\\{|do|\\\\{\\\\s|do\\\\s)(\\\\|)\", \"captures\": { \"1\": { \"name\": \"punctuation.separator.arguments.ruby\" } }, \"end\": \"(?<!\\\\|)(\\\\|)(?!\\\\|)\", \"patterns\": [{ \"include\": \"$self\" }, { \"match\": \"[_a-zA-Z][_a-zA-Z0-9]*\", \"name\": \"variable.other.block.ruby\" }, { \"match\": \",\", \"name\": \"punctuation.separator.variable.ruby\" }] }, { \"match\": \"=>\", \"name\": \"punctuation.separator.key-value\" }, { \"match\": \"->\", \"name\": \"support.function.kernel.lambda.ruby\" }, { \"match\": \"<<=|%=|&{1,2}=|\\\\*=|\\\\*\\\\*=|\\\\+=|-=|\\\\^=|\\\\|{1,2}=|<<\", \"name\": \"keyword.operator.assignment.augmented.ruby\" }, { \"match\": \"<=>|<(?!<|=)|>(?!<|=|>)|<=|>=|===|==|=~|!=|!~|(?<=[ \\\\t])\\\\?\", \"name\": \"keyword.operator.comparison.ruby\" }, { \"match\": \"(?<!\\\\.)\\\\b(and|not|or)\\\\b(?![?!])\", \"name\": \"keyword.operator.logical.ruby\" }, { \"comment\": \"Make sure this goes after assignment and comparison\", \"match\": \"(?<=^|[ \\\\t])!|&&|\\\\|\\\\||\\\\^\", \"name\": \"keyword.operator.logical.ruby\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.method.ruby\" } }, \"comment\": \"Safe navigation operator - Added in 2.3\", \"match\": \"(&\\\\.)\\\\s*(?![A-Z])\" }, { \"match\": \"(%|&|\\\\*\\\\*|\\\\*|\\\\+|-|/)\", \"name\": \"keyword.operator.arithmetic.ruby\" }, { \"match\": \"=\", \"name\": \"keyword.operator.assignment.ruby\" }, { \"match\": \"\\\\||~|>>\", \"name\": \"keyword.operator.other.ruby\" }, { \"match\": \";\", \"name\": \"punctuation.separator.statement.ruby\" }, { \"match\": \",\", \"name\": \"punctuation.separator.object.ruby\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.namespace.ruby\" } }, \"comment\": \"Mark as namespace separator if double colons followed by capital letter\", \"match\": \"(::)\\\\s*(?=[A-Z])\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.method.ruby\" } }, \"comment\": \"Mark as method separator if double colons not followed by capital letter\", \"match\": \"(\\\\.|::)\\\\s*(?![A-Z])\" }, { \"comment\": \"Must come after method and constant separators to prefer double colons\", \"match\": \":\", \"name\": \"punctuation.separator.other.ruby\" }, { \"match\": \"\\\\{\", \"name\": \"punctuation.section.scope.begin.ruby\" }, { \"match\": \"\\\\}\", \"name\": \"punctuation.section.scope.end.ruby\" }, { \"match\": \"\\\\[\", \"name\": \"punctuation.section.array.begin.ruby\" }, { \"match\": \"\\\\]\", \"name\": \"punctuation.section.array.end.ruby\" }, { \"match\": \"\\\\(|\\\\)\", \"name\": \"punctuation.section.function.ruby\" }], \"repository\": { \"escaped_char\": { \"match\": \"\\\\\\\\(?:[0-7]{1,3}|x[\\\\da-fA-F]{1,2}|.)\", \"name\": \"constant.character.escape.ruby\" }, \"heredoc\": { \"begin\": \"^<<[-~]?\\\\w+\", \"end\": \"$\", \"patterns\": [{ \"include\": \"$self\" }] }, \"interpolated_ruby\": { \"patterns\": [{ \"begin\": \"#\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.embedded.begin.ruby\" } }, \"contentName\": \"source.ruby\", \"end\": \"(\\\\})\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.embedded.end.ruby\" }, \"1\": { \"name\": \"source.ruby\" } }, \"name\": \"meta.embedded.line.ruby\", \"patterns\": [{ \"include\": \"#nest_curly_and_self\" }, { \"include\": \"$self\" }], \"repository\": { \"nest_curly_and_self\": { \"patterns\": [{ \"begin\": \"\\\\{\", \"captures\": { \"0\": { \"name\": \"punctuation.section.scope.ruby\" } }, \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"#nest_curly_and_self\" }] }, { \"include\": \"$self\" }] } } }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.variable.ruby\" } }, \"match\": \"(#@)[a-zA-Z_]\\\\w*\", \"name\": \"variable.other.readwrite.instance.ruby\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.variable.ruby\" } }, \"match\": \"(#@@)[a-zA-Z_]\\\\w*\", \"name\": \"variable.other.readwrite.class.ruby\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.variable.ruby\" } }, \"match\": \"(#\\\\$)[a-zA-Z_]\\\\w*\", \"name\": \"variable.other.readwrite.global.ruby\" }] }, \"percent_literals\": { \"patterns\": [{ \"begin\": \"%i(?:([(\\\\[{<])|([^\\\\w\\\\s]|_))\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.array.begin.ruby\" } }, \"end\": \"[)\\\\]}>]\\\\2|\\\\1\\\\2\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.array.end.ruby\" } }, \"name\": \"meta.array.symbol.ruby\", \"patterns\": [{ \"begin\": \"\\\\G(?<=\\\\()(?!\\\\))\", \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#parens\" }, { \"include\": \"#symbol\" }] }, { \"begin\": \"\\\\G(?<=\\\\[)(?!\\\\])\", \"end\": \"(?=\\\\])\", \"patterns\": [{ \"include\": \"#brackets\" }, { \"include\": \"#symbol\" }] }, { \"begin\": \"\\\\G(?<=\\\\{)(?!\\\\})\", \"end\": \"(?=\\\\})\", \"patterns\": [{ \"include\": \"#braces\" }, { \"include\": \"#symbol\" }] }, { \"begin\": \"\\\\G(?<=<)(?!>)\", \"end\": \"(?=>)\", \"patterns\": [{ \"include\": \"#angles\" }, { \"include\": \"#symbol\" }] }, { \"include\": \"#symbol\" }], \"repository\": { \"angles\": { \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"constant.character.escape.ruby\" } }, \"match\": \"\\\\\\\\<|\\\\\\\\>\", \"name\": \"constant.other.symbol.ruby\" }, { \"begin\": \"<\", \"captures\": { \"0\": { \"name\": \"constant.other.symbol.ruby\" } }, \"end\": \">\", \"patterns\": [{ \"include\": \"#angles\" }, { \"include\": \"#symbol\" }] }] }, \"braces\": { \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"constant.character.escape.ruby\" } }, \"match\": \"\\\\\\\\\\\\{|\\\\\\\\\\\\}\", \"name\": \"constant.other.symbol.ruby\" }, { \"begin\": \"\\\\{\", \"captures\": { \"0\": { \"name\": \"constant.other.symbol.ruby\" } }, \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"#braces\" }, { \"include\": \"#symbol\" }] }] }, \"brackets\": { \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"constant.character.escape.ruby\" } }, \"match\": \"\\\\\\\\\\\\[|\\\\\\\\\\\\]\", \"name\": \"constant.other.symbol.ruby\" }, { \"begin\": \"\\\\[\", \"captures\": { \"0\": { \"name\": \"constant.other.symbol.ruby\" } }, \"end\": \"\\\\]\", \"patterns\": [{ \"include\": \"#brackets\" }, { \"include\": \"#symbol\" }] }] }, \"parens\": { \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"constant.character.escape.ruby\" } }, \"match\": \"\\\\\\\\\\\\(|\\\\\\\\\\\\)\", \"name\": \"constant.other.symbol.ruby\" }, { \"begin\": \"\\\\(\", \"captures\": { \"0\": { \"name\": \"constant.other.symbol.ruby\" } }, \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"#parens\" }, { \"include\": \"#symbol\" }] }] }, \"symbol\": { \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"constant.character.escape.ruby\" } }, \"match\": \"\\\\\\\\\\\\\\\\|\\\\\\\\[ ]\", \"name\": \"constant.other.symbol.ruby\" }, { \"match\": \"\\\\S\\\\w*\", \"name\": \"constant.other.symbol.ruby\" }] } } }, { \"begin\": \"%I(?:([(\\\\[{<])|([^\\\\w\\\\s]|_))\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.array.begin.ruby\" } }, \"end\": \"[)\\\\]}>]\\\\2|\\\\1\\\\2\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.array.end.ruby\" } }, \"name\": \"meta.array.symbol.interpolated.ruby\", \"patterns\": [{ \"begin\": \"\\\\G(?<=\\\\()(?!\\\\))\", \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#parens\" }, { \"include\": \"#symbol\" }] }, { \"begin\": \"\\\\G(?<=\\\\[)(?!\\\\])\", \"end\": \"(?=\\\\])\", \"patterns\": [{ \"include\": \"#brackets\" }, { \"include\": \"#symbol\" }] }, { \"begin\": \"\\\\G(?<=\\\\{)(?!\\\\})\", \"end\": \"(?=\\\\})\", \"patterns\": [{ \"include\": \"#braces\" }, { \"include\": \"#symbol\" }] }, { \"begin\": \"\\\\G(?<=<)(?!>)\", \"end\": \"(?=>)\", \"patterns\": [{ \"include\": \"#angles\" }, { \"include\": \"#symbol\" }] }, { \"include\": \"#symbol\" }], \"repository\": { \"angles\": { \"patterns\": [{ \"begin\": \"<\", \"captures\": { \"0\": { \"name\": \"constant.other.symbol.ruby\" } }, \"end\": \">\", \"patterns\": [{ \"include\": \"#angles\" }, { \"include\": \"#symbol\" }] }] }, \"braces\": { \"patterns\": [{ \"begin\": \"\\\\{\", \"captures\": { \"0\": { \"name\": \"constant.other.symbol.ruby\" } }, \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"#braces\" }, { \"include\": \"#symbol\" }] }] }, \"brackets\": { \"patterns\": [{ \"begin\": \"\\\\[\", \"captures\": { \"0\": { \"name\": \"constant.other.symbol.ruby\" } }, \"end\": \"\\\\]\", \"patterns\": [{ \"include\": \"#brackets\" }, { \"include\": \"#symbol\" }] }] }, \"parens\": { \"patterns\": [{ \"begin\": \"\\\\(\", \"captures\": { \"0\": { \"name\": \"constant.other.symbol.ruby\" } }, \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"#parens\" }, { \"include\": \"#symbol\" }] }] }, \"symbol\": { \"patterns\": [{ \"begin\": \"(?=\\\\\\\\|#\\\\{)\", \"end\": \"(?!\\\\G)\", \"name\": \"constant.other.symbol.ruby\", \"patterns\": [{ \"include\": \"#escaped_char\" }, { \"include\": \"#interpolated_ruby\" }] }, { \"match\": \"\\\\S\\\\w*\", \"name\": \"constant.other.symbol.ruby\" }] } } }, { \"begin\": \"%q(?:([(\\\\[{<])|([^\\\\w\\\\s]|_))\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"end\": \"[)\\\\]}>]\\\\2|\\\\1\\\\2\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.quoted.other.ruby\", \"patterns\": [{ \"begin\": \"\\\\G(?<=\\\\()(?!\\\\))\", \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#parens\" }] }, { \"begin\": \"\\\\G(?<=\\\\[)(?!\\\\])\", \"end\": \"(?=\\\\])\", \"patterns\": [{ \"include\": \"#brackets\" }] }, { \"begin\": \"\\\\G(?<=\\\\{)(?!\\\\})\", \"end\": \"(?=\\\\})\", \"patterns\": [{ \"include\": \"#braces\" }] }, { \"begin\": \"\\\\G(?<=<)(?!>)\", \"end\": \"(?=>)\", \"patterns\": [{ \"include\": \"#angles\" }] }], \"repository\": { \"angles\": { \"patterns\": [{ \"match\": \"\\\\\\\\<|\\\\\\\\>|\\\\\\\\\\\\\\\\\", \"name\": \"constant.character.escape.ruby\" }, { \"begin\": \"<\", \"end\": \">\", \"patterns\": [{ \"include\": \"#angles\" }] }] }, \"braces\": { \"patterns\": [{ \"match\": \"\\\\\\\\\\\\{|\\\\\\\\\\\\}|\\\\\\\\\\\\\\\\\", \"name\": \"constant.character.escape.ruby\" }, { \"begin\": \"\\\\{\", \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"#braces\" }] }] }, \"brackets\": { \"patterns\": [{ \"match\": \"\\\\\\\\\\\\[|\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\\", \"name\": \"constant.character.escape.ruby\" }, { \"begin\": \"\\\\[\", \"end\": \"\\\\]\", \"patterns\": [{ \"include\": \"#brackets\" }] }] }, \"parens\": { \"patterns\": [{ \"match\": \"\\\\\\\\\\\\(|\\\\\\\\\\\\)|\\\\\\\\\\\\\\\\\", \"name\": \"constant.character.escape.ruby\" }, { \"begin\": \"\\\\(\", \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"#parens\" }] }] } } }, { \"begin\": \"%Q?(?:([(\\\\[{<])|([^\\\\w\\\\s=]|_))\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"end\": \"[)\\\\]}>]\\\\2|\\\\1\\\\2\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.quoted.other.interpolated.ruby\", \"patterns\": [{ \"begin\": \"\\\\G(?<=\\\\()(?!\\\\))\", \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#parens\" }] }, { \"begin\": \"\\\\G(?<=\\\\[)(?!\\\\])\", \"end\": \"(?=\\\\])\", \"patterns\": [{ \"include\": \"#brackets\" }] }, { \"begin\": \"\\\\G(?<=\\\\{)(?!\\\\})\", \"end\": \"(?=\\\\})\", \"patterns\": [{ \"include\": \"#braces\" }] }, { \"begin\": \"\\\\G(?<=<)(?!>)\", \"end\": \"(?=>)\", \"patterns\": [{ \"include\": \"#angles\" }] }, { \"include\": \"#escaped_char\" }, { \"include\": \"#interpolated_ruby\" }], \"repository\": { \"angles\": { \"patterns\": [{ \"include\": \"#escaped_char\" }, { \"include\": \"#interpolated_ruby\" }, { \"begin\": \"<\", \"end\": \">\", \"patterns\": [{ \"include\": \"#angles\" }] }] }, \"braces\": { \"patterns\": [{ \"include\": \"#escaped_char\" }, { \"include\": \"#interpolated_ruby\" }, { \"begin\": \"\\\\{\", \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"#braces\" }] }] }, \"brackets\": { \"patterns\": [{ \"include\": \"#escaped_char\" }, { \"include\": \"#interpolated_ruby\" }, { \"begin\": \"\\\\[\", \"end\": \"\\\\]\", \"patterns\": [{ \"include\": \"#brackets\" }] }] }, \"parens\": { \"patterns\": [{ \"include\": \"#escaped_char\" }, { \"include\": \"#interpolated_ruby\" }, { \"begin\": \"\\\\(\", \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"#parens\" }] }] } } }, { \"begin\": \"%r(?:([(\\\\[{<])|([^\\\\w\\\\s]|_))\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"end\": \"([)\\\\]}>]\\\\2|\\\\1\\\\2)[eimnosux]*\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.regexp.percent.ruby\", \"patterns\": [{ \"begin\": \"\\\\G(?<=\\\\()(?!\\\\))\", \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#parens\" }] }, { \"begin\": \"\\\\G(?<=\\\\[)(?!\\\\])\", \"end\": \"(?=\\\\])\", \"patterns\": [{ \"include\": \"#brackets\" }] }, { \"begin\": \"\\\\G(?<=\\\\{)(?!\\\\})\", \"end\": \"(?=\\\\})\", \"patterns\": [{ \"include\": \"#braces\" }] }, { \"begin\": \"\\\\G(?<=<)(?!>)\", \"end\": \"(?=>)\", \"patterns\": [{ \"include\": \"#angles\" }] }, { \"include\": \"#regex_sub\" }], \"repository\": { \"angles\": { \"patterns\": [{ \"include\": \"#regex_sub\" }, { \"begin\": \"<\", \"end\": \">\", \"patterns\": [{ \"include\": \"#angles\" }] }] }, \"braces\": { \"patterns\": [{ \"include\": \"#regex_sub\" }, { \"begin\": \"\\\\{\", \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"#braces\" }] }] }, \"brackets\": { \"patterns\": [{ \"include\": \"#regex_sub\" }, { \"begin\": \"\\\\[\", \"end\": \"\\\\]\", \"patterns\": [{ \"include\": \"#brackets\" }] }] }, \"parens\": { \"patterns\": [{ \"include\": \"#regex_sub\" }, { \"begin\": \"\\\\(\", \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"#parens\" }] }] } } }, { \"begin\": \"%s(?:([(\\\\[{<])|([^\\\\w\\\\s]|_))\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.constant.begin.ruby\" } }, \"end\": \"[)\\\\]}>]\\\\2|\\\\1\\\\2\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.constant.end.ruby\" } }, \"name\": \"constant.other.symbol.percent.ruby\", \"patterns\": [{ \"begin\": \"\\\\G(?<=\\\\()(?!\\\\))\", \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#parens\" }] }, { \"begin\": \"\\\\G(?<=\\\\[)(?!\\\\])\", \"end\": \"(?=\\\\])\", \"patterns\": [{ \"include\": \"#brackets\" }] }, { \"begin\": \"\\\\G(?<=\\\\{)(?!\\\\})\", \"end\": \"(?=\\\\})\", \"patterns\": [{ \"include\": \"#braces\" }] }, { \"begin\": \"\\\\G(?<=<)(?!>)\", \"end\": \"(?=>)\", \"patterns\": [{ \"include\": \"#angles\" }] }], \"repository\": { \"angles\": { \"patterns\": [{ \"match\": \"\\\\\\\\<|\\\\\\\\>|\\\\\\\\\\\\\\\\\", \"name\": \"constant.character.escape.ruby\" }, { \"begin\": \"<\", \"end\": \">\", \"patterns\": [{ \"include\": \"#angles\" }] }] }, \"braces\": { \"patterns\": [{ \"match\": \"\\\\\\\\\\\\{|\\\\\\\\\\\\}|\\\\\\\\\\\\\\\\\", \"name\": \"constant.character.escape.ruby\" }, { \"begin\": \"\\\\{\", \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"#braces\" }] }] }, \"brackets\": { \"patterns\": [{ \"match\": \"\\\\\\\\\\\\[|\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\\", \"name\": \"constant.character.escape.ruby\" }, { \"begin\": \"\\\\[\", \"end\": \"\\\\]\", \"patterns\": [{ \"include\": \"#brackets\" }] }] }, \"parens\": { \"patterns\": [{ \"match\": \"\\\\\\\\\\\\(|\\\\\\\\\\\\)|\\\\\\\\\\\\\\\\\", \"name\": \"constant.character.escape.ruby\" }, { \"begin\": \"\\\\(\", \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"#parens\" }] }] } } }, { \"begin\": \"%w(?:([(\\\\[{<])|([^\\\\w\\\\s]|_))\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.array.begin.ruby\" } }, \"end\": \"[)\\\\]}>]\\\\2|\\\\1\\\\2\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.array.end.ruby\" } }, \"name\": \"meta.array.string.ruby\", \"patterns\": [{ \"begin\": \"\\\\G(?<=\\\\()(?!\\\\))\", \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#parens\" }, { \"include\": \"#string\" }] }, { \"begin\": \"\\\\G(?<=\\\\[)(?!\\\\])\", \"end\": \"(?=\\\\])\", \"patterns\": [{ \"include\": \"#brackets\" }, { \"include\": \"#string\" }] }, { \"begin\": \"\\\\G(?<=\\\\{)(?!\\\\})\", \"end\": \"(?=\\\\})\", \"patterns\": [{ \"include\": \"#braces\" }, { \"include\": \"#string\" }] }, { \"begin\": \"\\\\G(?<=<)(?!>)\", \"end\": \"(?=>)\", \"patterns\": [{ \"include\": \"#angles\" }, { \"include\": \"#string\" }] }, { \"include\": \"#string\" }], \"repository\": { \"angles\": { \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"constant.character.escape.ruby\" } }, \"match\": \"\\\\\\\\<|\\\\\\\\>\", \"name\": \"string.other.ruby\" }, { \"begin\": \"<\", \"captures\": { \"0\": { \"name\": \"string.other.ruby\" } }, \"end\": \">\", \"patterns\": [{ \"include\": \"#angles\" }, { \"include\": \"#string\" }] }] }, \"braces\": { \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"constant.character.escape.ruby\" } }, \"match\": \"\\\\\\\\\\\\{|\\\\\\\\\\\\}\", \"name\": \"string.other.ruby\" }, { \"begin\": \"\\\\{\", \"captures\": { \"0\": { \"name\": \"string.other.ruby\" } }, \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"#braces\" }, { \"include\": \"#string\" }] }] }, \"brackets\": { \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"constant.character.escape.ruby\" } }, \"match\": \"\\\\\\\\\\\\[|\\\\\\\\\\\\]\", \"name\": \"string.other.ruby\" }, { \"begin\": \"\\\\[\", \"captures\": { \"0\": { \"name\": \"string.other.ruby\" } }, \"end\": \"\\\\]\", \"patterns\": [{ \"include\": \"#brackets\" }, { \"include\": \"#string\" }] }] }, \"parens\": { \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"constant.character.escape.ruby\" } }, \"match\": \"\\\\\\\\\\\\(|\\\\\\\\\\\\)\", \"name\": \"string.other.ruby\" }, { \"begin\": \"\\\\(\", \"captures\": { \"0\": { \"name\": \"string.other.ruby\" } }, \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"#parens\" }, { \"include\": \"#string\" }] }] }, \"string\": { \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"constant.character.escape.ruby\" } }, \"match\": \"\\\\\\\\\\\\\\\\|\\\\\\\\[ ]\", \"name\": \"string.other.ruby\" }, { \"match\": \"\\\\S\\\\w*\", \"name\": \"string.other.ruby\" }] } } }, { \"begin\": \"%W(?:([(\\\\[{<])|([^\\\\w\\\\s]|_))\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.array.begin.ruby\" } }, \"end\": \"[)\\\\]}>]\\\\2|\\\\1\\\\2\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.array.end.ruby\" } }, \"name\": \"meta.array.string.interpolated.ruby\", \"patterns\": [{ \"begin\": \"\\\\G(?<=\\\\()(?!\\\\))\", \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#parens\" }, { \"include\": \"#string\" }] }, { \"begin\": \"\\\\G(?<=\\\\[)(?!\\\\])\", \"end\": \"(?=\\\\])\", \"patterns\": [{ \"include\": \"#brackets\" }, { \"include\": \"#string\" }] }, { \"begin\": \"\\\\G(?<=\\\\{)(?!\\\\})\", \"end\": \"(?=\\\\})\", \"patterns\": [{ \"include\": \"#braces\" }, { \"include\": \"#string\" }] }, { \"begin\": \"\\\\G(?<=<)(?!>)\", \"end\": \"(?=>)\", \"patterns\": [{ \"include\": \"#angles\" }, { \"include\": \"#string\" }] }, { \"include\": \"#string\" }], \"repository\": { \"angles\": { \"patterns\": [{ \"begin\": \"<\", \"captures\": { \"0\": { \"name\": \"string.other.ruby\" } }, \"end\": \">\", \"patterns\": [{ \"include\": \"#angles\" }, { \"include\": \"#string\" }] }] }, \"braces\": { \"patterns\": [{ \"begin\": \"\\\\{\", \"captures\": { \"0\": { \"name\": \"string.other.ruby\" } }, \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"#braces\" }, { \"include\": \"#string\" }] }] }, \"brackets\": { \"patterns\": [{ \"begin\": \"\\\\[\", \"captures\": { \"0\": { \"name\": \"string.other.ruby\" } }, \"end\": \"\\\\]\", \"patterns\": [{ \"include\": \"#brackets\" }, { \"include\": \"#string\" }] }] }, \"parens\": { \"patterns\": [{ \"begin\": \"\\\\(\", \"captures\": { \"0\": { \"name\": \"string.other.ruby\" } }, \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"#parens\" }, { \"include\": \"#string\" }] }] }, \"string\": { \"patterns\": [{ \"begin\": \"(?=\\\\\\\\|#\\\\{)\", \"end\": \"(?!\\\\G)\", \"name\": \"string.other.ruby\", \"patterns\": [{ \"include\": \"#escaped_char\" }, { \"include\": \"#interpolated_ruby\" }] }, { \"match\": \"\\\\S\\\\w*\", \"name\": \"string.other.ruby\" }] } } }, { \"begin\": \"%x(?:([(\\\\[{<])|([^\\\\w\\\\s]|_))\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"end\": \"[)\\\\]}>]\\\\2|\\\\1\\\\2\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.interpolated.percent.ruby\", \"patterns\": [{ \"begin\": \"\\\\G(?<=\\\\()(?!\\\\))\", \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#parens\" }] }, { \"begin\": \"\\\\G(?<=\\\\[)(?!\\\\])\", \"end\": \"(?=\\\\])\", \"patterns\": [{ \"include\": \"#brackets\" }] }, { \"begin\": \"\\\\G(?<=\\\\{)(?!\\\\})\", \"end\": \"(?=\\\\})\", \"patterns\": [{ \"include\": \"#braces\" }] }, { \"begin\": \"\\\\G(?<=<)(?!>)\", \"end\": \"(?=>)\", \"patterns\": [{ \"include\": \"#angles\" }] }, { \"include\": \"#escaped_char\" }, { \"include\": \"#interpolated_ruby\" }], \"repository\": { \"angles\": { \"patterns\": [{ \"include\": \"#escaped_char\" }, { \"include\": \"#interpolated_ruby\" }, { \"begin\": \"<\", \"end\": \">\", \"patterns\": [{ \"include\": \"#angles\" }] }] }, \"braces\": { \"patterns\": [{ \"include\": \"#escaped_char\" }, { \"include\": \"#interpolated_ruby\" }, { \"begin\": \"\\\\{\", \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"#braces\" }] }] }, \"brackets\": { \"patterns\": [{ \"include\": \"#escaped_char\" }, { \"include\": \"#interpolated_ruby\" }, { \"begin\": \"\\\\[\", \"end\": \"\\\\]\", \"patterns\": [{ \"include\": \"#brackets\" }] }] }, \"parens\": { \"patterns\": [{ \"include\": \"#escaped_char\" }, { \"include\": \"#interpolated_ruby\" }, { \"begin\": \"\\\\(\", \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"#parens\" }] }] } } }] }, \"regex_sub\": { \"patterns\": [{ \"include\": \"#interpolated_ruby\" }, { \"include\": \"#escaped_char\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.quantifier.begin.ruby\" }, \"3\": { \"name\": \"punctuation.definition.quantifier.end.ruby\" } }, \"match\": \"(\\\\{)\\\\d+(,\\\\d+)?(\\\\})\", \"name\": \"keyword.operator.quantifier.ruby\" }, { \"begin\": \"\\\\[\\\\^?\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.character-class.begin.ruby\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.character-class.end.ruby\" } }, \"name\": \"constant.other.character-class.set.ruby\", \"patterns\": [{ \"include\": \"#escaped_char\" }] }, { \"begin\": \"\\\\(\\\\?#\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.begin.ruby\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.end.ruby\" } }, \"name\": \"comment.line.number-sign.ruby\", \"patterns\": [{ \"include\": \"#escaped_char\" }] }, { \"begin\": \"\\\\(\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.group.ruby\" } }, \"end\": \"\\\\)\", \"name\": \"meta.group.regexp.ruby\", \"patterns\": [{ \"include\": \"#regex_sub\" }] }, { \"begin\": \"(?<=^|\\\\s)(#)\\\\s(?=[[a-zA-Z0-9,. \\\\t?!-][^\\\\x{00}-\\\\x{7F}]]*$)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.comment.ruby\" } }, \"comment\": \"We are restrictive in what we allow to go after the comment character to avoid false positives, since the availability of comments depend on regexp flags.\", \"end\": \"$\\\\n?\", \"name\": \"comment.line.number-sign.ruby\" }] } }, \"scopeName\": \"source.ruby\", \"embeddedLangs\": [\"html\", \"xml\", \"sql\", \"css\", \"c\", \"javascript\", \"shellscript\", \"lua\"], \"aliases\": [\"rb\"] });\nvar ruby = [\n  ...html,\n  ...xml,\n  ...sql,\n  ...css,\n  ...c,\n  ...javascript,\n  ...shellscript,\n  ...lua,\n  lang\n];\n\nexport { ruby as default };\n","import java from './java.mjs';\n\nconst lang = Object.freeze({ \"displayName\": \"XML\", \"name\": \"xml\", \"patterns\": [{ \"begin\": \"(<\\\\?)\\\\s*([-_a-zA-Z0-9]+)\", \"captures\": { \"1\": { \"name\": \"punctuation.definition.tag.xml\" }, \"2\": { \"name\": \"entity.name.tag.xml\" } }, \"end\": \"(\\\\?>)\", \"name\": \"meta.tag.preprocessor.xml\", \"patterns\": [{ \"match\": \" ([a-zA-Z-]+)\", \"name\": \"entity.other.attribute-name.xml\" }, { \"include\": \"#doublequotedString\" }, { \"include\": \"#singlequotedString\" }] }, { \"begin\": \"(<!)(DOCTYPE)\\\\s+([:a-zA-Z_][:a-zA-Z0-9_.-]*)\", \"captures\": { \"1\": { \"name\": \"punctuation.definition.tag.xml\" }, \"2\": { \"name\": \"keyword.other.doctype.xml\" }, \"3\": { \"name\": \"variable.language.documentroot.xml\" } }, \"end\": \"\\\\s*(>)\", \"name\": \"meta.tag.sgml.doctype.xml\", \"patterns\": [{ \"include\": \"#internalSubset\" }] }, { \"include\": \"#comments\" }, { \"begin\": \"(<)((?:([-_a-zA-Z0-9]+)(:))?([-_a-zA-Z0-9:]+))(?=(\\\\s[^>]*)?></\\\\2>)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.xml\" }, \"2\": { \"name\": \"entity.name.tag.xml\" }, \"3\": { \"name\": \"entity.name.tag.namespace.xml\" }, \"4\": { \"name\": \"punctuation.separator.namespace.xml\" }, \"5\": { \"name\": \"entity.name.tag.localname.xml\" } }, \"end\": \"(>)(</)((?:([-_a-zA-Z0-9]+)(:))?([-_a-zA-Z0-9:]+))(>)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.xml\" }, \"2\": { \"name\": \"punctuation.definition.tag.xml\" }, \"3\": { \"name\": \"entity.name.tag.xml\" }, \"4\": { \"name\": \"entity.name.tag.namespace.xml\" }, \"5\": { \"name\": \"punctuation.separator.namespace.xml\" }, \"6\": { \"name\": \"entity.name.tag.localname.xml\" }, \"7\": { \"name\": \"punctuation.definition.tag.xml\" } }, \"name\": \"meta.tag.no-content.xml\", \"patterns\": [{ \"include\": \"#tagStuff\" }] }, { \"begin\": \"(</?)(?:([-\\\\w\\\\.]+)((:)))?([-\\\\w\\\\.:]+)\", \"captures\": { \"1\": { \"name\": \"punctuation.definition.tag.xml\" }, \"2\": { \"name\": \"entity.name.tag.namespace.xml\" }, \"3\": { \"name\": \"entity.name.tag.xml\" }, \"4\": { \"name\": \"punctuation.separator.namespace.xml\" }, \"5\": { \"name\": \"entity.name.tag.localname.xml\" } }, \"end\": \"(/?>)\", \"name\": \"meta.tag.xml\", \"patterns\": [{ \"include\": \"#tagStuff\" }] }, { \"include\": \"#entity\" }, { \"include\": \"#bare-ampersand\" }, { \"begin\": \"<%@\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.embedded.begin.xml\" } }, \"end\": \"%>\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.embedded.end.xml\" } }, \"name\": \"source.java-props.embedded.xml\", \"patterns\": [{ \"match\": \"page|include|taglib\", \"name\": \"keyword.other.page-props.xml\" }] }, { \"begin\": \"<%[!=]?(?!--)\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.embedded.begin.xml\" } }, \"end\": \"(?!--)%>\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.embedded.end.xml\" } }, \"name\": \"source.java.embedded.xml\", \"patterns\": [{ \"include\": \"source.java\" }] }, { \"begin\": \"<!\\\\[CDATA\\\\[\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.xml\" } }, \"end\": \"]]>\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.xml\" } }, \"name\": \"string.unquoted.cdata.xml\" }], \"repository\": { \"EntityDecl\": { \"begin\": \"(<!)(ENTITY)\\\\s+(%\\\\s+)?([:a-zA-Z_][:a-zA-Z0-9_.-]*)(\\\\s+(?:SYSTEM|PUBLIC)\\\\s+)?\", \"captures\": { \"1\": { \"name\": \"punctuation.definition.tag.xml\" }, \"2\": { \"name\": \"keyword.other.entity.xml\" }, \"3\": { \"name\": \"punctuation.definition.entity.xml\" }, \"4\": { \"name\": \"variable.language.entity.xml\" }, \"5\": { \"name\": \"keyword.other.entitytype.xml\" } }, \"end\": \"(>)\", \"patterns\": [{ \"include\": \"#doublequotedString\" }, { \"include\": \"#singlequotedString\" }] }, \"bare-ampersand\": { \"match\": \"&\", \"name\": \"invalid.illegal.bad-ampersand.xml\" }, \"comments\": { \"patterns\": [{ \"begin\": \"<%--\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.comment.xml\" }, \"end\": \"--%>\", \"name\": \"comment.block.xml\" } }, { \"begin\": \"<!--\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.comment.xml\" } }, \"end\": \"-->\", \"name\": \"comment.block.xml\", \"patterns\": [{ \"begin\": \"--(?!>)\", \"captures\": { \"0\": { \"name\": \"invalid.illegal.bad-comments-or-CDATA.xml\" } } }] }] }, \"doublequotedString\": { \"begin\": '\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.xml\" } }, \"end\": '\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.xml\" } }, \"name\": \"string.quoted.double.xml\", \"patterns\": [{ \"include\": \"#entity\" }, { \"include\": \"#bare-ampersand\" }] }, \"entity\": { \"captures\": { \"1\": { \"name\": \"punctuation.definition.constant.xml\" }, \"3\": { \"name\": \"punctuation.definition.constant.xml\" } }, \"match\": \"(&)([:a-zA-Z_][:a-zA-Z0-9_.-]*|#[0-9]+|#x[0-9a-fA-F]+)(;)\", \"name\": \"constant.character.entity.xml\" }, \"internalSubset\": { \"begin\": \"(\\\\[)\", \"captures\": { \"1\": { \"name\": \"punctuation.definition.constant.xml\" } }, \"end\": \"(\\\\])\", \"name\": \"meta.internalsubset.xml\", \"patterns\": [{ \"include\": \"#EntityDecl\" }, { \"include\": \"#parameterEntity\" }, { \"include\": \"#comments\" }] }, \"parameterEntity\": { \"captures\": { \"1\": { \"name\": \"punctuation.definition.constant.xml\" }, \"3\": { \"name\": \"punctuation.definition.constant.xml\" } }, \"match\": \"(%)([:a-zA-Z_][:a-zA-Z0-9_.-]*)(;)\", \"name\": \"constant.character.parameter-entity.xml\" }, \"singlequotedString\": { \"begin\": \"'\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.xml\" } }, \"end\": \"'\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.xml\" } }, \"name\": \"string.quoted.single.xml\", \"patterns\": [{ \"include\": \"#entity\" }, { \"include\": \"#bare-ampersand\" }] }, \"tagStuff\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"entity.other.attribute-name.namespace.xml\" }, \"2\": { \"name\": \"entity.other.attribute-name.xml\" }, \"3\": { \"name\": \"punctuation.separator.namespace.xml\" }, \"4\": { \"name\": \"entity.other.attribute-name.localname.xml\" } }, \"match\": \"(?:^|\\\\s+)(?:([-\\\\w.]+)((:)))?([-\\\\w.:]+)\\\\s*=\" }, { \"include\": \"#doublequotedString\" }, { \"include\": \"#singlequotedString\" }] } }, \"scopeName\": \"text.xml\", \"embeddedLangs\": [\"java\"] });\nvar xml = [\n  ...java,\n  lang\n];\n\nexport { xml as default };\n"],"x_google_ignoreList":[0,1]}