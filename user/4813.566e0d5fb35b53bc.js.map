{"version":3,"file":"4813.566e0d5fb35b53bc.js","mappings":"0HACA,IAAIA,EAAY,CADHC,OAAOC,OAAO,CAAEC,YAAe,YAAaC,UAAa,CAAC,MAAOC,mBAAsB,MAAOC,kBAAqB,mBAAoBC,KAAQ,YAAaC,SAAY,CAAC,CAAEC,MAAS,OAAQF,KAAQ,gCAAkC,CAAEE,MAAS,gBAAiBF,KAAQ,6BAA+B,CAAEE,MAAS,4BAA6BF,KAAQ,iCAAmC,CAAEE,MAAS,iCAAkCF,KAAQ,gCAAkC,CAAEE,MAAS,KAAMF,KAAQ,yCAA2C,CAAEG,QAAW,+CAAgDD,MAAS,kBAAmBF,KAAQ,kCAAoC,CAAEI,SAAY,CAAE,EAAK,CAAEJ,KAAQ,6DAA+D,EAAK,CAAEC,SAAY,CAAC,CAAEC,MAAS,OAAQF,KAAQ,iDAAoD,EAAK,CAAEA,KAAQ,4DAA+DE,MAAS,8BAAgC,CAAEE,SAAY,CAAE,EAAK,CAAEH,SAAY,CAAC,CAAEC,MAAS,QAASF,KAAQ,2CAA+CG,QAAW,4CAA6CD,MAAS,yBAA2B,CAAEG,QAAW,YAAc,CAAEH,MAAS,8CAA+CF,KAAQ,yCAA2C,CAAEE,MAAS,uBAAwBF,KAAQ,yCAA2C,CAAEE,MAAS,mDAAoDF,KAAQ,sCAAwC,CAAEG,QAAW,gDAAiDD,MAAS,qDAAsDF,KAAQ,6BAA+B,CAAEG,QAAW,wCAAyCD,MAAS,uDAAwDF,KAAQ,0CAA4C,CAAEI,SAAY,CAAE,EAAK,CAAEJ,KAAQ,0CAA4C,EAAK,CAAEA,KAAQ,6BAA+B,EAAK,CAAEA,KAAQ,qCAAwCE,MAAS,oCAAqCF,KAAQ,wBAA0B,CAAEM,MAAS,IAAKC,cAAiB,CAAC,CAAEP,KAAQ,mDAAqDQ,IAAO,IAAKC,YAAe,CAAC,CAAET,KAAQ,iDAAmDA,KAAQ,2BAA6B,CAAEE,MAAS,qBAAsBF,KAAQ,uCAAyC,CAAEE,MAAS,cAAeF,KAAQ,mCAAqC,CAAEI,SAAY,CAAE,EAAK,CAAEJ,KAAQ,8CAAiDG,QAAW,mBAAoBD,MAAS,qCAAsCF,KAAQ,qCAAuC,CAAEI,SAAY,CAAE,EAAK,CAAEJ,KAAQ,8CAAiDG,QAAW,UAAWD,MAAS,6BAA8BF,KAAQ,mCAAqC,CAAEM,MAAS,OAAQC,cAAiB,CAAC,CAAEP,KAAQ,oDAAsDQ,IAAO,MAAOC,YAAe,CAAC,CAAET,KAAQ,kDAAoDA,KAAQ,4BAA6BC,SAAY,CAAC,CAAEC,MAAS,yBAA0BF,KAAQ,sCAAwC,CAAEE,MAAS,aAAcF,KAAQ,0DAA6D,CAAEM,MAAS,OAAQC,cAAiB,CAAC,CAAEP,KAAQ,oDAAsDG,QAAW,oBAAqBK,IAAO,MAAOC,YAAe,CAAC,CAAET,KAAQ,kDAAoDA,KAAQ,kCAAoC,CAAEM,MAAS,IAAKC,cAAiB,CAAC,CAAEP,KAAQ,kDAAoDQ,IAAO,IAAKC,YAAe,CAAC,CAAET,KAAQ,gDAAkDA,KAAQ,kCAAoC,CAAEE,MAAS,kBAAmBF,KAAQ,sCAAwCU,WAAc,CAAEC,QAAW,CAAEV,SAAY,CAAC,CAAEC,MAAS,iCAAkCF,KAAQ,2CAA6C,CAAEE,MAAS,0CAA2CF,KAAQ,oCAAsC,CAAEE,MAAS,gCAAiCF,KAAQ,4CAA8C,CAAEE,MAAS,mCAAoCF,KAAQ,yCAA6CY,UAAa","names":["smalltalk","Object","freeze","displayName","fileTypes","foldingStartMarker","foldingStopMarker","name","patterns","match","comment","captures","include","begin","beginCaptures","end","endCaptures","repository","numeric","scopeName"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./node_modules/shiki/dist/langs/smalltalk.mjs"],"sourcesContent":["const lang = Object.freeze({ \"displayName\": \"Smalltalk\", \"fileTypes\": [\"st\"], \"foldingStartMarker\": \"\\\\[\", \"foldingStopMarker\": \"^\\\\s*\\\\]|^\\\\s\\\\]\", \"name\": \"smalltalk\", \"patterns\": [{ \"match\": \"\\\\$.\", \"name\": \"constant.character.smalltalk\" }, { \"match\": \"\\\\b(class)\\\\b\", \"name\": \"storage.type.$1.smalltalk\" }, { \"match\": \"\\\\b(extend|super|self)\\\\b\", \"name\": \"storage.modifier.$1.smalltalk\" }, { \"match\": \"\\\\b(yourself|new|Smalltalk)\\\\b\", \"name\": \"keyword.control.$1.smalltalk\" }, { \"match\": \":=\", \"name\": \"keyword.operator.assignment.smalltalk\" }, { \"comment\": \"Parse the variable declaration like: |a b c|\", \"match\": \"/^:\\\\w*\\\\s*\\\\|/\", \"name\": \"constant.other.block.smalltalk\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.instance-variables.begin.smalltalk\" }, \"2\": { \"patterns\": [{ \"match\": \"\\\\w+\", \"name\": \"support.type.variable.declaration.smalltalk\" }] }, \"3\": { \"name\": \"punctuation.definition.instance-variables.end.smalltalk\" } }, \"match\": \"(\\\\|)(\\\\s*\\\\w[\\\\w ]*)(\\\\|)\" }, { \"captures\": { \"1\": { \"patterns\": [{ \"match\": \":\\\\w+\", \"name\": \"entity.name.function.block.smalltalk\" }] } }, \"comment\": \"Parse the blocks like: [ :a :b | ...... ]\", \"match\": \"\\\\[((\\\\s+|:\\\\w+)*)\\\\|\" }, { \"include\": \"#numeric\" }, { \"match\": \"<(?!<|=)|>(?!<|=|>)|<=|>=|=|==|~=|~~|>>|\\\\^\", \"name\": \"keyword.operator.comparison.smalltalk\" }, { \"match\": \"(\\\\*|\\\\+|\\\\-|/|\\\\\\\\)\", \"name\": \"keyword.operator.arithmetic.smalltalk\" }, { \"match\": \"(?<=[ \\\\t])!+|\\\\bnot\\\\b|&|\\\\band\\\\b|\\\\||\\\\bor\\\\b\", \"name\": \"keyword.operator.logical.smalltalk\" }, { \"comment\": \"Fake reserved word -> main Smalltalk messages\", \"match\": \"(?<!\\\\.)\\\\b(ensure|resume|retry|signal)\\\\b(?![?!])\", \"name\": \"keyword.control.smalltalk\" }, { \"comment\": \"Fake conditionals. Smalltalk Methods.\", \"match\": \"ifCurtailed:|ifTrue:|ifFalse:|whileFalse:|whileTrue:\", \"name\": \"keyword.control.conditionals.smalltalk\" }, { \"captures\": { \"1\": { \"name\": \"entity.other.inherited-class.smalltalk\" }, \"3\": { \"name\": \"keyword.control.smalltalk\" }, \"4\": { \"name\": \"entity.name.type.class.smalltalk\" } }, \"match\": \"(\\\\w+)(\\\\s+(subclass:))\\\\s*(\\\\w*)\", \"name\": \"meta.class.smalltalk\" }, { \"begin\": '\"', \"beginCaptures\": [{ \"name\": \"punctuation.definition.comment.begin.smalltalk\" }], \"end\": '\"', \"endCaptures\": [{ \"name\": \"punctuation.definition.comment.end.smalltalk\" }], \"name\": \"comment.block.smalltalk\" }, { \"match\": \"\\\\b(true|false)\\\\b\", \"name\": \"constant.language.boolean.smalltalk\" }, { \"match\": \"\\\\b(nil)\\\\b\", \"name\": \"constant.language.nil.smalltalk\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.constant.smalltalk\" } }, \"comment\": \"messages/methods\", \"match\": \"(?>[a-zA-Z_]\\\\w*(?>[?!])?)(:)(?!:)\", \"name\": \"constant.other.messages.smalltalk\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.constant.smalltalk\" } }, \"comment\": \"symbols\", \"match\": \"(#)[a-zA-Z_][a-zA-Z0-9_:]*\", \"name\": \"constant.other.symbol.smalltalk\" }, { \"begin\": \"#\\\\[\", \"beginCaptures\": [{ \"name\": \"punctuation.definition.constant.begin.smalltalk\" }], \"end\": \"\\\\]\", \"endCaptures\": [{ \"name\": \"punctuation.definition.constant.end.smalltalk\" }], \"name\": \"meta.array.byte.smalltalk\", \"patterns\": [{ \"match\": \"[0-9]+(r[a-zA-Z0-9]+)?\", \"name\": \"constant.numeric.integer.smalltalk\" }, { \"match\": \"[^\\\\s\\\\]]+\", \"name\": \"invalid.illegal.character-not-allowed-here.smalltalk\" }] }, { \"begin\": \"#\\\\(\", \"beginCaptures\": [{ \"name\": \"punctuation.definition.constant.begin.smalltalk\" }], \"comment\": \"Array Constructor\", \"end\": \"\\\\)\", \"endCaptures\": [{ \"name\": \"punctuation.definition.constant.end.smalltalk\" }], \"name\": \"constant.other.array.smalltalk\" }, { \"begin\": \"'\", \"beginCaptures\": [{ \"name\": \"punctuation.definition.string.begin.smalltalk\" }], \"end\": \"'\", \"endCaptures\": [{ \"name\": \"punctuation.definition.string.end.smalltalk\" }], \"name\": \"string.quoted.single.smalltalk\" }, { \"match\": \"\\\\b[A-Z]\\\\w*\\\\b\", \"name\": \"variable.other.constant.smalltalk\" }], \"repository\": { \"numeric\": { \"patterns\": [{ \"match\": \"(?<!\\\\w)[0-9]+\\\\.[0-9]+s[0-9]*\", \"name\": \"constant.numeric.float.scaled.smalltalk\" }, { \"match\": \"(?<!\\\\w)[0-9]+\\\\.[0-9]+([edq]-?[0-9]+)?\", \"name\": \"constant.numeric.float.smalltalk\" }, { \"match\": \"(?<!\\\\w)-?[0-9]+r[a-zA-Z0-9]+\", \"name\": \"constant.numeric.integer.radix.smalltalk\" }, { \"match\": \"(?<!\\\\w)-?[0-9]+([edq]-?[0-9]+)?\", \"name\": \"constant.numeric.integer.smalltalk\" }] } }, \"scopeName\": \"source.smalltalk\" });\nvar smalltalk = [\n  lang\n];\n\nexport { smalltalk as default };\n"],"x_google_ignoreList":[0]}