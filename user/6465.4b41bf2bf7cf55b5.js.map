{"version":3,"file":"6465.4b41bf2bf7cf55b5.js","mappings":"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","names":["lang","Object","freeze","displayName","injections","comment","patterns","match","name","include","begin","beginCaptures","end","endCaptures","scopeName","embeddedLangs","html_derivative","html","repository","anchor","block","while","captures","blocks","body","bold","citation","applyEndPatternLast","doctest","domains","escaped","footnote","ignore","italic","list","literal","macro","monospaced","ref","reference","substitution","table","title","rst","cpp","python","javascript","shellscript","yaml","cmake","ruby","fileTypes","firstLineMatch","contentName","directive","node","property","prototype","aliases"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./node_modules/shiki/dist/langs/html-derivative.mjs","./node_modules/shiki/dist/langs/rst.mjs","./node_modules/shiki/dist/langs/yaml.mjs"],"sourcesContent":["import html from './html.mjs';\nimport './javascript.mjs';\nimport './css.mjs';\n\nconst lang = Object.freeze({ \"displayName\": \"HTML (Derivative)\", \"injections\": { \"R:text.html - (comment.block, text.html meta.embedded, meta.tag.*.*.html, meta.tag.*.*.*.html, meta.tag.*.*.*.*.html)\": { \"comment\": \"Uses R: to ensure this matches after any other injections.\", \"patterns\": [{ \"match\": \"<\", \"name\": \"invalid.illegal.bad-angle-bracket.html\" }] } }, \"name\": \"html-derivative\", \"patterns\": [{ \"include\": \"text.html.basic#core-minus-invalid\" }, { \"begin\": \"(</?)(\\\\w[^\\\\s>]*)(?<!/)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" } }, \"end\": \"((?: ?/)?>)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"name\": \"meta.tag.other.unrecognized.html.derivative\", \"patterns\": [{ \"include\": \"text.html.basic#attribute\" }] }], \"scopeName\": \"text.html.derivative\", \"embeddedLangs\": [\"html\"] });\nvar html_derivative = [\n  ...html,\n  lang\n];\n\nexport { html_derivative as default };\n","import html_derivative from './html-derivative.mjs';\nimport cpp from './cpp.mjs';\nimport python from './python.mjs';\nimport javascript from './javascript.mjs';\nimport shellscript from './shellscript.mjs';\nimport yaml from './yaml.mjs';\nimport cmake from './cmake.mjs';\nimport ruby from './ruby.mjs';\nimport './html.mjs';\nimport './css.mjs';\nimport './cpp-macro.mjs';\nimport './regexp.mjs';\nimport './glsl.mjs';\nimport './c.mjs';\nimport './sql.mjs';\nimport './xml.mjs';\nimport './java.mjs';\nimport './lua.mjs';\n\nconst lang = Object.freeze({ \"displayName\": \"reStructuredText\", \"name\": \"rst\", \"patterns\": [{ \"include\": \"#body\" }], \"repository\": { \"anchor\": { \"match\": \"^\\\\.{2}\\\\s+(_[^:]+:)\\\\s*\", \"name\": \"entity.name.tag.anchor\" }, \"block\": { \"begin\": \"^(\\\\s*)(\\\\.{2}\\\\s+\\\\S+::)(.*)\", \"beginCaptures\": { \"2\": { \"name\": \"keyword.control\" }, \"3\": { \"name\": \"variable\" } }, \"end\": \"^(?!\\\\1\\\\s|\\\\s*$)\", \"patterns\": [{ \"include\": \"#block-param\" }, { \"include\": \"#body\" }] }, \"block-comment\": { \"begin\": \"^(\\\\s*)\\\\.{2}(\\\\s+|$)\", \"end\": \"^(?=\\\\S)|^\\\\s*$\", \"name\": \"comment.block\", \"patterns\": [{ \"begin\": \"^\\\\s{3,}(?=\\\\S)\", \"name\": \"comment.block\", \"while\": \"^\\\\s{3}.*|^\\\\s*$\" }] }, \"block-param\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"keyword.control\" }, \"2\": { \"name\": \"variable.parameter\" } }, \"match\": \"(:param\\\\s+(.+?):)(?:\\\\s|$)\" }, { \"captures\": { \"1\": { \"name\": \"keyword.control\" }, \"2\": { \"patterns\": [{ \"match\": \"\\\\b(0x[a-fA-F\\\\d]+|\\\\d+)\\\\b\", \"name\": \"constant.numeric\" }, { \"include\": \"#inline-markup\" }] } }, \"match\": \"(:.+?:)(?:$|\\\\s+(.*))\" }] }, \"blocks\": { \"patterns\": [{ \"include\": \"#domains\" }, { \"include\": \"#doctest\" }, { \"include\": \"#code-block-cpp\" }, { \"include\": \"#code-block-py\" }, { \"include\": \"#code-block-console\" }, { \"include\": \"#code-block-javascript\" }, { \"include\": \"#code-block-yaml\" }, { \"include\": \"#code-block-cmake\" }, { \"include\": \"#code-block-kconfig\" }, { \"include\": \"#code-block-ruby\" }, { \"include\": \"#code-block-dts\" }, { \"include\": \"#code-block\" }, { \"include\": \"#doctest-block\" }, { \"include\": \"#raw-html\" }, { \"include\": \"#block\" }, { \"include\": \"#literal-block\" }, { \"include\": \"#block-comment\" }] }, \"body\": { \"patterns\": [{ \"include\": \"#title\" }, { \"include\": \"#inline-markup\" }, { \"include\": \"#anchor\" }, { \"include\": \"#line-block\" }, { \"include\": \"#replace-include\" }, { \"include\": \"#footnote\" }, { \"include\": \"#substitution\" }, { \"include\": \"#blocks\" }, { \"include\": \"#table\" }, { \"include\": \"#simple-table\" }, { \"include\": \"#options-list\" }] }, \"bold\": { \"begin\": `(?<=[\\\\s\"'(\\\\[{<]|^)\\\\*{2}[^\\\\s*]`, \"end\": \"\\\\*{2}|^\\\\s*$\", \"name\": \"markup.bold\" }, \"citation\": { \"applyEndPatternLast\": 0, \"begin\": \"(?<=[\\\\s\\\"'(\\\\[{<]|^)`[^\\\\s`]\", \"end\": \"`_{,2}|^\\\\s*$\", \"name\": \"entity.name.tag\" }, \"code-block\": { \"begin\": \"^(\\\\s*)(\\\\.{2}\\\\s+(code|code-block)::)\", \"beginCaptures\": { \"2\": { \"name\": \"keyword.control\" } }, \"patterns\": [{ \"include\": \"#block-param\" }], \"while\": \"^\\\\1(?=\\\\s)|^\\\\s*$\" }, \"code-block-cmake\": { \"begin\": \"^(\\\\s*)(\\\\.{2}\\\\s+(code|code-block)::)\\\\s*(cmake)\\\\s*$\", \"beginCaptures\": { \"2\": { \"name\": \"keyword.control\" }, \"4\": { \"name\": \"variable.parameter.codeblock.cmake\" } }, \"patterns\": [{ \"include\": \"#block-param\" }, { \"include\": \"source.cmake\" }], \"while\": \"^\\\\1(?=\\\\s)|^\\\\s*$\" }, \"code-block-console\": { \"begin\": \"^(\\\\s*)(\\\\.{2}\\\\s+(code|code-block)::)\\\\s*(console|shell|bash)\\\\s*$\", \"beginCaptures\": { \"2\": { \"name\": \"keyword.control\" }, \"4\": { \"name\": \"variable.parameter.codeblock.console\" } }, \"patterns\": [{ \"include\": \"#block-param\" }, { \"include\": \"source.shell\" }], \"while\": \"^\\\\1(?=\\\\s)|^\\\\s*$\" }, \"code-block-cpp\": { \"begin\": \"^(\\\\s*)(\\\\.{2}\\\\s+(code|code-block)::)\\\\s*(c|c\\\\+\\\\+|cpp|C|C\\\\+\\\\+|CPP|Cpp)\\\\s*$\", \"beginCaptures\": { \"2\": { \"name\": \"keyword.control\" }, \"4\": { \"name\": \"variable.parameter.codeblock.cpp\" } }, \"patterns\": [{ \"include\": \"#block-param\" }, { \"include\": \"source.cpp\" }], \"while\": \"^\\\\1(?=\\\\s)|^\\\\s*$\" }, \"code-block-dts\": { \"begin\": \"^(\\\\s*)(\\\\.{2}\\\\s+(code|code-block)::)\\\\s*(dts|DTS|devicetree)\\\\s*$\", \"beginCaptures\": { \"2\": { \"name\": \"keyword.control\" }, \"4\": { \"name\": \"variable.parameter.codeblock.dts\" } }, \"patterns\": [{ \"include\": \"#block-param\" }, { \"include\": \"source.dts\" }], \"while\": \"^\\\\1(?=\\\\s)|^\\\\s*$\" }, \"code-block-javascript\": { \"begin\": \"^(\\\\s*)(\\\\.{2}\\\\s+(code|code-block)::)\\\\s*(javascript)\\\\s*$\", \"beginCaptures\": { \"2\": { \"name\": \"keyword.control\" }, \"4\": { \"name\": \"variable.parameter.codeblock.js\" } }, \"patterns\": [{ \"include\": \"#block-param\" }, { \"include\": \"source.js\" }], \"while\": \"^\\\\1(?=\\\\s)|^\\\\s*$\" }, \"code-block-kconfig\": { \"begin\": \"^(\\\\s*)(\\\\.{2}\\\\s+(code|code-block)::)\\\\s*([kK]config)\\\\s*$\", \"beginCaptures\": { \"2\": { \"name\": \"keyword.control\" }, \"4\": { \"name\": \"variable.parameter.codeblock.kconfig\" } }, \"patterns\": [{ \"include\": \"#block-param\" }, { \"include\": \"source.kconfig\" }], \"while\": \"^\\\\1(?=\\\\s)|^\\\\s*$\" }, \"code-block-py\": { \"begin\": \"^(\\\\s*)(\\\\.{2}\\\\s+(code|code-block)::)\\\\s*(python)\\\\s*$\", \"beginCaptures\": { \"2\": { \"name\": \"keyword.control\" }, \"4\": { \"name\": \"variable.parameter.codeblock.py\" } }, \"patterns\": [{ \"include\": \"#block-param\" }, { \"include\": \"source.python\" }], \"while\": \"^\\\\1(?=\\\\s)|^\\\\s*$\" }, \"code-block-ruby\": { \"begin\": \"^(\\\\s*)(\\\\.{2}\\\\s+(code|code-block)::)\\\\s*(ruby)\\\\s*$\", \"beginCaptures\": { \"2\": { \"name\": \"keyword.control\" }, \"4\": { \"name\": \"variable.parameter.codeblock.ruby\" } }, \"patterns\": [{ \"include\": \"#block-param\" }, { \"include\": \"source.ruby\" }], \"while\": \"^\\\\1(?=\\\\s)|^\\\\s*$\" }, \"code-block-yaml\": { \"begin\": \"^(\\\\s*)(\\\\.{2}\\\\s+(code|code-block)::)\\\\s*(ya?ml)\\\\s*$\", \"beginCaptures\": { \"2\": { \"name\": \"keyword.control\" }, \"4\": { \"name\": \"variable.parameter.codeblock.yaml\" } }, \"patterns\": [{ \"include\": \"#block-param\" }, { \"include\": \"source.yaml\" }], \"while\": \"^\\\\1(?=\\\\s)|^\\\\s*$\" }, \"doctest\": { \"begin\": \"^(>>>)\\\\s*(.*)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control\" }, \"2\": { \"patterns\": [{ \"include\": \"source.python\" }] } }, \"end\": \"^\\\\s*$\" }, \"doctest-block\": { \"begin\": \"^(\\\\s*)(\\\\.{2}\\\\s+doctest::)\\\\s*$\", \"beginCaptures\": { \"2\": { \"name\": \"keyword.control\" } }, \"patterns\": [{ \"include\": \"#block-param\" }, { \"include\": \"source.python\" }], \"while\": \"^\\\\1(?=\\\\s)|^\\\\s*$\" }, \"domain-auto\": { \"begin\": \"^(\\\\s*)(\\\\.{2}\\\\s+auto(?:class|module|exception|function|decorator|data|method|attribute|property)::)\\\\s*(.*)\", \"beginCaptures\": { \"2\": { \"name\": \"keyword.control.py\" }, \"3\": { \"patterns\": [{ \"include\": \"source.python\" }] } }, \"patterns\": [{ \"include\": \"#block-param\" }, { \"include\": \"#body\" }], \"while\": \"^\\\\1(?=\\\\s)|^\\\\s*$\" }, \"domain-cpp\": { \"begin\": \"^(\\\\s*)(\\\\.{2}\\\\s+(?:cpp|c):(?:class|struct|function|member|var|type|enum|enum-struct|enum-class|enumerator|union|concept)::)\\\\s*(?:(@\\\\w+)|(.*))\", \"beginCaptures\": { \"2\": { \"name\": \"keyword.control\" }, \"3\": { \"name\": \"entity.name.tag\" }, \"4\": { \"patterns\": [{ \"include\": \"source.cpp\" }] } }, \"patterns\": [{ \"include\": \"#block-param\" }, { \"include\": \"#body\" }], \"while\": \"^\\\\1(?=\\\\s)|^\\\\s*$\" }, \"domain-js\": { \"begin\": \"^(\\\\s*)(\\\\.{2}\\\\s+js:\\\\w+::)\\\\s*(.*)\", \"beginCaptures\": { \"2\": { \"name\": \"keyword.control\" }, \"3\": { \"patterns\": [{ \"include\": \"source.js\" }] } }, \"end\": \"^(?!\\\\1[ \\\\t]|$)\", \"patterns\": [{ \"include\": \"#block-param\" }, { \"include\": \"#body\" }] }, \"domain-py\": { \"begin\": \"^(\\\\s*)(\\\\.{2}\\\\s+py:(?:module|function|data|exception|class|attribute|property|method|staticmethod|classmethod|decorator|decoratormethod)::)\\\\s*(.*)\", \"beginCaptures\": { \"2\": { \"name\": \"keyword.control\" }, \"3\": { \"patterns\": [{ \"include\": \"source.python\" }] } }, \"patterns\": [{ \"include\": \"#block-param\" }, { \"include\": \"#body\" }], \"while\": \"^\\\\1(?=\\\\s)|^\\\\s*$\" }, \"domains\": { \"patterns\": [{ \"include\": \"#domain-cpp\" }, { \"include\": \"#domain-py\" }, { \"include\": \"#domain-auto\" }, { \"include\": \"#domain-js\" }] }, \"escaped\": { \"match\": \"\\\\\\\\.\", \"name\": \"constant.character.escape\" }, \"footnote\": { \"match\": \"^\\\\s*\\\\.{2}\\\\s+\\\\[(?:[\\\\w\\\\.-]+|[#*]|#\\\\w+)\\\\]\\\\s+\", \"name\": \"entity.name.tag\" }, \"footnote-ref\": { \"match\": \"\\\\[(?:[\\\\w\\\\.-]+|[#*])\\\\]_\", \"name\": \"entity.name.tag\" }, \"ignore\": { \"patterns\": [{ \"match\": \"'[`*]+'\" }, { \"match\": \"<[`*]+>\" }, { \"match\": \"{[`*]+}\" }, { \"match\": \"\\\\([`*]+\\\\)\" }, { \"match\": \"\\\\[[`*]+\\\\]\" }, { \"match\": '\"[`*]+\"' }] }, \"inline-markup\": { \"patterns\": [{ \"include\": \"#escaped\" }, { \"include\": \"#ignore\" }, { \"include\": \"#ref\" }, { \"include\": \"#literal\" }, { \"include\": \"#monospaced\" }, { \"include\": \"#citation\" }, { \"include\": \"#bold\" }, { \"include\": \"#italic\" }, { \"include\": \"#list\" }, { \"include\": \"#macro\" }, { \"include\": \"#reference\" }, { \"include\": \"#footnote-ref\" }] }, \"italic\": { \"begin\": `(?<=[\\\\s\"'(\\\\[{<]|^)\\\\*[^\\\\s*]`, \"end\": \"\\\\*|^\\\\s*$\", \"name\": \"markup.italic\" }, \"line-block\": { \"match\": \"^\\\\|\\\\s+\", \"name\": \"keyword.control\" }, \"list\": { \"match\": \"^\\\\s*(\\\\d+\\\\.|\\\\* -|[a-zA-Z#]\\\\.|[iIvVxXmMcC]+\\\\.|\\\\(\\\\d+\\\\)|\\\\d+\\\\)|[*+-])\\\\s+\", \"name\": \"keyword.control\" }, \"literal\": { \"captures\": { \"1\": { \"name\": \"keyword.control\" }, \"2\": { \"name\": \"entity.name.tag\" } }, \"match\": \"(:\\\\S+:)(`.*?`\\\\\\\\?)\" }, \"literal-block\": { \"begin\": \"^(\\\\s*)(.*)(::)\\\\s*$\", \"beginCaptures\": { \"2\": { \"patterns\": [{ \"include\": \"#inline-markup\" }] }, \"3\": { \"name\": \"keyword.control\" } }, \"while\": \"^\\\\1(?=\\\\s)|^\\\\s*$\" }, \"macro\": { \"match\": \"\\\\|[^\\\\|]+\\\\|\", \"name\": \"entity.name.tag\" }, \"monospaced\": { \"begin\": \"(?<=[\\\\s\\\"'(\\\\[{<]|^)``[^\\\\s`]\", \"end\": \"``|^\\\\s*$\", \"name\": \"string.interpolated\" }, \"options-list\": { \"match\": \"(?:(?:^|,\\\\s+)(?:[-+]\\\\w|--?[a-zA-Z][\\\\w-]+|/\\\\w+)(?:[ =](?:\\\\w+|<[^<>]+?>))?)+(?=  |\\\\t|$)\", \"name\": \"variable.parameter\" }, \"raw-html\": { \"begin\": \"^(\\\\s*)(\\\\.{2}\\\\s+raw\\\\s*::)\\\\s+(html)\\\\s*$\", \"beginCaptures\": { \"2\": { \"name\": \"keyword.control\" }, \"3\": { \"name\": \"variable.parameter.html\" } }, \"patterns\": [{ \"include\": \"#block-param\" }, { \"include\": \"text.html.derivative\" }], \"while\": \"^\\\\1(?=\\\\s)|^\\\\s*$\" }, \"ref\": { \"begin\": \"(:ref:)`\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control\" } }, \"end\": \"`|^\\\\s*$\", \"name\": \"entity.name.tag\", \"patterns\": [{ \"match\": \"<.*?>\", \"name\": \"markup.underline.link\" }] }, \"reference\": { \"match\": \"[\\\\w-]*[a-zA-Z\\\\d-]__?\\\\b\", \"name\": \"entity.name.tag\" }, \"replace-include\": { \"captures\": { \"1\": { \"name\": \"keyword.control\" }, \"2\": { \"name\": \"entity.name.tag\" }, \"3\": { \"name\": \"keyword.control\" } }, \"match\": \"^\\\\s*(\\\\.{2})\\\\s+(\\\\|[^\\\\|]+\\\\|)\\\\s+(replace::)\" }, \"simple-table\": { \"match\": \"^[=\\\\s]+$\", \"name\": \"keyword.control.table\" }, \"substitution\": { \"match\": \"^\\\\.{2}\\\\s*\\\\|([^|]+)\\\\|\", \"name\": \"entity.name.tag\" }, \"table\": { \"begin\": \"^\\\\s*\\\\+[=+-]+\\\\+\\\\s*$\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.control.table\" } }, \"end\": \"^(?![+|])\", \"patterns\": [{ \"match\": \"[=+|-]\", \"name\": \"keyword.control.table\" }] }, \"title\": { \"match\": \"^(\\\\*{3,}|#{3,}|\\\\={3,}|~{3,}|\\\\+{3,}|-{3,}|`{3,}|\\\\^{3,}|:{3,}|\\\"{3,}|_{3,}|'{3,})$\", \"name\": \"markup.heading\" } }, \"scopeName\": \"source.rst\", \"embeddedLangs\": [\"html-derivative\", \"cpp\", \"python\", \"javascript\", \"shellscript\", \"yaml\", \"cmake\", \"ruby\"] });\nvar rst = [\n  ...html_derivative,\n  ...cpp,\n  ...python,\n  ...javascript,\n  ...shellscript,\n  ...yaml,\n  ...cmake,\n  ...ruby,\n  lang\n];\n\nexport { rst as default };\n","const lang = Object.freeze({ \"displayName\": \"YAML\", \"fileTypes\": [\"yaml\", \"yml\", \"rviz\", \"reek\", \"clang-format\", \"yaml-tmlanguage\", \"syntax\", \"sublime-syntax\"], \"firstLineMatch\": \"^%YAML( ?1.\\\\d+)?\", \"name\": \"yaml\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#property\" }, { \"include\": \"#directive\" }, { \"match\": \"^---\", \"name\": \"entity.other.document.begin.yaml\" }, { \"match\": \"^\\\\.{3}\", \"name\": \"entity.other.document.end.yaml\" }, { \"include\": \"#node\" }], \"repository\": { \"block-collection\": { \"patterns\": [{ \"include\": \"#block-sequence\" }, { \"include\": \"#block-mapping\" }] }, \"block-mapping\": { \"patterns\": [{ \"include\": \"#block-pair\" }] }, \"block-node\": { \"patterns\": [{ \"include\": \"#prototype\" }, { \"include\": \"#block-scalar\" }, { \"include\": \"#block-collection\" }, { \"include\": \"#flow-scalar-plain-out\" }, { \"include\": \"#flow-node\" }] }, \"block-pair\": { \"patterns\": [{ \"begin\": \"\\\\?\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.key-value.begin.yaml\" } }, \"end\": \"(?=\\\\?)|^ *(:)|(:)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.separator.key-value.mapping.yaml\" }, \"2\": { \"name\": \"invalid.illegal.expected-newline.yaml\" } }, \"name\": \"meta.block-mapping.yaml\", \"patterns\": [{ \"include\": \"#block-node\" }] }, { \"begin\": \"(?x)\\n(?=\\n(?x:\\n[^\\\\s[-?:,\\\\[\\\\]{}#&*!|>'\\\"%@`]]\\n| [?:-] \\\\S\\n)\\n(\\n[^\\\\s:]\\n| : \\\\S\\n| \\\\s+ (?![#\\\\s])\\n)*\\n\\\\s*\\n:\\n(\\\\s|$)\\n)\\n\", \"end\": \"(?x)\\n(?=\\n\\\\s* $\\n| \\\\s+ \\\\#\\n| \\\\s* : (\\\\s|$)\\n)\\n\", \"patterns\": [{ \"include\": \"#flow-scalar-plain-out-implicit-type\" }, { \"begin\": \"(?x)\\n[^\\\\s[-?:,\\\\[\\\\]{}#&*!|>'\\\"%@`]]\\n| [?:-] \\\\S\\n\", \"beginCaptures\": { \"0\": { \"name\": \"entity.name.tag.yaml\" } }, \"contentName\": \"entity.name.tag.yaml\", \"end\": \"(?x)\\n(?=\\n\\\\s* $\\n| \\\\s+ \\\\#\\n| \\\\s* : (\\\\s|$)\\n)\\n\", \"name\": \"string.unquoted.plain.out.yaml\" }] }, { \"match\": \":(?=\\\\s|$)\", \"name\": \"punctuation.separator.key-value.mapping.yaml\" }] }, \"block-scalar\": { \"begin\": \"(?:(\\\\|)|(>))([1-9])?([-+])?(.*\\\\n?)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.flow.block-scalar.literal.yaml\" }, \"2\": { \"name\": \"keyword.control.flow.block-scalar.folded.yaml\" }, \"3\": { \"name\": \"constant.numeric.indentation-indicator.yaml\" }, \"4\": { \"name\": \"storage.modifier.chomping-indicator.yaml\" }, \"5\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"match\": \".+\", \"name\": \"invalid.illegal.expected-comment-or-newline.yaml\" }] } }, \"end\": \"^(?=\\\\S)|(?!\\\\G)\", \"patterns\": [{ \"begin\": \"^([ ]+)(?! )\", \"end\": \"^(?!\\\\1|\\\\s*$)\", \"name\": \"string.unquoted.block.yaml\" }] }, \"block-sequence\": { \"match\": \"(-)(?!\\\\S)\", \"name\": \"punctuation.definition.block.sequence.item.yaml\" }, \"comment\": { \"begin\": \"(?:(^[ \\\\t]*)|[ \\\\t]+)(?=#\\\\p{Print}*$)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.whitespace.comment.leading.yaml\" } }, \"end\": \"(?!\\\\G)\", \"patterns\": [{ \"begin\": \"#\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.yaml\" } }, \"end\": \"\\\\n\", \"name\": \"comment.line.number-sign.yaml\" }] }, \"directive\": { \"begin\": \"^%\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.directive.begin.yaml\" } }, \"end\": \"(?=$|[ \\\\t]+($|#))\", \"name\": \"meta.directive.yaml\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"keyword.other.directive.yaml.yaml\" }, \"2\": { \"name\": \"constant.numeric.yaml-version.yaml\" } }, \"match\": \"\\\\G(YAML)[ \\\\t]+(\\\\d+\\\\.\\\\d+)\" }, { \"captures\": { \"1\": { \"name\": \"keyword.other.directive.tag.yaml\" }, \"2\": { \"name\": \"storage.type.tag-handle.yaml\" }, \"3\": { \"name\": \"support.type.tag-prefix.yaml\" } }, \"match\": \"(?x)\\n\\\\G\\n(TAG)\\n(?:[ \\\\t]+\\n((?:!(?:[0-9A-Za-z\\\\-]*!)?))\\n(?:[ \\\\t]+ (\\n!              (?x: %[0-9A-Fa-f]{2} | [0-9A-Za-z\\\\-#;/?:@&=+$,_.!~*'()\\\\[\\\\]] )*\\n| (?![,!\\\\[\\\\]{}]) (?x: %[0-9A-Fa-f]{2} | [0-9A-Za-z\\\\-#;/?:@&=+$,_.!~*'()\\\\[\\\\]] )+\\n)\\n)?\\n)?\\n\" }, { \"captures\": { \"1\": { \"name\": \"support.other.directive.reserved.yaml\" }, \"2\": { \"name\": \"string.unquoted.directive-name.yaml\" }, \"3\": { \"name\": \"string.unquoted.directive-parameter.yaml\" } }, \"match\": \"(?x) \\\\G (\\\\w+) (?:[ \\\\t]+ (\\\\w+) (?:[ \\\\t]+ (\\\\w+))? )?\" }, { \"match\": \"\\\\S+\", \"name\": \"invalid.illegal.unrecognized.yaml\" }] }, \"flow-alias\": { \"captures\": { \"1\": { \"name\": \"keyword.control.flow.alias.yaml\" }, \"2\": { \"name\": \"punctuation.definition.alias.yaml\" }, \"3\": { \"name\": \"variable.other.alias.yaml\" }, \"4\": { \"name\": \"invalid.illegal.character.anchor.yaml\" } }, \"match\": \"((\\\\*))([^\\\\s\\\\[\\\\]/{/},]+)([^\\\\s\\\\]},]\\\\S*)?\" }, \"flow-collection\": { \"patterns\": [{ \"include\": \"#flow-sequence\" }, { \"include\": \"#flow-mapping\" }] }, \"flow-mapping\": { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.mapping.begin.yaml\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.mapping.end.yaml\" } }, \"name\": \"meta.flow-mapping.yaml\", \"patterns\": [{ \"include\": \"#prototype\" }, { \"match\": \",\", \"name\": \"punctuation.separator.mapping.yaml\" }, { \"include\": \"#flow-pair\" }] }, \"flow-node\": { \"patterns\": [{ \"include\": \"#prototype\" }, { \"include\": \"#flow-alias\" }, { \"include\": \"#flow-collection\" }, { \"include\": \"#flow-scalar\" }] }, \"flow-pair\": { \"patterns\": [{ \"begin\": \"\\\\?\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.key-value.begin.yaml\" } }, \"end\": \"(?=[},\\\\]])\", \"name\": \"meta.flow-pair.explicit.yaml\", \"patterns\": [{ \"include\": \"#prototype\" }, { \"include\": \"#flow-pair\" }, { \"include\": \"#flow-node\" }, { \"begin\": \":(?=\\\\s|$|[\\\\[\\\\]{},])\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.separator.key-value.mapping.yaml\" } }, \"end\": \"(?=[},\\\\]])\", \"patterns\": [{ \"include\": \"#flow-value\" }] }] }, { \"begin\": \"(?x)\\n(?=\\n(?:\\n[^\\\\s[-?:,\\\\[\\\\]{}#&*!|>'\\\"%@`]]\\n| [?:-] [^\\\\s[\\\\[\\\\]{},]]\\n)\\n(\\n[^\\\\s:[\\\\[\\\\]{},]]\\n| : [^\\\\s[\\\\[\\\\]{},]]\\n| \\\\s+ (?![#\\\\s])\\n)*\\n\\\\s*\\n:\\n(\\\\s|$)\\n)\\n\", \"end\": \"(?x)\\n(?=\\n\\\\s* $\\n| \\\\s+ \\\\#\\n| \\\\s* : (\\\\s|$)\\n| \\\\s* : [\\\\[\\\\]{},]\\n| \\\\s* [\\\\[\\\\]{},]\\n)\\n\", \"name\": \"meta.flow-pair.key.yaml\", \"patterns\": [{ \"include\": \"#flow-scalar-plain-in-implicit-type\" }, { \"begin\": \"(?x)\\n[^\\\\s[-?:,\\\\[\\\\]{}#&*!|>'\\\"%@`]]\\n| [?:-] [^\\\\s[\\\\[\\\\]{},]]\\n\", \"beginCaptures\": { \"0\": { \"name\": \"entity.name.tag.yaml\" } }, \"contentName\": \"entity.name.tag.yaml\", \"end\": \"(?x)\\n(?=\\n\\\\s* $\\n| \\\\s+ \\\\#\\n| \\\\s* : (\\\\s|$)\\n| \\\\s* : [\\\\[\\\\]{},]\\n| \\\\s* [\\\\[\\\\]{},]\\n)\\n\", \"name\": \"string.unquoted.plain.in.yaml\" }] }, { \"include\": \"#flow-node\" }, { \"begin\": \":(?=\\\\s|$|[\\\\[\\\\]{},])\", \"captures\": { \"0\": { \"name\": \"punctuation.separator.key-value.mapping.yaml\" } }, \"end\": \"(?=[},\\\\]])\", \"name\": \"meta.flow-pair.yaml\", \"patterns\": [{ \"include\": \"#flow-value\" }] }] }, \"flow-scalar\": { \"patterns\": [{ \"include\": \"#flow-scalar-double-quoted\" }, { \"include\": \"#flow-scalar-single-quoted\" }, { \"include\": \"#flow-scalar-plain-in\" }] }, \"flow-scalar-double-quoted\": { \"begin\": '\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.yaml\" } }, \"end\": '\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.yaml\" } }, \"name\": \"string.quoted.double.yaml\", \"patterns\": [{ \"match\": '\\\\\\\\([0abtnvfre \"/\\\\\\\\N_Lp]|x\\\\d\\\\d|u\\\\d{4}|U\\\\d{8})', \"name\": \"constant.character.escape.yaml\" }, { \"match\": \"\\\\\\\\\\\\n\", \"name\": \"constant.character.escape.double-quoted.newline.yaml\" }] }, \"flow-scalar-plain-in\": { \"patterns\": [{ \"include\": \"#flow-scalar-plain-in-implicit-type\" }, { \"begin\": \"(?x)\\n[^\\\\s[-?:,\\\\[\\\\]{}#&*!|>'\\\"%@`]]\\n| [?:-] [^\\\\s[\\\\[\\\\]{},]]\\n\", \"end\": \"(?x)\\n(?=\\n\\\\s* $\\n| \\\\s+ \\\\#\\n| \\\\s* : (\\\\s|$)\\n| \\\\s* : [\\\\[\\\\]{},]\\n| \\\\s* [\\\\[\\\\]{},]\\n)\\n\", \"name\": \"string.unquoted.plain.in.yaml\" }] }, \"flow-scalar-plain-in-implicit-type\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"constant.language.null.yaml\" }, \"2\": { \"name\": \"constant.language.boolean.yaml\" }, \"3\": { \"name\": \"constant.numeric.integer.yaml\" }, \"4\": { \"name\": \"constant.numeric.float.yaml\" }, \"5\": { \"name\": \"constant.other.timestamp.yaml\" }, \"6\": { \"name\": \"constant.language.value.yaml\" }, \"7\": { \"name\": \"constant.language.merge.yaml\" } }, \"match\": \"(?x)\\n(?x:\\n(null|Null|NULL|~)\\n| (y|Y|yes|Yes|YES|n|N|no|No|NO|true|True|TRUE|false|False|FALSE|on|On|ON|off|Off|OFF)\\n| (\\n(?:\\n[-+]? 0b [0-1_]+\\n| [-+]? 0  [0-7_]+\\n| [-+]? (?: 0|[1-9][0-9_]*)\\n| [-+]? 0x [0-9a-fA-F_]+\\n| [-+]? [1-9] [0-9_]* (?: :[0-5]?[0-9])+\\n)\\n)\\n| (\\n(?x:\\n[-+]? (?: [0-9] [0-9_]*)? \\\\. [0-9.]* (?: [eE] [-+] [0-9]+)?\\n| [-+]? [0-9] [0-9_]* (?: :[0-5]?[0-9])+ \\\\. [0-9_]*\\n| [-+]? \\\\. (?: inf|Inf|INF)\\n|       \\\\. (?: nan|NaN|NAN)\\n)\\n)\\n| (\\n(?x:\\n\\\\d{4} - \\\\d{2} - \\\\d{2}\\n| \\\\d{4}\\n- \\\\d{1,2}\\n- \\\\d{1,2}\\n(?: [Tt] | [ \\\\t]+) \\\\d{1,2}\\n: \\\\d{2}\\n: \\\\d{2}\\n(?: \\\\.\\\\d*)?\\n(?:\\n(?:[ \\\\t]*) Z\\n| [-+] \\\\d{1,2} (?: :\\\\d{1,2})?\\n)?\\n)\\n)\\n| (=)\\n| (<<)\\n)\\n(?:\\n(?=\\n\\\\s* $\\n| \\\\s+ \\\\#\\n| \\\\s* : (\\\\s|$)\\n| \\\\s* : [\\\\[\\\\]{},]\\n| \\\\s* [\\\\[\\\\]{},]\\n)\\n)\\n\" }] }, \"flow-scalar-plain-out\": { \"patterns\": [{ \"include\": \"#flow-scalar-plain-out-implicit-type\" }, { \"begin\": \"(?x)\\n[^\\\\s[-?:,\\\\[\\\\]{}#&*!|>'\\\"%@`]]\\n| [?:-] \\\\S\\n\", \"end\": \"(?x)\\n(?=\\n\\\\s* $\\n| \\\\s+ \\\\#\\n| \\\\s* : (\\\\s|$)\\n)\\n\", \"name\": \"string.unquoted.plain.out.yaml\" }] }, \"flow-scalar-plain-out-implicit-type\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"constant.language.null.yaml\" }, \"2\": { \"name\": \"constant.language.boolean.yaml\" }, \"3\": { \"name\": \"constant.numeric.integer.yaml\" }, \"4\": { \"name\": \"constant.numeric.float.yaml\" }, \"5\": { \"name\": \"constant.other.timestamp.yaml\" }, \"6\": { \"name\": \"constant.language.value.yaml\" }, \"7\": { \"name\": \"constant.language.merge.yaml\" } }, \"match\": \"(?x)\\n(?x:\\n(null|Null|NULL|~)\\n| (y|Y|yes|Yes|YES|n|N|no|No|NO|true|True|TRUE|false|False|FALSE|on|On|ON|off|Off|OFF)\\n| (\\n(?:\\n[-+]? 0b [0-1_]+\\n| [-+]? 0  [0-7_]+\\n| [-+]? (?: 0|[1-9][0-9_]*)\\n| [-+]? 0x [0-9a-fA-F_]+\\n| [-+]? [1-9] [0-9_]* (?: :[0-5]?[0-9])+\\n)\\n)\\n| (\\n(?x:\\n[-+]? (?: [0-9] [0-9_]*)? \\\\. [0-9.]* (?: [eE] [-+] [0-9]+)?\\n| [-+]? [0-9] [0-9_]* (?: :[0-5]?[0-9])+ \\\\. [0-9_]*\\n| [-+]? \\\\. (?: inf|Inf|INF)\\n|       \\\\. (?: nan|NaN|NAN)\\n)\\n)\\n| (\\n(?x:\\n\\\\d{4} - \\\\d{2} - \\\\d{2}\\n| \\\\d{4}\\n- \\\\d{1,2}\\n- \\\\d{1,2}\\n(?: [Tt] | [ \\\\t]+) \\\\d{1,2}\\n: \\\\d{2}\\n: \\\\d{2}\\n(?: \\\\.\\\\d*)?\\n(?:\\n(?:[ \\\\t]*) Z\\n| [-+] \\\\d{1,2} (?: :\\\\d{1,2})?\\n)?\\n)\\n)\\n| (=)\\n| (<<)\\n)\\n(?x:\\n(?=\\n\\\\s* $\\n| \\\\s+ \\\\#\\n| \\\\s* : (\\\\s|$)\\n)\\n)\\n\" }] }, \"flow-scalar-single-quoted\": { \"begin\": \"'\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.yaml\" } }, \"end\": \"'(?!')\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.yaml\" } }, \"name\": \"string.quoted.single.yaml\", \"patterns\": [{ \"match\": \"''\", \"name\": \"constant.character.escape.single-quoted.yaml\" }] }, \"flow-sequence\": { \"begin\": \"\\\\[\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.sequence.begin.yaml\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.sequence.end.yaml\" } }, \"name\": \"meta.flow-sequence.yaml\", \"patterns\": [{ \"include\": \"#prototype\" }, { \"match\": \",\", \"name\": \"punctuation.separator.sequence.yaml\" }, { \"include\": \"#flow-pair\" }, { \"include\": \"#flow-node\" }] }, \"flow-value\": { \"patterns\": [{ \"begin\": \"\\\\G(?![},\\\\]])\", \"end\": \"(?=[},\\\\]])\", \"name\": \"meta.flow-pair.value.yaml\", \"patterns\": [{ \"include\": \"#flow-node\" }] }] }, \"node\": { \"patterns\": [{ \"include\": \"#block-node\" }] }, \"property\": { \"begin\": \"(?=!|&)\", \"end\": \"(?!\\\\G)\", \"name\": \"meta.property.yaml\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"keyword.control.property.anchor.yaml\" }, \"2\": { \"name\": \"punctuation.definition.anchor.yaml\" }, \"3\": { \"name\": \"entity.name.type.anchor.yaml\" }, \"4\": { \"name\": \"invalid.illegal.character.anchor.yaml\" } }, \"match\": \"\\\\G((&))([^\\\\s\\\\[\\\\]/{/},]+)(\\\\S+)?\" }, { \"match\": \"(?x)\\n\\\\G\\n(?:\\n! < (?: %[0-9A-Fa-f]{2} | [0-9A-Za-z\\\\-#;/?:@&=+$,_.!~*'()\\\\[\\\\]] )+ >\\n| (?:!(?:[0-9A-Za-z\\\\-]*!)?) (?: %[0-9A-Fa-f]{2} | [0-9A-Za-z\\\\-#;/?:@&=+$_.~*'()] )+\\n| !\\n)\\n(?=\\\\ |\\\\t|$)\\n\", \"name\": \"storage.type.tag-handle.yaml\" }, { \"match\": \"\\\\S+\", \"name\": \"invalid.illegal.tag-handle.yaml\" }] }, \"prototype\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#property\" }] } }, \"scopeName\": \"source.yaml\", \"aliases\": [\"yml\"] });\nvar yaml = [\n  lang\n];\n\nexport { yaml as default };\n"],"x_google_ignoreList":[0,1,2]}