{"version":3,"file":"8176.127efb56f9de0802.js","mappings":"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","names":["go","Object","freeze","displayName","name","patterns","include","repository","after_control_variables","captures","match","comment","brackets","begin","beginCaptures","end","endCaptures","built_in_functions","comments","delimiters","double_parentheses_types","field_hover","function_declaration","function_param_types","functions","functions_inline","generic_param_types","generic_types","import","imports","interface_variables_types","interface_variables_types_field","keywords","label_loop_variables","language_constants","map_types","multi_types","numeric_literals","operators","other_struct_interface_expressions","other_variables","package_name","property_variables","raw_string_literals","runes","single_type","slice_index_variables","statements","storage_types","string_escaped_char","string_literals","string_placeholder","struct_interface_declaration","struct_variable_types_fields_multi","struct_variables_types","struct_variables_types_fields","support_functions","switch_select_case_variables","switch_types","syntax_errors","terminators","type_assertion_inline","var_const_assignment","variable_assignment","scopeName"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./node_modules/shiki/dist/langs/go.mjs"],"sourcesContent":["const lang = Object.freeze({ \"displayName\": \"Go\", \"name\": \"go\", \"patterns\": [{ \"include\": \"#statements\" }], \"repository\": { \"after_control_variables\": { \"captures\": { \"1\": { \"patterns\": [{ \"include\": \"#type-declarations-without-brackets\" }, { \"match\": \"\\\\[\", \"name\": \"punctuation.definition.begin.bracket.square.go\" }, { \"match\": \"\\\\]\", \"name\": \"punctuation.definition.end.bracket.square.go\" }, { \"match\": \"(?:\\\\w+)\", \"name\": \"variable.other.go\" }] } }, \"comment\": \"After control variables, to not highlight as a struct/interface (before formatting with gofmt)\", \"match\": \"(?:(?<=\\\\brange\\\\b|\\\\bswitch\\\\b|\\\\;|\\\\bif\\\\b|\\\\bfor\\\\b|\\\\<|\\\\>|\\\\<\\\\=|\\\\>\\\\=|\\\\=\\\\=|\\\\!\\\\=|\\\\w(?:\\\\+|/|\\\\-|\\\\*|\\\\%)|\\\\w(?:\\\\+|/|\\\\-|\\\\*|\\\\%)\\\\=|\\\\|\\\\||\\\\&\\\\&)(?:\\\\s*)((?![\\\\[\\\\]]+)[[:alnum:]\\\\-\\\\_\\\\!\\\\.\\\\[\\\\]\\\\<\\\\>\\\\=\\\\*/\\\\+\\\\%\\\\:]+)(?:\\\\s*)(?=\\\\{))\" }, \"brackets\": { \"patterns\": [{ \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.begin.bracket.curly.go\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.end.bracket.curly.go\" } }, \"patterns\": [{ \"include\": \"$self\" }] }, { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.begin.bracket.round.go\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.end.bracket.round.go\" } }, \"patterns\": [{ \"include\": \"$self\" }] }, { \"begin\": \"\\\\[\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.begin.bracket.square.go\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.end.bracket.square.go\" } }, \"patterns\": [{ \"include\": \"$self\" }] }] }, \"built_in_functions\": { \"comment\": \"Built-in functions\", \"patterns\": [{ \"match\": \"\\\\b(append|cap|close|complex|copy|delete|imag|len|panic|print|println|real|recover|min|max|clear)\\\\b(?=\\\\()\", \"name\": \"entity.name.function.support.builtin.go\" }, { \"begin\": \"(?:(\\\\bnew\\\\b)(\\\\())\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.function.support.builtin.go\" }, \"2\": { \"name\": \"punctuation.definition.begin.bracket.round.go\" } }, \"comment\": \"new keyword\", \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.end.bracket.round.go\" } }, \"patterns\": [{ \"include\": \"#functions\" }, { \"include\": \"#struct_variables_types\" }, { \"include\": \"#type-declarations\" }, { \"include\": \"#generic_types\" }, { \"match\": \"(?:\\\\w+)\", \"name\": \"entity.name.type.go\" }, { \"include\": \"$self\" }] }, { \"begin\": \"(?:(\\\\bmake\\\\b)(?:(\\\\()((?:(?:(?:[\\\\*\\\\[\\\\]]+)?(?:\\\\<\\\\-\\\\s*)?\\\\bchan\\\\b(?:\\\\s*\\\\<\\\\-)?\\\\s*)+(?:\\\\([^\\\\)]+\\\\))?)?(?:[\\\\[\\\\]\\\\*]+)?(?:(?!\\\\bmap\\\\b)(?:[\\\\w\\\\.]+))?(\\\\[(?:(?:[\\\\S]+)(?:(?:\\\\,\\\\s*(?:[\\\\S]+))*))?\\\\])?(?:\\\\,)?)?))\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.function.support.builtin.go\" }, \"2\": { \"name\": \"punctuation.definition.begin.bracket.round.go\" }, \"3\": { \"patterns\": [{ \"include\": \"#type-declarations-without-brackets\" }, { \"include\": \"#parameter-variable-types\" }, { \"match\": \"\\\\w+\", \"name\": \"entity.name.type.go\" }] } }, \"comment\": \"make keyword\", \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.end.bracket.round.go\" } }, \"patterns\": [{ \"include\": \"$self\" }] }] }, \"comments\": { \"patterns\": [{ \"begin\": \"(\\\\/\\\\*)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.comment.go\" } }, \"end\": \"(\\\\*\\\\/)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.comment.go\" } }, \"name\": \"comment.block.go\" }, { \"begin\": \"(\\\\/\\\\/)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.comment.go\" } }, \"end\": \"(?:\\\\n|$)\", \"name\": \"comment.line.double-slash.go\" }] }, \"delimiters\": { \"patterns\": [{ \"match\": \"\\\\,\", \"name\": \"punctuation.other.comma.go\" }, { \"match\": \"\\\\.(?!\\\\.\\\\.)\", \"name\": \"punctuation.other.period.go\" }, { \"match\": \":(?!=)\", \"name\": \"punctuation.other.colon.go\" }] }, \"double_parentheses_types\": { \"captures\": { \"1\": { \"patterns\": [{ \"include\": \"#type-declarations-without-brackets\" }, { \"match\": \"\\\\(\", \"name\": \"punctuation.definition.begin.bracket.round.go\" }, { \"match\": \"\\\\)\", \"name\": \"punctuation.definition.end.bracket.round.go\" }, { \"match\": \"\\\\[\", \"name\": \"punctuation.definition.begin.bracket.square.go\" }, { \"match\": \"\\\\]\", \"name\": \"punctuation.definition.end.bracket.square.go\" }, { \"match\": \"\\\\w+\", \"name\": \"entity.name.type.go\" }] } }, \"comment\": \"double parentheses types\", \"match\": \"(?:(?<!\\\\w)(\\\\((?:[\\\\w\\\\.\\\\[\\\\]\\\\*\\\\&]+)\\\\))(?=\\\\())\" }, \"field_hover\": { \"captures\": { \"1\": { \"patterns\": [{ \"include\": \"#type-declarations\" }, { \"match\": \"\\\\w+\", \"name\": \"variable.other.property.go\" }] }, \"2\": { \"patterns\": [{ \"match\": \"\\\\binvalid\\\\b\\\\s+\\\\btype\\\\b\", \"name\": \"invalid.field.go\" }, { \"include\": \"#type-declarations-without-brackets\" }, { \"include\": \"#parameter-variable-types\" }, { \"match\": \"\\\\w+\", \"name\": \"entity.name.type.go\" }] } }, \"comment\": \"struct field property and types when hovering with the mouse\", \"match\": \"(?:(?<=^\\\\bfield\\\\b)\\\\s+([\\\\w\\\\*\\\\.]+)\\\\s+([\\\\s\\\\S]+))\" }, \"function_declaration\": { \"begin\": \"(?:^(\\\\bfunc\\\\b)(?:\\\\s*(\\\\([^\\\\)]+\\\\)\\\\s*)?(?:(\\\\w+)(?=\\\\(|\\\\[))?))\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.function.go\" }, \"2\": { \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.begin.bracket.round.go\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.end.bracket.round.go\" } }, \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"variable.parameter.go\" }, \"2\": { \"patterns\": [{ \"include\": \"#type-declarations-without-brackets\" }, { \"include\": \"#parameter-variable-types\" }, { \"match\": \"(?:\\\\w+)\", \"name\": \"entity.name.type.go\" }] } }, \"match\": \"(?:(\\\\w+(?:\\\\s+))?((?:[\\\\w\\\\.\\\\*]+)(?:\\\\[(?:(?:(?:[\\\\w\\\\.\\\\*]+)(?:\\\\,\\\\s+)?)+)?\\\\])?))\" }, { \"include\": \"$self\" }] }] }, \"3\": { \"patterns\": [{ \"match\": \"\\\\d\\\\w*\", \"name\": \"invalid.illegal.identifier.go\" }, { \"match\": \"\\\\w+\", \"name\": \"entity.name.function.go\" }] } }, \"comment\": \"Function declarations\", \"end\": \"(?:(?<=\\\\))\\\\s*((?:(?:(?:[\\\\*\\\\[\\\\]]+)?(?:\\\\<\\\\-\\\\s*)?\\\\bchan\\\\b(?:\\\\s*\\\\<\\\\-)?\\\\s*)+)?(?!(?:[\\\\[\\\\]\\\\*]+)?(?:\\\\bstruct\\\\b|\\\\binterface\\\\b))[\\\\w\\\\.\\\\-\\\\*\\\\[\\\\]]+)?\\\\s*(?=\\\\{))\", \"endCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#type-declarations-without-brackets\" }, { \"include\": \"#parameter-variable-types\" }, { \"match\": \"(?:\\\\w+)\", \"name\": \"entity.name.type.go\" }] } }, \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.begin.bracket.round.go\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.end.bracket.round.go\" } }, \"patterns\": [{ \"include\": \"#function_param_types\" }] }, { \"begin\": \"(?:([\\\\w\\\\.\\\\*]+)?(\\\\[))\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#type-declarations\" }, { \"match\": \"(?:\\\\w+)\", \"name\": \"entity.name.type.go\" }] }, \"2\": { \"name\": \"punctuation.definition.begin.bracket.square.go\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.end.bracket.square.go\" } }, \"patterns\": [{ \"include\": \"#generic_param_types\" }] }, { \"captures\": { \"1\": { \"patterns\": [{ \"include\": \"#type-declarations-without-brackets\" }, { \"include\": \"#parameter-variable-types\" }, { \"match\": \"\\\\w+\", \"name\": \"entity.name.type.go\" }] } }, \"comment\": \"single function as a type returned type(s) declaration\", \"match\": \"(?:(?<=\\\\))(?:\\\\s*)((?:(?:\\\\s*(?:[\\\\*\\\\[\\\\]]+)?(?:\\\\<\\\\-\\\\s*)?\\\\bchan\\\\b(?:\\\\s*\\\\<\\\\-)?\\\\s*)+)?[\\\\w\\\\*\\\\.\\\\[\\\\]\\\\<\\\\>\\\\-]+(?:\\\\s*)(?:\\\\/(?:\\\\/|\\\\*).*)?)$)\" }, { \"include\": \"$self\" }] }, \"function_param_types\": { \"comment\": \"function parameter variables and types\", \"patterns\": [{ \"include\": \"#struct_variables_types\" }, { \"include\": \"#interface_variables_types\" }, { \"include\": \"#type-declarations-without-brackets\" }, { \"captures\": { \"1\": { \"patterns\": [{ \"include\": \"#type-declarations\" }, { \"match\": \"\\\\w+\", \"name\": \"variable.parameter.go\" }] } }, \"comment\": \"struct/interface type declaration\", \"match\": \"((?:(?:\\\\b\\\\w+\\\\,\\\\s*)+)?\\\\b\\\\w+)\\\\s+(?=(?:(?:\\\\s*(?:[\\\\*\\\\[\\\\]]+)?(?:\\\\<\\\\-\\\\s*)?\\\\bchan\\\\b(?:\\\\s*\\\\<\\\\-)?\\\\s*)+)?(?:[\\\\[\\\\]\\\\*]+)?\\\\b(?:struct|interface)\\\\b\\\\s*\\\\{)\" }, { \"captures\": { \"1\": { \"patterns\": [{ \"include\": \"#type-declarations\" }, { \"match\": \"\\\\w+\", \"name\": \"variable.parameter.go\" }] } }, \"comment\": \"multiple parameters one type -with multilines\", \"match\": \"(?:(?:(?<=\\\\()|^\\\\s*)((?:(?:\\\\b\\\\w+\\\\,\\\\s*)+)(?:/(?:/|\\\\*).*)?)$)\" }, { \"captures\": { \"1\": { \"patterns\": [{ \"include\": \"#delimiters\" }, { \"match\": \"\\\\w+\", \"name\": \"variable.parameter.go\" }] }, \"2\": { \"patterns\": [{ \"include\": \"#type-declarations-without-brackets\" }, { \"include\": \"#parameter-variable-types\" }, { \"match\": \"(?:\\\\w+)\", \"name\": \"entity.name.type.go\" }] } }, \"comment\": \"multiple params and types | multiple params one type | one param one type\", \"match\": \"(?:((?:(?:\\\\b\\\\w+\\\\,\\\\s*)+)?\\\\b\\\\w+)(?:\\\\s+)((?:(?:\\\\s*(?:[\\\\*\\\\[\\\\]]+)?(?:\\\\<\\\\-\\\\s*)?\\\\bchan\\\\b(?:\\\\s*\\\\<\\\\-)?\\\\s*)+)?(?:(?:(?:[\\\\w\\\\[\\\\]\\\\.\\\\*]+)?(?:(?:\\\\bfunc\\\\b\\\\((?:[^\\\\)]+)?\\\\))(?:(?:\\\\s*(?:[\\\\*\\\\[\\\\]]+)?(?:\\\\<\\\\-\\\\s*)?\\\\bchan\\\\b(?:\\\\s*\\\\<\\\\-)?\\\\s*)+)?(?:\\\\s*))+(?:(?:(?:[\\\\w\\\\*\\\\.\\\\[\\\\]]+)|(?:\\\\((?:[^\\\\)]+)?\\\\))))?)|(?:(?:[\\\\[\\\\]\\\\*]+)?[\\\\w\\\\*\\\\.]+(?:\\\\[(?:[^\\\\]]+)\\\\])?(?:[\\\\w\\\\.\\\\*]+)?)+)))\" }, { \"include\": \"#parameter-variable-types\" }, { \"captures\": { \"1\": { \"patterns\": [{ \"include\": \"#type-declarations\" }, { \"match\": \"(?:\\\\w+)\", \"name\": \"entity.name.type.go\" }] } }, \"comment\": \"other types\", \"match\": \"([\\\\w\\\\.]+)\" }, { \"include\": \"$self\" }] }, \"functions\": { \"begin\": \"(?:(\\\\bfunc\\\\b)(?=\\\\())\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.function.go\" } }, \"comment\": \"Functions\", \"end\": \"(?:(?<=\\\\))(\\\\s*(?:(?:[\\\\*\\\\[\\\\]]+)?(?:\\\\<\\\\-\\\\s*)?\\\\bchan\\\\b(?:\\\\s*\\\\<\\\\-)?\\\\s*)+)?((?:(?:\\\\s*(?:(?:[\\\\[\\\\]\\\\*]+)?[\\\\w\\\\.\\\\*]+)?(?:(?:\\\\[(?:(?:[\\\\w\\\\.\\\\*]+)?(?:\\\\[(?:[^\\\\]]+)?\\\\])?(?:\\\\,\\\\s+)?)+\\\\])|(?:\\\\((?:[^\\\\)]+)?\\\\)))?(?:[\\\\w\\\\.\\\\*]+)?)(?:\\\\s*)(?=\\\\{))|(?:\\\\s*(?:(?:(?:[\\\\[\\\\]\\\\*]+)?(?!\\\\bfunc\\\\b)(?:[\\\\w\\\\.\\\\*]+)(?:\\\\[(?:(?:[\\\\w\\\\.\\\\*]+)?(?:\\\\[(?:[^\\\\]]+)?\\\\])?(?:\\\\,\\\\s+)?)+\\\\])?(?:[\\\\w\\\\.\\\\*]+)?)|(?:\\\\((?:[^\\\\)]+)?\\\\)))))?)\", \"endCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#type-declarations\" }] }, \"2\": { \"patterns\": [{ \"include\": \"#type-declarations-without-brackets\" }, { \"include\": \"#parameter-variable-types\" }, { \"match\": \"(?:\\\\w+)\", \"name\": \"entity.name.type.go\" }] } }, \"patterns\": [{ \"include\": \"#parameter-variable-types\" }] }, \"functions_inline\": { \"captures\": { \"1\": { \"name\": \"keyword.function.go\" }, \"2\": { \"patterns\": [{ \"include\": \"#type-declarations-without-brackets\" }, { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.begin.bracket.round.go\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.end.bracket.round.go\" } }, \"patterns\": [{ \"include\": \"#function_param_types\" }, { \"include\": \"$self\" }] }, { \"match\": \"\\\\[\", \"name\": \"punctuation.definition.begin.bracket.square.go\" }, { \"match\": \"\\\\]\", \"name\": \"punctuation.definition.end.bracket.square.go\" }, { \"match\": \"\\\\{\", \"name\": \"punctuation.definition.begin.bracket.curly.go\" }, { \"match\": \"\\\\}\", \"name\": \"punctuation.definition.end.bracket.curly.go\" }, { \"match\": \"(?:\\\\w+)\", \"name\": \"entity.name.type.go\" }] } }, \"comment\": \"functions in-line with multi return types\", \"match\": \"(?:(\\\\bfunc\\\\b)((?:\\\\((?:[^/]*?)\\\\))(?:\\\\s+)(?:\\\\((?:[^/]*?)\\\\)))(?:\\\\s+)(?=\\\\{))\" }, \"generic_param_types\": { \"comment\": \"generic parameter variables and types\", \"patterns\": [{ \"include\": \"#struct_variables_types\" }, { \"include\": \"#interface_variables_types\" }, { \"include\": \"#type-declarations-without-brackets\" }, { \"captures\": { \"1\": { \"patterns\": [{ \"include\": \"#type-declarations\" }, { \"match\": \"\\\\w+\", \"name\": \"variable.parameter.go\" }] } }, \"comment\": \"struct/interface type declaration\", \"match\": \"((?:(?:\\\\b\\\\w+\\\\,\\\\s*)+)?\\\\b\\\\w+)\\\\s+(?=(?:(?:\\\\s*(?:[\\\\*\\\\[\\\\]]+)?(?:\\\\<\\\\-\\\\s*)?\\\\bchan\\\\b(?:\\\\s*\\\\<\\\\-)?\\\\s*)+)?(?:[\\\\[\\\\]\\\\*]+)?\\\\b(?:struct|interface)\\\\b\\\\s*\\\\{)\" }, { \"captures\": { \"1\": { \"patterns\": [{ \"include\": \"#type-declarations\" }, { \"match\": \"\\\\w+\", \"name\": \"variable.parameter.go\" }] } }, \"comment\": \"multiple parameters one type -with multilines\", \"match\": \"(?:(?:(?<=\\\\()|^\\\\s*)((?:(?:\\\\b\\\\w+\\\\,\\\\s*)+)(?:/(?:/|\\\\*).*)?)$)\" }, { \"captures\": { \"1\": { \"patterns\": [{ \"include\": \"#delimiters\" }, { \"match\": \"\\\\w+\", \"name\": \"variable.parameter.go\" }] }, \"2\": { \"patterns\": [{ \"include\": \"#type-declarations-without-brackets\" }, { \"include\": \"#parameter-variable-types\" }, { \"match\": \"(?:\\\\w+)\", \"name\": \"entity.name.type.go\" }] }, \"3\": { \"patterns\": [{ \"include\": \"#type-declarations\" }, { \"match\": \"(?:\\\\w+)\", \"name\": \"entity.name.type.go\" }] } }, \"comment\": \"multiple params and types | multiple types one param\", \"match\": \"(?:((?:(?:\\\\b\\\\w+\\\\,\\\\s*)+)?\\\\b\\\\w+)(?:\\\\s+)((?:(?:\\\\s*(?:[\\\\*\\\\[\\\\]]+)?(?:\\\\<\\\\-\\\\s*)?\\\\bchan\\\\b(?:\\\\s*\\\\<\\\\-)?\\\\s*)+)?(?:(?:(?:[\\\\w\\\\[\\\\]\\\\.\\\\*]+)?(?:(?:\\\\bfunc\\\\b\\\\((?:[^\\\\)]+)?\\\\))(?:(?:\\\\s*(?:[\\\\*\\\\[\\\\]]+)?(?:\\\\<\\\\-\\\\s*)?\\\\bchan\\\\b(?:\\\\s*\\\\<\\\\-)?\\\\s*)+)?(?:\\\\s*))+(?:(?:(?:[\\\\w\\\\*\\\\.]+)|(?:\\\\((?:[^\\\\)]+)?\\\\))))?)|(?:(?:(?:[\\\\w\\\\*\\\\.\\\\~]+)|(?:\\\\[(?:(?:[\\\\w\\\\.\\\\*]+)?(?:\\\\[(?:[^\\\\]]+)?\\\\])?(?:\\\\,\\\\s+)?)+\\\\]))(?:[\\\\w\\\\.\\\\*]+)?)+)))\" }, { \"include\": \"#parameter-variable-types\" }, { \"captures\": { \"1\": { \"patterns\": [{ \"include\": \"#type-declarations\" }, { \"match\": \"(?:\\\\w+)\", \"name\": \"entity.name.type.go\" }] } }, \"comment\": \"other types\", \"match\": \"(?:\\\\b([\\\\w\\\\.]+))\" }, { \"include\": \"$self\" }] }, \"generic_types\": { \"captures\": { \"1\": { \"patterns\": [{ \"include\": \"#type-declarations\" }, { \"match\": \"\\\\w+\", \"name\": \"entity.name.type.go\" }] }, \"2\": { \"patterns\": [{ \"include\": \"#parameter-variable-types\" }] } }, \"comment\": \"Generic support for all types\", \"match\": \"(?:([\\\\w\\\\.\\\\*]+)(\\\\[(?:[^\\\\]]+)?\\\\]))\" }, \"group-functions\": { \"comment\": \"all statements related to functions\", \"patterns\": [{ \"include\": \"#function_declaration\" }, { \"include\": \"#functions_inline\" }, { \"include\": \"#functions\" }, { \"include\": \"#built_in_functions\" }, { \"include\": \"#support_functions\" }] }, \"group-types\": { \"comment\": \"all statements related to types\", \"patterns\": [{ \"include\": \"#other_struct_interface_expressions\" }, { \"include\": \"#type_assertion_inline\" }, { \"include\": \"#struct_variables_types\" }, { \"include\": \"#interface_variables_types\" }, { \"include\": \"#single_type\" }, { \"include\": \"#multi_types\" }, { \"include\": \"#struct_interface_declaration\" }, { \"include\": \"#double_parentheses_types\" }, { \"include\": \"#switch_types\" }, { \"include\": \"#type-declarations\" }] }, \"group-variables\": { \"comment\": \"all statements related to variables\", \"patterns\": [{ \"include\": \"#var_const_assignment\" }, { \"include\": \"#variable_assignment\" }, { \"include\": \"#label_loop_variables\" }, { \"include\": \"#slice_index_variables\" }, { \"include\": \"#property_variables\" }, { \"include\": \"#switch_select_case_variables\" }, { \"include\": \"#other_variables\" }] }, \"import\": { \"comment\": \"import\", \"patterns\": [{ \"begin\": \"\\\\b(import)\\\\s+\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.import.go\" } }, \"comment\": \"import\", \"end\": \"(?!\\\\G)\", \"patterns\": [{ \"include\": \"#imports\" }] }] }, \"imports\": { \"comment\": \"import package(s)\", \"patterns\": [{ \"captures\": { \"1\": { \"patterns\": [{ \"include\": \"#delimiters\" }, { \"match\": \"(?:\\\\w+)\", \"name\": \"variable.other.import.go\" }] }, \"2\": { \"name\": \"string.quoted.double.go\" }, \"3\": { \"name\": \"punctuation.definition.string.begin.go\" }, \"4\": { \"name\": \"entity.name.import.go\" }, \"5\": { \"name\": \"punctuation.definition.string.end.go\" } }, \"match\": '(\\\\s*[\\\\w\\\\.]+)?\\\\s*((\")([^\"]*)(\"))' }, { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.imports.begin.bracket.round.go\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.imports.end.bracket.round.go\" } }, \"patterns\": [{ \"include\": \"#comments\" }, { \"include\": \"#imports\" }] }, { \"include\": \"$self\" }] }, \"interface_variables_types\": { \"begin\": \"(\\\\binterface\\\\b)\\\\s*(\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.interface.go\" }, \"2\": { \"name\": \"punctuation.definition.begin.bracket.curly.go\" } }, \"comment\": \"interface variable types\", \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.end.bracket.curly.go\" } }, \"patterns\": [{ \"include\": \"#interface_variables_types_field\" }, { \"include\": \"$self\" }] }, \"interface_variables_types_field\": { \"comment\": \"interface variable type fields\", \"patterns\": [{ \"include\": \"#support_functions\" }, { \"include\": \"#type-declarations-without-brackets\" }, { \"begin\": \"(?:([\\\\w\\\\.\\\\*]+)?(\\\\[))\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#type-declarations\" }, { \"match\": \"(?:\\\\w+)\", \"name\": \"entity.name.type.go\" }] }, \"2\": { \"name\": \"punctuation.definition.begin.bracket.square.go\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.end.bracket.square.go\" } }, \"patterns\": [{ \"include\": \"#generic_param_types\" }] }, { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.begin.bracket.round.go\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.end.bracket.round.go\" } }, \"patterns\": [{ \"include\": \"#function_param_types\" }] }, { \"captures\": { \"1\": { \"patterns\": [{ \"include\": \"#type-declarations\" }, { \"match\": \"\\\\w+\", \"name\": \"entity.name.type.go\" }] } }, \"comment\": \"other types\", \"match\": \"([\\\\w\\\\.]+)\" }] }, \"keywords\": { \"patterns\": [{ \"comment\": \"Flow control keywords\", \"match\": \"\\\\b(break|case|continue|default|defer|else|fallthrough|for|go|goto|if|range|return|select|switch)\\\\b\", \"name\": \"keyword.control.go\" }, { \"match\": \"\\\\bchan\\\\b\", \"name\": \"keyword.channel.go\" }, { \"match\": \"\\\\bconst\\\\b\", \"name\": \"keyword.const.go\" }, { \"match\": \"\\\\bvar\\\\b\", \"name\": \"keyword.var.go\" }, { \"match\": \"\\\\bfunc\\\\b\", \"name\": \"keyword.function.go\" }, { \"match\": \"\\\\binterface\\\\b\", \"name\": \"keyword.interface.go\" }, { \"match\": \"\\\\bmap\\\\b\", \"name\": \"keyword.map.go\" }, { \"match\": \"\\\\bstruct\\\\b\", \"name\": \"keyword.struct.go\" }, { \"match\": \"\\\\bimport\\\\b\", \"name\": \"keyword.control.import.go\" }, { \"match\": \"\\\\btype\\\\b\", \"name\": \"keyword.type.go\" }] }, \"label_loop_variables\": { \"captures\": { \"1\": { \"patterns\": [{ \"include\": \"#type-declarations\" }, { \"match\": \"\\\\w+\", \"name\": \"variable.other.label.go\" }] } }, \"comment\": \"labeled loop variable name\", \"match\": \"((?:^\\\\s*\\\\w+:\\\\s*$)|(?:^\\\\s*(?:\\\\bbreak\\\\b|\\\\bgoto\\\\b|\\\\bcontinue\\\\b)\\\\s+\\\\w+(?:\\\\s*/(?:/|\\\\*)\\\\s*.*)?$))\" }, \"language_constants\": { \"captures\": { \"1\": { \"name\": \"constant.language.boolean.go\" }, \"2\": { \"name\": \"constant.language.null.go\" }, \"3\": { \"name\": \"constant.language.iota.go\" } }, \"comment\": \"Language constants\", \"match\": \"\\\\b(?:(true|false)|(nil)|(iota))\\\\b\" }, \"map_types\": { \"begin\": \"(?:(\\\\bmap\\\\b)(\\\\[))\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.map.go\" }, \"2\": { \"name\": \"punctuation.definition.begin.bracket.square.go\" } }, \"comment\": \"map types\", \"end\": \"(?:(\\\\])((?:(?:(?:[\\\\*\\\\[\\\\]]+)?(?:\\\\<\\\\-\\\\s*)?\\\\bchan\\\\b(?:\\\\s*\\\\<\\\\-)?\\\\s*)+)?(?!(?:[\\\\[\\\\]\\\\*]+)?\\\\b(?:func|struct|map)\\\\b)(?:[\\\\*\\\\[\\\\]]+)?(?:[\\\\w\\\\.]+)(?:\\\\[(?:(?:[\\\\w\\\\.\\\\*\\\\[\\\\]\\\\{\\\\}]+)(?:(?:\\\\,\\\\s*(?:[\\\\w\\\\.\\\\*\\\\[\\\\]\\\\{\\\\}]+))*))?\\\\])?)?)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.end.bracket.square.go\" }, \"2\": { \"patterns\": [{ \"include\": \"#type-declarations-without-brackets\" }, { \"match\": \"\\\\[\", \"name\": \"punctuation.definition.begin.bracket.square.go\" }, { \"match\": \"\\\\]\", \"name\": \"punctuation.definition.end.bracket.square.go\" }, { \"match\": \"\\\\w+\", \"name\": \"entity.name.type.go\" }] } }, \"patterns\": [{ \"include\": \"#type-declarations-without-brackets\" }, { \"include\": \"#parameter-variable-types\" }, { \"include\": \"#functions\" }, { \"match\": \"\\\\[\", \"name\": \"punctuation.definition.begin.bracket.square.go\" }, { \"match\": \"\\\\]\", \"name\": \"punctuation.definition.end.bracket.square.go\" }, { \"match\": \"\\\\{\", \"name\": \"punctuation.definition.begin.bracket.curly.go\" }, { \"match\": \"\\\\}\", \"name\": \"punctuation.definition.end.bracket.curly.go\" }, { \"match\": \"\\\\(\", \"name\": \"punctuation.definition.begin.bracket.round.go\" }, { \"match\": \"\\\\)\", \"name\": \"punctuation.definition.end.bracket.round.go\" }, { \"match\": \"\\\\w+\", \"name\": \"entity.name.type.go\" }] }, \"multi_types\": { \"begin\": \"(\\\\btype\\\\b)\\\\s*(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.type.go\" }, \"2\": { \"name\": \"punctuation.definition.begin.bracket.round.go\" } }, \"comment\": \"multi type declaration\", \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.end.bracket.round.go\" } }, \"patterns\": [{ \"include\": \"#struct_variables_types\" }, { \"include\": \"#interface_variables_types\" }, { \"include\": \"#type-declarations-without-brackets\" }, { \"include\": \"#parameter-variable-types\" }, { \"match\": \"(?:\\\\w+)\", \"name\": \"entity.name.type.go\" }] }, \"numeric_literals\": { \"captures\": { \"0\": { \"patterns\": [{ \"begin\": \"(?=.)\", \"end\": \"(?:\\\\n|$)\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"constant.numeric.decimal.go\", \"patterns\": [{ \"match\": \"(?<=[0-9a-fA-F])_(?=[0-9a-fA-F])\", \"name\": \"punctuation.separator.constant.numeric.go\" }] }, \"2\": { \"name\": \"punctuation.separator.constant.numeric.go\" }, \"3\": { \"name\": \"constant.numeric.decimal.point.go\" }, \"4\": { \"name\": \"constant.numeric.decimal.go\", \"patterns\": [{ \"match\": \"(?<=[0-9a-fA-F])_(?=[0-9a-fA-F])\", \"name\": \"punctuation.separator.constant.numeric.go\" }] }, \"5\": { \"name\": \"punctuation.separator.constant.numeric.go\" }, \"6\": { \"name\": \"keyword.other.unit.exponent.decimal.go\" }, \"7\": { \"name\": \"keyword.operator.plus.exponent.decimal.go\" }, \"8\": { \"name\": \"keyword.operator.minus.exponent.decimal.go\" }, \"9\": { \"name\": \"constant.numeric.exponent.decimal.go\", \"patterns\": [{ \"match\": \"(?<=[0-9a-fA-F])_(?=[0-9a-fA-F])\", \"name\": \"punctuation.separator.constant.numeric.go\" }] }, \"10\": { \"name\": \"keyword.other.unit.imaginary.go\" }, \"11\": { \"name\": \"constant.numeric.decimal.go\", \"patterns\": [{ \"match\": \"(?<=[0-9a-fA-F])_(?=[0-9a-fA-F])\", \"name\": \"punctuation.separator.constant.numeric.go\" }] }, \"12\": { \"name\": \"punctuation.separator.constant.numeric.go\" }, \"13\": { \"name\": \"keyword.other.unit.exponent.decimal.go\" }, \"14\": { \"name\": \"keyword.operator.plus.exponent.decimal.go\" }, \"15\": { \"name\": \"keyword.operator.minus.exponent.decimal.go\" }, \"16\": { \"name\": \"constant.numeric.exponent.decimal.go\", \"patterns\": [{ \"match\": \"(?<=[0-9a-fA-F])_(?=[0-9a-fA-F])\", \"name\": \"punctuation.separator.constant.numeric.go\" }] }, \"17\": { \"name\": \"keyword.other.unit.imaginary.go\" }, \"18\": { \"name\": \"constant.numeric.decimal.point.go\" }, \"19\": { \"name\": \"constant.numeric.decimal.go\", \"patterns\": [{ \"match\": \"(?<=[0-9a-fA-F])_(?=[0-9a-fA-F])\", \"name\": \"punctuation.separator.constant.numeric.go\" }] }, \"20\": { \"name\": \"punctuation.separator.constant.numeric.go\" }, \"21\": { \"name\": \"keyword.other.unit.exponent.decimal.go\" }, \"22\": { \"name\": \"keyword.operator.plus.exponent.decimal.go\" }, \"23\": { \"name\": \"keyword.operator.minus.exponent.decimal.go\" }, \"24\": { \"name\": \"constant.numeric.exponent.decimal.go\", \"patterns\": [{ \"match\": \"(?<=[0-9a-fA-F])_(?=[0-9a-fA-F])\", \"name\": \"punctuation.separator.constant.numeric.go\" }] }, \"25\": { \"name\": \"keyword.other.unit.imaginary.go\" }, \"26\": { \"name\": \"keyword.other.unit.hexadecimal.go\" }, \"27\": { \"name\": \"constant.numeric.hexadecimal.go\", \"patterns\": [{ \"match\": \"(?<=[0-9a-fA-F])_(?=[0-9a-fA-F])\", \"name\": \"punctuation.separator.constant.numeric.go\" }] }, \"28\": { \"name\": \"punctuation.separator.constant.numeric.go\" }, \"29\": { \"name\": \"constant.numeric.hexadecimal.go\" }, \"30\": { \"name\": \"constant.numeric.hexadecimal.go\", \"patterns\": [{ \"match\": \"(?<=[0-9a-fA-F])_(?=[0-9a-fA-F])\", \"name\": \"punctuation.separator.constant.numeric.go\" }] }, \"31\": { \"name\": \"punctuation.separator.constant.numeric.go\" }, \"32\": { \"name\": \"keyword.other.unit.exponent.hexadecimal.go\" }, \"33\": { \"name\": \"keyword.operator.plus.exponent.hexadecimal.go\" }, \"34\": { \"name\": \"keyword.operator.minus.exponent.hexadecimal.go\" }, \"35\": { \"name\": \"constant.numeric.exponent.hexadecimal.go\", \"patterns\": [{ \"match\": \"(?<=[0-9a-fA-F])_(?=[0-9a-fA-F])\", \"name\": \"punctuation.separator.constant.numeric.go\" }] }, \"36\": { \"name\": \"keyword.other.unit.imaginary.go\" }, \"37\": { \"name\": \"keyword.other.unit.hexadecimal.go\" }, \"38\": { \"name\": \"constant.numeric.hexadecimal.go\", \"patterns\": [{ \"match\": \"(?<=[0-9a-fA-F])_(?=[0-9a-fA-F])\", \"name\": \"punctuation.separator.constant.numeric.go\" }] }, \"39\": { \"name\": \"punctuation.separator.constant.numeric.go\" }, \"40\": { \"name\": \"keyword.other.unit.exponent.hexadecimal.go\" }, \"41\": { \"name\": \"keyword.operator.plus.exponent.hexadecimal.go\" }, \"42\": { \"name\": \"keyword.operator.minus.exponent.hexadecimal.go\" }, \"43\": { \"name\": \"constant.numeric.exponent.hexadecimal.go\", \"patterns\": [{ \"match\": \"(?<=[0-9a-fA-F])_(?=[0-9a-fA-F])\", \"name\": \"punctuation.separator.constant.numeric.go\" }] }, \"44\": { \"name\": \"keyword.other.unit.imaginary.go\" }, \"45\": { \"name\": \"keyword.other.unit.hexadecimal.go\" }, \"46\": { \"name\": \"constant.numeric.hexadecimal.go\" }, \"47\": { \"name\": \"constant.numeric.hexadecimal.go\", \"patterns\": [{ \"match\": \"(?<=[0-9a-fA-F])_(?=[0-9a-fA-F])\", \"name\": \"punctuation.separator.constant.numeric.go\" }] }, \"48\": { \"name\": \"punctuation.separator.constant.numeric.go\" }, \"49\": { \"name\": \"keyword.other.unit.exponent.hexadecimal.go\" }, \"50\": { \"name\": \"keyword.operator.plus.exponent.hexadecimal.go\" }, \"51\": { \"name\": \"keyword.operator.minus.exponent.hexadecimal.go\" }, \"52\": { \"name\": \"constant.numeric.exponent.hexadecimal.go\", \"patterns\": [{ \"match\": \"(?<=[0-9a-fA-F])_(?=[0-9a-fA-F])\", \"name\": \"punctuation.separator.constant.numeric.go\" }] }, \"53\": { \"name\": \"keyword.other.unit.imaginary.go\" } }, \"match\": \"(?:(?:(?:(?:(?:\\\\G(?=[0-9.])(?!0[xXbBoO])([0-9](?:[0-9]|((?<=[0-9a-fA-F])_(?=[0-9a-fA-F])))*)((?:(?<=[0-9])\\\\.|\\\\.(?=[0-9])))([0-9](?:[0-9]|((?<=[0-9a-fA-F])_(?=[0-9a-fA-F])))*)?(?:(?<!_)([eE])(\\\\+?)(\\\\-?)((?:[0-9](?:[0-9]|(?:(?<=[0-9a-fA-F])_(?=[0-9a-fA-F])))*)))?(i(?!\\\\w))?(?:\\\\n|$)|\\\\G(?=[0-9.])(?!0[xXbBoO])([0-9](?:[0-9]|((?<=[0-9a-fA-F])_(?=[0-9a-fA-F])))*)(?<!_)([eE])(\\\\+?)(\\\\-?)((?:[0-9](?:[0-9]|(?:(?<=[0-9a-fA-F])_(?=[0-9a-fA-F])))*))(i(?!\\\\w))?(?:\\\\n|$))|\\\\G((?:(?<=[0-9])\\\\.|\\\\.(?=[0-9])))([0-9](?:[0-9]|((?<=[0-9a-fA-F])_(?=[0-9a-fA-F])))*)(?:(?<!_)([eE])(\\\\+?)(\\\\-?)((?:[0-9](?:[0-9]|(?:(?<=[0-9a-fA-F])_(?=[0-9a-fA-F])))*)))?(i(?!\\\\w))?(?:\\\\n|$))|(\\\\G0[xX])_?([0-9a-fA-F](?:[0-9a-fA-F]|((?<=[0-9a-fA-F])_(?=[0-9a-fA-F])))*)((?:(?<=[0-9a-fA-F])\\\\.|\\\\.(?=[0-9a-fA-F])))([0-9a-fA-F](?:[0-9a-fA-F]|((?<=[0-9a-fA-F])_(?=[0-9a-fA-F])))*)?(?<!_)([pP])(\\\\+?)(\\\\-?)((?:[0-9](?:[0-9]|(?:(?<=[0-9a-fA-F])_(?=[0-9a-fA-F])))*))(i(?!\\\\w))?(?:\\\\n|$))|(\\\\G0[xX])_?([0-9a-fA-F](?:[0-9a-fA-F]|((?<=[0-9a-fA-F])_(?=[0-9a-fA-F])))*)(?<!_)([pP])(\\\\+?)(\\\\-?)((?:[0-9](?:[0-9]|(?:(?<=[0-9a-fA-F])_(?=[0-9a-fA-F])))*))(i(?!\\\\w))?(?:\\\\n|$))|(\\\\G0[xX])((?:(?<=[0-9a-fA-F])\\\\.|\\\\.(?=[0-9a-fA-F])))([0-9a-fA-F](?:[0-9a-fA-F]|((?<=[0-9a-fA-F])_(?=[0-9a-fA-F])))*)(?<!_)([pP])(\\\\+?)(\\\\-?)((?:[0-9](?:[0-9]|(?:(?<=[0-9a-fA-F])_(?=[0-9a-fA-F])))*))(i(?!\\\\w))?(?:\\\\n|$))\" }, { \"captures\": { \"1\": { \"name\": \"constant.numeric.decimal.go\", \"patterns\": [{ \"match\": \"(?<=[0-9a-fA-F])_(?=[0-9a-fA-F])\", \"name\": \"punctuation.separator.constant.numeric.go\" }] }, \"2\": { \"name\": \"punctuation.separator.constant.numeric.go\" }, \"3\": { \"name\": \"keyword.other.unit.imaginary.go\" }, \"4\": { \"name\": \"keyword.other.unit.binary.go\" }, \"5\": { \"name\": \"constant.numeric.binary.go\", \"patterns\": [{ \"match\": \"(?<=[0-9a-fA-F])_(?=[0-9a-fA-F])\", \"name\": \"punctuation.separator.constant.numeric.go\" }] }, \"6\": { \"name\": \"punctuation.separator.constant.numeric.go\" }, \"7\": { \"name\": \"keyword.other.unit.imaginary.go\" }, \"8\": { \"name\": \"keyword.other.unit.octal.go\" }, \"9\": { \"name\": \"constant.numeric.octal.go\", \"patterns\": [{ \"match\": \"(?<=[0-9a-fA-F])_(?=[0-9a-fA-F])\", \"name\": \"punctuation.separator.constant.numeric.go\" }] }, \"10\": { \"name\": \"punctuation.separator.constant.numeric.go\" }, \"11\": { \"name\": \"keyword.other.unit.imaginary.go\" }, \"12\": { \"name\": \"keyword.other.unit.hexadecimal.go\" }, \"13\": { \"name\": \"constant.numeric.hexadecimal.go\", \"patterns\": [{ \"match\": \"(?<=[0-9a-fA-F])_(?=[0-9a-fA-F])\", \"name\": \"punctuation.separator.constant.numeric.go\" }] }, \"14\": { \"name\": \"punctuation.separator.constant.numeric.go\" }, \"15\": { \"name\": \"keyword.other.unit.imaginary.go\" } }, \"match\": \"(?:(?:(?:\\\\G(?=[0-9.])(?!0[xXbBoO])([0-9](?:[0-9]|((?<=[0-9a-fA-F])_(?=[0-9a-fA-F])))*)(i(?!\\\\w))?(?:\\\\n|$)|(\\\\G0[bB])_?([01](?:[01]|((?<=[0-9a-fA-F])_(?=[0-9a-fA-F])))*)(i(?!\\\\w))?(?:\\\\n|$))|(\\\\G0[oO]?)_?((?:[0-7]|((?<=[0-9a-fA-F])_(?=[0-9a-fA-F])))+)(i(?!\\\\w))?(?:\\\\n|$))|(\\\\G0[xX])_?([0-9a-fA-F](?:[0-9a-fA-F]|((?<=[0-9a-fA-F])_(?=[0-9a-fA-F])))*)(i(?!\\\\w))?(?:\\\\n|$))\" }, { \"match\": \"(?:(?:[0-9a-zA-Z_\\\\.])|(?<=[eEpP])[+-])+\", \"name\": \"invalid.illegal.constant.numeric.go\" }] }] } }, \"match\": \"(?<!\\\\w)\\\\.?\\\\d(?:(?:[0-9a-zA-Z_\\\\.])|(?<=[eEpP])[+-])*\" }, \"operators\": { \"comment\": \"Note that the order here is very important!\", \"patterns\": [{ \"match\": \"((?:\\\\*|\\\\&)+)(?:(?!\\\\d)(?=(?:[\\\\w\\\\[\\\\]])|(?:\\\\<\\\\-)))\", \"name\": \"keyword.operator.address.go\" }, { \"match\": \"<\\\\-\", \"name\": \"keyword.operator.channel.go\" }, { \"match\": \"\\\\-\\\\-\", \"name\": \"keyword.operator.decrement.go\" }, { \"match\": \"\\\\+\\\\+\", \"name\": \"keyword.operator.increment.go\" }, { \"match\": \"(==|!=|<=|>=|<(?!<)|>(?!>))\", \"name\": \"keyword.operator.comparison.go\" }, { \"match\": \"(&&|\\\\|\\\\||!)\", \"name\": \"keyword.operator.logical.go\" }, { \"match\": \"(=|\\\\+=|\\\\-=|\\\\|=|\\\\^=|\\\\*=|/=|:=|%=|<<=|>>=|&\\\\^=|&=)\", \"name\": \"keyword.operator.assignment.go\" }, { \"match\": \"(\\\\+|\\\\-|\\\\*|/|%)\", \"name\": \"keyword.operator.arithmetic.go\" }, { \"match\": \"(&(?!\\\\^)|\\\\||\\\\^|&\\\\^|<<|>>|\\\\~)\", \"name\": \"keyword.operator.arithmetic.bitwise.go\" }, { \"match\": \"\\\\.\\\\.\\\\.\", \"name\": \"keyword.operator.ellipsis.go\" }] }, \"other_struct_interface_expressions\": { \"comment\": \"struct and interface expression in-line (before curly bracket)\", \"patterns\": [{ \"comment\": \"after control variables must be added exactly here, do not move it! (changing may not affect tests, so be careful!)\", \"include\": \"#after_control_variables\" }, { \"captures\": { \"1\": { \"patterns\": [{ \"include\": \"#type-declarations\" }, { \"match\": \"\\\\w+\", \"name\": \"entity.name.type.go\" }] }, \"2\": { \"patterns\": [{ \"begin\": \"\\\\[\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.begin.bracket.square.go\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.end.bracket.square.go\" } }, \"patterns\": [{ \"include\": \"#type-declarations\" }, { \"match\": \"\\\\w+\", \"name\": \"entity.name.type.go\" }, { \"include\": \"$self\" }] }] } }, \"match\": \"(\\\\b[\\\\w\\\\.]+)(\\\\[(?:[^\\\\]]+)?\\\\])?(?=\\\\{)(?<!\\\\bstruct\\\\b|\\\\binterface\\\\b)\" }] }, \"other_variables\": { \"comment\": \"all other variables\", \"match\": \"\\\\w+\", \"name\": \"variable.other.go\" }, \"package_name\": { \"patterns\": [{ \"begin\": \"\\\\b(package)\\\\s+\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.package.go\" } }, \"comment\": \"package name\", \"end\": \"(?!\\\\G)\", \"patterns\": [{ \"match\": \"\\\\d\\\\w*\", \"name\": \"invalid.illegal.identifier.go\" }, { \"match\": \"\\\\w+\", \"name\": \"entity.name.type.package.go\" }] }] }, \"parameter-variable-types\": { \"comment\": \"function and generic parameter types\", \"patterns\": [{ \"match\": \"\\\\{\", \"name\": \"punctuation.definition.begin.bracket.curly.go\" }, { \"match\": \"\\\\}\", \"name\": \"punctuation.definition.end.bracket.curly.go\" }, { \"begin\": \"(?:([\\\\w\\\\.\\\\*]+)?(\\\\[))\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#type-declarations\" }, { \"match\": \"(?:\\\\w+)\", \"name\": \"entity.name.type.go\" }] }, \"2\": { \"name\": \"punctuation.definition.begin.bracket.square.go\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.end.bracket.square.go\" } }, \"patterns\": [{ \"include\": \"#generic_param_types\" }] }, { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.begin.bracket.round.go\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.end.bracket.round.go\" } }, \"patterns\": [{ \"include\": \"#function_param_types\" }] }] }, \"property_variables\": { \"captures\": { \"1\": { \"patterns\": [{ \"include\": \"#type-declarations\" }, { \"match\": \"\\\\w+\", \"name\": \"variable.other.property.go\" }] } }, \"comment\": \"Property variables in struct\", \"match\": \"((?:\\\\b[\\\\w\\\\.]+)(?:\\\\:(?!\\\\=)))\" }, \"raw_string_literals\": { \"begin\": \"`\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.go\" } }, \"comment\": \"Raw string literals\", \"end\": \"`\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.go\" } }, \"name\": \"string.quoted.raw.go\", \"patterns\": [{ \"include\": \"#string_placeholder\" }] }, \"runes\": { \"patterns\": [{ \"begin\": \"'\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.go\" } }, \"end\": \"'\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.go\" } }, \"name\": \"string.quoted.rune.go\", \"patterns\": [{ \"match\": `\\\\G(\\\\\\\\([0-7]{3}|[abfnrtv\\\\\\\\'\"]|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8})|.)(?=')`, \"name\": \"constant.other.rune.go\" }, { \"match\": \"[^']+\", \"name\": \"invalid.illegal.unknown-rune.go\" }] }] }, \"single_type\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"keyword.type.go\" }, \"2\": { \"patterns\": [{ \"include\": \"#type-declarations\" }, { \"match\": \"\\\\w+\", \"name\": \"entity.name.type.go\" }] }, \"3\": { \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.begin.bracket.round.go\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.end.bracket.round.go\" } }, \"patterns\": [{ \"include\": \"#function_param_types\" }, { \"include\": \"$self\" }] }, { \"include\": \"#type-declarations\" }, { \"include\": \"#generic_types\" }, { \"match\": \"\\\\w+\", \"name\": \"entity.name.type.go\" }] } }, \"comment\": \"single type declaration\", \"match\": \"(?:(?:^\\\\s*)(\\\\btype\\\\b)(?:\\\\s*)([\\\\w\\\\.\\\\*]+)(?:\\\\s+)(?!(?:\\\\=\\\\s*)?(?:[\\\\[\\\\]\\\\*]+)?\\\\b(?:struct|interface)\\\\b)([\\\\s\\\\S]+))\" }, { \"begin\": \"(?:(?:^|\\\\s+)(\\\\btype\\\\b)(?:\\\\s*)([\\\\w\\\\.\\\\*]+)(?=\\\\[))\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.type.go\" }, \"2\": { \"patterns\": [{ \"include\": \"#type-declarations-without-brackets\" }, { \"match\": \"\\\\w+\", \"name\": \"entity.name.type.go\" }] } }, \"comment\": \"single type declaration with generics\", \"end\": \"(?:(?<=\\\\])((?:\\\\s+)(?:(?:(?:[\\\\*\\\\[\\\\]]+)?(?:\\\\<\\\\-\\\\s*)?\\\\bchan\\\\b(?:\\\\s*\\\\<\\\\-)?\\\\s*)+)?(?:(?!(?:[\\\\[\\\\]\\\\*]+)?(?:\\\\bstruct\\\\b|\\\\binterface\\\\b|\\\\bfunc\\\\b))[\\\\w\\\\.\\\\-\\\\*\\\\[\\\\]]+(?:\\\\,\\\\s+[\\\\w\\\\.\\\\[\\\\]\\\\*]+)*))?)\", \"endCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#type-declarations-without-brackets\" }, { \"match\": \"\\\\[\", \"name\": \"punctuation.definition.begin.bracket.square.go\" }, { \"match\": \"\\\\]\", \"name\": \"punctuation.definition.end.bracket.square.go\" }, { \"match\": \"\\\\w+\", \"name\": \"entity.name.type.go\" }] } }, \"patterns\": [{ \"include\": \"#struct_variables_types\" }, { \"include\": \"#type-declarations-without-brackets\" }, { \"include\": \"#parameter-variable-types\" }, { \"match\": \"\\\\[\", \"name\": \"punctuation.definition.begin.bracket.square.go\" }, { \"match\": \"\\\\]\", \"name\": \"punctuation.definition.end.bracket.square.go\" }, { \"match\": \"\\\\{\", \"name\": \"punctuation.definition.begin.bracket.curly.go\" }, { \"match\": \"\\\\}\", \"name\": \"punctuation.definition.end.bracket.curly.go\" }, { \"match\": \"\\\\(\", \"name\": \"punctuation.definition.begin.bracket.round.go\" }, { \"match\": \"\\\\)\", \"name\": \"punctuation.definition.end.bracket.round.go\" }, { \"match\": \"\\\\w+\", \"name\": \"entity.name.type.go\" }] }] }, \"slice_index_variables\": { \"captures\": { \"1\": { \"patterns\": [{ \"include\": \"#type-declarations\" }, { \"match\": \"\\\\w+\", \"name\": \"variable.other.go\" }] } }, \"comment\": \"slice index and capacity variables, to not scope them as property variables\", \"match\": \"(?<=\\\\w\\\\[)((?:(?:\\\\b[\\\\w\\\\.\\\\*\\\\+/\\\\-\\\\%\\\\<\\\\>\\\\|\\\\&]+\\\\:)|(?:\\\\:\\\\b[\\\\w\\\\.\\\\*\\\\+/\\\\-\\\\%\\\\<\\\\>\\\\|\\\\&]+))(?:\\\\b[\\\\w\\\\.\\\\*\\\\+/\\\\-\\\\%\\\\<\\\\>\\\\|\\\\&]+)?(?:\\\\:\\\\b[\\\\w\\\\.\\\\*\\\\+/\\\\-\\\\%\\\\<\\\\>\\\\|\\\\&]+)?)(?=\\\\])\" }, \"statements\": { \"patterns\": [{ \"include\": \"#package_name\" }, { \"include\": \"#import\" }, { \"include\": \"#syntax_errors\" }, { \"include\": \"#group-functions\" }, { \"include\": \"#group-types\" }, { \"include\": \"#group-variables\" }, { \"include\": \"#field_hover\" }] }, \"storage_types\": { \"patterns\": [{ \"match\": \"\\\\bbool\\\\b\", \"name\": \"storage.type.boolean.go\" }, { \"match\": \"\\\\bbyte\\\\b\", \"name\": \"storage.type.byte.go\" }, { \"match\": \"\\\\berror\\\\b\", \"name\": \"storage.type.error.go\" }, { \"match\": \"\\\\b(complex(64|128)|float(32|64)|u?int(8|16|32|64)?)\\\\b\", \"name\": \"storage.type.numeric.go\" }, { \"match\": \"\\\\brune\\\\b\", \"name\": \"storage.type.rune.go\" }, { \"match\": \"\\\\bstring\\\\b\", \"name\": \"storage.type.string.go\" }, { \"match\": \"\\\\buintptr\\\\b\", \"name\": \"storage.type.uintptr.go\" }, { \"match\": \"\\\\bany\\\\b\", \"name\": \"entity.name.type.any.go\" }] }, \"string_escaped_char\": { \"patterns\": [{ \"match\": `\\\\\\\\([0-7]{3}|[abfnrtv\\\\\\\\'\"]|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8})`, \"name\": \"constant.character.escape.go\" }, { \"match\": `\\\\\\\\[^0-7xuUabfnrtv\\\\'\"]`, \"name\": \"invalid.illegal.unknown-escape.go\" }] }, \"string_literals\": { \"patterns\": [{ \"begin\": '\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.go\" } }, \"comment\": \"Interpreted string literals\", \"end\": '\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.go\" } }, \"name\": \"string.quoted.double.go\", \"patterns\": [{ \"include\": \"#string_escaped_char\" }, { \"include\": \"#string_placeholder\" }] }] }, \"string_placeholder\": { \"patterns\": [{ \"match\": \"%(\\\\[\\\\d+\\\\])?([\\\\+#\\\\-0\\\\x20]{,2}((\\\\d+|\\\\*)?(\\\\.?(\\\\d+|\\\\*|(\\\\[\\\\d+\\\\])\\\\*?)?(\\\\[\\\\d+\\\\])?)?))?[vT%tbcdoqxXUbeEfFgGspw]\", \"name\": \"constant.other.placeholder.go\" }] }, \"struct_interface_declaration\": { \"captures\": { \"1\": { \"name\": \"keyword.type.go\" }, \"2\": { \"patterns\": [{ \"include\": \"#type-declarations\" }, { \"match\": \"\\\\w+\", \"name\": \"entity.name.type.go\" }] } }, \"comment\": \"struct, interface type declarations (related to: struct_variables_types, interface_variables_types)\", \"match\": \"(?:(?:^\\\\s*)(\\\\btype\\\\b)(?:\\\\s*)([\\\\w\\\\.]+))\" }, \"struct_variable_types_fields_multi\": { \"comment\": \"struct variable and type fields with multi lines\", \"patterns\": [{ \"begin\": \"(?:((?:\\\\w+(?:\\\\,\\\\s*\\\\w+)*)(?:(?:\\\\s*(?:[\\\\*\\\\[\\\\]]+)?(?:\\\\<\\\\-\\\\s*)?\\\\bchan\\\\b(?:\\\\s*\\\\<\\\\-)?\\\\s*)+)?(?:\\\\s+)(?:[\\\\[\\\\]\\\\*]+)?)(\\\\bstruct\\\\b)(?:\\\\s*)(\\\\{))\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#type-declarations\" }, { \"match\": \"\\\\w+\", \"name\": \"variable.other.property.go\" }] }, \"2\": { \"name\": \"keyword.struct.go\" }, \"3\": { \"name\": \"punctuation.definition.begin.bracket.curly.go\" } }, \"comment\": \"struct in struct types\", \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.end.bracket.curly.go\" } }, \"patterns\": [{ \"include\": \"#struct_variables_types_fields\" }, { \"include\": \"$self\" }] }, { \"begin\": \"(?:((?:\\\\w+(?:\\\\,\\\\s*\\\\w+)*)(?:(?:\\\\s*(?:[\\\\*\\\\[\\\\]]+)?(?:\\\\<\\\\-\\\\s*)?\\\\bchan\\\\b(?:\\\\s*\\\\<\\\\-)?\\\\s*)+)?(?:\\\\s+)(?:[\\\\[\\\\]\\\\*]+)?)(\\\\binterface\\\\b)(?:\\\\s*)(\\\\{))\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#type-declarations\" }, { \"match\": \"\\\\w+\", \"name\": \"variable.other.property.go\" }] }, \"2\": { \"name\": \"keyword.interface.go\" }, \"3\": { \"name\": \"punctuation.definition.begin.bracket.curly.go\" } }, \"comment\": \"interface in struct types\", \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.end.bracket.curly.go\" } }, \"patterns\": [{ \"include\": \"#interface_variables_types_field\" }, { \"include\": \"$self\" }] }, { \"begin\": \"(?:((?:\\\\w+(?:\\\\,\\\\s*\\\\w+)*)(?:(?:\\\\s*(?:[\\\\*\\\\[\\\\]]+)?(?:\\\\<\\\\-\\\\s*)?\\\\bchan\\\\b(?:\\\\s*\\\\<\\\\-)?\\\\s*)+)?(?:\\\\s+)(?:[\\\\[\\\\]\\\\*]+)?)(\\\\bfunc\\\\b)(?:\\\\s*)(\\\\())\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#type-declarations\" }, { \"match\": \"\\\\w+\", \"name\": \"variable.other.property.go\" }] }, \"2\": { \"name\": \"keyword.function.go\" }, \"3\": { \"name\": \"punctuation.definition.begin.bracket.round.go\" } }, \"comment\": \"function in struct types\", \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.end.bracket.round.go\" } }, \"patterns\": [{ \"include\": \"#function_param_types\" }, { \"include\": \"$self\" }] }, { \"begin\": \"(?:((?:(?:\\\\s*(?:[\\\\*\\\\[\\\\]]+)?(?:\\\\<\\\\-\\\\s*)?\\\\bchan\\\\b(?:\\\\s*\\\\<\\\\-)?\\\\s*)+)?(?<!\\\\,\\\\s*)(?:[\\\\w\\\\.\\\\*]+)\\\\s*)(?=\\\\`))\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#type-declarations\" }, { \"match\": \"\\\\w+\", \"name\": \"entity.name.type.go\" }] } }, \"comment\": \"one type only with multi line raw string\", \"end\": \"(?=\\\\`)\", \"patterns\": [{ \"include\": \"#raw_string_literals\" }] }, { \"include\": \"#parameter-variable-types\" }] }, \"struct_variables_types\": { \"begin\": \"(\\\\bstruct\\\\b)\\\\s*(\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.struct.go\" }, \"2\": { \"name\": \"punctuation.definition.begin.bracket.curly.go\" } }, \"comment\": \"Struct variable type\", \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.end.bracket.curly.go\" } }, \"patterns\": [{ \"include\": \"#struct_variables_types_fields\" }, { \"include\": \"$self\" }] }, \"struct_variables_types_fields\": { \"comment\": \"Struct variable type fields\", \"patterns\": [{ \"include\": \"#struct_variable_types_fields_multi\" }, { \"captures\": { \"1\": { \"patterns\": [{ \"include\": \"#type-declarations\" }, { \"match\": \"(?:\\\\w+)\", \"name\": \"entity.name.type.go\" }] } }, \"comment\": \"one line - single type\", \"match\": \"(?:(?<=\\\\{)\\\\s*((?:(?:\\\\s*(?:[\\\\*\\\\[\\\\]]+)?(?:\\\\<\\\\-\\\\s*)?\\\\bchan\\\\b(?:\\\\s*\\\\<\\\\-)?\\\\s*)+)?(?:[\\\\w\\\\.\\\\*\\\\[\\\\]]+))\\\\s*(?=\\\\}))\" }, { \"captures\": { \"1\": { \"patterns\": [{ \"include\": \"#type-declarations\" }, { \"match\": \"(?:\\\\w+)\", \"name\": \"variable.other.property.go\" }] }, \"2\": { \"patterns\": [{ \"include\": \"#type-declarations\" }, { \"match\": \"(?:\\\\w+)\", \"name\": \"entity.name.type.go\" }] } }, \"comment\": \"one line - property variables and types\", \"match\": \"(?:(?<=\\\\{)\\\\s*((?:(?:\\\\w+\\\\,\\\\s*)+)?(?:\\\\w+\\\\s+))((?:(?:\\\\s*(?:[\\\\*\\\\[\\\\]]+)?(?:\\\\<\\\\-\\\\s*)?\\\\bchan\\\\b(?:\\\\s*\\\\<\\\\-)?\\\\s*)+)?(?:[\\\\w\\\\.\\\\*\\\\[\\\\]]+))\\\\s*(?=\\\\}))\" }, { \"captures\": { \"1\": { \"patterns\": [{ \"captures\": { \"1\": { \"patterns\": [{ \"include\": \"#type-declarations\" }, { \"match\": \"(?:\\\\w+)\", \"name\": \"variable.other.property.go\" }] }, \"2\": { \"patterns\": [{ \"include\": \"#type-declarations\" }, { \"match\": \"(?:\\\\w+)\", \"name\": \"entity.name.type.go\" }] } }, \"match\": \"(?:((?:(?:\\\\w+\\\\,\\\\s*)+)?(?:\\\\w+\\\\s+))?((?:(?:\\\\s*(?:[\\\\*\\\\[\\\\]]+)?(?:\\\\<\\\\-\\\\s*)?\\\\bchan\\\\b(?:\\\\s*\\\\<\\\\-)?\\\\s*)+)?(?:[\\\\S]+)(?:\\\\;)?))\" }] } }, \"comment\": \"one line with semicolon(;) without formatting gofmt - single type | property variables and types\", \"match\": \"(?:(?<=\\\\{)((?:\\\\s*(?:(?:(?:\\\\w+\\\\,\\\\s*)+)?(?:\\\\w+\\\\s+))?(?:(?:(?:\\\\s*(?:[\\\\*\\\\[\\\\]]+)?(?:\\\\<\\\\-\\\\s*)?\\\\bchan\\\\b(?:\\\\s*\\\\<\\\\-)?\\\\s*)+)?(?:[\\\\S]+)(?:\\\\;)?))+)\\\\s*(?=\\\\}))\" }, { \"captures\": { \"1\": { \"patterns\": [{ \"include\": \"#type-declarations\" }, { \"match\": \"(?:\\\\w+)\", \"name\": \"entity.name.type.go\" }] } }, \"comment\": \"one type only\", \"match\": '(?:((?:(?:\\\\s*(?:[\\\\*\\\\[\\\\]]+)?(?:\\\\<\\\\-\\\\s*)?\\\\bchan\\\\b(?:\\\\s*\\\\<\\\\-)?\\\\s*)+)?(?<!\\\\,\\\\s*)(?:[\\\\w\\\\.\\\\*]+)\\\\s*(?:(?:(?:\".*\")|(?:\\\\`.*\\\\`))\\\\s*)?(?:/(?:/|\\\\*).*)?)$)' }, { \"captures\": { \"1\": { \"patterns\": [{ \"include\": \"#type-declarations\" }, { \"match\": \"(?:\\\\w+)\", \"name\": \"variable.other.property.go\" }] }, \"2\": { \"patterns\": [{ \"include\": \"#type-declarations-without-brackets\" }, { \"include\": \"#parameter-variable-types\" }, { \"match\": \"(?:\\\\w+)\", \"name\": \"entity.name.type.go\" }] } }, \"comment\": \"property variables and types\", \"match\": \"(?:((?:(?:\\\\w+\\\\,\\\\s*)+)?(?:\\\\w+\\\\s+))([^\\\\`]+))\" }] }, \"support_functions\": { \"captures\": { \"1\": { \"name\": \"entity.name.function.support.go\" }, \"2\": { \"patterns\": [{ \"include\": \"#type-declarations\" }, { \"match\": \"\\\\d\\\\w*\", \"name\": \"invalid.illegal.identifier.go\" }, { \"match\": \"\\\\w+\", \"name\": \"entity.name.function.support.go\" }] }, \"3\": { \"patterns\": [{ \"include\": \"#type-declarations-without-brackets\" }, { \"match\": \"\\\\[\", \"name\": \"punctuation.definition.begin.bracket.square.go\" }, { \"match\": \"\\\\]\", \"name\": \"punctuation.definition.end.bracket.square.go\" }, { \"match\": \"\\\\{\", \"name\": \"punctuation.definition.begin.bracket.curly.go\" }, { \"match\": \"\\\\}\", \"name\": \"punctuation.definition.end.bracket.curly.go\" }, { \"match\": \"\\\\w+\", \"name\": \"entity.name.type.go\" }] } }, \"comment\": \"Support Functions\", \"match\": `(?:(?:((?<=\\\\.)\\\\b\\\\w+)|(\\\\b\\\\w+))(\\\\[(?:(?:[\\\\w\\\\.\\\\*\\\\[\\\\]\\\\{\\\\}\"\\\\']+)(?:(?:\\\\,\\\\s*(?:[\\\\w\\\\.\\\\*\\\\[\\\\]\\\\{\\\\}]+))*))?\\\\])?(?=\\\\())` }, \"switch_select_case_variables\": { \"captures\": { \"1\": { \"name\": \"keyword.control.go\" }, \"2\": { \"patterns\": [{ \"include\": \"#type-declarations\" }, { \"include\": \"#support_functions\" }, { \"include\": \"#variable_assignment\" }, { \"match\": \"\\\\w+\", \"name\": \"variable.other.go\" }] } }, \"comment\": \"variables after case control keyword in switch/select expression, to not scope them as property variables\", \"match\": \"(?:(?:^\\\\s*(\\\\bcase\\\\b))(?:\\\\s+)([\\\\s\\\\S]+(?:\\\\:)\\\\s*(?:/(?:/|\\\\*).*)?)$)\" }, \"switch_types\": { \"begin\": \"(?<=\\\\bswitch\\\\b)(?:\\\\s*)(?:(\\\\w+\\\\s*\\\\:\\\\=)?\\\\s*([\\\\w\\\\.\\\\*\\\\(\\\\)\\\\[\\\\]\\\\+/\\\\-\\\\%\\\\<\\\\>\\\\|\\\\&]+))(\\\\.\\\\(\\\\btype\\\\b\\\\)\\\\s*)(\\\\{)\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#operators\" }, { \"match\": \"\\\\w+\", \"name\": \"variable.other.assignment.go\" }] }, \"2\": { \"patterns\": [{ \"include\": \"#support_functions\" }, { \"include\": \"#type-declarations\" }, { \"match\": \"\\\\w+\", \"name\": \"variable.other.go\" }] }, \"3\": { \"patterns\": [{ \"include\": \"#delimiters\" }, { \"include\": \"#brackets\" }, { \"match\": \"\\\\btype\\\\b\", \"name\": \"keyword.type.go\" }] }, \"4\": { \"name\": \"punctuation.definition.begin.bracket.curly.go\" } }, \"comment\": \"switch type assertions, only highlights types after case keyword\", \"end\": \"(?:\\\\})\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.end.bracket.curly.go\" } }, \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"keyword.control.go\" }, \"2\": { \"patterns\": [{ \"include\": \"#type-declarations\" }, { \"match\": \"\\\\w+\", \"name\": \"entity.name.type.go\" }] }, \"3\": { \"name\": \"punctuation.other.colon.go\" }, \"4\": { \"patterns\": [{ \"include\": \"#comments\" }] } }, \"comment\": \"types after case keyword with single line\", \"match\": \"(?:^\\\\s*(\\\\bcase\\\\b))(?:\\\\s+)([\\\\w\\\\.\\\\,\\\\*\\\\=\\\\<\\\\>\\\\!\\\\s]+)(:)(\\\\s*/(?:/|\\\\*)\\\\s*.*)?$\" }, { \"begin\": \"\\\\bcase\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.control.go\" } }, \"comment\": \"types after case keyword with multi lines\", \"end\": \"\\\\:\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.other.colon.go\" } }, \"patterns\": [{ \"include\": \"#type-declarations\" }, { \"match\": \"\\\\w+\", \"name\": \"entity.name.type.go\" }] }, { \"include\": \"$self\" }] }, \"syntax_errors\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"invalid.illegal.slice.go\" } }, \"comment\": \"Syntax error using slices\", \"match\": \"\\\\[\\\\](\\\\s+)\" }, { \"comment\": \"Syntax error numeric literals\", \"match\": \"\\\\b0[0-7]*[89]\\\\d*\\\\b\", \"name\": \"invalid.illegal.numeric.go\" }] }, \"terminators\": { \"comment\": \"Terminators\", \"match\": \";\", \"name\": \"punctuation.terminator.go\" }, \"type-declarations\": { \"comment\": \"includes all type declarations\", \"patterns\": [{ \"include\": \"#language_constants\" }, { \"include\": \"#comments\" }, { \"include\": \"#map_types\" }, { \"include\": \"#brackets\" }, { \"include\": \"#delimiters\" }, { \"include\": \"#keywords\" }, { \"include\": \"#operators\" }, { \"include\": \"#runes\" }, { \"include\": \"#storage_types\" }, { \"include\": \"#raw_string_literals\" }, { \"include\": \"#string_literals\" }, { \"include\": \"#numeric_literals\" }, { \"include\": \"#terminators\" }] }, \"type-declarations-without-brackets\": { \"comment\": \"includes all type declarations without brackets (in some cases, brackets need to be captured manually)\", \"patterns\": [{ \"include\": \"#language_constants\" }, { \"include\": \"#comments\" }, { \"include\": \"#map_types\" }, { \"include\": \"#delimiters\" }, { \"include\": \"#keywords\" }, { \"include\": \"#operators\" }, { \"include\": \"#runes\" }, { \"include\": \"#storage_types\" }, { \"include\": \"#raw_string_literals\" }, { \"include\": \"#string_literals\" }, { \"include\": \"#numeric_literals\" }, { \"include\": \"#terminators\" }] }, \"type_assertion_inline\": { \"captures\": { \"1\": { \"name\": \"keyword.type.go\" }, \"2\": { \"patterns\": [{ \"include\": \"#type-declarations\" }, { \"match\": \"(?:\\\\w+)\", \"name\": \"entity.name.type.go\" }] } }, \"comment\": \"struct/interface types in-line (type assertion) | switch type keyword\", \"match\": \"(?:(?<=\\\\.\\\\()(?:(\\\\btype\\\\b)|((?:(?:\\\\s*(?:[\\\\*\\\\[\\\\]]+)?(?:\\\\<\\\\-\\\\s*)?\\\\bchan\\\\b(?:\\\\s*\\\\<\\\\-)?\\\\s*)+)?[\\\\w\\\\.\\\\[\\\\]\\\\*]+))(?=\\\\)))\" }, \"var_const_assignment\": { \"comment\": \"variable assignment with var and const keyword\", \"patterns\": [{ \"captures\": { \"1\": { \"patterns\": [{ \"include\": \"#delimiters\" }, { \"match\": \"\\\\w+\", \"name\": \"variable.other.assignment.go\" }] }, \"2\": { \"patterns\": [{ \"include\": \"#type-declarations-without-brackets\" }, { \"include\": \"#generic_types\" }, { \"match\": \"\\\\(\", \"name\": \"punctuation.definition.begin.bracket.round.go\" }, { \"match\": \"\\\\)\", \"name\": \"punctuation.definition.end.bracket.round.go\" }, { \"match\": \"\\\\[\", \"name\": \"punctuation.definition.begin.bracket.square.go\" }, { \"match\": \"\\\\]\", \"name\": \"punctuation.definition.end.bracket.square.go\" }, { \"match\": \"\\\\w+\", \"name\": \"entity.name.type.go\" }] } }, \"comment\": \"var and const with single type assignment\", \"match\": \"(?:(?<=\\\\bvar\\\\b|\\\\bconst\\\\b)(?:\\\\s*)(\\\\b[\\\\w\\\\.]+(?:\\\\,\\\\s*[\\\\w\\\\.]+)*)(?:\\\\s*)((?:(?:(?:[\\\\*\\\\[\\\\]]+)?(?:\\\\<\\\\-\\\\s*)?\\\\bchan\\\\b(?:\\\\s*\\\\<\\\\-)?\\\\s*)+(?:\\\\([^\\\\)]+\\\\))?)?(?!(?:[\\\\[\\\\]\\\\*]+)?\\\\b(?:struct|func|map)\\\\b)(?:[\\\\w\\\\.\\\\[\\\\]\\\\*]+(?:\\\\,\\\\s*[\\\\w\\\\.\\\\[\\\\]\\\\*]+)*)?(?:\\\\s*)(?:\\\\=)?)?)\" }, { \"begin\": \"(?:(?<=\\\\bvar\\\\b|\\\\bconst\\\\b)(?:\\\\s*)(\\\\())\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.begin.bracket.round.go\" } }, \"comment\": \"var and const with multi type assignment\", \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.end.bracket.round.go\" } }, \"patterns\": [{ \"captures\": { \"1\": { \"patterns\": [{ \"include\": \"#delimiters\" }, { \"match\": \"\\\\w+\", \"name\": \"variable.other.assignment.go\" }] }, \"2\": { \"patterns\": [{ \"include\": \"#type-declarations-without-brackets\" }, { \"include\": \"#generic_types\" }, { \"match\": \"\\\\(\", \"name\": \"punctuation.definition.begin.bracket.round.go\" }, { \"match\": \"\\\\)\", \"name\": \"punctuation.definition.end.bracket.round.go\" }, { \"match\": \"\\\\[\", \"name\": \"punctuation.definition.begin.bracket.square.go\" }, { \"match\": \"\\\\]\", \"name\": \"punctuation.definition.end.bracket.square.go\" }, { \"match\": \"\\\\w+\", \"name\": \"entity.name.type.go\" }] } }, \"match\": \"(?:(?:^\\\\s*)(\\\\b[\\\\w\\\\.]+(?:\\\\,\\\\s*[\\\\w\\\\.]+)*)(?:\\\\s*)((?:(?:(?:[\\\\*\\\\[\\\\]]+)?(?:\\\\<\\\\-\\\\s*)?\\\\bchan\\\\b(?:\\\\s*\\\\<\\\\-)?\\\\s*)+(?:\\\\([^\\\\)]+\\\\))?)?(?!(?:[\\\\[\\\\]\\\\*]+)?\\\\b(?:struct|func|map)\\\\b)(?:[\\\\w\\\\.\\\\[\\\\]\\\\*]+(?:\\\\,\\\\s*[\\\\w\\\\.\\\\[\\\\]\\\\*]+)*)?(?:\\\\s*)(?:\\\\=)?)?)\" }, { \"include\": \"$self\" }] }] }, \"variable_assignment\": { \"comment\": \"variable assignment\", \"patterns\": [{ \"captures\": { \"0\": { \"patterns\": [{ \"include\": \"#delimiters\" }, { \"match\": \"\\\\d\\\\w*\", \"name\": \"invalid.illegal.identifier.go\" }, { \"match\": \"\\\\w+\", \"name\": \"variable.other.assignment.go\" }] } }, \"comment\": \"variable assignment with :=\", \"match\": \"\\\\b\\\\w+(?:\\\\,\\\\s*\\\\w+)*(?=\\\\s*:=)\" }, { \"captures\": { \"0\": { \"patterns\": [{ \"include\": \"#delimiters\" }, { \"include\": \"#operators\" }, { \"match\": \"\\\\d\\\\w*\", \"name\": \"invalid.illegal.identifier.go\" }, { \"match\": \"\\\\w+\", \"name\": \"variable.other.assignment.go\" }] } }, \"comment\": \"variable assignment with =\", \"match\": \"\\\\b[\\\\w\\\\.\\\\*]+(?:\\\\,\\\\s*[\\\\w\\\\.\\\\*]+)*(?=\\\\s*=(?!=))\" }] } }, \"scopeName\": \"source.go\" });\nvar go = [\n  lang\n];\n\nexport { go as default };\n"],"x_google_ignoreList":[0]}