{"version":3,"file":"7868.2d3bab7a0cda1738.js","mappings":"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","names":["typst","Object","freeze","displayName","name","patterns","include","repository","arguments","match","code","begin","captures","end","beginCaptures","comment","comments","common","constants","markup","contentName","endCaptures","scopeName","aliases"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./node_modules/shiki/dist/langs/typst.mjs"],"sourcesContent":["const lang = Object.freeze({ \"displayName\": \"Typst\", \"name\": \"typst\", \"patterns\": [{ \"include\": \"#markup\" }], \"repository\": { \"arguments\": { \"patterns\": [{ \"match\": \"\\\\b[[:alpha:]_][[:alnum:]_-]*(?=:)\", \"name\": \"variable.parameter.typst\" }, { \"include\": \"#code\" }] }, \"code\": { \"patterns\": [{ \"include\": \"#common\" }, { \"begin\": \"{\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.block.code.typst\" } }, \"end\": \"}\", \"name\": \"meta.block.code.typst\", \"patterns\": [{ \"include\": \"#code\" }] }, { \"begin\": \"\\\\[\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.block.content.typst\" } }, \"end\": \"\\\\]\", \"name\": \"meta.block.content.typst\", \"patterns\": [{ \"include\": \"#markup\" }] }, { \"begin\": \"//\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.typst\" } }, \"end\": \"\\n\", \"name\": \"comment.line.double-slash.typst\" }, { \"match\": \":\", \"name\": \"punctuation.separator.colon.typst\" }, { \"match\": \",\", \"name\": \"punctuation.separator.comma.typst\" }, { \"match\": \"=>|\\\\.\\\\.\", \"name\": \"keyword.operator.typst\" }, { \"match\": \"==|!=|<=|<|>=|>\", \"name\": \"keyword.operator.relational.typst\" }, { \"match\": \"\\\\+=|-=|\\\\*=|/=|=\", \"name\": \"keyword.operator.assignment.typst\" }, { \"match\": \"\\\\+|\\\\*|/|(?<![[:alpha:]_][[:alnum:]_-]*)-(?![:alnum:]_-]*[[:alpha:]_])\", \"name\": \"keyword.operator.arithmetic.typst\" }, { \"match\": \"\\\\b(and|or|not)\\\\b\", \"name\": \"keyword.operator.word.typst\" }, { \"match\": \"\\\\b(let|as|in|set|show)\\\\b\", \"name\": \"keyword.other.typst\" }, { \"match\": \"\\\\b(if|else)\\\\b\", \"name\": \"keyword.control.conditional.typst\" }, { \"match\": \"\\\\b(for|while|break|continue)\\\\b\", \"name\": \"keyword.control.loop.typst\" }, { \"match\": \"\\\\b(import|include|export)\\\\b\", \"name\": \"keyword.control.import.typst\" }, { \"match\": \"\\\\b(return)\\\\b\", \"name\": \"keyword.control.flow.typst\" }, { \"include\": \"#constants\" }, { \"comment\": \"Function name\", \"match\": \"\\\\b[[:alpha:]_][[:alnum:]_-]*!?(?=\\\\[|\\\\()\", \"name\": \"entity.name.function.typst\" }, { \"comment\": \"Function name\", \"match\": \"(?<=\\\\bshow\\\\s*)\\\\b[[:alpha:]_][[:alnum:]_-]*(?=\\\\s*[:.])\", \"name\": \"entity.name.function.typst\" }, { \"begin\": \"(?<=\\\\b[[:alpha:]_][[:alnum:]_-]*!?)\\\\(\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.group.typst\" } }, \"comment\": \"Function arguments\", \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"#arguments\" }] }, { \"match\": \"\\\\b[[:alpha:]_][[:alnum:]_-]*\\\\b\", \"name\": \"variable.other.typst\" }, { \"begin\": \"\\\\(\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.group.typst\" } }, \"end\": \"\\\\)|(?=;)\", \"name\": \"meta.group.typst\", \"patterns\": [{ \"include\": \"#code\" }] }] }, \"comments\": { \"patterns\": [{ \"begin\": \"/\\\\*\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.comment.typst\" } }, \"end\": \"\\\\*/\", \"name\": \"comment.block.typst\", \"patterns\": [{ \"include\": \"#comments\" }] }, { \"begin\": \"(?<!:)//\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.typst\" } }, \"end\": \"\\n\", \"name\": \"comment.line.double-slash.typst\", \"patterns\": [{ \"include\": \"#comments\" }] }] }, \"common\": { \"patterns\": [{ \"include\": \"#comments\" }] }, \"constants\": { \"patterns\": [{ \"match\": \"\\\\bnone\\\\b\", \"name\": \"constant.language.none.typst\" }, { \"match\": \"\\\\bauto\\\\b\", \"name\": \"constant.language.auto.typst\" }, { \"match\": \"\\\\b(true|false)\\\\b\", \"name\": \"constant.language.boolean.typst\" }, { \"match\": \"\\\\b(\\\\d*)?\\\\.?\\\\d+([eE][+-]?\\\\d+)?(mm|pt|cm|in|em)\\\\b\", \"name\": \"constant.numeric.length.typst\" }, { \"match\": \"\\\\b(\\\\d*)?\\\\.?\\\\d+([eE][+-]?\\\\d+)?(rad|deg)\\\\b\", \"name\": \"constant.numeric.angle.typst\" }, { \"match\": \"\\\\b(\\\\d*)?\\\\.?\\\\d+([eE][+-]?\\\\d+)?%\", \"name\": \"constant.numeric.percentage.typst\" }, { \"match\": \"\\\\b(\\\\d*)?\\\\.?\\\\d+([eE][+-]?\\\\d+)?fr\", \"name\": \"constant.numeric.fr.typst\" }, { \"match\": \"\\\\b\\\\d+\\\\b\", \"name\": \"constant.numeric.integer.typst\" }, { \"match\": \"\\\\b(\\\\d*)?\\\\.?\\\\d+([eE][+-]?\\\\d+)?\\\\b\", \"name\": \"constant.numeric.float.typst\" }, { \"begin\": '\"', \"captures\": { \"0\": { \"name\": \"punctuation.definition.string.typst\" } }, \"end\": '\"', \"name\": \"string.quoted.double.typst\", \"patterns\": [{ \"match\": '\\\\\\\\([\\\\\\\\\"nrt]|u\\\\{?[0-9a-zA-Z]*\\\\}?)', \"name\": \"constant.character.escape.string.typst\" }] }, { \"begin\": \"\\\\$\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.string.math.typst\" } }, \"end\": \"\\\\$\", \"name\": \"string.other.math.typst\" }] }, \"markup\": { \"patterns\": [{ \"include\": \"#common\" }, { \"match\": \"\\\\\\\\([\\\\\\\\/\\\\[\\\\]{}#*_=~`$-.]|u\\\\{[0-9a-zA-Z]*\\\\}?)\", \"name\": \"constant.character.escape.content.typst\" }, { \"match\": \"\\\\\\\\\", \"name\": \"punctuation.definition.linebreak.typst\" }, { \"match\": \"~\", \"name\": \"punctuation.definition.nonbreaking-space.typst\" }, { \"match\": \"-\\\\?\", \"name\": \"punctuation.definition.shy.typst\" }, { \"match\": \"---\", \"name\": \"punctuation.definition.em-dash.typst\" }, { \"match\": \"--\", \"name\": \"punctuation.definition.en-dash.typst\" }, { \"match\": \"\\\\.\\\\.\\\\.\", \"name\": \"punctuation.definition.ellipsis.typst\" }, { \"match\": \":([a-zA-Z0-9]+:)+\", \"name\": \"constant.symbol.typst\" }, { \"begin\": \"(^\\\\*|\\\\*$|((?<=\\\\W|_)\\\\*)|(\\\\*(?=\\\\W|_)))\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.bold.typst\" } }, \"end\": \"(^\\\\*|\\\\*$|((?<=\\\\W|_)\\\\*)|(\\\\*(?=\\\\W|_)))|\\n|(?=\\\\])\", \"name\": \"markup.bold.typst\", \"patterns\": [{ \"include\": \"#markup\" }] }, { \"begin\": \"(^_|_$|((?<=\\\\W|_)_)|(_(?=\\\\W|_)))\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.italic.typst\" } }, \"end\": \"(^_|_$|((?<=\\\\W|_)_)|(_(?=\\\\W|_)))|\\n|(?=\\\\])\", \"name\": \"markup.italic.typst\", \"patterns\": [{ \"include\": \"#markup\" }] }, { \"match\": \"https?://[0-9a-zA-Z~/%#&=',;\\\\.\\\\+\\\\?]*\", \"name\": \"markup.underline.link.typst\" }, { \"begin\": \"`{3,}\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.raw.typst\" } }, \"end\": \"\\\\0\", \"name\": \"markup.raw.block.typst\" }, { \"begin\": \"`\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.raw.typst\" } }, \"end\": \"`\", \"name\": \"markup.raw.inline.typst\" }, { \"begin\": \"\\\\$\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.string.math.typst\" } }, \"end\": \"\\\\$\", \"name\": \"string.other.math.typst\" }, { \"begin\": \"^\\\\s*=+\\\\s+\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.heading.typst\" } }, \"contentName\": \"entity.name.section.typst\", \"end\": \"\\n|(?=<)\", \"name\": \"markup.heading.typst\", \"patterns\": [{ \"include\": \"#markup\" }] }, { \"match\": \"^\\\\s*-\\\\s+\", \"name\": \"punctuation.definition.list.unnumbered.typst\" }, { \"match\": \"^\\\\s*([0-9]*\\\\.|\\\\+)\\\\s+\", \"name\": \"punctuation.definition.list.numbered.typst\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.list.description.typst\" }, \"2\": { \"name\": \"markup.list.term.typst\" } }, \"match\": \"^\\\\s*(/)\\\\s+([^:]*:)\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.label.typst\" } }, \"match\": \"<[[:alpha:]_][[:alnum:]_-]*>\", \"name\": \"entity.other.label.typst\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.reference.typst\" } }, \"match\": \"(@)[[:alpha:]_][[:alnum:]_-]*\", \"name\": \"entity.other.reference.typst\" }, { \"begin\": \"(#)(let|set|show)\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.other.typst\" }, \"1\": { \"name\": \"punctuation.definition.keyword.typst\" } }, \"end\": \"\\n|(;)|(?=])\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.terminator.statement.typst\" } }, \"patterns\": [{ \"include\": \"#code\" }] }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.keyword.typst\" } }, \"match\": \"(#)(as|in)\\\\b\", \"name\": \"keyword.other.typst\" }, { \"begin\": \"((#)if|(?<=(}|])\\\\s*)else)\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.control.conditional.typst\" }, \"2\": { \"name\": \"punctuation.definition.keyword.typst\" } }, \"end\": \"\\n|(?=])|(?<=}|])\", \"patterns\": [{ \"include\": \"#code\" }] }, { \"begin\": \"(#)(for|while)\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.control.loop.typst\" }, \"1\": { \"name\": \"punctuation.definition.keyword.typst\" } }, \"end\": \"\\n|(?=])|(?<=}|])\", \"patterns\": [{ \"include\": \"#code\" }] }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.keyword.typst\" } }, \"match\": \"(#)(break|continue)\\\\b\", \"name\": \"keyword.control.loop.typst\" }, { \"begin\": \"(#)(import|include|export)\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.control.import.typst\" }, \"1\": { \"name\": \"punctuation.definition.keyword.typst\" } }, \"end\": \"\\n|(;)|(?=])\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.terminator.statement.typst\" } }, \"patterns\": [{ \"include\": \"#code\" }] }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.keyword.typst\" } }, \"match\": \"(#)(return)\\\\b\", \"name\": \"keyword.control.flow.typst\" }, { \"captures\": { \"2\": { \"name\": \"punctuation.definition.function.typst\" } }, \"comment\": \"Function name\", \"match\": \"((#)[[:alpha:]_][[:alnum:]_-]*!?)(?=\\\\[|\\\\()\", \"name\": \"entity.name.function.typst\" }, { \"begin\": \"(?<=#[[:alpha:]_][[:alnum:]_-]*!?)\\\\(\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.group.typst\" } }, \"comment\": \"Function arguments\", \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"#arguments\" }] }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.variable.typst\" } }, \"match\": \"(#)[[:alpha:]_][.[:alnum:]_-]*\", \"name\": \"entity.other.interpolated.typst\" }, { \"begin\": \"#\", \"end\": \"\\\\s\", \"name\": \"meta.block.content.typst\", \"patterns\": [{ \"include\": \"#code\" }] }] } }, \"scopeName\": \"source.typst\", \"aliases\": [\"typ\"] });\nvar typst = [\n  lang\n];\n\nexport { typst as default };\n"],"x_google_ignoreList":[0]}