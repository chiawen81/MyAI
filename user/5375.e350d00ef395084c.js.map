{"version":3,"file":"5375.e350d00ef395084c.js","mappings":"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","names":["erlang","Object","freeze","displayName","fileTypes","name","patterns","include","repository","atom","begin","beginCaptures","end","endCaptures","captures","match","binary","character","comment","directive","docstring","expression","function","keyword","list","number","string","tuple","variable","scopeName","aliases"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./node_modules/shiki/dist/langs/erlang.mjs"],"sourcesContent":["const lang = Object.freeze({ \"displayName\": \"Erlang\", \"fileTypes\": [\"erl\", \"escript\", \"hrl\", \"xrl\", \"yrl\"], \"name\": \"erlang\", \"patterns\": [{ \"include\": \"#module-directive\" }, { \"include\": \"#import-export-directive\" }, { \"include\": \"#behaviour-directive\" }, { \"include\": \"#record-directive\" }, { \"include\": \"#define-directive\" }, { \"include\": \"#macro-directive\" }, { \"include\": \"#directive\" }, { \"include\": \"#function\" }, { \"include\": \"#everything-else\" }], \"repository\": { \"atom\": { \"patterns\": [{ \"begin\": \"(')\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.symbol.begin.erlang\" } }, \"end\": \"(')\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.symbol.end.erlang\" } }, \"name\": \"constant.other.symbol.quoted.single.erlang\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"punctuation.definition.escape.erlang\" }, \"3\": { \"name\": \"punctuation.definition.escape.erlang\" } }, \"match\": `(\\\\\\\\)([bdefnrstv\\\\\\\\'\"]|(\\\\^)[@-_a-z]|[0-7]{1,3}|x[\\\\da-fA-F]{2})`, \"name\": \"constant.other.symbol.escape.erlang\" }, { \"match\": \"\\\\\\\\\\\\^?.?\", \"name\": \"invalid.illegal.atom.erlang\" }] }, { \"match\": \"[a-z][a-zA-Z\\\\d@_]*+\", \"name\": \"constant.other.symbol.unquoted.erlang\" }] }, \"behaviour-directive\": { \"captures\": { \"1\": { \"name\": \"punctuation.section.directive.begin.erlang\" }, \"2\": { \"name\": \"keyword.control.directive.behaviour.erlang\" }, \"3\": { \"name\": \"punctuation.definition.parameters.begin.erlang\" }, \"4\": { \"name\": \"entity.name.type.class.behaviour.definition.erlang\" }, \"5\": { \"name\": \"punctuation.definition.parameters.end.erlang\" }, \"6\": { \"name\": \"punctuation.section.directive.end.erlang\" } }, \"match\": \"^\\\\s*+(-)\\\\s*+(behaviour)\\\\s*+(\\\\()\\\\s*+([a-z][a-zA-Z\\\\d@_]*+)\\\\s*+(\\\\))\\\\s*+(\\\\.)\", \"name\": \"meta.directive.behaviour.erlang\" }, \"binary\": { \"begin\": \"(<<)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.binary.begin.erlang\" } }, \"end\": \"(>>)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.binary.end.erlang\" } }, \"name\": \"meta.structure.binary.erlang\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"punctuation.separator.binary.erlang\" }, \"2\": { \"name\": \"punctuation.separator.value-size.erlang\" } }, \"match\": \"(,)|(:)\" }, { \"include\": \"#internal-type-specifiers\" }, { \"include\": \"#everything-else\" }] }, \"character\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"punctuation.definition.character.erlang\" }, \"2\": { \"name\": \"constant.character.escape.erlang\" }, \"3\": { \"name\": \"punctuation.definition.escape.erlang\" }, \"5\": { \"name\": \"punctuation.definition.escape.erlang\" } }, \"match\": `(\\\\$)((\\\\\\\\)([bdefnrstv\\\\\\\\'\"]|(\\\\^)[@-_a-z]|[0-7]{1,3}|x[\\\\da-fA-F]{2}))`, \"name\": \"constant.character.erlang\" }, { \"match\": \"\\\\$\\\\\\\\\\\\^?.?\", \"name\": \"invalid.illegal.character.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.character.erlang\" } }, \"match\": \"(\\\\$)[ \\\\S]\", \"name\": \"constant.character.erlang\" }, { \"match\": \"\\\\$.?\", \"name\": \"invalid.illegal.character.erlang\" }] }, \"comment\": { \"begin\": \"(^[ \\\\t]+)?(?=%)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.whitespace.comment.leading.erlang\" } }, \"end\": \"(?!\\\\G)\", \"patterns\": [{ \"begin\": \"%\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.erlang\" } }, \"end\": \"\\\\n\", \"name\": \"comment.line.percentage.erlang\" }] }, \"define-directive\": { \"patterns\": [{ \"begin\": \"^\\\\s*+(-)\\\\s*+(define)\\\\s*+(\\\\()\\\\s*+([a-zA-Z\\\\d@_]++)\\\\s*+\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.section.directive.begin.erlang\" }, \"2\": { \"name\": \"keyword.control.directive.define.erlang\" }, \"3\": { \"name\": \"punctuation.definition.parameters.begin.erlang\" }, \"4\": { \"name\": \"entity.name.function.macro.definition.erlang\" } }, \"end\": \"(\\\\))\\\\s*+(\\\\.)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.parameters.end.erlang\" }, \"2\": { \"name\": \"punctuation.section.directive.end.erlang\" } }, \"name\": \"meta.directive.define.erlang\", \"patterns\": [{ \"include\": \"#everything-else\" }] }, { \"begin\": \"(?=^\\\\s*+-\\\\s*+define\\\\s*+\\\\(\\\\s*+[a-zA-Z\\\\d@_]++\\\\s*+\\\\()\", \"end\": \"(\\\\))\\\\s*+(\\\\.)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.parameters.end.erlang\" }, \"2\": { \"name\": \"punctuation.section.directive.end.erlang\" } }, \"name\": \"meta.directive.define.erlang\", \"patterns\": [{ \"begin\": \"^\\\\s*+(-)\\\\s*+(define)\\\\s*+(\\\\()\\\\s*+([a-zA-Z\\\\d@_]++)\\\\s*+(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.section.directive.begin.erlang\" }, \"2\": { \"name\": \"keyword.control.directive.define.erlang\" }, \"3\": { \"name\": \"punctuation.definition.parameters.begin.erlang\" }, \"4\": { \"name\": \"entity.name.function.macro.definition.erlang\" }, \"5\": { \"name\": \"punctuation.definition.parameters.begin.erlang\" } }, \"end\": \"(\\\\))\\\\s*(,)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.parameters.end.erlang\" }, \"2\": { \"name\": \"punctuation.separator.parameters.erlang\" } }, \"patterns\": [{ \"match\": \",\", \"name\": \"punctuation.separator.parameters.erlang\" }, { \"include\": \"#everything-else\" }] }, { \"match\": \"\\\\|\\\\||\\\\||:|;|,|\\\\.|->\", \"name\": \"punctuation.separator.define.erlang\" }, { \"include\": \"#everything-else\" }] }] }, \"directive\": { \"patterns\": [{ \"begin\": \"^\\\\s*+(-)\\\\s*+([a-z][a-zA-Z\\\\d@_]*+)\\\\s*+(\\\\(?)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.section.directive.begin.erlang\" }, \"2\": { \"name\": \"keyword.control.directive.erlang\" }, \"3\": { \"name\": \"punctuation.definition.parameters.begin.erlang\" } }, \"end\": \"(\\\\)?)\\\\s*+(\\\\.)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.parameters.end.erlang\" }, \"2\": { \"name\": \"punctuation.section.directive.end.erlang\" } }, \"name\": \"meta.directive.erlang\", \"patterns\": [{ \"include\": \"#everything-else\" }] }, { \"captures\": { \"1\": { \"name\": \"punctuation.section.directive.begin.erlang\" }, \"2\": { \"name\": \"keyword.control.directive.erlang\" }, \"3\": { \"name\": \"punctuation.section.directive.end.erlang\" } }, \"match\": \"^\\\\s*+(-)\\\\s*+([a-z][a-zA-Z\\\\d@_]*+)\\\\s*+(\\\\.)\", \"name\": \"meta.directive.erlang\" }] }, \"docstring\": { \"begin\": '(?<!\")(([\"]{3,})\\\\s*)(\\\\S.*)?$', \"beginCaptures\": { \"1\": { \"name\": \"meta.string.quoted.triple.begin.erlang\" }, \"2\": { \"name\": \"punctuation.definition.string.begin.erlang\" }, \"3\": { \"name\": \"invalid.illegal.string.erlang\" } }, \"comment\": \"Only whitespace characters are allowed after the beggining and before the closing sequences and those cannot be in the same line\", \"end\": '^(\\\\s*(\\\\2))(?!\")', \"endCaptures\": { \"1\": { \"name\": \"meta.string.quoted.triple.end.erlang\" }, \"2\": { \"name\": \"punctuation.definition.string.end.erlang\" } }, \"name\": \"string.quoted.triple.erlang\" }, \"everything-else\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#record-usage\" }, { \"include\": \"#macro-usage\" }, { \"include\": \"#expression\" }, { \"include\": \"#keyword\" }, { \"include\": \"#textual-operator\" }, { \"include\": \"#language-constant\" }, { \"include\": \"#function-call\" }, { \"include\": \"#tuple\" }, { \"include\": \"#list\" }, { \"include\": \"#binary\" }, { \"include\": \"#parenthesized-expression\" }, { \"include\": \"#character\" }, { \"include\": \"#number\" }, { \"include\": \"#atom\" }, { \"include\": \"#sigil-docstring\" }, { \"include\": \"#sigil-string\" }, { \"include\": \"#docstring\" }, { \"include\": \"#string\" }, { \"include\": \"#symbolic-operator\" }, { \"include\": \"#variable\" }] }, \"expression\": { \"patterns\": [{ \"begin\": \"\\\\b(if)\\\\b\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.if.erlang\" } }, \"end\": \"\\\\b(end)\\\\b\", \"endCaptures\": { \"1\": { \"name\": \"keyword.control.end.erlang\" } }, \"name\": \"meta.expression.if.erlang\", \"patterns\": [{ \"include\": \"#internal-expression-punctuation\" }, { \"include\": \"#everything-else\" }] }, { \"begin\": \"\\\\b(case)\\\\b\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.case.erlang\" } }, \"end\": \"\\\\b(end)\\\\b\", \"endCaptures\": { \"1\": { \"name\": \"keyword.control.end.erlang\" } }, \"name\": \"meta.expression.case.erlang\", \"patterns\": [{ \"include\": \"#internal-expression-punctuation\" }, { \"include\": \"#everything-else\" }] }, { \"begin\": \"\\\\b(receive)\\\\b\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.receive.erlang\" } }, \"end\": \"\\\\b(end)\\\\b\", \"endCaptures\": { \"1\": { \"name\": \"keyword.control.end.erlang\" } }, \"name\": \"meta.expression.receive.erlang\", \"patterns\": [{ \"include\": \"#internal-expression-punctuation\" }, { \"include\": \"#everything-else\" }] }, { \"captures\": { \"1\": { \"name\": \"keyword.control.fun.erlang\" }, \"4\": { \"name\": \"entity.name.type.class.module.erlang\" }, \"5\": { \"name\": \"variable.other.erlang\" }, \"6\": { \"name\": \"punctuation.separator.module-function.erlang\" }, \"8\": { \"name\": \"entity.name.function.erlang\" }, \"9\": { \"name\": \"variable.other.erlang\" }, \"10\": { \"name\": \"punctuation.separator.function-arity.erlang\" } }, \"comment\": \"Implicit function expression with optional module qualifier when both module and function can be atom or variable\", \"match\": \"\\\\b(fun)\\\\s+((([a-z][a-zA-Z\\\\d@_]*+)|(_[a-zA-Z\\\\d@_]++|[A-Z][a-zA-Z\\\\d@_]*+))\\\\s*+(:)\\\\s*+)?(([a-z][a-zA-Z\\\\d@_]*+|'[^']*+')|(_[a-zA-Z\\\\d@_]++|[A-Z][a-zA-Z\\\\d@_]*+))\\\\s*(/)\", \"name\": \"meta.expression.fun.implicit.erlang\" }, { \"begin\": \"\\\\b(fun)\\\\s+(([a-z][a-zA-Z\\\\d@_]*+)|(_[a-zA-Z\\\\d@_]++|[A-Z][a-zA-Z\\\\d@_]*+))\\\\s*+(:)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.fun.erlang\" }, \"3\": { \"name\": \"entity.name.type.class.module.erlang\" }, \"4\": { \"name\": \"variable.other.erlang\" }, \"5\": { \"name\": \"punctuation.separator.module-function.erlang\" } }, \"comment\": \"Implicit function expression with module qualifier when module can be atom or variable and function can by anything\", \"end\": \"(/)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.separator.function-arity.erlang\" } }, \"name\": \"meta.expression.fun.implicit.erlang\", \"patterns\": [{ \"include\": \"#everything-else\" }] }, { \"begin\": \"\\\\b(fun)\\\\s+(?!\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.fun.erlang\" } }, \"comment\": \"Implicit function expression when both module and function can by anything\", \"end\": \"(/)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.separator.function-arity.erlang\" } }, \"name\": \"meta.expression.fun.implicit.erlang\", \"patterns\": [{ \"include\": \"#everything-else\" }] }, { \"begin\": \"\\\\b(fun)\\\\s*+(\\\\()(?=(\\\\s*+\\\\())\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.function.erlang\" }, \"2\": { \"name\": \"punctuation.definition.parameters.begin.erlang\" } }, \"comment\": \"Function type in type specification\", \"end\": \"(\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.parameters.end.erlang\" } }, \"patterns\": [{ \"include\": \"#everything-else\" }] }, { \"begin\": \"\\\\b(fun)\\\\b\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.fun.erlang\" } }, \"comment\": \"Explicit function expression\", \"end\": \"\\\\b(end)\\\\b\", \"endCaptures\": { \"1\": { \"name\": \"keyword.control.end.erlang\" } }, \"name\": \"meta.expression.fun.erlang\", \"patterns\": [{ \"begin\": \"(?=\\\\()\", \"end\": \"(;)|(?=\\\\bend\\\\b)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.separator.clauses.erlang\" } }, \"patterns\": [{ \"include\": \"#internal-function-parts\" }] }, { \"include\": \"#everything-else\" }] }, { \"begin\": \"\\\\b(try)\\\\b\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.try.erlang\" } }, \"end\": \"\\\\b(end)\\\\b\", \"endCaptures\": { \"1\": { \"name\": \"keyword.control.end.erlang\" } }, \"name\": \"meta.expression.try.erlang\", \"patterns\": [{ \"include\": \"#internal-expression-punctuation\" }, { \"include\": \"#everything-else\" }] }, { \"begin\": \"\\\\b(begin)\\\\b\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.begin.erlang\" } }, \"end\": \"\\\\b(end)\\\\b\", \"endCaptures\": { \"1\": { \"name\": \"keyword.control.end.erlang\" } }, \"name\": \"meta.expression.begin.erlang\", \"patterns\": [{ \"include\": \"#internal-expression-punctuation\" }, { \"include\": \"#everything-else\" }] }, { \"begin\": \"\\\\b(maybe)\\\\b\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.maybe.erlang\" } }, \"end\": \"\\\\b(end)\\\\b\", \"endCaptures\": { \"1\": { \"name\": \"keyword.control.end.erlang\" } }, \"name\": \"meta.expression.maybe.erlang\", \"patterns\": [{ \"include\": \"#internal-expression-punctuation\" }, { \"include\": \"#everything-else\" }] }] }, \"function\": { \"begin\": \"^\\\\s*+([a-z][a-zA-Z\\\\d@_]*+|'[^']*+')\\\\s*+(?=\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.function.definition.erlang\" } }, \"end\": \"(\\\\.)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.terminator.function.erlang\" } }, \"name\": \"meta.function.erlang\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"entity.name.function.erlang\" } }, \"match\": \"^\\\\s*+([a-z][a-zA-Z\\\\d@_]*+|'[^']*+')\\\\s*+(?=\\\\()\" }, { \"begin\": \"(?=\\\\()\", \"end\": \"(;)|(?=\\\\.)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.separator.clauses.erlang\" } }, \"patterns\": [{ \"include\": \"#parenthesized-expression\" }, { \"include\": \"#internal-function-parts\" }] }, { \"include\": \"#everything-else\" }] }, \"function-call\": { \"begin\": \"(?=([a-z][a-zA-Z\\\\d@_]*+|'[^']*+'|_[a-zA-Z\\\\d@_]++|[A-Z][a-zA-Z\\\\d@_]*+)\\\\s*+(\\\\(|:\\\\s*+([a-z][a-zA-Z\\\\d@_]*+|'[^']*+'|_[a-zA-Z\\\\d@_]++|[A-Z][a-zA-Z\\\\d@_]*+)\\\\s*+\\\\())\", \"end\": \"(\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.parameters.end.erlang\" } }, \"name\": \"meta.function-call.erlang\", \"patterns\": [{ \"begin\": \"((erlang)\\\\s*+(:)\\\\s*+)?(is_atom|is_binary|is_constant|is_float|is_function|is_integer|is_list|is_number|is_pid|is_port|is_reference|is_tuple|is_record|abs|element|hd|length|node|round|self|size|tl|trunc)\\\\s*+(\\\\()\", \"beginCaptures\": { \"2\": { \"name\": \"entity.name.type.class.module.erlang\" }, \"3\": { \"name\": \"punctuation.separator.module-function.erlang\" }, \"4\": { \"name\": \"entity.name.function.guard.erlang\" }, \"5\": { \"name\": \"punctuation.definition.parameters.begin.erlang\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"match\": \",\", \"name\": \"punctuation.separator.parameters.erlang\" }, { \"include\": \"#everything-else\" }] }, { \"begin\": \"((([a-z][a-zA-Z\\\\d@_]*+|'[^']*+')|(_[a-zA-Z\\\\d@_]++|[A-Z][a-zA-Z\\\\d@_]*+))\\\\s*+(:)\\\\s*+)?(([a-z][a-zA-Z\\\\d@_]*+|'[^']*+')|(_[a-zA-Z\\\\d@_]++|[A-Z][a-zA-Z\\\\d@_]*+))\\\\s*+(\\\\()\", \"beginCaptures\": { \"3\": { \"name\": \"entity.name.type.class.module.erlang\" }, \"4\": { \"name\": \"variable.other.erlang\" }, \"5\": { \"name\": \"punctuation.separator.module-function.erlang\" }, \"7\": { \"name\": \"entity.name.function.erlang\" }, \"8\": { \"name\": \"variable.other.erlang\" }, \"9\": { \"name\": \"punctuation.definition.parameters.begin.erlang\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"match\": \",\", \"name\": \"punctuation.separator.parameters.erlang\" }, { \"include\": \"#everything-else\" }] }] }, \"import-export-directive\": { \"patterns\": [{ \"begin\": \"^\\\\s*+(-)\\\\s*+(import)\\\\s*+(\\\\()\\\\s*+([a-z][a-zA-Z\\\\d@_]*+|'[^']*+')\\\\s*+(,)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.section.directive.begin.erlang\" }, \"2\": { \"name\": \"keyword.control.directive.import.erlang\" }, \"3\": { \"name\": \"punctuation.definition.parameters.begin.erlang\" }, \"4\": { \"name\": \"entity.name.type.class.module.erlang\" }, \"5\": { \"name\": \"punctuation.separator.parameters.erlang\" } }, \"end\": \"(\\\\))\\\\s*+(\\\\.)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.parameters.end.erlang\" }, \"2\": { \"name\": \"punctuation.section.directive.end.erlang\" } }, \"name\": \"meta.directive.import.erlang\", \"patterns\": [{ \"include\": \"#internal-function-list\" }] }, { \"begin\": \"^\\\\s*+(-)\\\\s*+(export)\\\\s*+(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.section.directive.begin.erlang\" }, \"2\": { \"name\": \"keyword.control.directive.export.erlang\" }, \"3\": { \"name\": \"punctuation.definition.parameters.begin.erlang\" } }, \"end\": \"(\\\\))\\\\s*+(\\\\.)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.parameters.end.erlang\" }, \"2\": { \"name\": \"punctuation.section.directive.end.erlang\" } }, \"name\": \"meta.directive.export.erlang\", \"patterns\": [{ \"include\": \"#internal-function-list\" }] }] }, \"internal-expression-punctuation\": { \"captures\": { \"1\": { \"name\": \"punctuation.separator.clause-head-body.erlang\" }, \"2\": { \"name\": \"punctuation.separator.clauses.erlang\" }, \"3\": { \"name\": \"punctuation.separator.expressions.erlang\" } }, \"match\": \"(->)|(;)|(,)\" }, \"internal-function-list\": { \"begin\": \"(\\\\[)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.list.begin.erlang\" } }, \"end\": \"(\\\\])\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.list.end.erlang\" } }, \"name\": \"meta.structure.list.function.erlang\", \"patterns\": [{ \"begin\": \"([a-z][a-zA-Z\\\\d@_]*+|'[^']*+')\\\\s*+(/)\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.function.erlang\" }, \"2\": { \"name\": \"punctuation.separator.function-arity.erlang\" } }, \"end\": \"(,)|(?=\\\\])\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.separator.list.erlang\" } }, \"patterns\": [{ \"include\": \"#everything-else\" }] }, { \"include\": \"#everything-else\" }] }, \"internal-function-parts\": { \"patterns\": [{ \"begin\": \"(?=\\\\()\", \"end\": \"(->)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.separator.clause-head-body.erlang\" } }, \"patterns\": [{ \"begin\": \"(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.parameters.begin.erlang\" } }, \"end\": \"(\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.parameters.end.erlang\" } }, \"patterns\": [{ \"match\": \",\", \"name\": \"punctuation.separator.parameters.erlang\" }, { \"include\": \"#everything-else\" }] }, { \"match\": \",|;\", \"name\": \"punctuation.separator.guards.erlang\" }, { \"include\": \"#everything-else\" }] }, { \"match\": \",\", \"name\": \"punctuation.separator.expressions.erlang\" }, { \"include\": \"#everything-else\" }] }, \"internal-record-body\": { \"begin\": \"(\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.class.record.begin.erlang\" } }, \"end\": \"(\\\\})\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.class.record.end.erlang\" } }, \"name\": \"meta.structure.record.erlang\", \"patterns\": [{ \"begin\": \"(([a-z][a-zA-Z\\\\d@_]*+|'[^']*+')|(_))\", \"beginCaptures\": { \"2\": { \"name\": \"variable.other.field.erlang\" }, \"3\": { \"name\": \"variable.language.omitted.field.erlang\" } }, \"end\": \"(,)|(?=\\\\})\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.separator.class.record.erlang\" } }, \"patterns\": [{ \"include\": \"#everything-else\" }] }, { \"include\": \"#everything-else\" }] }, \"internal-string-body\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"punctuation.definition.escape.erlang\" }, \"3\": { \"name\": \"punctuation.definition.escape.erlang\" } }, \"comment\": \"escape sequence\", \"match\": `(\\\\\\\\)([bdefnrstv\\\\\\\\'\"]|(\\\\^)[@-_a-z]|[0-7]{1,3}|x[\\\\da-fA-F]{2})`, \"name\": \"constant.character.escape.erlang\" }, { \"match\": \"\\\\\\\\\\\\^?.?\", \"name\": \"invalid.illegal.string.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.placeholder.erlang\" }, \"6\": { \"name\": \"punctuation.separator.placeholder-parts.erlang\" }, \"10\": { \"name\": \"punctuation.separator.placeholder-parts.erlang\" } }, \"comment\": \"io:fwrite format control sequence\", \"match\": \"(~)((\\\\-)?\\\\d++|(\\\\*))?((\\\\.)(\\\\d++|(\\\\*))?((\\\\.)((\\\\*)|.))?)?[tlkK]*[~cfegswpWPBX#bx\\\\+ni]\", \"name\": \"constant.character.format.placeholder.other.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.placeholder.erlang\" } }, \"comment\": \"io:fread format control sequence\", \"match\": \"(~)(\\\\*)?(\\\\d++)?(t)?[~du\\\\-#fsacl]\", \"name\": \"constant.character.format.placeholder.other.erlang\" }, { \"match\": '~[^\"]?', \"name\": \"invalid.illegal.string.erlang\" }] }, \"internal-type-specifiers\": { \"begin\": \"(/)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.separator.value-type.erlang\" } }, \"end\": \"(?=,|:|>>)\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"storage.type.erlang\" }, \"2\": { \"name\": \"storage.modifier.signedness.erlang\" }, \"3\": { \"name\": \"storage.modifier.endianness.erlang\" }, \"4\": { \"name\": \"storage.modifier.unit.erlang\" }, \"5\": { \"name\": \"punctuation.separator.unit-specifiers.erlang\" }, \"6\": { \"name\": \"constant.numeric.integer.decimal.erlang\" }, \"7\": { \"name\": \"punctuation.separator.type-specifiers.erlang\" } }, \"match\": \"(integer|float|binary|bytes|bitstring|bits|utf8|utf16|utf32)|(signed|unsigned)|(big|little|native)|(unit)(:)(\\\\d++)|(-)\" }] }, \"keyword\": { \"match\": \"\\\\b(after|begin|case|catch|cond|end|fun|if|let|of|try|receive|when|maybe|else)\\\\b\", \"name\": \"keyword.control.erlang\" }, \"language-constant\": { \"match\": \"\\\\b(false|true|undefined)\\\\b\", \"name\": \"constant.language\" }, \"list\": { \"begin\": \"(\\\\[)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.list.begin.erlang\" } }, \"end\": \"(\\\\])\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.list.end.erlang\" } }, \"name\": \"meta.structure.list.erlang\", \"patterns\": [{ \"match\": \"\\\\||\\\\|\\\\||,\", \"name\": \"punctuation.separator.list.erlang\" }, { \"include\": \"#everything-else\" }] }, \"macro-directive\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"punctuation.section.directive.begin.erlang\" }, \"2\": { \"name\": \"keyword.control.directive.ifdef.erlang\" }, \"3\": { \"name\": \"punctuation.definition.parameters.begin.erlang\" }, \"4\": { \"name\": \"entity.name.function.macro.erlang\" }, \"5\": { \"name\": \"punctuation.definition.parameters.end.erlang\" }, \"6\": { \"name\": \"punctuation.section.directive.end.erlang\" } }, \"match\": \"^\\\\s*+(-)\\\\s*+(ifdef)\\\\s*+(\\\\()\\\\s*+([a-zA-z\\\\d@_]++)\\\\s*+(\\\\))\\\\s*+(\\\\.)\", \"name\": \"meta.directive.ifdef.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.section.directive.begin.erlang\" }, \"2\": { \"name\": \"keyword.control.directive.ifndef.erlang\" }, \"3\": { \"name\": \"punctuation.definition.parameters.begin.erlang\" }, \"4\": { \"name\": \"entity.name.function.macro.erlang\" }, \"5\": { \"name\": \"punctuation.definition.parameters.end.erlang\" }, \"6\": { \"name\": \"punctuation.section.directive.end.erlang\" } }, \"match\": \"^\\\\s*+(-)\\\\s*+(ifndef)\\\\s*+(\\\\()\\\\s*+([a-zA-z\\\\d@_]++)\\\\s*+(\\\\))\\\\s*+(\\\\.)\", \"name\": \"meta.directive.ifndef.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.section.directive.begin.erlang\" }, \"2\": { \"name\": \"keyword.control.directive.undef.erlang\" }, \"3\": { \"name\": \"punctuation.definition.parameters.begin.erlang\" }, \"4\": { \"name\": \"entity.name.function.macro.erlang\" }, \"5\": { \"name\": \"punctuation.definition.parameters.end.erlang\" }, \"6\": { \"name\": \"punctuation.section.directive.end.erlang\" } }, \"match\": \"^\\\\s*+(-)\\\\s*+(undef)\\\\s*+(\\\\()\\\\s*+([a-zA-z\\\\d@_]++)\\\\s*+(\\\\))\\\\s*+(\\\\.)\", \"name\": \"meta.directive.undef.erlang\" }] }, \"macro-usage\": { \"captures\": { \"1\": { \"name\": \"keyword.operator.macro.erlang\" }, \"2\": { \"name\": \"entity.name.function.macro.erlang\" } }, \"match\": \"(\\\\?\\\\??)\\\\s*+([a-zA-Z\\\\d@_]++)\", \"name\": \"meta.macro-usage.erlang\" }, \"module-directive\": { \"captures\": { \"1\": { \"name\": \"punctuation.section.directive.begin.erlang\" }, \"2\": { \"name\": \"keyword.control.directive.module.erlang\" }, \"3\": { \"name\": \"punctuation.definition.parameters.begin.erlang\" }, \"4\": { \"name\": \"entity.name.type.class.module.definition.erlang\" }, \"5\": { \"name\": \"punctuation.definition.parameters.end.erlang\" }, \"6\": { \"name\": \"punctuation.section.directive.end.erlang\" } }, \"match\": \"^\\\\s*+(-)\\\\s*+(module)\\\\s*+(\\\\()\\\\s*+([a-z][a-zA-Z\\\\d@_]*+)\\\\s*+(\\\\))\\\\s*+(\\\\.)\", \"name\": \"meta.directive.module.erlang\" }, \"number\": { \"begin\": \"(?=\\\\d)\", \"end\": \"(?!\\\\d)\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"punctuation.separator.integer-float.erlang\" }, \"2\": { \"name\": \"punctuation.separator.float-exponent.erlang\" } }, \"match\": \"\\\\d++(\\\\.)\\\\d++([eE][\\\\+\\\\-]?\\\\d++)?\", \"name\": \"constant.numeric.float.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"2(#)([0-1]++_)*[0-1]++\", \"name\": \"constant.numeric.integer.binary.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"3(#)([0-2]++_)*[0-2]++\", \"name\": \"constant.numeric.integer.base-3.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"4(#)([0-3]++_)*[0-3]++\", \"name\": \"constant.numeric.integer.base-4.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"5(#)([0-4]++_)*[0-4]++\", \"name\": \"constant.numeric.integer.base-5.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"6(#)([0-5]++_)*[0-5]++\", \"name\": \"constant.numeric.integer.base-6.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"7(#)([0-6]++_)*[0-6]++\", \"name\": \"constant.numeric.integer.base-7.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"8(#)([0-7]++_)*[0-7]++\", \"name\": \"constant.numeric.integer.octal.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"9(#)([0-8]++_)*[0-8]++\", \"name\": \"constant.numeric.integer.base-9.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"10(#)(\\\\d++_)*\\\\d++\", \"name\": \"constant.numeric.integer.decimal.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"11(#)([\\\\daA]++_)*[\\\\daA]++\", \"name\": \"constant.numeric.integer.base-11.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"12(#)([\\\\da-bA-B]++_)*[\\\\da-bA-B]++\", \"name\": \"constant.numeric.integer.base-12.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"13(#)([\\\\da-cA-C]++_)*[\\\\da-cA-C]++\", \"name\": \"constant.numeric.integer.base-13.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"14(#)([\\\\da-dA-D]++_)*[\\\\da-dA-D]++\", \"name\": \"constant.numeric.integer.base-14.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"15(#)([\\\\da-eA-E]++_)*[\\\\da-eA-E]++\", \"name\": \"constant.numeric.integer.base-15.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"16(#)([\\\\da-fA-F]++_)*[\\\\da-fA-F]++\", \"name\": \"constant.numeric.integer.hexadecimal.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"17(#)([\\\\da-gA-G]++_)*[\\\\da-gA-G]++\", \"name\": \"constant.numeric.integer.base-17.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"18(#)([\\\\da-hA-H]++_)*[\\\\da-hA-H]++\", \"name\": \"constant.numeric.integer.base-18.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"19(#)([\\\\da-iA-I]++_)*[\\\\da-iA-I]++\", \"name\": \"constant.numeric.integer.base-19.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"20(#)([\\\\da-jA-J]++_)*[\\\\da-jA-J]++\", \"name\": \"constant.numeric.integer.base-20.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"21(#)([\\\\da-kA-K]++_)*[\\\\da-kA-K]++\", \"name\": \"constant.numeric.integer.base-21.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"22(#)([\\\\da-lA-L]++_)*[\\\\da-lA-L]++\", \"name\": \"constant.numeric.integer.base-22.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"23(#)([\\\\da-mA-M]++_)*[\\\\da-mA-M]++\", \"name\": \"constant.numeric.integer.base-23.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"24(#)([\\\\da-nA-N]++_)*[\\\\da-nA-N]++\", \"name\": \"constant.numeric.integer.base-24.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"25(#)([\\\\da-oA-O]++_)*[\\\\da-oA-O]++\", \"name\": \"constant.numeric.integer.base-25.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"26(#)([\\\\da-pA-P]++_)*[\\\\da-pA-P]++\", \"name\": \"constant.numeric.integer.base-26.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"27(#)([\\\\da-qA-Q]++_)*[\\\\da-qA-Q]++\", \"name\": \"constant.numeric.integer.base-27.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"28(#)([\\\\da-rA-R]++_)*[\\\\da-rA-R]++\", \"name\": \"constant.numeric.integer.base-28.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"29(#)([\\\\da-sA-S]++_)*[\\\\da-sA-S]++\", \"name\": \"constant.numeric.integer.base-29.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"30(#)([\\\\da-tA-T]++_)*[\\\\da-tA-T]++\", \"name\": \"constant.numeric.integer.base-30.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"31(#)([\\\\da-uA-U]++_)*[\\\\da-uA-U]++\", \"name\": \"constant.numeric.integer.base-31.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"32(#)([\\\\da-vA-V]++_)*[\\\\da-vA-V]++\", \"name\": \"constant.numeric.integer.base-32.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"33(#)([\\\\da-wA-W]++_)*[\\\\da-wA-W]++\", \"name\": \"constant.numeric.integer.base-33.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"34(#)([\\\\da-xA-X]++_)*[\\\\da-xA-X]++\", \"name\": \"constant.numeric.integer.base-34.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"35(#)([\\\\da-yA-Y]++_)*[\\\\da-yA-Y]++\", \"name\": \"constant.numeric.integer.base-35.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"36(#)([\\\\da-zA-Z]++_)*[\\\\da-zA-Z]++\", \"name\": \"constant.numeric.integer.base-36.erlang\" }, { \"match\": \"\\\\d++#([\\\\da-zA-Z]++_)*[\\\\da-zA-Z]++\", \"name\": \"invalid.illegal.integer.erlang\" }, { \"match\": \"(\\\\d++_)*\\\\d++\", \"name\": \"constant.numeric.integer.decimal.erlang\" }] }, \"parenthesized-expression\": { \"begin\": \"(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.section.expression.begin.erlang\" } }, \"end\": \"(\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.section.expression.end.erlang\" } }, \"name\": \"meta.expression.parenthesized\", \"patterns\": [{ \"include\": \"#everything-else\" }] }, \"record-directive\": { \"begin\": \"^\\\\s*+(-)\\\\s*+(record)\\\\s*+(\\\\()\\\\s*+([a-z][a-zA-Z\\\\d@_]*+|'[^']*+')\\\\s*+(,)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.section.directive.begin.erlang\" }, \"2\": { \"name\": \"keyword.control.directive.import.erlang\" }, \"3\": { \"name\": \"punctuation.definition.parameters.begin.erlang\" }, \"4\": { \"name\": \"entity.name.type.class.record.definition.erlang\" }, \"5\": { \"name\": \"punctuation.separator.parameters.erlang\" } }, \"end\": \"(\\\\))\\\\s*+(\\\\.)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.parameters.end.erlang\" }, \"2\": { \"name\": \"punctuation.section.directive.end.erlang\" } }, \"name\": \"meta.directive.record.erlang\", \"patterns\": [{ \"include\": \"#internal-record-body\" }, { \"include\": \"#comment\" }] }, \"record-usage\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"keyword.operator.record.erlang\" }, \"2\": { \"name\": \"entity.name.type.class.record.erlang\" }, \"3\": { \"name\": \"punctuation.separator.record-field.erlang\" }, \"4\": { \"name\": \"variable.other.field.erlang\" } }, \"match\": \"(#)\\\\s*+([a-z][a-zA-Z\\\\d@_]*+|'[^']*+')\\\\s*+(\\\\.)\\\\s*+([a-z][a-zA-Z\\\\d@_]*+|'[^']*+')\", \"name\": \"meta.record-usage.erlang\" }, { \"begin\": \"(#)\\\\s*+([a-z][a-zA-Z\\\\d@_]*+|'[^']*+')\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.record.erlang\" }, \"2\": { \"name\": \"entity.name.type.class.record.erlang\" } }, \"end\": \"(?<=\\\\})\", \"name\": \"meta.record-usage.erlang\", \"patterns\": [{ \"include\": \"#internal-record-body\" }] }] }, \"sigil-docstring\": { \"begin\": '(~[bBsS]?)(([\"]{3,})\\\\s*)(\\\\S.*)?$', \"beginCaptures\": { \"1\": { \"name\": \"storage.type.string.erlang\" }, \"2\": { \"name\": \"meta.string.quoted.triple.begin.erlang\" }, \"3\": { \"name\": \"punctuation.definition.string.begin.erlang\" }, \"4\": { \"name\": \"invalid.illegal.string.erlang\" } }, \"comment\": \"Only whitespace characters are allowed after the beggining and before the closing sequences and those cannot be in the same line\", \"end\": '^(\\\\s*(\\\\3))(?!\")', \"endCaptures\": { \"1\": { \"name\": \"meta.string.quoted.triple.end.erlang\" }, \"2\": { \"name\": \"punctuation.definition.string.end.erlang\" } }, \"name\": \"string.quoted.tripple.sigil.erlang\" }, \"sigil-string\": { \"patterns\": [{ \"include\": \"#sigil-string-parenthesis\" }, { \"include\": \"#sigil-string-parenthesis-verbatim\" }, { \"include\": \"#sigil-string-curly-brackets\" }, { \"include\": \"#sigil-string-curly-brackets-verbatim\" }, { \"include\": \"#sigil-string-square-brackets\" }, { \"include\": \"#sigil-string-square-brackets-verbatim\" }, { \"include\": \"#sigil-string-less-greater\" }, { \"include\": \"#sigil-string-less-greater-verbatim\" }, { \"include\": \"#sigil-string-single-character\" }, { \"include\": \"#sigil-string-single-character-verbatim\" }, { \"include\": \"#sigil-string-single-quote\" }, { \"include\": \"#sigil-string-single-quote-verbatim\" }, { \"include\": \"#sigil-string-double-quote\" }, { \"include\": \"#sigil-string-double-quote-verbatim\" }] }, \"sigil-string-curly-brackets\": { \"begin\": \"(~[bs]?)([{])\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.string.erlang\" }, \"2\": { \"name\": \"punctuation.definition.string.begin.erlang\" } }, \"end\": \"([}])\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.erlang\" } }, \"name\": \"string.quoted.curly-brackets.sigil.erlang\", \"patterns\": [{ \"include\": \"#internal-string-body\" }] }, \"sigil-string-curly-brackets-verbatim\": { \"begin\": \"(~[BS])([{])\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.string.erlang\" }, \"2\": { \"name\": \"punctuation.definition.string.begin.erlang\" } }, \"end\": \"([}])\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.erlang\" } }, \"name\": \"string.quoted.curly-brackets.sigil.erlang\" }, \"sigil-string-double-quote\": { \"begin\": '(~[bs]?)(\")', \"beginCaptures\": { \"1\": { \"name\": \"storage.type.string.erlang\" }, \"2\": { \"name\": \"punctuation.definition.string.begin.erlang\" } }, \"end\": \"(\\\\2)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.erlang\" } }, \"name\": \"string.quoted.double.sigil.erlang\", \"patterns\": [{ \"include\": \"#internal-string-body\" }] }, \"sigil-string-double-quote-verbatim\": { \"begin\": '(~[BS])(\")', \"beginCaptures\": { \"1\": { \"name\": \"storage.type.string.erlang\" }, \"2\": { \"name\": \"punctuation.definition.string.begin.erlang\" } }, \"end\": \"(\\\\2)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.erlang\" } }, \"name\": \"string.quoted.double.sigil.erlang\" }, \"sigil-string-less-greater\": { \"begin\": \"(~[bs]?)(<)\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.string.erlang\" }, \"2\": { \"name\": \"punctuation.definition.string.begin.erlang\" } }, \"end\": \"(>)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.erlang\" } }, \"name\": \"string.quoted.less-greater.sigil.erlang\", \"patterns\": [{ \"include\": \"#internal-string-body\" }] }, \"sigil-string-less-greater-verbatim\": { \"begin\": \"(~[BS])(<)\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.string.erlang\" }, \"2\": { \"name\": \"punctuation.definition.string.begin.erlang\" } }, \"end\": \"(>)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.erlang\" } }, \"name\": \"string.quoted.less-greater.sigil.erlang\" }, \"sigil-string-parenthesis\": { \"begin\": \"(~[bs]?)([(])\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.string.erlang\" }, \"2\": { \"name\": \"punctuation.definition.string.begin.erlang\" } }, \"end\": \"([)])\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.erlang\" } }, \"name\": \"string.quoted.parenthesis.sigil.erlang\", \"patterns\": [{ \"include\": \"#internal-string-body\" }] }, \"sigil-string-parenthesis-verbatim\": { \"begin\": \"(~[BS])([(])\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.string.erlang\" }, \"2\": { \"name\": \"punctuation.definition.string.begin.erlang\" } }, \"end\": \"([)])\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.erlang\" } }, \"name\": \"string.quoted.parenthesis.sigil.erlang\" }, \"sigil-string-single-character\": { \"begin\": \"(~[bs]?)([/\\\\|`#])\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.string.erlang\" }, \"2\": { \"name\": \"punctuation.definition.string.begin.erlang\" } }, \"end\": \"(\\\\2)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.erlang\" } }, \"name\": \"string.quoted.other.sigil.erlang\", \"patterns\": [{ \"include\": \"#internal-string-body\" }] }, \"sigil-string-single-character-verbatim\": { \"begin\": \"(~[BS])([/\\\\|`#])\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.string.erlang\" }, \"2\": { \"name\": \"punctuation.definition.string.begin.erlang\" } }, \"end\": \"(\\\\2)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.erlang\" } }, \"name\": \"string.quoted.other.sigil.erlang\" }, \"sigil-string-single-quote\": { \"begin\": \"(~[bs]?)(')\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.string.erlang\" }, \"2\": { \"name\": \"punctuation.definition.string.begin.erlang\" } }, \"end\": \"(\\\\2)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.erlang\" } }, \"name\": \"string.quoted.single.sigil.erlang\", \"patterns\": [{ \"include\": \"#internal-string-body\" }] }, \"sigil-string-single-quote-verbatim\": { \"begin\": \"(~[BS])(')\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.string.erlang\" }, \"2\": { \"name\": \"punctuation.definition.string.begin.erlang\" } }, \"end\": \"(\\\\2)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.erlang\" } }, \"name\": \"string.quoted.single.sigil.erlang\" }, \"sigil-string-square-brackets\": { \"begin\": \"(~[bs]?)([\\\\[])\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.string.erlang\" }, \"2\": { \"name\": \"punctuation.definition.string.begin.erlang\" } }, \"end\": \"([\\\\]])\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.erlang\" } }, \"name\": \"string.quoted.square-brackets.sigil.erlang\", \"patterns\": [{ \"include\": \"#internal-string-body\" }] }, \"sigil-string-square-brackets-verbatim\": { \"begin\": \"(~[BS])([\\\\[])\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.string.erlang\" }, \"2\": { \"name\": \"punctuation.definition.string.begin.erlang\" } }, \"end\": \"([\\\\]])\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.erlang\" } }, \"name\": \"string.quoted.square-brackets.sigil.erlang\" }, \"string\": { \"begin\": '(\")', \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.begin.erlang\" } }, \"end\": '(\")', \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.erlang\" } }, \"name\": \"string.quoted.double.erlang\", \"patterns\": [{ \"include\": \"#internal-string-body\" }] }, \"symbolic-operator\": { \"match\": \"\\\\+\\\\+|\\\\+|--|-|\\\\*|/=|/|=/=|=:=|==|=<|=|<-|<|>=|>|!|::|\\\\?=\", \"name\": \"keyword.operator.symbolic.erlang\" }, \"textual-operator\": { \"match\": \"\\\\b(andalso|band|and|bxor|xor|bor|orelse|or|bnot|not|bsl|bsr|div|rem)\\\\b\", \"name\": \"keyword.operator.textual.erlang\" }, \"tuple\": { \"begin\": \"(\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.tuple.begin.erlang\" } }, \"end\": \"(\\\\})\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.tuple.end.erlang\" } }, \"name\": \"meta.structure.tuple.erlang\", \"patterns\": [{ \"match\": \",\", \"name\": \"punctuation.separator.tuple.erlang\" }, { \"include\": \"#everything-else\" }] }, \"variable\": { \"captures\": { \"1\": { \"name\": \"variable.other.erlang\" }, \"2\": { \"name\": \"variable.language.omitted.erlang\" } }, \"match\": \"(_[a-zA-Z\\\\d@_]++|[A-Z][a-zA-Z\\\\d@_]*+)|(_)\" } }, \"scopeName\": \"source.erlang\", \"aliases\": [\"erl\"] });\nvar erlang = [\n  lang\n];\n\nexport { erlang as default };\n"],"x_google_ignoreList":[0]}