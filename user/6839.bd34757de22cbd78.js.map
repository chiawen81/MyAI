{"version":3,"file":"6839.bd34757de22cbd78.js","mappings":"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","names":["yaml","Object","freeze","displayName","fileTypes","firstLineMatch","name","patterns","include","match","repository","begin","beginCaptures","end","endCaptures","contentName","comment","directive","captures","node","property","prototype","scopeName","aliases"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./node_modules/shiki/dist/langs/yaml.mjs"],"sourcesContent":["const lang = Object.freeze({ \"displayName\": \"YAML\", \"fileTypes\": [\"yaml\", \"yml\", \"rviz\", \"reek\", \"clang-format\", \"yaml-tmlanguage\", \"syntax\", \"sublime-syntax\"], \"firstLineMatch\": \"^%YAML( ?1.\\\\d+)?\", \"name\": \"yaml\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#property\" }, { \"include\": \"#directive\" }, { \"match\": \"^---\", \"name\": \"entity.other.document.begin.yaml\" }, { \"match\": \"^\\\\.{3}\", \"name\": \"entity.other.document.end.yaml\" }, { \"include\": \"#node\" }], \"repository\": { \"block-collection\": { \"patterns\": [{ \"include\": \"#block-sequence\" }, { \"include\": \"#block-mapping\" }] }, \"block-mapping\": { \"patterns\": [{ \"include\": \"#block-pair\" }] }, \"block-node\": { \"patterns\": [{ \"include\": \"#prototype\" }, { \"include\": \"#block-scalar\" }, { \"include\": \"#block-collection\" }, { \"include\": \"#flow-scalar-plain-out\" }, { \"include\": \"#flow-node\" }] }, \"block-pair\": { \"patterns\": [{ \"begin\": \"\\\\?\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.key-value.begin.yaml\" } }, \"end\": \"(?=\\\\?)|^ *(:)|(:)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.separator.key-value.mapping.yaml\" }, \"2\": { \"name\": \"invalid.illegal.expected-newline.yaml\" } }, \"name\": \"meta.block-mapping.yaml\", \"patterns\": [{ \"include\": \"#block-node\" }] }, { \"begin\": \"(?x)\\n(?=\\n(?x:\\n[^\\\\s[-?:,\\\\[\\\\]{}#&*!|>'\\\"%@`]]\\n| [?:-] \\\\S\\n)\\n(\\n[^\\\\s:]\\n| : \\\\S\\n| \\\\s+ (?![#\\\\s])\\n)*\\n\\\\s*\\n:\\n(\\\\s|$)\\n)\\n\", \"end\": \"(?x)\\n(?=\\n\\\\s* $\\n| \\\\s+ \\\\#\\n| \\\\s* : (\\\\s|$)\\n)\\n\", \"patterns\": [{ \"include\": \"#flow-scalar-plain-out-implicit-type\" }, { \"begin\": \"(?x)\\n[^\\\\s[-?:,\\\\[\\\\]{}#&*!|>'\\\"%@`]]\\n| [?:-] \\\\S\\n\", \"beginCaptures\": { \"0\": { \"name\": \"entity.name.tag.yaml\" } }, \"contentName\": \"entity.name.tag.yaml\", \"end\": \"(?x)\\n(?=\\n\\\\s* $\\n| \\\\s+ \\\\#\\n| \\\\s* : (\\\\s|$)\\n)\\n\", \"name\": \"string.unquoted.plain.out.yaml\" }] }, { \"match\": \":(?=\\\\s|$)\", \"name\": \"punctuation.separator.key-value.mapping.yaml\" }] }, \"block-scalar\": { \"begin\": \"(?:(\\\\|)|(>))([1-9])?([-+])?(.*\\\\n?)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.flow.block-scalar.literal.yaml\" }, \"2\": { \"name\": \"keyword.control.flow.block-scalar.folded.yaml\" }, \"3\": { \"name\": \"constant.numeric.indentation-indicator.yaml\" }, \"4\": { \"name\": \"storage.modifier.chomping-indicator.yaml\" }, \"5\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"match\": \".+\", \"name\": \"invalid.illegal.expected-comment-or-newline.yaml\" }] } }, \"end\": \"^(?=\\\\S)|(?!\\\\G)\", \"patterns\": [{ \"begin\": \"^([ ]+)(?! )\", \"end\": \"^(?!\\\\1|\\\\s*$)\", \"name\": \"string.unquoted.block.yaml\" }] }, \"block-sequence\": { \"match\": \"(-)(?!\\\\S)\", \"name\": \"punctuation.definition.block.sequence.item.yaml\" }, \"comment\": { \"begin\": \"(?:(^[ \\\\t]*)|[ \\\\t]+)(?=#\\\\p{Print}*$)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.whitespace.comment.leading.yaml\" } }, \"end\": \"(?!\\\\G)\", \"patterns\": [{ \"begin\": \"#\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.yaml\" } }, \"end\": \"\\\\n\", \"name\": \"comment.line.number-sign.yaml\" }] }, \"directive\": { \"begin\": \"^%\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.directive.begin.yaml\" } }, \"end\": \"(?=$|[ \\\\t]+($|#))\", \"name\": \"meta.directive.yaml\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"keyword.other.directive.yaml.yaml\" }, \"2\": { \"name\": \"constant.numeric.yaml-version.yaml\" } }, \"match\": \"\\\\G(YAML)[ \\\\t]+(\\\\d+\\\\.\\\\d+)\" }, { \"captures\": { \"1\": { \"name\": \"keyword.other.directive.tag.yaml\" }, \"2\": { \"name\": \"storage.type.tag-handle.yaml\" }, \"3\": { \"name\": \"support.type.tag-prefix.yaml\" } }, \"match\": \"(?x)\\n\\\\G\\n(TAG)\\n(?:[ \\\\t]+\\n((?:!(?:[0-9A-Za-z\\\\-]*!)?))\\n(?:[ \\\\t]+ (\\n!              (?x: %[0-9A-Fa-f]{2} | [0-9A-Za-z\\\\-#;/?:@&=+$,_.!~*'()\\\\[\\\\]] )*\\n| (?![,!\\\\[\\\\]{}]) (?x: %[0-9A-Fa-f]{2} | [0-9A-Za-z\\\\-#;/?:@&=+$,_.!~*'()\\\\[\\\\]] )+\\n)\\n)?\\n)?\\n\" }, { \"captures\": { \"1\": { \"name\": \"support.other.directive.reserved.yaml\" }, \"2\": { \"name\": \"string.unquoted.directive-name.yaml\" }, \"3\": { \"name\": \"string.unquoted.directive-parameter.yaml\" } }, \"match\": \"(?x) \\\\G (\\\\w+) (?:[ \\\\t]+ (\\\\w+) (?:[ \\\\t]+ (\\\\w+))? )?\" }, { \"match\": \"\\\\S+\", \"name\": \"invalid.illegal.unrecognized.yaml\" }] }, \"flow-alias\": { \"captures\": { \"1\": { \"name\": \"keyword.control.flow.alias.yaml\" }, \"2\": { \"name\": \"punctuation.definition.alias.yaml\" }, \"3\": { \"name\": \"variable.other.alias.yaml\" }, \"4\": { \"name\": \"invalid.illegal.character.anchor.yaml\" } }, \"match\": \"((\\\\*))([^\\\\s\\\\[\\\\]/{/},]+)([^\\\\s\\\\]},]\\\\S*)?\" }, \"flow-collection\": { \"patterns\": [{ \"include\": \"#flow-sequence\" }, { \"include\": \"#flow-mapping\" }] }, \"flow-mapping\": { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.mapping.begin.yaml\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.mapping.end.yaml\" } }, \"name\": \"meta.flow-mapping.yaml\", \"patterns\": [{ \"include\": \"#prototype\" }, { \"match\": \",\", \"name\": \"punctuation.separator.mapping.yaml\" }, { \"include\": \"#flow-pair\" }] }, \"flow-node\": { \"patterns\": [{ \"include\": \"#prototype\" }, { \"include\": \"#flow-alias\" }, { \"include\": \"#flow-collection\" }, { \"include\": \"#flow-scalar\" }] }, \"flow-pair\": { \"patterns\": [{ \"begin\": \"\\\\?\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.key-value.begin.yaml\" } }, \"end\": \"(?=[},\\\\]])\", \"name\": \"meta.flow-pair.explicit.yaml\", \"patterns\": [{ \"include\": \"#prototype\" }, { \"include\": \"#flow-pair\" }, { \"include\": \"#flow-node\" }, { \"begin\": \":(?=\\\\s|$|[\\\\[\\\\]{},])\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.separator.key-value.mapping.yaml\" } }, \"end\": \"(?=[},\\\\]])\", \"patterns\": [{ \"include\": \"#flow-value\" }] }] }, { \"begin\": \"(?x)\\n(?=\\n(?:\\n[^\\\\s[-?:,\\\\[\\\\]{}#&*!|>'\\\"%@`]]\\n| [?:-] [^\\\\s[\\\\[\\\\]{},]]\\n)\\n(\\n[^\\\\s:[\\\\[\\\\]{},]]\\n| : [^\\\\s[\\\\[\\\\]{},]]\\n| \\\\s+ (?![#\\\\s])\\n)*\\n\\\\s*\\n:\\n(\\\\s|$)\\n)\\n\", \"end\": \"(?x)\\n(?=\\n\\\\s* $\\n| \\\\s+ \\\\#\\n| \\\\s* : (\\\\s|$)\\n| \\\\s* : [\\\\[\\\\]{},]\\n| \\\\s* [\\\\[\\\\]{},]\\n)\\n\", \"name\": \"meta.flow-pair.key.yaml\", \"patterns\": [{ \"include\": \"#flow-scalar-plain-in-implicit-type\" }, { \"begin\": \"(?x)\\n[^\\\\s[-?:,\\\\[\\\\]{}#&*!|>'\\\"%@`]]\\n| [?:-] [^\\\\s[\\\\[\\\\]{},]]\\n\", \"beginCaptures\": { \"0\": { \"name\": \"entity.name.tag.yaml\" } }, \"contentName\": \"entity.name.tag.yaml\", \"end\": \"(?x)\\n(?=\\n\\\\s* $\\n| \\\\s+ \\\\#\\n| \\\\s* : (\\\\s|$)\\n| \\\\s* : [\\\\[\\\\]{},]\\n| \\\\s* [\\\\[\\\\]{},]\\n)\\n\", \"name\": \"string.unquoted.plain.in.yaml\" }] }, { \"include\": \"#flow-node\" }, { \"begin\": \":(?=\\\\s|$|[\\\\[\\\\]{},])\", \"captures\": { \"0\": { \"name\": \"punctuation.separator.key-value.mapping.yaml\" } }, \"end\": \"(?=[},\\\\]])\", \"name\": \"meta.flow-pair.yaml\", \"patterns\": [{ \"include\": \"#flow-value\" }] }] }, \"flow-scalar\": { \"patterns\": [{ \"include\": \"#flow-scalar-double-quoted\" }, { \"include\": \"#flow-scalar-single-quoted\" }, { \"include\": \"#flow-scalar-plain-in\" }] }, \"flow-scalar-double-quoted\": { \"begin\": '\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.yaml\" } }, \"end\": '\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.yaml\" } }, \"name\": \"string.quoted.double.yaml\", \"patterns\": [{ \"match\": '\\\\\\\\([0abtnvfre \"/\\\\\\\\N_Lp]|x\\\\d\\\\d|u\\\\d{4}|U\\\\d{8})', \"name\": \"constant.character.escape.yaml\" }, { \"match\": \"\\\\\\\\\\\\n\", \"name\": \"constant.character.escape.double-quoted.newline.yaml\" }] }, \"flow-scalar-plain-in\": { \"patterns\": [{ \"include\": \"#flow-scalar-plain-in-implicit-type\" }, { \"begin\": \"(?x)\\n[^\\\\s[-?:,\\\\[\\\\]{}#&*!|>'\\\"%@`]]\\n| [?:-] [^\\\\s[\\\\[\\\\]{},]]\\n\", \"end\": \"(?x)\\n(?=\\n\\\\s* $\\n| \\\\s+ \\\\#\\n| \\\\s* : (\\\\s|$)\\n| \\\\s* : [\\\\[\\\\]{},]\\n| \\\\s* [\\\\[\\\\]{},]\\n)\\n\", \"name\": \"string.unquoted.plain.in.yaml\" }] }, \"flow-scalar-plain-in-implicit-type\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"constant.language.null.yaml\" }, \"2\": { \"name\": \"constant.language.boolean.yaml\" }, \"3\": { \"name\": \"constant.numeric.integer.yaml\" }, \"4\": { \"name\": \"constant.numeric.float.yaml\" }, \"5\": { \"name\": \"constant.other.timestamp.yaml\" }, \"6\": { \"name\": \"constant.language.value.yaml\" }, \"7\": { \"name\": \"constant.language.merge.yaml\" } }, \"match\": \"(?x)\\n(?x:\\n(null|Null|NULL|~)\\n| (y|Y|yes|Yes|YES|n|N|no|No|NO|true|True|TRUE|false|False|FALSE|on|On|ON|off|Off|OFF)\\n| (\\n(?:\\n[-+]? 0b [0-1_]+\\n| [-+]? 0  [0-7_]+\\n| [-+]? (?: 0|[1-9][0-9_]*)\\n| [-+]? 0x [0-9a-fA-F_]+\\n| [-+]? [1-9] [0-9_]* (?: :[0-5]?[0-9])+\\n)\\n)\\n| (\\n(?x:\\n[-+]? (?: [0-9] [0-9_]*)? \\\\. [0-9.]* (?: [eE] [-+] [0-9]+)?\\n| [-+]? [0-9] [0-9_]* (?: :[0-5]?[0-9])+ \\\\. [0-9_]*\\n| [-+]? \\\\. (?: inf|Inf|INF)\\n|       \\\\. (?: nan|NaN|NAN)\\n)\\n)\\n| (\\n(?x:\\n\\\\d{4} - \\\\d{2} - \\\\d{2}\\n| \\\\d{4}\\n- \\\\d{1,2}\\n- \\\\d{1,2}\\n(?: [Tt] | [ \\\\t]+) \\\\d{1,2}\\n: \\\\d{2}\\n: \\\\d{2}\\n(?: \\\\.\\\\d*)?\\n(?:\\n(?:[ \\\\t]*) Z\\n| [-+] \\\\d{1,2} (?: :\\\\d{1,2})?\\n)?\\n)\\n)\\n| (=)\\n| (<<)\\n)\\n(?:\\n(?=\\n\\\\s* $\\n| \\\\s+ \\\\#\\n| \\\\s* : (\\\\s|$)\\n| \\\\s* : [\\\\[\\\\]{},]\\n| \\\\s* [\\\\[\\\\]{},]\\n)\\n)\\n\" }] }, \"flow-scalar-plain-out\": { \"patterns\": [{ \"include\": \"#flow-scalar-plain-out-implicit-type\" }, { \"begin\": \"(?x)\\n[^\\\\s[-?:,\\\\[\\\\]{}#&*!|>'\\\"%@`]]\\n| [?:-] \\\\S\\n\", \"end\": \"(?x)\\n(?=\\n\\\\s* $\\n| \\\\s+ \\\\#\\n| \\\\s* : (\\\\s|$)\\n)\\n\", \"name\": \"string.unquoted.plain.out.yaml\" }] }, \"flow-scalar-plain-out-implicit-type\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"constant.language.null.yaml\" }, \"2\": { \"name\": \"constant.language.boolean.yaml\" }, \"3\": { \"name\": \"constant.numeric.integer.yaml\" }, \"4\": { \"name\": \"constant.numeric.float.yaml\" }, \"5\": { \"name\": \"constant.other.timestamp.yaml\" }, \"6\": { \"name\": \"constant.language.value.yaml\" }, \"7\": { \"name\": \"constant.language.merge.yaml\" } }, \"match\": \"(?x)\\n(?x:\\n(null|Null|NULL|~)\\n| (y|Y|yes|Yes|YES|n|N|no|No|NO|true|True|TRUE|false|False|FALSE|on|On|ON|off|Off|OFF)\\n| (\\n(?:\\n[-+]? 0b [0-1_]+\\n| [-+]? 0  [0-7_]+\\n| [-+]? (?: 0|[1-9][0-9_]*)\\n| [-+]? 0x [0-9a-fA-F_]+\\n| [-+]? [1-9] [0-9_]* (?: :[0-5]?[0-9])+\\n)\\n)\\n| (\\n(?x:\\n[-+]? (?: [0-9] [0-9_]*)? \\\\. [0-9.]* (?: [eE] [-+] [0-9]+)?\\n| [-+]? [0-9] [0-9_]* (?: :[0-5]?[0-9])+ \\\\. [0-9_]*\\n| [-+]? \\\\. (?: inf|Inf|INF)\\n|       \\\\. (?: nan|NaN|NAN)\\n)\\n)\\n| (\\n(?x:\\n\\\\d{4} - \\\\d{2} - \\\\d{2}\\n| \\\\d{4}\\n- \\\\d{1,2}\\n- \\\\d{1,2}\\n(?: [Tt] | [ \\\\t]+) \\\\d{1,2}\\n: \\\\d{2}\\n: \\\\d{2}\\n(?: \\\\.\\\\d*)?\\n(?:\\n(?:[ \\\\t]*) Z\\n| [-+] \\\\d{1,2} (?: :\\\\d{1,2})?\\n)?\\n)\\n)\\n| (=)\\n| (<<)\\n)\\n(?x:\\n(?=\\n\\\\s* $\\n| \\\\s+ \\\\#\\n| \\\\s* : (\\\\s|$)\\n)\\n)\\n\" }] }, \"flow-scalar-single-quoted\": { \"begin\": \"'\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.yaml\" } }, \"end\": \"'(?!')\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.yaml\" } }, \"name\": \"string.quoted.single.yaml\", \"patterns\": [{ \"match\": \"''\", \"name\": \"constant.character.escape.single-quoted.yaml\" }] }, \"flow-sequence\": { \"begin\": \"\\\\[\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.sequence.begin.yaml\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.sequence.end.yaml\" } }, \"name\": \"meta.flow-sequence.yaml\", \"patterns\": [{ \"include\": \"#prototype\" }, { \"match\": \",\", \"name\": \"punctuation.separator.sequence.yaml\" }, { \"include\": \"#flow-pair\" }, { \"include\": \"#flow-node\" }] }, \"flow-value\": { \"patterns\": [{ \"begin\": \"\\\\G(?![},\\\\]])\", \"end\": \"(?=[},\\\\]])\", \"name\": \"meta.flow-pair.value.yaml\", \"patterns\": [{ \"include\": \"#flow-node\" }] }] }, \"node\": { \"patterns\": [{ \"include\": \"#block-node\" }] }, \"property\": { \"begin\": \"(?=!|&)\", \"end\": \"(?!\\\\G)\", \"name\": \"meta.property.yaml\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"keyword.control.property.anchor.yaml\" }, \"2\": { \"name\": \"punctuation.definition.anchor.yaml\" }, \"3\": { \"name\": \"entity.name.type.anchor.yaml\" }, \"4\": { \"name\": \"invalid.illegal.character.anchor.yaml\" } }, \"match\": \"\\\\G((&))([^\\\\s\\\\[\\\\]/{/},]+)(\\\\S+)?\" }, { \"match\": \"(?x)\\n\\\\G\\n(?:\\n! < (?: %[0-9A-Fa-f]{2} | [0-9A-Za-z\\\\-#;/?:@&=+$,_.!~*'()\\\\[\\\\]] )+ >\\n| (?:!(?:[0-9A-Za-z\\\\-]*!)?) (?: %[0-9A-Fa-f]{2} | [0-9A-Za-z\\\\-#;/?:@&=+$_.~*'()] )+\\n| !\\n)\\n(?=\\\\ |\\\\t|$)\\n\", \"name\": \"storage.type.tag-handle.yaml\" }, { \"match\": \"\\\\S+\", \"name\": \"invalid.illegal.tag-handle.yaml\" }] }, \"prototype\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#property\" }] } }, \"scopeName\": \"source.yaml\", \"aliases\": [\"yml\"] });\nvar yaml = [\n  lang\n];\n\nexport { yaml as default };\n"],"x_google_ignoreList":[0]}