{"version":3,"file":"5965.e3a28cf3b59a7782.js","mappings":"0HACA,IAAIA,EAAU,CADDC,OAAOC,OAAO,CAAEC,YAAe,UAAWC,KAAQ,UAAWC,SAAY,CAAC,CAAEC,QAAW,eAAiB,CAAEA,QAAW,cAAgBC,WAAc,CAAE,oBAAqB,CAAEF,SAAY,CAAC,CAAEG,MAAS,oEAAqEJ,KAAQ,4BAA8B,CAAEI,MAAS,iEAAkEJ,KAAQ,4BAA8B,CAAEI,MAAS,sEAAuEJ,KAAQ,4BAA8B,CAAEI,MAAS,oEAAqEJ,KAAQ,4BAA8B,CAAEI,MAAS,uEAAwEJ,KAAQ,4BAA8B,CAAEI,MAAS,gEAAiEJ,KAAQ,4BAA8B,CAAEI,MAAS,kEAAmEJ,KAAQ,4BAA8B,CAAEI,MAAS,sDAAuDJ,KAAQ,4BAA8B,CAAEI,MAAS,6DAA8DJ,KAAQ,8BAAiCK,QAAW,CAAEJ,SAAY,CAAC,CAAEK,MAAS,OAAQC,IAAO,OAAQP,KAAQ,yBAA2B,CAAEI,MAAS,QAASJ,KAAQ,wBAA0B,CAAEI,MAAS,OAAQJ,KAAQ,2BAA8B,wBAAyB,CAAEM,MAAS,IAAKC,IAAO,IAAKP,KAAQ,+BAAgCC,SAAY,CAAC,CAAEG,MAAS,wCAAyCJ,KAAQ,qCAAuC,CAAEI,MAAS,sBAAuBJ,KAAQ,6BAAgCQ,WAAc,CAAEP,SAAY,CAAC,CAAEC,QAAW,aAAe,CAAEA,QAAW,YAAc,CAAEA,QAAW,0BAA4B,CAAEA,QAAW,0BAA4B,CAAEA,QAAW,0BAA4B,CAAEA,QAAW,sBAAwB,CAAEA,QAAW,gBAAmBO,UAAa,CAAER,SAAY,CAAC,CAAEK,MAAS,qCAAsCI,cAAiB,CAAE,EAAK,CAAEV,KAAQ,iCAAoCO,IAAO,MAAOP,KAAQ,gBAAiBC,SAAY,CAAC,CAAEC,QAAW,mBAAuBS,SAAY,CAAEV,SAAY,CAAC,CAAEG,MAAS,+BAAgCJ,KAAQ,4BAA8B,CAAEI,MAAS,MAAOJ,KAAQ,yBAA2B,CAAEI,MAAS,uDAAwDJ,KAAQ,yBAA2B,CAAEI,MAAS,2CAA4CJ,KAAQ,2BAA6B,CAAEI,MAAS,mBAAoBJ,KAAQ,wBAA0B,CAAEI,MAAS,yCAA0CJ,KAAQ,8BAAgC,CAAEI,MAAS,uCAAwCJ,KAAQ,oBAAsB,CAAEI,MAAS,qCAAsCJ,KAAQ,gCAAmCY,SAAY,CAAEX,SAAY,CAAC,CAAEG,MAAS,0BAA2BJ,KAAQ,6BAA+B,CAAEI,MAAS,+BAAgCJ,KAAQ,4BAA8B,CAAEI,MAAS,oCAAqCJ,KAAQ,4BAA8B,CAAEI,MAAS,gCAAiCJ,KAAQ,8BAAiC,wBAAyB,CAAEM,MAAS,IAAKC,IAAO,IAAKP,KAAQ,+BAAgCC,SAAY,CAAC,CAAEG,MAAS,wCAAyCJ,KAAQ,qCAAuC,CAAEI,MAAS,sBAAuBJ,KAAQ,6BAAgC,wBAAyB,CAAEC,SAAY,CAAC,CAAEK,MAAS,YAAaC,IAAO,YAAaP,KAAQ,mCAAuCa,UAAa","names":["jsonnet","Object","freeze","displayName","name","patterns","include","repository","match","comment","begin","end","expression","functions","beginCaptures","keywords","literals","scopeName"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./node_modules/shiki/dist/langs/jsonnet.mjs"],"sourcesContent":["const lang = Object.freeze({ \"displayName\": \"Jsonnet\", \"name\": \"jsonnet\", \"patterns\": [{ \"include\": \"#expression\" }, { \"include\": \"#keywords\" }], \"repository\": { \"builtin-functions\": { \"patterns\": [{ \"match\": \"\\\\bstd[.](acos|asin|atan|ceil|char|codepoint|cos|exp|exponent)\\\\b\", \"name\": \"support.function.jsonnet\" }, { \"match\": \"\\\\bstd[.](filter|floor|force|length|log|makeArray|mantissa)\\\\b\", \"name\": \"support.function.jsonnet\" }, { \"match\": \"\\\\bstd[.](objectFields|objectHas|pow|sin|sqrt|tan|type|thisFile)\\\\b\", \"name\": \"support.function.jsonnet\" }, { \"match\": \"\\\\bstd[.](acos|asin|atan|ceil|char|codepoint|cos|exp|exponent)\\\\b\", \"name\": \"support.function.jsonnet\" }, { \"match\": \"\\\\bstd[.](abs|assertEqual|escapeString(Bash|Dollars|Json|Python))\\\\b\", \"name\": \"support.function.jsonnet\" }, { \"match\": \"\\\\bstd[.](filterMap|flattenArrays|foldl|foldr|format|join)\\\\b\", \"name\": \"support.function.jsonnet\" }, { \"match\": \"\\\\bstd[.](lines|manifest(Ini|Python(Vars)?)|map|max|min|mod)\\\\b\", \"name\": \"support.function.jsonnet\" }, { \"match\": \"\\\\bstd[.](set|set(Diff|Inter|Member|Union)|sort)\\\\b\", \"name\": \"support.function.jsonnet\" }, { \"match\": \"\\\\bstd[.](range|split|stringChars|substr|toString|uniq)\\\\b\", \"name\": \"support.function.jsonnet\" }] }, \"comment\": { \"patterns\": [{ \"begin\": \"/\\\\*\", \"end\": \"\\\\*/\", \"name\": \"comment.block.jsonnet\" }, { \"match\": \"//.*$\", \"name\": \"comment.line.jsonnet\" }, { \"match\": \"#.*$\", \"name\": \"comment.block.jsonnet\" }] }, \"double-quoted-strings\": { \"begin\": '\"', \"end\": '\"', \"name\": \"string.quoted.double.jsonnet\", \"patterns\": [{ \"match\": '\\\\\\\\([\"\\\\\\\\/bfnrt]|(u[0-9a-fA-F]{4}))', \"name\": \"constant.character.escape.jsonnet\" }, { \"match\": '\\\\\\\\[^\"\\\\\\\\/bfnrtu]', \"name\": \"invalid.illegal.jsonnet\" }] }, \"expression\": { \"patterns\": [{ \"include\": \"#literals\" }, { \"include\": \"#comment\" }, { \"include\": \"#single-quoted-strings\" }, { \"include\": \"#double-quoted-strings\" }, { \"include\": \"#triple-quoted-strings\" }, { \"include\": \"#builtin-functions\" }, { \"include\": \"#functions\" }] }, \"functions\": { \"patterns\": [{ \"begin\": \"\\\\b([a-zA-Z_][a-z0-9A-Z_]*)\\\\s*\\\\(\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.function.jsonnet\" } }, \"end\": \"\\\\)\", \"name\": \"meta.function\", \"patterns\": [{ \"include\": \"#expression\" }] }] }, \"keywords\": { \"patterns\": [{ \"match\": \"[!:~\\\\+\\\\-&\\\\|\\\\^=<>\\\\*\\\\/%]\", \"name\": \"keyword.operator.jsonnet\" }, { \"match\": \"\\\\$\", \"name\": \"keyword.other.jsonnet\" }, { \"match\": \"\\\\b(self|super|import|importstr|local|tailstrict)\\\\b\", \"name\": \"keyword.other.jsonnet\" }, { \"match\": \"\\\\b(if|then|else|for|in|error|assert)\\\\b\", \"name\": \"keyword.control.jsonnet\" }, { \"match\": \"\\\\b(function)\\\\b\", \"name\": \"storage.type.jsonnet\" }, { \"match\": \"[a-zA-Z_][a-z0-9A-Z_]*\\\\s*(:::|\\\\+:::)\", \"name\": \"variable.parameter.jsonnet\" }, { \"match\": \"[a-zA-Z_][a-z0-9A-Z_]*\\\\s*(::|\\\\+::)\", \"name\": \"entity.name.type\" }, { \"match\": \"[a-zA-Z_][a-z0-9A-Z_]*\\\\s*(:|\\\\+:)\", \"name\": \"variable.parameter.jsonnet\" }] }, \"literals\": { \"patterns\": [{ \"match\": \"\\\\b(true|false|null)\\\\b\", \"name\": \"constant.language.jsonnet\" }, { \"match\": \"\\\\b(\\\\d+([Ee][+-]?\\\\d+)?)\\\\b\", \"name\": \"constant.numeric.jsonnet\" }, { \"match\": \"\\\\b\\\\d+[.]\\\\d*([Ee][+-]?\\\\d+)?\\\\b\", \"name\": \"constant.numeric.jsonnet\" }, { \"match\": \"\\\\b[.]\\\\d+([Ee][+-]?\\\\d+)?\\\\b\", \"name\": \"constant.numeric.jsonnet\" }] }, \"single-quoted-strings\": { \"begin\": \"'\", \"end\": \"'\", \"name\": \"string.quoted.double.jsonnet\", \"patterns\": [{ \"match\": \"\\\\\\\\(['\\\\\\\\/bfnrt]|(u[0-9a-fA-F]{4}))\", \"name\": \"constant.character.escape.jsonnet\" }, { \"match\": \"\\\\\\\\[^'\\\\\\\\/bfnrtu]\", \"name\": \"invalid.illegal.jsonnet\" }] }, \"triple-quoted-strings\": { \"patterns\": [{ \"begin\": \"\\\\|\\\\|\\\\|\", \"end\": \"\\\\|\\\\|\\\\|\", \"name\": \"string.quoted.triple.jsonnet\" }] } }, \"scopeName\": \"source.jsonnet\" });\nvar jsonnet = [\n  lang\n];\n\nexport { jsonnet as default };\n"],"x_google_ignoreList":[0]}