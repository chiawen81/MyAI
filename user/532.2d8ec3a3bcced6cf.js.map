{"version":3,"file":"532.2d8ec3a3bcced6cf.js","mappings":"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","names":["lang","Object","freeze","displayName","name","patterns","include","repository","abstract_definition","begin","beginCaptures","end","endCaptures","captures","match","comments","anonymous_functions","anonymous_record_declaration","attributes","cexprs","chars","while","common_binding_definition","comment","beginComment","endComment","common_declaration","compiler_directives","constants","definition","double_tick","du_declaration","generic_declaration","keywords","member_declaration","modules","record_declaration","record_signature","records","string_formatter","strings","strp_inlined","strp_inlined_body","text","tuple_signature","variables","scopeName","embeddedLangs","aliases","fsharp","markdown"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./node_modules/shiki/dist/langs/fsharp.mjs"],"sourcesContent":["import markdown from './markdown.mjs';\n\nconst lang = Object.freeze({ \"displayName\": \"F#\", \"name\": \"fsharp\", \"patterns\": [{ \"include\": \"#compiler_directives\" }, { \"include\": \"#comments\" }, { \"include\": \"#constants\" }, { \"include\": \"#strings\" }, { \"include\": \"#chars\" }, { \"include\": \"#double_tick\" }, { \"include\": \"#definition\" }, { \"include\": \"#abstract_definition\" }, { \"include\": \"#attributes\" }, { \"include\": \"#modules\" }, { \"include\": \"#anonymous_functions\" }, { \"include\": \"#du_declaration\" }, { \"include\": \"#record_declaration\" }, { \"include\": \"#records\" }, { \"include\": \"#strp_inlined\" }, { \"include\": \"#keywords\" }, { \"include\": \"#cexprs\" }, { \"include\": \"#text\" }], \"repository\": { \"abstract_definition\": { \"begin\": \"\\\\b(static)?\\\\s+(abstract)\\\\s+(member)?(\\\\s+\\\\[\\\\<.*\\\\>\\\\])?\\\\s*([_[:alpha:]0-9,\\\\._`\\\\s]+)(<)?\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.fsharp\" }, \"2\": { \"name\": \"keyword.fsharp\" }, \"3\": { \"name\": \"keyword.fsharp\" }, \"4\": { \"name\": \"support.function.attribute.fsharp\" }, \"5\": { \"name\": \"keyword.symbol.fsharp\" } }, \"end\": \"\\\\s*(with)\\\\b|=|$\", \"endCaptures\": { \"1\": { \"name\": \"keyword.fsharp\" } }, \"name\": \"abstract.definition.fsharp\", \"patterns\": [{ \"include\": \"#comments\" }, { \"include\": \"#common_declaration\" }, { \"captures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" }, \"2\": { \"name\": \"variable.parameter.fsharp\" }, \"3\": { \"name\": \"keyword.symbol.fsharp\" }, \"4\": { \"name\": \"entity.name.type.fsharp\" } }, \"match\": \"(\\\\?{0,1})([[:alpha:]0-9'`^._ ]+)\\\\s*(:)((?!with\\\\b)\\\\b([\\\\w0-9'`^._ ]+)){0,1}\" }, { \"captures\": { \"1\": { \"name\": \"entity.name.type.fsharp\" } }, \"comments\": \"Here we need the \\\\w modifier in order to check that the words isn't blacklisted\", \"match\": \"(?!with|get|set\\\\b)\\\\s*([\\\\w0-9'`^._]+)\" }, { \"include\": \"#keywords\" }] }, \"anonymous_functions\": { \"patterns\": [{ \"begin\": \"\\\\b(fun)\\\\b\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.fsharp\" } }, \"end\": \"(->)\", \"endCaptures\": { \"1\": { \"name\": \"keyword.symbol.arrow.fsharp\" } }, \"name\": \"function.anonymous\", \"patterns\": [{ \"include\": \"#comments\" }, { \"begin\": \"(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"end\": \"\\\\s*(?=(->))\", \"endCaptures\": { \"1\": { \"name\": \"keyword.symbol.arrow.fsharp\" } }, \"patterns\": [{ \"include\": \"#member_declaration\" }] }, { \"include\": \"#variables\" }] }] }, \"anonymous_record_declaration\": { \"begin\": \"(\\\\{\\\\|)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"end\": \"(\\\\|\\\\})\", \"endCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"match\": \"[[:alpha:]0-9'`^_ ]+(:)\" }, { \"captures\": { \"1\": { \"name\": \"entity.name.type.fsharp\" } }, \"match\": \"([[:alpha:]0-9'`^_ ]+)\" }, { \"include\": \"#anonymous_record_declaration\" }, { \"include\": \"#keywords\" }] }, \"attributes\": { \"patterns\": [{ \"begin\": \"\\\\[\\\\<\", \"end\": \"\\\\>\\\\]|\\\\]\", \"name\": \"support.function.attribute.fsharp\", \"patterns\": [{ \"include\": \"$self\" }] }] }, \"cexprs\": { \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"keyword.fsharp\" } }, \"match\": \"\\\\b(async|seq|promise|task|maybe|asyncMaybe|controller|scope|application|pipeline)(?=\\\\s*\\\\{)\", \"name\": \"cexpr.fsharp\" }] }, \"chars\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"string.quoted.single.fsharp\" } }, \"match\": \"('\\\\\\\\?.')\", \"name\": \"char.fsharp\" }] }, \"comments\": { \"patterns\": [{ \"beginCaptures\": { \"1\": { \"name\": \"comment.block.fsharp\" } }, \"match\": \"(\\\\(\\\\*{3}.*\\\\*{3}\\\\))\", \"name\": \"comment.literate.command.fsharp\" }, { \"begin\": \"^\\\\s*(\\\\(\\\\*\\\\*(?!\\\\)))((?!\\\\*\\\\)).)*$\", \"beginCaptures\": { \"1\": { \"name\": \"comment.block.fsharp\" } }, \"endCaptures\": { \"1\": { \"name\": \"comment.block.fsharp\" } }, \"name\": \"comment.block.markdown.fsharp\", \"patterns\": [{ \"include\": \"text.html.markdown\" }], \"while\": \"^(?!\\\\s*(\\\\*)+\\\\)\\\\s*$)\" }, { \"begin\": \"(\\\\(\\\\*(?!\\\\)))\", \"beginCaptures\": { \"1\": { \"name\": \"comment.block.fsharp\" } }, \"end\": \"(\\\\*+\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"comment.block.fsharp\" } }, \"name\": \"comment.block.fsharp\", \"patterns\": [{ \"comments\": \"Capture // when inside of (* *) like that the rule which capture comments starting by // is not trigger. See https://github.com/ionide/ionide-fsgrammar/issues/155\", \"match\": \"//\", \"name\": \"fast-capture.comment.line.double-slash.fsharp\" }, { \"comments\": \"Capture (*) when inside of (* *) so that it doesn't prematurely end the comment block.\", \"match\": \"\\\\(\\\\*\\\\)\", \"name\": \"fast-capture.comment.line.mul-operator.fsharp\" }, { \"include\": \"#comments\" }] }, { \"captures\": { \"1\": { \"name\": \"comment.block.fsharp\" } }, \"match\": \"((?<!\\\\()(\\\\*)+\\\\))\", \"name\": \"comment.block.markdown.fsharp.end\" }, { \"begin\": \"(?<![!%&+-.<=>?@^|/])///(?!/)\", \"name\": \"comment.line.markdown.fsharp\", \"patterns\": [{ \"include\": \"text.html.markdown\" }], \"while\": \"(?<![!%&+-.<=>?@^|/])///(?!/)\" }, { \"match\": \"(?<![!%&+-.<=>?@^|/])//(.*$)\", \"name\": \"comment.line.double-slash.fsharp\" }] }, \"common_binding_definition\": { \"patterns\": [{ \"include\": \"#comments\" }, { \"include\": \"#attributes\" }, { \"begin\": \"(:)\\\\s*(\\\\()\\\\s*(static member|member)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" }, \"2\": { \"name\": \"keyword.symbol.fsharp\" }, \"3\": { \"name\": \"keyword.fsharp\" } }, \"comments\": \"SRTP syntax support\", \"end\": \"(\\\\))\\\\s*((?=,)|(?=\\\\=))\", \"endCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"entity.name.type.fsharp\" } }, \"match\": \"(\\\\^[[:alpha:]0-9'._]+)\" }, { \"include\": \"#variables\" }, { \"include\": \"#keywords\" }] }, { \"begin\": \"(:)\\\\s*(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" }, \"2\": { \"name\": \"keyword.symbol.fsharp\" } }, \"end\": \"(\\\\)\\\\s*(([?[:alpha:]0-9'`^._ ]*)))\", \"endCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" }, \"2\": { \"name\": \"entity.name.type.fsharp\" } }, \"patterns\": [{ \"include\": \"#tuple_signature\" }] }, { \"begin\": \"(:)\\\\s*(\\\\^[[:alpha:]0-9'._]+)\\\\s*(when)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" }, \"2\": { \"name\": \"entity.name.type.fsharp\" }, \"3\": { \"name\": \"keyword.fsharp\" } }, \"end\": \"(?=:)\", \"endCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"patterns\": [{ \"match\": \"\\\\b(and|when|or)\\\\b\", \"name\": \"keyword.fsharp\" }, { \"captures\": { \"1\": { \"name\": \"entity.name.type.fsharp\" } }, \"comment\": \"Because we first capture the keywords, we can capture what looks like a word and assume it's an entity definition\", \"match\": \"([[:alpha:]0-9'^._]+)\" }, { \"match\": \"(\\\\(|\\\\))\", \"name\": \"keyword.symbol.fsharp\" }] }, { \"captures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" }, \"2\": { \"name\": \"entity.name.type.fsharp\" } }, \"match\": \"(:)\\\\s*([?[:alpha:]0-9'`^._ ]+)\" }, { \"captures\": { \"1\": { \"name\": \"keyword.symbol.arrow.fsharp\" }, \"2\": { \"name\": \"keyword.symbol.fsharp\" }, \"3\": { \"name\": \"entity.name.type.fsharp\" } }, \"match\": \"(->)\\\\s*(\\\\()?\\\\s*([?[:alpha:]0-9'`^._ ]+)*\" }, { \"begin\": \"(\\\\*)\\\\s*(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" }, \"2\": { \"name\": \"keyword.symbol.fsharp\" } }, \"end\": \"(\\\\)\\\\s*(([?[:alpha:]0-9'`^._ ]+))+)\", \"endCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" }, \"2\": { \"name\": \"entity.name.type.fsharp\" } }, \"patterns\": [{ \"include\": \"#tuple_signature\" }] }, { \"begin\": \"(\\\\*)(\\\\s*([?[:alpha:]0-9'`^._ ]+))*\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" }, \"2\": { \"name\": \"entity.name.type.fsharp\" } }, \"end\": \"(?==)|(?=\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"patterns\": [{ \"include\": \"#tuple_signature\" }] }, { \"begin\": \"(<+(?![[:space:]]*\\\\)))\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"beginComment\": \"The group (?![[:space:]]*\\\\) is for protection against overload operator. static member (<)\", \"end\": \"((?<!:)>|\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"endComment\": \"The group (?<!:) prevent us from stopping on :> when using SRTP synthax\", \"patterns\": [{ \"include\": \"#generic_declaration\" }] }, { \"include\": \"#anonymous_record_declaration\" }, { \"begin\": \"({)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"end\": \"(})\", \"endCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"patterns\": [{ \"include\": \"#record_signature\" }] }, { \"include\": \"#definition\" }, { \"include\": \"#variables\" }, { \"include\": \"#keywords\" }] }, \"common_declaration\": { \"patterns\": [{ \"begin\": \"\\\\s*(->)\\\\s*([[:alpha:]0-9'`^._ ]+)(<)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.symbol.arrow.fsharp\" }, \"2\": { \"name\": \"entity.name.type.fsharp\" }, \"3\": { \"name\": \"keyword.symbol.fsharp\" } }, \"end\": \"(>)\", \"endCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"entity.name.type.fsharp\" } }, \"match\": \"([[:alpha:]0-9'`^._ ]+)\" }, { \"include\": \"#keywords\" }] }, { \"captures\": { \"1\": { \"name\": \"keyword.symbol.arrow.fsharp\" }, \"2\": { \"name\": \"entity.name.type.fsharp\" } }, \"match\": \"\\\\s*(->)\\\\s*(?!with|get|set\\\\b)\\\\b([\\\\w0-9'`^._]+)\" }, { \"include\": \"#anonymous_record_declaration\" }, { \"begin\": \"(\\\\?{0,1})([[:alpha:]0-9'`^._ ]+)\\\\s*(:)(\\\\s*([?[:alpha:]0-9'`^._ ]+)(<))\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" }, \"2\": { \"name\": \"variable.parameter.fsharp\" }, \"3\": { \"name\": \"keyword.symbol.fsharp\" }, \"4\": { \"name\": \"keyword.symbol.fsharp\" }, \"5\": { \"name\": \"entity.name.type.fsharp\" } }, \"end\": \"(>)\", \"endCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"entity.name.type.fsharp\" } }, \"match\": \"([[:alpha:]0-9'`^._ ]+)\" }, { \"include\": \"#keywords\" }] }] }, \"compiler_directives\": { \"patterns\": [{ \"captures\": {}, \"match\": \"\\\\s?(#if|#elif|#elseif|#else|#endif|#light|#nowarn)\", \"name\": \"keyword.control.directive.fsharp\" }] }, \"constants\": { \"patterns\": [{ \"match\": \"\\\\(\\\\)\", \"name\": \"keyword.symbol.fsharp\" }, { \"match\": \"\\\\b-?[0-9][0-9_]*((\\\\.(?!\\\\.)([0-9][0-9_]*([eE][+-]??[0-9][0-9_]*)?)?)|([eE][+-]??[0-9][0-9_]*))\", \"name\": \"constant.numeric.float.fsharp\" }, { \"match\": \"\\\\b(-?((0(x|X)[0-9a-fA-F][0-9a-fA-F_]*)|(0(o|O)[0-7][0-7_]*)|(0(b|B)[01][01_]*)|([0-9][0-9_]*)))\", \"name\": \"constant.numeric.integer.nativeint.fsharp\" }, { \"match\": \"\\\\b(true|false)\\\\b\", \"name\": \"constant.language.boolean.fsharp\" }, { \"match\": \"\\\\b(null|void)\\\\b\", \"name\": \"constant.other.fsharp\" }] }, \"definition\": { \"patterns\": [{ \"begin\": \"\\\\b(let mutable|static let mutable|static let|let inline|let|and|member val|member inline|static member inline|static member|default|member|override|let!)(\\\\s+rec|mutable)?(\\\\s+\\\\[\\\\<.*\\\\>\\\\])?\\\\s*(private|internal|public)?\\\\s+(\\\\[[^-=]*\\\\]|[_[:alpha:]]([_[:alpha:]0-9\\\\._]+)*|``[_[:alpha:]]([_[:alpha:]0-9\\\\._`\\\\s]+|(?<=,)\\\\s)*)?\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.fsharp\" }, \"2\": { \"name\": \"keyword.fsharp\" }, \"3\": { \"name\": \"support.function.attribute.fsharp\" }, \"4\": { \"name\": \"storage.modifier.fsharp\" }, \"5\": { \"name\": \"variable.fsharp\" } }, \"end\": \"\\\\s*((with\\\\b)|(=|\\\\n+=|(?<=\\\\=)))\", \"endCaptures\": { \"2\": { \"name\": \"keyword.fsharp\" }, \"3\": { \"name\": \"keyword.symbol.fsharp\" } }, \"name\": \"binding.fsharp\", \"patterns\": [{ \"include\": \"#common_binding_definition\" }] }, { \"begin\": \"\\\\b(use|use!|and|and!)\\\\s+(\\\\[[^-=]*\\\\]|[_[:alpha:]]([_[:alpha:]0-9\\\\._]+)*|``[_[:alpha:]]([_[:alpha:]0-9\\\\._`\\\\s]+|(?<=,)\\\\s)*)?\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.fsharp\" } }, \"end\": \"\\\\s*(=)\", \"endCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"name\": \"binding.fsharp\", \"patterns\": [{ \"include\": \"#common_binding_definition\" }] }, { \"begin\": \"(?<=with|and)\\\\s*\\\\b((get|set)\\\\s*(?=\\\\())(\\\\[[^-=]*\\\\]|[_[:alpha:]]([_[:alpha:]0-9\\\\._]+)*|``[_[:alpha:]]([_[:alpha:]0-9\\\\._`\\\\s]+|(?<=,)\\\\s)*)?\", \"beginCaptures\": { \"4\": { \"name\": \"variable.fsharp\" } }, \"end\": \"\\\\s*(=|\\\\n+=|(?<=\\\\=))\", \"endCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"name\": \"binding.fsharp\", \"patterns\": [{ \"include\": \"#common_binding_definition\" }] }, { \"begin\": \"\\\\b(static val mutable|val mutable|val inline|val)(\\\\s+rec|mutable)?(\\\\s+\\\\[\\\\<.*\\\\>\\\\])?\\\\s*(private|internal|public)?\\\\s+(\\\\[[^-=]*\\\\]|[_[:alpha:]]([_[:alpha:]0-9,\\\\._]+)*|``[_[:alpha:]]([_[:alpha:]0-9,\\\\._`\\\\s]+|(?<=,)\\\\s)*)?\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.fsharp\" }, \"2\": { \"name\": \"keyword.fsharp\" }, \"3\": { \"name\": \"support.function.attribute.fsharp\" }, \"4\": { \"name\": \"storage.modifier.fsharp\" }, \"5\": { \"name\": \"variable.fsharp\" } }, \"end\": \"\\\\n$\", \"name\": \"binding.fsharp\", \"patterns\": [{ \"include\": \"#common_binding_definition\" }] }, { \"begin\": \"\\\\b(new)\\\\b\\\\s+(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.fsharp\" }, \"2\": { \"name\": \"keyword.symbol.fsharp\" } }, \"end\": \"(\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"name\": \"binding.fsharp\", \"patterns\": [{ \"include\": \"#common_binding_definition\" }] }] }, \"double_tick\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"string.quoted.single.fsharp\" }, \"2\": { \"name\": \"variable.other.binding.fsharp\" }, \"3\": { \"name\": \"string.quoted.single.fsharp\" } }, \"match\": \"(``)([^`]*)(``)\", \"name\": \"variable.other.binding.fsharp\" }] }, \"du_declaration\": { \"patterns\": [{ \"begin\": \"\\\\b(of)\\\\b\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.fsharp\" } }, \"end\": \"$|(\\\\|)\", \"endCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"name\": \"du_declaration.fsharp\", \"patterns\": [{ \"include\": \"#comments\" }, { \"captures\": { \"1\": { \"name\": \"variable.parameter.fsharp\" }, \"2\": { \"name\": \"keyword.symbol.fsharp\" }, \"3\": { \"name\": \"entity.name.type.fsharp\" } }, \"match\": \"([[:alpha:]0-9'`<>^._]+|``[[:alpha:]0-9' <>^._]+``)\\\\s*(:)\\\\s*([[:alpha:]0-9'`<>^._]+|``[[:alpha:]0-9' <>^._]+``)\" }, { \"captures\": { \"1\": { \"name\": \"entity.name.type.fsharp\" } }, \"match\": \"(``([[:alpha:]0-9'^._ ]+)``|[[:alpha:]0-9'`^._]+)\" }, { \"include\": \"#anonymous_record_declaration\" }, { \"include\": \"#keywords\" }] }] }, \"generic_declaration\": { \"patterns\": [{ \"begin\": \"(:)\\\\s*(\\\\()\\\\s*(static member|member)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" }, \"2\": { \"name\": \"keyword.symbol.fsharp\" }, \"3\": { \"name\": \"keyword.fsharp\" } }, \"comments\": \"SRTP syntax support\", \"end\": \"(\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"patterns\": [{ \"begin\": \"(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"end\": \"(\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"patterns\": [{ \"include\": \"#member_declaration\" }] }, { \"captures\": { \"1\": { \"name\": \"entity.name.type.fsharp\" } }, \"match\": \"(('|\\\\^)[[:alpha:]0-9'._]+)\" }, { \"include\": \"#variables\" }, { \"include\": \"#keywords\" }] }, { \"match\": \"\\\\b(private|to|public|internal|function|yield!|yield|class|exception|match|delegate|of|new|in|as|if|then|else|elif|for|begin|end|inherit|do|let\\\\!|return\\\\!|return|interface|with|abstract|enum|member|try|finally|and|when|or|use|use\\\\!|struct|while|mutable|assert|base|done|downcast|downto|extern|fixed|global|lazy|upcast|not)(?!')\\\\b\", \"name\": \"keyword.fsharp\" }, { \"match\": \":\", \"name\": \"keyword.symbol.fsharp\" }, { \"include\": \"#constants\" }, { \"captures\": { \"1\": { \"name\": \"entity.name.type.fsharp\" } }, \"match\": \"(('|\\\\^)[[:alpha:]0-9'._]+)\" }, { \"begin\": \"(<)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"end\": \"(>)\", \"endCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"entity.name.type.fsharp\" } }, \"match\": \"(('|\\\\^)[[:alpha:]0-9'._]+)\" }, { \"include\": \"#tuple_signature\" }, { \"include\": \"#generic_declaration\" }] }, { \"begin\": \"(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"end\": \"(\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"entity.name.type.fsharp\" } }, \"match\": \"(([?[:alpha:]0-9'`^._ ]+))+\" }, { \"include\": \"#tuple_signature\" }] }, { \"captures\": { \"1\": { \"name\": \"entity.name.type.fsharp\" } }, \"comments\": \"Here we need the \\\\w modifier in order to check that the words are allowed\", \"match\": \"(?!when|and|or\\\\b)\\\\b([\\\\w0-9'`^._]+)\" }, { \"captures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"comments\": \"Prevent captures of `|>` as a keyword when defining custom operator like `<|>`\", \"match\": \"(\\\\|)\" }, { \"include\": \"#keywords\" }] }, \"keywords\": { \"patterns\": [{ \"match\": \"\\\\b(private|public|internal)\\\\b\", \"name\": \"storage.modifier\" }, { \"match\": \"\\\\b(private|to|public|internal|function|class|exception|delegate|of|new|as|begin|end|inherit|let!|interface|abstract|enum|member|and|when|or|use|use\\\\!|struct|mutable|assert|base|done|downcast|downto|extern|fixed|global|lazy|upcast|not)(?!')\\\\b\", \"name\": \"keyword.fsharp\" }, { \"match\": \"\\\\b(match|yield|yield!|with|if|then|else|elif|for|in|return!|return|try|finally|while|do)(?!')\\\\b\", \"name\": \"keyword.control\" }, { \"match\": \"(\\\\->|\\\\<\\\\-)\", \"name\": \"keyword.symbol.arrow.fsharp\" }, { \"match\": \"(&&&|\\\\|\\\\|\\\\||\\\\^\\\\^\\\\^|~~~|~\\\\+|~\\\\-|<<<|>>>|\\\\|>|:>|:\\\\?>|:|\\\\[|\\\\]|\\\\;|<>|=|@|\\\\|\\\\||&&|&|%|{|}|\\\\||_|\\\\.\\\\.|\\\\,|\\\\+|\\\\-|\\\\*|\\\\/|\\\\^|\\\\!|\\\\>|\\\\>\\\\=|\\\\>\\\\>|\\\\<|\\\\<\\\\=|\\\\(|\\\\)|\\\\<\\\\<)\", \"name\": \"keyword.symbol.fsharp\" }] }, \"member_declaration\": { \"patterns\": [{ \"include\": \"#comments\" }, { \"include\": \"#common_declaration\" }, { \"begin\": \"(:)\\\\s*(\\\\()\\\\s*(static member|member)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" }, \"2\": { \"name\": \"keyword.symbol.fsharp\" }, \"3\": { \"name\": \"keyword.fsharp\" } }, \"comments\": \"SRTP syntax support\", \"end\": \"(\\\\))\\\\s*((?=,)|(?=\\\\=))\", \"endCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"patterns\": [{ \"begin\": \"(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"end\": \"(\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"patterns\": [{ \"include\": \"#member_declaration\" }] }, { \"captures\": { \"1\": { \"name\": \"entity.name.type.fsharp\" } }, \"match\": \"(\\\\^[[:alpha:]0-9'._]+)\" }, { \"include\": \"#variables\" }, { \"include\": \"#keywords\" }] }, { \"captures\": { \"1\": { \"name\": \"entity.name.type.fsharp\" } }, \"match\": \"(\\\\^[[:alpha:]0-9'._]+)\" }, { \"match\": \"\\\\b(and|when|or)\\\\b\", \"name\": \"keyword.fsharp\" }, { \"match\": \"(\\\\(|\\\\))\", \"name\": \"keyword.symbol.fsharp\" }, { \"captures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" }, \"2\": { \"name\": \"variable.parameter.fsharp\" }, \"3\": { \"name\": \"keyword.symbol.fsharp\" }, \"4\": { \"name\": \"entity.name.type.fsharp\" } }, \"match\": \"(\\\\?{0,1})([[:alpha:]0-9'`^._]+|``[[:alpha:]0-9'`^:,._ ]+``)\\\\s*(:{0,1})(\\\\s*([?[:alpha:]0-9'`<>._ ]+)){0,1}\" }, { \"include\": \"#keywords\" }] }, \"modules\": { \"patterns\": [{ \"begin\": \"\\\\b(namespace global)|\\\\b(namespace|module)\\\\s*(public|internal|private|rec)?\\\\s+([[:alpha:]|``][[:alpha:]0-9'_. ]*)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.fsharp\" }, \"2\": { \"name\": \"keyword.fsharp\" }, \"3\": { \"name\": \"storage.modifier.fsharp\" }, \"4\": { \"name\": \"entity.name.section.fsharp\" } }, \"end\": \"(\\\\s?=|\\\\s|$)\", \"endCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"name\": \"entity.name.section.fsharp\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"punctuation.separator.namespace-reference.fsharp\" }, \"2\": { \"name\": \"entity.name.section.fsharp\" } }, \"match\": \"(\\\\.)([A-Z][[:alpha:]0-9'_]*)\", \"name\": \"entity.name.section.fsharp\" }] }, { \"begin\": \"\\\\b(open type|open)\\\\s+([[:alpha:]|``][[:alpha:]0-9'_]*)(?=(\\\\.[A-Z][[:alpha:]0-9_]*)*)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.fsharp\" }, \"2\": { \"name\": \"entity.name.section.fsharp\" } }, \"end\": \"(\\\\s|$)\", \"name\": \"namespace.open.fsharp\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"punctuation.separator.namespace-reference.fsharp\" }, \"2\": { \"name\": \"entity.name.section.fsharp\" } }, \"match\": \"(\\\\.)([[:alpha:]][[:alpha:]0-9'_]*)\", \"name\": \"entity.name.section.fsharp\" }, { \"include\": \"#comments\" }] }, { \"begin\": \"^\\\\s*(module)\\\\s+([A-Z][[:alpha:]0-9'_]*)\\\\s*(=)\\\\s*([A-Z][[:alpha:]0-9'_]*)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.fsharp\" }, \"2\": { \"name\": \"entity.name.type.namespace.fsharp\" }, \"3\": { \"name\": \"keyword.symbol.fsharp\" }, \"4\": { \"name\": \"entity.name.section.fsharp\" } }, \"end\": \"(\\\\s|$)\", \"name\": \"namespace.alias.fsharp\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"punctuation.separator.namespace-reference.fsharp\" }, \"2\": { \"name\": \"entity.name.section.fsharp\" } }, \"match\": \"(\\\\.)([A-Z][[:alpha:]0-9'_]*)\", \"name\": \"entity.name.section.fsharp\" }] }] }, \"record_declaration\": { \"patterns\": [{ \"begin\": \"(\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"end\": \"(?<=\\\\})\", \"patterns\": [{ \"include\": \"#comments\" }, { \"begin\": \"(((mutable)\\\\s[[:alpha:]]+)|[[:alpha:]0-9'`<>^._]*)\\\\s*((?<!:):(?!:))\\\\s*\", \"beginCaptures\": { \"3\": { \"name\": \"keyword.fsharp\" }, \"4\": { \"name\": \"keyword.symbol.fsharp\" } }, \"end\": \"$|(;|\\\\})\", \"endCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"patterns\": [{ \"include\": \"#comments\" }, { \"captures\": { \"1\": { \"name\": \"entity.name.type.fsharp\" } }, \"match\": \"([[:alpha:]0-9'`^_ ]+)\" }, { \"include\": \"#keywords\" }] }, { \"include\": \"#compiler_directives\" }, { \"include\": \"#constants\" }, { \"include\": \"#strings\" }, { \"include\": \"#chars\" }, { \"include\": \"#double_tick\" }, { \"include\": \"#definition\" }, { \"include\": \"#attributes\" }, { \"include\": \"#anonymous_functions\" }, { \"include\": \"#keywords\" }, { \"include\": \"#cexprs\" }, { \"include\": \"#text\" }] }] }, \"record_signature\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" }, \"2\": { \"name\": \"variable.parameter.fsharp\" } }, \"match\": \"[[:alpha:]0-9'`^_ ]+(=)([[:alpha:]0-9'`^_ ]+)\" }, { \"begin\": \"({)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"end\": \"(})\", \"endCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" }, \"2\": { \"name\": \"variable.parameter.fsharp\" } }, \"match\": \"[[:alpha:]0-9'`^_ ]+(=)([[:alpha:]0-9'`^_ ]+)\" }, { \"include\": \"#record_signature\" }] }, { \"include\": \"#keywords\" }] }, \"records\": { \"patterns\": [{ \"begin\": \"\\\\b(type)[\\\\s]+(private|internal|public)?\\\\s*\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.fsharp\" }, \"2\": { \"name\": \"storage.modifier.fsharp\" } }, \"end\": \"\\\\s*((with)|((as)\\\\s+([[:alpha:]0-9']+))|(=)|[\\\\n=]|(\\\\(\\\\)))\", \"endCaptures\": { \"2\": { \"name\": \"keyword.fsharp\" }, \"3\": { \"name\": \"keyword.fsharp\" }, \"4\": { \"name\": \"keyword.fsharp\" }, \"5\": { \"name\": \"variable.parameter.fsharp\" }, \"6\": { \"name\": \"keyword.symbol.fsharp\" }, \"7\": { \"name\": \"keyword.symbol.fsharp\" } }, \"name\": \"record.fsharp\", \"patterns\": [{ \"include\": \"#comments\" }, { \"include\": \"#attributes\" }, { \"captures\": { \"1\": { \"name\": \"entity.name.type.fsharp\" } }, \"match\": \"([[:alpha:]0-9'^._]+|``[[:alpha:]0-9'`^:,._ ]+``)\" }, { \"begin\": \"(<)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"end\": \"((?<!:)>)\", \"endCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"entity.name.type.fsharp\" } }, \"match\": \"(('|\\\\^)``[[:alpha:]0-9`^:,._ ]+``|('|\\\\^)[[:alpha:]0-9`^:._]+)\" }, { \"match\": \"\\\\b(interface|with|abstract|and|when|or|not|struct|equality|comparison|unmanaged|delegate|enum)\\\\b\", \"name\": \"keyword.fsharp\" }, { \"begin\": \"(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"end\": \"(\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"keyword.fsharp\" } }, \"match\": \"(static member|member|new)\" }, { \"include\": \"#common_binding_definition\" }] }, { \"captures\": { \"1\": { \"name\": \"entity.name.type.fsharp\" } }, \"comments\": \"Here we need the \\\\w modifier in order to check that the words isn't blacklisted\", \"match\": \"([\\\\w0-9'`^._]+)\" }, { \"include\": \"#keywords\" }] }, { \"captures\": { \"1\": { \"name\": \"storage.modifier.fsharp\" } }, \"match\": \"\\\\s*(private|internal|public)\" }, { \"begin\": \"(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"end\": \"\\\\s*(?=(=)|[\\\\n=]|(\\\\(\\\\))|(as))\", \"endCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"patterns\": [{ \"include\": \"#member_declaration\" }] }, { \"include\": \"#keywords\" }] }] }, \"string_formatter\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"keyword.format.specifier.fsharp\" } }, \"match\": \"(%0?-?(\\\\d+)?((a|t)|(\\\\.\\\\d+)?(f|F|e|E|g|G|M)|(b|c|s|d|i|x|X|o|u)|(s|b|O)|(\\\\+?A)))\", \"name\": \"entity.name.type.format.specifier.fsharp\" }] }, \"strings\": { \"patterns\": [{ \"begin\": '(?=[^\\\\\\\\])(@\")', \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.begin.fsharp\" } }, \"end\": '(\")(?!\")', \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.fsharp\" } }, \"name\": \"string.quoted.literal.fsharp\", \"patterns\": [{ \"match\": '\"(\")', \"name\": \"constant.character.string.escape.fsharp\" }] }, { \"begin\": '(?=[^\\\\\\\\])(\"\"\")', \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.begin.fsharp\" } }, \"end\": '(\"\"\")', \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.fsharp\" } }, \"name\": \"string.quoted.triple.fsharp\", \"patterns\": [{ \"include\": \"#string_formatter\" }] }, { \"begin\": '(?=[^\\\\\\\\])(\")', \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.begin.fsharp\" } }, \"end\": '(\")', \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.fsharp\" } }, \"name\": \"string.quoted.double.fsharp\", \"patterns\": [{ \"match\": \"\\\\\\\\$[ \\\\t]*\", \"name\": \"punctuation.separator.string.ignore-eol.fsharp\" }, { \"match\": `\\\\\\\\(['\"\\\\\\\\abfnrtv]|([01][0-9][0-9]|2[0-4][0-9]|25[0-5])|(x[0-9a-fA-F]{2})|(u[0-9a-fA-F]{4})|(U00(0[0-9a-fA-F]|10)[0-9a-fA-F]{4}))`, \"name\": \"constant.character.string.escape.fsharp\" }, { \"match\": \"\\\\\\\\(([0-9]{1,3})|(x[^\\\\s]{0,2})|(u[^\\\\s]{0,4})|(U[^\\\\s]{0,8})|[^\\\\s])\", \"name\": \"invalid.illegal.character.string.fsharp\" }, { \"include\": \"#string_formatter\" }] }] }, \"strp_inlined\": { \"patterns\": [{ \"begin\": \"(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"end\": \"(\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"patterns\": [{ \"include\": \"#strp_inlined_body\" }] }] }, \"strp_inlined_body\": { \"patterns\": [{ \"include\": \"#comments\" }, { \"include\": \"#anonymous_functions\" }, { \"captures\": { \"1\": { \"name\": \"entity.name.type.fsharp\" } }, \"match\": \"(\\\\^[[:alpha:]0-9'._]+)\" }, { \"match\": \"\\\\b(and|when|or)\\\\b\", \"name\": \"keyword.fsharp\" }, { \"begin\": \"(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"end\": \"(\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"patterns\": [{ \"include\": \"#strp_inlined_body\" }] }, { \"captures\": { \"1\": { \"name\": \"keyword.fsharp\" }, \"2\": { \"name\": \"variable.fsharp\" }, \"3\": { \"name\": \"keyword.symbol.fsharp\" } }, \"match\": \"(static member|member)\\\\s*([[:alpha:]0-9'`<>^._]+|``[[:alpha:]0-9' <>^._]+``)\\\\s*(:)\" }, { \"include\": \"#compiler_directives\" }, { \"include\": \"#constants\" }, { \"include\": \"#strings\" }, { \"include\": \"#chars\" }, { \"include\": \"#double_tick\" }, { \"include\": \"#keywords\" }, { \"include\": \"#text\" }, { \"include\": \"#definition\" }, { \"include\": \"#attributes\" }, { \"include\": \"#keywords\" }, { \"include\": \"#cexprs\" }, { \"include\": \"#text\" }] }, \"text\": { \"patterns\": [{ \"match\": \"\\\\\\\\\", \"name\": \"text.fsharp\" }] }, \"tuple_signature\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"entity.name.type.fsharp\" } }, \"match\": \"(([?[:alpha:]0-9'`^._ ]+))+\" }, { \"begin\": \"(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"end\": \"(\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"entity.name.type.fsharp\" } }, \"match\": \"(([?[:alpha:]0-9'`^._ ]+))+\" }, { \"include\": \"#tuple_signature\" }] }, { \"include\": \"#keywords\" }] }, \"variables\": { \"patterns\": [{ \"match\": \"\\\\(\\\\)\", \"name\": \"keyword.symbol.fsharp\" }, { \"captures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" }, \"2\": { \"name\": \"variable.parameter.fsharp\" } }, \"match\": \"(\\\\?{0,1})(``[[:alpha:]0-9'`^:,._ ]+``|(?!private|struct\\\\b)\\\\b[\\\\w[:alpha:]0-9'`<>^._ ]+)\" }] } }, \"scopeName\": \"source.fsharp\", \"embeddedLangs\": [\"markdown\"], \"aliases\": [\"f#\", \"fs\"] });\nvar fsharp = [\n  ...markdown,\n  lang\n];\n\nexport { fsharp as default };\n"],"x_google_ignoreList":[0]}