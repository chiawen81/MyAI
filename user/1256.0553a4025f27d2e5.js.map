{"version":3,"file":"1256.0553a4025f27d2e5.js","mappings":"wIAEA,MAAMA,EAAOC,OAAOC,OAAO,CAAEC,YAAe,qBAAsBC,KAAQ,aAAcC,SAAY,CAAC,CAAEC,MAAS,wBAAyBC,QAAW,wEAAyEC,YAAe,cAAeC,IAAO,MAAOL,KAAQ,gCAAiCC,SAAY,CAAC,CAAEK,QAAW,iBAAoB,CAAEJ,MAAS,SAAUC,QAAW,wBAAyBE,IAAO,SAAUL,KAAQ,gCAAiCC,SAAY,CAAC,CAAEM,SAAY,CAAE,EAAK,CAAEP,KAAQ,+CAAiD,EAAK,CAAEA,KAAQ,6CAAgDG,QAAW,iDAAkDK,MAAS,2BAA4BR,KAAQ,mCAAsC,CAAEE,MAAS,SAAUC,QAAW,6DAA8DC,YAAe,sCAAuCC,IAAO,SAAUL,KAAQ,iCAAkCC,SAAY,CAAC,CAAEM,SAAY,CAAE,EAAK,CAAEP,KAAQ,8BAAiCQ,MAAS,iCAAmC,CAAED,SAAY,CAAE,EAAK,CAAEP,KAAQ,+BAAkCQ,MAAS,uBAAyB,CAAED,SAAY,CAAE,EAAK,CAAEP,KAAQ,8BAAiCQ,MAAS,qBAAuB,CAAED,SAAY,CAAE,EAAK,CAAEP,KAAQ,sCAAwC,EAAK,CAAEA,KAAQ,wCAA2CG,QAAW,+CAAgDK,MAAS,2BAA8BC,UAAa,kBAAmBC,cAAiB,CAAC,UAC/hD,IAAIC,EAAY,IACXC,UACHhB","names":["lang","Object","freeze","displayName","name","patterns","begin","comment","contentName","end","include","captures","match","scopeName","embeddedLangs","gitCommit","diff"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./node_modules/shiki/dist/langs/git-commit.mjs"],"sourcesContent":["import diff from './diff.mjs';\n\nconst lang = Object.freeze({ \"displayName\": \"Git Commit Message\", \"name\": \"git-commit\", \"patterns\": [{ \"begin\": \"(?=^diff\\\\ \\\\-\\\\-git)\", \"comment\": \"diff presented at the end of the commit message when using commit -v.\", \"contentName\": \"source.diff\", \"end\": \"\\\\z\", \"name\": \"meta.embedded.diff.git-commit\", \"patterns\": [{ \"include\": \"source.diff\" }] }, { \"begin\": \"^(?!#)\", \"comment\": \"User supplied message\", \"end\": \"^(?=#)\", \"name\": \"meta.scope.message.git-commit\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"invalid.deprecated.line-too-long.git-commit\" }, \"2\": { \"name\": \"invalid.illegal.line-too-long.git-commit\" } }, \"comment\": \"Mark > 50 lines as deprecated, > 72 as illegal\", \"match\": \"\\\\G.{0,50}(.{0,22}(.*))$\", \"name\": \"meta.scope.subject.git-commit\" }] }, { \"begin\": \"^(?=#)\", \"comment\": \"Git supplied metadata in a number of lines starting with #\", \"contentName\": \"comment.line.number-sign.git-commit\", \"end\": \"^(?!#)\", \"name\": \"meta.scope.metadata.git-commit\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"markup.changed.git-commit\" } }, \"match\": \"^#\\\\t((modified|renamed):.*)$\" }, { \"captures\": { \"1\": { \"name\": \"markup.inserted.git-commit\" } }, \"match\": \"^#\\\\t(new file:.*)$\" }, { \"captures\": { \"1\": { \"name\": \"markup.deleted.git-commit\" } }, \"match\": \"^#\\\\t(deleted.*)$\" }, { \"captures\": { \"1\": { \"name\": \"keyword.other.file-type.git-commit\" }, \"2\": { \"name\": \"string.unquoted.filename.git-commit\" } }, \"comment\": \"Fallback for non-English git commit template\", \"match\": \"^#\\\\t([^:]+): *(.*)$\" }] }], \"scopeName\": \"text.git-commit\", \"embeddedLangs\": [\"diff\"] });\nvar gitCommit = [\n  ...diff,\n  lang\n];\n\nexport { gitCommit as default };\n"],"x_google_ignoreList":[0]}