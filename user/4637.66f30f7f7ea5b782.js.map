{"version":3,"file":"4637.66f30f7f7ea5b782.js","mappings":"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","names":["powershell","Object","freeze","displayName","name","patterns","begin","beginCaptures","end","endCaptures","include","match","comment","applyEndPatternLast","captures","repository","RequiresDirective","UsingDirective","attribute","commands","commentEmbeddedDocs","commentLine","doubleQuotedString","doubleQuotedStringEscapes","function","hashtable","interpolation","contentName","numericConstant","scriptblock","subexpression","type","unicodeEscape","variable","variableNoProperty","scopeName","aliases"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./node_modules/shiki/dist/langs/powershell.mjs"],"sourcesContent":["const lang = Object.freeze({ \"displayName\": \"PowerShell\", \"name\": \"powershell\", \"patterns\": [{ \"begin\": \"<#\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.block.begin.powershell\" } }, \"end\": \"#>\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.block.end.powershell\" } }, \"name\": \"comment.block.powershell\", \"patterns\": [{ \"include\": \"#commentEmbeddedDocs\" }] }, { \"match\": \"[2-6]>&1|>>|>|<<|<|>|>\\\\||[1-6]>|[1-6]>>\", \"name\": \"keyword.operator.redirection.powershell\" }, { \"include\": \"#commands\" }, { \"include\": \"#commentLine\" }, { \"include\": \"#variable\" }, { \"include\": \"#subexpression\" }, { \"include\": \"#function\" }, { \"include\": \"#attribute\" }, { \"include\": \"#UsingDirective\" }, { \"include\": \"#type\" }, { \"include\": \"#hashtable\" }, { \"include\": \"#doubleQuotedString\" }, { \"include\": \"#scriptblock\" }, { \"comment\": \"Needed to parse stuff correctly in 'argument mode'. (See about_parsing.)\", \"include\": \"#doubleQuotedStringEscapes\" }, { \"applyEndPatternLast\": true, \"begin\": \"['\\\\x{2018}-\\\\x{201B}]\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.powershell\" } }, \"end\": \"['\\\\x{2018}-\\\\x{201B}]\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.powershell\" } }, \"name\": \"string.quoted.single.powershell\", \"patterns\": [{ \"match\": \"['\\\\x{2018}-\\\\x{201B}]{2}\", \"name\": \"constant.character.escape.powershell\" }] }, { \"begin\": '(@[\"\\\\x{201C}-\\\\x{201E}])\\\\s*$', \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.begin.powershell\" } }, \"end\": '^[\"\\\\x{201C}-\\\\x{201E}]@', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.powershell\" } }, \"name\": \"string.quoted.double.heredoc.powershell\", \"patterns\": [{ \"include\": \"#variableNoProperty\" }, { \"include\": \"#doubleQuotedStringEscapes\" }, { \"include\": \"#interpolation\" }] }, { \"begin\": \"(@['\\\\x{2018}-\\\\x{201B}])\\\\s*$\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.begin.powershell\" } }, \"end\": \"^['\\\\x{2018}-\\\\x{201B}]@\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.powershell\" } }, \"name\": \"string.quoted.single.heredoc.powershell\" }, { \"include\": \"#numericConstant\" }, { \"begin\": \"(@)(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.other.array.begin.powershell\" }, \"2\": { \"name\": \"punctuation.section.group.begin.powershell\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.group.end.powershell\" } }, \"name\": \"meta.group.array-expression.powershell\", \"patterns\": [{ \"include\": \"$self\" }] }, { \"begin\": \"((\\\\$))(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.other.substatement.powershell\" }, \"2\": { \"name\": \"punctuation.definition.subexpression.powershell\" }, \"3\": { \"name\": \"punctuation.section.group.begin.powershell\" } }, \"comment\": \"TODO: move to repo; make recursive.\", \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.group.end.powershell\" } }, \"name\": \"meta.group.complex.subexpression.powershell\", \"patterns\": [{ \"include\": \"$self\" }] }, { \"match\": \"(\\\\b(([A-Za-z0-9\\\\-_\\\\.]+)\\\\.(?i:exe|com|cmd|bat))\\\\b)\", \"name\": \"support.function.powershell\" }, { \"match\": \"(?<!\\\\w|-|\\\\.)((?i:begin|break|catch|clean|continue|data|default|define|do|dynamicparam|else|elseif|end|exit|finally|for|from|if|in|inlinescript|parallel|param|process|return|sequence|switch|throw|trap|try|until|var|while)|%|\\\\?)(?!\\\\w)\", \"name\": \"keyword.control.powershell\" }, { \"match\": \"(?<!\\\\w|-|[^\\\\)]\\\\.)((?i:(foreach|where)(?!-object))|%|\\\\?)(?!\\\\w)\", \"name\": \"keyword.control.powershell\" }, { \"begin\": \"(?<!\\\\w)(--%)(?!\\\\w)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.powershell\" } }, \"comment\": \"This should be moved to the repository at some point.\", \"end\": \"$\", \"patterns\": [{ \"match\": \".+\", \"name\": \"string.unquoted.powershell\" }] }, { \"comment\": \"This should only be relevant inside a class but will require a rework of how classes are matched. This is a temp fix.\", \"match\": \"(?<!\\\\w)((?i:hidden|static))(?!\\\\w)\", \"name\": \"storage.modifier.powershell\" }, { \"captures\": { \"1\": { \"name\": \"storage.type.powershell\" }, \"2\": { \"name\": \"entity.name.function\" } }, \"comment\": \"capture should be entity.name.type, but it doesn't provide a good color in the default schema.\", \"match\": \"(?<!\\\\w|-)((?i:class)|%|\\\\?)(?:\\\\s)+((?:\\\\p{L}|\\\\d|_|-|)+)\\\\b\" }, { \"match\": \"(?<!\\\\w)-(?i:is(?:not)?|as)\\\\b\", \"name\": \"keyword.operator.comparison.powershell\" }, { \"match\": \"(?<!\\\\w)-(?i:[ic]?(?:eq|ne|[gl][te]|(?:not)?(?:like|match|contains|in)|replace))(?!\\\\p{L})\", \"name\": \"keyword.operator.comparison.powershell\" }, { \"match\": \"(?<!\\\\w)-(?i:join|split)(?!\\\\p{L})|!\", \"name\": \"keyword.operator.unary.powershell\" }, { \"match\": \"(?<!\\\\w)-(?i:and|or|not|xor)(?!\\\\p{L})|!\", \"name\": \"keyword.operator.logical.powershell\" }, { \"match\": \"(?<!\\\\w)-(?i:band|bor|bnot|bxor|shl|shr)(?!\\\\p{L})\", \"name\": \"keyword.operator.bitwise.powershell\" }, { \"match\": \"(?<!\\\\w)-(?i:f)(?!\\\\p{L})\", \"name\": \"keyword.operator.string-format.powershell\" }, { \"match\": \"[+%*/-]?=|[+/*%-]\", \"name\": \"keyword.operator.assignment.powershell\" }, { \"match\": \"\\\\|{2}|&{2}|;\", \"name\": \"punctuation.terminator.statement.powershell\" }, { \"match\": \"&|(?<!\\\\w)\\\\.(?= )|`|,|\\\\|\", \"name\": \"keyword.operator.other.powershell\" }, { \"comment\": \"This is very imprecise, is there a syntax for 'must come after...' \", \"match\": \"(?<!\\\\s|^)\\\\.\\\\.(?=\\\\-?\\\\d|\\\\(|\\\\$)\", \"name\": \"keyword.operator.range.powershell\" }], \"repository\": { \"RequiresDirective\": { \"begin\": \"(?<=#)(?i:(requires))\\\\s\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.control.requires.powershell\" } }, \"end\": \"$\", \"name\": \"meta.requires.powershell\", \"patterns\": [{ \"match\": \"\\\\-(?i:Modules|PSSnapin|RunAsAdministrator|ShellId|Version|Assembly|PSEdition)\", \"name\": \"keyword.other.powershell\" }, { \"match\": \"(?<!-)\\\\b\\\\p{L}+|\\\\d+(?:\\\\.\\\\d+)*\", \"name\": \"variable.parameter.powershell\" }, { \"include\": \"#hashtable\" }] }, \"UsingDirective\": { \"captures\": { \"1\": { \"name\": \"keyword.control.using.powershell\" }, \"2\": { \"name\": \"keyword.other.powershell\" }, \"3\": { \"name\": \"variable.parameter.powershell\" } }, \"match\": \"(?<!\\\\w)(?i:(using))\\\\s+(?i:(namespace|module))\\\\s+(?i:((?:\\\\w+(?:\\\\.)?)+))\" }, \"attribute\": { \"begin\": \"(\\\\[)\\\\s*\\\\b(?i)(cmdletbinding|alias|outputtype|parameter|validatenotnull|validatenotnullorempty|validatecount|validateset|allownull|allowemptycollection|allowemptystring|validatescript|validaterange|validatepattern|validatelength|supportswildcards)\\\\b\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.section.bracket.begin.powershell\" }, \"2\": { \"name\": \"support.function.attribute.powershell\" } }, \"end\": \"(\\\\])\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.section.bracket.end.powershell\" } }, \"name\": \"meta.attribute.powershell\", \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.group.begin.powershell\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.group.end.powershell\" } }, \"patterns\": [{ \"include\": \"$self\" }, { \"captures\": { \"1\": { \"name\": \"variable.parameter.attribute.powershell\" }, \"2\": { \"name\": \"keyword.operator.assignment.powershell\" } }, \"match\": \"(?i)\\\\b(mandatory|valuefrompipeline|valuefrompipelinebypropertyname|valuefromremainingarguments|position|parametersetname|defaultparametersetname|supportsshouldprocess|supportspaging|positionalbinding|helpuri|confirmimpact|helpmessage)\\\\b(?:\\\\s+)?(=)?\" }] }] }, \"commands\": { \"patterns\": [{ \"comment\": \"Verb-Noun pattern:\", \"match\": \"(?:(\\\\p{L}|\\\\d|_|-|\\\\\\\\|\\\\:)*\\\\\\\\)?\\\\b(?i:Add|Approve|Assert|Backup|Block|Build|Checkpoint|Clear|Close|Compare|Complete|Compress|Confirm|Connect|Convert|ConvertFrom|ConvertTo|Copy|Debug|Deny|Deploy|Disable|Disconnect|Dismount|Edit|Enable|Enter|Exit|Expand|Export|Find|Format|Get|Grant|Group|Hide|Import|Initialize|Install|Invoke|Join|Limit|Lock|Measure|Merge|Mount|Move|New|Open|Optimize|Out|Ping|Pop|Protect|Publish|Push|Read|Receive|Redo|Register|Remove|Rename|Repair|Request|Reset|Resize|Resolve|Restart|Restore|Resume|Revoke|Save|Search|Select|Send|Set|Show|Skip|Split|Start|Step|Stop|Submit|Suspend|Switch|Sync|Test|Trace|Unblock|Undo|Uninstall|Unlock|Unprotect|Unpublish|Unregister|Update|Use|Wait|Watch|Write)\\\\-.+?(?:\\\\.(?i:exe|cmd|bat|ps1))?\\\\b\", \"name\": \"support.function.powershell\" }, { \"comment\": \"Builtin cmdlets with reserved verbs\", \"match\": \"(?<!\\\\w)(?i:foreach-object)(?!\\\\w)\", \"name\": \"support.function.powershell\" }, { \"comment\": \"Builtin cmdlets with reserved verbs\", \"match\": \"(?<!\\\\w)(?i:where-object)(?!\\\\w)\", \"name\": \"support.function.powershell\" }, { \"comment\": \"Builtin cmdlets with reserved verbs\", \"match\": \"(?<!\\\\w)(?i:sort-object)(?!\\\\w)\", \"name\": \"support.function.powershell\" }, { \"comment\": \"Builtin cmdlets with reserved verbs\", \"match\": \"(?<!\\\\w)(?i:tee-object)(?!\\\\w)\", \"name\": \"support.function.powershell\" }] }, \"commentEmbeddedDocs\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"constant.string.documentation.powershell\" }, \"2\": { \"name\": \"keyword.operator.documentation.powershell\" } }, \"comment\": \"these embedded doc keywords do not support arguments, must be the only thing on the line\", \"match\": \"(?:^|\\\\G)(?i:\\\\s*(\\\\.)(COMPONENT|DESCRIPTION|EXAMPLE|FUNCTIONALITY|INPUTS|LINK|NOTES|OUTPUTS|ROLE|SYNOPSIS))\\\\s*$\", \"name\": \"comment.documentation.embedded.powershell\" }, { \"captures\": { \"1\": { \"name\": \"constant.string.documentation.powershell\" }, \"2\": { \"name\": \"keyword.operator.documentation.powershell\" }, \"3\": { \"name\": \"keyword.operator.documentation.powershell\" } }, \"comment\": \"these embedded doc keywords require arguments though the type required may be inconsistent, they may not all be able to use the same argument match\", \"match\": \"(?:^|\\\\G)(?i:\\\\s*(\\\\.)(EXTERNALHELP|FORWARDHELP(?:CATEGORY|TARGETNAME)|PARAMETER|REMOTEHELPRUNSPACE))\\\\s+(.+?)\\\\s*$\", \"name\": \"comment.documentation.embedded.powershell\" }] }, \"commentLine\": { \"begin\": \"(?<![`\\\\\\\\-])(#)#*\", \"captures\": { \"1\": { \"name\": \"punctuation.definition.comment.powershell\" } }, \"end\": \"$\\\\n?\", \"name\": \"comment.line.powershell\", \"patterns\": [{ \"include\": \"#commentEmbeddedDocs\" }, { \"include\": \"#RequiresDirective\" }] }, \"doubleQuotedString\": { \"applyEndPatternLast\": true, \"begin\": '[\"\\\\x{201C}-\\\\x{201E}]', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.powershell\" } }, \"end\": '[\"\\\\x{201C}-\\\\x{201E}]', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.powershell\" } }, \"name\": \"string.quoted.double.powershell\", \"patterns\": [{ \"match\": \"(?i)\\\\b[A-Z0-9._%+-]+@[A-Z0-9.-]+\\\\.[A-Z]{2,64}\\\\b\" }, { \"include\": \"#variableNoProperty\" }, { \"include\": \"#doubleQuotedStringEscapes\" }, { \"match\": '[\"\\\\x{201C}-\\\\x{201E}]{2}', \"name\": \"constant.character.escape.powershell\" }, { \"include\": \"#interpolation\" }, { \"match\": \"`\\\\s*$\", \"name\": \"keyword.other.powershell\" }] }, \"doubleQuotedStringEscapes\": { \"patterns\": [{ \"match\": \"`[`0abefnrtv'\\\"\\\\x{2018}-\\\\x{201E}$]\", \"name\": \"constant.character.escape.powershell\" }, { \"include\": \"#unicodeEscape\" }] }, \"function\": { \"begin\": \"^(?:\\\\s*+)(?i)(function|filter|configuration|workflow)\\\\s+(?:(global|local|script|private):)?((?:\\\\p{L}|\\\\d|_|-|\\\\.)+)\", \"beginCaptures\": { \"0\": { \"name\": \"meta.function.powershell\" }, \"1\": { \"name\": \"storage.type.powershell\" }, \"2\": { \"name\": \"storage.modifier.scope.powershell\" }, \"3\": { \"name\": \"entity.name.function.powershell\" } }, \"end\": \"(?=\\\\{|\\\\()\", \"patterns\": [{ \"include\": \"#commentLine\" }] }, \"hashtable\": { \"begin\": \"(@)(\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.other.hashtable.begin.powershell\" }, \"2\": { \"name\": \"punctuation.section.braces.begin.powershell\" } }, \"end\": \"(\\\\})\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.section.braces.end.powershell\" } }, \"name\": \"meta.hashtable.powershell\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"punctuation.definition.string.begin.powershell\" }, \"2\": { \"name\": \"variable.other.readwrite.powershell\" }, \"3\": { \"name\": \"punctuation.definition.string.end.powershell\" }, \"4\": { \"name\": \"keyword.operator.assignment.powershell\" } }, \"match\": `\\\\b((?:\\\\'|\\\\\")?)(\\\\w+)((?:\\\\'|\\\\\")?)(?:\\\\s+)?(=)(?:\\\\s+)?`, \"name\": \"meta.hashtable.assignment.powershell\" }, { \"include\": \"#scriptblock\" }, { \"include\": \"$self\" }] }, \"interpolation\": { \"begin\": \"(((\\\\$)))((\\\\())\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.other.substatement.powershell\" }, \"2\": { \"name\": \"punctuation.definition.substatement.powershell\" }, \"3\": { \"name\": \"punctuation.section.embedded.substatement.begin.powershell\" }, \"4\": { \"name\": \"punctuation.section.group.begin.powershell\" }, \"5\": { \"name\": \"punctuation.section.embedded.substatement.begin.powershell\" } }, \"contentName\": \"interpolated.complex.source.powershell\", \"end\": \"(\\\\))\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.group.end.powershell\" }, \"1\": { \"name\": \"punctuation.section.embedded.substatement.end.powershell\" } }, \"name\": \"meta.embedded.substatement.powershell\", \"patterns\": [{ \"include\": \"$self\" }] }, \"numericConstant\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"constant.numeric.hex.powershell\" }, \"2\": { \"name\": \"keyword.other.powershell\" } }, \"match\": \"(?<!\\\\w)([-+]?0(?:x|X)[0-9a-fA-F_]+(?:U|u|L|l|UL|Ul|uL|ul|LU|Lu|lU|lu)?)((?i:[kmgtp]b)?)\\\\b\" }, { \"captures\": { \"1\": { \"name\": \"constant.numeric.integer.powershell\" }, \"2\": { \"name\": \"keyword.other.powershell\" } }, \"match\": \"(?<!\\\\w)([-+]?(?:[0-9_]+)?\\\\.[0-9_]+(?:(?:e|E)[0-9]+)?(?:F|f|D|d|M|m)?)((?i:[kmgtp]b)?)\\\\b\" }, { \"captures\": { \"1\": { \"name\": \"constant.numeric.octal.powershell\" }, \"2\": { \"name\": \"keyword.other.powershell\" } }, \"match\": \"(?<!\\\\w)([-+]?0(?:b|B)[01_]+(?:U|u|L|l|UL|Ul|uL|ul|LU|Lu|lU|lu)?)((?i:[kmgtp]b)?)\\\\b\" }, { \"captures\": { \"1\": { \"name\": \"constant.numeric.integer.powershell\" }, \"2\": { \"name\": \"keyword.other.powershell\" } }, \"match\": \"(?<!\\\\w)([-+]?[0-9_]+(?:e|E)(?:[0-9_])?+(?:F|f|D|d|M|m)?)((?i:[kmgtp]b)?)\\\\b\" }, { \"captures\": { \"1\": { \"name\": \"constant.numeric.integer.powershell\" }, \"2\": { \"name\": \"keyword.other.powershell\" } }, \"match\": \"(?<!\\\\w)([-+]?[0-9_]+\\\\.(?:e|E)(?:[0-9_])?+(?:F|f|D|d|M|m)?)((?i:[kmgtp]b)?)\\\\b\" }, { \"captures\": { \"1\": { \"name\": \"constant.numeric.integer.powershell\" }, \"2\": { \"name\": \"keyword.other.powershell\" } }, \"match\": \"(?<!\\\\w)([-+]?[0-9_]+[\\\\.]?(?:F|f|D|d|M|m))((?i:[kmgtp]b)?)\\\\b\" }, { \"captures\": { \"1\": { \"name\": \"constant.numeric.integer.powershell\" }, \"2\": { \"name\": \"keyword.other.powershell\" } }, \"match\": \"(?<!\\\\w)([-+]?[0-9_]+[\\\\.]?(?:U|u|L|l|UL|Ul|uL|ul|LU|Lu|lU|lu)?)((?i:[kmgtp]b)?)\\\\b\" }] }, \"scriptblock\": { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.braces.begin.powershell\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.braces.end.powershell\" } }, \"name\": \"meta.scriptblock.powershell\", \"patterns\": [{ \"include\": \"$self\" }] }, \"subexpression\": { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.group.begin.powershell\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.group.end.powershell\" } }, \"name\": \"meta.group.simple.subexpression.powershell\", \"patterns\": [{ \"include\": \"$self\" }] }, \"type\": { \"begin\": \"\\\\[\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.bracket.begin.powershell\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.bracket.end.powershell\" } }, \"patterns\": [{ \"match\": \"(?!\\\\d+|\\\\.)(?:\\\\p{L}|\\\\p{N}|\\\\.)+\", \"name\": \"storage.type.powershell\" }, { \"include\": \"$self\" }] }, \"unicodeEscape\": { \"comment\": \"`u{xxxx} added in PowerShell 6.0\", \"patterns\": [{ \"match\": \"`u\\\\{(?:(?:10)?([0-9a-fA-F]){1,4}|0?\\\\g<1>{1,5})}\", \"name\": \"constant.character.escape.powershell\" }, { \"match\": \"`u(?:\\\\{[0-9a-fA-F]{,6}.)?\", \"name\": \"invalid.character.escape.powershell\" }] }, \"variable\": { \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"constant.language.powershell\" }, \"1\": { \"name\": \"punctuation.definition.variable.powershell\" } }, \"comment\": \"These are special constants.\", \"match\": \"(\\\\$)(?i:(False|Null|True))\\\\b\" }, { \"captures\": { \"0\": { \"name\": \"support.constant.variable.powershell\" }, \"1\": { \"name\": \"punctuation.definition.variable.powershell\" }, \"3\": { \"name\": \"variable.other.member.powershell\" } }, \"comment\": \"These are the other built-in constants.\", \"match\": \"(\\\\$)(?i:(Error|ExecutionContext|Host|Home|PID|PsHome|PsVersionTable|ShellID))((?:\\\\.(?:\\\\p{L}|\\\\d|_)+)*\\\\b)?\\\\b\" }, { \"captures\": { \"0\": { \"name\": \"support.variable.automatic.powershell\" }, \"1\": { \"name\": \"punctuation.definition.variable.powershell\" }, \"3\": { \"name\": \"variable.other.member.powershell\" } }, \"comment\": \"Automatic variables are not constants, but they are read-only. In monokai (default) color schema support.variable doesn't have color, so we use constant.\", \"match\": \"(\\\\$)((?:[$^?])|(?i:_|Args|ConsoleFileName|Event|EventArgs|EventSubscriber|ForEach|Input|LastExitCode|Matches|MyInvocation|NestedPromptLevel|Profile|PSBoundParameters|PsCmdlet|PsCulture|PSDebugContext|PSItem|PSCommandPath|PSScriptRoot|PsUICulture|Pwd|Sender|SourceArgs|SourceEventArgs|StackTrace|Switch|This)\\\\b)((?:\\\\.(?:\\\\p{L}|\\\\d|_)+)*\\\\b)?\" }, { \"captures\": { \"0\": { \"name\": \"variable.language.powershell\" }, \"1\": { \"name\": \"punctuation.definition.variable.powershell\" }, \"3\": { \"name\": \"variable.other.member.powershell\" } }, \"comment\": \"Style preference variables as language variables so that they stand out.\", \"match\": \"(\\\\$)(?i:(ConfirmPreference|DebugPreference|ErrorActionPreference|ErrorView|FormatEnumerationLimit|InformationPreference|LogCommandHealthEvent|LogCommandLifecycleEvent|LogEngineHealthEvent|LogEngineLifecycleEvent|LogProviderHealthEvent|LogProviderLifecycleEvent|MaximumAliasCount|MaximumDriveCount|MaximumErrorCount|MaximumFunctionCount|MaximumHistoryCount|MaximumVariableCount|OFS|OutputEncoding|PSCulture|PSDebugContext|PSDefaultParameterValues|PSEmailServer|PSItem|PSModuleAutoLoadingPreference|PSModuleAutoloadingPreference|PSSenderInfo|PSSessionApplicationName|PSSessionConfigurationName|PSSessionOption|ProgressPreference|VerbosePreference|WarningPreference|WhatIfPreference))((?:\\\\.(?:\\\\p{L}|\\\\d|_)+)*\\\\b)?\\\\b\" }, { \"captures\": { \"0\": { \"name\": \"variable.other.readwrite.powershell\" }, \"1\": { \"name\": \"punctuation.definition.variable.powershell\" }, \"2\": { \"name\": \"storage.modifier.scope.powershell\" }, \"4\": { \"name\": \"variable.other.member.powershell\" } }, \"match\": \"(?i:(\\\\$|@)(global|local|private|script|using|workflow):((?:\\\\p{L}|\\\\d|_)+))((?:\\\\.(?:\\\\p{L}|\\\\d|_)+)*\\\\b)?\" }, { \"captures\": { \"0\": { \"name\": \"variable.other.readwrite.powershell\" }, \"1\": { \"name\": \"punctuation.definition.variable.powershell\" }, \"2\": { \"name\": \"punctuation.section.braces.begin.powershell\" }, \"3\": { \"name\": \"storage.modifier.scope.powershell\" }, \"5\": { \"name\": \"punctuation.section.braces.end.powershell\" }, \"6\": { \"name\": \"variable.other.member.powershell\" } }, \"match\": \"(?i:(\\\\$)(\\\\{)(global|local|private|script|using|workflow):([^}]*[^}`])(\\\\}))((?:\\\\.(?:\\\\p{L}|\\\\d|_)+)*\\\\b)?\" }, { \"captures\": { \"0\": { \"name\": \"variable.other.readwrite.powershell\" }, \"1\": { \"name\": \"punctuation.definition.variable.powershell\" }, \"2\": { \"name\": \"support.variable.drive.powershell\" }, \"4\": { \"name\": \"variable.other.member.powershell\" } }, \"match\": \"(?i:(\\\\$|@)((?:\\\\p{L}|\\\\d|_)+:)?((?:\\\\p{L}|\\\\d|_)+))((?:\\\\.(?:\\\\p{L}|\\\\d|_)+)*\\\\b)?\" }, { \"captures\": { \"0\": { \"name\": \"variable.other.readwrite.powershell\" }, \"1\": { \"name\": \"punctuation.definition.variable.powershell\" }, \"2\": { \"name\": \"punctuation.section.braces.begin.powershell\" }, \"3\": { \"name\": \"support.variable.drive.powershell\" }, \"5\": { \"name\": \"punctuation.section.braces.end.powershell\" }, \"6\": { \"name\": \"variable.other.member.powershell\" } }, \"match\": \"(?i:(\\\\$)(\\\\{)((?:\\\\p{L}|\\\\d|_)+:)?([^}]*[^}`])(\\\\}))((?:\\\\.(?:\\\\p{L}|\\\\d|_)+)*\\\\b)?\" }] }, \"variableNoProperty\": { \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"constant.language.powershell\" }, \"1\": { \"name\": \"punctuation.definition.variable.powershell\" } }, \"comment\": \"These are special constants.\", \"match\": \"(\\\\$)(?i:(False|Null|True))\\\\b\" }, { \"captures\": { \"0\": { \"name\": \"support.constant.variable.powershell\" }, \"1\": { \"name\": \"punctuation.definition.variable.powershell\" }, \"3\": { \"name\": \"variable.other.member.powershell\" } }, \"comment\": \"These are the other built-in constants.\", \"match\": \"(\\\\$)(?i:(Error|ExecutionContext|Host|Home|PID|PsHome|PsVersionTable|ShellID))\\\\b\" }, { \"captures\": { \"0\": { \"name\": \"support.variable.automatic.powershell\" }, \"1\": { \"name\": \"punctuation.definition.variable.powershell\" }, \"3\": { \"name\": \"variable.other.member.powershell\" } }, \"comment\": \"Automatic variables are not constants, but they are read-only...\", \"match\": \"(\\\\$)((?:[$^?])|(?i:_|Args|ConsoleFileName|Event|EventArgs|EventSubscriber|ForEach|Input|LastExitCode|Matches|MyInvocation|NestedPromptLevel|Profile|PSBoundParameters|PsCmdlet|PsCulture|PSDebugContext|PSItem|PSCommandPath|PSScriptRoot|PsUICulture|Pwd|Sender|SourceArgs|SourceEventArgs|StackTrace|Switch|This)\\\\b)\" }, { \"captures\": { \"0\": { \"name\": \"variable.language.powershell\" }, \"1\": { \"name\": \"punctuation.definition.variable.powershell\" }, \"3\": { \"name\": \"variable.other.member.powershell\" } }, \"comment\": \"Style preference variables as language variables so that they stand out.\", \"match\": \"(\\\\$)(?i:(ConfirmPreference|DebugPreference|ErrorActionPreference|ErrorView|FormatEnumerationLimit|InformationPreference|LogCommandHealthEvent|LogCommandLifecycleEvent|LogEngineHealthEvent|LogEngineLifecycleEvent|LogProviderHealthEvent|LogProviderLifecycleEvent|MaximumAliasCount|MaximumDriveCount|MaximumErrorCount|MaximumFunctionCount|MaximumHistoryCount|MaximumVariableCount|OFS|OutputEncoding|PSCulture|PSDebugContext|PSDefaultParameterValues|PSEmailServer|PSItem|PSModuleAutoLoadingPreference|PSModuleAutoloadingPreference|PSSenderInfo|PSSessionApplicationName|PSSessionConfigurationName|PSSessionOption|ProgressPreference|VerbosePreference|WarningPreference|WhatIfPreference))\\\\b\" }, { \"captures\": { \"0\": { \"name\": \"variable.other.readwrite.powershell\" }, \"1\": { \"name\": \"punctuation.definition.variable.powershell\" }, \"2\": { \"name\": \"storage.modifier.scope.powershell\" }, \"4\": { \"name\": \"variable.other.member.powershell\" } }, \"match\": \"(?i:(\\\\$)(global|local|private|script|using|workflow):((?:\\\\p{L}|\\\\d|_)+))\" }, { \"captures\": { \"0\": { \"name\": \"variable.other.readwrite.powershell\" }, \"1\": { \"name\": \"punctuation.definition.variable.powershell\" }, \"2\": { \"name\": \"storage.modifier.scope.powershell\" }, \"4\": { \"name\": \"keyword.other.powershell\" }, \"5\": { \"name\": \"variable.other.member.powershell\" } }, \"match\": \"(?i:(\\\\$)(\\\\{)(global|local|private|script|using|workflow):([^}]*[^}`])(\\\\}))\" }, { \"captures\": { \"0\": { \"name\": \"variable.other.readwrite.powershell\" }, \"1\": { \"name\": \"punctuation.definition.variable.powershell\" }, \"2\": { \"name\": \"support.variable.drive.powershell\" }, \"4\": { \"name\": \"variable.other.member.powershell\" } }, \"match\": \"(?i:(\\\\$)((?:\\\\p{L}|\\\\d|_)+:)?((?:\\\\p{L}|\\\\d|_)+))\" }, { \"captures\": { \"0\": { \"name\": \"variable.other.readwrite.powershell\" }, \"1\": { \"name\": \"punctuation.definition.variable.powershell\" }, \"2\": { \"name\": \"punctuation.section.braces.begin\" }, \"3\": { \"name\": \"support.variable.drive.powershell\" }, \"5\": { \"name\": \"punctuation.section.braces.end\" } }, \"match\": \"(?i:(\\\\$)(\\\\{)((?:\\\\p{L}|\\\\d|_)+:)?([^}]*[^}`])(\\\\}))\" }] } }, \"scopeName\": \"source.powershell\", \"aliases\": [\"ps\", \"ps1\"] });\nvar powershell = [\n  lang\n];\n\nexport { powershell as default };\n"],"x_google_ignoreList":[0]}