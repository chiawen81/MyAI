{"version":3,"file":"337.342acbf7aa785c20.js","mappings":"+HAIO,MAAMA,EAAqB,CAChC,CACEC,KAAM,GACNC,SAAU,CACR,CACED,KAAM,QACNE,cAAeA,IAAMC,QAAAC,UAAAC,KAAAC,EAAAC,KAAAD,EAAA,OAA2CD,KAAKG,GAAKA,EAAEC,eAC5EC,KAAM,CACJC,kBAAWF,yNCArB,IAOMG,GAAwB,MAA9B,MAAMA,EACFC,YAAYC,EAAWC,GACnBC,KAAKF,UAAYA,EACjBE,KAAKD,YAAcA,EAMnBC,KAAKC,SAAYC,MAKjBF,KAAKG,UAAY,MACrB,CAMAC,YAAYC,EAAKC,GACbN,KAAKF,UAAUM,YAAYJ,KAAKD,YAAYQ,cAAeF,EAAKC,EACpE,CAKAE,kBAAkBC,GACdT,KAAKG,UAAYM,CACrB,CAKAC,iBAAiBD,GACbT,KAAKC,SAAWQ,CACpB,CAKAE,iBAAiBC,GACbZ,KAAKI,YAAY,WAAYQ,EACjC,QACSZ,KAAKa,UAAI,SAAAC,GAAA,WAAAA,GAAwFlB,GAAVmB,MAAoDA,OAApDA,MAA6EA,OAAa,CAA8C,QAC/Nf,KAAKgB,UADkFD,MAAE,CAAAE,KACJrB,GAA2C,EAC5I,OA/CKA,CAAwB,KA4DxBsB,GAA2B,MAAjC,MAAMA,UAAoCtB,UAC7BI,KAAKa,UAAI,UAAAM,EAAA,gBAAAL,GAAA,OAAAK,MAhB8EJ,MAgBUG,KAA2BJ,GAA3BI,EAA2B,GAAnH,EAA0K,QACnLlB,KAAKgB,UAjBkFD,MAAE,CAAAE,KAiBJC,EAA2BE,SAAA,CAjBzBL,QAiBmE,EACtK,OAHKG,CAA2B,KAcjC,MAAMG,EAAoB,IAAIC,MAA+C,IAkDvEC,GAAyB,CAC3BC,QAASH,EACTI,aAAaC,SAAW,IAAMC,IAC9BC,OAAO,GAgBLC,GAA0B,IAAIP,MAAoD,IACxF,IAkCMK,GAAoB,MAA1B,MAAMA,UAA6B/B,GAC/BC,YAAYiC,EAAUC,EAAYC,GAC9BC,MAAMH,EAAUC,GAChB/B,KAAKgC,iBAAmBA,EAExBhC,KAAKkC,YAAa,EACW,MAAzBlC,KAAKgC,mBACLhC,KAAKgC,kBApDjB,SAASG,KACL,MAAMC,KAAYC,SAAQ,EAAIA,QAAUC,eAAiB,GACzD,MAAO,gBAAgBC,KAAKH,EAAUI,cAC1C,CAiDqCL,GAEjC,CAKAM,WAAWnC,GAEPN,KAAKI,YAAY,QADOE,GAAgB,GAE5C,CAEAoC,aAAapC,KACJN,KAAKgC,kBAAqBhC,KAAKgC,mBAAqBhC,KAAKkC,aAC1DlC,KAAKC,SAASK,EAEtB,CAEAqC,oBACI3C,KAAKkC,YAAa,CACtB,CAEAU,gBAAgBtC,GACZN,KAAKkC,YAAa,EAClBlC,KAAKgC,kBAAoBhC,KAAKC,SAASK,EAC3C,QACSN,KAAKa,UAAI,SAAAC,GAAA,WAAAA,GAAwFa,GAtKVZ,MAsKgDA,OAtKhDA,MAsKyEA,OAtKzEA,MAsKmGc,GAAuB,IAA8D,QAC/Q7B,KAAKgB,UAvKkFD,MAAE,CAAAE,KAuKJU,EAAoBkB,UAAA,oQAAAC,aAAA,SAAAC,EAAAC,GAAA,EAAAD,GAvKlBhC,MAAE,iBAAAkC,GAAA,OAuKJD,EAAAN,aAAAO,EAAAC,OAAA5C,MAA4C,EAvK1CS,CAuKkB,yBAApBiC,EAAA7C,WAAW,EAvKTY,CAuKkB,qCAApBiC,EAAAL,mBAA8B,EAvK5B5B,CAuKkB,0BAAAkC,GAAA,OAApBD,EAAAJ,gBAAAK,EAAAC,OAAA5C,MAA+C,EAA3B,EAAAc,SAAA,CAvKlBL,MAuK6d,CAACQ,KAvK9dR,QAuK+hB,EACloB,OAnCKY,CAAoB,KAkG1B,MAAMwB,EAAgB,IAAI7B,MAA4C,IA8BhE8B,GAAsB,IAAI9B,MAAiD,IAubjF,SAAS+B,GAAUC,GACf,OAAY,MAALA,CACX,CACA,SAASC,GAAajD,GAWlB,SAVYkD,OAAWlD,IAAK,EAAImD,MAAKnD,GAASA,CAWlD,CACA,SAASoD,GAAYC,GACjB,IAAIC,EAAM,CAAC,EACXD,SAAcE,QAASC,IACnBF,EAAgB,MAAVE,EAAiB,IAAKF,KAAQE,GAAWF,IAEhB,IAA5BG,OAAOC,KAAKJ,GAAKK,OAAe,KAAOL,CAClD,CACA,SAASM,GAAkBC,EAASC,GAChC,OAAOA,EAAWC,IAAKC,GAAcA,EAAUH,GACnD,CAYA,SAASI,GAAoBH,GACzB,OAAOA,EAAWC,IAAKC,GAZ3B,SAASE,GAAcF,GACnB,OAAQA,EAAUG,QACtB,CAWeD,CAAcF,GACfA,EACEI,GAAMJ,EAAUG,SAASC,GAEzC,CAoBA,SAASC,GAAkBP,GACvB,OAAqB,MAAdA,EAhBX,SAASQ,GAAQR,GACb,IAAKA,EACD,OAAO,KACX,MAAMS,EAAoBT,EAAWU,OAAOzB,IAC5C,OAAgC,GAA5BwB,EAAkBZ,OACX,KACJ,SAAUE,GACb,OAAOT,GAAYQ,GAAkBC,EAASU,GAClD,CACJ,CAOgCD,CAAQL,GAAoBH,IAAe,IAC3E,CAqBA,SAASW,GAAuBX,GAC5B,OAAqB,MAAdA,EAjBX,SAASY,GAAaZ,GAClB,IAAKA,EACD,OAAO,KACX,MAAMS,EAAoBT,EAAWU,OAAOzB,IAC5C,OAAgC,GAA5BwB,EAAkBZ,OACX,KACJ,SAAUE,GAEb,OCn0BD,SAASc,MAAYC,GACxB,MAAMC,KAAiBC,OAAkBF,IACjCA,KAAMG,EAASrB,SAAK,EAAIsB,MAAqBJ,GAC/CK,EAAS,IAAIC,KAAYC,IAC3B,MAAQxB,UAAWoB,EACnB,IAAKpB,EAED,YADAwB,EAAWC,WAGf,MAAMC,EAAS,IAAIC,MAAM3B,GACzB,IAAI4B,EAAuB5B,EACvB6B,EAAqB7B,EACzB,QAAS8B,EAAc,EAAGA,EAAc9B,EAAQ8B,IAAe,CAC3D,IAAIC,GAAW,GACfC,SAAUZ,EAAQU,IAAcG,aAAUC,MAAyBV,EAAanF,IACvE0F,IACDA,GAAW,EACXF,KAEJH,EAAOI,GAAezF,GACvB,IAAMuF,SAAwBO,EAAW,OACnCP,IAAyBG,KACrBF,GACDL,EAAWY,KAAKrC,KAAOsC,MAAatC,EAAM2B,GAAUA,GAExDF,EAAWC,WAAS,GAGhC,IAEJ,OAAOP,EAAiBI,EAAOgB,QAAKC,MAAiBrB,IAAmBI,CAC5E,CDoyBeN,CADaf,GAAkBC,EAASU,GAAmBR,IAAId,KACzCgD,QAAKlC,MAAIX,IAC1C,CACJ,CAQUsB,CAAaT,GAAoBH,IACjC,IACV,CAKA,SAASqC,GAAgBC,EAAmBC,GACxC,OAA0B,OAAtBD,EACO,CAACC,GACLf,MAAMgB,QAAQF,GACf,IAAIA,EAAmBC,GACvB,CAACD,EAAmBC,EAC9B,CAIA,SAASE,GAAqB1C,GAC1B,OAAOA,EAAQ2C,cACnB,CAIA,SAASC,GAA0B5C,GAC/B,OAAOA,EAAQ6C,mBACnB,CAQA,SAASC,GAAoB7C,GACzB,OAAKA,EAEEwB,MAAMgB,QAAQxC,GAAcA,EAAa,CAACA,GADtC,EAEf,CAQA,SAAS8C,GAAa9C,EAAYE,GAC9B,OAAOsB,MAAMgB,QAAQxC,GAAcA,EAAW+C,SAAS7C,GAAaF,IAAeE,CACvF,CAQA,SAAS8C,GAAchD,EAAYiD,GAC/B,MAAMC,EAAUL,GAAoBI,GAEpCE,OADwBN,GAAoB7C,GAC5BP,QAAS2D,IAKhBN,GAAaI,EAASE,IACvBF,EAAQG,KAAKD,EAAC,GAGfF,CACX,CACA,SAASI,GAAiBtD,EAAYiD,GAClC,OAAOJ,GAAoBI,GAAmBvC,OAAQ0C,IAAON,GAAa9C,EAAYoD,GAC1F,CAUA,MAAMG,GACF9H,cAKIG,KAAK8G,eAAiB,GAMtB9G,KAAKgH,oBAAsB,GAI3BhH,KAAK4H,oBAAsB,EAC/B,CAKA,SAAItH,GACA,OAAON,KAAKmE,QAAUnE,KAAKmE,QAAQ7D,MAAQ,IAC/C,CAOA,SAAIuH,GACA,OAAO7H,KAAKmE,QAAUnE,KAAKmE,QAAQ0D,MAAQ,IAC/C,CAMA,WAAIC,GACA,OAAO9H,KAAKmE,QAAUnE,KAAKmE,QAAQ2D,QAAU,IACjD,CAOA,WAAIC,GACA,OAAO/H,KAAKmE,QAAUnE,KAAKmE,QAAQ4D,QAAU,IACjD,CAOA,YAAIC,GACA,OAAOhI,KAAKmE,QAAUnE,KAAKmE,QAAQ6D,SAAW,IAClD,CAMA,WAAIC,GACA,OAAOjI,KAAKmE,QAAUnE,KAAKmE,QAAQ8D,QAAU,IACjD,CAKA,UAAInE,GACA,OAAO9D,KAAKmE,QAAUnE,KAAKmE,QAAQL,OAAS,IAChD,CAMA,YAAIoE,GACA,OAAOlI,KAAKmE,QAAUnE,KAAKmE,QAAQ+D,SAAW,IAClD,CAMA,SAAIC,GACA,OAAOnI,KAAKmE,QAAUnE,KAAKmE,QAAQgE,MAAQ,IAC/C,CAMA,WAAIC,GACA,OAAOpI,KAAKmE,QAAUnE,KAAKmE,QAAQiE,QAAU,IACjD,CAOA,UAAIC,GACA,OAAOrI,KAAKmE,QAAUnE,KAAKmE,QAAQkE,OAAS,IAChD,CAMA,aAAIC,GACA,OAAOtI,KAAKmE,QAAUnE,KAAKmE,QAAQmE,UAAY,IACnD,CAMA,iBAAIC,GACA,OAAOvI,KAAKmE,QAAUnE,KAAKmE,QAAQoE,cAAgB,IACvD,CAOA,gBAAIC,GACA,OAAOxI,KAAKmE,QAAUnE,KAAKmE,QAAQqE,aAAe,IACtD,CAMA,QAAIxJ,GACA,OAAO,IACX,CAKAyJ,eAAerE,GACXpE,KAAK8G,eAAiB1C,GAAc,GACpCpE,KAAK0I,qBAAuB/D,GAAkB3E,KAAK8G,eACvD,CAKA6B,oBAAoBvE,GAChBpE,KAAKgH,oBAAsB5C,GAAc,GACzCpE,KAAK4I,0BAA4B7D,GAAuB/E,KAAKgH,oBACjE,CAMA,aAAI1C,GACA,OAAOtE,KAAK0I,sBAAwB,IACxC,CAMA,kBAAIG,GACA,OAAO7I,KAAK4I,2BAA6B,IAC7C,CAMAE,mBAAmBrI,GACfT,KAAK4H,oBAAoBH,KAAKhH,EAClC,CAMAsI,4BACI/I,KAAK4H,oBAAoB/D,QAASpD,GAAOA,KACzCT,KAAK4H,oBAAsB,EAC/B,CAKAoB,MAAM1I,OAAQ8F,GACNpG,KAAKmE,SACLnE,KAAKmE,QAAQ6E,MAAM1I,EAC3B,CA+BA2I,SAASC,EAAWlK,GAChB,QAAOgB,KAAKmE,SAAUnE,KAAKmE,QAAQ8E,SAASC,EAAWlK,EAC3D,CA4BAmK,SAASD,EAAWlK,GAChB,OAAOgB,KAAKmE,QAAUnE,KAAKmE,QAAQgF,SAASD,EAAWlK,GAAQ,IACnE,EAkCJ,MAAMoK,WAAkBzB,GACpB9H,cACIoC,SAASoH,WAOTrJ,KAAKsJ,QAAU,KAKftJ,KAAKuJ,KAAO,KAKZvJ,KAAKwJ,cAAgB,IACzB,EAOJ,MAAMC,GACF5J,YAAY6J,GACR1J,KAAK2J,IAAMD,CACf,CACA,aAAIE,GAEA,OAAA5J,KAAK2J,KAAKxF,SAAS0F,eACV7J,KAAK2J,KAAKxF,SAASiE,OAChC,CACA,eAAI0B,GACA,QAAS9J,KAAK2J,KAAKxF,SAASmE,SAChC,CACA,cAAIyB,GAEA,OAAA/J,KAAK2J,KAAKxF,SAAS6F,gBACVhK,KAAK2J,KAAKxF,SAAS+D,QAChC,CACA,WAAI+B,GAEA,QAASjK,KAAK2J,KAAKxF,SAASgE,KAChC,CACA,WAAI+B,GAEA,OAAAlK,KAAK2J,KAAKxF,SAASgG,cACVnK,KAAK2J,KAAKxF,SAAS0D,KAChC,CACA,aAAIuC,GAEA,QAASpK,KAAK2J,KAAKxF,SAAS2D,OAChC,CACA,aAAIuC,GAEA,QAASrK,KAAK2J,KAAKxF,SAAS4D,OAChC,CACA,eAAIuC,GAEA,OAAAtK,KAAK2J,KAAKY,iBAGDvK,KAAK2J,KAAKa,SACvB,EAeJ,IAuBMC,GAAe,MAArB,MAAMA,UAAwBhB,GAC1B5J,YAAY6J,GACRzH,MAAMyH,EACV,QACS1J,KAAKa,UAAI,SAAAC,GAAA,WAAAA,GAAwF2J,GAxvCV1J,MAwvC2CqI,GAAS,IAA0D,QACrMpJ,KAAKgB,UAzvCkFD,MAAE,CAAAE,KAyvCJwJ,EAAe5H,UAAA,oEAAA6H,SAAA,GAAA5H,aAAA,SAAAC,EAAAC,GAAA,EAAAD,GAzvCbhC,MAAE,eAAAiC,EAAA8G,YAAF/I,CAyvCa,aAAAiC,EAAA4G,UAzvCb7I,CAyvCa,cAAAiC,EAAA+G,WAzvCbhJ,CAyvCa,WAAAiC,EAAAiH,QAzvCblJ,CAyvCa,WAAAiC,EAAAkH,QAzvCbnJ,CAyvCa,aAAAiC,EAAAoH,UAzvCbrJ,CAyvCa,aAAAiC,EAAAqH,UAAA,EAAAjJ,SAAA,CAzvCbL,QAyvC6W,EAChd,OANK0J,CAAe,KAiNrB,MAAME,GAAQ,QAMRC,GAAU,UAQVC,GAAU,UAQVC,GAAW,WAMjB,MAAMC,IAON,MAAMC,WAAyBD,GAC3BlL,YAAYS,EAAO2K,GACfhJ,QACAjC,KAAKM,MAAQA,EACbN,KAAKiL,OAASA,CAClB,EAMJ,MAAMC,WAA4BH,GAC9BlL,YAAYqI,EAAU+C,GAClBhJ,QACAjC,KAAKkI,SAAWA,EAChBlI,KAAKiL,OAASA,CAClB,EAOJ,MAAME,WAA2BJ,GAC7BlL,YAAYuI,EAAS6C,GACjBhJ,QACAjC,KAAKoI,QAAUA,EACfpI,KAAKiL,OAASA,CAClB,EAOJ,MAAMG,WAA0BL,GAC5BlL,YAAYwI,EAAQ4C,GAChBhJ,QACAjC,KAAKqI,OAASA,EACdrI,KAAKiL,OAASA,CAClB,EAuDJ,SAASI,GAAaC,GAClB,OAA2B,MAAnBA,IACH1F,MAAMgB,QAAQ0E,IACY,iBAApBA,CACf,CAmCA,MAAMC,GASF1L,YAAYuE,EAAYoH,GAEpBxL,KAAKyL,eAAgB,EAOrBzL,KAAK0L,6BAA+B,KAEpC1L,KAAK2L,iBAAkB,EAEvB3L,KAAK4L,oBAAsB,OAC3B5L,KAAKsJ,QAAU,KAEftJ,KAAKmK,WAAU0B,OAAS,IAAM7L,KAAK8L,kBACnC9L,KAAK8L,kBAAiBC,YAAO3F,GAE7BpG,KAAKgK,aAAY6B,OAAS,IAAM7L,KAAKgM,oBACrChM,KAAKgM,oBAAmBD,QAAO,GAE/B/L,KAAK6J,YAAWgC,OAAS,IAAM7L,KAAKiM,mBACpCjM,KAAKiM,mBAAkBF,QAAO,GAM9B/L,KAAKkM,QAAU,IAAIC,IAanBnM,KAAKoM,OAASpM,KAAKkM,QAAQG,eAE3BrM,KAAKsM,kBAAoB,GACzBtM,KAAKuM,kBAAkBnI,GACvBpE,KAAKwM,uBAAuBhB,EAChC,CAMA,aAAIlH,GACA,OAAOtE,KAAK0I,oBAChB,CACA,aAAIpE,CAAUmI,GACVzM,KAAK8G,eAAiB9G,KAAK0I,qBAAuB+D,CACtD,CAMA,kBAAI5D,GACA,OAAO7I,KAAK4I,yBAChB,CACA,kBAAIC,CAAe6D,GACf1M,KAAKgH,oBAAsBhH,KAAK4I,0BAA4B8D,CAChE,CAIA,UAAIC,GACA,OAAO3M,KAAKsJ,OAChB,CASA,UAAIjB,GACA,SAAOuE,OAAU5M,KAAK8L,eAC1B,CACA,UAAIzD,CAAOb,IACPoF,SAAU,IAAM5M,KAAK8L,eAAee,IAAIrF,GAC5C,CASA,SAAIK,GACA,OAAO7H,KAAKqI,SAAWsC,EAC3B,CASA,WAAI7C,GACA,OAAO9H,KAAKqI,SAAWuC,EAC3B,CASA,WAAI7C,GACA,OAAO/H,KAAKqI,QAAUwC,EAC1B,CAYA,YAAI7C,GACA,OAAOhI,KAAKqI,SAAWyC,EAC3B,CAUA,WAAI7C,GACA,OAAOjI,KAAKqI,SAAWyC,EAC3B,CAQA,YAAI5C,GACA,SAAO0E,OAAU5M,KAAKgM,iBAC1B,CACA,YAAI9D,CAASV,IACToF,SAAU,IAAM5M,KAAKgM,iBAAiBa,IAAIrF,GAC9C,CAQA,SAAIW,GACA,OAAQnI,KAAKkI,QACjB,CAOA,WAAIE,GACA,SAAOwE,OAAU5M,KAAKiM,gBAC1B,CACA,WAAI7D,CAAQZ,IACRoF,SAAU,IAAM5M,KAAKiM,gBAAgBY,IAAIrF,GAC7C,CAOA,aAAIc,GACA,OAAQtI,KAAKoI,OACjB,CAOA,YAAI0E,GACA,OAAO9M,KAAK+M,UAAY/M,KAAK+M,UAAY/M,KAAK2M,OAAS3M,KAAK2M,OAAOG,SAAW,QAClF,CAWAE,cAAc5I,GACVpE,KAAKuM,kBAAkBnI,EAC3B,CAWA6I,mBAAmB7I,GACfpE,KAAKwM,uBAAuBpI,EAChC,CAaAgD,cAAchD,GACVpE,KAAKgN,cAAc5F,GAAchD,EAAYpE,KAAK8G,gBACtD,CAYAoG,mBAAmB9I,GACfpE,KAAKiN,mBAAmB7F,GAAchD,EAAYpE,KAAKgH,qBAC3D,CA8BAU,iBAAiBtD,GACbpE,KAAKgN,cAActF,GAAiBtD,EAAYpE,KAAK8G,gBACzD,CAYAqG,sBAAsB/I,GAClBpE,KAAKiN,mBAAmBvF,GAAiBtD,EAAYpE,KAAKgH,qBAC9D,CAwBAE,aAAa5C,GACT,OAAO4C,GAAalH,KAAK8G,eAAgBxC,EAC7C,CASA8I,kBAAkB9I,GACd,OAAO4C,GAAalH,KAAKgH,oBAAqB1C,EAClD,CAQA+I,kBACIrN,KAAKsE,UAAY,IACrB,CAQAgJ,uBACItN,KAAK6I,eAAiB,IAC1B,CACA0E,cAAcC,EAAO,CAAC,GAClB,MAAMC,GAA2B,IAAjBzN,KAAKoI,QACrBpI,KAAKoI,SAAU,EACf,MAAMsF,EAAgBF,EAAKE,eAAiB1N,KACxCA,KAAKsJ,UAAYkE,EAAKG,UACtB3N,KAAKsJ,QAAQiE,cAAc,IAAKC,EAAME,kBAEtCD,IAA8B,IAAnBD,EAAKI,WAChB5N,KAAKkM,QAAQ7F,KAAK,IAAI8E,IAAmB,EAAMuC,GAEvD,CAWAG,iBAAiBL,EAAO,CAAC,GACrBxN,KAAKuN,cAAc,CAAEI,UAAU,EAAMC,UAAWJ,EAAKI,UAAWF,cAAe1N,OAC/EA,KAAK8N,cAAe3J,GAAYA,EAAQ0J,iBAAiBL,GAC7D,CACAO,gBAAgBP,EAAO,CAAC,GACpB,MAAMC,GAA2B,IAAjBzN,KAAKoI,QACrBpI,KAAKoI,SAAU,EACfpI,KAAK2L,iBAAkB,EACvB,MAAM+B,EAAgBF,EAAKE,eAAiB1N,KAC5CA,KAAK8N,cAAe3J,IAChBA,EAAQ4J,gBAAgB,CAAEJ,UAAU,EAAMC,UAAWJ,EAAKI,UAAWF,iBAAe,GAEpF1N,KAAKsJ,UAAYkE,EAAKG,UACtB3N,KAAKsJ,QAAQ0E,eAAeR,EAAME,GAElCD,IAA8B,IAAnBD,EAAKI,WAChB5N,KAAKkM,QAAQ7F,KAAK,IAAI8E,IAAmB,EAAOuC,GAExD,CACAO,YAAYT,EAAO,CAAC,GAChB,MAAMC,GAA4B,IAAlBzN,KAAKkI,SACrBlI,KAAKkI,UAAW,EAChB,MAAMwF,EAAgBF,EAAKE,eAAiB1N,KACxCA,KAAKsJ,UAAYkE,EAAKG,UACtB3N,KAAKsJ,QAAQ2E,YAAY,IAAKT,EAAME,kBAEpCD,IAA8B,IAAnBD,EAAKI,WAChB5N,KAAKkM,QAAQ7F,KAAK,IAAI6E,IAAoB,EAAOwC,GAEzD,CACAQ,eAAeV,EAAO,CAAC,GACnB,MAAMC,GAA4B,IAAlBzN,KAAKkI,SACrBlI,KAAKkI,UAAW,EAChBlI,KAAKyL,eAAgB,EACrB,MAAMiC,EAAgBF,EAAKE,eAAiB1N,KAC5CA,KAAK8N,cAAe3J,IAEhBA,EAAQ+J,eAAe,CAAEP,UAAU,EAAMC,UAAWJ,EAAKI,WAAW,GAEpE5N,KAAKsJ,UAAYkE,EAAKG,UACtB3N,KAAKsJ,QAAQ6E,gBAAgBX,EAAME,GAEnCD,IAA8B,IAAnBD,EAAKI,WAChB5N,KAAKkM,QAAQ7F,KAAK,IAAI6E,IAAoB,EAAMwC,GAExD,CACAU,cAAcZ,EAAO,CAAC,GAClBxN,KAAKqI,OAASwC,GACd,MAAM6C,EAAgBF,EAAKE,eAAiB1N,MACrB,IAAnBwN,EAAKI,YACL5N,KAAKkM,QAAQ7F,KAAK,IAAI+E,GAAkBpL,KAAKqI,OAAQqF,IACrD1N,KAAKuI,cAAc8F,KAAKrO,KAAKqI,SAE7BrI,KAAKsJ,UAAYkE,EAAKG,UACtB3N,KAAKsJ,QAAQ8E,cAAc,IAAKZ,EAAME,iBAE9C,CACAY,QAAQd,EAAO,CAAC,GAGZ,MAAMe,EAAoBvO,KAAKwO,mBAAmBhB,EAAKG,UACvD3N,KAAKqI,OAASyC,GACd9K,KAAK8D,OAAS,KACd9D,KAAK8N,cAAe3J,IAEhBA,EAAQmK,QAAQ,IAAKd,EAAMG,UAAU,GAAM,GAE/C3N,KAAKyO,eACL,MAAMf,EAAgBF,EAAKE,eAAiB1N,MACrB,IAAnBwN,EAAKI,YACL5N,KAAKkM,QAAQ7F,KAAK,IAAI2E,GAAiBhL,KAAKM,MAAOoN,IACnD1N,KAAKkM,QAAQ7F,KAAK,IAAI+E,GAAkBpL,KAAKqI,OAAQqF,IACrD1N,KAAKwI,aAAa6F,KAAKrO,KAAKM,OAC5BN,KAAKuI,cAAc8F,KAAKrO,KAAKqI,SAEjCrI,KAAK0O,iBAAiB,IAAKlB,EAAMe,qBAAqBvO,MACtDA,KAAKsM,kBAAkBzI,QAAS8K,GAAaA,GAAS,GAC1D,CAmBAC,OAAOpB,EAAO,CAAC,GAGX,MAAMe,EAAoBvO,KAAKwO,mBAAmBhB,EAAKG,UACvD3N,KAAKqI,OAASsC,GACd3K,KAAK8N,cAAe3J,IAChBA,EAAQyK,OAAO,IAAKpB,EAAMG,UAAU,GAAM,GAE9C3N,KAAK6O,uBAAuB,CAAElB,UAAU,EAAMC,UAAWJ,EAAKI,YAC9D5N,KAAK0O,iBAAiB,IAAKlB,EAAMe,qBAAqBvO,MACtDA,KAAKsM,kBAAkBzI,QAAS8K,GAAaA,GAAS,GAC1D,CACAD,iBAAiBlB,EAAME,GACf1N,KAAKsJ,UAAYkE,EAAKG,WACtB3N,KAAKsJ,QAAQuF,uBAAuBrB,GAC/BA,EAAKe,mBACNvO,KAAKsJ,QAAQ6E,gBAAgB,CAAC,EAAGT,GAErC1N,KAAKsJ,QAAQ0E,eAAe,CAAC,EAAGN,GAExC,CAMAoB,UAAUnC,GACN3M,KAAKsJ,QAAUqD,CACnB,CAKAoC,cACI,OAAO/O,KAAKM,KAChB,CACAuO,uBAAuBrB,EAAO,CAAC,GAG3B,GAFAxN,KAAKgP,oBACLhP,KAAKyO,eACDzO,KAAKiI,QAAS,CACd,MAAMgH,EAAoBjP,KAAKkP,8BAC/BlP,KAAK8D,OAAS9D,KAAKmP,gBACnBnP,KAAKqI,OAASrI,KAAKoP,oBACfpP,KAAKqI,SAAWsC,IAAS3K,KAAKqI,SAAWwC,KAGzC7K,KAAKqP,mBAAmBJ,EAAmBzB,EAAKI,UAExD,CACA,MAAMF,EAAgBF,EAAKE,eAAiB1N,MACrB,IAAnBwN,EAAKI,YACL5N,KAAKkM,QAAQ7F,KAAK,IAAI2E,GAAiBhL,KAAKM,MAAOoN,IACnD1N,KAAKkM,QAAQ7F,KAAK,IAAI+E,GAAkBpL,KAAKqI,OAAQqF,IACrD1N,KAAKwI,aAAa6F,KAAKrO,KAAKM,OAC5BN,KAAKuI,cAAc8F,KAAKrO,KAAKqI,SAE7BrI,KAAKsJ,UAAYkE,EAAKG,UACtB3N,KAAKsJ,QAAQuF,uBAAuB,IAAKrB,EAAME,iBAEvD,CAEA4B,oBAAoB9B,EAAO,CAAEI,WAAW,IACpC5N,KAAK8N,cAAeyB,GAASA,EAAKD,oBAAoB9B,IACtDxN,KAAK6O,uBAAuB,CAAElB,UAAU,EAAMC,UAAWJ,EAAKI,WAClE,CACAoB,oBACIhP,KAAKqI,OAASrI,KAAKwP,uBAAyB1E,GAAWH,EAC3D,CACAwE,gBACI,OAAOnP,KAAKsE,UAAYtE,KAAKsE,UAAUtE,MAAQ,IACnD,CACAqP,mBAAmBJ,EAAmBrB,GAClC,GAAI5N,KAAK6I,eAAgB,CACrB7I,KAAKqI,OAASwC,GACd7K,KAAK0L,6BAA+B,CAAEkC,WAAyB,IAAdA,GACjD,MAAM6B,EAAMlM,GAAavD,KAAK6I,eAAe7I,OAC7CA,KAAK0P,6BAA+BD,EAAIvJ,UAAWpC,IAC/C9D,KAAK0L,6BAA+B,KAIpC1L,KAAK2P,UAAU7L,EAAQ,CAAE8J,YAAWqB,qBAAmB,EAE/D,CACJ,CACAC,8BACI,GAAIlP,KAAK0P,6BAA8B,CACnC1P,KAAK0P,6BAA6BE,cAGlC,MAAMX,EAAoBjP,KAAK0L,8BAA8BkC,YAAa,EAC1E,OAAA5N,KAAK0L,6BAA+B,KAC7BuD,CACX,CACA,OAAO,CACX,CACAU,UAAU7L,EAAQ0J,EAAO,CAAC,GACtBxN,KAAK8D,OAASA,EACd9D,KAAK6P,uBAAyC,IAAnBrC,EAAKI,UAAqB5N,KAAMwN,EAAKyB,kBACpE,CA+BAa,IAAI9Q,GACA,IAAI+Q,EAAW/Q,EAKf,OAJgB,MAAZ+Q,IAECnK,MAAMgB,QAAQmJ,KACfA,EAAWA,EAASC,MAAM,MACN,IAApBD,EAAS9L,QACF,KACJ8L,EAASE,OAAO,CAAC9L,EAASoF,IAASpF,GAAWA,EAAQ+L,MAAM3G,GAAOvJ,KAC9E,CA4BAmJ,SAASD,EAAWlK,GAChB,MAAMmF,EAAUnF,EAAOgB,KAAK8P,IAAI9Q,GAAQgB,KACxC,OAAOmE,GAAWA,EAAQL,OAASK,EAAQL,OAAOoF,GAAa,IACnE,CA+BAD,SAASC,EAAWlK,GAChB,QAASgB,KAAKmJ,SAASD,EAAWlK,EACtC,CAIA,QAAImR,GACA,IAAIC,EAAIpQ,KACR,KAAOoQ,EAAE9G,SACL8G,EAAIA,EAAE9G,QAEV,OAAO8G,CACX,CAEAP,sBAAsBjC,EAAWyC,EAAgBpB,GAC7CjP,KAAKqI,OAASrI,KAAKoP,mBACfxB,GACA5N,KAAKuI,cAAc8F,KAAKrO,KAAKqI,SAK7BuF,GAAaqB,IACbjP,KAAKkM,QAAQ7F,KAAK,IAAI+E,GAAkBpL,KAAKqI,OAAQgI,IAErDrQ,KAAKsJ,SACLtJ,KAAKsJ,QAAQuG,sBAAsBjC,EAAWyC,EAAgBpB,EAEtE,CAEAqB,mBACItQ,KAAKwI,aAAe,IAAI+H,MACxBvQ,KAAKuI,cAAgB,IAAIgI,KAC7B,CACAnB,mBACI,OAAIpP,KAAKwP,uBACE1E,GACP9K,KAAK8D,OACE8G,GACP5K,KAAK0L,8BAAgC1L,KAAKwQ,uBAAuB3F,IAC1DA,GACP7K,KAAKwQ,uBAAuB5F,IACrBA,GACJD,EACX,CAEA6F,uBAAuBnI,GACnB,OAAOrI,KAAKyQ,aAActM,GAAYA,EAAQkE,SAAWA,EAC7D,CAEAqI,oBACI,OAAO1Q,KAAKyQ,aAActM,GAAYA,EAAQgE,MAClD,CAEAwI,sBACI,OAAO3Q,KAAKyQ,aAActM,GAAYA,EAAQiE,QAClD,CAEA+F,gBAAgBX,EAAM6C,GAClB,MAAMO,GAAe5Q,KAAK0Q,oBACpBjD,EAAUzN,KAAKkI,WAAa0I,EAClC5Q,KAAKkI,SAAW0I,EACZ5Q,KAAKsJ,UAAYkE,EAAKG,UACtB3N,KAAKsJ,QAAQ6E,gBAAgBX,EAAM6C,GAEnC5C,GACAzN,KAAKkM,QAAQ7F,KAAK,IAAI6E,GAAoBlL,KAAKkI,SAAUmI,GAEjE,CAEArC,eAAeR,EAAO,CAAC,EAAG6C,GACtBrQ,KAAKoI,QAAUpI,KAAK2Q,sBACpB3Q,KAAKkM,QAAQ7F,KAAK,IAAI8E,GAAmBnL,KAAKoI,QAASiI,IACnDrQ,KAAKsJ,UAAYkE,EAAKG,UACtB3N,KAAKsJ,QAAQ0E,eAAeR,EAAM6C,EAE1C,CAEAQ,4BAA4BpQ,GACxBT,KAAK4L,oBAAsBnL,CAC/B,CAEAqQ,mBAAmBtD,GACXnC,GAAamC,IAA0B,MAAjBA,EAAKV,WAC3B9M,KAAK+M,UAAYS,EAAKV,SAE9B,CAMA0B,mBAAmBb,GAEf,OAAQA,MADY3N,KAAKsJ,UAAWtJ,KAAKsJ,QAAQnB,SACXnI,KAAKsJ,QAAQoH,mBACvD,CAEAR,MAAM3G,GACF,OAAO,IACX,CAMAgD,kBAAkBnI,GACdpE,KAAK8G,eAAiBlB,MAAMgB,QAAQxC,GAAcA,EAAW2M,QAAU3M,EACvEpE,KAAK0I,qBAv1Bb,SAASsI,GAAkB1M,GACvB,OAAOsB,MAAMgB,QAAQtC,GAAaK,GAAkBL,GAAaA,GAAa,IAClF,CAq1BoC0M,CAAkBhR,KAAK8G,eACvD,CAMA0F,uBAAuBpI,GACnBpE,KAAKgH,oBAAsBpB,MAAMgB,QAAQxC,GAAcA,EAAW2M,QAAU3M,EAC5EpE,KAAK4I,0BA/0Bb,SAASqI,GAAuBpI,GAC5B,OAAOjD,MAAMgB,QAAQiC,GACf9D,GAAuB8D,GACvBA,GAAkB,IAC5B,CA20ByCoI,CAAuBjR,KAAKgH,oBACjE,EAmeJ,MAQMkK,GAA0B,IAAI5P,MAAe,uBAAwB,CACvE6P,WAAY,OACZC,QAASA,IAAMC,KAKbA,GAA0B,SAWhC,SAASC,GAAanN,EAASoN,EAAKC,EAAuBH,KAqF3D,SAASI,GAAgBtN,EAASoN,GAC9B,MAAMnN,EAAayC,GAAqB1C,GAClB,OAAlBoN,EAAIjN,UACJH,EAAQ6I,cAAcvG,GAAgBrC,EAAYmN,EAAIjN,YAE3B,mBAAfF,GAQZD,EAAQ6I,cAAc,CAAC5I,IAE3B,MAAMoH,EAAkBzE,GAA0B5C,GACvB,OAAvBoN,EAAI1I,eACJ1E,EAAQ8I,mBAAmBxG,GAAgB+E,EAAiB+F,EAAI1I,iBAEhC,mBAApB2C,GACZrH,EAAQ8I,mBAAmB,CAACzB,IAGhC,MAAMkG,EAAoBA,IAAMvN,EAAQ0K,yBACxC8C,GAA0BJ,EAAIzK,eAAgB4K,GAC9CC,GAA0BJ,EAAIvK,oBAAqB0K,EACvD,EAxGID,CAAgBtN,EAASoN,GACzBA,EAAI/H,cAAc/G,WAAW0B,EAAQ7D,QAIjC6D,EAAQ6D,UAAqC,WAAzBwJ,IACpBD,EAAI/H,cAAc7I,mBAAmBwD,EAAQ6D,UA4IrD,SAAS4J,GAAwBzN,EAASoN,GACtCA,EAAI/H,cAAc9I,iBAAkBmR,IAChC1N,EAAQ2N,cAAgBD,EACxB1N,EAAQ4N,gBAAiB,EACzB5N,EAAQsH,eAAgB,EACC,WAArBtH,EAAQ2I,UACRkF,GAAc7N,EAASoN,EAAG,EAEtC,CAlJIK,CAAwBzN,EAASoN,GAmKrC,SAASU,GAAyB9N,EAASoN,GACvC,MAAMtR,EAAWA,CAAC4R,EAAUK,KAExBX,EAAI/H,cAAc/G,WAAWoP,GAEzBK,GACAX,EAAIY,kBAAkBN,EAAQ,EAEtC1N,EAAQzD,iBAAiBT,GAGzBsR,EAAIzI,mBAAmB,KACnB3E,EAAQiO,oBAAoBnS,EAAQ,EAE5C,CAhLIgS,CAAyB9N,EAASoN,GAkJtC,SAASc,GAAkBlO,EAASoN,GAChCA,EAAI/H,cAAchJ,kBAAkB,KAChC2D,EAAQwH,iBAAkB,EACD,SAArBxH,EAAQ2I,UAAuB3I,EAAQ4N,gBACvCC,GAAc7N,EAASoN,GACF,WAArBpN,EAAQ2I,UACR3I,EAAQoJ,eAAc,EAElC,CAzJI8E,CAAkBlO,EAASoN,GAgD/B,SAASe,GAA2BnO,EAASoN,GACzC,GAAIA,EAAI/H,cAAc7I,iBAAkB,CACpC,MAAM4R,EAAoB3R,IACtB2Q,EAAI/H,cAAc7I,iBAAiBC,EAAU,EAEjDuD,EAAQqO,yBAAyBD,GAGjChB,EAAIzI,mBAAmB,KACnB3E,EAAQsO,4BAA4BF,EAAgB,EAE5D,CACJ,CA3DID,CAA2BnO,EAASoN,EACxC,CAYA,SAASmB,GAAevO,EAASoN,EAAKoB,GAAkC,GACpE,MAAMC,EAAOA,OAUTrB,EAAI/H,gBACJ+H,EAAI/H,cAAc9I,iBAAiBkS,GACnCrB,EAAI/H,cAAchJ,kBAAkBoS,IA6E5C,SAASC,GAAkB1O,EAASoN,GAChC,IAAIuB,GAAmB,EACvB,GAAgB,OAAZ3O,EAAkB,CAClB,GAAsB,OAAlBoN,EAAIjN,UAAoB,CACxB,MAAMF,EAAayC,GAAqB1C,GACxC,GAAIyB,MAAMgB,QAAQxC,IAAeA,EAAWH,OAAS,EAAG,CAEpD,MAAM8O,EAAoB3O,EAAWU,OAAQR,GAAcA,IAAciN,EAAIjN,WACzEyO,EAAkB9O,SAAWG,EAAWH,SACxC6O,GAAmB,EACnB3O,EAAQ6I,cAAc+F,GAE9B,CACJ,CACA,GAA2B,OAAvBxB,EAAI1I,eAAyB,CAC7B,MAAM2C,EAAkBzE,GAA0B5C,GAClD,GAAIyB,MAAMgB,QAAQ4E,IAAoBA,EAAgBvH,OAAS,EAAG,CAE9D,MAAM+O,EAAyBxH,EAAgB1G,OAAQ+D,GAAmBA,IAAmB0I,EAAI1I,gBAC7FmK,EAAuB/O,SAAWuH,EAAgBvH,SAClD6O,GAAmB,EACnB3O,EAAQ8I,mBAAmB+F,GAEnC,CACJ,CACJ,CAEA,MAAMJ,EAAOA,OACbjB,UAA0BJ,EAAIzK,eAAgB8L,GAC9CjB,GAA0BJ,EAAIvK,oBAAqB4L,GAC5CE,CACX,CA1GID,CAAkB1O,EAASoN,GACvBpN,IACAoN,EAAIxI,4BACJ5E,EAAQ0M,4BAA4B,QAE5C,CACA,SAASc,GAA0BvN,EAAYnE,GAC3CmE,EAAWP,QAASS,IACZA,EAAUqN,2BACVrN,EAAUqN,0BAA0B1R,EAAQ,EAExD,CAkHA,SAAS+R,GAAc7N,EAASoN,GACxBpN,EAAQsH,eACRtH,EAAQ8J,cACZ9J,EAAQ8O,SAAS9O,EAAQ2N,cAAe,CAAEoB,uBAAuB,IACjE3B,EAAIY,kBAAkBhO,EAAQ2N,eAC9B3N,EAAQ4N,gBAAiB,CAC7B,CAqbA,SAASoB,GAAeC,EAAMC,GAC1B,MAAMC,EAAQF,EAAKG,QAAQF,GACvBC,GAAQ,GACRF,EAAKI,OAAOF,EAAO,EAC3B,CAEA,SAASG,GAAmBC,GACxB,MAA6B,iBAAdA,GACG,OAAdA,GACkC,IAAlC3P,OAAOC,KAAK0P,GAAWzP,QACvB,UAAWyP,GACX,aAAcA,CACtB,CApTiCvU,QAAQC,UAqTzC,MAAMuU,GAAc,cAA0BpI,GAC1C1L,YAEA6T,EAAY,KAAMpI,EAAiBzC,GAC/B5G,MA39DR,SAAS2R,GAAetI,GACpB,OAAQD,GAAaC,GAAmBA,EAAgBlH,WAAakH,IAAoB,IAC7F,CAy9DcsI,CAAetI,GA/8D7B,SAASuI,GAAoBhL,EAAgByC,GAMzC,OAAQD,GAAaC,GAAmBA,EAAgBE,gBAAkB3C,IAAmB,IACjG,CAw8D+CgL,CAAoBhL,EAAgByC,IAE3EtL,KAAK8T,aAAe,KAEpB9T,KAAK+T,UAAY,GAEjB/T,KAAK+R,gBAAiB,EACtB/R,KAAKgU,gBAAgBN,GACrB1T,KAAK8Q,mBAAmBxF,GACxBtL,KAAKsQ,mBACLtQ,KAAK6O,uBAAuB,CACxBlB,UAAU,EAKVC,YAAa5N,KAAK6I,iBAElBwC,GAAaC,KACZA,EAAgB2I,aAAe3I,EAAgB4I,yBAE5ClU,KAAK8T,aADLL,GAAmBC,GACCA,EAAUpT,MAGVoT,EAGhC,CACAT,SAAS3S,EAAO6T,EAAU,CAAC,GACvBnU,KAAKM,MAAQN,KAAK8R,cAAgBxR,EAC9BN,KAAK+T,UAAU9P,SAA4C,IAAlCkQ,EAAQjB,uBACjClT,KAAK+T,UAAUlQ,QAAS8K,GAAaA,EAAS3O,KAAKM,OAAyC,IAAlC6T,EAAQC,wBAEtEpU,KAAK6O,uBAAuBsF,EAChC,CACAE,WAAW/T,EAAO6T,EAAU,CAAC,GACzBnU,KAAKiT,SAAS3S,EAAO6T,EACzB,CACAnL,MAAM0K,EAAY1T,KAAK8T,aAAcK,EAAU,CAAC,GAC5CnU,KAAKgU,gBAAgBN,GACrB1T,KAAKkO,eAAeiG,GACpBnU,KAAK+N,gBAAgBoG,GACrBnU,KAAKiT,SAASjT,KAAKM,MAAO6T,GAC1BnU,KAAK+R,gBAAiB,CAC1B,CAEAtD,eAAiB,CAEjBgC,aAAa6D,GACT,OAAO,CACX,CAEA9E,uBACI,OAAOxP,KAAKgI,QAChB,CACAtH,iBAAiBD,GACbT,KAAK+T,UAAUtM,KAAKhH,EACxB,CAEA2R,oBAAoB3R,GAChB0S,GAAenT,KAAK+T,UAAWtT,EACnC,CACA+R,yBAAyB/R,GACrBT,KAAKsM,kBAAkB7E,KAAKhH,EAChC,CAEAgS,4BAA4BhS,GACxB0S,GAAenT,KAAKsM,kBAAmB7L,EAC3C,CAEAqN,cAAcyG,GAAM,CAEpBC,uBACI,QAAsB,WAAlBxU,KAAK8M,WACD9M,KAAKyL,eACLzL,KAAKiO,cACLjO,KAAK2L,iBACL3L,KAAKuN,iBACLvN,KAAK+R,kBACL/R,KAAKiT,SAASjT,KAAK8R,cAAe,CAAEnE,UAAU,EAAMuF,uBAAuB,IACpE,GAInB,CACAc,gBAAgBN,GACRD,GAAmBC,IACnB1T,KAAKM,MAAQN,KAAK8R,cAAgB4B,EAAUpT,MAC5CoT,EAAU1L,SACJhI,KAAKsO,QAAQ,CAAEX,UAAU,EAAMC,WAAW,IAC1C5N,KAAK4O,OAAO,CAAEjB,UAAU,EAAMC,WAAW,KAG/C5N,KAAKM,MAAQN,KAAK8R,cAAgB4B,CAE1C,GA+M2BvU,QAAQC,UAynBvC,MAAMqV,GAAqC,IAAInT,MAA6D,IACtGoT,GAAqB,CACvBlT,QAAS4H,GACT3H,aAAaC,SAAW,IAAMiT,KAElC,IE5+IIC,GFigJED,GAAoB,MAA1B,MAAMA,UAA6BvL,GAK/B,cAAIxI,CAAWA,GAIf,QAQSZ,KAAK6U,yBAA0B,CAAO,CAC/ChV,YAAYuE,EAAYoH,EAAiBsJ,EAAgBC,EAAuBvD,GAC5EvP,QACAjC,KAAK+U,sBAAwBA,EAC7B/U,KAAKwR,qBAAuBA,EAE5BxR,KAAKgV,OAAS,IAAIzE,MAQlBvQ,KAAKiV,qBAAsB,EAC3BjV,KAAKyI,eAAerE,GACpBpE,KAAK2I,oBAAoB6C,GACzBxL,KAAKwJ,cAn1Cb,SAAS0L,GAAoB3D,EAAKuD,GAC9B,IAAKA,EACD,OAAO,KAGX,IAAIK,EACAC,EACAC,EAgBJ,OApBKzP,MAAMgB,QAAQkO,GAKnBA,EAAejR,QAAS2D,IAChBA,EAAE3H,cAAgB8B,GAClBwT,EAAkB3N,EA1B9B,SAAS8N,GAAkB9L,GAGvB,OAAOzF,OAAOwR,eAAe/L,EAAc3J,eAAiBqB,EAChE,CAwBiBoU,CAAkB9N,GAGvB4N,EAAkB5N,EAKlB6N,EAAiB7N,IAGrB6N,GAEAD,GAEAD,GAKG,IACX,CAkzC6BD,CAAoBlV,EAAM8U,EACnD,CAEAU,YAAYC,GACR,GAAIzV,KAAK0V,kBAAkBD,GAAU,CACjC,MAAME,EAAeF,EAAQG,KAAQC,cACjCF,GACAjD,GAAeiD,EAAc3V,MAA4C,GAE7EsR,GAAatR,KAAK4V,KAAM5V,KAAMA,KAAKwR,sBACnCxR,KAAK4V,KAAK/G,uBAAuB,CAAEjB,WAAW,GAClD,EAt3CR,SAASkI,GAAkBL,EAASM,GAChC,IAAKN,EAAQO,eAAe,SACxB,OAAO,EACX,MAAMC,EAASR,EAAQS,MACvB,QAAID,EAAOE,kBAEHpS,OAAOqS,GAAGL,EAAWE,EAAOI,aACxC,EAg3CYP,CAAkBL,EAASzV,KAAK+V,aAIhC/V,KAAK4V,KAAK3C,SAASjT,KAAKkW,OACxBlW,KAAK+V,UAAY/V,KAAKkW,MAE9B,CAEAI,cACQtW,KAAK4V,MACLlD,GAAe1S,KAAK4V,KAAM5V,MAA4C,EAE9E,CAMA,QAAIhB,GACA,MAAO,EACX,CAKA,WAAImF,GACA,OAAOnE,KAAK4V,IAChB,CAOAzD,kBAAkBN,GACd7R,KAAK+V,UAAYlE,EACjB7R,KAAKgV,OAAO3G,KAAKwD,EACrB,CACA6D,kBAAkBD,GACd,OAAOA,EAAQO,eAAe,OAClC,QACShW,KAAKa,UAAI,SAAAC,GAAA,WAAAA,GAAwF6T,GA/hJV5T,MA+hJgDoC,EAAa,IA/hJ7DpC,MA+hJsGqC,GAAmB,IA/hJzHrC,MA+hJkKM,EAAiB,IA/hJnLN,MA+hJ4N0T,GAAkC,GA/hJ9P1T,MA+hJ2RmQ,GAAuB,IAA8D,QACvclR,KAAKgB,UAhiJkFD,MAAE,CAAAE,KAgiJJ0T,EAAoB9R,UAAA,wBAAA0T,OAAA,CAAAX,KAAA,yBAAAhV,WAAA,4BAAAsV,MAAA,uBAAAM,QAAA,CAAAxB,OAAA,iBAAAyB,SAAA,WAAArV,SAAA,CAhiJlBL,MAgiJgN,CAAC2T,KAhiJjN3T,cAgiJyT,EAC5Z,OA1FK4T,CAAoB,KA+1DpB+B,GAA0B,MAAhC,MAAMA,SACO1W,KAAKa,UAAI,SAAAC,GAAA,WAAAA,GAAwF4V,EAA0B,CAAoD,QAC/K1W,KAAK2W,UAxyMkF5V,KAAE,CAAAE,KAwyMSyV,GAsCjF,QACjB1W,KAAK4W,UA/0MkF7V,MAAE,GA+0MwC,EAC7I,OA1CK2V,CAA0B,KAgwB1BG,GAAW,MAAjB,MAAMA,EASF,iBAAOC,CAAWtJ,GACd,MAAO,CACHuJ,SAAUF,EACVG,UAAW,CACP,CACIxV,QAAS0P,GACT+F,SAAUzJ,EAAKgE,sBAAwBH,KAIvD,QACSrR,KAAKa,UAAI,SAAAC,GAAA,WAAAA,GAAwF+V,EAAW,CAAoD,QAChK7W,KAAK2W,UA3jOkF5V,KAAE,CAAAE,KA2jOS4V,GAAqI,QACvO7W,KAAK4W,UA5jOkF7V,MAAE,CAAAmW,QAAA,CA4jOgCR,KAAgC,EACrK,OAvBKG,CAAW,KAwCXM,GAAmB,MAAzB,MAAMA,EAWF,iBAAOL,CAAWtJ,GACd,MAAO,CACHuJ,SAAUI,EACVH,UAAW,CACP,CACIxV,QAASiT,GACTwC,SAAUzJ,EAAK4J,8BAAgC,UAEnD,CACI5V,QAAS0P,GACT+F,SAAUzJ,EAAKgE,sBAAwBH,KAIvD,QACSrR,KAAKa,UAAI,SAAAC,GAAA,WAAAA,GAAwFqW,EAAmB,CAAoD,QACxKnX,KAAK2W,UAzmOkF5V,KAAE,CAAAE,KAymOSkW,GAAiQ,QACnWnX,KAAK4W,UA1mOkF7V,MAAE,CAAAmW,QAAA,CA0mOwCR,KAAgC,EAC7K,OA7BKS,CAAmB,KEloOzB,IACIvC,UAA4ByC,KAAS,KAAeA,KAAKC,eAC7D,OAEI1C,IAAqB,CACzB,CACA,IA4HI2C,GAxHEC,EAAQ,MAAd,MAAMA,EACF3X,YAAY4X,GACRzX,KAAKyX,YAAcA,EAKnBzX,KAAK0X,UAAY1X,KAAKyX,eAChBE,MAAkB3X,KAAKyX,aACH,iBAAbG,YAA2BA,SAExC5X,KAAK6X,KAAO7X,KAAK0X,WAAa,UAAUnV,KAAKuV,UAAU1V,WAEvDpC,KAAK+X,QAAU/X,KAAK0X,WAAa,kBAAkBnV,KAAKuV,UAAU1V,WAGlEpC,KAAKgY,MAAQhY,KAAK0X,cACXO,OAAOC,SAAUtD,YACbuD,IAAQ,MACdnY,KAAK6X,OACL7X,KAAK+X,QAIV/X,KAAKoY,OAASpY,KAAK0X,WACf,eAAenV,KAAKuV,UAAU1V,aAC7BpC,KAAKgY,QACLhY,KAAK6X,OACL7X,KAAK+X,QAEV/X,KAAKqY,IAAMrY,KAAK0X,WAAa,mBAAmBnV,KAAKuV,UAAU1V,cAAgB,aAAc6V,QAM7FjY,KAAKsY,QAAUtY,KAAK0X,WAAa,uBAAuBnV,KAAKuV,UAAU1V,WAGvEpC,KAAKuY,QAAUvY,KAAK0X,WAAa,WAAWnV,KAAKuV,UAAU1V,aAAepC,KAAK+X,QAK/E/X,KAAKwY,OAASxY,KAAK0X,WAAa,UAAUnV,KAAKuV,UAAU1V,YAAcpC,KAAKoY,MAChF,QACSpY,KAAKa,UAAI,SAAAC,GAAA,WAAAA,GAA+F0W,GAAVzW,MAAoC0X,OAAW,CAA+C,QAC5LzY,KAAK0Y,WADyF3X,MAAE,CAAA4X,MACYnB,EAAQpG,QAARoG,EAAQ3W,UAAAsQ,WAAc,QAAW,EACzJ,OAhDKqG,CAAQ,KAgJd,SAASoB,GAAgCzE,GACrC,OApBJ,SAAS0E,KACL,GAA6B,MAAzBtB,WAAwCU,OAAW,IACnD,IACIA,OAAOa,iBAAiB,OAAQ,KAAM/U,OAAOgV,eAAe,CAAC,EAAG,UAAW,CACvEjJ,IAAKA,IAAOyH,IAAwB,IAE5C,SAEIA,GAAwBA,KAAyB,CACrD,CAEJ,OAAOA,EACX,CAQWsB,GAAkC1E,IAAYA,EAAQ6E,OACjE,CAGA,IAAIC,EACH,SAAUA,GAKPA,SAAkBA,EAAkBC,OAAY,GAAK,SAKrDD,EAAkBA,EAAkBE,QAAa,GAAK,UAKtDF,EAAkBA,EAAkBG,SAAc,GAAK,WAfhDH,CAgBX,CAhBC,CAgBEA,GAA0C,CAAC,GAE9C,IAAII,GAEAC,GA2EAC,GAzEJ,SAASC,KACL,GAA+B,MAA3BF,GAAiC,CAGjC,GAAwB,iBAAb1B,WAA0BA,UAA+B,mBAAZ6B,UAA2BA,QAC/EH,WAA0B,EACnBA,GAGX,GAAI,mBAAoB1B,SAAS8B,gBAAgBC,MAC7CL,IAA0B,MAEzB,CAGD,MAAMM,EAAmBH,QAAQI,UAAUC,SAMvCR,KALAM,IAK2B,4BAA4BrX,KAAKqX,EAAiBG,WAKrF,CACJ,CACA,OAAOT,EACX,CAKA,SAASU,KAEL,GAAwB,iBAAbpC,WAA0BA,SACjC,OAAOqB,EAAkBC,OAE7B,GAAyB,MAArBG,GAA2B,CAE3B,MAAMY,EAAkBrC,SAASsC,cAAc,OACzCC,EAAiBF,EAAgBN,MACvCM,EAAgB1I,IAAM,MACtB4I,EAAeC,MAAQ,MACvBD,EAAeE,SAAW,OAC1BF,EAAeG,WAAa,SAC5BH,EAAeI,cAAgB,OAC/BJ,EAAeK,SAAW,WAC1B,MAAMC,EAAU7C,SAASsC,cAAc,OACjCQ,EAAeD,EAAQd,MAC7Be,EAAaN,MAAQ,MACrBM,EAAaC,OAAS,MACtBV,EAAgBW,YAAYH,GAC5B7C,SAASiD,KAAKD,YAAYX,GAC1BZ,GAAoBJ,EAAkBC,OAIH,IAA/Be,EAAgBa,aAKhBb,EAAgBa,WAAa,EAC7BzB,GACmC,IAA/BY,EAAgBa,WAAmB7B,EAAkBE,QAAUF,EAAkBG,UAEzFa,EAAgBc,QACpB,CACA,OAAO1B,EACX,CA2BA,SAAS2B,KACL,IAAIC,SAAuBrD,SAAa,KAAeA,SACjDA,SAASqD,cACT,KACN,KAAOA,GAAiBA,EAAcC,YAAY,CAC9C,MAAMC,EAAmBF,EAAcC,WAAWD,cAClD,GAAIE,IAAqBF,EACrB,MAGAA,EAAgBE,CAExB,CACA,OAAOF,CACX,CAEA,SAASG,EAAgBC,GAGrB,OAAQA,EAAMC,aAAeD,EAAMC,eAAe,GAAKD,EAAMnY,MACjE,CAGA,SAASqY,KAKL,cAEQC,UAAc,OAAiBA,kBAE3BC,QAAY,OAAiBA,gBAE7BC,KAAS,OAAiBA,aAE1BC,MAAU,OAAiBA,KAC3C,sCC7MA,SAASC,GAAeP,KAAUQ,GAC9B,OAAIA,EAAU5X,OACH4X,EAAUC,KAAKC,GAAYV,EAAMU,IAErCV,EAAMW,QAAUX,EAAMY,UAAYZ,EAAMa,SAAWb,EAAMc,OACpE,iDChIO,SAASC,GAAKC,GACjB,SAAOvX,MAAO,CAAC5E,EAAGoT,IAAU+I,GAAS/I,EACzC,2BC6BA,IAIMgJ,GAAuB,MAA7B,MAAMA,EACFC,OAAOC,GACH,cAAcC,iBAAqB,IAAc,KAAO,IAAIA,iBAAiBD,EACjF,QACSxc,KAAKa,UAAI,SAAAC,GAAA,WAAAA,GAA+Fwb,EAAuB,CAAsD,QACrLtc,KAAK0Y,WADyF3X,MAAE,CAAA4X,MACY2D,EAAuBlL,QAAvBkL,EAAuBzb,UAAAsQ,WAAc,QAAW,EACxK,OANKmL,CAAuB,KAgKvBI,GAAe,MAArB,MAAMA,SACO1c,KAAKa,UAAI,SAAAC,GAAA,WAAAA,GAA+F4b,EAAe,CAAoD,QAC3K1c,KAAK2W,UA9JyF5V,KAAE,CAAAE,KA8JSyb,GAAgF,QACzL1c,KAAK4W,UA/JyF7V,MAAE,CAAAiW,UA+JqC,CAACsF,KAA6B,EAC/K,OAJKI,CAAe,KC7LrB,SAASC,GAAqBrc,EAAOsc,EAAgB,GACjD,OAMJ,SAASC,GAAevc,GAIpB,OAAQwc,MAAMC,WAAWzc,MAAYwc,MAAME,OAAO1c,GACtD,CAXWuc,CAAevc,GAAS0c,OAAO1c,GAASsc,CACnD,CAYA,SAASK,GAAY3c,GACjB,OAAOsF,MAAMgB,QAAQtG,GAASA,EAAQ,CAACA,EAC3C,CAGA,SAAS4c,EAAoB5c,GACzB,OAAa,MAATA,EACO,GAEa,iBAAVA,EAAqBA,EAAQ,GAAGA,KAClD,CAMA,SAAS6c,GAAcC,GACnB,OAAOA,aAAwBC,MAAaD,EAAa7c,cAAgB6c,CAC7E,iDCrBA,MAAME,GAAqC,IAAIC,IAE/C,IAAIC,GAEEC,GAAY,MAAlB,MAAMA,EACF5d,YAAY6d,EAAWC,GACnB3d,KAAK0d,UAAYA,EACjB1d,KAAK2d,OAASA,EACd3d,KAAK4d,YACD5d,KAAK0d,UAAUhG,WAAaO,OAAO4F,WAG3B5F,OAAO4F,WAAWte,KAAK0Y,QACzB6F,EACd,CAOAD,WAAWE,GACP,OAAI/d,KAAK0d,UAAUtF,QAAUpY,KAAK0d,UAAU1F,QA0BpD,SAASgG,GAAqBD,EAAOE,GACjC,IAAIX,GAAmCY,IAAIH,GAG3C,IACSP,KACDA,GAAsB5F,SAASsC,cAAc,SACzC+D,GACAT,GAAoBW,aAAa,QAASF,GAE9CT,GAAoBW,aAAa,OAAQ,YACzCvG,SAASwG,KAAKxD,YAAY4C,KAE1BA,GAAoBa,QACpBb,GAAoBa,MAAMC,WAAW,UAAUP,cAAmB,GAClET,GAAmCiB,IAAIR,GAE/C,OACOS,GACHC,QAAQC,MAAMF,EAClB,CACJ,CA9CYR,CAAqBD,EAAO/d,KAAK2d,QAE9B3d,KAAK4d,YAAYG,EAC5B,QACS/d,KAAKa,UAAI,SAAAC,GAAA,WAAAA,GAA+F2c,GArCV1c,MAqCwC4d,GArCxC5d,MAqCgE6d,MAAS,IAA+D,QACtO5e,KAAK0Y,WAtCyF3X,MAAE,CAAA4X,MAsCY8E,EAAYrM,QAAZqM,EAAY5c,UAAAsQ,WAAc,QAAW,EAC7J,OAzBKsM,CAAY,KAmElB,SAASK,GAAeC,GAGpB,MAAO,CACHc,QAAmB,QAAVd,GAA6B,KAAVA,EAC5Be,MAAOf,EACPgB,YAAaA,OACbC,eAAgBA,OAExB,CAEA,IACMC,GAAkB,MAAxB,MAAMA,EACFpf,YAAYqf,EAAeC,GACvBnf,KAAKkf,cAAgBA,EACrBlf,KAAKmf,MAAQA,EAEbnf,KAAKof,SAAW,IAAIC,IAEpBrf,KAAKsf,gBAAkB,IAAInT,GAC/B,CAEAmK,cACItW,KAAKsf,gBAAgBjZ,OACrBrG,KAAKsf,gBAAgB5Z,UACzB,CAMA6Z,UAAUjf,GAEN,OADgBkf,GAAavC,GAAY3c,IAC1Bwb,KAAK2D,GAAczf,KAAK0f,eAAeD,GAAYE,IAAId,QAC1E,CAOAe,QAAQtf,GAEJ,MAAMuf,EADUL,GAAavC,GAAY3c,IACb+D,IAAI0Z,GAAS/d,KAAK0f,eAAe3B,GAAO+B,YACpE,IAAIC,KAAkBC,MAAcH,GAEpCE,YAAkBE,MAAOF,EAAgBxZ,QAAK2Z,MAAK,IAAKH,EAAgBxZ,KAAK6V,GAAK,GCpInF,SAAS+D,GAAaC,EAASC,EAAYC,MAC9C,SAAOC,MAAQ,CAACtV,EAAQxF,KACpB,IAAI+a,EAAa,KACbC,EAAY,KACZC,EAAW,KACf,MAAMrS,EAAOA,KACT,GAAImS,EAAY,CACZA,EAAW5Q,cACX4Q,EAAa,KACb,MAAMlgB,EAAQmgB,EACdA,EAAY,KACZhb,EAAWY,KAAK/F,EACpB,GAEJ,SAASqgB,IACL,MAAMC,EAAaF,EAAWN,EACxBS,EAAMR,EAAUQ,MACtB,GAAIA,EAAMD,EAGN,OAFAJ,EAAaxgB,KAAK8gB,cAAS1a,EAAWwa,EAAaC,QACnDpb,EAAW8Y,IAAIiC,GAGnBnS,GACJ,CACApD,EAAO/E,aAAUC,MAAyBV,EAAanF,IACnDmgB,EAAYngB,EACZogB,EAAWL,EAAUQ,MAChBL,IACDA,EAAaH,EAAUS,SAASH,EAAcP,GAC9C3a,EAAW8Y,IAAIiC,GAAU,EAE9B,KACCnS,IACA5I,EAAWC,UAAS,OACrBU,EAAW,KACVqa,EAAYD,EAAa,OAC3B,EAEV,CD8F8FL,CAAa,KAC5FJ,EAAgBxZ,QAAKlC,MAAI0c,IAC5B,MAAMC,EAAW,CACbnC,SAAS,EACToC,YAAa,CAAC,GAElBF,SAAiBld,QAAQ,EAAGgb,UAASd,YACjCiD,EAASnC,QAAUmC,EAASnC,SAAWA,EACvCmC,EAASC,YAAYlD,GAASc,IAE3BmC,IAEf,CAEAtB,eAAe3B,GAEX,GAAI/d,KAAKof,SAASlB,IAAIH,GAClB,OAAO/d,KAAKof,SAAStP,IAAIiO,GAE7B,MAAM4B,EAAM3f,KAAKkf,cAAcrB,WAAWE,GAepCmD,EAAS,CAAEpB,WAbO,IAAIta,KAAY2b,IAMpC,MAAMC,EAAW5C,GAAMxe,KAAKmf,MAAMkC,IAAI,IAAMF,EAAS9a,KAAKmY,IAC1DmB,SAAIZ,YAAYqC,GACT,KACHzB,EAAIX,eAAeoC,EAAO,CAC9B,GACD7a,QAAK+a,MAAU3B,IAAG,EAAGtb,MAAI,EAAGwa,cAAQ,CAASd,QAAOc,cAAU,EAAG0C,MAAUvhB,KAAKsf,kBAErCK,OAC9C,OAAA3f,KAAKof,SAASvS,IAAIkR,EAAOmD,GAClBA,CACX,QACSlhB,KAAKa,UAAI,SAAAC,GAAA,WAAAA,GAA+Fme,GArKVle,MAqK8C0c,IArK9C1c,MAqKuEA,OAAS,CAA+C,QAC7Nf,KAAK0Y,WAtKyF3X,MAAE,CAAA4X,MAsKYsG,EAAkB7N,QAAlB6N,EAAkBpe,UAAAsQ,WAAc,QAAW,EACnK,OA1EK8N,CAAkB,KAmFxB,SAASO,GAAagC,GAClB,OAAOA,EACFnd,IAAI0Z,GAASA,EAAM/N,MAAM,MACzBC,OAAO,CAACwR,EAAIC,IAAOD,EAAGxB,OAAOyB,IAC7Brd,IAAI0Z,GAASA,EAAM4D,OAC5B,CEgfA,IAIMC,GAAoB,MAA1B,MAAMA,EACF/hB,YAAY6d,GACR1d,KAAK0d,UAAYA,CACrB,CAOA9c,WAAWihB,GAGP,OAAOA,EAAQC,aAAa,WAChC,CASAC,UAAUF,GACN,OAyGR,SAASG,GAAYH,GAGjB,SAAUA,EAAQI,aACdJ,EAAQK,cAC2B,mBAA3BL,EAAQM,gBAAiCN,EAAQM,iBAAiBle,OAClF,CA/Ge+d,CAAYH,IAAqD,YAAzCO,iBAAiBP,GAASvH,UAC7D,CAQA+H,WAAWR,GAEP,IAAK7hB,KAAK0d,UAAUhG,UAChB,OAAO,EAEX,MAAM4K,EAkFd,SAASC,GAAgBtK,GACrB,IACI,OAAOA,EAAOqK,YAClB,OAEI,OAAO,IACX,CACJ,CAzF6BC,CAsK7B,SAASC,GAAUC,GAEf,OAAQA,EAAKC,eAAiBD,EAAKC,cAAcC,aAAgB1K,MACrE,CAzK6CuK,CAAUX,IAC/C,GAAIS,KAEuC,IAAnCM,GAAiBN,KAIhBtiB,KAAK+hB,UAAUO,IAChB,OAAO,EAGf,IAAIO,EAAWhB,EAAQgB,SAASrgB,cAC5BsgB,EAAgBF,GAAiBf,GACrC,OAAIA,EAAQC,aAAa,oBACI,IAAlBgB,IAEM,WAAbD,GAAsC,WAAbA,GAOzB7iB,KAAK0d,UAAUtF,QAAUpY,KAAK0d,UAAUrF,MAwHpD,SAAS0K,GAAyBlB,GAC9B,IAAIgB,EAAWhB,EAAQgB,SAASrgB,cAC5BwgB,EAAyB,UAAbH,GAAwBhB,EAAQ5gB,KAChD,MAAsB,SAAd+hB,GACU,aAAdA,GACa,WAAbH,GACa,aAAbA,CACR,CA/H4DE,CAAyBlB,MAG5D,UAAbgB,IAGKhB,EAAQC,aAAa,cAKD,IAAlBgB,EAEM,UAAbD,GAKsB,IAAlBC,IAKkB,OAAlBA,GAMG9iB,KAAK0d,UAAUpF,SAAWuJ,EAAQC,aAAa,aAEnDD,EAAQoB,UAAY,EAC/B,CAQAC,YAAYrB,EAASsB,GAGjB,OAyFR,SAASC,GAAuBvB,GAE5B,OAlDJ,SAASwB,GAAcxB,GACnB,OAOJ,SAASyB,GAAezB,GACpB,MAAyC,SAAlCA,EAAQgB,SAASrgB,aAC5B,CATW8gB,CAAezB,IAA4B,UAAhBA,EAAQ5gB,IAC9C,CAgDQoiB,CAAcxB,KA1DtB,SAAS0B,GAAoB1B,GACzB,IAAIgB,EAAWhB,EAAQgB,SAASrgB,cAChC,MAAqB,UAAbqgB,GACS,WAAbA,GACa,WAAbA,GACa,aAAbA,CACR,CAuDYU,CAAoB1B,IAjDhC,SAAS2B,GAAiB3B,GACtB,OAOJ,SAAS4B,GAAgB5B,GACrB,MAAyC,KAAlCA,EAAQgB,SAASrgB,aAC5B,CATWihB,CAAgB5B,IAAYA,EAAQC,aAAa,OAC5D,CAgDQ0B,CAAiB3B,IACjBA,EAAQC,aAAa,oBACrB4B,GAAiB7B,GACzB,CAlGgBuB,CAAuBvB,KAC1B7hB,KAAKY,WAAWihB,KAChBsB,GAAQQ,kBAAoB3jB,KAAK+hB,UAAUF,GACpD,QACS7hB,KAAKa,UAAI,SAAAC,GAAA,WAAAA,GAA+F8gB,GAliBV7gB,MAkiBgD4d,GAAW,CAA+C,QACxM3e,KAAK0Y,WAniByF3X,MAAE,CAAA4X,MAmiBYiJ,EAAoBxQ,QAApBwQ,EAAoB/gB,UAAAsQ,WAAc,QAAW,EACrK,OA9GKyQ,CAAoB,KAiK1B,SAAS8B,GAAiB7B,GACtB,IAAKA,EAAQC,aAAa,kBAAoC1b,IAArByb,EAAQoB,SAC7C,OAAO,EAEX,IAAIA,EAAWpB,EAAQ+B,aAAa,YACpC,SAAUX,GAAanG,MAAM+G,SAASZ,EAAU,KACpD,CAKA,SAASL,GAAiBf,GACtB,IAAK6B,GAAiB7B,GAClB,OAAO,KAGX,MAAMoB,EAAWY,SAAShC,EAAQ+B,aAAa,aAAe,GAAI,IAClE,OAAO9G,MAAMmG,IAAY,EAAKA,CAClC,CAqCA,MAAMa,GAEF,WAAI7b,GACA,OAAOjI,KAAK+jB,QAChB,CACA,WAAI9b,CAAQ3H,GACRN,KAAK+jB,SAAWzjB,EACZN,KAAKgkB,cAAgBhkB,KAAKikB,aAC1BjkB,KAAKkkB,sBAAsB5jB,EAAON,KAAKgkB,cACvChkB,KAAKkkB,sBAAsB5jB,EAAON,KAAKikB,YAE/C,CACApkB,YAAYskB,EAAUC,EAAUC,EAASC,EAAWC,GAAe,EAEnEC,GACIxkB,KAAKmkB,SAAWA,EAChBnkB,KAAKokB,SAAWA,EAChBpkB,KAAKqkB,QAAUA,EACfrkB,KAAKskB,UAAYA,EACjBtkB,KAAKwkB,UAAYA,EACjBxkB,KAAKykB,cAAe,EAEpBzkB,KAAK0kB,oBAAsB,IAAM1kB,KAAK2kB,2BACtC3kB,KAAK4kB,kBAAoB,IAAM5kB,KAAK6kB,4BACpC7kB,KAAK+jB,UAAW,EACXQ,GACDvkB,KAAK8kB,eAEb,CAEAC,UACI,MAAMC,EAAchlB,KAAKgkB,aACnBiB,EAAYjlB,KAAKikB,WACnBe,IACAA,EAAYE,oBAAoB,QAASllB,KAAK0kB,qBAC9CM,EAAYjK,UAEZkK,IACAA,EAAUC,oBAAoB,QAASllB,KAAK4kB,mBAC5CK,EAAUlK,UAEd/a,KAAKgkB,aAAehkB,KAAKikB,WAAa,KACtCjkB,KAAKykB,cAAe,CACxB,CAOAK,gBAEI,QAAI9kB,KAAKykB,eAGTzkB,KAAKqkB,QAAQc,kBAAkB,KACtBnlB,KAAKgkB,eACNhkB,KAAKgkB,aAAehkB,KAAKolB,gBACzBplB,KAAKgkB,aAAalL,iBAAiB,QAAS9Y,KAAK0kB,sBAEhD1kB,KAAKikB,aACNjkB,KAAKikB,WAAajkB,KAAKolB,gBACvBplB,KAAKikB,WAAWnL,iBAAiB,QAAS9Y,KAAK4kB,mBAAiB,GAGpE5kB,KAAKmkB,SAASkB,aACdrlB,KAAKmkB,SAASkB,WAAWC,aAAatlB,KAAKgkB,aAAchkB,KAAKmkB,UAC9DnkB,KAAKmkB,SAASkB,WAAWC,aAAatlB,KAAKikB,WAAYjkB,KAAKmkB,SAASoB,aACrEvlB,KAAKykB,cAAe,GAEjBzkB,KAAKykB,aAChB,CAMAe,6BAA6BrR,GACzB,OAAO,IAAIhV,QAAQC,IACfY,KAAKylB,iBAAiB,IAAMrmB,EAAQY,KAAK0lB,oBAAoBvR,IAAS,EAE9E,CAOAwR,mCAAmCxR,GAC/B,OAAO,IAAIhV,QAAQC,IACfY,KAAKylB,iBAAiB,IAAMrmB,EAAQY,KAAK6kB,0BAA0B1Q,IAAS,EAEpF,CAOAyR,kCAAkCzR,GAC9B,OAAO,IAAIhV,QAAQC,IACfY,KAAKylB,iBAAiB,IAAMrmB,EAAQY,KAAK2kB,yBAAyBxQ,IAAS,EAEnF,CAMA0R,mBAAmBC,GAEf,MAAMC,EAAU/lB,KAAKmkB,SAAS6B,iBAAiB,qBAAqBF,sBAA+BA,kBAA2BA,MAgB9H,MAAa,SAATA,EACOC,EAAQ9hB,OAAS8hB,EAAQ,GAAK/lB,KAAKimB,yBAAyBjmB,KAAKmkB,UAErE4B,EAAQ9hB,OACT8hB,EAAQA,EAAQ9hB,OAAS,GACzBjE,KAAKkmB,wBAAwBlmB,KAAKmkB,SAC5C,CAKAuB,oBAAoBvR,GAEhB,MAAMgS,EAAoBnmB,KAAKmkB,SAASiC,cAAc,0CACtD,GAAID,EAAmB,CAcnB,IAAKnmB,KAAKokB,SAASlB,YAAYiD,GAAoB,CAC/C,MAAME,EAAiBrmB,KAAKimB,yBAAyBE,GACrDE,UAAgBC,MAAMnS,KACbkS,CACb,CACAF,SAAkBG,MAAMnS,IACjB,CACX,CACA,OAAOnU,KAAK6kB,0BAA0B1Q,EAC1C,CAKA0Q,0BAA0B1Q,GACtB,MAAMgS,EAAoBnmB,KAAK6lB,mBAAmB,SAClD,OAAIM,GACAA,EAAkBG,MAAMnS,KAEnBgS,CACb,CAKAxB,yBAAyBxQ,GACrB,MAAMgS,EAAoBnmB,KAAK6lB,mBAAmB,OAClD,OAAIM,GACAA,EAAkBG,MAAMnS,KAEnBgS,CACb,CAIAI,cACI,OAAOvmB,KAAKykB,YAChB,CAEAwB,yBAAyB9V,GACrB,GAAInQ,KAAKokB,SAASlB,YAAY/S,IAASnQ,KAAKokB,SAAS/B,WAAWlS,GAC5D,OAAOA,EAEX,MAAMlR,EAAWkR,EAAKlR,SACtB,QAASunB,EAAI,EAAGA,EAAIvnB,EAASgF,OAAQuiB,IAAK,CACtC,MAAMC,EAAgBxnB,EAASunB,GAAGE,WAAa1mB,KAAKskB,UAAUqC,aACxD3mB,KAAKimB,yBAAyBhnB,EAASunB,IACvC,KACN,GAAIC,EACA,OAAOA,CAEf,CACA,OAAO,IACX,CAEAP,wBAAwB/V,GACpB,GAAInQ,KAAKokB,SAASlB,YAAY/S,IAASnQ,KAAKokB,SAAS/B,WAAWlS,GAC5D,OAAOA,EAGX,MAAMlR,EAAWkR,EAAKlR,SACtB,QAASunB,EAAIvnB,EAASgF,OAAS,EAAGuiB,GAAK,EAAGA,IAAK,CAC3C,MAAMC,EAAgBxnB,EAASunB,GAAGE,WAAa1mB,KAAKskB,UAAUqC,aACxD3mB,KAAKkmB,wBAAwBjnB,EAASunB,IACtC,KACN,GAAIC,EACA,OAAOA,CAEf,CACA,OAAO,IACX,CAEArB,gBACI,MAAMwB,EAAS5mB,KAAKskB,UAAUpK,cAAc,OAC5C,OAAAla,KAAKkkB,sBAAsBlkB,KAAK+jB,SAAU6C,GAC1CA,EAAOC,UAAUtI,IAAI,uBACrBqI,EAAOC,UAAUtI,IAAI,yBACrBqI,EAAOzI,aAAa,cAAe,QAC5ByI,CACX,CAMA1C,sBAAsB4C,EAAWF,GAG7BE,EAAYF,EAAOzI,aAAa,WAAY,KAAOyI,EAAOG,gBAAgB,WAC9E,CAKAC,cAAc/e,GACNjI,KAAKgkB,cAAgBhkB,KAAKikB,aAC1BjkB,KAAKkkB,sBAAsBjc,EAASjI,KAAKgkB,cACzChkB,KAAKkkB,sBAAsBjc,EAASjI,KAAKikB,YAEjD,CAEAwB,iBAAiBhlB,GAETT,KAAKwkB,aACLyC,OAAgBxmB,EAAI,CAAEymB,SAAUlnB,KAAKwkB,YAGrC2C,WAAW1mB,EAEnB,EAEJ,IAGM2mB,GAAgB,MAAtB,MAAMA,EACFvnB,YAAYukB,EAAUC,EAASC,GAC3BtkB,KAAKokB,SAAWA,EAChBpkB,KAAKqkB,QAAUA,EACfrkB,KAAKwkB,aAAY6C,OAAOC,OACxBtnB,KAAKskB,UAAYA,CACrB,CAQA/H,OAAOsF,EAAS0F,GAAuB,GACnC,OAAO,IAAIzD,GAAUjC,EAAS7hB,KAAKokB,SAAUpkB,KAAKqkB,QAASrkB,KAAKskB,UAAWiD,EAAsBvnB,KAAKwkB,UAC1G,QACSxkB,KAAKa,UAAI,SAAAC,GAAA,WAAAA,GAA+FsmB,GA56BVrmB,MA46B4C6gB,IA56B5C7gB,MA46B6EA,OA56B7EA,MA46BmGymB,MAAQ,CAA+C,QACxPxnB,KAAK0Y,WA76ByF3X,MAAE,CAAA4X,MA66BYyO,EAAgBhW,QAAhBgW,EAAgBvmB,UAAAsQ,WAAc,QAAW,EACjK,OAnBKiW,CAAgB,KAiStB,SAASK,GAAgCpM,GAMrC,OAAyB,IAAlBA,EAAMqM,SAAkC,IAAjBrM,EAAMsM,MACxC,CAEA,SAASC,GAAiCvM,GACtC,MAAMwM,EAASxM,EAAMyM,SAAWzM,EAAMyM,QAAQ,IAAQzM,EAAM0M,gBAAkB1M,EAAM0M,eAAe,GAKnG,SAAUF,IACe,IAArBA,EAAMG,YACY,MAAjBH,EAAMI,SAAqC,IAAlBJ,EAAMI,SACd,MAAjBJ,EAAMK,SAAqC,IAAlBL,EAAMK,QACxC,CAMA,MAAMC,GAAkC,IAAI7mB,MAAe,uCAiBrD8mB,GAA0C,CAC5CC,WAAY,CN39CJ,GADI,GAgHC,IAtDJ,GA3DC,KM2+CRC,GAA+B1P,GAAgC,CACjE2P,SAAS,EACTvP,SAAS,IAEb,IAcMwP,GAAqB,MAA3B,MAAMA,EAEF,sBAAIC,GACA,OAAOzoB,KAAK0oB,UAAUpoB,KAC1B,CACAT,YAAY6d,EAAWiL,EAAQ/Q,EAAUzD,GACrCnU,KAAK0d,UAAYA,EAKjB1d,KAAK4oB,kBAAoB,KAEzB5oB,KAAK0oB,UAAY,IAAIG,KAAgB,MAKrC7oB,KAAK8oB,aAAe,EAKpB9oB,KAAK+oB,WAAc1N,IAGXrb,KAAKgpB,UAAUX,YAAYvM,KAAKmN,GAAWA,IAAY5N,EAAM4N,WAGjEjpB,KAAK0oB,UAAUriB,KAAK,YACpBrG,KAAK4oB,kBAAoBxN,EAAgBC,GAAK,EAMlDrb,KAAKkpB,aAAgB7N,IAIb8N,KAAKtI,MAAQ7gB,KAAK8oB,aA/DV,MAoEZ9oB,KAAK0oB,UAAUriB,KAAKohB,GAAgCpM,GAAS,WAAa,SAC1Erb,KAAK4oB,kBAAoBxN,EAAgBC,GAAK,EAMlDrb,KAAKopB,cAAiB/N,IAGduM,GAAiCvM,GACjCrb,KAAK0oB,UAAUriB,KAAK,aAKxBrG,KAAK8oB,aAAeK,KAAKtI,MACzB7gB,KAAK0oB,UAAUriB,KAAK,SACpBrG,KAAK4oB,kBAAoBxN,EAAgBC,GAAK,EAElDrb,KAAKgpB,SAAW,IACTZ,MACAjU,GAGPnU,KAAKqpB,iBAAmBrpB,KAAK0oB,UAAUniB,KAAK6V,GAAK,IACjDpc,KAAKspB,gBAAkBtpB,KAAKqpB,iBAAiB9iB,QAAKgjB,SAG9C7L,EAAUhG,WACViR,EAAOxD,kBAAkB,KACrBvN,EAASkB,iBAAiB,UAAW9Y,KAAK+oB,WAAYT,IACtD1Q,EAASkB,iBAAiB,YAAa9Y,KAAKkpB,aAAcZ,IAC1D1Q,EAASkB,iBAAiB,aAAc9Y,KAAKopB,cAAed,GAA4B,EAGpG,CACAhS,cACItW,KAAK0oB,UAAUhjB,WACX1F,KAAK0d,UAAUhG,YACfE,SAASsN,oBAAoB,UAAWllB,KAAK+oB,WAAYT,IACzD1Q,SAASsN,oBAAoB,YAAallB,KAAKkpB,aAAcZ,IAC7D1Q,SAASsN,oBAAoB,aAAcllB,KAAKopB,cAAed,IAEvE,QACStoB,KAAKa,UAAI,SAAAC,GAAA,WAAAA,GAA+F0nB,GAj2CVznB,MAi2CiD4d,GAj2CjD5d,MAi2CyEA,OAj2CzEA,MAi2C+FymB,MAj2C/FzmB,MAi2CoHonB,GAA+B,IAA+D,QAChTnoB,KAAK0Y,WAl2CyF3X,MAAE,CAAA4X,MAk2CY6P,EAAqBpX,QAArBoX,EAAqB3nB,UAAAsQ,WAAc,QAAW,EACtK,OA5FKqX,CAAqB,KA2T3B,IAAIgB,GACH,SAAUA,GAMPA,SAA0BA,EAA0BC,UAAe,GAAK,YAKxED,EAA0BA,EAA0BE,SAAc,GAAK,WAXhEF,CAYX,CAZC,CAYEA,IAA0D,CAAC,GAE9D,MAAMG,GAAgC,IAAIroB,MAAe,qCAKnDsoB,GAA8BhR,GAAgC,CAChE2P,SAAS,EACTvP,SAAS,IAEb,IACM6Q,GAAY,MAAlB,MAAMA,EACFhqB,YAAYwkB,EAAS3G,EAAWoM,EAEhClS,EAAUzD,GACNnU,KAAKqkB,QAAUA,EACfrkB,KAAK0d,UAAYA,EACjB1d,KAAK8pB,uBAAyBA,EAE9B9pB,KAAK+pB,QAAU,KAEf/pB,KAAKgqB,gBAAiB,EAKtBhqB,KAAKiqB,6BAA8B,EAEnCjqB,KAAKkqB,aAAe,IAAI7K,IAExBrf,KAAKmqB,uBAAyB,EAO9BnqB,KAAKoqB,4BAA8B,IAAI/K,IAKvCrf,KAAKqqB,qBAAuB,KAGxBrqB,KAAKgqB,gBAAiB,EACtBhqB,KAAKsqB,sBAAwBrS,OAAOkP,WAAW,IAAOnnB,KAAKgqB,gBAAiB,EAAM,EAGtFhqB,KAAKuqB,2BAA6B,IAAIpe,IAKtCnM,KAAKwqB,8BAAiCnP,IAGlC,QAASwG,EAFMzG,EAAgBC,GAEJwG,EAASA,EAAUA,EAAQ4I,cAC/B,UAAfpP,EAAMpa,KACNjB,KAAK0qB,SAASrP,EAAOwG,GAGrB7hB,KAAK2qB,QAAQtP,EAAOwG,EAAO,EAIvC7hB,KAAKskB,UAAY1M,EACjB5X,KAAK4qB,eAAiBzW,GAAS0W,eAAiBrB,GAA0BC,SAC9E,CACAqB,QAAQjJ,EAASkJ,GAAgB,GAC7B,MAAMxqB,EAAgB4c,GAAc0E,GAEpC,IAAK7hB,KAAK0d,UAAUhG,WAAwC,IAA3BnX,EAAcmmB,SAE3C,SAAOsE,SAKX,MAAMC,EProDd,SAASC,GAAerJ,GACpB,GATJ,SAASsJ,KACL,GAA4B,MAAxB5R,GAA8B,CAC9B,MAAM6E,SAAcxG,SAAa,IAAcA,SAASwG,KAAO,KAC/D7E,MAA0B6E,IAASA,EAAKgN,mBAAoBhN,EAAKiN,aACrE,CACA,OAAO9R,EACX,CAGQ4R,GAAsB,CACtB,MAAMF,EAAWpJ,EAAQyJ,YAAczJ,EAAQyJ,cAAgB,KAG/D,UAAWC,WAAe,KAAeA,YAAcN,aAAoBM,WACvE,OAAON,CAEf,CACA,OAAO,IACX,CO2nDyBC,CAAe3qB,IAAkBP,KAAKwrB,eACjDC,EAAazrB,KAAKkqB,aAAapa,IAAIvP,GAEzC,GAAIkrB,EACA,OAAIV,IAIAU,EAAWV,eAAgB,GAExBU,EAAWC,QAGtB,MAAMC,EAAO,CACTZ,cAAeA,EACfW,QAAS,IAAIvf,IACb8e,YAEJ,OAAAjrB,KAAKkqB,aAAard,IAAItM,EAAeorB,GACrC3rB,KAAK4rB,yBAAyBD,GACvBA,EAAKD,OAChB,CACAG,eAAehK,GACX,MAAMthB,EAAgB4c,GAAc0E,GAC9BiK,EAAc9rB,KAAKkqB,aAAapa,IAAIvP,GACtCurB,IACAA,EAAYJ,QAAQhmB,WACpB1F,KAAK+rB,YAAYxrB,GACjBP,KAAKkqB,aAAa8B,OAAOzrB,GACzBP,KAAKisB,uBAAuBH,GAEpC,CACAI,SAASrK,EAASsK,EAAQhY,GACtB,MAAM5T,EAAgB4c,GAAc0E,GAKhCthB,IAJmBP,KAAKwrB,eAAevQ,cAKvCjb,KAAKosB,wBAAwB7rB,GAAesD,QAAQ,EAAEwoB,EAAgBV,KAAU3rB,KAAKssB,eAAeD,EAAgBF,EAAQR,KAG5H3rB,KAAKusB,WAAWJ,GAEmB,mBAAxB5rB,EAAc+lB,OACrB/lB,EAAc+lB,MAAMnS,GAGhC,CACAmC,cACItW,KAAKkqB,aAAarmB,QAAQ,CAAC2oB,EAAO3K,IAAY7hB,KAAK6rB,eAAehK,GACtE,CAEA2J,eACI,OAAOxrB,KAAKskB,WAAa1M,QAC7B,CAEA6U,aAEI,OADYzsB,KAAKwrB,eACN7I,aAAe1K,MAC9B,CACAyU,gBAAgBC,GACZ,OAAI3sB,KAAK+pB,QAGD/pB,KAAKiqB,4BACEjqB,KAAK4sB,2BAA2BD,GAAoB,QAAU,UAG9D3sB,KAAK+pB,QAYhB/pB,KAAKgqB,gBAAkBhqB,KAAK6sB,iBACrB7sB,KAAK6sB,iBAMZF,GAAoB3sB,KAAK8sB,iCAAiCH,GACnD,QAEJ,SACX,CASAC,2BAA2BD,GAWvB,OAAQ3sB,KAAK4qB,iBAAmBpB,GAA0BE,YACpDiD,GAAkBI,SAAS/sB,KAAK8pB,uBAAuBlB,kBACjE,CAMAmD,YAAYlK,EAASsK,GACjBtK,EAAQgF,UAAUmG,OAAO,gBAAiBb,GAC1CtK,EAAQgF,UAAUmG,OAAO,oBAAgC,UAAXb,GAC9CtK,EAAQgF,UAAUmG,OAAO,uBAAmC,aAAXb,GACjDtK,EAAQgF,UAAUmG,OAAO,oBAAgC,UAAXb,GAC9CtK,EAAQgF,UAAUmG,OAAO,sBAAkC,YAAXb,EACpD,CAQAI,WAAWJ,EAAQc,GAAoB,GACnCjtB,KAAKqkB,QAAQc,kBAAkB,KAC3BnlB,KAAK+pB,QAAUoC,EACfnsB,KAAKiqB,4BAAyC,UAAXkC,GAAsBc,EAMrDjtB,KAAK4qB,iBAAmBpB,GAA0BC,YAClDyD,aAAaltB,KAAKmtB,kBAElBntB,KAAKmtB,iBAAmBhG,WAAW,IAAOnnB,KAAK+pB,QAAU,KAD9C/pB,KAAKiqB,4BAhkBR,IAgkBwD,GAEpE,EAER,CAMAS,SAASrP,EAAOwG,GAOZ,MAAMiK,EAAc9rB,KAAKkqB,aAAapa,IAAI+R,GACpC8K,EAAmBvR,EAAgBC,IACpCyQ,IAAiBA,EAAYf,eAAiBlJ,IAAY8K,GAG/D3sB,KAAKssB,eAAezK,EAAS7hB,KAAK0sB,gBAAgBC,GAAmBb,EACzE,CAMAnB,QAAQtP,EAAOwG,GAGX,MAAMiK,EAAc9rB,KAAKkqB,aAAapa,IAAI+R,IACrCiK,GACAA,EAAYf,eACT1P,EAAM+R,yBAAyBC,MAC/BxL,EAAQkL,SAAS1R,EAAM+R,iBAG/BptB,KAAK+rB,YAAYlK,GACjB7hB,KAAKstB,YAAYxB,EAAa,MAClC,CACAwB,YAAY3B,EAAMQ,GACVR,EAAKD,QAAQ6B,UAAUtpB,QACvBjE,KAAKqkB,QAAQhD,IAAI,IAAMsK,EAAKD,QAAQrlB,KAAK8lB,GAEjD,CACAP,yBAAyBE,GACrB,IAAK9rB,KAAK0d,UAAUhG,UAChB,OAEJ,MAAMuT,EAAWa,EAAYb,SACvBuC,EAAyBxtB,KAAKoqB,4BAA4Bta,IAAImb,IAAa,EAC5EuC,GACDxtB,KAAKqkB,QAAQc,kBAAkB,KAC3B8F,EAASnS,iBAAiB,QAAS9Y,KAAKwqB,8BAA+BZ,IACvEqB,EAASnS,iBAAiB,OAAQ9Y,KAAKwqB,8BAA+BZ,GAA2B,GAGzG5pB,KAAKoqB,4BAA4Bvd,IAAIoe,EAAUuC,EAAyB,GAElC,KAAhCxtB,KAAKmqB,yBAGPnqB,KAAKqkB,QAAQc,kBAAkB,KACZnlB,KAAKysB,aACb3T,iBAAiB,QAAS9Y,KAAKqqB,qBAAoB,GAG9DrqB,KAAK8pB,uBAAuBT,iBACvB9iB,QAAKgb,MAAUvhB,KAAKuqB,6BACpBrkB,UAAUunB,IACXztB,KAAKusB,WAAWkB,GAAU,EAA4B,GAGlE,CACAxB,uBAAuBH,GACnB,MAAMb,EAAWa,EAAYb,SAC7B,GAAIjrB,KAAKoqB,4BAA4BlM,IAAI+M,GAAW,CAChD,MAAMuC,EAAyBxtB,KAAKoqB,4BAA4Bta,IAAImb,GAChEuC,EAAyB,EACzBxtB,KAAKoqB,4BAA4Bvd,IAAIoe,EAAUuC,EAAyB,IAGxEvC,EAAS/F,oBAAoB,QAASllB,KAAKwqB,8BAA+BZ,IAC1EqB,EAAS/F,oBAAoB,OAAQllB,KAAKwqB,8BAA+BZ,IACzE5pB,KAAKoqB,4BAA4B4B,OAAOf,GAEhD,GAEOjrB,KAAKmqB,yBACOnqB,KAAKysB,aACbvH,oBAAoB,QAASllB,KAAKqqB,sBAEzCrqB,KAAKuqB,2BAA2BlkB,OAEhC6mB,aAAaltB,KAAKsqB,uBAClB4C,aAAaltB,KAAKmtB,kBAE1B,CAEAb,eAAezK,EAASsK,EAAQL,GAC5B9rB,KAAK+rB,YAAYlK,EAASsK,GAC1BnsB,KAAKstB,YAAYxB,EAAaK,GAC9BnsB,KAAK6sB,iBAAmBV,CAC5B,CAMAC,wBAAwBvK,GACpB,MAAM6L,EAAU,GAChB,OAAA1tB,KAAKkqB,aAAarmB,QAAQ,CAAC8nB,EAAMU,MACzBA,IAAmBxK,GAAY8J,EAAKZ,eAAiBsB,EAAeU,SAASlL,KAC7E6L,EAAQjmB,KAAK,CAAC4kB,EAAgBV,GAAK,GAGpC+B,CACX,CAMAZ,iCAAiCH,GAC7B,MAAQ/D,kBAAmB+E,EAAkBlF,sBAAuBzoB,KAAK8pB,uBAIzE,GAA2B,UAAvBrB,IACCkF,GACDA,IAAqBhB,GACU,UAA9BA,EAAiB9J,UAAsD,aAA9B8J,EAAiB9J,UAC3D8J,EAAiB3kB,SACjB,OAAO,EAEX,MAAM4lB,EAASjB,EAAiBiB,OAChC,GAAIA,EACA,QAASpH,EAAI,EAAGA,EAAIoH,EAAO3pB,OAAQuiB,IAC/B,GAAIoH,EAAOpH,GAAGuG,SAASY,GACnB,OAAO,EAInB,OAAO,CACX,QACS3tB,KAAKa,UAAI,SAAAC,GAAA,WAAAA,GAA+F+oB,GAn8DV9oB,MAm8DwCA,OAn8DxCA,MAm8D8D4d,GAn8D9D5d,MAm8DsFynB,IAn8DtFznB,MAm8DwHymB,KAAQ,GAn8DhIzmB,MAm8D6J4oB,GAA6B,IAA+D,QACvV3pB,KAAK0Y,WAp8DyF3X,MAAE,CAAA4X,MAo8DYkR,EAAYzY,QAAZyY,EAAYhpB,UAAAsQ,WAAc,QAAW,EAC7J,OA1WK0Y,CAAY,KA0alB,IAAIgE,GACH,SAAUA,GACPA,SAAiBA,EAAiBC,KAAU,GAAK,OACjDD,EAAiBA,EAAiBE,eAAoB,GAAK,iBAC3DF,EAAiBA,EAAiBG,eAAoB,GAAK,iBAHpDH,CAIX,CAJC,CAIEA,IAAwC,CAAC,GAE5C,MAAMI,GAA2B,mCAE3BC,GAA2B,mCAE3BC,GAAsC,2BAC5C,IAWMC,GAAwB,MAA9B,MAAMA,EACFvuB,YAAY6d,EAAW9F,GACnB5X,KAAK0d,UAAYA,EACjB1d,KAAKskB,UAAY1M,EACjB5X,KAAKquB,2BAA0BhH,OAAOpI,IACjCW,QAAQ,2BACR1Z,UAAU,KACPlG,KAAKsuB,8BACLtuB,KAAKsuB,6BAA8B,EACnCtuB,KAAKuuB,uCAAqC,EAGtD,CAEAC,sBACI,IAAKxuB,KAAK0d,UAAUhG,UAChB,OAAOmW,GAAiBC,KAK5B,MAAMW,EAAczuB,KAAKskB,UAAUpK,cAAc,OACjDuU,EAAY9U,MAAM+U,gBAAkB,aACpCD,EAAY9U,MAAMa,SAAW,WAC7Bxa,KAAKskB,UAAUzJ,KAAKD,YAAY6T,GAKhC,MAAME,EAAiB3uB,KAAKskB,UAAU3B,aAAe1K,OAC/C2W,EAAgBD,GAAkBA,EAAevM,iBACjDuM,EAAevM,iBAAiBqM,GAChC,KACAI,GAAkBD,GAAiBA,EAAcF,iBAAoB,IAAII,QAAQ,KAAM,IAE7F,OADAL,EAAY1T,SACJ8T,GAEJ,IAAK,aAEL,IAAK,gBACL,IAAK,gBACD,OAAOhB,GAAiBG,eAE5B,IAAK,mBAEL,IAAK,mBACD,OAAOH,GAAiBE,eAEhC,OAAOF,GAAiBC,IAC5B,CACAxX,cACItW,KAAKquB,wBAAwBze,aACjC,CAEA2e,uCACI,IAAKvuB,KAAKsuB,6BAA+BtuB,KAAK0d,UAAUhG,WAAa1X,KAAKskB,UAAUzJ,KAAM,CACtF,MAAMkU,EAAc/uB,KAAKskB,UAAUzJ,KAAKgM,UACxCkI,EAAYhU,OAAOoT,GAAqCF,GAA0BC,IAClFluB,KAAKsuB,6BAA8B,EACnC,MAAMU,EAAOhvB,KAAKwuB,sBACdQ,IAASnB,GAAiBE,eAC1BgB,EAAYxQ,IAAI4P,GAAqCF,IAEhDe,IAASnB,GAAiBG,gBAC/Be,EAAYxQ,IAAI4P,GAAqCD,GAE7D,CACJ,QACSluB,KAAKa,UAAI,SAAAC,GAAA,WAAAA,GAA+FstB,GAhmEVrtB,MAgmEoD4d,GAhmEpD5d,MAgmE4EymB,MAAQ,CAA+C,QACjOxnB,KAAK0Y,WAjmEyF3X,MAAE,CAAA4X,MAimEYyV,EAAwBhd,QAAxBgd,EAAwBvtB,UAAAsQ,WAAc,QAAW,EACzK,OAtEKid,CAAwB,KA+ExBa,GAAU,MAAhB,MAAMA,EACFpvB,YAAYqvB,GACRA,EAAyBX,sCAC7B,QACSvuB,KAAKa,UAAI,SAAAC,GAAA,WAAAA,GAA+FmuB,GA/mEVluB,MA+mEsCqtB,IAAwB,CAA6C,QACzMpuB,KAAK2W,UAhnEyF5V,KAAE,CAAAE,KAgnESguB,GAA8I,QACvPjvB,KAAK4W,UAjnEyF7V,MAAE,CAAAmW,QAAA,CAinE+BwF,KAAqB,EAChK,OAPKuS,CAAU,KCn1EhB,MAAME,GAAe,IAAI7tB,MAAe,cAAe,CACnD6P,WAAY,OACZC,QAGJ,SAASge,KACL,SAAO/H,OAAOG,KAClB,IAGM6H,GAAqB,qHAS3B,IAIMC,GAAc,MAApB,MAAMA,EACFzvB,YAAYykB,GAERtkB,KAAKM,MAAQ,MAEbN,KAAKiW,OAAS,IAAI1F,MACd+T,IAGAtkB,KAAKM,MApBjB,SAASivB,GAAuBC,GAC5B,MAAMlvB,EAAQkvB,GAAUhtB,eAAiB,GACzC,MAAc,SAAVlC,UAA2BwX,UAAc,KAAeA,WAAW2X,SAC5DJ,GAAmB9sB,KAAKuV,UAAU2X,UAAY,MAAQ,MAEhD,QAAVnvB,EAAkB,MAAQ,KACrC,CAcyBivB,EAFGjL,EAAUzJ,KAAOyJ,EAAUzJ,KAAKtJ,IAAM,QACtC+S,EAAU5K,gBAAkB4K,EAAU5K,gBAAgBnI,IAAM,OAClB,OAElE,CACA+E,cACItW,KAAKiW,OAAOvQ,UAChB,QACS1F,KAAKa,UAAI,SAAAC,GAAA,WAAAA,GAA+FwuB,GAAVvuB,MAA0CouB,GAAY,IAA+D,QACnNnvB,KAAK0Y,WADyF3X,MAAE,CAAA4X,MACY2W,EAAcle,QAAdke,EAAczuB,UAAAsQ,WAAc,QAAW,EAC/J,OAjBKme,CAAc,KAwFdI,GAAU,MAAhB,MAAMA,SACO1vB,KAAKa,UAAI,SAAAC,GAAA,WAAAA,GAA+F4uB,EAAU,CAAoD,QACtK1vB,KAAK2W,UA3EyF5V,KAAE,CAAAE,KA2ESyuB,GAA+C,QACxJ1vB,KAAK4W,UA5EyF7V,MAAE,GA4EwB,EACpI,OAJK2uB,CAAU,KC9FhB,MAAMC,GAAyB,IAAIruB,MAAe,oBAAqB,CACnE6P,WAAY,OACZC,QANJ,SAASwe,KACL,OAAO,CACX,IAMA,IAMMC,GAAe,MAArB,MAAMA,EACFhwB,YAAYqvB,EAA0BY,EAAexL,GACjDtkB,KAAK8vB,cAAgBA,EACrB9vB,KAAKskB,UAAYA,EAEjBtkB,KAAK+vB,sBAAuB,EAG5Bb,EAAyBX,uCACpBvuB,KAAK+vB,uBACN/vB,KAAK+vB,sBAAuB,EAepC,CAEAC,gBAAgBzmB,GACZ,OAAIgS,OAG8B,kBAAvBvb,KAAK8vB,cACL9vB,KAAK8vB,gBAEP9vB,KAAK8vB,cAAcvmB,GAChC,QACSvJ,KAAKa,UAAI,SAAAC,GAAA,WAAAA,GAA+F+uB,GAAV9uB,MAA2C4d,IAA3C5d,MAAmF4uB,GAAsB,GAAzG5uB,MAAsIymB,MAAQ,CAA6C,QACzRxnB,KAAK2W,UADyF5V,KAAE,CAAAE,KACS4uB,GAAkE,QAC3K7vB,KAAK4W,UAFyF7V,MAAE,CAAAmW,QAAA,CAEoCwY,GAAYA,KAAgB,EAC5K,OAvCKG,CAAe,KA2sBrB,IAAII,EACH,SAAUA,GACPA,SAAYA,EAAYC,UAAe,GAAK,YAC5CD,EAAYA,EAAYE,QAAa,GAAK,UAC1CF,EAAYA,EAAYG,WAAgB,GAAK,aAC7CH,EAAYA,EAAYI,OAAY,GAAK,SAJlCJ,CAKX,CALC,CAKEA,GAA8B,CAAC,GAIlC,MAAMK,GACFzwB,YAAYC,EAEZ+hB,EAEAsB,EAEAoN,GAAuC,GACnCvwB,KAAKF,UAAYA,EACjBE,KAAK6hB,QAAUA,EACf7hB,KAAKmjB,OAASA,EACdnjB,KAAKuwB,qCAAuCA,EAE5CvwB,KAAKwwB,MAAQP,EAAYI,MAC7B,CAEAI,UACIzwB,KAAKF,UAAU4wB,cAAc1wB,KACjC,EAIJ,MAAM2wB,GAAiC/X,GAAgC,CACnE2P,SAAS,EACTvP,SAAS,IAGb,MAAM4X,GACF/wB,cACIG,KAAKkM,QAAU,IAAImT,IAEnBrf,KAAK6wB,sBAAyBxV,IAC1B,MAAMnY,EAASkY,EAAgBC,GAC3BnY,GACAlD,KAAKkM,QAAQ4D,IAAIuL,EAAMpa,OAAO4C,QAAQ,CAACitB,EAAUjP,MACzCA,IAAY3e,GAAU2e,EAAQkL,SAAS7pB,KACvC4tB,EAASjtB,QAAQud,GAAWA,EAAQ2P,YAAY1V,GAAM,EAE7D,CAGb,CAEA2V,WAAWrI,EAAQpf,EAAMsY,EAAST,GAC9B,MAAM6P,EAAmBjxB,KAAKkM,QAAQ4D,IAAIvG,GAC1C,GAAI0nB,EAAkB,CAClB,MAAMC,EAAqBD,EAAiBnhB,IAAI+R,GAC5CqP,EACAA,EAAmB3S,IAAI6C,GAGvB6P,EAAiBpkB,IAAIgV,EAAS,IAAItE,IAAI,CAAC6D,IAE/C,MAEIphB,KAAKkM,QAAQW,IAAItD,EAAM,IAAI8V,IAAI,CAAC,CAACwC,EAAS,IAAItE,IAAI,CAAC6D,QACnDuH,EAAOxD,kBAAkB,KACrBvN,SAASkB,iBAAiBvP,EAAMvJ,KAAK6wB,sBAAuBF,GAA8B,EAGtG,CAEAQ,cAAc5nB,EAAMsY,EAAST,GACzB,MAAM6P,EAAmBjxB,KAAKkM,QAAQ4D,IAAIvG,GAC1C,IAAK0nB,EACD,OAEJ,MAAMC,EAAqBD,EAAiBnhB,IAAI+R,GAC3CqP,IAGLA,EAAmBlF,OAAO5K,GACM,IAA5B8P,EAAmBE,MACnBH,EAAiBjF,OAAOnK,GAEE,IAA1BoP,EAAiBG,OACjBpxB,KAAKkM,QAAQ8f,OAAOziB,GACpBqO,SAASsN,oBAAoB3b,EAAMvJ,KAAK6wB,sBAAuBF,KAEvE,EAOJ,MAAMU,GAA+B,CACjCC,cAAe,IACfC,aAAc,KAQZC,GAA+B5Y,GAAgC,CACjE2P,SAAS,EACTvP,SAAS,IAGPyY,GAAoB,CAAC,YAAa,cAElCC,GAAkB,CAAC,UAAW,aAAc,WAAY,eAQ9D,MAAMC,UACO3xB,KAAK4xB,cAAgB,IAAIhB,EAAsB,CACxD/wB,YAAYgyB,EAASxN,EAASyN,EAAqBpU,GAC/C1d,KAAK6xB,QAAUA,EACf7xB,KAAKqkB,QAAUA,EACfrkB,KAAK0d,UAAYA,EAEjB1d,KAAK+xB,gBAAiB,EAOtB/xB,KAAKgyB,eAAiB,IAAI3S,IAE1Brf,KAAKiyB,4BAA6B,EAE9BvU,EAAUhG,YACV1X,KAAKkyB,kBAAoB/U,GAAc2U,GAE/C,CAOAK,aAAa/hB,EAAGgiB,EAAGjP,EAAS,CAAC,GACzB,MAAMkP,EAAiBryB,KAAKsyB,eACxBtyB,KAAKsyB,gBAAkBtyB,KAAKkyB,kBAAkBK,wBAC5CC,EAAkB,IAAKnB,MAAiClO,EAAOsP,WACjEtP,EAAOuP,WACPtiB,EAAIiiB,EAAcM,KAAON,EAAcjY,MAAQ,EAC/CgY,EAAIC,EAAcO,IAAMP,EAAc1X,OAAS,GAEnD,MAAMkY,EAAS1P,EAAO0P,QAsR9B,SAASC,GAAyB1iB,EAAGgiB,EAAGW,GACpC,MAAMC,EAAQC,KAAKC,IAAID,KAAKE,IAAI/iB,EAAI2iB,EAAKJ,MAAOM,KAAKE,IAAI/iB,EAAI2iB,EAAKK,QAC5DC,EAAQJ,KAAKC,IAAID,KAAKE,IAAIf,EAAIW,EAAKH,KAAMK,KAAKE,IAAIf,EAAIW,EAAKO,SACjE,OAAOL,KAAKM,KAAKP,EAAQA,EAAQK,EAAQA,EAC7C,CA1RwCP,CAAyB1iB,EAAGgiB,EAAGC,GACzDmB,EAAUpjB,EAAIiiB,EAAcM,KAC5Bc,EAAUrB,EAAIC,EAAcO,IAC5BtB,EAAgBkB,EAAgBlB,cAChCoC,EAAS9b,SAASsC,cAAc,OACtCwZ,EAAO7M,UAAUtI,IAAI,sBACrBmV,EAAO/Z,MAAMgZ,KAAUa,EAAUX,EAAb,KACpBa,EAAO/Z,MAAMiZ,IAASa,EAAUZ,EAAb,KACnBa,EAAO/Z,MAAMgB,OAAqB,EAATkY,EAAH,KACtBa,EAAO/Z,MAAMS,MAAoB,EAATyY,EAAH,KAGD,MAAhB1P,EAAOwQ,QACPD,EAAO/Z,MAAM+U,gBAAkBvL,EAAOwQ,OAE1CD,EAAO/Z,MAAMia,mBAAqB,GAAGtC,MACrCtxB,KAAKkyB,kBAAkBtX,YAAY8Y,GAKnC,MAAMG,EAAiB5b,OAAOmK,iBAAiBsR,GAEzCI,EAAyBD,EAAeD,mBAMxCG,EAAiE,SAPxCF,EAAeG,oBAUf,OAA3BF,GAC2B,WAA3BA,GAEyB,IAAxBzB,EAAcjY,OAAwC,IAAzBiY,EAAc1X,OAE1CsZ,EAAY,IAAI3D,GAAUtwB,KAAM0zB,EAAQvQ,EAAQ4Q,GAKtDL,EAAO/Z,MAAMua,UAAY,mBACzBD,EAAUzD,MAAQP,EAAYC,UACzB/M,EAAOgR,aACRn0B,KAAKo0B,2BAA6BH,GAEtC,IAAII,EAAiB,KAGrB,OAAKN,IAAwCzC,GAAiBkB,EAAgBjB,eAC1EvxB,KAAKqkB,QAAQc,kBAAkB,KAC3B,MAAMmP,EAAkBA,KAEhBD,IACAA,EAAeE,cAAgB,MAEnCrH,aAAaqH,GACbv0B,KAAKw0B,wBAAwBP,EAAS,EAEpCQ,EAAqBA,IAAMz0B,KAAK00B,eAAeT,GAQ/CM,EAAgBpN,WAAWsN,EAAoBnD,EAAgB,KACrEoC,EAAO5a,iBAAiB,gBAAiBwb,GAIzCZ,EAAO5a,iBAAiB,mBAAoB2b,GAC5CJ,EAAiB,CAAEC,kBAAiBG,qBAAoBF,gBAAc,GAI9Ev0B,KAAKgyB,eAAenlB,IAAIonB,EAAWI,IAG/BN,IAAwCzC,IACxCtxB,KAAKw0B,wBAAwBP,GAE1BA,CACX,CAEAvD,cAAcuD,GAEV,GAAIA,EAAUzD,QAAUP,EAAYG,YAAc6D,EAAUzD,QAAUP,EAAYI,OAC9E,OAEJ,MAAMsE,EAAWV,EAAUpS,QACrB2Q,EAAkB,IAAKnB,MAAiC4C,EAAU9Q,OAAOsP,WAG/EkC,EAAShb,MAAMia,mBAAqB,GAAGpB,EAAgBjB,iBACvDoD,EAAShb,MAAMib,QAAU,IACzBX,EAAUzD,MAAQP,EAAYG,YAG1B6D,EAAU1D,uCAAyCiC,EAAgBjB,eACnEvxB,KAAKw0B,wBAAwBP,EAErC,CAEAY,aACI70B,KAAK80B,oBAAoBjxB,QAAQ6vB,GAAUA,EAAOjD,UACtD,CAEAsE,0BACI/0B,KAAK80B,oBAAoBjxB,QAAQ6vB,IACxBA,EAAOvQ,OAAOgR,YACfT,EAAOjD,SAAQ,EAG3B,CAEAuE,mBAAmBlD,GACf,MAAMjQ,EAAU1E,GAAc2U,IACzB9xB,KAAK0d,UAAUhG,YAAcmK,GAAWA,IAAY7hB,KAAKi1B,kBAI9Dj1B,KAAKk1B,uBACLl1B,KAAKi1B,gBAAkBpT,EAGvB4P,GAAkB5tB,QAAQ5C,IACtB0wB,GAAeC,cAAcZ,WAAWhxB,KAAKqkB,QAASpjB,EAAM4gB,EAAS7hB,KAAI,GAEjF,CAKA+wB,YAAY1V,GACW,cAAfA,EAAMpa,KACNjB,KAAKkpB,aAAa7N,GAEE,eAAfA,EAAMpa,KACXjB,KAAKm1B,cAAc9Z,GAGnBrb,KAAKo1B,eAKJp1B,KAAKiyB,6BAMNjyB,KAAKqkB,QAAQc,kBAAkB,KAC3BuM,GAAgB7tB,QAAQ5C,IACpBjB,KAAKi1B,gBAAgBnc,iBAAiB7X,EAAMjB,KAAMwxB,GAA4B,EACjF,GAELxxB,KAAKiyB,4BAA6B,EAE1C,CAEAuC,wBAAwBP,GAChBA,EAAUzD,QAAUP,EAAYC,UAChClwB,KAAKq1B,wBAAwBpB,GAExBA,EAAUzD,QAAUP,EAAYG,YACrCpwB,KAAK00B,eAAeT,EAE5B,CAKAoB,wBAAwBpB,GACpB,MAAMqB,EAA8BrB,IAAcj0B,KAAKo0B,4BAC/CD,cAAeF,EAAU9Q,OACjC8Q,EAAUzD,MAAQP,EAAYE,SAKzBgE,KAAgBmB,IAAgCt1B,KAAK+xB,iBACtDkC,EAAUxD,SAElB,CAEAiE,eAAeT,GACX,MAAMI,EAAiBr0B,KAAKgyB,eAAeliB,IAAImkB,IAAc,KAC7Dj0B,KAAKgyB,eAAehG,OAAOiI,GAEtBj0B,KAAKgyB,eAAeZ,OACrBpxB,KAAKsyB,eAAiB,MAItB2B,IAAcj0B,KAAKo0B,6BACnBp0B,KAAKo0B,2BAA6B,MAEtCH,EAAUzD,MAAQP,EAAYI,OACP,OAAnBgE,IACAJ,EAAUpS,QAAQqD,oBAAoB,gBAAiBmP,EAAeC,iBACtEL,EAAUpS,QAAQqD,oBAAoB,mBAAoBmP,EAAeI,oBACpC,OAAjCJ,EAAeE,eACfrH,aAAamH,EAAeE,gBAGpCN,EAAUpS,QAAQ9G,QACtB,CAEAmO,aAAa7N,GAGT,MAAMka,EAAkB9N,GAAgCpM,GAClDma,EAAmBx1B,KAAKy1B,sBAC1BtM,KAAKtI,MAAQ7gB,KAAKy1B,qBA9QG,KA+QpBz1B,KAAK6xB,QAAQ6D,iBAAmBH,IAAoBC,IACrDx1B,KAAK+xB,gBAAiB,EACtB/xB,KAAKmyB,aAAa9W,EAAMsa,QAASta,EAAMua,QAAS51B,KAAK6xB,QAAQgE,cAErE,CAEAV,cAAc9Z,GACV,IAAKrb,KAAK6xB,QAAQ6D,iBAAmB9N,GAAiCvM,GAAQ,CAI1Erb,KAAKy1B,qBAAuBtM,KAAKtI,MACjC7gB,KAAK+xB,gBAAiB,EAGtB,MAAMjK,EAAUzM,EAAM0M,eAGtB,GAAID,EACA,QAAStB,EAAI,EAAGA,EAAIsB,EAAQ7jB,OAAQuiB,IAChCxmB,KAAKmyB,aAAarK,EAAQtB,GAAGmP,QAAS7N,EAAQtB,GAAGoP,QAAS51B,KAAK6xB,QAAQgE,aAGnF,CACJ,CAEAT,eACSp1B,KAAK+xB,iBAGV/xB,KAAK+xB,gBAAiB,EAEtB/xB,KAAK80B,oBAAoBjxB,QAAQ6vB,KAKxBA,EAAOvQ,OAAOgR,aAFDT,EAAOlD,QAAUP,EAAYE,SAC1CuD,EAAOvQ,OAAO2S,sBAAwBpC,EAAOlD,QAAUP,EAAYC,YAEpEwD,EAAOjD,SAAQ,GAG3B,CACAqE,oBACI,OAAOlvB,MAAMnC,KAAKzD,KAAKgyB,eAAehuB,OAC1C,CAEAkxB,uBACI,MAAMa,EAAU/1B,KAAKi1B,gBACjBc,IACAtE,GAAkB5tB,QAAQ5C,GAAQ0wB,GAAeC,cAAcT,cAAclwB,EAAM80B,EAAS/1B,OACxFA,KAAKiyB,6BACLP,GAAgB7tB,QAAQ5C,GAAQ80B,EAAQ7Q,oBAAoBjkB,EAAMjB,KAAMwxB,KACxExxB,KAAKiyB,4BAA6B,GAG9C,EAYJ,MAAM+D,GAA4B,IAAI10B,MAAe,6BAA6B,IAC5E20B,GAAS,MAAf,MAAMA,EAKF,YAAIjuB,GACA,OAAOhI,KAAKk2B,SAChB,CACA,YAAIluB,CAAS1H,GACLA,GACAN,KAAK+0B,0BAET/0B,KAAKk2B,UAAY51B,EACjBN,KAAKm2B,8BACT,CAKA,WAAIJ,GACA,OAAO/1B,KAAKo2B,UAAYp2B,KAAKD,YAAYQ,aAC7C,CACA,WAAIw1B,CAAQA,GACR/1B,KAAKo2B,SAAWL,EAChB/1B,KAAKm2B,8BACT,CACAt2B,YAAYE,EAAa4oB,EAAQ0N,EAAUC,EAAeC,GACtDv2B,KAAKD,YAAcA,EACnBC,KAAKu2B,eAAiBA,EAMtBv2B,KAAK6yB,OAAS,EACd7yB,KAAKk2B,WAAY,EAEjBl2B,KAAKw2B,gBAAiB,EACtBx2B,KAAKy2B,eAAiBH,GAAiB,CAAC,EACxCt2B,KAAK02B,gBAAkB,IAAI/E,GAAe3xB,KAAM2oB,EAAQ5oB,EAAas2B,EACzE,CACAM,WACI32B,KAAKw2B,gBAAiB,EACtBx2B,KAAKm2B,8BACT,CACA7f,cACItW,KAAK02B,gBAAgBxB,sBACzB,CAEAL,aACI70B,KAAK02B,gBAAgB7B,YACzB,CAEAE,0BACI/0B,KAAK02B,gBAAgB3B,yBACzB,CAKA,gBAAIc,GACA,MAAO,CACHnD,SAAU1yB,KAAK0yB,SACfG,OAAQ7yB,KAAK6yB,OACbc,MAAO3zB,KAAK2zB,MACZlB,UAAW,IACJzyB,KAAKy2B,eAAehE,aACK,mBAAxBzyB,KAAKu2B,eAAsC,CAAEjF,cAAe,EAAGC,aAAc,GAAM,CAAC,KACrFvxB,KAAKyyB,WAEZqD,qBAAsB91B,KAAKy2B,eAAeX,qBAElD,CAKA,kBAAIJ,GACA,OAAO11B,KAAKgI,YAAchI,KAAKy2B,eAAezuB,QAClD,CAEAmuB,gCACSn2B,KAAKgI,UAAYhI,KAAKw2B,gBACvBx2B,KAAK02B,gBAAgB1B,mBAAmBh1B,KAAK+1B,QAErD,CAEAa,OAAOC,EAAWzE,EAAI,EAAGjP,GACrB,MAAyB,iBAAd0T,EACA72B,KAAK02B,gBAAgBvE,aAAa0E,EAAWzE,EAAG,IAAKpyB,KAAK61B,gBAAiB1S,IAG3EnjB,KAAK02B,gBAAgBvE,aAAa,EAAG,EAAG,IAAKnyB,KAAK61B,gBAAiBgB,GAElF,QACS72B,KAAKa,UAAI,SAAAC,GAAA,WAAAA,GAA+Fm1B,GAjsCVl1B,MAisCqCA,OAjsCrCA,MAisC+DA,OAjsC/DA,MAisCqF+1B,GAjsCrF/1B,MAisC+Gi1B,GAAyB,GAjsCxIj1B,MAisCqKg2B,MAAqB,IAA8D,QACtV/2B,KAAKgB,UAlsCyFD,MAAE,CAAAE,KAksCJg1B,EAASpzB,UAAA,2CAAAm0B,UAAA,iBAAAtsB,SAAA,EAAA5H,aAAA,SAAAC,EAAAC,GAAA,EAAAD,GAlsCPhC,MAAE,uBAAAiC,EAAAi0B,UAksCK,EAAA1gB,OAAA,CAAAod,MAAA,6BAAAsD,UAAA,qCAAAvE,SAAA,mCAAAG,OAAA,+BAAAJ,UAAA,qCAAAzqB,SAAA,mCAAA+tB,QAAA,kCAAAtf,SAAA,cAAAygB,YAAA,GAAqgB,EACtnB,OAjGKjB,CAAS,KA8ITkB,GAAe,MAArB,MAAMA,SACOn3B,KAAKa,UAAI,SAAAC,GAAA,WAAAA,GAA+Fq2B,EAAe,CAAoD,QAC3Kn3B,KAAK2W,UAlvCyF5V,KAAE,CAAAE,KAkvCSk2B,GAAkG,QAC3Mn3B,KAAK4W,UAnvCyF7V,MAAE,CAAAmW,QAAA,CAmvCoC2Y,GAAiBA,KAAqB,EACtL,OAJKsH,CAAe,KAibrB,MAAMC,GAAuB,CAAEpe,SAAS,GAMlCqe,GAA0B,CAAC,QAAS,YAAa,aAAc,cAE/DC,GAAyB,kCAEzBC,GAAqB,+BAErBC,GAAoB,6BAEpBC,GAAoB,6BAC1B,IAQMC,GAAe,MAArB,MAAMA,EACF73B,cACIG,KAAKskB,aAAY+C,OAAOG,KAAU,CAAEmQ,UAAU,IAC9C33B,KAAKu2B,kBAAiBlP,OAAO0P,MAAuB,CAAEY,UAAU,IAChE33B,KAAK43B,wBAAuBvQ,OAAO2O,GAA2B,CAAE2B,UAAU,IAC1E33B,KAAK0d,aAAY2J,OAAO7P,GACxBxX,KAAKqkB,WAAUgD,OAAOwQ,OACtB73B,KAAK83B,OAAS,IAAIzY,IAKlBrf,KAAK+3B,eAAkB1c,IACnB,MAAM2c,EAAc5c,EAAgBC,GACpC,GAAI2c,aAAuBC,YAAa,CAEpC,MAAMpW,EAAUmW,EAAYE,QAAQ,IAAIZ,OAA2Bt3B,KAAK43B,sBAAsBO,WAAa,QACvGtW,GACA7hB,KAAKo4B,cAAcvW,EAE3B,GAEJ7hB,KAAKqkB,QAAQc,kBAAkB,KAC3B,UAAW9J,KAASgc,GAChBr3B,KAAKskB,WAAWxL,iBAAiBuC,EAAOrb,KAAK+3B,eAAgBX,GAAoB,EAG7F,CACA9gB,cACI,MAAM+hB,EAAQr4B,KAAK83B,OAAO9zB,OAC1B,UAAWs0B,KAAQD,EACfr4B,KAAKu4B,cAAcD,GAEvB,UAAWjd,KAASgc,GAChBr3B,KAAKskB,WAAWY,oBAAoB7J,EAAOrb,KAAK+3B,eAAgBX,GAExE,CAOAoB,gBAAgBF,EAAMnV,GAElBmV,EAAKna,aAAamZ,GAAwBt3B,KAAK43B,sBAAsBO,WAAa,KAE9EhV,EAAOsV,YAAcH,EAAKxW,aAAayV,MACvCe,EAAKna,aAAaoZ,GAAoBpU,EAAOsV,WAAa,IAG1DtV,EAAOuP,UACP4F,EAAKna,aAAaqZ,GAAmB,IAErCrU,EAAOnb,UACPswB,EAAKna,aAAasZ,GAAmB,GAE7C,CAEAiB,UAAUJ,GAEN,OADet4B,KAAK83B,OAAOhoB,IAAIwoB,IACdt4B,KAAKo4B,cAAcE,EACxC,CAEAK,YAAYL,EAAMtwB,GACd,MAAM0rB,EAAS1zB,KAAK83B,OAAOhoB,IAAIwoB,GAE3B5E,EACAA,EAAO1rB,SAAWA,EAKlBA,EACAswB,EAAKna,aAAasZ,GAAmB,IAGrCa,EAAKvR,gBAAgB0Q,GAE7B,CAEAW,cAAcE,GACV,IAAKt4B,KAAKskB,UACN,OAEJ,MAAMsU,EAAiB54B,KAAK83B,OAAOhoB,IAAIwoB,GACvC,GAAIM,EACA,OAAOA,EAGXN,EAAKlS,cAAc,gBAAgBrL,SACnC,MAAM4Z,EAAW30B,KAAKskB,UAAUpK,cAAc,QAC9Cya,EAAS9N,UAAUtI,IAAI,aAAc+Z,EAAK1U,aAAa2T,KACvDe,EAAKO,OAAOlE,GAEZ,MAAMjB,EAAS,IAAIuC,GAAU,IAAI5Y,MAAWsX,GAAW30B,KAAKqkB,QAASrkB,KAAK0d,UAAW1d,KAAK43B,qBAAuB53B,KAAK43B,0BAAuBxxB,EAAWpG,KAAKu2B,eAAiBv2B,KAAKu2B,oBAAiBnwB,GACpMstB,SAAO8C,gBAAiB,EACxB9C,EAAOqC,QAAUuC,EACjB5E,EAAOhB,SAAW4F,EAAKxW,aAAa0V,IACpC9D,EAAO1rB,SAAWswB,EAAKxW,aAAa2V,IACpCz3B,KAAK84B,aAAaR,EAAM5E,GACjBA,CACX,CACAoF,aAAaR,EAAM5E,GACf4E,EAAKvR,gBAAgBuQ,IACrBt3B,KAAK83B,OAAOjrB,IAAIyrB,EAAM5E,EAC1B,CACA6E,cAAcD,GACV,MAAM5E,EAAS1zB,KAAK83B,OAAOhoB,IAAIwoB,GAC3B5E,IAGAA,EAAOpd,cACPtW,KAAK83B,OAAO9L,OAAOsM,GAE3B,QACSt4B,KAAKa,UAAI,SAAAC,GAAA,WAAAA,GAA+F42B,EAAe,CAAsD,QAC7K13B,KAAK0Y,WA7yDyF3X,MAAE,CAAA4X,MA6yDY+e,EAAetmB,QAAfsmB,EAAe72B,UAAAsQ,WAAc,QAAW,EAChK,OAtHKumB,CAAe,KCrwDrB,MAAAqB,GAAA,gCAAAC,GAAAj2B,EAAAC,GAqGiqD,GArGjqD,EAAAD,IAoG2GhC,cAAE,YAAFA,MAAE,eAAFA,SACsjD,EAAAgC,EAAA,OAAAk2B,EADtjDl4B,cAAE,UAAAk4B,EAAAC,YAAFn4B,cAAE,mBAAAk4B,EAAAE,uBAAA,KAAFp4B,CACi4C,oBAAAk4B,EAAAE,uBAAA,OADj4Cp4B,CAC08C,eAAAk4B,EAAAG,qBAAA,KAD18Cr4B,MAAE,IAAAk4B,EAAAI,gBAAA,EAnG7G,MAAMC,GAAuC,IAAIh4B,MAAe,uCAAwC,CACpG6P,WAAY,OACZC,QAGJ,SAASmoB,KACL,MAAO,CAAEC,SAAUC,GACvB,IAIMA,GAAY,IAIW,IACvBC,GAAkB,MAAxB,MAAMA,EASF,SAAI/F,GACA,OAAO3zB,KAAK25B,QAAU35B,KAAK45B,aAC/B,CACA,SAAIjG,CAAMrzB,GACNN,KAAK25B,OAASr5B,CAClB,CACAT,YAAYE,EAAa85B,EAAeC,GACpC95B,KAAKD,YAAcA,EACnBC,KAAK45B,cAAgB,UACrB55B,KAAK+5B,OAAS,EACd/5B,KAAKg6B,UAAYP,GACjBz5B,KAAKi6B,gBACiB,mBAAlBJ,KAAwCC,IAAaA,EAASI,iBAClEl6B,KAAKgvB,KACoD,gBAArDjvB,EAAYQ,cAAcsiB,SAASrgB,cAC7B,gBACA,cACNs3B,IACIA,EAASnG,QACT3zB,KAAK2zB,MAAQ3zB,KAAK45B,cAAgBE,EAASnG,OAE3CmG,EAASN,WACTx5B,KAAKw5B,SAAWM,EAASN,UAEzBM,EAASK,cACTn6B,KAAKm6B,YAAcL,EAASK,aAGxC,CAEA,SAAI75B,GACA,MAAqB,gBAAdN,KAAKgvB,KAAyBhvB,KAAK+5B,OAAS,CACvD,CACA,SAAIz5B,CAAMkH,GACNxH,KAAK+5B,OAAS9G,KAAKC,IAAI,EAAGD,KAAKmH,IAAI,IAAK5yB,GAAK,GACjD,CAEA,YAAIgyB,GACA,OAAOx5B,KAAKg6B,SAChB,CACA,YAAIR,CAASpI,GACTpxB,KAAKg6B,UAAY5I,GAAQ,CAC7B,CAEA,eAAI+I,GACA,OAAOn6B,KAAKq6B,cAAgBr6B,KAAKw5B,SAAW,EAChD,CACA,eAAIW,CAAY75B,GACZN,KAAKq6B,aAAe/5B,GAAS,CACjC,CAEA+4B,gBACI,OAAQr5B,KAAKw5B,SA9DK,IA8D2B,CACjD,CAEAN,WACI,MAAMoB,EAAiC,EAAvBt6B,KAAKq5B,gBAAsBr5B,KAAKm6B,YAChD,MAAO,OAAOG,KAAWA,GAC7B,CAEAnB,uBACI,OAAO,EAAIlG,KAAKsH,GAAKv6B,KAAKq5B,eAC9B,CAEAmB,oBACI,MAAkB,gBAAdx6B,KAAKgvB,KACGhvB,KAAKm5B,wBAA0B,IAAMn5B,KAAK+5B,QAAW,IAE1D,IACX,CAEAX,qBACI,OAAQp5B,KAAKm6B,YAAcn6B,KAAKw5B,SAAY,GAChD,QACSx5B,KAAKa,UAAI,SAAAC,GAAA,WAAAA,GAA+F44B,GAAV34B,MAA8CA,OAA9CA,MAAwEg2B,MAAqB,GAA7Fh2B,MAA0Hu4B,IAAoC,CAA8C,QAC1St5B,KAAKy6B,UADyF15B,MAAE,CAAAE,KACJy4B,EAAkB72B,UAAA,2CAAA63B,UAAA,SAAA33B,EAAAC,GADd,GACc,EAAAD,GADhBhC,MAAEg4B,GAAA,KAAAh2B,EAAA,KAAA43B,EAAF55B,MAAE45B,EAAF55B,WAAEiC,EAAA43B,mBAAAD,EAAAE,MAAA,GAAA7D,UAAA,QAC0T,cAAa,WAAc,KAAI,sDAAAtsB,SAAA,GAAA5H,aAAA,SAAAC,EAAAC,GAAA,EAAAD,IAD3VhC,MAAE,gBACJ,EADEA,CACD,gBAAD,IADEA,CACC,gBAAM,gBAANiC,EAAAgsB,KAAmBhsB,EAAA1C,MAAW,KAD/BS,CACmC,OAAAiC,EAAAgsB,MADnCjuB,MACF,OAAMiC,EAAA2wB,OADJ5yB,MAAE,QAAAiC,EAAAw2B,SAAA,KAAFz4B,CACgB,SAAAiC,EAAAw2B,SAAA,KADhBz4B,CACgB,+BAAAiC,EAAAw2B,SAAP,KADTz4B,CACgB,iDAAAiC,EAAAw2B,SAAP,MADTz4B,MAAE,0BAAAiC,EAAAi3B,gBAAFl5B,CACgB,uCAAT,kBAASiC,EAAAgsB,MAAA,EAAAzY,OAAA,CAAAod,MAAA,QAAA3E,KAAA,OAAA1uB,MAAA,mBAAuIw6B,OAAetB,SAAA,yBAAsCsB,OAAeX,YAAA,+BAA+CW,QAAerkB,SAAA,uBAAAygB,YAAA,EAAA91B,SAAA,CADzRL,aAAEg6B,MAAA,GAAAC,KAAA,GAAAC,OAAA,0wBAAAC,SAAA,SAAAn4B,EAAAC,GAC6hG,GAD7hG,EAAAD,IAAFhC,MAAE,EAAAi4B,GAAA,yBAAFj4B,aAAE,aAAFA,cAAE,WAAFA,MAAE,cAAFA,wBAAE,UAAFA,CACq/E,UADr/EA,CAC6iF,WAD7iFA,MAAE,KAAFA,cAAE,YAAFA,MAAE,MAAFA,cAAE,aAAFA,MAAE,MAAFA,aAC+hG,EAAAgC,EAAA,OAAAo4B,EAD/hGp6B,MAAE,GAAFA,MAAE,GAAFA,MAAE,UAAAiC,EAAAk2B,YAAFn4B,cAAE,mBAAAiC,EAAAm2B,uBAAA,KAAFp4B,CACknE,oBAAAiC,EAAAw3B,oBAAA,KADlnEz5B,CACorE,eAAAiC,EAAAo2B,qBAAA,KADprEr4B,MAAE,IAAAiC,EAAAq2B,iBAAFt4B,MAAE,GAAFA,MAAE,mBAAAo6B,GAAFp6B,MAAE,GAAFA,MAAE,mBAAAo6B,GAAFp6B,MAAE,GAAFA,MAAE,mBAAAo6B,EAC++F,GAAAC,aAAA,CAA0nOC,MAAgBC,OAAA,ohOAAAC,cAAA,EAAAC,gBAAA,GAA2N,EACh8U,OArFK9B,CAAkB,KA2IlB+B,GAAwB,MAA9B,MAAMA,SACOz7B,KAAKa,UAAI,SAAAC,GAAA,WAAAA,GAA+F26B,EAAwB,CAAoD,QACpLz7B,KAAK2W,UA1DyF5V,KAAE,CAAAE,KA0DSw6B,GAAkJ,QAC3Pz7B,KAAK4W,UA3DyF7V,MAAE,CAAAmW,QAAA,CA2D6CwkB,KAAc7L,KAAqB,EAC5L,OAJK4L,CAAwB,qDC3J9B,MAAME,GAA0B,CAAC,cAAe,kBAC1CC,GAAqB,CAAC,mBAAoB,uBAC1CC,GAAgB,CAAC,KAAM,OACtB,SAASC,GAAU54B,EAAQ64B,EAAW5nB,EAAShP,GAKlD,MAJI62B,MAAW7nB,KACXhP,EAAiBgP,EACjBA,OAAU/N,GAEVjB,EACA,OAAO22B,GAAU54B,EAAQ64B,EAAW5nB,GAAS5N,QAAKC,MAAiBrB,IAEvE,MAAOoZ,EAAKxD,GA+BhB,SAASkhB,GAAc/4B,GACnB,SAAO84B,MAAW94B,EAAO4V,oBAAgB,EAAKkjB,MAAW94B,EAAOgiB,oBACpE,CAjC0B+W,CAAc/4B,GAC9B04B,GAAmBv3B,IAAK63B,GAAgB9a,GAAYle,EAAOg5B,GAAYH,EAAW3a,EAASjN,IAwBrG,SAASgoB,GAAwBj5B,GAC7B,SAAO84B,MAAW94B,EAAO6b,eAAW,EAAKid,MAAW94B,EAAO8b,eAC/D,CAxBYmd,CAAwBj5B,GAClBy4B,GAAwBt3B,IAAI+3B,GAAwBl5B,EAAQ64B,IAwB9E,SAASM,GAA0Bn5B,GAC/B,SAAO84B,MAAW94B,EAAOo5B,MAAE,EAAKN,MAAW94B,EAAOq5B,IACtD,CAzBkBF,CAA0Bn5B,GACtB24B,GAAcx3B,IAAI+3B,GAAwBl5B,EAAQ64B,IAClD,GAClB,IAAKxd,MACGie,MAAYt5B,GACZ,SAAOu5B,MAAUC,GAAcZ,GAAUY,EAAWX,EAAW5nB,GAA/D,EAAuE,EAAElO,OAAU/C,IAG3F,IAAKqb,EACD,MAAM,IAAIoe,UAAU,wBAExB,OAAO,IAAIn3B,KAAYC,IACnB,MAAM2b,EAAUA,IAAIlc,IAASO,EAAWY,KAAK,EAAInB,EAAKjB,OAASiB,EAAOA,EAAK,IAC3EqZ,SAAI6C,GACG,IAAMrG,EAAOqG,EAAO,EAEnC,CACA,SAASgb,GAAwBl5B,EAAQ64B,GACrC,OAAQG,GAAgB9a,GAAYle,EAAOg5B,GAAYH,EAAW3a,EACtE,eCxCO,MAAMwb,GAAyB,CAClC9b,SAAStE,GACL,IAAIqgB,EAAUC,sBACVC,EAASC,qBACb,MAAQC,YAAaL,GACjBK,IACAJ,EAAUI,EAASH,sBACnBC,EAASE,EAASD,sBAEtB,MAAME,EAASL,EAASM,IACpBJ,OAAS32B,EACToW,EAAS2gB,EAAS,GAEtB,OAAO,IAAIC,MAAa,IAAsDL,IAAOG,GACzF,EACAJ,yBAAyB53B,GACrB,MAAQ+3B,YAAaL,GACrB,OAA6DK,GAASH,uBAA0BA,0BAA0B53B,EAC9H,EACA83B,wBAAwB93B,GACpB,MAAQ+3B,YAAaL,GACrB,OAA6DK,GAASD,sBAAyBA,yBAAyB93B,EAC5H,EACA+3B,cAAU72B,kBCtByB,ICDhC,MAAMi3B,WAAgCC,KACzCC,MAAMC,GACFx9B,KAAKy9B,SAAU,EACf,MAAMC,EAAU19B,KAAK29B,WACrB39B,KAAK29B,gBAAav3B,EAClB,MAAQw3B,WAAY59B,KACpB,IAAI0e,EACJ8e,EAASA,GAAUI,EAAQC,QAC3B,MACSnf,EAAQ8e,EAAOM,QAAQN,EAAOhN,MAAOgN,EAAOO,OAC7C,aAEEP,EAASI,EAAQ,KAAOJ,EAAOQ,KAAON,GAAWE,EAAQC,SAEnE,GADA79B,KAAKy9B,SAAU,EACX/e,EAAO,CACP,MAAQ8e,EAASI,EAAQ,KAAOJ,EAAOQ,KAAON,GAAWE,EAAQC,SAC7DL,EAAO5tB,cAEX,MAAM8O,CACV,CACJ,GCnBG,MAAMuf,WAA6BC,KACtCr+B,YAAYwgB,EAAW8d,GACnBl8B,MAAMoe,EAAW8d,GACjBn+B,KAAKqgB,UAAYA,EACjBrgB,KAAKm+B,KAAOA,CAChB,CACAC,eAAe/d,EAAW2d,EAAID,EAAQ,GAClC,OAAc,OAAVA,GAAkBA,EAAQ,EACnB97B,MAAMm8B,eAAe/d,EAAW2d,EAAID,IAE/C1d,EAAUud,QAAQn2B,KAAKzH,MAChBqgB,EAAUsd,aAAetd,EAAUsd,WAAaf,GAAuBE,sBAAsB,IAAMzc,EAAUkd,WAAMn3B,KAC9H,CACAi4B,eAAehe,EAAW2d,EAAID,EAAQ,GAClC,IAAIO,EACJ,GAAa,MAATP,EAAgBA,EAAQ,EAAI/9B,KAAK+9B,MAAQ,EACzC,OAAO97B,MAAMo8B,eAAehe,EAAW2d,EAAID,GAE/C,MAAQH,WAAYvd,EACV,MAAN2d,IAAsD,QAAtCM,EAAKV,EAAQA,EAAQ35B,OAAS,UAAuB,IAAPq6B,OAAgB,EAASA,EAAGN,MAAQA,IAClGpB,GAAuBI,qBAAqBgB,GAC5C3d,EAAUsd,gBAAav3B,EAG/B,IC1BJ,IACIm4B,GADAC,GAAa,EAEjB,MAAMC,GAAgB,CAAC,EACvB,SAASC,GAAmBxB,GACxB,OAAIA,KAAUuB,YACHA,GAAcvB,IACd,EAGf,CACO,MAAMyB,GAAY,CACrBC,aAAarqB,GACT,MAAM2oB,EAASsB,KACfC,UAAcvB,IAAU,EACnBqB,KACDA,GAAWp/B,QAAQC,WAEvBm/B,GAASl/B,KAAK,IAAMq/B,GAAmBxB,IAAW3oB,KAC3C2oB,CACX,EACA2B,eAAe3B,GACXwB,GAAmBxB,EACvB,ICrBI0B,gBAAcC,mBAAmBF,GAC5BG,GAAoB,CAC7BF,gBAAgB15B,GACZ,MAAQ+3B,YAAa6B,GACrB,OAA6D7B,GAAS2B,cAAiBA,OAAiB15B,EAC5G,EACA25B,eAAe3B,GACX,MAAQD,YAAa6B,GACrB,OAA6D7B,GAAS4B,gBAAmBA,IAAgB3B,EAC7G,EACAD,cAAU72B,GCTe,ICDtB,MAAM24B,WAAsBzB,KAC/BC,MAAMC,GACFx9B,KAAKy9B,SAAU,EACf,MAAMC,EAAU19B,KAAK29B,WACrB39B,KAAK29B,gBAAav3B,EAClB,MAAQw3B,WAAY59B,KACpB,IAAI0e,EACJ8e,EAASA,GAAUI,EAAQC,QAC3B,MACSnf,EAAQ8e,EAAOM,QAAQN,EAAOhN,MAAOgN,EAAOO,OAC7C,aAEEP,EAASI,EAAQ,KAAOJ,EAAOQ,KAAON,GAAWE,EAAQC,SAEnE,GADA79B,KAAKy9B,SAAU,EACX/e,EAAO,CACP,MAAQ8e,EAASI,EAAQ,KAAOJ,EAAOQ,KAAON,GAAWE,EAAQC,SAC7DL,EAAO5tB,cAEX,MAAM8O,CACV,CACJ,GCnBG,MAAMsgB,WAAmBd,KAC5Br+B,YAAYwgB,EAAW8d,GACnBl8B,MAAMoe,EAAW8d,GACjBn+B,KAAKqgB,UAAYA,EACjBrgB,KAAKm+B,KAAOA,CAChB,CACAC,eAAe/d,EAAW2d,EAAID,EAAQ,GAClC,OAAc,OAAVA,GAAkBA,EAAQ,EACnB97B,MAAMm8B,eAAe/d,EAAW2d,EAAID,IAE/C1d,EAAUud,QAAQn2B,KAAKzH,MAChBqgB,EAAUsd,aAAetd,EAAUsd,WAAamB,GAAkBF,aAAave,EAAUkd,MAAMh+B,KAAK8gB,OAAWja,KAC1H,CACAi4B,eAAehe,EAAW2d,EAAID,EAAQ,GAClC,IAAIO,EACJ,GAAa,MAATP,EAAgBA,EAAQ,EAAI/9B,KAAK+9B,MAAQ,EACzC,OAAO97B,MAAMo8B,eAAehe,EAAW2d,EAAID,GAE/C,MAAQH,WAAYvd,EACV,MAAN2d,IAAsD,QAAtCM,EAAKV,EAAQA,EAAQ35B,OAAS,UAAuB,IAAPq6B,OAAgB,EAASA,EAAGN,MAAQA,IAClGc,GAAkBD,eAAeb,GAC7B3d,EAAUsd,aAAeK,IACzB3d,EAAUsd,gBAAav3B,GAInC,mBCzBG,SAAS64B,GAAUC,EAAU7e,EAAYC,MAC5C,OCDG,SAAS6e,GAAMC,GAClB,SAAO7e,MAAQ,CAACtV,EAAQxF,KACpB,IAAIO,GAAW,EACXya,EAAY,KACZ4e,EAAqB,KACrBC,GAAa,EACjB,MAAMC,EAAcA,KAGhB,GAFwEF,GAAmBzvB,cAC3FyvB,EAAqB,KACjBr5B,EAAU,CACVA,GAAW,EACX,MAAM1F,EAAQmgB,EACdA,EAAY,KACZhb,EAAWY,KAAK/F,EACpB,CACAg/B,GAAc75B,EAAWC,UAAS,EAEhC85B,EAAkBA,KACpBH,EAAqB,KACrBC,GAAc75B,EAAWC,UAAS,EAEtCuF,EAAO/E,aAAUC,MAAyBV,EAAanF,IACnD0F,GAAW,EACXya,EAAYngB,EACP++B,MACDp5B,OAAUm5B,EAAiB9+B,IAAQ4F,UAAWm5B,KAAqBl5B,MAAyBV,EAAY85B,EAAaC,GAAiB,EAE3I,KACCF,GAAa,IACXt5B,IAAaq5B,GAAsBA,EAAmBI,SAAWh6B,EAAWC,UAAS,GACzF,EAEV,CD/BWy5B,CAAM,OAAMO,MAAMR,EAAU7e,GACvC,CE0NA,IAIMsf,GAAgB,MAAtB,MAAMA,EACF9/B,YAAYwkB,EAAS3G,EAAW9F,GAC5B5X,KAAKqkB,QAAUA,EACfrkB,KAAK0d,UAAYA,EAEjB1d,KAAK4/B,UAAY,IAAIzzB,IAErBnM,KAAK6/B,oBAAsB,KAE3B7/B,KAAK8/B,eAAiB,EAKtB9/B,KAAK+/B,iBAAmB,IAAI1gB,IAC5Brf,KAAKskB,UAAY1M,CACrB,CAMAooB,SAASC,GACAjgC,KAAK+/B,iBAAiB7hB,IAAI+hB,IAC3BjgC,KAAK+/B,iBAAiBlzB,IAAIozB,EAAYA,EAAWC,kBAAkBh6B,UAAU,IAAMlG,KAAK4/B,UAAUv5B,KAAK45B,IAE/G,CAKAE,WAAWF,GACP,MAAMG,EAAsBpgC,KAAK+/B,iBAAiBjwB,IAAImwB,GAClDG,IACAA,EAAoBxwB,cACpB5P,KAAK+/B,iBAAiB/T,OAAOiU,GAErC,CAWAI,SAASC,EArDe,IAsDpB,OAAKtgC,KAAK0d,UAAUhG,UAGb,IAAIlS,KAAY2b,IACdnhB,KAAK6/B,qBACN7/B,KAAKugC,qBAIT,MAAMC,EAAeF,EAAgB,EAC/BtgC,KAAK4/B,UAAUr5B,KAAK04B,GAAUqB,IAAgBp6B,UAAUib,GACxDnhB,KAAK4/B,UAAU15B,UAAUib,GAC/B,OAAAnhB,KAAK8/B,iBACE,KACHU,EAAa5wB,cACb5P,KAAK8/B,iBACA9/B,KAAK8/B,gBACN9/B,KAAKygC,uBAAsB,CAEnC,IACH,EAnBUzV,QAoBf,CACA1U,cACItW,KAAKygC,wBACLzgC,KAAK+/B,iBAAiBl8B,QAAQ,CAAC3D,EAAGwgC,IAAc1gC,KAAKmgC,WAAWO,IAChE1gC,KAAK4/B,UAAUl6B,UACnB,CAOAi7B,iBAAiB7O,EAAqBwO,GAClC,MAAMM,EAAY5gC,KAAK6gC,4BAA4B/O,GACnD,OAAO9xB,KAAKqgC,SAASC,GAAe/5B,QAAKzB,MAAO5B,IACpCA,GAAU09B,EAAUrtB,QAAQrQ,IAAU,GAEtD,CAEA29B,4BAA4B/O,GACxB,MAAMgP,EAAsB,GAC5B,OAAA9gC,KAAK+/B,iBAAiBl8B,QAAQ,CAACk9B,EAAed,KACtCjgC,KAAKghC,2BAA2Bf,EAAYnO,IAC5CgP,EAAoBr5B,KAAKw4B,EAAU,GAGpCa,CACX,CAEArU,aACI,OAAOzsB,KAAKskB,UAAU3B,aAAe1K,MACzC,CAEA+oB,2BAA2Bf,EAAYnO,GACnC,IAAIjQ,EAAU1E,GAAc2U,GACxBmP,EAAoBhB,EAAWiB,gBAAgB3gC,cAGnD,MACQshB,GAAWof,EACX,OAAO,QAELpf,EAAUA,EAAQ4I,eAC5B,OAAO,CACX,CAEA8V,qBACIvgC,KAAK6/B,oBAAsB7/B,KAAKqkB,QAAQc,kBAAkB,IAE/C2W,GADQ97B,KAAKysB,aACI7U,SAAU,UAAU1R,UAAU,IAAMlG,KAAK4/B,UAAUv5B,QAEnF,CAEAo6B,wBACQzgC,KAAK6/B,sBACL7/B,KAAK6/B,oBAAoBjwB,cACzB5P,KAAK6/B,oBAAsB,KAEnC,QACS7/B,KAAKa,UAAI,SAAAC,GAAA,WAAAA,GAA+F6+B,GArKV5+B,MAqK4CA,OArK5CA,MAqKkE4d,GArKlE5d,MAqK0FymB,KAAQ,IAA+D,QAC/PxnB,KAAK0Y,WAtKyF3X,MAAE,CAAA4X,MAsKYgnB,EAAgBvuB,QAAhBuuB,EAAgB9+B,UAAAsQ,WAAc,QAAW,EACjK,OAnIKwuB,CAAgB,KAmJhBwB,GAAa,MAAnB,MAAMA,EACFthC,YAAYkC,EAAYq/B,EAAkBzY,EAAQpX,GAC9CvR,KAAK+B,WAAaA,EAClB/B,KAAKohC,iBAAmBA,EACxBphC,KAAK2oB,OAASA,EACd3oB,KAAKuR,IAAMA,EACXvR,KAAKqhC,WAAa,IAAIl1B,IACtBnM,KAAKshC,iBAAmB,IAAI97B,KAAY2b,GAAanhB,KAAK2oB,OAAOxD,kBAAkB,IAAM2W,GAAU97B,KAAK+B,WAAWxB,cAAe,UAC7HgG,QAAKgb,MAAUvhB,KAAKqhC,aACpBn7B,UAAUib,IACnB,CACAwV,WACI32B,KAAKohC,iBAAiBpB,SAAShgC,KACnC,CACAsW,cACItW,KAAKohC,iBAAiBjB,WAAWngC,MACjCA,KAAKqhC,WAAWh7B,OAChBrG,KAAKqhC,WAAW37B,UACpB,CAEAw6B,kBACI,OAAOlgC,KAAKshC,gBAChB,CAEAJ,gBACI,OAAOlhC,KAAK+B,UAChB,CASA+X,SAAS3F,GACL,MAAMd,EAAKrT,KAAK+B,WAAWxB,cACrBghC,EAAQvhC,KAAKuR,KAAyB,OAAlBvR,KAAKuR,IAAIjR,MAEf,MAAhB6T,EAAQwe,OACRxe,EAAQwe,KAAO4O,EAAQptB,EAAQqtB,IAAMrtB,EAAQstB,OAE5B,MAAjBttB,EAAQif,QACRjf,EAAQif,MAAQmO,EAAQptB,EAAQstB,MAAQttB,EAAQqtB,KAG9B,MAAlBrtB,EAAQmf,SACRnf,EAAQye,IACJvf,EAAGquB,aAAeruB,EAAGsuB,aAAextB,EAAQmf,QAGhDiO,GAASvnB,MAA0Bf,EAAkBC,QACjC,MAAhB/E,EAAQwe,OACRxe,EAAQif,MACJ/f,EAAGuuB,YAAcvuB,EAAGwuB,YAAc1tB,EAAQwe,MAE9C3Y,MAA0Bf,EAAkBG,SAC5CjF,EAAQwe,KAAOxe,EAAQif,MAElBpZ,MAA0Bf,EAAkBE,UACjDhF,EAAQwe,KAAOxe,EAAQif,OAASjf,EAAQif,MAAQjf,EAAQif,QAIvC,MAAjBjf,EAAQif,QACRjf,EAAQwe,KACJtf,EAAGuuB,YAAcvuB,EAAGwuB,YAAc1tB,EAAQif,OAGtDpzB,KAAK8hC,sBAAsB3tB,EAC/B,CACA2tB,sBAAsB3tB,GAClB,MAAMd,EAAKrT,KAAK+B,WAAWxB,cACvBiZ,KACAnG,EAAGyG,SAAS3F,IAGO,MAAfA,EAAQye,MACRvf,EAAG0uB,UAAY5tB,EAAQye,KAEP,MAAhBze,EAAQwe,OACRtf,EAAGyH,WAAa3G,EAAQwe,MAGpC,CAUAqP,oBAAoBv+B,GAChB,MAAMw+B,EAAO,OACPC,EAAQ,QACR7uB,EAAKrT,KAAK+B,WAAWxB,cAC3B,GAAY,OAARkD,EACA,OAAO4P,EAAG0uB,UAEd,GAAY,UAARt+B,EACA,OAAO4P,EAAGquB,aAAeruB,EAAGsuB,aAAetuB,EAAG0uB,UAGlD,MAAMR,EAAQvhC,KAAKuR,KAAyB,OAAlBvR,KAAKuR,IAAIjR,MAOnC,MANY,SAARmD,EACAA,EAAO89B,EAAQW,EAAQD,EAEV,OAARx+B,IACLA,EAAO89B,EAAQU,EAAOC,GAEtBX,GAASvnB,MAA0Bf,EAAkBG,SAGjD3V,GAAQw+B,EACD5uB,EAAGuuB,YAAcvuB,EAAGwuB,YAAcxuB,EAAGyH,WAGrCzH,EAAGyH,WAGTymB,GAASvnB,MAA0Bf,EAAkBE,QAGtD1V,GAAQw+B,EACD5uB,EAAGyH,WAAazH,EAAGuuB,YAAcvuB,EAAGwuB,aAGnCxuB,EAAGyH,WAMXrX,GAAQw+B,EACD5uB,EAAGyH,WAGHzH,EAAGuuB,YAAcvuB,EAAGwuB,YAAcxuB,EAAGyH,UAGxD,QACS9a,KAAKa,UAAI,SAAAC,GAAA,WAAAA,GAA+FqgC,GAtUVpgC,MAsUyCA,OAtUzCA,MAsUmE4+B,IAtUnE5+B,MAsUgGA,OAtUhGA,MAsUsHohC,GAAiB,IAA8D,QACnSniC,KAAKgB,UAvUyFD,MAAE,CAAAE,KAuUJkgC,EAAat+B,UAAA,mDAAAq0B,YAAA,GAAsF,EAC3M,OAjJKiK,CAAa,KAkKbiB,GAAa,MAAnB,MAAMA,EACFviC,YAAY6d,EAAWiL,EAAQ/Q,GAC3B5X,KAAK0d,UAAYA,EAEjB1d,KAAKqiC,QAAU,IAAIl2B,IAEnBnM,KAAKsiC,gBAAmBjnB,IACpBrb,KAAKqiC,QAAQh8B,KAAKgV,EAAK,EAE3Brb,KAAKskB,UAAY1M,EACjB+Q,EAAOxD,kBAAkB,KACrB,GAAIzH,EAAUhG,UAAW,CACrB,MAAMO,EAASjY,KAAKysB,aAGpBxU,EAAOa,iBAAiB,SAAU9Y,KAAKsiC,iBACvCrqB,EAAOa,iBAAiB,oBAAqB9Y,KAAKsiC,gBACtD,CAGAtiC,KAAKiW,SAAS/P,UAAU,IAAOlG,KAAKuiC,cAAgB,KAAK,EAEjE,CACAjsB,cACI,GAAItW,KAAK0d,UAAUhG,UAAW,CAC1B,MAAMO,EAASjY,KAAKysB,aACpBxU,EAAOiN,oBAAoB,SAAUllB,KAAKsiC,iBAC1CrqB,EAAOiN,oBAAoB,oBAAqBllB,KAAKsiC,gBACzD,CACAtiC,KAAKqiC,QAAQ38B,UACjB,CAEA88B,kBACSxiC,KAAKuiC,eACNviC,KAAKyiC,sBAET,MAAMvhB,EAAS,CAAE9G,MAAOpa,KAAKuiC,cAAcnoB,MAAOO,OAAQ3a,KAAKuiC,cAAc5nB,QAE7E,OAAK3a,KAAK0d,UAAUhG,YAChB1X,KAAKuiC,cAAgB,MAElBrhB,CACX,CAEAwhB,kBAUI,MAAMC,EAAiB3iC,KAAK4iC,6BACpBxoB,QAAOO,UAAW3a,KAAKwiC,kBAC/B,MAAO,CACH5P,IAAK+P,EAAe/P,IACpBD,KAAMgQ,EAAehQ,KACrBW,OAAQqP,EAAe/P,IAAMjY,EAC7ByY,MAAOuP,EAAehQ,KAAOvY,EAC7BO,SACAP,QAER,CAEAwoB,4BAGI,IAAK5iC,KAAK0d,UAAUhG,UAChB,MAAO,CAAEkb,IAAK,EAAGD,KAAM,GAQ3B,MAAM/a,EAAW5X,KAAKskB,UAChBrM,EAASjY,KAAKysB,aACd/S,EAAkB9B,EAAS8B,gBAC3BmpB,EAAenpB,EAAgB6Y,wBAWrC,MAAO,CAAEK,KAVIiQ,EAAajQ,KACtBhb,EAASiD,KAAKknB,WACd9pB,EAAO6qB,SACPppB,EAAgBqoB,WAChB,EAMUpP,MALAkQ,EAAalQ,MACvB/a,EAASiD,KAAKC,YACd7C,EAAO8qB,SACPrpB,EAAgBoB,YAChB,EAER,CAMA7E,OAAO+sB,EAxGiB,IAyGpB,OAAOA,EAAe,EAAIhjC,KAAKqiC,QAAQ97B,KAAK04B,GAAU+D,IAAiBhjC,KAAKqiC,OAChF,CAEA5V,aACI,OAAOzsB,KAAKskB,UAAU3B,aAAe1K,MACzC,CAEAwqB,sBACI,MAAMxqB,EAASjY,KAAKysB,aACpBzsB,KAAKuiC,cAAgBviC,KAAK0d,UAAUhG,UAC9B,CAAE0C,MAAOnC,EAAOgrB,WAAYtoB,OAAQ1C,EAAOirB,aAC3C,CAAE9oB,MAAO,EAAGO,OAAQ,EAC9B,QACS3a,KAAKa,UAAI,SAAAC,GAAA,WAAAA,GAA+FshC,GA1cVrhC,MA0cyC4d,GA1czC5d,MA0ciEA,OA1cjEA,MA0cuFymB,KAAQ,IAA+D,QAC5PxnB,KAAK0Y,WA3cyF3X,MAAE,CAAA4X,MA2cYypB,EAAahxB,QAAbgxB,EAAavhC,UAAAsQ,WAAc,QAAW,EAC9J,OAnHKixB,CAAa,KA+4Bbe,GAAmB,MAAzB,MAAMA,SACOnjC,KAAKa,UAAI,SAAAC,GAAA,WAAAA,GAA+FqiC,EAAmB,CAAoD,QAC/KnjC,KAAK2W,UA1uCyF5V,KAAE,CAAAE,KA0uCSkiC,GAA4E,QACrLnjC,KAAK4W,UA3uCyF7V,MAAE,GA2uCiC,EAC7I,OAJKoiC,CAAmB,KAenBC,GAAe,MAArB,MAAMA,SACOpjC,KAAKa,UAAI,SAAAC,GAAA,WAAAA,GAA+FsiC,EAAe,CAAoD,QAC3KpjC,KAAK2W,UAzvCyF5V,KAAE,CAAAE,KAyvCSmiC,GAQzE,QAChCpjC,KAAK4W,UAlwCyF7V,MAAE,CAAAmW,QAAA,CAkwCoCwY,GACrIyT,GAAqBzT,GAAYyT,KAAyB,EACrE,OAbKC,CAAe,KCl4CrB,MAAMC,GAEFC,OAAOhL,GASH,OAAAt4B,KAAKujC,cAAgBjL,EACdA,EAAKgL,OAAOtjC,KACvB,CAEAwjC,SACI,IAAIlL,EAAOt4B,KAAKujC,cACJ,MAARjL,IACAt4B,KAAKujC,cAAgB,KACrBjL,EAAKkL,SAKb,CAEA,cAAIC,GACA,OAA6B,MAAtBzjC,KAAKujC,aAChB,CAKAG,gBAAgBpL,GACZt4B,KAAKujC,cAAgBjL,CACzB,EAKJ,MAAMqL,WAAwBN,GAC1BxjC,YAAYF,EAAWikC,EAAkB1c,EAAU2c,EAA0BC,GACzE7hC,QACAjC,KAAKL,UAAYA,EACjBK,KAAK4jC,iBAAmBA,EACxB5jC,KAAKknB,SAAWA,EAChBlnB,KAAK6jC,yBAA2BA,EAChC7jC,KAAK8jC,iBAAmBA,CAC5B,EAKJ,MAAMC,WAAuBV,GACzBxjC,YAEAmkC,EAEAJ,EAEAK,EAEA/c,GACIjlB,QACAjC,KAAKgkC,YAAcA,EACnBhkC,KAAK4jC,iBAAmBA,EACxB5jC,KAAKikC,QAAUA,EACfjkC,KAAKknB,SAAWA,CACpB,CACA,UAAIiF,GACA,OAAOnsB,KAAKgkC,YAAYjiC,UAC5B,CAMAuhC,OAAOhL,EAAM2L,EAAUjkC,KAAKikC,SACxB,OAAAjkC,KAAKikC,QAAUA,EACRhiC,MAAMqhC,OAAOhL,EACxB,CACAkL,SACI,OAAAxjC,KAAKikC,aAAU79B,EACRnE,MAAMuhC,QACjB,EAOJ,MAAMU,WAAkBb,GACpBxjC,YAAYgiB,GACR5f,QACAjC,KAAK6hB,QAAUA,aAAmBxE,MAAawE,EAAQthB,cAAgBshB,CAC3E,EAMJ,MAAMsiB,GACFtkC,cAEIG,KAAKokC,aAAc,EAEnBpkC,KAAKqkC,gBAAkB,IAC3B,CAEA9d,cACI,QAASvmB,KAAKskC,eAClB,CAEAhB,OAAOiB,GAYH,OAAIA,aAAkBZ,IAClB3jC,KAAKskC,gBAAkBC,EAChBvkC,KAAKwkC,sBAAsBD,IAE7BA,aAAkBR,IACvB/jC,KAAKskC,gBAAkBC,EAChBvkC,KAAKykC,qBAAqBF,IAG5BvkC,KAAKqkC,iBAAmBE,aAAkBL,IAC/ClkC,KAAKskC,gBAAkBC,EAChBvkC,KAAKqkC,gBAAgBE,SAF3B,CAOT,CAEAf,SACQxjC,KAAKskC,kBACLtkC,KAAKskC,gBAAgBZ,gBAAgB,MACrC1jC,KAAKskC,gBAAkB,MAE3BtkC,KAAK0kC,kBACT,CAEAC,UACQ3kC,KAAKumB,eACLvmB,KAAKwjC,SAETxjC,KAAK0kC,mBACL1kC,KAAKokC,aAAc,CACvB,CAEAQ,aAAankC,GACTT,KAAK6kC,WAAapkC,CACtB,CACAikC,mBACQ1kC,KAAK6kC,aACL7kC,KAAK6kC,aACL7kC,KAAK6kC,WAAa,KAE1B,EAaJ,MAAMC,WAAwBX,GAY1BtkC,YAEAklC,EAAeC,EAA2BC,EAASC,EAKnD5gB,GACIriB,QACAjC,KAAK+kC,cAAgBA,EACrB/kC,KAAKglC,0BAA4BA,EACjChlC,KAAKilC,QAAUA,EACfjlC,KAAKklC,iBAAmBA,EAOxBllC,KAAKqkC,gBAAmBE,IAMpB,MAAM1iB,EAAU0iB,EAAO1iB,QAMjBsjB,EAAanlC,KAAKskB,UAAU8gB,cAAc,cAChDvjB,EAAQwD,WAAWC,aAAa6f,EAAYtjB,GAC5C7hB,KAAK+kC,cAAcnqB,YAAYiH,GAC/B7hB,KAAKskC,gBAAkBC,EACvBtiC,MAAM2iC,aAAa,KAEXO,EAAW9f,YACX8f,EAAW9f,WAAWggB,aAAaxjB,EAASsjB,EAAU,EAE7D,EAELnlC,KAAKskB,UAAYA,CACrB,CAMAkgB,sBAAsBD,GAKlB,MAAMe,GAJYf,EAAOV,0BAA4B7jC,KAAKglC,2BAIxBO,wBAAwBhB,EAAO5kC,WACjE,IAAI6lC,EAKJ,OAAIjB,EAAOX,kBACP4B,EAAejB,EAAOX,iBAAiB6B,gBAAgBH,EAAkBf,EAAOX,iBAAiB3/B,OAAQsgC,EAAOrd,UAAYqd,EAAOX,iBAAiB1c,SAAUqd,EAAOT,uBAAoB19B,GACzLpG,KAAK4kC,aAAa,IAAMY,EAAazgB,aAMrCygB,EAAeF,EAAiB/oB,OAAOgoB,EAAOrd,UAAYlnB,KAAKklC,kBAAoB5d,MAASoe,MAC5F1lC,KAAKilC,QAAQU,WAAWH,EAAaI,UACrC5lC,KAAK4kC,aAAa,KAGV5kC,KAAKilC,QAAQY,UAAY,GACzB7lC,KAAKilC,QAAQa,WAAWN,EAAaI,UAEzCJ,EAAazgB,SAAQ,IAK7B/kB,KAAK+kC,cAAcnqB,YAAY5a,KAAK+lC,sBAAsBP,IAC1DxlC,KAAKskC,gBAAkBC,EAChBiB,CACX,CAMAf,qBAAqBF,GACjB,IAAIyB,EAAgBzB,EAAOX,iBACvBqC,EAAUD,EAAcE,mBAAmB3B,EAAOP,YAAaO,EAAON,QAAS,CAC/E/c,SAAUqd,EAAOrd,WAMrB+e,SAAQE,UAAUtiC,QAAQonB,GAAYjrB,KAAK+kC,cAAcnqB,YAAYqQ,IAIrEgb,EAAQG,gBACRpmC,KAAK4kC,aAAa,KACd,IAAItxB,EAAQ0yB,EAAczyB,QAAQ0yB,IACpB,IAAV3yB,GACA0yB,EAAcjrB,OAAOzH,EAAK,GAGlCtT,KAAKskC,gBAAkBC,EAEhB0B,CACX,CAIAtB,UACI1iC,MAAM0iC,UACN3kC,KAAK+kC,cAAchqB,QACvB,CAEAgrB,sBAAsBP,GAClB,OAAOA,EAAaI,SAASO,UAAU,EAC3C,EASJ,IAqDME,GAAe,MAArB,MAAMA,UAAwBlC,GAC1BtkC,YAAYmlC,EAA2BsB,EAKvChiB,GACIriB,QACAjC,KAAKglC,0BAA4BA,EACjChlC,KAAKsmC,kBAAoBA,EAEzBtmC,KAAKw2B,gBAAiB,EAEtBx2B,KAAKumC,SAAW,IAAIh2B,MAOpBvQ,KAAKqkC,gBAAmBE,IAMpB,MAAM1iB,EAAU0iB,EAAO1iB,QAMjBsjB,EAAanlC,KAAKskB,UAAU8gB,cAAc,cAChDb,EAAOb,gBAAgB1jC,MACvB6hB,EAAQwD,WAAWC,aAAa6f,EAAYtjB,GAC5C7hB,KAAKwmC,eAAe5rB,YAAYiH,GAChC7hB,KAAKskC,gBAAkBC,EACvBtiC,MAAM2iC,aAAa,KACXO,EAAW9f,YACX8f,EAAW9f,WAAWggB,aAAaxjB,EAASsjB,EAAU,EAE7D,EAELnlC,KAAKskB,UAAYA,CACrB,CAEA,UAAIigB,GACA,OAAOvkC,KAAKskC,eAChB,CACA,UAAIC,CAAOA,GAKHvkC,KAAKumB,gBAAkBge,IAAWvkC,KAAKw2B,iBAGvCx2B,KAAKumB,eACLtkB,MAAMuhC,SAENe,GACAtiC,MAAMqhC,OAAOiB,GAEjBvkC,KAAKskC,gBAAkBC,GAAU,KACrC,CAEA,eAAIkC,GACA,OAAOzmC,KAAK0mC,YAChB,CACA/P,WACI32B,KAAKw2B,gBAAiB,CAC1B,CACAlgB,cACIrU,MAAM0iC,UACN3kC,KAAK0mC,aAAe1mC,KAAKskC,gBAAkB,IAC/C,CAOAE,sBAAsBD,GAClBA,EAAOb,gBAAgB1jC,MAGvB,MAAM4jC,EAA8C,MAA3BW,EAAOX,iBAA2BW,EAAOX,iBAAmB5jC,KAAKsmC,kBAEpFhB,GADWf,EAAOV,0BAA4B7jC,KAAKglC,2BACvBO,wBAAwBhB,EAAO5kC,WAC3DgnC,EAAM/C,EAAiB6B,gBAAgBH,EAAkB1B,EAAiB3/B,OAAQsgC,EAAOrd,UAAY0c,EAAiB1c,SAAUqd,EAAOT,uBAAoB19B,GAIjK,OAAIw9B,IAAqB5jC,KAAKsmC,mBAC1BtmC,KAAKwmC,eAAe5rB,YAAY+rB,EAAIf,SAASO,UAAU,IAE3DlkC,MAAM2iC,aAAa,IAAM+B,EAAI5hB,WAC7B/kB,KAAKskC,gBAAkBC,EACvBvkC,KAAK0mC,aAAeC,EACpB3mC,KAAKumC,SAASl4B,KAAKs4B,GACZA,CACX,CAMAlC,qBAAqBF,GACjBA,EAAOb,gBAAgB1jC,MACvB,MAAMimC,EAAUjmC,KAAKsmC,kBAAkBJ,mBAAmB3B,EAAOP,YAAaO,EAAON,QAAS,CAC1F/c,SAAUqd,EAAOrd,WAErB,OAAAjlB,MAAM2iC,aAAa,IAAM5kC,KAAKsmC,kBAAkBM,SAChD5mC,KAAKskC,gBAAkBC,EACvBvkC,KAAK0mC,aAAeT,EACpBjmC,KAAKumC,SAASl4B,KAAK43B,GACZA,CACX,CAEAO,eACI,MAAMjmC,EAAgBP,KAAKsmC,kBAAkBzkB,QAAQthB,cAGrD,OAAQA,EAAcmmB,WAAanmB,EAAcomB,aAC3CpmB,EACAA,EAAc8kB,UACxB,QACSrlB,KAAKa,UAAI,SAAAC,GAAA,WAAAA,GAA+FulC,GA5KVtlC,MA4K2CA,OA5K3CA,MA4KmFA,OA5KnFA,MA4KmHymB,MAAQ,CAA8C,QACvQxnB,KAAKgB,UA7KyFD,MAAE,CAAAE,KA6KJolC,EAAexjC,UAAA,4BAAA0T,OAAA,CAAAguB,OAAA,gCAAA/tB,QAAA,CAAA+vB,SAAA,YAAA9vB,SAAA,oBAAAygB,YAAA,EAAA91B,SAAA,CA7KbL,QA6K+N,EACzU,OAjIKslC,CAAe,KA8KfQ,GAAY,MAAlB,MAAMA,SACO7mC,KAAKa,UAAI,SAAAC,GAAA,WAAAA,GAA+F+lC,EAAY,CAAoD,QACxK7mC,KAAK2W,UA7NyF5V,KAAE,CAAAE,KA6NS4lC,GAA2L,QACpS7mC,KAAK4W,UA9NyF7V,MAAE,GA8N0B,EACtI,OAJK8lC,CAAY,oBC3kBlB,MAAMvtB,GAA0BE,KAIhC,MAAMstB,GACFjnC,YAAYknC,EAAgBnvB,GACxB5X,KAAK+mC,eAAiBA,EACtB/mC,KAAKgnC,oBAAsB,CAAEpU,IAAK,GAAID,KAAM,IAC5C3yB,KAAKinC,YAAa,EAClBjnC,KAAKskB,UAAY1M,CACrB,CAEA0rB,SAAW,CAEX10B,SACI,GAAI5O,KAAKknC,gBAAiB,CACtB,MAAM/2B,EAAOnQ,KAAKskB,UAAU5K,gBAC5B1Z,KAAKmnC,wBAA0BnnC,KAAK+mC,eAAenE,4BAEnD5iC,KAAKgnC,oBAAoBrU,KAAOxiB,EAAKwJ,MAAMgZ,MAAQ,GACnD3yB,KAAKgnC,oBAAoBpU,IAAMziB,EAAKwJ,MAAMiZ,KAAO,GAGjDziB,EAAKwJ,MAAMgZ,KAAOzV,GAAqBld,KAAKmnC,wBAAwBxU,MACpExiB,EAAKwJ,MAAMiZ,IAAM1V,GAAqBld,KAAKmnC,wBAAwBvU,KACnEziB,EAAK0W,UAAUtI,IAAI,0BACnBve,KAAKinC,YAAa,CACtB,CACJ,CAEA34B,UACI,GAAItO,KAAKinC,WAAY,CACjB,MAAMG,EAAOpnC,KAAKskB,UAAU5K,gBAEtB2tB,EAAYD,EAAKztB,MACjB2tB,EAFOtnC,KAAKskB,UAAUzJ,KAELlB,MACjB4tB,EAA6BF,EAAUG,gBAAkB,GACzDC,EAA6BH,EAAUE,gBAAkB,GAC/DxnC,KAAKinC,YAAa,EAClBI,EAAU1U,KAAO3yB,KAAKgnC,oBAAoBrU,KAC1C0U,EAAUzU,IAAM5yB,KAAKgnC,oBAAoBpU,IACzCwU,EAAKvgB,UAAU9L,OAAO,0BAMlBzB,KACA+tB,EAAUG,eAAiBF,EAAUE,eAAiB,QAE1DvvB,OAAOyvB,OAAO1nC,KAAKmnC,wBAAwBxU,KAAM3yB,KAAKmnC,wBAAwBvU,KAC1EtZ,KACA+tB,EAAUG,eAAiBD,EAC3BD,EAAUE,eAAiBC,EAEnC,CACJ,CACAP,gBAKI,GADalnC,KAAKskB,UAAU5K,gBACnBmN,UAAUkG,SAAS,2BAA6B/sB,KAAKinC,WAC1D,OAAO,EAEX,MAAMpsB,EAAO7a,KAAKskB,UAAUzJ,KACtB8sB,EAAW3nC,KAAK+mC,eAAevE,kBACrC,OAAO3nB,EAAK6mB,aAAeiG,EAAShtB,QAAUE,EAAK+mB,YAAc+F,EAASvtB,KAC9E,EAaJ,MAAMwtB,GACF/nC,YAAYgoC,EAAmBxjB,EAAS0iB,EAAgBe,GACpD9nC,KAAK6nC,kBAAoBA,EACzB7nC,KAAKqkB,QAAUA,EACfrkB,KAAK+mC,eAAiBA,EACtB/mC,KAAK8nC,QAAUA,EACf9nC,KAAK+nC,oBAAsB,KAE3B/nC,KAAKgoC,QAAU,KACXhoC,KAAKsO,UACDtO,KAAKioC,YAAY1hB,eACjBvmB,KAAKqkB,QAAQhD,IAAI,IAAMrhB,KAAKioC,YAAYzE,SAAQ,CAG5D,CAEAF,OAAO4E,GAIHloC,KAAKioC,YAAcC,CACvB,CAEAt5B,SACI,GAAI5O,KAAK+nC,oBACL,OAEJ,MAAMI,EAASnoC,KAAK6nC,kBAAkBxH,SAAS,GAAG95B,QAAKzB,MAAOm7B,IACjDA,IACJjgC,KAAKioC,YAAYG,eAAerb,SAASkT,EAAWiB,gBAAgB3gC,iBAEzEP,KAAK8nC,SAAW9nC,KAAK8nC,QAAQO,WAAaroC,KAAK8nC,QAAQO,UAAY,GACnEroC,KAAKsoC,uBAAyBtoC,KAAK+mC,eAAenE,4BAA4BhQ,IAC9E5yB,KAAK+nC,oBAAsBI,EAAOjiC,UAAU,KACxC,MAAMy8B,EAAiB3iC,KAAK+mC,eAAenE,4BAA4BhQ,IACnEK,KAAKE,IAAIwP,EAAiB3iC,KAAKsoC,wBAA0BtoC,KAAK8nC,QAAQO,UACtEroC,KAAKgoC,UAGLhoC,KAAKioC,YAAYM,gBAAe,IAKxCvoC,KAAK+nC,oBAAsBI,EAAOjiC,UAAUlG,KAAKgoC,QAEzD,CAEA15B,UACQtO,KAAK+nC,sBACL/nC,KAAK+nC,oBAAoBn4B,cACzB5P,KAAK+nC,oBAAsB,KAEnC,CACAvE,SACIxjC,KAAKsO,UACLtO,KAAKioC,YAAc,IACvB,EAIJ,MAAMO,GAEF55B,SAAW,CAEXN,UAAY,CAEZg1B,SAAW,EAUf,SAASmF,GAA6B5mB,EAASke,GAC3C,OAAOA,EAAiBjkB,KAAK4sB,GACJ7mB,EAAQyR,OAASoV,EAAgB9V,KACjC/Q,EAAQ+Q,IAAM8V,EAAgBpV,QAC/BzR,EAAQuR,MAAQsV,EAAgB/V,MAC/B9Q,EAAQ8Q,KAAO+V,EAAgBtV,MAG5D,CAQA,SAASuV,GAA4B9mB,EAASke,GAC1C,OAAOA,EAAiBjkB,KAAK8sB,GACJ/mB,EAAQ+Q,IAAMgW,EAAoBhW,KAClC/Q,EAAQyR,OAASsV,EAAoBtV,QACtCzR,EAAQ8Q,KAAOiW,EAAoBjW,MAClC9Q,EAAQuR,MAAQwV,EAAoBxV,MAGjE,CAKA,MAAMyV,GACFhpC,YAAYgoC,EAAmBd,EAAgB1iB,EAASyjB,GACpD9nC,KAAK6nC,kBAAoBA,EACzB7nC,KAAK+mC,eAAiBA,EACtB/mC,KAAKqkB,QAAUA,EACfrkB,KAAK8nC,QAAUA,EACf9nC,KAAK+nC,oBAAsB,IAC/B,CAEAzE,OAAO4E,GAIHloC,KAAKioC,YAAcC,CACvB,CAEAt5B,SACS5O,KAAK+nC,sBAEN/nC,KAAK+nC,oBAAsB/nC,KAAK6nC,kBAAkBxH,SADjCrgC,KAAK8nC,QAAU9nC,KAAK8nC,QAAQgB,eAAiB,GACO5iC,UAAU,KAG3E,GAFAlG,KAAKioC,YAAYM,iBAEbvoC,KAAK8nC,SAAW9nC,KAAK8nC,QAAQiB,UAAW,CACxC,MAAMC,EAAchpC,KAAKioC,YAAYG,eAAe7V,yBAC5CnY,QAAOO,UAAW3a,KAAK+mC,eAAevE,kBAI1CiG,GAA6BO,EADb,CAAC,CAAE5uB,QAAOO,SAAQ2Y,OAAQ3Y,EAAQyY,MAAOhZ,EAAOwY,IAAK,EAAGD,KAAM,OAE9E3yB,KAAKsO,UACLtO,KAAKqkB,QAAQhD,IAAI,IAAMrhB,KAAKioC,YAAYzE,UAEhD,IAGZ,CAEAl1B,UACQtO,KAAK+nC,sBACL/nC,KAAK+nC,oBAAoBn4B,cACzB5P,KAAK+nC,oBAAsB,KAEnC,CACAvE,SACIxjC,KAAKsO,UACLtO,KAAKioC,YAAc,IACvB,EAGJ,IAMMgB,GAAqB,MAA3B,MAAMA,EACFppC,YAAYgoC,EAAmBd,EAAgB1iB,EAASzM,GACpD5X,KAAK6nC,kBAAoBA,EACzB7nC,KAAK+mC,eAAiBA,EACtB/mC,KAAKqkB,QAAUA,EAEfrkB,KAAK4S,KAAO,IAAM,IAAI41B,GAKtBxoC,KAAKkpC,MAAS/lB,GAAW,IAAIykB,GAAoB5nC,KAAK6nC,kBAAmB7nC,KAAKqkB,QAASrkB,KAAK+mC,eAAgB5jB,GAE5GnjB,KAAKmpC,MAAQ,IAAM,IAAIrC,GAAoB9mC,KAAK+mC,eAAgB/mC,KAAKskB,WAMrEtkB,KAAKopC,WAAcjmB,GAAW,IAAI0lB,GAAyB7oC,KAAK6nC,kBAAmB7nC,KAAK+mC,eAAgB/mC,KAAKqkB,QAASlB,GACtHnjB,KAAKskB,UAAY1M,CACrB,QACS5X,KAAKa,UAAI,SAAAC,GAAA,WAAAA,GAA+FmoC,GAAVloC,MAAiD4d,IAAjD5d,MAAiF4d,IAAjF5d,MAA8GA,OAA9GA,MAAoIymB,MAAQ,CAA+C,QACzRxnB,KAAK0Y,WADyF3X,MAAE,CAAA4X,MACYswB,EAAqB73B,QAArB63B,EAAqBpoC,UAAAsQ,WAAc,QAAW,EACtK,OAxBK83B,CAAqB,KAkC3B,MAAMI,GACFxpC,YAAYsjB,GAeR,GAbAnjB,KAAKspC,eAAiB,IAAId,GAE1BxoC,KAAKupC,WAAa,GAElBvpC,KAAKwpC,aAAc,EAEnBxpC,KAAKypC,cAAgB,4BAMrBzpC,KAAK0pC,qBAAsB,EACvBvmB,EAAQ,CAIR,MAAMwmB,EAAa5lC,OAAOC,KAAKmf,GAC/B,UAAW9iB,KAAOspC,OACMvjC,IAAhB+c,EAAO9iB,KAOPL,KAAKK,GAAO8iB,EAAO9iB,GAG/B,CACJ,EAiDJ,MAAMupC,GACF/pC,YAEAgqC,EAEAC,GACI9pC,KAAK6pC,eAAiBA,EACtB7pC,KAAK8pC,yBAA2BA,CACpC,EA2BJ,IAKMC,GAAqB,MAA3B,MAAMA,EACFlqC,YAAY+X,GAER5X,KAAKgqC,kBAAoB,GACzBhqC,KAAKskB,UAAY1M,CACrB,CACAtB,cACItW,KAAKwjC,QACT,CAEAjlB,IAAI2pB,GAEAloC,KAAK+a,OAAOmtB,GACZloC,KAAKgqC,kBAAkBviC,KAAKygC,EAChC,CAEAntB,OAAOmtB,GACH,MAAM50B,EAAQtT,KAAKgqC,kBAAkBz2B,QAAQ20B,GACzC50B,GAAQ,GACRtT,KAAKgqC,kBAAkBx2B,OAAOF,EAAO,GAGH,IAAlCtT,KAAKgqC,kBAAkB/lC,QACvBjE,KAAKwjC,QAEb,QACSxjC,KAAKa,UAAI,SAAAC,GAAA,WAAAA,GAA+FipC,GAhKVhpC,MAgKiDymB,MAAQ,CAA+C,QACtMxnB,KAAK0Y,WAjKyF3X,MAAE,CAAA4X,MAiKYoxB,EAAqB34B,QAArB24B,EAAqBlpC,UAAAsQ,WAAc,QAAW,EACtK,OA5BK44B,CAAqB,KA0CrBE,GAAyB,MAA/B,MAAMA,UAAkCF,GACpClqC,YAAY+X,EAEZyM,GACIpiB,MAAM2V,GACN5X,KAAKqkB,QAAUA,EAEfrkB,KAAKkqC,iBAAoB7uB,IACrB,MAAM8uB,EAAWnqC,KAAKgqC,kBACtB,QAASxjB,EAAI2jB,EAASlmC,OAAS,EAAGuiB,GAAI,EAAIA,IAOtC,GAAI2jB,EAAS3jB,GAAG4jB,eAAe7c,UAAUtpB,OAAS,EAAG,CACjD,MAAMomC,EAAgBF,EAAS3jB,GAAG4jB,eAE9BpqC,KAAKqkB,QACLrkB,KAAKqkB,QAAQhD,IAAI,IAAMgpB,EAAchkC,KAAKgV,IAG1CgvB,EAAchkC,KAAKgV,GAEvB,KACJ,EAGZ,CAEAkD,IAAI2pB,GACAjmC,MAAMsc,IAAI2pB,GAELloC,KAAKsqC,cAEFtqC,KAAKqkB,QACLrkB,KAAKqkB,QAAQc,kBAAkB,IAAMnlB,KAAKskB,UAAUzJ,KAAK/B,iBAAiB,UAAW9Y,KAAKkqC,mBAG1FlqC,KAAKskB,UAAUzJ,KAAK/B,iBAAiB,UAAW9Y,KAAKkqC,kBAEzDlqC,KAAKsqC,aAAc,EAE3B,CAEA9G,SACQxjC,KAAKsqC,cACLtqC,KAAKskB,UAAUzJ,KAAKqK,oBAAoB,UAAWllB,KAAKkqC,kBACxDlqC,KAAKsqC,aAAc,EAE3B,QACStqC,KAAKa,UAAI,SAAAC,GAAA,WAAAA,GAA+FmpC,GApOVlpC,MAoOqDymB,MApOrDzmB,MAoO0EA,MAAS,IAA+D,QAChPf,KAAK0Y,WArOyF3X,MAAE,CAAA4X,MAqOYsxB,EAAyB74B,QAAzB64B,EAAyBppC,UAAAsQ,WAAc,QAAW,EAC1K,OAtDK84B,CAAyB,KAsEzBM,GAA6B,MAAnC,MAAMA,UAAsCR,GACxClqC,YAAY+X,EAAU8F,EAEtB2G,GACIpiB,MAAM2V,GACN5X,KAAK0d,UAAYA,EACjB1d,KAAKqkB,QAAUA,EACfrkB,KAAKwqC,mBAAoB,EAEzBxqC,KAAKyqC,qBAAwBpvB,IACzBrb,KAAK0qC,wBAA0BtvB,EAAgBC,EAAK,EAGxDrb,KAAK2qC,eAAkBtvB,IACnB,MAAMnY,EAASkY,EAAgBC,GAOzB8Q,EAAwB,UAAf9Q,EAAMpa,MAAoBjB,KAAK0qC,wBACxC1qC,KAAK0qC,wBACLxnC,EAGNlD,KAAK0qC,wBAA0B,KAI/B,MAAMP,EAAWnqC,KAAKgqC,kBAAkBj5B,QAKxC,QAASyV,EAAI2jB,EAASlmC,OAAS,EAAGuiB,GAAI,EAAIA,IAAK,CAC3C,MAAM0hB,EAAaiC,EAAS3jB,GAC5B,GAAI0hB,EAAW0C,sBAAsBrd,UAAUtpB,OAAS,IAAMikC,EAAW3hB,cACrE,SAKJ,GAAIskB,GAAwB3C,EAAWE,eAAgBllC,IACnD2nC,GAAwB3C,EAAWE,eAAgBjc,GACnD,MAEJ,MAAM2e,EAAuB5C,EAAW0C,sBAEpC5qC,KAAKqkB,QACLrkB,KAAKqkB,QAAQhD,IAAI,IAAMypB,EAAqBzkC,KAAKgV,IAGjDyvB,EAAqBzkC,KAAKgV,EAElC,EAER,CAEAkD,IAAI2pB,GAQA,GAPAjmC,MAAMsc,IAAI2pB,IAOLloC,KAAKsqC,YAAa,CACnB,MAAMzvB,EAAO7a,KAAKskB,UAAUzJ,KAExB7a,KAAKqkB,QACLrkB,KAAKqkB,QAAQc,kBAAkB,IAAMnlB,KAAK+qC,mBAAmBlwB,IAG7D7a,KAAK+qC,mBAAmBlwB,GAIxB7a,KAAK0d,UAAUrF,MAAQrY,KAAKwqC,oBAC5BxqC,KAAKgrC,qBAAuBnwB,EAAKlB,MAAMsxB,OACvCpwB,EAAKlB,MAAMsxB,OAAS,UACpBjrC,KAAKwqC,mBAAoB,GAE7BxqC,KAAKsqC,aAAc,CACvB,CACJ,CAEA9G,SACI,GAAIxjC,KAAKsqC,YAAa,CAClB,MAAMzvB,EAAO7a,KAAKskB,UAAUzJ,KAC5BA,EAAKqK,oBAAoB,cAAellB,KAAKyqC,sBAAsB,GACnE5vB,EAAKqK,oBAAoB,QAASllB,KAAK2qC,gBAAgB,GACvD9vB,EAAKqK,oBAAoB,WAAYllB,KAAK2qC,gBAAgB,GAC1D9vB,EAAKqK,oBAAoB,cAAellB,KAAK2qC,gBAAgB,GACzD3qC,KAAK0d,UAAUrF,KAAOrY,KAAKwqC,oBAC3B3vB,EAAKlB,MAAMsxB,OAASjrC,KAAKgrC,qBACzBhrC,KAAKwqC,mBAAoB,GAE7BxqC,KAAKsqC,aAAc,CACvB,CACJ,CACAS,mBAAmBlwB,GACfA,EAAK/B,iBAAiB,cAAe9Y,KAAKyqC,sBAAsB,GAChE5vB,EAAK/B,iBAAiB,QAAS9Y,KAAK2qC,gBAAgB,GACpD9vB,EAAK/B,iBAAiB,WAAY9Y,KAAK2qC,gBAAgB,GACvD9vB,EAAK/B,iBAAiB,cAAe9Y,KAAK2qC,gBAAgB,EAC9D,QACS3qC,KAAKa,UAAI,SAAAC,GAAA,WAAAA,GAA+FypC,GAjWVxpC,MAiWyDymB,MAjWzDzmB,MAiW8E+1B,GAjW9E/1B,MAiWwGA,MAAS,IAA+D,QAC9Qf,KAAK0Y,WAlWyF3X,MAAE,CAAA4X,MAkWY4xB,EAA6Bn5B,QAA7Bm5B,EAA6B1pC,UAAAsQ,WAAc,QAAW,EAC9K,OA7GKo5B,CAA6B,KAwHnC,SAASM,GAAwBl+B,EAAQu+B,GACrC,MAAMC,SAA4B5f,WAAe,KAAeA,WAChE,IAAIjkB,EAAU4jC,EACd,KAAO5jC,GAAS,CACZ,GAAIA,IAAYqF,EACZ,OAAO,EAEXrF,EACI6jC,GAAsB7jC,aAAmBikB,WAAajkB,EAAQgxB,KAAOhxB,EAAQ+d,UACrF,CACA,OAAO,CACX,CAEA,IACM+lB,GAAgB,MAAtB,MAAMA,EACFvrC,YAAY+X,EAAU8F,GAClB1d,KAAK0d,UAAYA,EACjB1d,KAAKskB,UAAY1M,CACrB,CACAtB,cACItW,KAAKkyB,mBAAmBnX,QAC5B,CAOAswB,sBACI,OAAKrrC,KAAKkyB,mBACNlyB,KAAKsrC,mBAEFtrC,KAAKkyB,iBAChB,CAKAoZ,mBACI,MAAMC,EAAiB,wBAIvB,GAAIvrC,KAAK0d,UAAUhG,WAAa6D,KAAsB,CAClD,MAAMiwB,EAA6BxrC,KAAKskB,UAAU0B,iBAAiB,IAAIulB,0BAA4CA,sBAGnH,QAAS/kB,EAAI,EAAGA,EAAIglB,EAA2BvnC,OAAQuiB,IACnDglB,EAA2BhlB,GAAGzL,QAEtC,CACA,MAAM2lB,EAAY1gC,KAAKskB,UAAUpK,cAAc,OAC/CwmB,EAAU7Z,UAAUtI,IAAIgtB,GAUpBhwB,KACAmlB,EAAUviB,aAAa,WAAY,QAE7Bne,KAAK0d,UAAUhG,WACrBgpB,EAAUviB,aAAa,WAAY,UAEvCne,KAAKskB,UAAUzJ,KAAKD,YAAY8lB,GAChC1gC,KAAKkyB,kBAAoBwO,CAC7B,QACS1gC,KAAKa,UAAI,SAAAC,GAAA,WAAAA,GAA+FsqC,GArbVrqC,MAqb4CymB,MArb5CzmB,MAqbiE+1B,GAAa,CAA+C,QAC3N92B,KAAK0Y,WAtbyF3X,MAAE,CAAA4X,MAsbYyyB,EAAgBh6B,QAAhBg6B,EAAgBvqC,UAAAsQ,WAAc,QAAW,EACjK,OA3DKi6B,CAAgB,KAwEtB,MAAMK,GACF5rC,YAAY6rC,EAAeC,EAAOC,EAAO9D,EAASzjB,EAASwnB,EAAqBvnB,EAAWwnB,EAAWC,EAAyBC,GAAsB,EAAOxnB,GACxJxkB,KAAK0rC,cAAgBA,EACrB1rC,KAAK2rC,MAAQA,EACb3rC,KAAK4rC,MAAQA,EACb5rC,KAAK8nC,QAAUA,EACf9nC,KAAKqkB,QAAUA,EACfrkB,KAAK6rC,oBAAsBA,EAC3B7rC,KAAKskB,UAAYA,EACjBtkB,KAAK8rC,UAAYA,EACjB9rC,KAAK+rC,wBAA0BA,EAC/B/rC,KAAKgsC,oBAAsBA,EAC3BhsC,KAAKwkB,UAAYA,EACjBxkB,KAAKisC,iBAAmB,KACxBjsC,KAAKksC,eAAiB,IAAI//B,IAC1BnM,KAAKmsC,aAAe,IAAIhgC,IACxBnM,KAAKosC,aAAe,IAAIjgC,IACxBnM,KAAKqsC,iBAAmBjP,MAAakP,MACrCtsC,KAAKusC,sBAAyBlxB,GAAUrb,KAAKksC,eAAe7lC,KAAKgV,GACjErb,KAAKwsC,8BAAiCnxB,IAClCrb,KAAKysC,iBAAiBpxB,EAAMnY,OAAM,EAGtClD,KAAKoqC,eAAiB,IAAIj+B,IAE1BnM,KAAK4qC,sBAAwB,IAAIz+B,IACjCnM,KAAK0sC,SAAW,IAAIvgC,IAChB27B,EAAQwB,iBACRtpC,KAAK2sC,gBAAkB7E,EAAQwB,eAC/BtpC,KAAK2sC,gBAAgBrJ,OAAOtjC,OAEhCA,KAAK4sC,kBAAoB9E,EAAQ+E,iBAIjC7sC,KAAK8sC,mBAAkBlgC,OAAU,OAAMmgC,OAAY,KAC/C/sC,KAAK0sC,SAASrmC,MAAK,EACpB,CAAE6gB,SAAUlnB,KAAKwkB,YACxB,CAEA,kBAAI4jB,GACA,OAAOpoC,KAAK4rC,KAChB,CAEA,mBAAIoB,GACA,OAAOhtC,KAAKisC,gBAChB,CAMA,eAAIgB,GACA,OAAOjtC,KAAK2rC,KAChB,CAQArI,OAAOiB,IAGEvkC,KAAK2rC,MAAMlhB,eAAiBzqB,KAAKktC,qBAClCltC,KAAKktC,oBAAoBtyB,YAAY5a,KAAK2rC,OAE9C,MAAMwB,EAAentC,KAAK0rC,cAAcpI,OAAOiB,GAC/C,OAAIvkC,KAAK4sC,mBACL5sC,KAAK4sC,kBAAkBtJ,OAAOtjC,MAElCA,KAAKotC,uBACLptC,KAAKqtC,qBACLrtC,KAAKstC,0BACDttC,KAAK2sC,iBACL3sC,KAAK2sC,gBAAgB/9B,UAAO,EAIhCqY,OAAgB,KAERjnB,KAAKumB,eACLvmB,KAAKuoC,gBAAe,EAEzB,CAAErhB,SAAUlnB,KAAKwkB,YAEpBxkB,KAAKutC,sBAAqB,GACtBvtC,KAAK8nC,QAAQ0B,aACbxpC,KAAKwtC,kBAELxtC,KAAK8nC,QAAQyB,YACbvpC,KAAKytC,eAAeztC,KAAK4rC,MAAO5rC,KAAK8nC,QAAQyB,YAAY,GAG7DvpC,KAAKmsC,aAAa9lC,OAElBrG,KAAK6rC,oBAAoBttB,IAAIve,MACzBA,KAAK8nC,QAAQ4B,sBACb1pC,KAAKqsC,iBAAmBrsC,KAAK8rC,UAAU5lC,UAAU,IAAMlG,KAAK2kC,YAEhE3kC,KAAK+rC,wBAAwBxtB,IAAIve,MAIM,mBAA5BmtC,GAAcO,WAMrBP,EAAaO,UAAU,KACf1tC,KAAKumB,eAILvmB,KAAKqkB,QAAQc,kBAAkB,IAAMhmB,QAAQC,UAAUC,KAAK,IAAMW,KAAKwjC,UAAS,GAIrF2J,CACX,CAKA3J,SACI,IAAKxjC,KAAKumB,cACN,OAEJvmB,KAAK2tC,iBAIL3tC,KAAKutC,sBAAqB,GACtBvtC,KAAK4sC,mBAAqB5sC,KAAK4sC,kBAAkBpJ,QACjDxjC,KAAK4sC,kBAAkBpJ,SAEvBxjC,KAAK2sC,iBACL3sC,KAAK2sC,gBAAgBr+B,UAEzB,MAAMs/B,EAAmB5tC,KAAK0rC,cAAclI,SAE5C,OAAAxjC,KAAKosC,aAAa/lC,OAElBrG,KAAK6rC,oBAAoB9wB,OAAO/a,MAGhCA,KAAK6tC,0BACL7tC,KAAKqsC,iBAAiBz8B,cACtB5P,KAAK+rC,wBAAwBhxB,OAAO/a,MAC7B4tC,CACX,CAEAjJ,UACI,MAAMlB,EAAazjC,KAAKumB,cACpBvmB,KAAK4sC,mBACL5sC,KAAK4sC,kBAAkBjI,UAE3B3kC,KAAK8tC,yBACL9tC,KAAKysC,iBAAiBzsC,KAAKisC,kBAC3BjsC,KAAKqsC,iBAAiBz8B,cACtB5P,KAAK6rC,oBAAoB9wB,OAAO/a,MAChCA,KAAK0rC,cAAc/G,UACnB3kC,KAAKmsC,aAAazmC,WAClB1F,KAAKksC,eAAexmC,WACpB1F,KAAKoqC,eAAe1kC,WACpB1F,KAAK4qC,sBAAsBllC,WAC3B1F,KAAK+rC,wBAAwBhxB,OAAO/a,MACpCA,KAAK2rC,OAAO5wB,SACZ/a,KAAKktC,oBAAsBltC,KAAK4rC,MAAQ5rC,KAAK2rC,MAAQ,KACjDlI,GACAzjC,KAAKosC,aAAa/lC,OAEtBrG,KAAKosC,aAAa1mC,WAClB1F,KAAK8sC,gBAAgB/nB,UACrB/kB,KAAK0sC,SAAShnC,UAClB,CAEA6gB,cACI,OAAOvmB,KAAK0rC,cAAcnlB,aAC9B,CAEAwnB,gBACI,OAAO/tC,KAAKksC,cAChB,CAEA8B,cACI,OAAOhuC,KAAKmsC,YAChB,CAEA8B,cACI,OAAOjuC,KAAKosC,YAChB,CAEA/B,gBACI,OAAOrqC,KAAKoqC,cAChB,CAEAU,uBACI,OAAO9qC,KAAK4qC,qBAChB,CAEAsD,YACI,OAAOluC,KAAK8nC,OAChB,CAEAS,iBACQvoC,KAAK4sC,mBACL5sC,KAAK4sC,kBAAkBuB,OAE/B,CAEAC,uBAAuBC,GACfA,IAAaruC,KAAK4sC,oBAGlB5sC,KAAK4sC,mBACL5sC,KAAK4sC,kBAAkBjI,UAE3B3kC,KAAK4sC,kBAAoByB,EACrBruC,KAAKumB,gBACL8nB,EAAS/K,OAAOtjC,MAChBA,KAAKuoC,kBAEb,CAEA+F,WAAWC,GACPvuC,KAAK8nC,QAAU,IAAK9nC,KAAK8nC,WAAYyG,GACrCvuC,KAAKqtC,oBACT,CAEAmB,aAAaj9B,GACTvR,KAAK8nC,QAAU,IAAK9nC,KAAK8nC,QAAS2G,UAAWl9B,GAC7CvR,KAAKstC,yBACT,CAEAoB,cAAcC,GACN3uC,KAAK4rC,OACL5rC,KAAKytC,eAAeztC,KAAK4rC,MAAO+C,GAAS,EAEjD,CAEAC,iBAAiBD,GACT3uC,KAAK4rC,OACL5rC,KAAKytC,eAAeztC,KAAK4rC,MAAO+C,GAAS,EAEjD,CAIAE,eACI,MAAMJ,EAAYzuC,KAAK8nC,QAAQ2G,UAC/B,OAAKA,EAGuB,iBAAdA,EAAyBA,EAAYA,EAAUnuC,MAFlD,KAGf,CAEAwuC,qBAAqBT,GACbA,IAAaruC,KAAK2sC,kBAGtB3sC,KAAK8tC,yBACL9tC,KAAK2sC,gBAAkB0B,EACnBruC,KAAKumB,gBACL8nB,EAAS/K,OAAOtjC,MAChBquC,EAASz/B,UAEjB,CAEA0+B,0BACIttC,KAAK2rC,MAAMxtB,aAAa,MAAOne,KAAK6uC,eACxC,CAEAxB,qBACI,IAAKrtC,KAAK4rC,MACN,OAEJ,MAAMjyB,EAAQ3Z,KAAK4rC,MAAMjyB,MACzBA,EAAMS,MAAQ8C,EAAoBld,KAAK8nC,QAAQ1tB,OAC/CT,EAAMgB,OAASuC,EAAoBld,KAAK8nC,QAAQntB,QAChDhB,EAAMo1B,SAAW7xB,EAAoBld,KAAK8nC,QAAQiH,UAClDp1B,EAAMq1B,UAAY9xB,EAAoBld,KAAK8nC,QAAQkH,WACnDr1B,EAAMs1B,SAAW/xB,EAAoBld,KAAK8nC,QAAQmH,UAClDt1B,EAAMu1B,UAAYhyB,EAAoBld,KAAK8nC,QAAQoH,UACvD,CAEA3B,qBAAqB4B,GACjBnvC,KAAK4rC,MAAMjyB,MAAMY,cAAgB40B,EAAgB,GAAK,MAC1D,CAEA3B,kBACI,MAAM4B,EAAe,+BACrBpvC,KAAKisC,iBAAmBjsC,KAAKskB,UAAUpK,cAAc,OACrDla,KAAKisC,iBAAiBplB,UAAUtI,IAAI,wBAChCve,KAAKgsC,qBACLhsC,KAAKisC,iBAAiBplB,UAAUtI,IAAI,uCAEpCve,KAAK8nC,QAAQ2B,eACbzpC,KAAKytC,eAAeztC,KAAKisC,iBAAkBjsC,KAAK8nC,QAAQ2B,eAAe,GAI3EzpC,KAAK2rC,MAAMlhB,cAAcnF,aAAatlB,KAAKisC,iBAAkBjsC,KAAK2rC,OAGlE3rC,KAAKisC,iBAAiBnzB,iBAAiB,QAAS9Y,KAAKusC,wBAEhDvsC,KAAKgsC,4BAA8BlP,sBAA0B,IAC9D98B,KAAKqkB,QAAQc,kBAAkB,KAC3B2X,sBAAsB,KACd98B,KAAKisC,kBACLjsC,KAAKisC,iBAAiBplB,UAAUtI,IAAI6wB,EAAY,EAEvD,GAILpvC,KAAKisC,iBAAiBplB,UAAUtI,IAAI6wB,EAE5C,CAQAhC,uBACQptC,KAAK2rC,MAAMpmB,aACXvlB,KAAK2rC,MAAMtmB,WAAWzK,YAAY5a,KAAK2rC,MAE/C,CAEAgC,iBACI,MAAM0B,EAAmBrvC,KAAKisC,iBAC9B,GAAKoD,EAGL,IAAIrvC,KAAKgsC,oBAEL,YADAhsC,KAAKysC,iBAAiB4C,GAG1BA,EAAiBxoB,UAAU9L,OAAO,gCAClC/a,KAAKqkB,QAAQc,kBAAkB,KAC3BkqB,EAAiBv2B,iBAAiB,gBAAiB9Y,KAAKwsC,8BAA6B,GAIzF6C,EAAiB11B,MAAMY,cAAgB,OAIvCva,KAAKsvC,iBAAmBtvC,KAAKqkB,QAAQc,kBAAkB,IAAMgC,WAAW,KACpEnnB,KAAKysC,iBAAiB4C,EAAgB,EACvC,KAAI,CACX,CAEA5B,eAAe5rB,EAAS0tB,EAAYC,GAChC,MAAMb,EAAU1xB,GAAYsyB,GAAc,IAAIzqC,OAAOJ,KAAOA,GACxDiqC,EAAQ1qC,SACRurC,EAAQ3tB,EAAQgF,UAAUtI,OAAOowB,GAAW9sB,EAAQgF,UAAU9L,UAAU4zB,GAEhF,CAEAd,0BAII7tC,KAAKqkB,QAAQc,kBAAkB,KAI3B,MAAMqb,EAAexgC,KAAK0sC,SACrBnmC,QAAKgb,SAAUkuB,MAAMzvC,KAAKmsC,aAAcnsC,KAAKosC,gBAC7ClmC,UAAU,OAGNlG,KAAK4rC,QAAU5rC,KAAK2rC,OAAwC,IAA/B3rC,KAAK4rC,MAAM3sC,SAASgF,UAC9CjE,KAAK4rC,OAAS5rC,KAAK8nC,QAAQyB,YAC3BvpC,KAAKytC,eAAeztC,KAAK4rC,MAAO5rC,KAAK8nC,QAAQyB,YAAY,GAEzDvpC,KAAK2rC,OAAS3rC,KAAK2rC,MAAMlhB,gBACzBzqB,KAAKktC,oBAAsBltC,KAAK2rC,MAAMlhB,cACtCzqB,KAAK2rC,MAAM5wB,UAEfylB,EAAa5wB,cAAY,EAEhC,EAET,CAEAk+B,yBACI,MAAMxE,EAAiBtpC,KAAK2sC,gBACxBrD,IACAA,EAAeh7B,UACXg7B,EAAe9F,QACf8F,EAAe9F,SAG3B,CAEAiJ,iBAAiBiD,GACTA,IACAA,EAASxqB,oBAAoB,QAASllB,KAAKusC,uBAC3CmD,EAASxqB,oBAAoB,gBAAiBllB,KAAKwsC,+BACnDkD,EAAS30B,SAIL/a,KAAKisC,mBAAqByD,IAC1B1vC,KAAKisC,iBAAmB,OAG5BjsC,KAAKsvC,mBACLpiB,aAAaltB,KAAKsvC,kBAClBtvC,KAAKsvC,sBAAmBlpC,EAEhC,EAMJ,MAAMupC,GAAmB,8CAEnBC,GAAiB,gBAQvB,MAAMC,GAEF,aAAIC,GACA,OAAO9vC,KAAK+vC,mBAChB,CACAlwC,YAAYmwC,EAAajJ,EAAgBziB,EAAW5G,EAAWuyB,GAC3DjwC,KAAK+mC,eAAiBA,EACtB/mC,KAAKskB,UAAYA,EACjBtkB,KAAK0d,UAAYA,EACjB1d,KAAKiwC,kBAAoBA,EAEzBjwC,KAAKkwC,qBAAuB,CAAE91B,MAAO,EAAGO,OAAQ,GAEhD3a,KAAKmwC,WAAY,EAEjBnwC,KAAKowC,UAAW,EAEhBpwC,KAAKqwC,gBAAiB,EAEtBrwC,KAAKswC,wBAAyB,EAE9BtwC,KAAKuwC,iBAAkB,EAEvBvwC,KAAKwwC,gBAAkB,EAEvBxwC,KAAKywC,aAAe,GAEpBzwC,KAAK+vC,oBAAsB,GAE3B/vC,KAAK0wC,iBAAmB,IAAIvkC,IAE5BnM,KAAK2wC,oBAAsBvT,MAAakP,MAExCtsC,KAAK4wC,SAAW,EAEhB5wC,KAAK6wC,SAAW,EAEhB7wC,KAAK8wC,qBAAuB,GAE5B9wC,KAAK+wC,gBAAkB/wC,KAAK0wC,iBAC5B1wC,KAAKgxC,UAAUhB,EACnB,CAEA1M,OAAO4E,GAMHloC,KAAKixC,qBACL/I,EAAW+E,YAAYpmB,UAAUtI,IAAIoxB,IACrC3vC,KAAKioC,YAAcC,EACnBloC,KAAKkxC,aAAehJ,EAAW+E,YAC/BjtC,KAAK4rC,MAAQ1D,EAAWE,eACxBpoC,KAAKokC,aAAc,EACnBpkC,KAAKmxC,kBAAmB,EACxBnxC,KAAKoxC,cAAgB,KACrBpxC,KAAK2wC,oBAAoB/gC,cACzB5P,KAAK2wC,oBAAsB3wC,KAAK+mC,eAAe9wB,SAAS/P,UAAU,KAI9DlG,KAAKmxC,kBAAmB,EACxBnxC,KAAKmuC,OAAM,EAEnB,CAeAA,QAEI,GAAInuC,KAAKokC,cAAgBpkC,KAAK0d,UAAUhG,UACpC,OAKJ,IAAK1X,KAAKmxC,kBAAoBnxC,KAAKuwC,iBAAmBvwC,KAAKoxC,cAEvD,YADApxC,KAAKqxC,sBAGTrxC,KAAKsxC,qBACLtxC,KAAKuxC,6BACLvxC,KAAKwxC,0BAILxxC,KAAKyxC,cAAgBzxC,KAAK0xC,2BAC1B1xC,KAAK2xC,YAAc3xC,KAAK4xC,iBACxB5xC,KAAK6xC,aAAe7xC,KAAK4rC,MAAMrZ,wBAC/BvyB,KAAKsyB,eAAiBtyB,KAAKiwC,kBAAkB5E,sBAAsB9Y,wBACnE,MAAMuf,EAAa9xC,KAAK2xC,YAClB3I,EAAchpC,KAAK6xC,aACnBE,EAAe/xC,KAAKyxC,cACpBpf,EAAgBryB,KAAKsyB,eAErB0f,EAAe,GAErB,IAAIC,EAGJ,QAASC,KAAOlyC,KAAK+vC,oBAAqB,CAEtC,IAAIoC,EAAcnyC,KAAKoyC,gBAAgBN,EAAYzf,EAAe6f,GAI9DG,EAAeryC,KAAKsyC,iBAAiBH,EAAanJ,EAAakJ,GAE/DK,EAAavyC,KAAKwyC,eAAeH,EAAcrJ,EAAa+I,EAAcG,GAE9E,GAAIK,EAAWE,2BAGX,OAFAzyC,KAAKmwC,WAAY,OACjBnwC,KAAK0yC,eAAeR,EAAKC,GAKzBnyC,KAAK2yC,8BAA8BJ,EAAYF,EAAcN,GAG7DC,EAAavqC,KAAK,CACd+S,SAAU03B,EACV/lB,OAAQgmB,EACRnJ,cACA4J,gBAAiB5yC,KAAK6yC,0BAA0BV,EAAaD,OAOhED,GAAYA,EAASM,WAAWO,YAAcP,EAAWO,eAC1Db,EAAW,CAAEM,aAAYF,eAAcF,cAAa33B,SAAU03B,EAAKlJ,eAE3E,CAGA,GAAIgJ,EAAa/tC,OAAQ,CACrB,IAAI8uC,EAAU,KACVC,GAAY,EAChB,UAAWC,KAAOjB,EAAc,CAC5B,MAAMkB,EAAQD,EAAIL,gBAAgBx4B,MAAQ64B,EAAIL,gBAAgBj4B,QAAUs4B,EAAIz4B,SAAS24B,QAAU,GAC3FD,EAAQF,IACRA,EAAYE,EACZH,EAAUE,EAElB,CAGA,OAFAjzC,KAAKmwC,WAAY,OACjBnwC,KAAK0yC,eAAeK,EAAQv4B,SAAUu4B,EAAQ5mB,OAElD,CAGA,GAAInsB,KAAKowC,SAIL,OAFApwC,KAAKmwC,WAAY,OACjBnwC,KAAK0yC,eAAeT,EAASz3B,SAAUy3B,EAASE,aAKpDnyC,KAAK0yC,eAAeT,EAASz3B,SAAUy3B,EAASE,YACpD,CACA3O,SACIxjC,KAAKsxC,qBACLtxC,KAAKoxC,cAAgB,KACrBpxC,KAAKozC,oBAAsB,KAC3BpzC,KAAK2wC,oBAAoB/gC,aAC7B,CAEA+0B,UACQ3kC,KAAKokC,cAKLpkC,KAAKkxC,cACLmC,GAAarzC,KAAKkxC,aAAav3B,MAAO,CAClCiZ,IAAK,GACLD,KAAM,GACNS,MAAO,GACPE,OAAQ,GACR3Y,OAAQ,GACRP,MAAO,GACPk5B,WAAY,GACZC,eAAgB,KAGpBvzC,KAAK4rC,OACL5rC,KAAKuxC,6BAELvxC,KAAKioC,aACLjoC,KAAKioC,YAAYgF,YAAYpmB,UAAU9L,OAAO40B,IAElD3vC,KAAKwjC,SACLxjC,KAAK0wC,iBAAiBhrC,WACtB1F,KAAKioC,YAAcjoC,KAAKkxC,aAAe,KACvClxC,KAAKokC,aAAc,EACvB,CAMAiN,sBACI,GAAIrxC,KAAKokC,cAAgBpkC,KAAK0d,UAAUhG,UACpC,OAEJ,MAAM87B,EAAexzC,KAAKoxC,cAC1B,GAAIoC,EAAc,CACdxzC,KAAK2xC,YAAc3xC,KAAK4xC,iBACxB5xC,KAAK6xC,aAAe7xC,KAAK4rC,MAAMrZ,wBAC/BvyB,KAAKyxC,cAAgBzxC,KAAK0xC,2BAC1B1xC,KAAKsyB,eAAiBtyB,KAAKiwC,kBAAkB5E,sBAAsB9Y,wBACnE,MAAM4f,EAAcnyC,KAAKoyC,gBAAgBpyC,KAAK2xC,YAAa3xC,KAAKsyB,eAAgBkhB,GAChFxzC,KAAK0yC,eAAec,EAAcrB,EACtC,MAEInyC,KAAKmuC,OAEb,CAMAsF,yBAAyBC,GACrB,OAAA1zC,KAAKywC,aAAeiD,EACb1zC,IACX,CAKA2zC,cAAc7D,GACV,OAAA9vC,KAAK+vC,oBAAsBD,GAGmB,IAA1CA,EAAUv8B,QAAQvT,KAAKoxC,iBACvBpxC,KAAKoxC,cAAgB,MAEzBpxC,KAAKixC,qBACEjxC,IACX,CAKA4zC,mBAAmBC,GACf,OAAA7zC,KAAKwwC,gBAAkBqD,EAChB7zC,IACX,CAEA8zC,uBAAuBC,GAAqB,GACxC,OAAA/zC,KAAKswC,uBAAyByD,EACvB/zC,IACX,CAEAg0C,kBAAkBC,GAAgB,GAC9B,OAAAj0C,KAAKqwC,eAAiB4D,EACfj0C,IACX,CAEAk0C,SAASC,GAAU,GACf,OAAAn0C,KAAKowC,SAAW+D,EACTn0C,IACX,CAOAo0C,mBAAmBC,GAAW,GAC1B,OAAAr0C,KAAKuwC,gBAAkB8D,EAChBr0C,IACX,CAQAgxC,UAAU7kB,GACN,OAAAnsB,KAAK+pB,QAAUoC,EACRnsB,IACX,CAKAs0C,mBAAmBC,GACf,OAAAv0C,KAAK4wC,SAAW2D,EACTv0C,IACX,CAKAw0C,mBAAmBD,GACf,OAAAv0C,KAAK6wC,SAAW0D,EACTv0C,IACX,CASAy0C,sBAAsBC,GAClB,OAAA10C,KAAK20C,yBAA2BD,EACzB10C,IACX,CAIAoyC,gBAAgBN,EAAYzf,EAAe6f,GACvC,IAAI9hC,EAgBAgiB,EAfJ,GAAmB,UAAf8f,EAAI0C,QAGJxkC,EAAI0hC,EAAWnf,KAAOmf,EAAW13B,MAAQ,MAExC,CACD,MAAMy6B,EAAS70C,KAAK80C,SAAWhD,EAAW1e,MAAQ0e,EAAWnf,KACvDoiB,EAAO/0C,KAAK80C,SAAWhD,EAAWnf,KAAOmf,EAAW1e,MAC1DhjB,EAAmB,SAAf8hC,EAAI0C,QAAqBC,EAASE,CAC1C,CAOA,OAJI1iB,EAAcM,KAAO,IACrBviB,GAAKiiB,EAAcM,MAInBP,EADe,UAAf8f,EAAI8C,QACAlD,EAAWlf,IAAMkf,EAAWn3B,OAAS,EAGtB,OAAfu3B,EAAI8C,QAAmBlD,EAAWlf,IAAMkf,EAAWxe,OAOvDjB,EAAcO,IAAM,IACpBR,GAAKC,EAAcO,KAEhB,CAAExiB,IAAGgiB,IAChB,CAKAkgB,iBAAiBH,EAAanJ,EAAakJ,GAGvC,IAAI+C,EAUAC,EACJ,OATID,EADgB,UAAhB/C,EAAIiD,UACanM,EAAY5uB,MAAQ,EAEf,UAAjB83B,EAAIiD,SACOn1C,KAAK80C,UAAY9L,EAAY5uB,MAAQ,EAGrCpa,KAAK80C,SAAW,GAAK9L,EAAY5uB,MAIjD86B,EADgB,UAAhBhD,EAAIkD,UACapM,EAAYruB,OAAS,EAGN,OAAhBu3B,EAAIkD,SAAoB,GAAKpM,EAAYruB,OAGtD,CACHvK,EAAG+hC,EAAY/hC,EAAI6kC,EACnB7iB,EAAG+f,EAAY/f,EAAI8iB,EAE3B,CAEA1C,eAAe6C,EAAOC,EAAgB3N,EAAUntB,GAG5C,MAAM+6B,EAAUC,GAA6BF,GAC7C,IAAMllC,IAAGgiB,KAAMijB,EACX7hB,EAAUxzB,KAAKy1C,WAAWj7B,EAAU,KACpCiZ,EAAUzzB,KAAKy1C,WAAWj7B,EAAU,KAEpCgZ,IACApjB,GAAKojB,GAELC,IACArB,GAAKqB,GAGT,IAEIiiB,EAAc,EAAItjB,EAClBujB,EAAiBvjB,EAAImjB,EAAQ56B,OAASgtB,EAAShtB,OAE/Ci7B,EAAe51C,KAAK61C,mBAAmBN,EAAQn7B,MALhC,EAAIhK,EACHA,EAAImlC,EAAQn7B,MAAQutB,EAASvtB,OAK7C07B,EAAgB91C,KAAK61C,mBAAmBN,EAAQ56B,OAAQ+6B,EAAaC,GACrE7C,EAAc8C,EAAeE,EACjC,MAAO,CACHhD,cACAL,2BAA4B8C,EAAQn7B,MAAQm7B,EAAQ56B,SAAWm4B,EAC/DiD,yBAA0BD,IAAkBP,EAAQ56B,OACpDq7B,2BAA4BJ,GAAgBL,EAAQn7B,MAE5D,CAOAu4B,8BAA8BM,EAAKoC,EAAO1N,GACtC,GAAI3nC,KAAKswC,uBAAwB,CAC7B,MAAM2F,EAAkBtO,EAASrU,OAAS+hB,EAAMjjB,EAC1C8jB,EAAiBvO,EAASvU,MAAQiiB,EAAMjlC,EACxC4+B,EAAYmH,GAAcn2C,KAAKioC,YAAYiG,YAAYc,WACvDD,EAAWoH,GAAcn2C,KAAKioC,YAAYiG,YAAYa,UAG5D,OAFoBkE,EAAI8C,0BAA0C,MAAb/G,GAAqBA,GAAaiH,KACjEhD,EAAI+C,4BAA2C,MAAZjH,GAAoBA,GAAYmH,EAE7F,CACA,OAAO,CACX,CAYAE,qBAAqB3U,EAAO6T,EAAgB3S,GAIxC,GAAI3iC,KAAKozC,qBAAuBpzC,KAAKuwC,gBACjC,MAAO,CACHngC,EAAGqxB,EAAMrxB,EAAIpQ,KAAKozC,oBAAoBhjC,EACtCgiB,EAAGqP,EAAMrP,EAAIpyB,KAAKozC,oBAAoBhhB,GAK9C,MAAMmjB,EAAUC,GAA6BF,GACvC3N,EAAW3nC,KAAKyxC,cAGhB4E,EAAgBpjB,KAAKC,IAAIuO,EAAMrxB,EAAImlC,EAAQn7B,MAAQutB,EAASvtB,MAAO,GACnEk8B,EAAiBrjB,KAAKC,IAAIuO,EAAMrP,EAAImjB,EAAQ56B,OAASgtB,EAAShtB,OAAQ,GACtE47B,EAActjB,KAAKC,IAAIyU,EAAS/U,IAAM+P,EAAe/P,IAAM6O,EAAMrP,EAAG,GACpEokB,EAAevjB,KAAKC,IAAIyU,EAAShV,KAAOgQ,EAAehQ,KAAO8O,EAAMrxB,EAAG,GAE7E,IAAIqmC,EAAQ,EACRC,EAAQ,EAIZ,OACID,EADAlB,EAAQn7B,OAASutB,EAASvtB,MAClBo8B,IAAiBH,EAGjB5U,EAAMrxB,EAAIpQ,KAAKwwC,gBAAkB7I,EAAShV,KAAOgQ,EAAehQ,KAAO8O,EAAMrxB,EAAI,EAGzFsmC,EADAnB,EAAQ56B,QAAUgtB,EAAShtB,OACnB47B,IAAgBD,EAGhB7U,EAAMrP,EAAIpyB,KAAKwwC,gBAAkB7I,EAAS/U,IAAM+P,EAAe/P,IAAM6O,EAAMrP,EAAI,EAE3FpyB,KAAKozC,oBAAsB,CAAEhjC,EAAGqmC,EAAOrkB,EAAGskB,GACnC,CACHtmC,EAAGqxB,EAAMrxB,EAAIqmC,EACbrkB,EAAGqP,EAAMrP,EAAIskB,EAErB,CAMAhE,eAAel4B,EAAU23B,GAUrB,GATAnyC,KAAK22C,oBAAoBn8B,GACzBxa,KAAK42C,yBAAyBzE,EAAa33B,GAC3Cxa,KAAK62C,sBAAsB1E,EAAa33B,GACpCA,EAAS+uB,YACTvpC,KAAK82C,iBAAiBt8B,EAAS+uB,YAK/BvpC,KAAK0wC,iBAAiBnjB,UAAUtpB,OAAQ,CACxC,MAAM8yC,EAAmB/2C,KAAKg3C,uBAG9B,GAAIx8B,IAAaxa,KAAKoxC,gBACjBpxC,KAAKi3C,wBAobtB,SAASC,GAAwBC,EAAGC,GAChC,OAAID,IAAMC,GAGFD,EAAEE,kBAAoBD,EAAEC,iBAC5BF,EAAEG,sBAAwBF,EAAEE,qBAC5BH,EAAEI,mBAAqBH,EAAEG,kBACzBJ,EAAEK,uBAAyBJ,EAAEI,oBACrC,CA3biBN,CAAwBl3C,KAAKi3C,sBAAuBF,GAAmB,CACxE,MAAMU,EAAc,IAAI7N,GAA+BpvB,EAAUu8B,GACjE/2C,KAAK0wC,iBAAiBrqC,KAAKoxC,EAC/B,CACAz3C,KAAKi3C,sBAAwBF,CACjC,CAEA/2C,KAAKoxC,cAAgB52B,EACrBxa,KAAKmxC,kBAAmB,CAC5B,CAEAwF,oBAAoBn8B,GAChB,IAAKxa,KAAK20C,yBACN,OAEJ,MAAM+C,EAAW13C,KAAKkxC,aAAalrB,iBAAiBhmB,KAAK20C,0BACzD,IAAIgD,EACAC,EAAUp9B,EAAS46B,SAEnBuC,EADsB,WAAtBn9B,EAAS26B,SACC,SAELn1C,KAAK80C,SACsB,UAAtBt6B,EAAS26B,SAAuB,QAAU,OAGpB,UAAtB36B,EAAS26B,SAAuB,OAAS,QAEvD,QAAS3uB,EAAI,EAAGA,EAAIkxB,EAASzzC,OAAQuiB,IACjCkxB,EAASlxB,GAAG7M,MAAMk+B,gBAAkB,GAAGF,KAAWC,GAE1D,CAOA/E,0BAA0B1mB,EAAQ3R,GAC9B,MAAMmtB,EAAW3nC,KAAKyxC,cAChBlQ,EAAQvhC,KAAK80C,SACnB,IAAIn6B,EAAQiY,EAAKU,EA8BblZ,EAAOuY,EAAMS,EA7BjB,GAA0B,QAAtB5Y,EAAS46B,SAETxiB,EAAMzG,EAAOiG,EACbzX,EAASgtB,EAAShtB,OAASiY,EAAM5yB,KAAKwwC,wBAEX,WAAtBh2B,EAAS46B,SAId9hB,EAASqU,EAAShtB,OAASwR,EAAOiG,EAA2B,EAAvBpyB,KAAKwwC,gBAC3C71B,EAASgtB,EAAShtB,OAAS2Y,EAAStzB,KAAKwwC,oBAExC,CAKD,MAAMsH,EAAiC7kB,KAAKmH,IAAIuN,EAASrU,OAASnH,EAAOiG,EAAIuV,EAAS/U,IAAKzG,EAAOiG,GAC5F2lB,EAAiB/3C,KAAKkwC,qBAAqBv1B,OACjDA,EAA0C,EAAjCm9B,EACTllB,EAAMzG,EAAOiG,EAAI0lB,EACbn9B,EAASo9B,IAAmB/3C,KAAKmxC,mBAAqBnxC,KAAKqwC,iBAC3Dzd,EAAMzG,EAAOiG,EAAI2lB,EAAiB,EAE1C,CAMA,GAF2D,QAAtBv9B,EAAS26B,WAAuB5T,GAAiC,UAAtB/mB,EAAS26B,UAAwB5T,EAG7GnO,EAAQuU,EAASvtB,MAAQ+R,EAAO/b,EAA2B,EAAvBpQ,KAAKwwC,gBACzCp2B,EAAQ+R,EAAO/b,EAAIpQ,KAAKwwC,wBANgC,UAAtBh2B,EAAS26B,WAAyB5T,GAAiC,QAAtB/mB,EAAS26B,UAAsB5T,EAS9G5O,EAAOxG,EAAO/b,EACdgK,EAAQutB,EAASvU,MAAQjH,EAAO/b,MAE/B,CAKD,MAAM0nC,EAAiC7kB,KAAKmH,IAAIuN,EAASvU,MAAQjH,EAAO/b,EAAIu3B,EAAShV,KAAMxG,EAAO/b,GAC5F4nC,EAAgBh4C,KAAKkwC,qBAAqB91B,MAChDA,EAAyC,EAAjC09B,EACRnlB,EAAOxG,EAAO/b,EAAI0nC,EACd19B,EAAQ49B,IAAkBh4C,KAAKmxC,mBAAqBnxC,KAAKqwC,iBACzD1d,EAAOxG,EAAO/b,EAAI4nC,EAAgB,EAE1C,CACA,MAAO,CAAEplB,IAAKA,EAAKD,KAAMA,EAAMW,OAAQA,EAAQF,MAAOA,EAAOhZ,QAAOO,SACxE,CAQAk8B,sBAAsB1qB,EAAQ3R,GAC1B,MAAMo4B,EAAkB5yC,KAAK6yC,0BAA0B1mB,EAAQ3R,IAG1Dxa,KAAKmxC,mBAAqBnxC,KAAKqwC,iBAChCuC,EAAgBj4B,OAASsY,KAAKmH,IAAIwY,EAAgBj4B,OAAQ3a,KAAKkwC,qBAAqBv1B,QACpFi4B,EAAgBx4B,MAAQ6Y,KAAKmH,IAAIwY,EAAgBx4B,MAAOpa,KAAKkwC,qBAAqB91B,QAEtF,MAAMkhB,EAAS,CAAC,EAChB,GAAIt7B,KAAKi4C,oBACL3c,EAAO1I,IAAM0I,EAAO3I,KAAO,IAC3B2I,EAAOhI,OAASgI,EAAOlI,MAAQkI,EAAO4T,UAAY5T,EAAO2T,SAAW,GACpE3T,EAAOlhB,MAAQkhB,EAAO3gB,OAAS,WAE9B,CACD,MAAMu0B,EAAYlvC,KAAKioC,YAAYiG,YAAYgB,UACzCD,EAAWjvC,KAAKioC,YAAYiG,YAAYe,SAC9C3T,EAAO3gB,OAASuC,EAAoB01B,EAAgBj4B,QACpD2gB,EAAO1I,IAAM1V,EAAoB01B,EAAgBhgB,KACjD0I,EAAOhI,OAASpW,EAAoB01B,EAAgBtf,QACpDgI,EAAOlhB,MAAQ8C,EAAoB01B,EAAgBx4B,OACnDkhB,EAAO3I,KAAOzV,EAAoB01B,EAAgBjgB,MAClD2I,EAAOlI,MAAQlW,EAAoB01B,EAAgBxf,OAG/CkI,EAAOgY,WADe,WAAtB94B,EAAS26B,SACW,SAGsB,QAAtB36B,EAAS26B,SAAqB,WAAa,aAG/D7Z,EAAOiY,eADe,WAAtB/4B,EAAS46B,SACe,SAGsB,WAAtB56B,EAAS46B,SAAwB,WAAa,aAEtElG,IACA5T,EAAO4T,UAAYhyB,EAAoBgyB,IAEvCD,IACA3T,EAAO2T,SAAW/xB,EAAoB+xB,GAE9C,CACAjvC,KAAKkwC,qBAAuB0C,EAC5BS,GAAarzC,KAAKkxC,aAAav3B,MAAO2hB,EAC1C,CAEAkW,0BACI6B,GAAarzC,KAAKkxC,aAAav3B,MAAO,CAClCiZ,IAAK,IACLD,KAAM,IACNS,MAAO,IACPE,OAAQ,IACR3Y,OAAQ,GACRP,MAAO,GACPk5B,WAAY,GACZC,eAAgB,IAExB,CAEAhC,6BACI8B,GAAarzC,KAAK4rC,MAAMjyB,MAAO,CAC3BiZ,IAAK,GACLD,KAAM,GACNW,OAAQ,GACRF,MAAO,GACP5Y,SAAU,GACV0Z,UAAW,IAEnB,CAEA0iB,yBAAyBzE,EAAa33B,GAClC,MAAM8gB,EAAS,CAAC,EACV4c,EAAmBl4C,KAAKi4C,oBACxBE,EAAwBn4C,KAAKswC,uBAC7BntB,EAASnjB,KAAKioC,YAAYiG,YAChC,GAAIgK,EAAkB,CAClB,MAAMvV,EAAiB3iC,KAAK+mC,eAAenE,4BAC3CyQ,GAAa/X,EAAQt7B,KAAKo4C,kBAAkB59B,EAAU23B,EAAaxP,IACnE0Q,GAAa/X,EAAQt7B,KAAKq4C,kBAAkB79B,EAAU23B,EAAaxP,GACvE,MAEIrH,EAAO9gB,SAAW,SAOtB,IAAI89B,EAAkB,GAClB9kB,EAAUxzB,KAAKy1C,WAAWj7B,EAAU,KACpCiZ,EAAUzzB,KAAKy1C,WAAWj7B,EAAU,KACpCgZ,IACA8kB,GAAmB,cAAc9kB,SAEjCC,IACA6kB,GAAmB,cAAc7kB,QAErC6H,EAAOpH,UAAYokB,EAAgB32B,OAM/BwB,EAAO+rB,YACHgJ,EACA5c,EAAO4T,UAAYhyB,EAAoBiG,EAAO+rB,WAEzCiJ,IACL7c,EAAO4T,UAAY,KAGvB/rB,EAAO8rB,WACHiJ,EACA5c,EAAO2T,SAAW/xB,EAAoBiG,EAAO8rB,UAExCkJ,IACL7c,EAAO2T,SAAW,KAG1BoE,GAAarzC,KAAK4rC,MAAMjyB,MAAO2hB,EACnC,CAEA8c,kBAAkB59B,EAAU23B,EAAaxP,GAGrC,IAAIrH,EAAS,CAAE1I,IAAK,GAAIU,OAAQ,IAC5B+e,EAAeryC,KAAKsyC,iBAAiBH,EAAanyC,KAAK6xC,aAAcr3B,GAezE,OAdIxa,KAAKmwC,YACLkC,EAAeryC,KAAKo2C,qBAAqB/D,EAAcryC,KAAK6xC,aAAclP,IAIpD,WAAtBnoB,EAAS46B,SAIT9Z,EAAOhI,OADgBtzB,KAAKskB,UAAU5K,gBAAgBioB,cACjB0Q,EAAajgB,EAAIpyB,KAAK6xC,aAAal3B,QAAxD,KAGhB2gB,EAAO1I,IAAM1V,EAAoBm1B,EAAajgB,GAE3CkJ,CACX,CAEA+c,kBAAkB79B,EAAU23B,EAAaxP,GAGrC,IASI4V,EATAjd,EAAS,CAAE3I,KAAM,GAAIS,MAAO,IAC5Bif,EAAeryC,KAAKsyC,iBAAiBH,EAAanyC,KAAK6xC,aAAcr3B,GAwBzE,OAvBIxa,KAAKmwC,YACLkC,EAAeryC,KAAKo2C,qBAAqB/D,EAAcryC,KAAK6xC,aAAclP,IAQ1E4V,EADAv4C,KAAK80C,SAC2C,QAAtBt6B,EAAS26B,SAAqB,OAAS,QAGjB,QAAtB36B,EAAS26B,SAAqB,QAAU,OAItC,UAA5BoD,EAEAjd,EAAOlI,MADepzB,KAAKskB,UAAU5K,gBAAgBmoB,aAClBwQ,EAAajiC,EAAIpQ,KAAK6xC,aAAaz3B,OAAvD,KAGfkhB,EAAO3I,KAAOzV,EAAoBm1B,EAAajiC,GAE5CkrB,CACX,CAKA0b,uBAEI,MAAMwB,EAAex4C,KAAK4xC,iBACpB6G,EAAgBz4C,KAAK4rC,MAAMrZ,wBAI3BmmB,EAAwB14C,KAAKywC,aAAapsC,IAAI47B,GACzCA,EAAWiB,gBAAgB3gC,cAAcgyB,yBAEpD,MAAO,CACH8kB,gBAAiB1O,GAA4B6P,EAAcE,GAC3DpB,oBAAqB7O,GAA6B+P,EAAcE,GAChEnB,iBAAkB5O,GAA4B8P,EAAeC,GAC7DlB,qBAAsB/O,GAA6BgQ,EAAeC,GAE1E,CAEA7C,mBAAmB5xC,KAAW00C,GAC1B,OAAOA,EAAU1oC,OAAO,CAACoG,EAAcuiC,IAC5BviC,EAAe4c,KAAKC,IAAI0lB,EAAiB,GACjD30C,EACP,CAEAytC,2BAMI,MAAMt3B,EAAQpa,KAAKskB,UAAU5K,gBAAgBmoB,YACvClnB,EAAS3a,KAAKskB,UAAU5K,gBAAgBioB,aACxCgB,EAAiB3iC,KAAK+mC,eAAenE,4BAC3C,MAAO,CACHhQ,IAAK+P,EAAe/P,IAAM5yB,KAAKwwC,gBAC/B7d,KAAMgQ,EAAehQ,KAAO3yB,KAAKwwC,gBACjCpd,MAAOuP,EAAehQ,KAAOvY,EAAQpa,KAAKwwC,gBAC1Cld,OAAQqP,EAAe/P,IAAMjY,EAAS3a,KAAKwwC,gBAC3Cp2B,MAAOA,EAAQ,EAAIpa,KAAKwwC,gBACxB71B,OAAQA,EAAS,EAAI3a,KAAKwwC,gBAElC,CAEAsE,SACI,MAA2C,QAApC90C,KAAKioC,YAAY4G,cAC5B,CAEAoJ,oBACI,OAAQj4C,KAAKswC,wBAA0BtwC,KAAKmwC,SAChD,CAEAsF,WAAWj7B,EAAUq+B,GACjB,MAAa,MAATA,EAG2B,MAApBr+B,EAASgZ,QAAkBxzB,KAAK4wC,SAAWp2B,EAASgZ,QAEpC,MAApBhZ,EAASiZ,QAAkBzzB,KAAK6wC,SAAWr2B,EAASiZ,OAC/D,CAEAwd,qBAcA,CAEA6F,iBAAiBvH,GACTvvC,KAAK4rC,OACL3uB,GAAYsyB,GAAY1rC,QAAQi1C,IACX,KAAbA,IAAmE,IAAhD94C,KAAK8wC,qBAAqBv9B,QAAQulC,KACrD94C,KAAK8wC,qBAAqBrpC,KAAKqxC,GAC/B94C,KAAK4rC,MAAM/kB,UAAUtI,IAAIu6B,GAAQ,EAIjD,CAEAxH,qBACQtxC,KAAK4rC,QACL5rC,KAAK8wC,qBAAqBjtC,QAAQi1C,IAC9B94C,KAAK4rC,MAAM/kB,UAAU9L,OAAO+9B,EAAQ,GAExC94C,KAAK8wC,qBAAuB,GAEpC,CAEAc,iBACI,MAAMzlB,EAASnsB,KAAK+pB,QACpB,GAAIoC,aAAkB9O,MAClB,OAAO8O,EAAO5rB,cAAcgyB,wBAGhC,GAAIpG,aAAkB1S,QAClB,OAAO0S,EAAOoG,wBAElB,MAAMnY,EAAQ+R,EAAO/R,OAAS,EACxBO,EAASwR,EAAOxR,QAAU,EAEhC,MAAO,CACHiY,IAAKzG,EAAOiG,EACZkB,OAAQnH,EAAOiG,EAAIzX,EACnBgY,KAAMxG,EAAO/b,EACbgjB,MAAOjH,EAAO/b,EAAIgK,EAClBO,SACAP,QAER,EAGJ,SAASi5B,GAAa0F,EAAa9tC,GAC/B,QAAS5K,KAAO4K,EACRA,EAAO+K,eAAe3V,KACtB04C,EAAY14C,GAAO4K,EAAO5K,IAGlC,OAAO04C,CACX,CAKA,SAAS5C,GAAc6C,GACnB,GAAqB,iBAAVA,GAA+B,MAATA,EAAe,CAC5C,MAAO14C,EAAO24C,GAASD,EAAMhpC,MAAM4/B,IACnC,OAAQqJ,GAAmB,OAAVA,EAAqC,KAApBl8B,WAAWzc,EACjD,CACA,OAAO04C,GAAS,IACpB,CAOA,SAASxD,GAA6B0D,GAClC,MAAO,CACHtmB,IAAKK,KAAKkmB,MAAMD,EAAWtmB,KAC3BQ,MAAOH,KAAKkmB,MAAMD,EAAW9lB,OAC7BE,OAAQL,KAAKkmB,MAAMD,EAAW5lB,QAC9BX,KAAMM,KAAKkmB,MAAMD,EAAWvmB,MAC5BvY,MAAO6Y,KAAKkmB,MAAMD,EAAW9+B,OAC7BO,OAAQsY,KAAKkmB,MAAMD,EAAWv+B,QAEtC,CAWA,MAcMy+B,GAAe,6BAOrB,MAAMC,GACFx5C,cACIG,KAAKs5C,aAAe,SACpBt5C,KAAKu5C,WAAa,GAClBv5C,KAAKw5C,cAAgB,GACrBx5C,KAAKy5C,YAAc,GACnBz5C,KAAK05C,WAAa,GAClB15C,KAAK25C,SAAW,GAChB35C,KAAK45C,OAAS,GACd55C,KAAK65C,QAAU,GACf75C,KAAKokC,aAAc,CACvB,CACAd,OAAO4E,GACH,MAAM/kB,EAAS+kB,EAAWgG,YAC1BluC,KAAKioC,YAAcC,EACfloC,KAAK45C,SAAWz2B,EAAO/I,OACvB8tB,EAAWoG,WAAW,CAAEl0B,MAAOpa,KAAK45C,SAEpC55C,KAAK65C,UAAY12B,EAAOxI,QACxButB,EAAWoG,WAAW,CAAE3zB,OAAQ3a,KAAK65C,UAEzC3R,EAAW+E,YAAYpmB,UAAUtI,IAAI66B,IACrCp5C,KAAKokC,aAAc,CACvB,CAKAxR,IAAItyB,EAAQ,IACR,OAAAN,KAAKw5C,cAAgB,GACrBx5C,KAAKu5C,WAAaj5C,EAClBN,KAAKy5C,YAAc,aACZz5C,IACX,CAKA2yB,KAAKryB,EAAQ,IACT,OAAAN,KAAK25C,SAAWr5C,EAChBN,KAAK05C,WAAa,OACX15C,IACX,CAKAszB,OAAOhzB,EAAQ,IACX,OAAAN,KAAKu5C,WAAa,GAClBv5C,KAAKw5C,cAAgBl5C,EACrBN,KAAKy5C,YAAc,WACZz5C,IACX,CAKAozB,MAAM9yB,EAAQ,IACV,OAAAN,KAAK25C,SAAWr5C,EAChBN,KAAK05C,WAAa,QACX15C,IACX,CAMAyhC,MAAMnhC,EAAQ,IACV,OAAAN,KAAK25C,SAAWr5C,EAChBN,KAAK05C,WAAa,QACX15C,IACX,CAMAwhC,IAAIlhC,EAAQ,IACR,OAAAN,KAAK25C,SAAWr5C,EAChBN,KAAK05C,WAAa,MACX15C,IACX,CAOAoa,MAAM9Z,EAAQ,IACV,OAAIN,KAAKioC,YACLjoC,KAAKioC,YAAYqG,WAAW,CAAEl0B,MAAO9Z,IAGrCN,KAAK45C,OAASt5C,EAEXN,IACX,CAOA2a,OAAOra,EAAQ,IACX,OAAIN,KAAKioC,YACLjoC,KAAKioC,YAAYqG,WAAW,CAAE3zB,OAAQra,IAGtCN,KAAK65C,QAAUv5C,EAEZN,IACX,CAOA85C,mBAAmBvF,EAAS,IACxB,OAAAv0C,KAAK2yB,KAAK4hB,GACVv0C,KAAK05C,WAAa,SACX15C,IACX,CAOA+5C,iBAAiBxF,EAAS,IACtB,OAAAv0C,KAAK4yB,IAAI2hB,GACTv0C,KAAKy5C,YAAc,SACZz5C,IACX,CAKAmuC,QAII,IAAKnuC,KAAKioC,cAAgBjoC,KAAKioC,YAAY1hB,cACvC,OAEJ,MAAM+U,EAASt7B,KAAKioC,YAAYG,eAAezuB,MACzCqgC,EAAeh6C,KAAKioC,YAAYgF,YAAYtzB,MAC5CwJ,EAASnjB,KAAKioC,YAAYiG,aACxB9zB,QAAOO,SAAQs0B,WAAUC,aAAc/rB,EACzC82B,IAAuC,SAAV7/B,GAA8B,UAAVA,GACjD60B,GAAyB,SAAbA,GAAoC,UAAbA,GACnCiL,IAAsC,SAAXv/B,GAAgC,UAAXA,GAChDu0B,GAA2B,SAAdA,GAAsC,UAAdA,GACrCiL,EAAYn6C,KAAK05C,WACjBU,EAAUp6C,KAAK25C,SACfpY,EAAmD,QAA3CvhC,KAAKioC,YAAYiG,YAAYO,UAC3C,IAAI4L,EAAa,GACbC,EAAc,GACd/G,EAAiB,GACjB0G,EACA1G,EAAiB,aAEE,WAAd4G,GACL5G,EAAiB,SACbhS,EACA+Y,EAAcF,EAGdC,EAAaD,GAGZ7Y,EACa,SAAd4Y,GAAsC,QAAdA,GACxB5G,EAAiB,WACjB8G,EAAaD,IAEM,UAAdD,GAAuC,UAAdA,KAC9B5G,EAAiB,aACjB+G,EAAcF,GAGC,SAAdD,GAAsC,UAAdA,GAC7B5G,EAAiB,aACjB8G,EAAaD,IAEM,UAAdD,GAAuC,QAAdA,KAC9B5G,EAAiB,WACjB+G,EAAcF,GAElB9e,EAAO9gB,SAAWxa,KAAKs5C,aACvBhe,EAAO+e,WAAaJ,EAA4B,IAAMI,EACtD/e,EAAOif,UAAYL,EAA0B,IAAMl6C,KAAKu5C,WACxDje,EAAOkf,aAAex6C,KAAKw5C,cAC3Ble,EAAOgf,YAAcL,EAA4B,IAAMK,EACvDN,EAAazG,eAAiBA,EAC9ByG,EAAa1G,WAAa4G,EAA0B,aAAel6C,KAAKy5C,WAC5E,CAKA9U,UACI,GAAI3kC,KAAKokC,cAAgBpkC,KAAKioC,YAC1B,OAEJ,MAAM3M,EAASt7B,KAAKioC,YAAYG,eAAezuB,MACzChN,EAAS3M,KAAKioC,YAAYgF,YAC1B+M,EAAertC,EAAOgN,MAC5BhN,EAAOka,UAAU9L,OAAOq+B,IACxBY,EAAazG,eACTyG,EAAa1G,WACThY,EAAOif,UACHjf,EAAOkf,aACHlf,EAAO+e,WACH/e,EAAOgf,YACHhf,EAAO9gB,SACH,GAC5Bxa,KAAKioC,YAAc,KACnBjoC,KAAKokC,aAAc,CACvB,EAGJ,IACMqW,GAAsB,MAA5B,MAAMA,EACF56C,YAAYknC,EAAgBziB,EAAW5G,EAAWuyB,GAC9CjwC,KAAK+mC,eAAiBA,EACtB/mC,KAAKskB,UAAYA,EACjBtkB,KAAK0d,UAAYA,EACjB1d,KAAKiwC,kBAAoBA,CAC7B,CAIAyK,SACI,OAAO,IAAIrB,EACf,CAKAsB,oBAAoBxuB,GAChB,OAAO,IAAI0jB,GAAkC1jB,EAAQnsB,KAAK+mC,eAAgB/mC,KAAKskB,UAAWtkB,KAAK0d,UAAW1d,KAAKiwC,kBACnH,QACSjwC,KAAKa,UAAI,SAAAC,GAAA,WAAAA,GAA+F25C,GAnkEV15C,MAmkEkD4d,IAnkElD5d,MAmkE+EymB,MAnkE/EzmB,MAmkEoG+1B,GAnkEpG/1B,MAmkE8HqqC,IAAgB,CAA+C,QAC3RprC,KAAK0Y,WApkEyF3X,MAAE,CAAA4X,MAokEY8hC,EAAsBrpC,QAAtBqpC,EAAsB55C,UAAAsQ,WAAc,QAAW,EACvK,OAtBKspC,CAAsB,KAgCxBG,GAAe,EAWbC,GAAO,MAAb,MAAMA,EACFh7C,YAEAi7C,EAAkB7K,EAAmBjL,EAA2B+V,EAAkBlP,EAAqBrnB,EAAWH,EAASC,EAAW02B,EAAiBlP,EAAWC,EAAyBkP,GACvLj7C,KAAK86C,iBAAmBA,EACxB96C,KAAKiwC,kBAAoBA,EACzBjwC,KAAKglC,0BAA4BA,EACjChlC,KAAK+6C,iBAAmBA,EACxB/6C,KAAK6rC,oBAAsBA,EAC3B7rC,KAAKwkB,UAAYA,EACjBxkB,KAAKqkB,QAAUA,EACfrkB,KAAKskB,UAAYA,EACjBtkB,KAAKg7C,gBAAkBA,EACvBh7C,KAAK8rC,UAAYA,EACjB9rC,KAAK+rC,wBAA0BA,EAC/B/rC,KAAKi7C,sBAAwBA,CACjC,CAMA1+B,OAAO4G,GACH,MAAMmV,EAAOt4B,KAAKk7C,qBACZC,EAAOn7C,KAAKo7C,mBAAmB9iB,GAC/B+iB,EAAer7C,KAAKs7C,oBAAoBH,GACxCI,EAAgB,IAAIlS,GAAclmB,GACxCo4B,SAAc9M,UAAY8M,EAAc9M,WAAazuC,KAAKg7C,gBAAgB16C,MACnE,IAAImrC,GAAW4P,EAAc/iB,EAAM6iB,EAAMI,EAAev7C,KAAKqkB,QAASrkB,KAAK6rC,oBAAqB7rC,KAAKskB,UAAWtkB,KAAK8rC,UAAW9rC,KAAK+rC,wBAAwD,mBAA/B/rC,KAAKi7C,sBAA4Cj7C,KAAKwkB,UAAU1U,IAAI0rC,OAC7O,CAMAhhC,WACI,OAAOxa,KAAK+6C,gBAChB,CAKAK,mBAAmB9iB,GACf,MAAM6iB,EAAOn7C,KAAKskB,UAAUpK,cAAc,OAC1CihC,SAAKnd,GAAK,eAAe4c,KACzBO,EAAKt0B,UAAUtI,IAAI,oBACnB+Z,EAAK1d,YAAYugC,GACVA,CACX,CAMAD,qBACI,MAAM5iB,EAAOt4B,KAAKskB,UAAUpK,cAAc,OAC1C,OAAAla,KAAKiwC,kBAAkB5E,sBAAsBzwB,YAAY0d,GAClDA,CACX,CAMAgjB,oBAAoBH,GAGhB,OAAKn7C,KAAKilC,UACNjlC,KAAKilC,QAAUjlC,KAAKwkB,UAAU1U,IAAI2rC,QAE/B,IAAI3W,GAAgBqW,EAAMn7C,KAAKglC,0BAA2BhlC,KAAKilC,QAASjlC,KAAKwkB,UAAWxkB,KAAKskB,UACxG,QACStkB,KAAKa,UAAI,SAAAC,GAAA,WAAAA,GAA+F+5C,GAlqEV95C,MAkqEmCkoC,IAlqEnCloC,MAkqEqEqqC,IAlqErErqC,MAkqEkGA,OAlqElGA,MAkqE0I05C,IAlqE1I15C,MAkqE6KkpC,IAlqE7KlpC,MAkqEmNA,OAlqEnNA,MAkqE2OA,OAlqE3OA,MAkqEiQymB,MAlqEjQzmB,MAkqEsR26C,IAlqEtR36C,MAkqEoT46C,MAlqEpT56C,MAkqE4UwpC,IAlqE5UxpC,MAkqEsXg2B,MAAqB,IAA+D,QACxiB/2B,KAAK0Y,WAnqEyF3X,MAAE,CAAA4X,MAmqEYkiC,EAAOzpC,QAAPypC,EAAOh6C,UAAAsQ,WAAc,QAAW,EACxJ,OA1EK0pC,CAAO,KAyFb,MA2BMe,GAAwC,IAAIt6C,MAAe,wCAAyC,CACtG6P,WAAY,OACZC,QAASA,KACL,MAAMmkC,KAAUluB,OAAOwzB,IACvB,MAAO,IAAMtF,EAAQuF,iBAAiB1R,YAAW,IAsXnDyS,GAAiD,CACnDr6C,QAASo6C,GACTE,KAAM,CAACjB,IACPkB,WAPJ,SAASC,GAAuDzG,GAC5D,MAAO,IAAMA,EAAQuF,iBAAiB1R,YAC1C,GAME,IAEI6S,GAAa,MAAnB,MAAMA,SACOj8C,KAAKa,UAAI,SAAAC,GAAA,WAAAA,GAA+Fm7C,EAAa,CAAoD,QACzKj8C,KAAK2W,UAhlFyF5V,KAAE,CAAAE,KAglFSg7C,GAAkL,QAC3Rj8C,KAAK4W,UAjlFyF7V,MAAE,CAAAiW,UAilFmC,CAAC6jC,GAASgB,IAA+C3kC,QAAA,CAAYwY,GAAYmX,GAAczD,GAAiBA,KAAqB,EACpR,OAJK6Y,CAAa,mBCz1FnB,SAAAC,GAAAn5C,EAAAC,GAAA,CACA,MAAMm5C,GACFt8C,cAEIG,KAAKo8C,KAAO,SAEZp8C,KAAKupC,WAAa,GAElBvpC,KAAKwpC,aAAc,EAEnBxpC,KAAKypC,cAAgB,GAErBzpC,KAAKq8C,cAAe,EAEpBr8C,KAAKoa,MAAQ,GAEbpa,KAAK2a,OAAS,GAEd3a,KAAKN,KAAO,KAEZM,KAAKs8C,gBAAkB,KAEvBt8C,KAAKu8C,eAAiB,KAEtBv8C,KAAKw8C,UAAY,KAEjBx8C,KAAKy8C,WAAY,EAMjBz8C,KAAK08C,UAAY,iBASjB18C,KAAK28C,cAAe,EAMpB38C,KAAK48C,mBAAoB,EAKzB58C,KAAK68C,gBAAiB,EAOtB78C,KAAK88C,2BAA4B,CACrC,EAMJ,IAIMC,GAAkB,MAAxB,MAAMA,UAA2B5Y,GAC7BtkC,YAAYE,EAAai9C,EAAmB14B,EAAWwjB,EAASmV,EAAuB54B,EAAS4jB,EAAaiV,GACzGj7C,QACAjC,KAAKD,YAAcA,EACnBC,KAAKg9C,kBAAoBA,EACzBh9C,KAAK8nC,QAAUA,EACf9nC,KAAKi9C,sBAAwBA,EAC7Bj9C,KAAKqkB,QAAUA,EACfrkB,KAAKioC,YAAcA,EACnBjoC,KAAKk9C,cAAgBA,EACrBl9C,KAAK0d,aAAY2J,OAAO7P,GAExBxX,KAAKm9C,WAAa,KAElBn9C,KAAKo9C,qCAAuC,KAM5Cp9C,KAAKq9C,sBAAwB,KAO7Br9C,KAAKs9C,qBAAuB,GAC5Bt9C,KAAKu9C,sBAAqBl2B,OAAOm2B,OACjCx9C,KAAKwkB,aAAY6C,OAAOC,OACxBtnB,KAAKy9C,cAAe,EAOpBz9C,KAAKqkC,gBAAmBE,IAChBvkC,KAAK0rC,cAAcnlB,cAGvB,MAAMhhB,EAASvF,KAAK0rC,cAAcrH,gBAAgBE,GAClD,OAAAvkC,KAAK09C,mBACEn4C,GAEXvF,KAAKskB,UAAYA,EACbtkB,KAAK8nC,QAAQyU,gBACbv8C,KAAKs9C,qBAAqB71C,KAAKzH,KAAK8nC,QAAQyU,eAEpD,CACAoB,mBAAmB3f,GACfh+B,KAAKs9C,qBAAqB71C,KAAKu2B,GAC/Bh+B,KAAKu9C,mBAAmBK,cAC5B,CACAC,sBAAsB7f,GAClB,MAAM1qB,EAAQtT,KAAKs9C,qBAAqB/pC,QAAQyqB,GAC5C1qB,GAAQ,IACRtT,KAAKs9C,qBAAqB9pC,OAAOF,EAAO,GACxCtT,KAAKu9C,mBAAmBK,eAEhC,CACAF,mBACI19C,KAAK89C,uBACL99C,KAAK+9C,wBACL/9C,KAAKg+C,sBACT,CAKAA,uBACIh+C,KAAKi+C,YACT,CACA3nC,cACItW,KAAKy9C,cAAe,EACpBz9C,KAAKk+C,eACT,CAKA1Z,sBAAsBD,GACdvkC,KAAK0rC,cAAcnlB,cAGvB,MAAMhhB,EAASvF,KAAK0rC,cAAclH,sBAAsBD,GACxD,OAAAvkC,KAAK09C,mBACEn4C,CACX,CAKAk/B,qBAAqBF,GACbvkC,KAAK0rC,cAAcnlB,cAGvB,MAAMhhB,EAASvF,KAAK0rC,cAAcjH,qBAAqBF,GACvD,OAAAvkC,KAAK09C,mBACEn4C,CACX,CAGA44C,kBACSn+C,KAAKo+C,kBACNp+C,KAAKi+C,YAEb,CAMAI,YAAYx8B,EAAS1N,GACZnU,KAAKi9C,sBAAsB/5B,YAAYrB,KACxCA,EAAQoB,UAAW,EAEnBjjB,KAAKqkB,QAAQc,kBAAkB,KAC3B,MAAM3I,EAAWA,KACbqF,EAAQqD,oBAAoB,OAAQ1I,GACpCqF,EAAQqD,oBAAoB,YAAa1I,GACzCqF,EAAQkF,gBAAgB,WAAU,EAEtClF,EAAQ/I,iBAAiB,OAAQ0D,GACjCqF,EAAQ/I,iBAAiB,YAAa0D,EAAQ,IAGtDqF,EAAQyE,MAAMnS,EAClB,CAKAmqC,oBAAoB5J,EAAUvgC,GAC1B,IAAIoqC,EAAiBv+C,KAAKD,YAAYQ,cAAc6lB,cAAcsuB,GAC9D6J,GACAv+C,KAAKq+C,YAAYE,EAAgBpqC,EAEzC,CAKA8pC,aACQj+C,KAAKy9C,iBAMTx2B,OAAgB,KACZ,MAAMpF,EAAU7hB,KAAKD,YAAYQ,cACjC,OAAQP,KAAK8nC,QAAQ4U,WACjB,KAAK,EACL,IAAK,SAMI18C,KAAKo+C,kBACNv8B,EAAQyE,QAEZ,MACJ,KAAK,EACL,IAAK,iBAC2BtmB,KAAKm9C,YAAYz3B,uBAIzC1lB,KAAKw+C,wBAET,MACJ,IAAK,gBACDx+C,KAAKs+C,oBAAoB,4CACzB,MACJ,QACIt+C,KAAKs+C,oBAAoBt+C,KAAK8nC,QAAQ4U,WAE9C,EACD,CAAEx1B,SAAUlnB,KAAKwkB,WACxB,CAEA05B,gBACI,MAAMO,EAAcz+C,KAAK8nC,QAAQ6U,aACjC,IAAI+B,EAAqB,KAWzB,GAV2B,iBAAhBD,EACPC,EAAqB1+C,KAAKskB,UAAU8B,cAAcq4B,GAEtB,kBAAhBA,EACZC,EAAqBD,EAAcz+C,KAAKo9C,qCAAuC,KAE1EqB,IACLC,EAAqBD,GAGrBz+C,KAAK8nC,QAAQ6U,cACb+B,GACoC,mBAA7BA,EAAmBp4B,MAAsB,CAChD,MAAMrL,EAAgBD,KAChB6G,EAAU7hB,KAAKD,YAAYQ,gBAK5B0a,GACDA,IAAkBjb,KAAKskB,UAAUzJ,MACjCI,IAAkB4G,GAClBA,EAAQkL,SAAS9R,MACbjb,KAAKk9C,eACLl9C,KAAKk9C,cAAchxB,SAASwyB,EAAoB1+C,KAAKq9C,uBACrDr9C,KAAKq9C,sBAAwB,MAG7BqB,EAAmBp4B,QAG/B,CACItmB,KAAKm9C,YACLn9C,KAAKm9C,WAAWp4B,SAExB,CAEAy5B,wBAEQx+C,KAAKD,YAAYQ,cAAc+lB,OAC/BtmB,KAAKD,YAAYQ,cAAc+lB,OAEvC,CAEA83B,iBACI,MAAMv8B,EAAU7hB,KAAKD,YAAYQ,cAC3B0a,EAAgBD,KACtB,OAAO6G,IAAY5G,GAAiB4G,EAAQkL,SAAS9R,EACzD,CAEA6iC,uBACQ99C,KAAK0d,UAAUhG,YACf1X,KAAKm9C,WAAan9C,KAAKg9C,kBAAkBzgC,OAAOvc,KAAKD,YAAYQ,eAG7DP,KAAKskB,YACLtkB,KAAKo9C,qCAAuCpiC,MAGxD,CAEA+iC,wBAGI/9C,KAAKioC,YAAY8F,gBAAgB7nC,UAAU,KACnClG,KAAK8nC,QAAQuU,cACbr8C,KAAKm+C,iBAAgB,EAGjC,QACSn+C,KAAKa,UAAI,SAAAC,GAAA,WAAAA,GAA+Fi8C,GAAVh8C,MAA8CA,OAA9CA,MAAwE4d,IAAxE5d,MAAwGymB,KAAQ,GAAhHzmB,MAA6Io7C,IAA7Ip7C,MAAsK4d,IAAtK5d,MAA0MA,OAA1MA,MAAgO+1B,IAAhO/1B,MAA4P4d,IAAe,CAA8C,QACvZ3e,KAAKy6B,UADyF15B,MAAE,CAAAE,KACJ87C,EAAkBl6C,UAAA,2BAAA63B,UAAA,SAAA33B,EAAAC,GAA0gB,GAA1gB,EAAAD,GADhBhC,MAC2gBslC,GAAe,KAAAtjC,EAAA,KAAA43B,EAD1hB55B,MAAE45B,EAAF55B,WAAEiC,EAAA0oC,cAAA/Q,EAAAE,MAAA,GAAA7D,UAAA,YACwG,KAAI,0BAAAtsB,SAAA,EAAA5H,aAAA,SAAAC,EAAAC,GAAA,EAAAD,GAD9GhC,MAAE,KAAAiC,EAAA8kC,QAAA9J,IACU,KADZj9B,CACgB,OAAAiC,EAAA8kC,QAAAsU,KADhBr7C,CACgB,aAAAiC,EAAA8kC,QAAA2U,UADhB17C,CACgB,kBAAAiC,EAAA8kC,QAAA0U,UAAE,KAAIx5C,EAAAs6C,qBAAwB,GAD9Cv8C,CAC+C,aAAAiC,EAAA8kC,QAAA0U,UAD/Cz7C,CAC+C,mBAAAiC,EAAA8kC,QAAAwU,iBAAtB,KAAI,EAAAplB,YAAA,EAAA91B,SAAA,CAD7BL,aAAEg6B,MAAA,EAAAC,KAAA,EAAAC,OAAA,yBAAAC,SAAA,SAAAn4B,EAAAC,GAAA,EAAAD,GAAFhC,MAAE,EAAAm7C,GAAA,oBAC6oB,EAAA9gB,aAAA,CAA8JiL,IAAe/K,OAAA,sGAAAC,cAAA,GAAyN,EAC/nC,OAlQKwhB,CAAkB,KA+RxB,MAAM4B,GACF9+C,YAAYqoC,EAAY/kB,GACpBnjB,KAAKkoC,WAAaA,EAClBloC,KAAKmjB,OAASA,EAEdnjB,KAAKy/B,OAAS,IAAItzB,IAClBnM,KAAKq8C,aAAel5B,EAAOk5B,aAC3Br8C,KAAK+tC,cAAgB7F,EAAW6F,gBAChC/tC,KAAKqqC,cAAgBnC,EAAWmC,gBAChCrqC,KAAK8qC,qBAAuB5C,EAAW4C,uBACvC9qC,KAAKg+B,GAAK7a,EAAO6a,GACjBh+B,KAAKqqC,cAAcnkC,UAAUmV,IzBpXtB,KyBqXCA,EAAM4N,UAAuBjpB,KAAKq8C,eAAiBzgC,GAAeP,KAClEA,EAAMujC,iBACN5+C,KAAKkpC,WAAM9iC,EAAW,CAAEy4C,YAAa,aAAY,GAGzD7+C,KAAK+tC,cAAc7nC,UAAU,KACpBlG,KAAKq8C,cACNr8C,KAAKkpC,WAAM9iC,EAAW,CAAEy4C,YAAa,SAAS,GAGtD7+C,KAAK8+C,oBAAsB5W,EAAW+F,cAAc/nC,UAAU,MAEjB,IAArCid,EAAO25B,2BACP98C,KAAKkpC,OAAM,EAGvB,CAMAA,MAAM3jC,EAAQ4O,GACV,GAAInU,KAAK++C,kBAAmB,CACxB,MAAMC,EAAgBh/C,KAAKy/B,OAC3Bz/B,KAAK++C,kBAAkB1B,sBAAwBlpC,GAAS0qC,aAAe,UAGvE7+C,KAAK8+C,oBAAoBlvC,cACzB5P,KAAKkoC,WAAWvD,UAChBqa,EAAc34C,KAAKd,GACnBy5C,EAAct5C,WACd1F,KAAKi/C,kBAAoBj/C,KAAK++C,kBAAoB,IACtD,CACJ,CAEAxW,iBACI,OAAAvoC,KAAKkoC,WAAWK,iBACTvoC,IACX,CAMAsuC,WAAWl0B,EAAQ,GAAIO,EAAS,IAC5B,OAAA3a,KAAKkoC,WAAWoG,WAAW,CAAEl0B,QAAOO,WAC7B3a,IACX,CAEA0uC,cAAcC,GACV,OAAA3uC,KAAKkoC,WAAWwG,cAAcC,GACvB3uC,IACX,CAEA4uC,iBAAiBD,GACb,OAAA3uC,KAAKkoC,WAAW0G,iBAAiBD,GAC1B3uC,IACX,EAIJ,MAAMk/C,GAAyB,IAAI59C,MAAe,uBAAwB,CACtE6P,WAAY,OACZC,QAASA,KACL,MAAMmkC,KAAUluB,OAAOwzB,IACvB,MAAO,IAAMtF,EAAQuF,iBAAiB3R,OAAM,IAI9CgW,GAAc,IAAI79C,MAAe,cAEjC89C,GAAwB,IAAI99C,MAAe,uBAqBjD,IAAI+9C,GAAW,EACTC,GAAM,MAAZ,MAAMA,EAEF,eAAIC,GACA,OAAOv/C,KAAKw/C,cAAgBx/C,KAAKw/C,cAAcD,YAAcv/C,KAAKy/C,uBACtE,CAEA,eAAIC,GACA,OAAO1/C,KAAKw/C,cAAgBx/C,KAAKw/C,cAAcE,YAAc1/C,KAAK2/C,uBACtE,CACA9/C,YAAY+/C,EAAUp7B,EAAWq7B,EAAiBL,EAAevP,EAAmB3G,GAChFtpC,KAAK4/C,SAAWA,EAChB5/C,KAAKwkB,UAAYA,EACjBxkB,KAAK6/C,gBAAkBA,EACvB7/C,KAAKw/C,cAAgBA,EACrBx/C,KAAKiwC,kBAAoBA,EACzBjwC,KAAKy/C,wBAA0B,GAC/Bz/C,KAAK8/C,2BAA6B,IAAI3zC,IACtCnM,KAAK2/C,wBAA0B,IAAIxzC,IACnCnM,KAAK+/C,oBAAsB,IAAI1gC,IAK/Brf,KAAKggD,kBAAiBC,MAAM,IAAMjgD,KAAKu/C,YAAYt7C,OAC7CjE,KAAKkgD,qBACLlgD,KAAKkgD,qBAAqB35C,QAAK+a,WAAUlb,KAC/CpG,KAAK2sC,gBAAkBrD,CAC3B,CACA6W,KAAKC,EAAwBj9B,IAEzBA,EAAS,IADSnjB,KAAK6/C,iBAAmB,IAAI1D,MACnBh5B,IACpB6a,GAAK7a,EAAO6a,IAAM,cAAcqhB,KACnCl8B,EAAO6a,IACPh+B,KAAKqgD,cAAcl9B,EAAO6a,IAI9B,MAAMud,EAAgBv7C,KAAKsgD,kBAAkBn9B,GACvC+kB,EAAaloC,KAAK4/C,SAASrjC,OAAOg/B,GAClCgF,EAAY,IAAI5B,GAAUzW,EAAY/kB,GACtCq9B,EAAkBxgD,KAAKygD,iBAAiBvY,EAAYqY,EAAWp9B,GACrEo9B,SAAUxB,kBAAoByB,EAC9BxgD,KAAK0gD,qBAAqBN,EAAwBG,EAAWC,EAAiBr9B,GAEzEnjB,KAAKu/C,YAAYt7C,QAClBjE,KAAK2gD,+CAET3gD,KAAKu/C,YAAY93C,KAAK84C,GACtBA,EAAU9gB,OAAOv5B,UAAU,IAAMlG,KAAK4gD,kBAAkBL,GAAW,IACnEvgD,KAAK0/C,YAAYr5C,KAAKk6C,GACfA,CACX,CAIAM,WACIC,GAAe9gD,KAAKu/C,YAAawB,GAAUA,EAAO7X,QACtD,CAKAmX,cAAcriB,GACV,OAAOh+B,KAAKu/C,YAAYyB,KAAKD,GAAUA,EAAO/iB,KAAOA,EACzD,CACA1nB,cAIIwqC,GAAe9gD,KAAKy/C,wBAAyBsB,KAEJ,IAAjCA,EAAO59B,OAAO05B,gBACd78C,KAAK4gD,kBAAkBG,GAAQ,EAAK,GAM5CD,GAAe9gD,KAAKy/C,wBAAyBsB,GAAUA,EAAO7X,SAC9DlpC,KAAK8/C,2BAA2Bp6C,WAChC1F,KAAK2/C,wBAAwBj6C,WAC7B1F,KAAKy/C,wBAA0B,EACnC,CAMAa,kBAAkBn9B,GACd,MAAMqN,EAAQ,IAAI6Y,GAAc,CAC5BwD,iBAAkB1pB,EAAO0pB,kBACrB7sC,KAAK4/C,SAASplC,WAAWkgC,SAASZ,qBAAqBC,mBAC3DzQ,eAAgBnmB,EAAOmmB,gBAAkBtpC,KAAK2sC,kBAC9CpD,WAAYpmB,EAAOomB,WACnBC,YAAarmB,EAAOqmB,YACpBiF,UAAWtrB,EAAOsrB,UAClBM,SAAU5rB,EAAO4rB,SACjBC,UAAW7rB,EAAO6rB,UAClBC,SAAU9rB,EAAO8rB,SACjBC,UAAW/rB,EAAO+rB,UAClB90B,MAAO+I,EAAO/I,MACdO,OAAQwI,EAAOxI,OACf+uB,oBAAqBvmB,EAAOy5B,oBAEhC,OAAIz5B,EAAOsmB,gBACPjZ,EAAMiZ,cAAgBtmB,EAAOsmB,eAE1BjZ,CACX,CAOAiwB,iBAAiBlL,EAASgL,EAAWp9B,GACjC,MAAM89B,EAAe99B,EAAO+D,UAAY/D,EAAOygB,kBAAkB1c,SAC3DlQ,EAAY,CACd,CAAExV,QAAS26C,GAAcllC,SAAUkM,GACnC,CAAE3hB,QAASm9C,GAAW1nC,SAAUspC,GAChC,CAAE/+C,QAASiqC,GAAYx0B,SAAUs+B,IAErC,IAAI2L,EACA/9B,EAAOud,UACyB,mBAArBvd,EAAOud,UACdwgB,EAAgB/9B,EAAOud,WAGvBwgB,EAAgB/9B,EAAOud,UAAUz/B,KACjC+V,EAAUvP,QAAQ0b,EAAOud,UAAU1pB,UAAUmM,KAIjD+9B,EAAgBnE,GAEpB,MAAMoE,EAAkB,IAAIxd,GAAgBud,EAAe/9B,EAAOygB,iBAAkBtc,MAAS/K,OAAO,CAAE5P,OAAQs0C,GAAgBjhD,KAAKwkB,UAAWxN,cAAcmM,EAAO0gB,0BAEnK,OADqB0R,EAAQjS,OAAO6d,GAChBC,QACxB,CASAV,qBAAqBN,EAAwBG,EAAWC,EAAiBr9B,GACrE,GAAIi9B,aAAkCiB,MAAa,CAC/C,MAAMn6B,EAAWlnB,KAAKshD,gBAAgBn+B,EAAQo9B,EAAWC,OAAiBp6C,GAC1E,IAAI69B,EAAU,CAAEsd,UAAWp+B,EAAOzjB,KAAM6gD,aACpCp9B,EAAOq+B,kBACPvd,EAAU,IACHA,KACmC,mBAA3B9gB,EAAOq+B,gBACZr+B,EAAOq+B,kBACPr+B,EAAOq+B,kBAGrBhB,EAAgB/b,qBAAqB,IAAIV,GAAeqc,EAAwB,KAAMnc,EAAS/c,GACnG,KACK,CACD,MAAMA,EAAWlnB,KAAKshD,gBAAgBn+B,EAAQo9B,EAAWC,EAAiBxgD,KAAKwkB,WACzEi9B,EAAajB,EAAgBhc,sBAAsB,IAAIb,GAAgByc,EAAwBj9B,EAAOygB,iBAAkB1c,EAAU/D,EAAO0gB,2BAC/I0c,EAAU/a,aAAeic,EACzBlB,EAAUtB,kBAAoBwC,EAAWL,QAC7C,CACJ,CAWAE,gBAAgBn+B,EAAQo9B,EAAWC,EAAiBkB,GAChD,MAAMT,EAAe99B,EAAO+D,UAAY/D,EAAOygB,kBAAkB1c,SAC3DlQ,EAAY,CACd,CAAExV,QAAS29C,GAAaloC,SAAUkM,EAAOzjB,MACzC,CAAE8B,QAASm9C,GAAW1nC,SAAUspC,IAEpC,OAAIp9B,EAAOnM,YACyB,mBAArBmM,EAAOnM,UACdA,EAAUvP,QAAQ0b,EAAOnM,UAAUupC,EAAWp9B,EAAQq9B,IAGtDxpC,EAAUvP,QAAQ0b,EAAOnM,YAG7BmM,EAAOsrB,aACLwS,IACGA,EAAanxC,IAAIwf,GAAgB,KAAM,CAAEqI,UAAU,MACxD3gB,EAAUvP,KAAK,CACXjG,QAAS8tB,GACTrY,SAAU,CAAE3W,MAAO6iB,EAAOsrB,UAAWx4B,UAAQ+U,YAG9C1D,MAAS/K,OAAO,CAAE5P,OAAQs0C,GAAgBS,EAAkB1qC,aACvE,CAMA4pC,kBAAkBL,EAAW3yC,GACzB,MAAM0F,EAAQtT,KAAKu/C,YAAYhsC,QAAQgtC,GACnCjtC,GAAQ,IACRtT,KAAKu/C,YAAY/rC,OAAOF,EAAO,GAG1BtT,KAAKu/C,YAAYt7C,SAClBjE,KAAK+/C,oBAAoBl8C,QAAQ,CAACgS,EAAegM,KACzChM,EACAgM,EAAQ1D,aAAa,cAAetI,GAGpCgM,EAAQkF,gBAAgB,cAAa,GAG7C/mB,KAAK+/C,oBAAoBnZ,QACrBh5B,GACA5N,KAAKkgD,qBAAqB75C,QAI1C,CAEAs6C,+CACI,MAAMgB,EAAmB3hD,KAAKiwC,kBAAkB5E,sBAEhD,GAAIsW,EAAiBl3B,cAAe,CAChC,MAAMm3B,EAAWD,EAAiBl3B,cAAcxrB,SAChD,QAASunB,EAAIo7B,EAAS39C,OAAS,EAAGuiB,GAAI,EAAIA,IAAK,CAC3C,MAAMq7B,EAAUD,EAASp7B,GACrBq7B,IAAYF,GACS,WAArBE,EAAQh/B,UACa,UAArBg/B,EAAQh/B,WACPg/B,EAAQ//B,aAAa,eACtB9hB,KAAK+/C,oBAAoBlzC,IAAIg1C,EAASA,EAAQj+B,aAAa,gBAC3Di+B,EAAQ1jC,aAAa,cAAe,QAE5C,CACJ,CACJ,CACA+hC,qBACI,MAAMvzC,EAAS3M,KAAKw/C,cACpB,OAAO7yC,EAASA,EAAOuzC,qBAAuBlgD,KAAK8/C,0BACvD,QACS9/C,KAAKa,UAAI,SAAAC,GAAA,WAAAA,GAA+Fw+C,GApYVv+C,MAoYkC+1B,IApYlC/1B,MAoY2DA,OApY3DA,MAoYmFq+C,GAAqB,GApYxGr+C,MAoYqIu+C,EAAM,IApY3Iv+C,MAoYwL+1B,IApYxL/1B,MAoY0Nm+C,IAAsB,CAA+C,QAC7Xl/C,KAAK0Y,WArYyF3X,MAAE,CAAA4X,MAqYY2mC,EAAMluC,QAANkuC,EAAMz+C,UAAAsQ,WAAc,QAAW,EACvJ,OA7PKmuC,CAAM,KAkRZ,SAASwB,GAAegB,EAAOtlC,GAC3B,IAAIgK,EAAIs7B,EAAM79C,OACd,KAAOuiB,KACHhK,EAASslC,EAAMt7B,GAEvB,CAAC,IAEKu7B,GAAY,MAAlB,MAAMA,SACO/hD,KAAKa,UAAI,SAAAC,GAAA,WAAAA,GAA+FihD,EAAY,CAAoD,QACxK/hD,KAAK2W,UApayF5V,KAAE,CAAAE,KAoaS8gD,GAIlF,QACvB/hD,KAAK4W,UAzayF7V,MAAE,CAAAiW,UAyakC,CAACsoC,IAAOpoC,QAAA,CAAY+kC,GAAepV,GAAc5X,GAGpL4X,KAAkB,EAC7B,OAXKkb,CAAY,KCpuBlB,SAAAC,GAAAj/C,EAAAC,GAAA,CAGA,MAAMi/C,GACFpiD,cAEIG,KAAKo8C,KAAO,SAEZp8C,KAAKupC,WAAa,GAElBvpC,KAAKwpC,aAAc,EAEnBxpC,KAAKypC,cAAgB,GAErBzpC,KAAKq8C,cAAe,EAEpBr8C,KAAKoa,MAAQ,GAEbpa,KAAK2a,OAAS,GAEd3a,KAAKN,KAAO,KAEZM,KAAKs8C,gBAAkB,KAEvBt8C,KAAKu8C,eAAiB,KAEtBv8C,KAAKw8C,UAAY,KAEjBx8C,KAAKy8C,WAAY,EAMjBz8C,KAAK08C,UAAY,iBAKjB18C,KAAK28C,cAAe,EAEpB38C,KAAKkiD,gBAAiB,EAMtBliD,KAAK48C,mBAAoB,CAE7B,EAIJ,MAAMuF,GAAa,mBAEbC,GAAgB,sBAEhBC,GAAgB,sBAIc,IAC9BC,GAAkB,MAAxB,MAAMA,UAA2BvF,GAC7Bl9C,YAAYkC,EAAYwgD,EAAkBj+B,EAAWk+B,EAAcC,EAAsB95B,EAAQuf,EAAY3R,EAAgBmsB,GACzHzgD,MAAMF,EAAYwgD,EAAkBj+B,EAAWk+B,EAAcC,EAAsB95B,EAAQuf,EAAYwa,GACvG1iD,KAAKu2B,eAAiBA,EAEtBv2B,KAAK2iD,uBAAyB,IAAIpyC,MAElCvQ,KAAK4iD,mBAA6C,mBAAxB5iD,KAAKu2B,eAE/Bv2B,KAAK6iD,oBAAsB,EAE3B7iD,KAAK8iD,aAAe9iD,KAAKD,YAAYQ,cAErCP,KAAK+iD,wBAA0B/iD,KAAK4iD,mBAC9BI,GAAahjD,KAAK8nC,QAAQmb,yBAjBR,IAkBlB,EAENjjD,KAAKkjD,uBAAyBljD,KAAK4iD,mBAC7BI,GAAahjD,KAAK8nC,QAAQqb,wBAnBP,GAoBnB,EAENnjD,KAAKojD,gBAAkB,KAKvBpjD,KAAKqjD,kBAAoB,KACrBrjD,KAAKsjD,yBACLtjD,KAAKujD,mBAAmBvjD,KAAK+iD,wBAAuB,EAMxD/iD,KAAKwjD,mBAAqB,KACtBxjD,KAAKsjD,yBACLtjD,KAAK2iD,uBAAuBt0C,KAAK,CAAEmiB,MAAO,SAAUizB,UAAWzjD,KAAKkjD,wBAAwB,CAEpG,CACAxF,mBAGIz7C,MAAMy7C,mBAUN19C,KAAK0jD,qBACT,CAEAA,sBACI1jD,KAAK2iD,uBAAuBt0C,KAAK,CAAEmiB,MAAO,UAAWizB,UAAWzjD,KAAK+iD,0BACjE/iD,KAAK4iD,oBACL5iD,KAAK8iD,aAAanpC,MAAMvZ,YAAYujD,GAA8B,GAAG3jD,KAAK+iD,6BAI1E/iD,KAAK4jD,uBAAuB,IAAM5jD,KAAK8iD,aAAaj8B,UAAUtI,IAAI6jC,GAAeD,KACjFniD,KAAK6jD,4BAA4B7jD,KAAK+iD,wBAAyB/iD,KAAKqjD,qBAGpErjD,KAAK8iD,aAAaj8B,UAAUtI,IAAI4jC,IAKhChjD,QAAQC,UAAUC,KAAK,IAAMW,KAAKqjD,qBAE1C,CAKAS,sBACI9jD,KAAK2iD,uBAAuBt0C,KAAK,CAAEmiB,MAAO,UAAWizB,UAAWzjD,KAAKkjD,yBACrEljD,KAAK8iD,aAAaj8B,UAAU9L,OAAOonC,IAC/BniD,KAAK4iD,oBACL5iD,KAAK8iD,aAAanpC,MAAMvZ,YAAYujD,GAA8B,GAAG3jD,KAAKkjD,4BAE1EljD,KAAK4jD,uBAAuB,IAAM5jD,KAAK8iD,aAAaj8B,UAAUtI,IAAI8jC,KAClEriD,KAAK6jD,4BAA4B7jD,KAAKkjD,uBAAwBljD,KAAKwjD,qBAoBnErkD,QAAQC,UAAUC,KAAK,IAAMW,KAAKwjD,qBAE1C,CAKAO,0BAA0BC,GACtBhkD,KAAK6iD,qBAAuBmB,EAC5BhkD,KAAKu9C,mBAAmBK,cAC5B,CAEA0F,yBACItjD,KAAK8iD,aAAaj8B,UAAU9L,OAAOqnC,GAAeC,GACtD,CACAwB,4BAA4B3kB,EAAU1iB,GACL,OAAzBxc,KAAKojD,iBACLl2B,aAAaltB,KAAKojD,iBAItBpjD,KAAKojD,gBAAkBj8B,WAAW3K,EAAU0iB,EAChD,CAEA0kB,uBAAuBpnC,GACnBxc,KAAKqkB,QAAQc,kBAAkB,KACU,mBAA1B2X,sBACPA,sBAAsBtgB,GAGtBA,GAAS,EAGrB,CACAwhC,uBACSh+C,KAAK8nC,QAAQoa,gBACdliD,KAAKi+C,YAEb,CAKAsF,mBAAmBE,GACXzjD,KAAK8nC,QAAQoa,gBACbliD,KAAKi+C,aAETj+C,KAAK2iD,uBAAuBt8C,KAAK,CAAEmqB,MAAO,SAAUizB,aACxD,CACAntC,cACIrU,MAAMqU,cACuB,OAAzBtW,KAAKojD,iBACLl2B,aAAaltB,KAAKojD,gBAE1B,CACA5e,sBAAsBD,GASlB,MAAMoC,EAAM1kC,MAAMuiC,sBAAsBD,GACxCoC,SAAIsd,SAAS1jD,cAAcsmB,UAAUtI,IAAI,iCAClCooB,CACX,QACS3mC,KAAKa,UAAI,SAAAC,GAAA,WAAAA,GAA+FwhD,GAAVvhD,MAA8CA,OAA9CA,MAAwE4d,IAAxE5d,MAAwGymB,KAAQ,GAAhHzmB,MAA6IkhD,IAA7IlhD,MAAyK4d,IAAzK5d,MAA6MA,OAA7MA,MAAmO+1B,IAAnO/1B,MAA+Pg2B,MAAqB,GAApRh2B,MAAiT4d,IAAe,CAA8C,QAC5c3e,KAAKy6B,UADyF15B,MAAE,CAAAE,KACJqhD,EAAkBz/C,UAAA,2BAAAm0B,UAAA,YAA0F,KAAI,2CAAAtsB,SAAA,GAAA5H,aAAA,SAAAC,EAAAC,GAAA,EAAAD,IAD9GhC,MAAE,KAAAiC,EAAA8kC,QAAA9J,IAAFj9B,MAAE,aAAAiC,EAAA8kC,QAAA2U,UAAF17C,CAAE,OAAAiC,EAAA8kC,QAAAsU,KAAFr7C,CAAE,kBAAAiC,EAAA8kC,QAAA0U,UACgB,KAAIx5C,EAAAs6C,qBAAwB,GAD9Cv8C,CAC+C,aAAAiC,EAAA8kC,QAAA0U,UAD/Cz7C,CAC+C,mBAAAiC,EAAA8kC,QAAAwU,iBAAtB,MADzBv7C,MAAE,2BAAAiC,EAAA4/C,mBAAF7hD,CACgB,wCAAAiC,EAAA6/C,oBAAI,GAAJ,EAAA3rB,YAAA,EAAA91B,SAAA,CADhBL,aAAEg6B,MAAA,EAAAC,KAAA,EAAAC,OAAA,yIAAAC,SAAA,SAAAn4B,EAAAC,GAAA,EAAAD,IAAFhC,MAAE,UAAFA,CAC4rB,WAD5rBA,MAAE,EAAAihD,GAAA,qBAAFjhD,UACizB,EAAAq6B,aAAA,CAAwwJiL,IAAe/K,OAAA,4sJAAAC,cAAA,GAAyN,EAC34L,OA/KK+mB,CAAkB,KAyMxB,MAAMqB,GAA+B,mCAOrC,SAASX,GAAakB,GAClB,OAAY,MAARA,EACO,KAES,iBAATA,EACAA,EAEPA,EAAKC,SAAS,MACPxnC,GAAqBunC,EAAKE,UAAU,EAAGF,EAAKjgD,OAAS,IAE5DigD,EAAKC,SAAS,KACoD,IAA3DxnC,GAAqBunC,EAAKE,UAAU,EAAGF,EAAKjgD,OAAS,IAEnD,MAATigD,EACO,EAEJ,IACX,CAEA,IAAIG,GACH,SAAUA,GACPA,SAAeA,EAAeC,KAAU,GAAK,OAC7CD,EAAeA,EAAeE,QAAa,GAAK,UAChDF,EAAeA,EAAeG,OAAY,GAAK,SAHxCH,CAIX,CAJC,CAIEA,IAAoC,CAAC,GAIxC,MAAMI,GACF5kD,YAAY6kD,EAAMvhC,EAAQwhC,GACtB3kD,KAAK0kD,KAAOA,EACZ1kD,KAAK2kD,mBAAqBA,EAE1B3kD,KAAK4kD,aAAe,IAAIz4C,IAExBnM,KAAK6kD,cAAgB,IAAI14C,IAEzBnM,KAAK8kD,OAAST,GAAeC,KAC7BtkD,KAAKq8C,aAAel5B,EAAOk5B,aAC3Br8C,KAAKg+B,GAAK0mB,EAAK1mB,GAEf0mB,EAAKhW,cAAc,wBAEnBiW,EAAmBhC,uBACdp8C,QAAKzB,MAAOuW,GAAyB,WAAhBA,EAAMmV,QAAkB,EAAGtQ,MAAK,IACrDha,UAAU,KACXlG,KAAK4kD,aAAav+C,OAClBrG,KAAK4kD,aAAal/C,UAAS,GAG/Bi/C,EAAmBhC,uBACdp8C,QAAKzB,MAAOuW,GAAyB,WAAhBA,EAAMmV,QAAkB,EAAGtQ,MAAK,IACrDha,UAAU,KACXgnB,aAAaltB,KAAK+kD,uBAClB/kD,KAAKwjD,oBAAmB,GAE5BkB,EAAKxc,WAAW+F,cAAc/nC,UAAU,KACpClG,KAAK6kD,cAAcx+C,KAAKrG,KAAKglD,SAC7BhlD,KAAK6kD,cAAcn/C,WACnB1F,KAAKwjD,oBAAmB,IAC3B,EACD/T,MAAMzvC,KAAK+tC,gBAAiB/tC,KAAKqqC,gBAAgB9jC,QAAKzB,MAAOuW,G1BnVtD,K0BmV+DA,EAAM4N,UAAuBjpB,KAAKq8C,eAAiBzgC,GAAeP,MAAUnV,UAAUmV,IACnJrb,KAAKq8C,eACNhhC,EAAMujC,iBACNqG,GAAgBjlD,KAAqB,YAAfqb,EAAMpa,KAAqB,WAAa,SAAO,EAGjF,CAKAioC,MAAMgc,GACFllD,KAAKglD,QAAUE,EAEfllD,KAAK2kD,mBAAmBhC,uBACnBp8C,QAAKzB,MAAOuW,GAAyB,YAAhBA,EAAMmV,QAAmB,EAAGtQ,MAAK,IACtDha,UAAUmV,IACXrb,KAAK6kD,cAAcx+C,KAAK6+C,GACxBllD,KAAK6kD,cAAcn/C,WACnB1F,KAAK0kD,KAAKxc,WAAWyF,iBAMrB3tC,KAAK+kD,sBAAwB59B,WAAW,IAAMnnB,KAAKwjD,qBAAsBnoC,EAAMooC,UAAY,IAAG,GAElGzjD,KAAK8kD,OAAST,GAAeE,QAC7BvkD,KAAK2kD,mBAAmBb,qBAC5B,CAIApE,cACI,OAAO1/C,KAAK4kD,YAChB,CAIAO,cACI,OAAOnlD,KAAK0kD,KAAKjlB,MACrB,CAIA2lB,eACI,OAAOplD,KAAK6kD,aAChB,CAIA9W,gBACI,OAAO/tC,KAAK0kD,KAAK3W,aACrB,CAIA1D,gBACI,OAAOrqC,KAAK0kD,KAAKra,aACrB,CAKA9B,eAAe/tB,GACX,IAAI6zB,EAAWruC,KAAK0kD,KAAKvhC,OAAO0pB,iBAChC,OAAIryB,IAAaA,EAASmY,MAAQnY,EAAS4Y,OACvC5Y,EAASmY,KAAO0b,EAAS1b,KAAKnY,EAASmY,MAAQ0b,EAASjb,MAAM5Y,EAAS4Y,OAGvEib,EAASyL,qBAETt/B,IAAaA,EAASoY,KAAOpY,EAAS8Y,QACtC9Y,EAASoY,IAAMyb,EAASzb,IAAIpY,EAASoY,KAAOyb,EAAS/a,OAAO9Y,EAAS8Y,QAGrE+a,EAAS0L,mBAEb/5C,KAAK0kD,KAAKnc,iBACHvoC,IACX,CAMAsuC,WAAWl0B,EAAQ,GAAIO,EAAS,IAC5B,OAAA3a,KAAK0kD,KAAKpW,WAAWl0B,EAAOO,GACrB3a,IACX,CAEA0uC,cAAcC,GACV,OAAA3uC,KAAK0kD,KAAKhW,cAAcC,GACjB3uC,IACX,CAEA4uC,iBAAiBD,GACb,OAAA3uC,KAAK0kD,KAAK9V,iBAAiBD,GACpB3uC,IACX,CAEAqlD,WACI,OAAOrlD,KAAK8kD,MAChB,CAKAtB,qBACIxjD,KAAK8kD,OAAST,GAAeG,OAC7BxkD,KAAK0kD,KAAKxb,MAAMlpC,KAAKglD,QAAS,CAAEnG,YAAa7+C,KAAKq9C,wBAClDr9C,KAAKi/C,kBAAoB,IAC7B,EAQJ,SAASgG,GAAgBte,EAAK2e,EAAiB//C,GAC3CohC,SAAI0W,sBAAwBiI,EACrB3e,EAAIuC,MAAM3jC,EACrB,CAGA,MAAMggD,GAAkB,IAAIjkD,MAAe,oBAErCkkD,GAA6B,IAAIlkD,MAAe,kCAEhDmkD,GAA6B,IAAInkD,MAAe,iCAAkC,CACpF6P,WAAY,OACZC,QAASA,KACL,MAAMmkC,KAAUluB,OAAOwzB,IACvB,MAAO,IAAMtF,EAAQuF,iBAAiB3R,OAAM,IAsBpD,IAAIkW,GAAW,EAITqG,GAAS,MAAf,MAAMA,EAEF,eAAInG,GACA,OAAOv/C,KAAKw/C,cAAgBx/C,KAAKw/C,cAAcD,YAAcv/C,KAAKy/C,uBACtE,CAEA,eAAIC,GACA,OAAO1/C,KAAKw/C,cAAgBx/C,KAAKw/C,cAAcE,YAAc1/C,KAAK2/C,uBACtE,CACAO,qBACI,MAAMvzC,EAAS3M,KAAKw/C,cACpB,OAAO7yC,EAASA,EAAOuzC,qBAAuBlgD,KAAK8/C,0BACvD,CACAjgD,YAAY+/C,EAAU14B,EAKtB+8B,EAAUpE,EAAiBlT,EAAiB6S,EAK5CvP,EAKA1Z,GACIv2B,KAAK4/C,SAAWA,EAChB5/C,KAAK6/C,gBAAkBA,EACvB7/C,KAAK2sC,gBAAkBA,EACvB3sC,KAAKw/C,cAAgBA,EACrBx/C,KAAKy/C,wBAA0B,GAC/Bz/C,KAAK8/C,2BAA6B,IAAI3zC,IACtCnM,KAAK2/C,wBAA0B,IAAIxzC,IACnCnM,KAAK2lD,kBAAoB1D,GAKzBjiD,KAAKggD,kBAAiBC,MAAM,IAAMjgD,KAAKu/C,YAAYt7C,OAC7CjE,KAAKkgD,qBACLlgD,KAAKkgD,qBAAqB35C,QAAK+a,WAAUlb,KAC/CpG,KAAK4lD,QAAU1+B,EAASpX,IAAIwvC,IAC5Bt/C,KAAK6lD,sBAAwBpB,GAC7BzkD,KAAK8lD,qBAAuBxD,GAC5BtiD,KAAK+lD,iBAAmBR,EAC5B,CACApF,KAAKC,EAAwBj9B,GACzB,IAAIo9B,GACJp9B,EAAS,IAAMnjB,KAAK6/C,iBAAmB,IAAIoC,MAAuB9+B,IAC3D6a,GAAK7a,EAAO6a,IAAM,kBAAkBqhB,KAC3Cl8B,EAAOmmB,eAAiBnmB,EAAOmmB,gBAAkBtpC,KAAK2sC,kBACtD,MAAMqZ,EAAShmD,KAAK4lD,QAAQzF,KAAKC,EAAwB,IAClDj9B,EACH0pB,iBAAkB7sC,KAAK4/C,SAASplC,WAAWkgC,SAASZ,qBAAqBC,mBAEzEsC,cAAc,EAIdQ,gBAAgB,EAGhBC,2BAA2B,EAC3Bpc,UAAW,CACPz/B,KAAMjB,KAAK8lD,qBACX9uC,UAAWA,IAAM,CAIb,CAAExV,QAASxB,KAAK2lD,kBAAmB1uC,SAAUkM,GAC7C,CAAE3hB,QAAS26C,GAAcllC,SAAUkM,KAG3Cq+B,gBAAiBA,MAASjB,cAC1BvpC,UAAWA,CAAC2vB,EAAKsf,EAAWzF,KACxBD,EAAY,IAAIvgD,KAAK6lD,sBAAsBlf,EAAKxjB,EAAQq9B,GACxDD,EAAUhY,eAAeplB,GAAQ3I,UAC1B,CACH,CAAEhZ,QAASxB,KAAK8lD,qBAAsB7uC,SAAUupC,GAChD,CAAEh/C,QAASxB,KAAK+lD,iBAAkB9uC,SAAUgvC,EAAUvmD,MACtD,CAAE8B,QAASxB,KAAK6lD,sBAAuB5uC,SAAUspC,OAM7DA,SAAU/a,aAAewgB,EAAOxgB,aAChC+a,EAAUtB,kBAAoB+G,EAAO/G,kBACrCj/C,KAAKu/C,YAAY93C,KAAK84C,GACtBvgD,KAAK0/C,YAAYr5C,KAAKk6C,GACtBA,EAAU4E,cAAcj/C,UAAU,KAC9B,MAAMoN,EAAQtT,KAAKu/C,YAAYhsC,QAAQgtC,GACnCjtC,GAAQ,IACRtT,KAAKu/C,YAAY/rC,OAAOF,EAAO,GAC1BtT,KAAKu/C,YAAYt7C,QAClBjE,KAAKkgD,qBAAqB75C,OAAK,GAIpCk6C,CACX,CAIAM,WACI7gD,KAAKkmD,cAAclmD,KAAKu/C,YAC5B,CAKAc,cAAcriB,GACV,OAAOh+B,KAAKu/C,YAAYyB,KAAKD,GAAUA,EAAO/iB,KAAOA,EACzD,CACA1nB,cAGItW,KAAKkmD,cAAclmD,KAAKy/C,yBACxBz/C,KAAK8/C,2BAA2Bp6C,WAChC1F,KAAK2/C,wBAAwBj6C,UACjC,CACAwgD,cAAcC,GACV,IAAI3/B,EAAI2/B,EAAQliD,OAChB,KAAOuiB,KACH2/B,EAAQ3/B,GAAG0iB,OAEnB,QACSlpC,KAAKa,UAAI,SAAAC,GAAA,WAAAA,GAA+F4kD,GAlYV3kD,MAkYqC+1B,IAlYrC/1B,MAkY8DA,OAlY9DA,MAkYsFohC,KAAW,GAlYjGphC,MAkY8HykD,GAA0B,GAlYxJzkD,MAkYqL0kD,IAlYrL1kD,MAkY4N2kD,EAAS,IAlYrO3kD,MAkYkR+1B,IAlYlR/1B,MAkYoTg2B,MAAqB,IAA+D,QACte/2B,KAAK0Y,WAnYyF3X,MAAE,CAAA4X,MAmYY+sC,EAASt0C,QAATs0C,EAAS7kD,UAAAsQ,WAAc,QAAW,EAC1J,OApIKu0C,CAAS,KA8JXU,GAAmB,EAIjBC,GAAc,MAApB,MAAMA,EACFxmD,YAGA0gD,EAAWxgD,EAAa6lD,GACpB5lD,KAAKugD,UAAYA,EACjBvgD,KAAKD,YAAcA,EACnBC,KAAK4lD,QAAUA,EAEf5lD,KAAKiB,KAAO,QAChB,CACA01B,WACS32B,KAAKugD,YAMNvgD,KAAKugD,UAAY+F,GAAiBtmD,KAAKD,YAAaC,KAAK4lD,QAAQrG,aAEzE,CACA/pC,YAAYC,GACR,MAAM8wC,EAAgB9wC,EAAQ+wC,iBAAsB/wC,EAAQgxC,sBACxDF,IACAvmD,KAAKklD,aAAeqB,EAAclwC,aAE1C,CACAqwC,eAAerrC,GAKX4pC,GAAgBjlD,KAAKugD,UAA6B,IAAlBllC,EAAMsrC,SAAmC,IAAlBtrC,EAAMurC,QAAgB,WAAa,QAAS5mD,KAAKklD,aAC5G,QACSllD,KAAKa,UAAI,SAAAC,GAAA,WAAAA,GAA+FulD,GApcVtlD,MAoc0C0jD,GAAY,GApctD1jD,MAocmFA,OApcnFA,MAoc6G2kD,IAAS,CAA8C,QAClQ1lD,KAAKgB,UArcyFD,MAAE,CAAAE,KAqcJolD,EAAcxjD,UAAA,sDAAA6H,SAAA,EAAA5H,aAAA,SAAAC,EAAAC,GAAA,EAAAD,GArcZhC,MAAE,iBAAAkC,GAAA,OAqcJD,EAAA0jD,eAAAzjD,EAAsB,GAAR,EAAAF,GArcZhC,MAAE,aAAAiC,EAAAw5C,WAqcS,KArcXz7C,CAqce,OAAAiC,EAAA/B,KAAA,EAAAsV,OAAA,CAAAimC,UAAA,6BAAAv7C,KAAA,OAAAikD,aAAA,sCAAAsB,gBAAA,wCAAA/vC,SAAA,mBAAAygB,YAAA,EAAA91B,SAAA,CArcfL,QAqc+c,EACzjB,OApCKslD,CAAc,KA+DdQ,GAAsB,MAA5B,MAAMA,EACFhnD,YAGAinD,EAAY/mD,EAAa6lD,GACrB5lD,KAAK8mD,WAAaA,EAClB9mD,KAAKD,YAAcA,EACnBC,KAAK4lD,QAAUA,CACnB,CACAjvB,WACS32B,KAAK8mD,aACN9mD,KAAK8mD,WAAaR,GAAiBtmD,KAAKD,YAAaC,KAAK4lD,QAAQrG,cAElEv/C,KAAK8mD,YACL3nD,QAAQC,UAAUC,KAAK,KACnBW,KAAK+mD,QAAO,EAGxB,CACAzwC,cAGqBtW,KAAK8mD,YAAYnC,oBAE9BxlD,QAAQC,UAAUC,KAAK,KACnBW,KAAKgnD,WAAU,EAG3B,QACShnD,KAAKa,UAAI,SAAAC,GAAA,WAAAA,GAA+F+lD,GA9fV9lD,MA8fkD0jD,GAAY,GA9f9D1jD,MA8f2FA,OA9f3FA,MA8fqH2kD,IAAS,CAA8C,QAC1Q1lD,KAAKgB,UA/fyFD,MAAE,CAAAE,KA+fJ4lD,EAAsB3vB,YAAA,GAAuC,EACrK,OA/BK2vB,CAAsB,KAyCtBI,GAAc,MAApB,MAAMA,UAAuBJ,GACzBhnD,cACIoC,SAASoH,WACTrJ,KAAKg+B,GAAK,wBAAwBooB,IACtC,CACAW,SAGI/mD,KAAK8mD,WAAWnC,oBAAoBhH,qBAAqB39C,KAAKg+B,GAClE,CACAgpB,YACIhnD,KAAK8mD,YAAYnC,oBAAoB9G,wBAAwB79C,KAAKg+B,GACtE,QACSh+B,KAAKa,UAAI,UAAAqmD,EAAA,gBAAApmD,GAAA,OAAAomD,MAvhBqFnmD,MAuhBUkmD,KAAcnmD,GAAdmmD,EAAc,GAA7G,EAAoK,QAC7KjnD,KAAKgB,UAxhByFD,MAAE,CAAAE,KAwhBJgmD,EAAcpkD,UAAA,sDAAAm0B,UAAA,+CAAAtsB,SAAA,EAAA5H,aAAA,SAAAC,EAAAC,GAAA,EAAAD,GAxhBZhC,MAAE,KAAAiC,EAAAg7B,GAwhBU,EAAAznB,OAAA,CAAAynB,GAAA,MAAAvnB,SAAA,mBAAAygB,YAAA,EAAA91B,SAAA,CAxhBZL,QAwhBgR,EAC1X,OAfKkmD,CAAc,KAiCdE,GAAgB,MAAtB,MAAMA,SACOnnD,KAAKa,UAAI,SAAAC,GAAA,WAAAA,GAA+FqmD,EAAgB,CAAqD,QAC7KnnD,KAAKgB,UA7iByFD,MAAE,CAAAE,KA6iBJkmD,EAAgBtkD,UAAA,iFAAAm0B,UAAA,mDAAAE,YAAA,EAAA91B,SAAA,CA7iBdL,MAAE,CA6iBkNqmD,OAAsC,EACpW,OAHKD,CAAgB,KAiBhBE,GAAgB,MAAtB,MAAMA,UAAyBR,GAC3BE,SACI/mD,KAAK8mD,WAAWnC,oBAAoBZ,4BAA4B,EACpE,CACAiD,YACIhnD,KAAK8mD,WAAWnC,oBAAoBZ,6BAA4B,EACpE,QACS/jD,KAAKa,UAAI,UAAAymD,EAAA,gBAAAxmD,GAAA,OAAAwmD,MAnkBqFvmD,MAmkBUsmD,KAAgBvmD,GAAhBumD,EAAgB,GAA/G,EAAsK,QAC/KrnD,KAAKgB,UApkByFD,MAAE,CAAAE,KAokBJomD,EAAgBxkD,UAAA,iFAAAm0B,UAAA,mDAAAtsB,SAAA,EAAA5H,aAAA,SAAAC,EAAAC,GAAA,EAAAD,GApkBdhC,MAAE,qCAokBM,UApkBNiC,EAAAukD,MAAFxmD,CAokBc,sCAAN,WAAMiC,EAAAukD,MApkBdxmD,CAokBc,mCAAN,QAAMiC,EAAAukD,MAAA,EAAAhxC,OAAA,CAAAgxC,MAAA,SAAArwB,YAAA,EAAA91B,SAAA,CApkBdL,QAokBid,EAC3jB,OATKsmD,CAAgB,KA8BtB,SAASf,GAAiBzkC,EAAS09B,GAC/B,IAAI5yC,EAASkV,EAAQthB,cAAckqB,cACnC,KAAO9d,IAAWA,EAAOka,UAAUkG,SAAS,6BACxCpgB,EAASA,EAAO8d,cAEpB,OAAO9d,EAAS4yC,EAAYyB,KAAKD,GAAUA,EAAO/iB,KAAOrxB,EAAOqxB,IAAM,IAC1E,CAQE,IACIwpB,GAAe,MAArB,MAAMA,SACOxnD,KAAKa,UAAI,SAAAC,GAAA,WAAAA,GAA+F0mD,EAAe,CAAoD,QAC3KxnD,KAAK2W,UA3mByF5V,KAAE,CAAAE,KA2mBSumD,GAQpF,QACrBxnD,KAAK4W,UApnByF7V,MAAE,CAAAiW,UAonBqC,CAAC0uC,IAAUxuC,QAAA,CAAY6qC,GAAc9F,GAAepV,GAAchX,GAAiBA,KAAqB,EACzP,OAZK23B,CAAe,KA0BrB,MC13BAzuB,GAAA,kBAAA0uB,GAAA,wQAAAC,GAAA,wNACMC,GAAoB,IAAIrmD,MAAe,qBAkBvCsmD,GAA+B,CACjC,CACIC,UAAW,aACXC,WAAY,CAAC,aAAc,mBAE/B,CACID,UAAW,kBACXC,WAAY,CAAC,aAAc,yBAA0B,8BAEzD,CACID,UAAW,oBACXC,WAAY,CAAC,aAAc,qBAAsB,0BAErD,CACID,UAAW,qBACXC,WAAY,CAAC,aAAc,uBAAwB,4BAEvD,CACID,UAAW,UACXC,WAAY,CAAC,UAAW,mBAAoB,gBAEhD,CACID,UAAW,eACXC,WAAY,CAAC,UAAW,mBAAoB,gBAAiB,qBAEjE,CACID,UAAW,kBACXC,WAAY,CAAC,kBAAmB,yBAGxC,IACMC,GAAa,MAAnB,MAAMA,EAMF,UAAIr0B,GACA,OAAO1zB,KAAKgoD,eAAetvB,UAAU14B,KAAKD,YAAYQ,cAC1D,CACA,UAAImzB,CAAOlsB,GACPxH,KAAKgoD,eAAelvB,aAAa94B,KAAKD,YAAYQ,cAAeiH,EACrE,CAEA,iBAAIygD,GACA,OAAOjoD,KAAKkoD,cAChB,CACA,iBAAID,CAAc3nD,GACdN,KAAKkoD,eAAiB5nD,EACtBN,KAAKmoD,uBACT,CAEA,YAAIngD,GACA,OAAOhI,KAAKk2B,SAChB,CACA,YAAIluB,CAAS1H,GACTN,KAAKk2B,UAAY51B,EACjBN,KAAKmoD,uBACT,CACAtoD,YAAYE,EAAa2d,EAAW2G,EAASkS,GACzCv2B,KAAKD,YAAcA,EACnBC,KAAK0d,UAAYA,EACjB1d,KAAKqkB,QAAUA,EACfrkB,KAAKu2B,eAAiBA,EACtBv2B,KAAKk9C,iBAAgB71B,OAAOwC,IAK5B7pB,KAAKgoD,iBAAgB3gC,OAAOqQ,IAE5B13B,KAAKooD,QAAS,EACdpoD,KAAKkoD,gBAAiB,EACtBloD,KAAKk2B,WAAY,EACjB,MAAM/S,KAASkE,OAAOsgC,GAAmB,CAAEhwB,UAAU,IAC/C9V,EAAU9hB,EAAYQ,cACtBsmB,EAAYhF,EAAQgF,UAC1B7mB,KAAKqoD,oBAAsBllC,GAAQklC,sBAAuB,EAC1DroD,KAAK2zB,MAAQxQ,GAAQwQ,OAAS,KAC9B3zB,KAAKgoD,eAAexvB,gBAAgB3W,EAAS,CAAE4W,UAAW,0BAG1D,UAAaovB,YAAWC,gBAAgBF,GAChC/lC,EAAQC,aAAa+lC,IACrBhhC,EAAUtI,OAAOupC,EAG7B,CACAQ,kBACItoD,KAAKk9C,cAAcpyB,QAAQ9qB,KAAKD,aAAa,EACjD,CACAuW,cACItW,KAAKk9C,cAAcrxB,eAAe7rB,KAAKD,aACvCC,KAAKgoD,eAAezvB,cAAcv4B,KAAKD,YAAYQ,cACvD,CAEA+lB,MAAM6F,EAAS,UAAWhY,GAClBgY,EACAnsB,KAAKk9C,cAAchxB,SAASlsB,KAAKD,YAAYQ,cAAe4rB,EAAQhY,GAGpEnU,KAAKD,YAAYQ,cAAc+lB,MAAMnS,EAE7C,CACAo0C,mBACI,OAAyB,MAArBvoD,KAAKwoD,aACExoD,KAAKwoD,gBAETxoD,KAAKgI,WAAYhI,KAAKqoD,sBAA6B,IAC9D,CACAI,wBACI,QAAOzoD,KAAKqoD,sBAAwBroD,KAAKgI,WAAW,IACxD,CACAmgD,wBACInoD,KAAKgoD,eAAervB,YAAY34B,KAAKD,YAAYQ,cAAeP,KAAKioD,eAAiBjoD,KAAKgI,SAC/F,QACShI,KAAKa,UAAI,SAAAC,GAAqFC,OAAE,CAAiF,QACjLf,KAAKgB,UADyFD,MAAE,CAAAE,KACJ8mD,EAAaxxC,OAAA,CAAAod,MAAA,QAAAs0B,cAAA,mCAA8ES,OAAgB1gD,SAAA,yBAAsC0gD,OAAgBF,aAAA,kCAAmDE,OAAgBL,oBAAA,+CAAuEK,QAAgBtnD,SAAA,CADzTL,QAC+U,EACzb,OAvFKgnD,CAAa,KAgLbY,GAAS,MAAf,MAAMA,UAAkBZ,GACpBloD,YAAYkC,EAAYs0B,EAAU1N,EAAQkR,GACtC53B,MAAMF,EAAYs0B,EAAU1N,EAAQkR,EACxC,QACS75B,KAAKa,UAAI,SAAAC,GAAA,WAAAA,GAA+F6nD,GA/FV5nD,MA+FqCA,OA/FrCA,MA+F+D4d,GA/F/D5d,MA+FuFA,OA/FvFA,MA+F6Gg2B,MAAqB,IAA8D,QAC9R/2B,KAAKy6B,UAhGyF15B,MAAE,CAAAE,KAgGJ0nD,EAAS9lD,UAAA,kIAAA6H,SAAA,GAAA5H,aAAA,SAAAC,EAAAC,GAAA,EAAAD,IAhGPhC,MAAE,WAgGJiC,EAAAylD,wBAhGE1nD,CAgGqB,gBAAvBiC,EAAAulD,oBAhGExnD,MAAEiC,EAAA2wB,MAgGI,OAAM3wB,EAAA2wB,MAAW,IAhGvB5yB,MAAE,0BAAAiC,EAAAgF,SAAFjH,CAgGO,sCAAAiC,EAAAqlD,oBAhGPtnD,CAgGO,0BAAU,mBAAViC,EAAAuzB,eAhGPx1B,CAgGO,gBAAAiC,EAAA2wB,MAhGP5yB,CAgGO,uBAAT,GAAS,EAAA0V,SAAA,cAAAygB,YAAA,EAAA91B,SAAA,CAhGPL,aAAE6nD,MAAA7vB,GAAA8vB,mBAAAnB,GAAA3sB,MAAA,EAAAC,KAAA,EAAAC,OAAA,iIAAAC,SAAA,SAAAn4B,EAAAC,GAAA,EAAAD,IAAFhC,MAAE0mD,IAAF1mD,MAAE,YAAFA,MAAE,GAAFA,MAAE,YAAFA,MAAE,KAAFA,cAAE,KAAFA,MAAE,WAAFA,CAgG03C,aAAuD,EAAAgC,GAhGj7ChC,MAAE,sBAAAiC,EAAAolD,OAAFrnD,CAgGouB,kBAAAiC,EAAAolD,OAAwC,EAAA9sB,OAAA,s5fAAAC,cAAA,EAAAC,gBAAA,GAA+qhB,EACrijB,OANKmtB,CAAS,KAmPTG,GAAe,MAArB,MAAMA,SACO9oD,KAAKa,UAAI,SAAAC,GAAA,WAAAA,GAA+FgoD,EAAe,CAAoD,QAC3K9oD,KAAK2W,UAhVyF5V,KAAE,CAAAE,KAgVS6nD,GAiBrF,QACpB9oD,KAAK4W,UAlWyF7V,MAAE,CAAAmW,QAAA,CAkWoC2Y,GACrIsH,GAAiBtH,KAAqB,EACjD,OAtBKi5B,CAAe,KCrdRC,GAAW,MAAlB,MAAOA,EAGXC,sBACE,MAAMC,EAAQC,aAAaC,QAAQ,sBACnC,OAAOF,EAAQG,KAAKC,MAAMJ,GAAS,EACrC,4CANWF,EAAW,iCAAXA,EAAW33C,QAAX23C,EAAWloD,UAAAsQ,WAFV,gBAED43C,CAAW,KCUXO,GAA8B,MAArC,MAAOA,EAKXC,gBAAkB,IAAI51C,GAAY,IAG1B4sC,aAAYl5B,OAAOo9B,IACnB+E,gBAAeniC,OAAO0hC,IAE9BpyB,WAEE32B,KAAKupD,gBAAgBt2C,SAASjT,KAAKwpD,aAAaR,sBAClD,CAKAS,kBAEEP,aAAaQ,QAAQ,qBAAsBN,KAAKO,UAAU3pD,KAAKupD,gBAAgBjpD,QAC/EN,KAAKugD,UAAUrX,MAAMlpC,KAAKupD,gBAAgBjpD,MAC5C,4CAvBWgpD,EAA8B,+BAA9BA,EAA8BzmD,UAAA,kCAAAq0B,YAAA,EAAA91B,SAAA,CAAAL,OAAAg6B,MAAA,GAAAC,KAAA,EAAAC,OAAA,kVAAAC,SAAA,SAAAn4B,EAAAC,GAAA,EAAAD,ICfzChC,MADF,UACEA,CADkC,UACbA,MAAA,4DAAwBA,QAE3CA,MADF,UACEA,CADsB,SACCA,MAAA,gLAA8BA,QACrDA,MAAA,WACEA,MAAA,gBAMJA,UAEEA,MADF,UACEA,CADsB,cACcA,MAAA,mBAAEA,QACtCA,MAAA,eAA0CA,MAAA,0BAASiC,EAAAymD,iBAAiB,GAAE1oD,MAAA,mBAE1EA,mBAPgBA,MAAA,GAAAA,MAAA,cAAAiC,EAAAumD,iCDEZ/B,GAAe7oC,YAAExH,GAAmBgrB,SAAE2mB,GAAe1B,IAAA9rB,OAAA,soDAK5CguB,CAA8B,KEhB3C,MAAMM,GAAuB,CAC3B,CACE5rB,GAAM,OACNz0B,KAAQ,OACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,iBACNz0B,KAAQ,eACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,MACNz0B,KAAQ,MACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,eACNz0B,KAAQ,eACRsgD,OAAUA,IAAM1qD,QAAA2qD,IAAA,CAAAxqD,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,QAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,aACNz0B,KAAQ,qBACRsgD,OAAUA,IAAM1qD,QAAA2qD,IAAA,CAAAxqD,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,QAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,SACNz0B,KAAQ,cACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,OACNz0B,KAAQ,OACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,MACNz0B,KAAQ,MACRsgD,OAAUA,IAAM1qD,QAAA2qD,IAAA,CAAAxqD,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,KAAAlf,EAAAkf,EAAA,QAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,cACNz0B,KAAQ,cACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,MACNz0B,KAAQ,MACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,WACNz0B,KAAQ,WACRwgD,QAAW,CACT,QAEFF,OAAUA,IAAM1qD,QAAA2qD,IAAA,CAAAxqD,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,KAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,KAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,KAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,KAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,QAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,MACNz0B,KAAQ,WACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,QACNz0B,KAAQ,QACRsgD,OAAUA,IAAM1qD,QAAA2qD,IAAA,CAAAxqD,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,KAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,KAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,OAAAnf,KAAAC,EAAAC,KAAAD,EAAA,OAElB,CACE0+B,GAAM,MACNz0B,KAAQ,MACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,YACNz0B,KAAQ,YACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,MACNz0B,KAAQ,aACRwgD,QAAW,CACT,SAEFF,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,YACNz0B,KAAQ,YACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,KAAAnf,KAAAC,EAAAC,KAAAD,EAAA,OAElB,CACE0+B,GAAM,QACNz0B,KAAQ,QACRwgD,QAAW,CACT,MAEFF,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,SACNz0B,KAAQ,SACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,QACNz0B,KAAQ,QACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,QACNz0B,KAAQ,QACRsgD,OAAUA,IAAM1qD,QAAA2qD,IAAA,CAAAxqD,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,KAAAlf,EAAAkf,EAAA,OAAAnf,KAAAC,EAAAC,KAAAD,EAAA,OAElB,CACE0+B,GAAM,IACNz0B,KAAQ,IACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,UACNz0B,KAAQ,UACRwgD,QAAW,CACT,OAEFF,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,UACNz0B,KAAQ,UACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,UACNz0B,KAAQ,UACRwgD,QAAW,CACT,OAEFF,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,QACNz0B,KAAQ,QACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,QACNz0B,KAAQ,QACRsgD,OAAUA,IAAM1qD,QAAA2qD,IAAA,CAAAxqD,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,KAAAlf,EAAAkf,EAAA,QAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,aACNz0B,KAAQ,aACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,KAAAnf,KAAAC,EAAAC,KAAAD,EAAA,OAElB,CACE0+B,GAAM,SACNz0B,KAAQ,SACRwgD,QAAW,CACT,MAEFF,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,SACNz0B,KAAQ,eACRwgD,QAAW,CACT,gBAEFF,OAAUA,IAAM1qD,QAAA2qD,IAAA,CAAAxqD,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,QAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,cACNz0B,KAAQ,cACRwgD,QAAW,CACT,QAEFF,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,MACNz0B,KAAQ,MACRwgD,QAAW,CACT,OAEFF,OAAUA,IAAM1qD,QAAA2qD,IAAA,CAAAxqD,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,QAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,UACNz0B,KAAQ,UACRsgD,OAAUA,IAAM1qD,QAAA2qD,IAAA,CAAAxqD,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,QAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,SACNz0B,KAAQ,KACRwgD,QAAW,CACT,KACA,MAEFF,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,MACNz0B,KAAQ,MACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,MACNz0B,KAAQ,MACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,MACNz0B,KAAQ,MACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,SACNz0B,KAAQ,SACRwgD,QAAW,CACT,OAEFF,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,IACNz0B,KAAQ,IACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,OACNz0B,KAAQ,OACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,OAElB,CACE0+B,GAAM,MACNz0B,KAAQ,MACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,UACNz0B,KAAQ,UACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,OACNz0B,KAAQ,OACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,SACNz0B,KAAQ,aACRwgD,QAAW,CACT,cAEFF,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,cACNz0B,KAAQ,cACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,OACNz0B,KAAQ,OACRsgD,OAAUA,IAAM1qD,QAAA2qD,IAAA,CAAAxqD,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,QAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,SACNz0B,KAAQ,SACRsgD,OAAUA,IAAM1qD,QAAA2qD,IAAA,CAAAxqD,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,QAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,MACNz0B,KAAQ,MACRsgD,OAAUA,IAAM1qD,QAAA2qD,IAAA,CAAAxqD,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,QAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,aACNz0B,KAAQ,aACRwgD,QAAW,CACT,SAEFF,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,MACNz0B,KAAQ,MACRsgD,OAAUA,IAAM1qD,QAAA2qD,IAAA,CAAAxqD,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,KAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,QAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,SACNz0B,KAAQ,SACRwgD,QAAW,CACT,OAEFF,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,SACNz0B,KAAQ,SACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,OACNz0B,KAAQ,OACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,SACNz0B,KAAQ,SACRwgD,QAAW,CACT,OAEFF,OAAUA,IAAMvqD,EAAAkf,EAAA,KAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,qBACNz0B,KAAQ,uBACRwgD,QAAW,CACT,IACA,MACA,OAEFF,OAAUA,IAAM1qD,QAAA2qD,IAAA,CAAAxqD,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,QAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,oBACNz0B,KAAQ,sBACRwgD,QAAW,CACT,MACA,MACA,MACA,MACA,OAEFF,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,SACNz0B,KAAQ,KACRwgD,QAAW,CACT,KACA,MAEFF,OAAUA,IAAM1qD,QAAA2qD,IAAA,CAAAxqD,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,OAAAnf,KAAAC,EAAAC,KAAAD,EAAA,OAElB,CACE0+B,GAAM,aACNz0B,KAAQ,aACRsgD,OAAUA,IAAM1qD,QAAA2qD,IAAA,CAAAxqD,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,QAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,WACNz0B,KAAQ,WACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,WACNz0B,KAAQ,WACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,QACNz0B,KAAQ,QACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,UACNz0B,KAAQ,UACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,aACNz0B,KAAQ,qBACRsgD,OAAUA,IAAM1qD,QAAA2qD,IAAA,CAAAxqD,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,QAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,aACNz0B,KAAQ,qBACRsgD,OAAUA,IAAM1qD,QAAA2qD,IAAA,CAAAxqD,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,QAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,QACNz0B,KAAQ,QACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,aACNz0B,KAAQ,aACRwgD,QAAW,CACT,OAEFF,OAAUA,IAAM1qD,QAAA2qD,IAAA,CAAAxqD,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,QAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,aACNz0B,KAAQ,aACRwgD,QAAW,CACT,OAEFF,OAAUA,IAAM1qD,QAAA2qD,IAAA,CAAAxqD,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,QAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,OACNz0B,KAAQ,OACRsgD,OAAUA,IAAM1qD,QAAA2qD,IAAA,CAAAxqD,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,QAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,UACNz0B,KAAQ,UACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,KACNz0B,KAAQ,KACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,UACNz0B,KAAQ,UACRwgD,QAAW,CACT,OAEFF,OAAUA,IAAM1qD,QAAA2qD,IAAA,CAAAxqD,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,KAAAlf,EAAAkf,EAAA,QAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,SACNz0B,KAAQ,SACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,OACNz0B,KAAQ,OACRsgD,OAAUA,IAAM1qD,QAAA2qD,IAAA,CAAAxqD,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,QAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,OACNz0B,KAAQ,YACRsgD,OAAUA,IAAM1qD,QAAA2qD,IAAA,CAAAxqD,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,KAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,QAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,aACNz0B,KAAQ,aACRwgD,QAAW,CACT,OAEFF,OAAUA,IAAM1qD,QAAA2qD,IAAA,CAAAxqD,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,QAAAnf,KAAAC,EAAAC,KAAAD,EAAA,MAElB,CACE0+B,GAAM,UACNz0B,KAAQ,UACRwgD,QAAW,CACT,MAEFF,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,OACNz0B,KAAQ,OACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,MACNz0B,KAAQ,gBACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,QACNz0B,KAAQ,QACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,OACNz0B,KAAQ,OACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,OACNz0B,KAAQ,OACRsgD,OAAUA,IAAM1qD,QAAA2qD,IAAA,CAAAxqD,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,QAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,kBACNz0B,KAAQ,oBACRsgD,OAAUA,IAAM1qD,QAAA2qD,IAAA,CAAAxqD,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,QAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,OACNz0B,KAAQ,OACRsgD,OAAUA,IAAM1qD,QAAA2qD,IAAA,CAAAxqD,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,KAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,KAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,QAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,OACNz0B,KAAQ,OACRsgD,OAAUA,IAAM1qD,QAAA2qD,IAAA,CAAAxqD,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,QAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,KACNz0B,KAAQ,KACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,OACNz0B,KAAQ,OACRsgD,OAAUA,IAAM1qD,QAAA2qD,IAAA,CAAAxqD,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,QAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,MACNz0B,KAAQ,MACRwgD,QAAW,CACT,cAEFF,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,OACNz0B,KAAQ,OACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,KAAAnf,KAAAC,EAAAC,KAAAD,EAAA,OAElB,CACE0+B,GAAM,aACNz0B,KAAQ,aACRwgD,QAAW,CACT,MAEFF,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,QACNz0B,KAAQ,QACRsgD,OAAUA,IAAM1qD,QAAA2qD,IAAA,CAAAxqD,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,QAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,QACNz0B,KAAQ,QACRsgD,OAAUA,IAAM1qD,QAAA2qD,IAAA,CAAAxqD,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,QAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,OACNz0B,KAAQ,OACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,QACNz0B,KAAQ,QACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,QACNz0B,KAAQ,qBACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,QACNz0B,KAAQ,aACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,UACNz0B,KAAQ,UACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,OACNz0B,KAAQ,OACRwgD,QAAW,CACT,OAEFF,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,MACNz0B,KAAQ,MACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,QACNz0B,KAAQ,QACRwgD,QAAW,CACT,MAEFF,OAAUA,IAAM1qD,QAAA2qD,IAAA,CAAAxqD,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,KAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,QAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,SACNz0B,KAAQ,SACRwgD,QAAW,CACT,KACA,OAEFF,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,QACNz0B,KAAQ,QACRwgD,QAAW,CACT,OAEFF,OAAUA,IAAMvqD,EAAAkf,EAAA,KAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,QACNz0B,KAAQ,QACRsgD,OAAUA,IAAM1qD,QAAA2qD,IAAA,CAAAxqD,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,KAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,KAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,KAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,OAAAnf,KAAAC,EAAAC,KAAAD,EAAA,OAElB,CACE0+B,GAAM,OACNz0B,KAAQ,SACRwgD,QAAW,CACT,SAEFF,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,OACNz0B,KAAQ,OACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,KAAAnf,KAAAC,EAAAC,KAAAD,EAAA,OAElB,CACE0+B,GAAM,SACNz0B,KAAQ,SACRsgD,OAAUA,IAAM1qD,QAAA2qD,IAAA,CAAAxqD,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,QAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,MACNz0B,KAAQ,WACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,OACNz0B,KAAQ,OACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,MACNz0B,KAAQ,MACRsgD,OAAUA,IAAM1qD,QAAA2qD,IAAA,CAAAxqD,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,QAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,OACNz0B,KAAQ,OACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,OACNz0B,KAAQ,WACRwgD,QAAW,CACT,YAEFF,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,WACNz0B,KAAQ,WACRwgD,QAAW,CACT,MAEFF,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,QACNz0B,KAAQ,QACRsgD,OAAUA,IAAM1qD,QAAA2qD,IAAA,CAAAxqD,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,KAAAlf,EAAAkf,EAAA,OAAAnf,KAAAC,EAAAC,KAAAD,EAAA,OAElB,CACE0+B,GAAM,SACNz0B,KAAQ,SACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,MACNz0B,KAAQ,MACRsgD,OAAUA,IAAM1qD,QAAA2qD,IAAA,CAAAxqD,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,QAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,MACNz0B,KAAQ,MACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,UACNz0B,KAAQ,UACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,OACNz0B,KAAQ,OACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,OACNz0B,KAAQ,OACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,SACNz0B,KAAQ,kBACRwgD,QAAW,CACT,OAEFF,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,OAElB,CACE0+B,GAAM,WACNz0B,KAAQ,WACRwgD,QAAW,CACT,MAEFF,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,QACNz0B,KAAQ,QACRsgD,OAAUA,IAAM1qD,QAAA2qD,IAAA,CAAAxqD,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,QAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,MACNz0B,KAAQ,MACRsgD,OAAUA,IAAM1qD,QAAA2qD,IAAA,CAAAxqD,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,KAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,QAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,MACNz0B,KAAQ,MACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,IAAAnf,KAAAC,EAAAC,KAAAD,EAAA,MAElB,CACE0+B,GAAM,UACNz0B,KAAQ,UACRwgD,QAAW,CACT,MAEFF,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,cACNz0B,KAAQ,cACRwgD,QAAW,CACT,QAEFF,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,gBACNz0B,KAAQ,gBACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,QACNz0B,KAAQ,QACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,SACNz0B,KAAQ,SACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,OACNz0B,KAAQ,OACRsgD,OAAUA,IAAM1qD,QAAA2qD,IAAA,CAAAxqD,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,KAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,QAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,MACNz0B,KAAQ,MACRsgD,OAAUA,IAAM1qD,QAAA2qD,IAAA,CAAAxqD,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,KAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,OAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,QACNz0B,KAAQ,SACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,KACNz0B,KAAQ,aACRwgD,QAAW,CACT,MACA,QAEFF,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,UACNz0B,KAAQ,UACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,aACNz0B,KAAQ,aACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,KAAAnf,KAAAC,EAAAC,KAAAD,EAAA,OAElB,CACE0+B,GAAM,aACNz0B,KAAQ,aACRwgD,QAAW,CACT,KACA,OAEFF,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,SACNz0B,KAAQ,SACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,SACNz0B,KAAQ,SACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,QACNz0B,KAAQ,oBACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,MACNz0B,KAAQ,MACRwgD,QAAW,CACT,QAEFF,OAAUA,IAAM1qD,QAAA2qD,IAAA,CAAAxqD,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,QAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,SACNz0B,KAAQ,SACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,aACNz0B,KAAQ,aACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,SACNz0B,KAAQ,SACRwgD,QAAW,CACT,MAEFF,OAAUA,IAAMvqD,EAAAkf,EAAA,KAAAnf,KAAAC,EAAAC,KAAAD,EAAA,OAElB,CACE0+B,GAAM,MACNz0B,KAAQ,MACRsgD,OAAUA,IAAM1qD,QAAA2qD,IAAA,CAAAxqD,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,QAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,SACNz0B,KAAQ,gBACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,MACNz0B,KAAQ,kBACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,IACNz0B,KAAQ,IACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,SACNz0B,KAAQ,SACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,OACNz0B,KAAQ,OACRwgD,QAAW,CACT,SAEFF,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,QACNz0B,KAAQ,gBACRsgD,OAAUA,IAAM1qD,QAAA2qD,IAAA,CAAAxqD,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,QAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,MACNz0B,KAAQ,0BACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,SACNz0B,KAAQ,SACRwgD,QAAW,CACT,SAEFF,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,MACNz0B,KAAQ,MACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,QACNz0B,KAAQ,SACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,MACNz0B,KAAQ,mBACRsgD,OAAUA,IAAM1qD,QAAA2qD,IAAA,CAAAxqD,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,KAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,KAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,QAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,OACNz0B,KAAQ,OACRwgD,QAAW,CACT,MAEFF,OAAUA,IAAM1qD,QAAA2qD,IAAA,CAAAxqD,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,KAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,QAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,OACNz0B,KAAQ,OACRwgD,QAAW,CACT,MAEFF,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,MACNz0B,KAAQ,MACRsgD,OAAUA,IAAM1qD,QAAA2qD,IAAA,CAAAxqD,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,QAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,OACNz0B,KAAQ,OACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,QACNz0B,KAAQ,QACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,KAAAnf,KAAAC,EAAAC,KAAAD,EAAA,OAElB,CACE0+B,GAAM,SACNz0B,KAAQ,SACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,OACNz0B,KAAQ,OACRsgD,OAAUA,IAAM1qD,QAAA2qD,IAAA,CAAAxqD,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,QAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,YACNz0B,KAAQ,YACRwgD,QAAW,CACT,UAEFF,OAAUA,IAAM1qD,QAAA2qD,IAAA,CAAAxqD,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,MAElB,CACE0+B,GAAM,cACNz0B,KAAQ,QACRwgD,QAAW,CACT,OACA,KACA,QACA,OAEFF,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,eACNz0B,KAAQ,gBACRwgD,QAAW,CACT,WAEFF,OAAUA,IAAM1qD,QAAA2qD,IAAA,CAAAxqD,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,OAAAnf,KAAAC,EAAAC,KAAAD,EAAA,OAElB,CACE0+B,GAAM,YACNz0B,KAAQ,YACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,WACNz0B,KAAQ,WACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,KAAAnf,KAAAC,EAAAC,KAAAD,EAAA,OAElB,CACE0+B,GAAM,MACNz0B,KAAQ,oBACRwgD,QAAW,CACT,qBAEFF,OAAUA,IAAM1qD,QAAA2qD,IAAA,CAAAxqD,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,QAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,SACNz0B,KAAQ,SACRsgD,OAAUA,IAAM1qD,QAAA2qD,IAAA,CAAAxqD,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,QAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,SACNz0B,KAAQ,wBACRwgD,QAAW,CACT,OAEFF,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,MACNz0B,KAAQ,MACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,aACNz0B,KAAQ,aACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,QACNz0B,KAAQ,QACRsgD,OAAUA,IAAM1qD,QAAA2qD,IAAA,CAAAxqD,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,QAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,SACNz0B,KAAQ,SACRwgD,QAAW,CACT,QAEFF,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,SACNz0B,KAAQ,SACRsgD,OAAUA,IAAM1qD,QAAA2qD,IAAA,CAAAxqD,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,KAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,QAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,QACNz0B,KAAQ,QACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,iBACNz0B,KAAQ,gBACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,UACNz0B,KAAQ,gBACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,OACNz0B,KAAQ,OACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,MACNz0B,KAAQ,MACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,QACNz0B,KAAQ,QACRsgD,OAAUA,IAAM1qD,QAAA2qD,IAAA,CAAAxqD,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,QAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,YACNz0B,KAAQ,YACRwgD,QAAW,CACT,KACA,UAEFF,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,MACNz0B,KAAQ,MACRsgD,OAAUA,IAAM1qD,QAAA2qD,IAAA,CAAAxqD,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,QAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,OACNz0B,KAAQ,OACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,MACNz0B,KAAQ,MACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,MACNz0B,KAAQ,MACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,KAAAnf,KAAAC,EAAAC,KAAAD,EAAA,OAElB,CACE0+B,GAAM,SACNz0B,KAAQ,SACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,OACNz0B,KAAQ,OACRsgD,OAAUA,IAAM1qD,QAAA2qD,IAAA,CAAAxqD,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,KAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,KAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,QAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,aACNz0B,KAAQ,aACRwgD,QAAW,CACT,MAEFF,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,WACNz0B,KAAQ,WACRwgD,QAAW,CACT,OAEFF,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,QACNz0B,KAAQ,QACRwgD,QAAW,CACT,OAEFF,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,IACNz0B,KAAQ,IACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,OACNz0B,KAAQ,OACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,KACNz0B,KAAQ,eACRwgD,QAAW,CACT,OAEFF,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,UACNz0B,KAAQ,UACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,KAAAnf,KAAAC,EAAAC,KAAAD,EAAA,OAElB,CACE0+B,GAAM,OACNz0B,KAAQ,OACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,OACNz0B,KAAQ,aACRwgD,QAAW,CACT,MACA,aAEFF,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,MACNz0B,KAAQ,MACRsgD,OAAUA,IAAM1qD,QAAA2qD,IAAA,CAAAxqD,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,KAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,KAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,QAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,WACNz0B,KAAQ,WACRsgD,OAAUA,IAAM1qD,QAAA2qD,IAAA,CAAAxqD,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,KAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,KAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,QAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,QACNz0B,KAAQ,QACRwgD,QAAW,CACT,MAEFF,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,OACNz0B,KAAQ,cACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,SACNz0B,KAAQ,SACRwgD,QAAW,CACT,gBAEFF,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,OACNz0B,KAAQ,OACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,WACNz0B,KAAQ,WACRwgD,QAAW,CACT,YACA,QAEFF,OAAUA,IAAM1qD,QAAA2qD,IAAA,CAAAxqD,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,KAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,KAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,KAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,KAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,KAAAlf,EAAAkf,EAAA,KAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,QAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,UACNz0B,KAAQ,UACRwgD,QAAW,CACT,MAEFF,OAAUA,IAAMvqD,EAAAkf,EAAA,KAAAnf,KAAAC,EAAAC,KAAAD,EAAA,OAElB,CACE0+B,GAAM,MACNz0B,KAAQ,MACRsgD,OAAUA,IAAM1qD,QAAA2qD,IAAA,CAAAxqD,EAAAkf,EAAA,KAAAlf,EAAAkf,EAAA,QAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,MACNz0B,KAAQ,MACRsgD,OAAUA,IAAM1qD,QAAA2qD,IAAA,CAAAxqD,EAAAkf,EAAA,KAAAlf,EAAAkf,EAAA,MAAAlf,EAAAkf,EAAA,QAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,OACNz0B,KAAQ,OACRwgD,QAAW,CACT,OAEFF,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,YACNz0B,KAAQ,YACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,MACNz0B,KAAQ,MACRsgD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,SAGd0qD,GAAuBjmD,OAAOkmD,YAAYL,GAAqBvlD,IAAKmiB,GAAM,CAACA,EAAEwX,GAAIxX,EAAEqjC,UACnFK,GAAwBnmD,OAAOkmD,YAAYL,GAAqBO,QAAS3jC,GAAMA,EAAEujC,SAAS1lD,IAAK8yC,GAAM,CAACA,EAAG3wB,EAAEqjC,UAAY,KACvHO,GAAmB,IACpBJ,MACAE,ICnuCCG,GAAc,eAAA3F,KAAA4F,KAAG,UAAO3+B,GAC5B,OAAOrsB,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,OAAqBD,KAAMkrD,GAASA,EAAKC,QAAQ7+B,GAC1D,GAAC,gBAFmB8+B,GAAA,OAAA/F,EAAAvW,MAAAnuC,KAAAqJ,UAAA,KCsRdqhD,GAAgB3mD,OAAOkmD,YAtRH,CACxB,CACEjsB,GAAM,aACN2sB,YAAe,aACf1pD,KAAQ,OACR4oD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,WACN2sB,YAAe,WACf1pD,KAAQ,OACR4oD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,WACN2sB,YAAe,WACf1pD,KAAQ,OACR4oD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,oBACN2sB,YAAe,uBACf1pD,KAAQ,OACR4oD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,mBACN2sB,YAAe,mBACf1pD,KAAQ,QACR4oD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,uBACN2sB,YAAe,uBACf1pD,KAAQ,OACR4oD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,mBACN2sB,YAAe,mBACf1pD,KAAQ,OACR4oD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,YACN2sB,YAAe,YACf1pD,KAAQ,OACR4oD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,UACN2sB,YAAe,gBACf1pD,KAAQ,OACR4oD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,eACN2sB,YAAe,qBACf1pD,KAAQ,OACR4oD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,cACN2sB,YAAe,cACf1pD,KAAQ,OACR4oD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,sBACN2sB,YAAe,sBACf1pD,KAAQ,OACR4oD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,qBACN2sB,YAAe,qBACf1pD,KAAQ,OACR4oD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,eACN2sB,YAAe,eACf1pD,KAAQ,QACR4oD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,uBACN2sB,YAAe,uBACf1pD,KAAQ,QACR4oD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,UACN2sB,YAAe,UACf1pD,KAAQ,OACR4oD,OAAUA,IAAMvqD,EAAAkf,EAAA,KAAAnf,KAAAC,EAAAC,KAAAD,EAAA,OAElB,CACE0+B,GAAM,YACN2sB,YAAe,YACf1pD,KAAQ,OACR4oD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,aACN2sB,YAAe,aACf1pD,KAAQ,QACR4oD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,iBACN2sB,YAAe,iBACf1pD,KAAQ,OACR4oD,OAAUA,IAAMvqD,EAAAkf,EAAA,KAAAnf,KAAAC,EAAAC,KAAAD,EAAA,OAElB,CACE0+B,GAAM,wBACN2sB,YAAe,wBACf1pD,KAAQ,OACR4oD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,yBACN2sB,YAAe,yBACf1pD,KAAQ,QACR4oD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,uBACN2sB,YAAe,uBACf1pD,KAAQ,OACR4oD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,2BACN2sB,YAAe,2BACf1pD,KAAQ,OACR4oD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,WACN2sB,YAAe,WACf1pD,KAAQ,OACR4oD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,YACN2sB,YAAe,YACf1pD,KAAQ,QACR4oD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,UACN2sB,YAAe,UACf1pD,KAAQ,OACR4oD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,YACN2sB,YAAe,YACf1pD,KAAQ,OACR4oD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,OACN2sB,YAAe,OACf1pD,KAAQ,OACR4oD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,eACN2sB,YAAe,eACf1pD,KAAQ,OACR4oD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,YACN2sB,YAAe,YACf1pD,KAAQ,QACR4oD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,aACN2sB,YAAe,aACf1pD,KAAQ,OACR4oD,OAAUA,IAAMvqD,EAAAkf,EAAA,KAAAnf,KAAAC,EAAAC,KAAAD,EAAA,OAElB,CACE0+B,GAAM,MACN2sB,YAAe,MACf1pD,KAAQ,OACR4oD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,YACN2sB,YAAe,eACf1pD,KAAQ,OACR4oD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,iBACN2sB,YAAe,oBACf1pD,KAAQ,QACR4oD,OAAUA,IAAMvqD,EAAAkf,EAAA,KAAAnf,KAAAC,EAAAC,KAAAD,EAAA,OAElB,CACE0+B,GAAM,iBACN2sB,YAAe,oBACf1pD,KAAQ,OACR4oD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,aACN2sB,YAAe,aACf1pD,KAAQ,OACR4oD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,cACN2sB,YAAe,cACf1pD,KAAQ,QACR4oD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,eACN2sB,YAAe,eACf1pD,KAAQ,QACR4oD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,iBACN2sB,YAAe,iBACf1pD,KAAQ,OACR4oD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,kBACN2sB,YAAe,kBACf1pD,KAAQ,QACR4oD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,eACN2sB,YAAe,gBACf1pD,KAAQ,OACR4oD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,cACN2sB,YAAe,cACf1pD,KAAQ,OACR4oD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,SACN2sB,YAAe,SACf1pD,KAAQ,OACR4oD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,gBACN2sB,YAAe,gBACf1pD,KAAQ,OACR4oD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,eACN2sB,YAAe,eACf1pD,KAAQ,OACR4oD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,QAElB,CACE0+B,GAAM,gBACN2sB,YAAe,gBACf1pD,KAAQ,QACR4oD,OAAUA,IAAMvqD,EAAAkf,EAAA,MAAAnf,KAAAC,EAAAC,KAAAD,EAAA,SAGuC+E,IAAKmiB,GAAM,CAACA,EAAEwX,GAAIxX,EAAEqjC,UCtR/E,ICYIe,GACOA,EDbPC,EACH,SAAUA,GACPA,SAAUA,EAAUC,QAAY,GAAM,SACtCD,EAAUA,EAAUE,KAAU,GAAK,OACnCF,EAAUA,EAAUG,OAAY,GAAK,SACrCH,EAAUA,EAAUI,KAAU,GAAK,OACnCJ,EAAUA,EAAUK,UAAe,GAAK,YALjCL,CAMX,CANC,CAMEA,GAA0B,CAAC,GCyG9B,SAASM,GAAezW,EAAU0W,GAC9B,MAAM19B,EAAU,GACV29B,EA+EV,SAASC,GAAatS,GAClB,IAAIuS,EAAQ,0CACRC,EAAQD,EAAME,KAAKzS,GACvB,MAAO,CACH3yC,KAAMA,KACF,IAAKmlD,EACD,OAAO,KAEX,MAAM5nD,EAAM4nD,EAAM,GAClBA,SAAQD,EAAME,KAAKzS,GACZp1C,GAGnB,CA5FsB0nD,CAAa5W,GAC/B,IAAI/7B,EAAQ0yC,EAAUhlD,OACtB,KAAiB,OAAVsS,GAAgB,CACnB,IAAI+yC,EAAW,EACf,GAAqB,IAAjB/yC,EAAM1U,QAAoC,MAApB0U,EAAMgzC,OAAO,GAAY,CAC/C,OAAQhzC,EAAMgzC,OAAO,IACjB,IAAK,IACDD,EAAW,EACX,MACJ,IAAK,IACDA,GAAW,EACX,MACJ,QACIjtC,QAAQmtC,IAAI,oBAAoBjzC,uBAExCA,EAAQ0yC,EAAUhlD,MACtB,CACA,IAAIwlD,EAAUC,IAEd,GADAp+B,EAAQjmB,KAAK,CAAEokD,UAASH,aACV,MAAV/yC,EACA,MAEJA,EAAQ0yC,EAAUhlD,MACtB,CACA,OAAOqnB,EACP,SAASq+B,IACL,GAAc,MAAVpzC,EAAe,CACfA,EAAQ0yC,EAAUhlD,OAClB,MAAM2lD,EAAqBD,IAC3B,OAAOE,KAAkBD,IAAuBA,EAAmBC,EACvE,CACA,GAAc,MAAVtzC,EAAe,CACfA,EAAQ0yC,EAAUhlD,OAClB,MAAM6lD,EAyBd,SAASC,IACL,MAAMC,EAAW,GACjB,IAAIP,EAAUC,IACd,KAAOD,IACHO,EAAS3kD,KAAKokD,GACA,MAAVlzC,GAA2B,MAAVA,IAFT,CAGR,GACIA,EAAQ0yC,EAAUhlD,aACH,MAAVsS,GAA2B,MAAVA,GAK9BkzC,EAAUC,GACd,CACA,OAAOG,GAAgBG,EAAStwC,KAAK+vC,GAAWA,EAAQI,GAC5D,CAzCoCE,GAC5B,MAAc,MAAVxzC,IACAA,EAAQ0yC,EAAUhlD,QAEf6lD,CACX,CACA,GAAIG,GAAa1zC,GAAQ,CACrB,MAAM2zC,EAAc,GACpB,GACIA,EAAY7kD,KAAKkR,GACjBA,EAAQ0yC,EAAUhlD,aACbgmD,GAAa1zC,IACtB,OAAOszC,GAAgBb,EAAYkB,EAAaL,EACpD,CACA,OAAO,IACX,CACA,SAASH,IACL,MAAMM,EAAW,GACjB,IAAIP,EAAUE,IACd,KAAOF,GACHO,EAAS3kD,KAAKokD,GACdA,EAAUE,IAEd,OAAOE,GAAgBG,EAASG,MAAMV,GAAWA,EAAQI,GAC7D,CAkBJ,CACA,SAASI,GAAa1zC,GAClB,QAASA,KAAWA,EAAM6yC,MAAM,WACpC,CAmBA,SAASgB,GAAkBC,GACI,mBAAhBA,EAAI9nB,SACX8nB,EAAI9nB,SAEZ,CAQA,SAAS+nB,GAAQC,GACb,OAAI/mD,MAAMgB,QAAQ+lD,GAQtB,SAASC,GAAWC,GAChB,IAAIC,EAAI,GACR,QAAStmC,EAAI,EAAGumC,EAAMF,EAAI5oD,OAAQuiB,EAAIumC,EAAKvmC,IACvCsmC,EAAEtmC,GAAKkmC,GAAQG,EAAIrmC,IAEvB,OAAOsmC,CACX,CAbeF,CAAWD,GAEG,iBAAdA,EAYf,SAASK,GAASC,GACd,IAAIH,EAAI,CAAC,EACT,QAASzsD,KAAO4sD,EACZH,EAAEzsD,GAAOqsD,GAAQO,EAAI5sD,IAEzB,OAAOysD,CACX,CAjBeE,CAASL,GAEbA,CACX,CAeA,SAASO,GAAahqD,KAAWmC,GAC7BA,SAAQxB,QAAQoH,IACZ,QAAS5K,KAAO4K,EACZ/H,EAAO7C,GAAO4K,EAAO5K,EAAG,GAGzB6C,CACX,CACA,SAASiqD,GAASnuD,GACd,MAAMouD,GAAOpuD,EAAKquD,YAAY,OAASruD,EAAKquD,YAAY,MACxD,OAAY,IAARD,EACOpuD,GAEDouD,GAAQpuD,EAAKiF,OAAS,EACrBkpD,GAASnuD,EAAKolD,UAAU,EAAGplD,EAAKiF,OAAS,IAGzCjF,EAAKsuD,OAAc,GAANF,EAE5B,QAnQyBG,QAAY,KAAiBA,SAO3C3C,EAwFRA,KAA2BA,GAAyB,CAAC,IApF7B4C,YAHvB,SAASA,EAAYC,GACjB,OAAOA,EAAuB1zC,SAAS,GAAG2zC,SAAS,GAAI,IAC3D,EAgBA9C,EAAuB+C,MAdvB,SAASA,EAAMF,GACX,MAAMG,EAAahD,EAAuBiD,cAAcJ,GAClDK,EAAYlD,EAAuBmD,aAAaN,GAChDO,EAAYpD,EAAuBqD,aAAaR,GAChDS,EAAatD,EAAuBuD,cAAcV,GAClDW,EAAaxD,EAAuByD,cAAcZ,GACxDhvC,QAAQmtC,IAAI,CACRgC,WAAYA,EACZE,UAAWA,EACXE,UAAWA,EACXE,WAAYA,EACZE,WAAYA,GAEpB,EAMAxD,EAAuBiD,cAJvB,SAASA,EAAcJ,GACnB,OAAkC,IAAzBA,KACL,CACR,EAMA7C,EAAuBmD,aAJvB,SAASA,EAAaN,GAClB,OAAkC,IAAzBA,KACL,CACR,EAKA7C,EAAuB0D,yBAHvB,SAASA,EAAyBb,GAC9B,SAAiC,KAAzBA,EACZ,EAMA7C,EAAuBqD,aAJvB,SAASA,EAAaR,GAClB,OAAkC,MAAzBA,KACL,EACR,EAMA7C,EAAuBuD,cAJvB,SAASA,EAAcV,GACnB,OAAkC,SAAzBA,KACL,EACR,EAMA7C,EAAuByD,cAJvB,SAASA,EAAcZ,GACnB,OAAkC,WAAzBA,KACL,EACR,EAwCA7C,EAAuB/9C,IAlCvB,SAASA,EAAI4gD,EAAwBG,EAAYE,EAAWQ,EAA0BN,EAAWE,EAAYE,GACzG,IAAIG,EAAc3D,EAAuBiD,cAAcJ,GACnDe,EAAa5D,EAAuBmD,aAAaN,GACjDgB,EAA+B7D,EAAuB0D,yBAAyBb,GAA0B,EAAI,EAC7GiB,EAAa9D,EAAuBqD,aAAaR,GACjDkB,EAAc/D,EAAuBuD,cAAcV,GACnDmB,EAAchE,EAAuByD,cAAcZ,GACvD,OAAmB,IAAfG,IACAW,EAAcX,GAEA,IAAdE,IACAU,EAAmCV,GAEN,OAA7BQ,IACAG,EAA+BH,EAA2B,EAAI,IAEhD,IAAdN,IACAU,EAAaV,GAEE,IAAfE,IACAS,EAAcT,GAEC,IAAfE,IACAQ,EAAcR,IAERG,EACLC,GAAc,EACdC,GACG,GACHC,GAAc,GACdC,GAAe,GACfC,GAAe,MAChB,CACR,EAuKJ,IAAIC,GAAyB,yCAC7B,MAAMC,GACF,kBAAOC,CAAYC,GACf,OAAoB,OAAhBA,IAGJH,GAAuBI,UAAY,EAC5BJ,GAAuBtsD,KAAKysD,GACvC,CACA,sBAAOE,CAAgBF,EAAaG,EAAeC,GAC/C,OAAOJ,EAAYlgC,QAAQ+/B,GAAwB,CAACrD,EAAOl4C,EAAO+7C,EAAcC,KAC5E,IAAIt2C,EAAUo2C,EAAevrC,SAASvQ,GAAS+7C,EAAc,KAC7D,IAAIr2C,EAgBA,OAAOwyC,EAhBE,CACT,IAAIjmD,EAAS4pD,EAAc/K,UAAUprC,EAAQyoB,MAAOzoB,EAAQwoB,KAE5D,KAAqB,MAAdj8B,EAAO,IACVA,EAASA,EAAO6+C,UAAU,GAE9B,OAAQkL,GACJ,IAAK,WACD,OAAO/pD,EAAO/C,cAClB,IAAK,SACD,OAAO+C,EAAOgqD,cAClB,QACI,OAAOhqD,EAEnB,CAEWimD,EAGnB,EAEJ,SAASgE,GAAOrY,EAAGC,GACf,OAAID,EAAIC,GACG,EAEPD,EAAIC,EACG,EAEJ,CACX,CACA,SAASqY,GAAUtY,EAAGC,GAClB,GAAU,OAAND,GAAoB,OAANC,EACd,OAAO,EAEX,IAAKD,EACD,OAAO,EAEX,IAAKC,EACD,OAAO,EAEX,IAAIsY,EAAOvY,EAAElzC,OACT0rD,EAAOvY,EAAEnzC,OACb,GAAIyrD,IAASC,EAAM,CACf,QAASnpC,EAAI,EAAGA,EAAIkpC,EAAMlpC,IAAK,CAC3B,IAAI5iB,EAAM4rD,GAAOrY,EAAE3wB,GAAI4wB,EAAE5wB,IACzB,GAAY,IAAR5iB,EACA,OAAOA,CAEf,CACA,OAAO,CACX,CACA,OAAO8rD,EAAOC,CAClB,CACA,SAASC,GAAgBC,GAarB,SAZI,kBAAkBttD,KAAKstD,IAIvB,kBAAkBttD,KAAKstD,IAIvB,kBAAkBttD,KAAKstD,IAIvB,kBAAkBttD,KAAKstD,GAK/B,CAIA,SAASC,GAAuBxvD,GAC5B,OAAOA,EAAMwuB,QAAQ,0CAA2C,OACpE,CACA,MAAMihC,GACFtvD,GACAwoD,MAAQ,IAAI5pC,IACZxf,YAAYY,GACRT,KAAKS,GAAKA,CACd,CACAqP,IAAIzP,GACA,GAAIL,KAAKipD,MAAM/qC,IAAI7d,GACf,OAAOL,KAAKipD,MAAMn5C,IAAIzP,GAE1B,MAAMC,EAAQN,KAAKS,GAAGJ,GACtB,OAAAL,KAAKipD,MAAMp8C,IAAIxM,EAAKC,GACbA,CACX,EASJ,MAAM0vD,GACFC,UACApwD,YAAYowD,GACRjwD,KAAKiwD,UAAYA,CACrB,CACAC,QACI,OAAOlwD,KAAKiwD,SAChB,EAKJ,MAAME,GACFF,UACAG,SACAvwD,YAAYowD,EAAWG,GACnBpwD,KAAKiwD,UAAYA,EACjBjwD,KAAKowD,SAAWA,CACpB,CACAF,QACI,MAAO,GAAGlwD,KAAKiwD,aAAajwD,KAAKowD,UACrC,EAEJ,MAAMC,GACFC,YAAc,GACdC,mBAAqB,IAAIhzC,IACzB,cAAIizC,GACA,OAAOxwD,KAAKswD,WAChB,CACAG,YAAc,IAAIlzC,IAClBgB,IAAImyC,GACA,MAAMrwD,EAAMqwD,EAAUR,QAClBlwD,KAAKuwD,mBAAmBryC,IAAI7d,KAGhCL,KAAKuwD,mBAAmBhyC,IAAIle,GAC5BL,KAAKswD,YAAY7oD,KAAKipD,GAC1B,EAEJ,MAAMC,GACFC,KACAC,iBACAC,sBAAwB,IAAIvzC,IAC5BwzC,yBAA2B,IAAIxzC,IAC/ByzC,EACAnxD,YAAY+wD,EAAMC,GACd7wD,KAAK4wD,KAAOA,EACZ5wD,KAAK6wD,iBAAmBA,EACxB7wD,KAAK8wD,sBAAsBvyC,IAAIve,KAAK6wD,kBACpC7wD,KAAKgxD,EAAI,CAAC,IAAIhB,GAAsBhwD,KAAK6wD,kBAC7C,CACAI,eACI,MAAMC,EAAIlxD,KAAKgxD,EACfhxD,KAAKgxD,EAAI,GACT,MAAMlV,EAAO,IAAIuU,GACjB,UAAWc,KAAOD,EACdE,GAA6BD,EAAKnxD,KAAK6wD,iBAAkB7wD,KAAK4wD,KAAM9U,GAExE,UAAWqV,KAAOrV,EAAK0U,WACnB,GAAIW,aAAenB,GAAuB,CACtC,GAAIhwD,KAAK8wD,sBAAsB5yC,IAAIizC,EAAIlB,WAEnC,SAEJjwD,KAAK8wD,sBAAsBvyC,IAAI4yC,EAAIlB,WACnCjwD,KAAKgxD,EAAEvpD,KAAK0pD,EAChB,KACK,CAKD,GAJInxD,KAAK8wD,sBAAsB5yC,IAAIizC,EAAIlB,YAInCjwD,KAAK+wD,yBAAyB7yC,IAAIizC,EAAIjB,SAEtC,SAEJlwD,KAAK+wD,yBAAyBxyC,IAAI4yC,EAAIjB,SACtClwD,KAAKgxD,EAAEvpD,KAAK0pD,EAChB,CAER,EAEJ,SAASC,GAA6BV,EAAWW,EAAsBT,EAAMrrD,GACzE,MAAM+rD,EAAcV,EAAKW,OAAOb,EAAUT,WAC1C,IAAKqB,EAAa,CACd,GAAIZ,EAAUT,YAAcoB,EACxB,MAAM,IAAIG,MAAM,4BAA4BH,MAEhD,MACJ,CACA,MAAMI,EAAcb,EAAKW,OAAOF,GAC5BX,aAAqBV,GACrB0B,GAAwC,CAAED,cAAaH,eAAe/rD,GAGtEosD,GAAkDjB,EAAUN,SAAU,CAAEqB,cAAaH,cAAaM,WAAYN,EAAYM,YAAcrsD,GAE5I,MAAMssD,EAAajB,EAAKiB,WAAWnB,EAAUT,WAC7C,GAAI4B,EACA,UAAWC,KAAaD,EACpBtsD,EAAOgZ,IAAI,IAAIyxC,GAAsB8B,GAGjD,CACA,SAASH,GAAkDvB,EAAUnsB,EAAS1+B,GACtE0+B,EAAQ2tB,YAAc3tB,EAAQ2tB,WAAWxB,IAEzC2B,GAAiC,CADpB9tB,EAAQ2tB,WAAWxB,IACSnsB,EAAS1+B,EAE1D,CACA,SAASmsD,GAAwCztB,EAAS1+B,GAClD0+B,EAAQqtB,YAAYU,UAAYpsD,MAAMgB,QAAQq9B,EAAQqtB,YAAYU,WAClED,GAAiC9tB,EAAQqtB,YAAYU,SAAU,IAAK/tB,EAAS2tB,WAAY3tB,EAAQqtB,YAAYM,YAAcrsD,GAE3H0+B,EAAQqtB,YAAYO,YACpBE,GAAiChuD,OAAO4B,OAAOs+B,EAAQqtB,YAAYO,YAAa,IAAK5tB,EAAS2tB,WAAY3tB,EAAQqtB,YAAYM,YAAcrsD,EAEpJ,CACA,SAASwsD,GAAiCE,EAAOhuB,EAAS1+B,GACtD,UAAW2sD,KAAQD,EAAO,CACtB,GAAI1sD,EAAOkrD,YAAYvyC,IAAIg0C,GACvB,SAEJ3sD,EAAOkrD,YAAYlyC,IAAI2zC,GACvB,MAAMC,EAAoBD,EAAKN,WAAa1E,GAAa,CAAC,EAAGjpB,EAAQ2tB,WAAYM,EAAKN,YAAc3tB,EAAQ2tB,WACxGhsD,MAAMgB,QAAQsrD,EAAKF,WACnBD,GAAiCG,EAAKF,SAAU,IAAK/tB,EAAS2tB,WAAYO,GAAqB5sD,GAEnG,MAAM6sD,EAAUF,EAAKE,QACrB,IAAKA,EACD,SAEJ,MAAM1B,EAAY2B,GAAaD,GAC/B,OAAQ1B,EAAU4B,MACd,KAAK,EACDZ,GAAwC,IAAKztB,EAASqtB,YAAartB,EAAQwtB,aAAelsD,GAC1F,MACJ,KAAK,EACDmsD,GAAwCztB,EAAS1+B,GACjD,MACJ,KAAK,EACDosD,GAAkDjB,EAAUN,SAAU,IAAKnsB,EAAS2tB,WAAYO,GAAqB5sD,GACrH,MACJ,KAAK,EACL,KAAK,EACD,MAAM+rD,EAAcZ,EAAUT,YAAchsB,EAAQqtB,YAAYrB,UAC1DhsB,EAAQqtB,YACRZ,EAAUT,YAAchsB,EAAQwtB,YAAYxB,UACxChsB,EAAQwtB,iBACRrrD,EACV,GAAIkrD,EAAa,CACb,MAAMiB,EAAa,CAAEd,YAAaxtB,EAAQwtB,YAAaH,cAAaM,WAAYO,GACzD,IAAnBzB,EAAU4B,KACVX,GAAkDjB,EAAUN,SAAUmC,EAAYhtD,GAGlFmsD,GAAwCa,EAAYhtD,EAE5D,MAGQA,EAAOgZ,IADY,IAAnBmyC,EAAU4B,KACC,IAAInC,GAAgCO,EAAUT,UAAWS,EAAUN,UAGnE,IAAIJ,GAAsBU,EAAUT,YAKnE,CACJ,CACA,MAAMuC,GACFF,KAAO,EAEX,MAAMG,GACFH,KAAO,EAEX,MAAMI,GACFtC,SACAkC,KAAO,EACPzyD,YAAYuwD,GACRpwD,KAAKowD,SAAWA,CACpB,EAEJ,MAAMuC,GACF1C,UACAqC,KAAO,EACPzyD,YAAYowD,GACRjwD,KAAKiwD,UAAYA,CACrB,EAEJ,MAAM2C,GACF3C,UACAG,SACAkC,KAAO,EACPzyD,YAAYowD,EAAWG,GACnBpwD,KAAKiwD,UAAYA,EACjBjwD,KAAKowD,SAAWA,CACpB,EAEJ,SAASiC,GAAaD,GAClB,GAAgB,UAAZA,EACA,OAAO,IAAII,GAEV,GAAgB,UAAZJ,EACL,OAAO,IAAIK,GAEf,MAAMI,EAAeT,EAAQ7+C,QAAQ,KACrC,IAAqB,IAAjBs/C,EACA,OAAO,IAAIF,GAAkBP,GAE5B,GAAqB,IAAjBS,EACL,OAAO,IAAIH,GAAkBN,EAAQhO,UAAU,IAE9C,CACD,MAAM6L,EAAYmC,EAAQhO,UAAU,EAAGyO,GACjCzC,EAAWgC,EAAQhO,UAAUyO,EAAe,GAClD,OAAO,IAAID,GAA4B3C,EAAWG,EACtD,CACJ,CAKA,MAAM0C,GAAsB,UACtBC,GAAuB,WAEvBC,IAAY,EAEZC,IAAc,EAOpB,MAAMC,GACFC,UACAn1B,GACAo1B,iBACAC,MACAC,wBACAC,aACA1zD,YAAYszD,EAAWn1B,EAAIz0B,EAAMiqD,GAC7BxzD,KAAKmzD,UAAYA,EACjBnzD,KAAKg+B,GAAKA,EACVh+B,KAAKqzD,MAAQ9pD,GAAQ,KACrBvJ,KAAKozD,iBAAmBtE,GAAYC,YAAY/uD,KAAKqzD,OACrDrzD,KAAKuzD,aAAeC,GAAe,KACnCxzD,KAAKszD,wBAA0BxE,GAAYC,YAAY/uD,KAAKuzD,aAChE,CACA,aAAIE,GACA,MAAMxP,EAAWjkD,KAAKmzD,UAAY,GAAGhG,GAASntD,KAAKmzD,UAAUO,aAAa1zD,KAAKmzD,UAAUQ,OAAS,UAClG,MAAO,GAAG3zD,KAAKH,YAAY0J,QAAQvJ,KAAKg+B,QAAQimB,GACpD,CACA2P,QAAQC,EAAUzE,GACd,OAAKpvD,KAAKozD,kBAAmC,OAAfpzD,KAAKqzD,OAA+B,OAAbQ,GAAwC,OAAnBzE,EAGnEN,GAAYI,gBAAgBlvD,KAAKqzD,MAAOQ,EAAUzE,GAF9CpvD,KAAKqzD,KAGpB,CACAS,eAAeD,EAAUzE,GACrB,OAAKpvD,KAAKszD,yBAAiD,OAAtBtzD,KAAKuzD,aAGnCzE,GAAYI,gBAAgBlvD,KAAKuzD,aAAcM,EAAUzE,GAFrDpvD,KAAKuzD,YAGpB,EAEJ,MAAMQ,WAAoBb,GACtBc,6BACAn0D,YAAYszD,EAAWn1B,EAAIz0B,EAAMiqD,EAAaQ,GAC1C/xD,MAAMkxD,EAAWn1B,EAAIz0B,EAAMiqD,GAC3BxzD,KAAKg0D,6BAA+BA,CACxC,CACArvB,UACI,CAEJsvB,gBAAgBC,EAASC,GACrB,MAAM,IAAI3C,MAAM,iBACpB,CACA4C,QAAQF,EAASG,GACb,MAAM,IAAI7C,MAAM,iBACpB,CACA8C,UAAUJ,EAASG,EAAgBE,EAAQC,GACvC,MAAM,IAAIhD,MAAM,iBACpB,EAEJ,MAAMiD,WAAkBvB,GACpBwB,OACAC,SACAC,wBACA/0D,YAAYszD,EAAWn1B,EAAIz0B,EAAMiiD,EAAOmJ,GACpC1yD,MAAMkxD,EAAWn1B,EAAIz0B,EAAM,MAC3BvJ,KAAK00D,OAAS,IAAIG,GAAarJ,EAAOxrD,KAAKg+B,IAC3Ch+B,KAAK20D,SAAWA,EAChB30D,KAAK40D,wBAA0B,IACnC,CACAjwB,UACQ3kC,KAAK40D,0BACL50D,KAAK40D,wBAAwBjwB,UAC7B3kC,KAAK40D,wBAA0B,KAEvC,CACA,oBAAIE,GACA,MAAO,GAAG90D,KAAK00D,OAAOzpD,QAC1B,CACAgpD,gBAAgBC,EAASC,GACrBA,EAAI1sD,KAAKzH,KAAK00D,OAClB,CACAN,QAAQF,EAASG,GACb,OAAOr0D,KAAK+0D,2BAA2Bb,GAASE,QAAQF,EAC5D,CACAI,UAAUJ,EAASG,EAAgBE,EAAQC,GACvC,OAAOx0D,KAAK+0D,2BAA2Bb,GAASI,UAAUJ,EAASK,EAAQC,EAC/E,CACAO,2BAA2Bb,GACvB,OAAKl0D,KAAK40D,0BACN50D,KAAK40D,wBAA0B,IAAII,GACnCh1D,KAAKi0D,gBAAgBC,EAASl0D,KAAK40D,0BAEhC50D,KAAK40D,uBAChB,EAEJ,MAAMK,WAAwB/B,GAC1BgC,mBACAlD,SACA4C,wBACA/0D,YAAYszD,EAAWn1B,EAAIz0B,EAAMiqD,EAAaxB,GAC1C/vD,MAAMkxD,EAAWn1B,EAAIz0B,EAAMiqD,GAC3BxzD,KAAKgyD,SAAWA,EAASA,SACzBhyD,KAAKk1D,mBAAqBlD,EAASkD,mBACnCl1D,KAAK40D,wBAA0B,IACnC,CACAjwB,UACQ3kC,KAAK40D,0BACL50D,KAAK40D,wBAAwBjwB,UAC7B3kC,KAAK40D,wBAA0B,KAEvC,CACAX,gBAAgBC,EAASC,GACrB,UAAWgB,KAAWn1D,KAAKgyD,SACVkC,EAAQkB,QAAQD,GACxBlB,gBAAgBC,EAASC,EAEtC,CACAC,QAAQF,EAASG,GACb,OAAOr0D,KAAK+0D,2BAA2Bb,GAASE,QAAQF,EAC5D,CACAI,UAAUJ,EAASG,EAAgBE,EAAQC,GACvC,OAAOx0D,KAAK+0D,2BAA2Bb,GAASI,UAAUJ,EAASK,EAAQC,EAC/E,CACAO,2BAA2Bb,GACvB,OAAKl0D,KAAK40D,0BACN50D,KAAK40D,wBAA0B,IAAII,GACnCh1D,KAAKi0D,gBAAgBC,EAASl0D,KAAK40D,0BAEhC50D,KAAK40D,uBAChB,EAEJ,MAAMS,WAAqBnC,GACvBoC,OACAC,cACAC,KACAC,qBACAC,YACAC,oBACAT,mBACAlD,SACA4C,wBACA/0D,YAAYszD,EAAWn1B,EAAIz0B,EAAMiqD,EAAaoC,EAAOL,EAAe/zB,EAAKk0B,EAAaC,EAAqB3D,GACvG/vD,MAAMkxD,EAAWn1B,EAAIz0B,EAAMiqD,GAC3BxzD,KAAKs1D,OAAS,IAAIT,GAAae,EAAO51D,KAAKg+B,IAC3Ch+B,KAAKu1D,cAAgBA,EACrBv1D,KAAKw1D,KAAO,IAAIX,GAAarzB,GAAY,UAAU,GACnDxhC,KAAKy1D,qBAAuBz1D,KAAKw1D,KAAKK,kBACtC71D,KAAK01D,YAAcA,EACnB11D,KAAK21D,oBAAsBA,IAAuB,EAClD31D,KAAKgyD,SAAWA,EAASA,SACzBhyD,KAAKk1D,mBAAqBlD,EAASkD,mBACnCl1D,KAAK40D,wBAA0B,IACnC,CACAjwB,UACQ3kC,KAAK40D,0BACL50D,KAAK40D,wBAAwBjwB,UAC7B3kC,KAAK40D,wBAA0B,KAEvC,CACA,oBAAIkB,GACA,MAAO,GAAG91D,KAAKs1D,OAAOrqD,QAC1B,CACA,kBAAI8qD,GACA,MAAO,GAAG/1D,KAAKw1D,KAAKvqD,QACxB,CACA+qD,iCAAiCnC,EAAUzE,GACvC,OAAOpvD,KAAKw1D,KAAKS,sBAAsBpC,EAAUzE,EACrD,CACA6E,gBAAgBC,EAASC,GACrBA,EAAI1sD,KAAKzH,KAAKs1D,OAClB,CACAlB,QAAQF,EAASG,GACb,OAAOr0D,KAAK+0D,2BAA2Bb,EAASG,GAAgBD,QAAQF,EAC5E,CACAI,UAAUJ,EAASG,EAAgBE,EAAQC,GACvC,OAAOx0D,KAAK+0D,2BAA2Bb,EAASG,GAAgBC,UAAUJ,EAASK,EAAQC,EAC/F,CACAO,2BAA2Bb,EAASG,GAChC,IAAKr0D,KAAK40D,wBAAyB,CAC/B50D,KAAK40D,wBAA0B,IAAII,GACnC,UAAWG,KAAWn1D,KAAKgyD,SACVkC,EAAQkB,QAAQD,GACxBlB,gBAAgBC,EAASl0D,KAAK40D,yBAEnC50D,KAAK21D,oBACL31D,KAAK40D,wBAAwBntD,KAAKzH,KAAKw1D,KAAKK,kBAAoB71D,KAAKw1D,KAAKU,QAAUl2D,KAAKw1D,MAGzFx1D,KAAK40D,wBAAwBuB,QAAQn2D,KAAKw1D,KAAKK,kBAAoB71D,KAAKw1D,KAAKU,QAAUl2D,KAAKw1D,KAEpG,CACA,OAAIx1D,KAAKw1D,KAAKK,mBAEN71D,KAAK40D,wBAAwBwB,UAD7Bp2D,KAAK21D,oBACkC31D,KAAK40D,wBAAwB3wD,SAAW,EAGxC,EAH2CowD,GAMnFr0D,KAAK40D,uBAChB,EAEJ,MAAMyB,WAAuBnD,GACzBoC,OACAC,cACAe,cACAC,OACAC,uBACAtB,mBACAlD,SACA4C,wBACA6B,6BACA52D,YAAYszD,EAAWn1B,EAAIz0B,EAAMiqD,EAAaoC,EAAOL,EAAegB,EAAQD,EAAetE,GACvF/vD,MAAMkxD,EAAWn1B,EAAIz0B,EAAMiqD,GAC3BxzD,KAAKs1D,OAAS,IAAIT,GAAae,EAAO51D,KAAKg+B,IAC3Ch+B,KAAKu1D,cAAgBA,EACrBv1D,KAAKs2D,cAAgBA,EACrBt2D,KAAKu2D,OAAS,IAAI1B,GAAa0B,EAAQtD,IACvCjzD,KAAKw2D,uBAAyBx2D,KAAKu2D,OAAOV,kBAC1C71D,KAAKgyD,SAAWA,EAASA,SACzBhyD,KAAKk1D,mBAAqBlD,EAASkD,mBACnCl1D,KAAK40D,wBAA0B,KAC/B50D,KAAKy2D,6BAA+B,IACxC,CACA9xB,UACQ3kC,KAAK40D,0BACL50D,KAAK40D,wBAAwBjwB,UAC7B3kC,KAAK40D,wBAA0B,MAE/B50D,KAAKy2D,+BACLz2D,KAAKy2D,6BAA6B9xB,UAClC3kC,KAAKy2D,6BAA+B,KAE5C,CACA,oBAAIX,GACA,MAAO,GAAG91D,KAAKs1D,OAAOrqD,QAC1B,CACA,oBAAIyrD,GACA,MAAO,GAAG12D,KAAKu2D,OAAOtrD,QAC1B,CACA0rD,mCAAmC9C,EAAUzE,GACzC,OAAOpvD,KAAKu2D,OAAON,sBAAsBpC,EAAUzE,EACvD,CACA6E,gBAAgBC,EAASC,GACrBA,EAAI1sD,KAAKzH,KAAKs1D,OAClB,CACAlB,QAAQF,EAASG,GACb,OAAOr0D,KAAK+0D,2BAA2Bb,GAASE,QAAQF,EAC5D,CACAI,UAAUJ,EAASG,EAAgBE,EAAQC,GACvC,OAAOx0D,KAAK+0D,2BAA2Bb,GAASI,UAAUJ,EAASK,EAAQC,EAC/E,CACAO,2BAA2Bb,GACvB,IAAKl0D,KAAK40D,wBAAyB,CAC/B50D,KAAK40D,wBAA0B,IAAII,GACnC,UAAWG,KAAWn1D,KAAKgyD,SACVkC,EAAQkB,QAAQD,GACxBlB,gBAAgBC,EAASl0D,KAAK40D,wBAE3C,CACA,OAAO50D,KAAK40D,uBAChB,CACAgC,aAAa1C,EAASG,GAClB,OAAOr0D,KAAK62D,gCAAgC3C,EAASG,GAAgBD,QAAQF,EACjF,CACA4C,eAAe5C,EAASG,EAAgBE,EAAQC,GAC5C,OAAOx0D,KAAK62D,gCAAgC3C,EAASG,GAAgBC,UAAUJ,EAASK,EAAQC,EACpG,CACAqC,gCAAgC3C,EAASG,GACrC,OAAKr0D,KAAKy2D,+BACNz2D,KAAKy2D,6BAA+B,IAAIzB,GACxCh1D,KAAKy2D,6BAA6BhvD,KAAKzH,KAAKu2D,OAAOV,kBAAoB71D,KAAKu2D,OAAOL,QAAUl2D,KAAKu2D,SAElGv2D,KAAKu2D,OAAOV,mBACZ71D,KAAKy2D,6BAA6BL,UAAU,EAAG/B,GAAkC,UAE9Er0D,KAAKy2D,4BAChB,EAEJ,MAAMM,EACF,wBAAOC,CAAkBC,EAAQ9D,EAAW5pD,EAAMiqD,EAAaQ,GAC3D,OAAOiD,EAAOC,aAAcl5B,GACjB,IAAI+1B,GAAYZ,EAAWn1B,EAAIz0B,EAAMiqD,EAAaQ,GAEjE,CACA,wBAAOmD,CAAkBC,EAAMH,EAAQrF,GACnC,OAAKwF,EAAKp5B,IACNi5B,EAAOC,aAAcl5B,IAEjB,GADAo5B,EAAKp5B,GAAKA,EACNo5B,EAAK5L,MACL,OAAO,IAAIiJ,GAAU2C,EAAKC,wBAAyBD,EAAKp5B,GAAIo5B,EAAK7tD,KAAM6tD,EAAK5L,MAAOuL,EAAYO,iBAAiBF,EAAKzC,SAAUsC,EAAQrF,IAE3I,UAAWwF,EAAKxB,MAAU,IAAa,CAC/BwB,EAAKxF,aACLA,EAAa1E,GAAa,CAAC,EAAG0E,EAAYwF,EAAKxF,aAEnD,IAAII,EAAWoF,EAAKpF,SACpB,cAAWA,EAAa,KAAeoF,EAAKhF,UACxCJ,EAAW,CAAC,CAAEI,QAASgF,EAAKhF,WAEzB,IAAI6C,GAAgBmC,EAAKC,wBAAyBD,EAAKp5B,GAAIo5B,EAAK7tD,KAAM6tD,EAAK5D,YAAauD,EAAYQ,iBAAiBvF,EAAUiF,EAAQrF,GAClJ,CACA,OAAIwF,EAAKI,MACE,IAAInB,GAAee,EAAKC,wBAAyBD,EAAKp5B,GAAIo5B,EAAK7tD,KAAM6tD,EAAK5D,YAAa4D,EAAKxB,MAAOmB,EAAYO,iBAAiBF,EAAK7B,eAAiB6B,EAAKzC,SAAUsC,EAAQrF,GAAawF,EAAKI,MAAOT,EAAYO,iBAAiBF,EAAKd,eAAiBc,EAAKzC,SAAUsC,EAAQrF,GAAamF,EAAYQ,iBAAiBH,EAAKpF,SAAUiF,EAAQrF,IAErV,IAAIyD,GAAa+B,EAAKC,wBAAyBD,EAAKp5B,GAAIo5B,EAAK7tD,KAAM6tD,EAAK5D,YAAa4D,EAAKxB,MAAOmB,EAAYO,iBAAiBF,EAAK7B,eAAiB6B,EAAKzC,SAAUsC,EAAQrF,GAAawF,EAAK51B,IAAKu1B,EAAYO,iBAAiBF,EAAK1B,aAAe0B,EAAKzC,SAAUsC,EAAQrF,GAAawF,EAAKzB,oBAAqBoB,EAAYQ,iBAAiBH,EAAKpF,SAAUiF,EAAQrF,GAAW,GAGxXwF,EAAKp5B,EAChB,CACA,uBAAOs5B,CAAiB3C,EAAUsC,EAAQrF,GACtC,IAAI9E,EAAI,GACR,GAAI6H,EAAU,CAEV,IAAI8C,EAAmB,EACvB,UAAWC,KAAa/C,EAAU,CAC9B,GAAkB,4BAAd+C,EACA,SAEJ,MAAMC,EAAmB9zC,SAAS6zC,EAAW,IACzCC,EAAmBF,IACnBA,EAAmBE,EAE3B,CAEA,QAASnxC,EAAI,EAAGA,GAAKixC,EAAkBjxC,IACnCsmC,EAAEtmC,GAAK,KAGX,UAAWkxC,KAAa/C,EAAU,CAC9B,GAAkB,4BAAd+C,EACA,SAEJ,MAAMC,EAAmB9zC,SAAS6zC,EAAW,IAC7C,IAAI1D,EAA+B,EAC/BW,EAAS+C,GAAW1F,WACpBgC,EAA+B+C,EAAYI,kBAAkBxC,EAAS+C,GAAYT,EAAQrF,IAE9F9E,EAAE6K,GAAoBZ,EAAYC,kBAAkBC,EAAQtC,EAAS+C,GAAWL,wBAAyB1C,EAAS+C,GAAWnuD,KAAMorD,EAAS+C,GAAWlE,YAAaQ,EACxK,CACJ,CACA,OAAOlH,CACX,CACA,uBAAOyK,CAAiBvF,EAAUiF,EAAQrF,GACtC,IAAI9E,EAAI,GACR,GAAIkF,EACA,QAASxrC,EAAI,EAAGumC,EAAMiF,EAAS/tD,OAAQuiB,EAAIumC,EAAKvmC,IAAK,CACjD,MAAM2uC,EAAUnD,EAASxrC,GACzB,IAAIoxC,GAAS,EACb,GAAIzC,EAAQ/C,QAAS,CACjB,MAAM1B,EAAY2B,GAAa8C,EAAQ/C,SACvC,OAAQ1B,EAAU4B,MACd,KAAK,EACL,KAAK,EACDsF,EAASb,EAAYI,kBAAkBvF,EAAWuD,EAAQ/C,SAAU6E,EAAQrF,GAC5E,MACJ,KAAK,EAED,IAAIiG,EAAoBjG,EAAWlB,EAAUN,UACzCyH,IACAD,EAASb,EAAYI,kBAAkBU,EAAmBZ,EAAQrF,IAEtE,MACJ,KAAK,EACL,KAAK,EACD,MACMkG,EAA4C,IAAnBpH,EAAU4B,KACnC5B,EAAUN,SACV,KAEA2H,EAAkBd,EAAOe,mBALHtH,EAAUT,UAKiC2B,GACvE,GAAImG,EACA,GAAID,EAAwB,CACxB,IAAIG,EAAuBF,EAAgBnG,WAAWkG,GAClDG,IACAL,EAASb,EAAYI,kBAAkBc,EAAsBhB,EAAQc,EAAgBnG,YAE7F,MAEIgG,EAASb,EAAYI,kBAAkBY,EAAgBnG,WAAWsG,MAAOjB,EAAQc,EAAgBnG,YAKrH,MAEIgG,EAASb,EAAYI,kBAAkBhC,EAAS8B,EAAQrF,GAE5D,IAAe,IAAXgG,EAAe,CACf,MAAM1F,EAAO+E,EAAO7B,QAAQwC,GAC5B,IAAIO,GAAW,EAMf,IALIjG,aAAgB+C,IAAmB/C,aAAgBmD,IAAgBnD,aAAgBmE,KAC/EnE,EAAKgD,oBAA+C,IAAzBhD,EAAKF,SAAS/tD,SACzCk0D,GAAW,GAGfA,EAEA,SAEJrL,EAAErlD,KAAKmwD,EACX,CACJ,CAEJ,MAAO,CACH5F,SAAUlF,EACVoI,oBAAsBlD,EAAWA,EAAS/tD,OAAS,KAAO6oD,EAAE7oD,OAEpE,EAEJ,MAAM4wD,GACF5pD,OACA2sD,OACAQ,UACAvC,kBACAwC,aACAx4D,YAAYy4D,EAAcV,GACtB,GAAIU,EAAc,CACd,MAAMvL,EAAMuL,EAAar0D,OACzB,IAAIs0D,EAAgB,EAChBr3C,EAAS,GACTk3C,GAAY,EAChB,QAASlmB,EAAM,EAAGA,EAAM6a,EAAK7a,IAEzB,GAAW,OADAomB,EAAa3M,OAAOzZ,IAEvBA,EAAM,EAAI6a,EAAK,CACf,MAAMyL,EAASF,EAAa3M,OAAOzZ,EAAM,GAC1B,MAAXsmB,GACAt3C,EAAOzZ,KAAK6wD,EAAalU,UAAUmU,EAAermB,IAClDhxB,EAAOzZ,KAAK,oBACZ8wD,EAAgBrmB,EAAM,IAEN,MAAXsmB,GAA6B,MAAXA,KACvBJ,GAAY,GAEhBlmB,GACJ,CAGRlyC,KAAKo4D,UAAYA,EACK,IAAlBG,EAEAv4D,KAAKiL,OAASqtD,GAGdp3C,EAAOzZ,KAAK6wD,EAAalU,UAAUmU,EAAexL,IAClD/sD,KAAKiL,OAASiW,EAAOu3C,KAAK,IAElC,MAEIz4D,KAAKo4D,WAAY,EACjBp4D,KAAKiL,OAASqtD,EAGdt4D,KAAKq4D,aADLr4D,KAAKo4D,UACep4D,KAAK04D,oBAGL,KAExB14D,KAAK43D,OAASA,EACd53D,KAAK61D,kBAAoB/C,GAAoBvwD,KAAKvC,KAAKiL,OAE3D,CACAirD,QACI,OAAO,IAAIrB,GAAa70D,KAAKiL,OAAQjL,KAAK43D,OAC9C,CACAxB,UAAUuC,GACF34D,KAAKiL,SAAW0tD,IAGpB34D,KAAKiL,OAAS0tD,EACV34D,KAAKo4D,YACLp4D,KAAKq4D,aAAer4D,KAAK04D,qBAEjC,CACAzC,sBAAsBpC,EAAUzE,GAC5B,IAAIwJ,EAAiBxJ,EAAe/qD,IAAK2U,GAC9B66C,EAASzP,UAAUprC,EAAQyoB,MAAOzoB,EAAQwoB,MAErDuxB,UAAqB9D,UAAY,EAC1BjvD,KAAKiL,OAAO6jB,QAAQikC,GAAsB,CAACvH,EAAOqN,IAC9C/I,GAAuB8I,EAAe/0C,SAASg1C,EAAI,MAAQ,IAE1E,CACAH,oBACI,IAIIxmB,EAAK6a,EAAK+L,EAAIN,EAJdO,EAAe,GACfC,EAAe,GACfC,EAAe,GACfC,EAAe,GAEnB,IAAKhnB,EAAM,EAAG6a,EAAM/sD,KAAKiL,OAAOhH,OAAQiuC,EAAM6a,EAAK7a,IAC/C4mB,EAAK94D,KAAKiL,OAAO0gD,OAAOzZ,GACxB6mB,EAAa7mB,GAAO4mB,EACpBE,EAAa9mB,GAAO4mB,EACpBG,EAAa/mB,GAAO4mB,EACpBI,EAAahnB,GAAO4mB,EACT,OAAPA,GACI5mB,EAAM,EAAI6a,IACVyL,EAASx4D,KAAKiL,OAAO0gD,OAAOzZ,EAAM,GACnB,MAAXsmB,GACAO,EAAa7mB,EAAM,GAAK,SACxB8mB,EAAa9mB,EAAM,GAAK,SACxB+mB,EAAa/mB,EAAM,GAAK,IACxBgnB,EAAahnB,EAAM,GAAK,KAER,MAAXsmB,GACLO,EAAa7mB,EAAM,GAAK,SACxB8mB,EAAa9mB,EAAM,GAAK,IACxB+mB,EAAa/mB,EAAM,GAAK,SACxBgnB,EAAahnB,EAAM,GAAK,MAGxB6mB,EAAa7mB,EAAM,GAAKsmB,EACxBQ,EAAa9mB,EAAM,GAAKsmB,EACxBS,EAAa/mB,EAAM,GAAKsmB,EACxBU,EAAahnB,EAAM,GAAKsmB,GAE5BtmB,KAIZ,MAAO,CACHinB,MAAOJ,EAAaN,KAAK,IACzBW,MAAOJ,EAAaP,KAAK,IACzBY,MAAOJ,EAAaR,KAAK,IACzBa,MAAOJ,EAAaT,KAAK,IAEjC,CACAc,eAAehF,EAAQC,GACnB,OAAKx0D,KAAKo4D,WAAcp4D,KAAKq4D,aAGzB9D,EACIC,EACOx0D,KAAKq4D,aAAaiB,MAGlBt5D,KAAKq4D,aAAagB,MAIzB7E,EACOx0D,KAAKq4D,aAAae,MAGlBp5D,KAAKq4D,aAAac,MAftBn5D,KAAKiL,MAkBpB,EAEJ,MAAM+pD,GACFwE,OACAC,YACAC,QACArB,aACAx4D,cACIG,KAAKw5D,OAAS,GACdx5D,KAAKy5D,aAAc,EACnBz5D,KAAK05D,QAAU,KACf15D,KAAKq4D,aAAe,CAChBc,MAAO,KACPC,MAAO,KACPC,MAAO,KACPC,MAAO,KAEf,CACA30B,UACI3kC,KAAK25D,gBACT,CACAA,iBACQ35D,KAAK05D,UACL15D,KAAK05D,QAAQ/0B,UACb3kC,KAAK05D,QAAU,MAEf15D,KAAKq4D,aAAac,QAClBn5D,KAAKq4D,aAAac,MAAMx0B,UACxB3kC,KAAKq4D,aAAac,MAAQ,MAE1Bn5D,KAAKq4D,aAAae,QAClBp5D,KAAKq4D,aAAae,MAAMz0B,UACxB3kC,KAAKq4D,aAAae,MAAQ,MAE1Bp5D,KAAKq4D,aAAagB,QAClBr5D,KAAKq4D,aAAagB,MAAM10B,UACxB3kC,KAAKq4D,aAAagB,MAAQ,MAE1Br5D,KAAKq4D,aAAaiB,QAClBt5D,KAAKq4D,aAAaiB,MAAM30B,UACxB3kC,KAAKq4D,aAAaiB,MAAQ,KAElC,CACA7xD,KAAKmyD,GACD55D,KAAKw5D,OAAO/xD,KAAKmyD,GACjB55D,KAAKy5D,YAAcz5D,KAAKy5D,aAAeG,EAAKxB,SAChD,CACAjC,QAAQyD,GACJ55D,KAAKw5D,OAAOrD,QAAQyD,GACpB55D,KAAKy5D,YAAcz5D,KAAKy5D,aAAeG,EAAKxB,SAChD,CACAn0D,SACI,OAAOjE,KAAKw5D,OAAOv1D,MACvB,CACAmyD,UAAU9iD,EAAOqlD,GACT34D,KAAKw5D,OAAOlmD,GAAOrI,SAAW0tD,IAE9B34D,KAAK25D,iBACL35D,KAAKw5D,OAAOlmD,GAAO8iD,UAAUuC,GAErC,CACAvE,QAAQyF,GACJ,IAAK75D,KAAK05D,QAAS,CACf,IAAII,EAAU95D,KAAKw5D,OAAOn1D,IAAIma,GAAKA,EAAEvT,QACrCjL,KAAK05D,QAAU,IAAIK,GAAaF,EAASC,EAAS95D,KAAKw5D,OAAOn1D,IAAIma,GAAKA,EAAEo5C,QAC7E,CACA,OAAO53D,KAAK05D,OAChB,CACApF,UAAUuF,EAAStF,EAAQC,GACvB,OAAKx0D,KAAKy5D,YAIFlF,EACIC,GACKx0D,KAAKq4D,aAAaiB,QACnBt5D,KAAKq4D,aAAaiB,MAAQt5D,KAAKg6D,gBAAgBH,EAAStF,EAAQC,IAE7Dx0D,KAAKq4D,aAAaiB,QAGpBt5D,KAAKq4D,aAAagB,QACnBr5D,KAAKq4D,aAAagB,MAAQr5D,KAAKg6D,gBAAgBH,EAAStF,EAAQC,IAE7Dx0D,KAAKq4D,aAAagB,OAIzB7E,GACKx0D,KAAKq4D,aAAae,QACnBp5D,KAAKq4D,aAAae,MAAQp5D,KAAKg6D,gBAAgBH,EAAStF,EAAQC,IAE7Dx0D,KAAKq4D,aAAae,QAGpBp5D,KAAKq4D,aAAac,QACnBn5D,KAAKq4D,aAAac,MAAQn5D,KAAKg6D,gBAAgBH,EAAStF,EAAQC,IAE7Dx0D,KAAKq4D,aAAac,OA5B1Bn5D,KAAKo0D,QAAQyF,EAgC5B,CACAG,gBAAgBH,EAAStF,EAAQC,GAC7B,IAAIsF,EAAU95D,KAAKw5D,OAAOn1D,IAAIma,GAAKA,EAAE+6C,eAAehF,EAAQC,IAC5D,OAAO,IAAIuF,GAAaF,EAASC,EAAS95D,KAAKw5D,OAAOn1D,IAAIma,GAAKA,EAAEo5C,QACrE,EAEJ,MAAMmC,GACFD,QACA7H,MACAgI,QACAp6D,YAAYg6D,EAASC,EAAS7H,GAC1BjyD,KAAK85D,QAAUA,EACf95D,KAAKiyD,MAAQA,EACbjyD,KAAKi6D,QAAUJ,EAAQK,kBAAkBJ,EAC7C,CACAn1B,UACwC,mBAAzB3kC,KAAKi6D,QAAQt1B,SACpB3kC,KAAKi6D,QAAQt1B,SAErB,CACA5qB,WACI,MAAM+yC,EAAI,GACV,QAAStmC,EAAI,EAAGumC,EAAM/sD,KAAKiyD,MAAMhuD,OAAQuiB,EAAIumC,EAAKvmC,IAC9CsmC,EAAErlD,KAAK,QAAUzH,KAAKiyD,MAAMzrC,GAAK,KAAOxmB,KAAK85D,QAAQtzC,IAEzD,OAAOsmC,EAAE2L,KAAK,KAClB,CACA0B,kBAAkBC,EAAQC,EAAelmD,GACrC,MAAM5O,EAASvF,KAAKi6D,QAAQE,kBAAkBC,EAAQC,EAAelmD,GACrE,OAAK5O,EAGE,CACHqyD,OAAQ53D,KAAKiyD,MAAM1sD,EAAO+N,OAC1B87C,eAAgB7pD,EAAO6pD,gBAJhB,IAMf,EAMJ,MAAMkL,GACFC,UACAC,UACAC,MACA,yBAAOC,CAAmBzvD,EAAQ0vD,GAC9B,OAAO36D,KAAK46D,sBAuHpB,SAASC,GAAW5vD,GAChB,IAAKA,EACD,MAAO,GAEX,IAAKA,EAAO6vD,WAAal1D,MAAMgB,QAAQqE,EAAO6vD,UAC1C,MAAO,GAEX,IAAIA,EAAW7vD,EAAO6vD,SAClBv1D,EAAS,GAAIw1D,EAAY,EAC7B,QAASv0C,EAAI,EAAGumC,EAAM+N,EAAS72D,OAAQuiB,EAAIumC,EAAKvmC,IAAK,CACjD,IAIIw0C,EAJAC,EAAQH,EAASt0C,GACrB,IAAKy0C,EAAMH,SACP,SAGJ,GAA2B,iBAAhBG,EAAMC,MAAoB,CACjC,IAAIC,EAASF,EAAMC,MAEnBC,EAASA,EAAOrsC,QAAQ,QAAS,IAEjCqsC,EAASA,EAAOrsC,QAAQ,QAAS,IACjCksC,EAASG,EAAOnrD,MAAM,IAC1B,MAEIgrD,EADKp1D,MAAMgB,QAAQq0D,EAAMC,OAChBD,EAAMC,MAGN,CAAC,IAEd,IAAIlN,GAAY,EAChB,GAAwC,iBAA7BiN,EAAMH,SAAS9M,UAAwB,CAC9CA,EAAY,EACZ,IAAIoN,EAAWH,EAAMH,SAAS9M,UAAUh+C,MAAM,KAC9C,QAASqrD,EAAI,EAAGC,EAAOF,EAASn3D,OAAQo3D,EAAIC,EAAMD,IAE9C,OADcD,EAASC,IAEnB,IAAK,SACDrN,GAAwB,EACxB,MACJ,IAAK,OACDA,GAAwB,EACxB,MACJ,IAAK,YACDA,GAAwB,EACxB,MACJ,IAAK,gBACDA,GAAwB,EAIxC,CACA,IAAIE,EAAa,KACwB,iBAA9B+M,EAAMH,SAAS5M,YAA2B0B,GAAgBqL,EAAMH,SAAS5M,cAChFA,EAAa+M,EAAMH,SAAS5M,YAEhC,IAAIE,EAAa,KACwB,iBAA9B6M,EAAMH,SAAS1M,YAA2BwB,GAAgBqL,EAAMH,SAAS1M,cAChFA,EAAa6M,EAAMH,SAAS1M,YAEhC,QAASiN,EAAI,EAAGC,EAAON,EAAO/2D,OAAQo3D,EAAIC,EAAMD,IAAK,CAEjD,IAAID,EADSJ,EAAOK,GAAG15C,OACD3R,MAAM,KACxBkrD,EAAQE,EAASA,EAASn3D,OAAS,GACnCs3D,EAAe,KACfH,EAASn3D,OAAS,IAClBs3D,EAAeH,EAASrqD,MAAM,EAAGqqD,EAASn3D,OAAS,GACnDs3D,EAAaC,WAEjBj2D,EAAOw1D,KAAe,IAAIU,GAAgBP,EAAOK,EAAc/0C,EAAGwnC,EAAWE,EAAYE,EAC7F,CACJ,CACA,OAAO7oD,CACX,CA/L0Cs1D,CAAW5vD,GAAS0vD,EAC1D,CACA,4BAAOC,CAAsB3vD,EAAQ0vD,GACjC,OAgNR,SAASe,GAAwBC,EAAkBpB,GAE/CoB,EAAiBC,KAAK,CAACzkB,EAAGC,KACtB,IAAI0V,EAAI0C,GAAOrY,EAAE+jB,MAAO9jB,EAAE8jB,OAK1B,OAJU,IAANpO,IAGJA,EAAI2C,GAAUtY,EAAEokB,aAAcnkB,EAAEmkB,cACtB,IAANzO,GACOA,EAEJ3V,EAAE7jC,MAAQ8jC,EAAE9jC,QAGvB,IAAIuoD,EAAmB,EACnBC,EAAoB,UACpBC,EAAoB,UACxB,KAAOJ,EAAiB13D,QAAU,GAAmC,KAA9B03D,EAAiB,GAAGT,OAAc,CACrE,IAAIc,EAAmBL,EAAiB99B,SACL,IAA/Bm+B,EAAiBhO,YACjB6N,EAAmBG,EAAiBhO,WAEJ,OAAhCgO,EAAiB9N,aACjB4N,EAAoBE,EAAiB9N,YAEL,OAAhC8N,EAAiB5N,aACjB2N,EAAoBC,EAAiB5N,WAE7C,CACA,IAAIuM,EAAW,IAAIsB,GAAS1B,GACxBzgC,EAAW,IAAIoiC,GAAgBL,EAAkBlB,EAASwB,MAAML,GAAoBnB,EAASwB,MAAMJ,IACnG5rD,EAAO,IAAIisD,GAAiB,IAAIC,GAAqB,EAAG,MAAM,EAA2B,EAAG,GAAI,IACpG,QAAS71C,EAAI,EAAGumC,EAAM4O,EAAiB13D,OAAQuiB,EAAIumC,EAAKvmC,IAAK,CACzD,IAAI0rC,EAAOyJ,EAAiBn1C,GAC5BrW,EAAKmsD,OAAO,EAAGpK,EAAKgJ,MAAOhJ,EAAKqJ,aAAcrJ,EAAKlE,UAAW2M,EAASwB,MAAMjK,EAAKhE,YAAayM,EAASwB,MAAMjK,EAAK9D,YACvH,CACA,OAAO,IAAIkM,GAAMK,EAAU7gC,EAAU3pB,EACzC,CArPeurD,CAAwBzwD,EAAQ0vD,EAC3C,CACA4B,iBAAmB,IAAIxM,GAAUE,GAAcjwD,KAAKy6D,MAAMjP,MAAMyE,IAChEpwD,YAAY06D,EAAWC,EAAWC,GAC9Bz6D,KAAKu6D,UAAYA,EACjBv6D,KAAKw6D,UAAYA,EACjBx6D,KAAKy6D,MAAQA,CACjB,CACA+B,cACI,OAAOx8D,KAAKu6D,UAAUiC,aAC1B,CACAC,cACI,OAAOz8D,KAAKw6D,SAChB,CACAhP,MAAMkR,GACF,GAAkB,OAAdA,EACA,OAAO18D,KAAKw6D,UAEhB,MAEMmC,EADuB38D,KAAKu8D,iBAAiBzsD,IADjC4sD,EAAUzM,WAEejP,KAAMx5C,GA8DzD,SAASo1D,GAA8BF,EAAWnB,GAC9C,GAAqB,OAAjBA,EACA,OAAO,EAEX,IAAIjoD,EAAQ,EACRupD,EAAetB,EAAajoD,GAChC,KAAOopD,GAAW,CACd,GAAII,GAAcJ,EAAUzM,UAAW4M,GAAe,CAElD,GADAvpD,IACIA,IAAUioD,EAAat3D,OACvB,OAAO,EAEX44D,EAAetB,EAAajoD,EAChC,CACAopD,EAAYA,EAAU/vD,MAC1B,CACA,OAAO,CACX,CA/E+DiwD,CAA8BF,EAAU/vD,OAAQnF,EAAE+zD,eACzG,OAAKoB,EAGE,IAAIT,GAAgBS,EAAc3O,UAAW2O,EAAczO,WAAYyO,EAAcvO,YAFjF,IAGf,EAEJ,MAAM2O,GACFpwD,OACAsjD,UACA,WAAOxoD,CAAKzI,EAAMg+D,GACd,UAAWzzD,KAAQyzD,EACfh+D,EAAO,IAAI+9D,GAAW/9D,EAAMuK,GAEhC,OAAOvK,CACX,CACA,WAAOyE,IAAQ23D,GACX,IAAI71D,EAAS,KACb,QAASihB,EAAI,EAAGA,EAAI40C,EAASn3D,OAAQuiB,IACjCjhB,EAAS,IAAIw3D,GAAWx3D,EAAQ61D,EAAS50C,IAE7C,OAAOjhB,CACX,CACA1F,YAAY8M,EAAQsjD,GAChBjwD,KAAK2M,OAASA,EACd3M,KAAKiwD,UAAYA,CACrB,CACAxoD,KAAKwoD,GACD,OAAO,IAAI8M,GAAW/8D,KAAMiwD,EAChC,CACAgN,cACI,IAAIrD,EAAO55D,KACX,MAAMuF,EAAS,GACf,KAAOq0D,GACHr0D,EAAOkC,KAAKmyD,EAAK3J,WACjB2J,EAAOA,EAAKjtD,OAEhBpH,SAAOi2D,UACAj2D,CACX,CACAwU,WACI,OAAO/Z,KAAKi9D,cAAcxE,KAAK,IACnC,CACAyE,QAAQC,GACJ,OAAIn9D,OAASm9D,GAGO,OAAhBn9D,KAAK2M,QAGF3M,KAAK2M,OAAOuwD,QAAQC,EAC/B,CACAC,sBAAsBC,GAClB,MAAM93D,EAAS,GACf,IAAIq0D,EAAO55D,KACX,KAAO45D,GAAQA,IAASyD,GACpB93D,EAAOkC,KAAKmyD,EAAK3J,WACjB2J,EAAOA,EAAKjtD,OAEhB,OAAOitD,IAASyD,EAAO93D,EAAOi2D,eAAYp1D,CAC9C,EAoBJ,SAAS02D,GAAc7M,EAAW4M,GAC9B,OAAOA,IAAiB5M,GAAcA,EAAUqN,WAAWT,IAAoD,MAAnC5M,EAAU4M,EAAa54D,OACvG,CACA,MAAMi4D,GACFlO,UACAuP,aACAC,aACA39D,YAAYmuD,EAAWuP,EAAcC,GACjCx9D,KAAKguD,UAAYA,EACjBhuD,KAAKu9D,aAAeA,EACpBv9D,KAAKw9D,aAAeA,CACxB,EA8EJ,MAAM/B,GACFP,MACAK,aACAjoD,MACA06C,UACAE,WACAE,WACAvuD,YAAYq7D,EAAOK,EAAcjoD,EAAO06C,EAAWE,EAAYE,GAC3DpuD,KAAKk7D,MAAQA,EACbl7D,KAAKu7D,aAAeA,EACpBv7D,KAAKsT,MAAQA,EACbtT,KAAKguD,UAAYA,EACjBhuD,KAAKkuD,WAAaA,EAClBluD,KAAKouD,WAAaA,CACtB,EA2CJ,MAAM6N,GACFwB,UACAC,aACAC,UACAC,UACA/9D,YAAY06D,GAIR,GAHAv6D,KAAK09D,aAAe,EACpB19D,KAAK29D,UAAY,GACjB39D,KAAK49D,UAAY75D,OAAOwY,OAAO,MAC3B3W,MAAMgB,QAAQ2zD,GAAY,CAC1Bv6D,KAAKy9D,WAAY,EACjB,QAASj3C,EAAI,EAAGumC,EAAMwN,EAAUt2D,OAAQuiB,EAAIumC,EAAKvmC,IAC7CxmB,KAAK49D,UAAUrD,EAAU/zC,IAAMA,EAC/BxmB,KAAK29D,UAAUn3C,GAAK+zC,EAAU/zC,EAEtC,MAEIxmB,KAAKy9D,WAAY,CAEzB,CACAtB,MAAMxoC,GACF,GAAc,OAAVA,EACA,OAAO,EAEXA,EAAQA,EAAM47B,cACd,IAAIjvD,EAAQN,KAAK49D,UAAUjqC,GAC3B,GAAIrzB,EACA,OAAOA,EAEX,GAAIN,KAAKy9D,UACL,MAAM,IAAIjM,MAAM,gCAAgC79B,KAEpDrzB,WAAUN,KAAK09D,aACf19D,KAAK49D,UAAUjqC,GAASrzB,EACxBN,KAAK29D,UAAUr9D,GAASqzB,EACjBrzB,CACX,CACAk8D,cACI,OAAOx8D,KAAK29D,UAAU5sD,MAAM,EAChC,EAEJ,MAAMsrD,GACFwB,WACAtC,aACAvN,UACAE,WACAE,WACAvuD,YAAYg+D,EAAYtC,EAAcvN,EAAWE,EAAYE,GACzDpuD,KAAK69D,WAAaA,EAClB79D,KAAKu7D,aAAeA,EACpBv7D,KAAKguD,UAAYA,EACjBhuD,KAAKkuD,WAAaA,EAClBluD,KAAKouD,WAAaA,CACtB,CACA8H,QACI,OAAO,IAAImG,GAAqBr8D,KAAK69D,WAAY79D,KAAKu7D,aAAcv7D,KAAKguD,UAAWhuD,KAAKkuD,WAAYluD,KAAKouD,WAC9G,CACA,eAAO0P,CAASjR,GACZ,IAAIC,EAAI,GACR,QAAStmC,EAAI,EAAGumC,EAAMF,EAAI5oD,OAAQuiB,EAAIumC,EAAKvmC,IACvCsmC,EAAEtmC,GAAKqmC,EAAIrmC,GAAG0vC,QAElB,OAAOpJ,CACX,CACAiR,gBAAgBF,EAAY7P,EAAWE,EAAYE,GAC3CpuD,KAAK69D,WAAaA,EAClBp/C,QAAQmtC,IAAI,wBAGZ5rD,KAAK69D,WAAaA,GAGJ,IAAd7P,IACAhuD,KAAKguD,UAAYA,GAEF,IAAfE,IACAluD,KAAKkuD,WAAaA,GAEH,IAAfE,IACApuD,KAAKouD,WAAaA,EAE1B,EAEJ,MAAMgO,GACF4B,UACAC,UACAC,uBACAr+D,YAAYm+D,EAAWG,EAAwB,GAAIF,EAAY,CAAC,GAC5Dj+D,KAAKg+D,UAAYA,EACjBh+D,KAAKi+D,UAAYA,EACjBj+D,KAAKk+D,uBAAyBC,CAClC,CACA,yBAAOC,CAAmBvR,GACtB,OAAmB,IAAfA,EAAI5oD,QAGR4oD,EAAI+O,KAAK57D,KAAKq+D,mBACPxR,CACX,CACA,wBAAOwR,CAAkBlnB,EAAGC,GACxB,GAAID,EAAE0mB,aAAezmB,EAAEymB,WAAY,CAC/B,MAAMS,EAAgBnnB,EAAEokB,aAClBgD,EAAgBnnB,EAAEmkB,aACxB,IAAIiD,EAAqC,OAAlBF,EAAyB,EAAIA,EAAcr6D,OAC9Dw6D,EAAqC,OAAlBF,EAAyB,EAAIA,EAAct6D,OAClE,GAAIu6D,IAAqBC,EACrB,QAASj4C,EAAI,EAAGA,EAAIg4C,EAAkBh4C,IAAK,CACvC,MAAMk4C,EAAOJ,EAAc93C,GAAGviB,OACxB06D,EAAOJ,EAAc/3C,GAAGviB,OAC9B,GAAIy6D,IAASC,EACT,OAAOA,EAAOD,CAEtB,CAEJ,OAAOD,EAAmBD,CAC9B,CACA,OAAOpnB,EAAEymB,WAAa1mB,EAAE0mB,UAC5B,CACArS,MAAM0P,GACF,GAAc,KAAVA,EACA,OAAOkB,GAAiBgC,mBAAmB,GAAGn+C,OAAOjgB,KAAKg+D,WAAW/9C,OAAOjgB,KAAKk+D,yBAErF,IACI9/C,EACAwgD,EAFAC,EAAW3D,EAAM3nD,QAAQ,KAW7B,OARiB,IAAbsrD,GACAzgD,EAAO88C,EACP0D,EAAO,KAGPxgD,EAAO88C,EAAM9W,UAAU,EAAGya,GAC1BD,EAAO1D,EAAM9W,UAAUya,EAAW,IAElC7+D,KAAKi+D,UAAUjoD,eAAeoI,GACvBpe,KAAKi+D,UAAU7/C,GAAMotC,MAAMoT,GAE/BxC,GAAiBgC,mBAAmB,GAAGn+C,OAAOjgB,KAAKg+D,WAAW/9C,OAAOjgB,KAAKk+D,wBACrF,CACA5B,OAAOuB,EAAY3C,EAAOK,EAAcvN,EAAWE,EAAYE,GAC3D,GAAc,KAAV8M,EAEA,YADAl7D,KAAK8+D,cAAcjB,EAAYtC,EAAcvN,EAAWE,EAAYE,GAGxE,IACIhwC,EACAwgD,EASA1zB,EAXA2zB,EAAW3D,EAAM3nD,QAAQ,MAGZ,IAAbsrD,GACAzgD,EAAO88C,EACP0D,EAAO,KAGPxgD,EAAO88C,EAAM9W,UAAU,EAAGya,GAC1BD,EAAO1D,EAAM9W,UAAUya,EAAW,IAGlC7+D,KAAKi+D,UAAUjoD,eAAeoI,GAC9B8sB,EAAQlrC,KAAKi+D,UAAU7/C,IAGvB8sB,EAAQ,IAAIkxB,GAAiBp8D,KAAKg+D,UAAU9H,QAASmG,GAAqByB,SAAS99D,KAAKk+D,yBACxFl+D,KAAKi+D,UAAU7/C,GAAQ8sB,GAE3BA,EAAMoxB,OAAOuB,EAAa,EAAGe,EAAMrD,EAAcvN,EAAWE,EAAYE,EAC5E,CACA0Q,cAAcjB,EAAYtC,EAAcvN,EAAWE,EAAYE,GAC3D,GAAqB,OAAjBmN,EAAJ,CAMA,QAAS/0C,EAAI,EAAGumC,EAAM/sD,KAAKk+D,uBAAuBj6D,OAAQuiB,EAAIumC,EAAKvmC,IAAK,CACpE,IAAI0rC,EAAOlyD,KAAKk+D,uBAAuB13C,GACvC,GAAmD,IAA/CipC,GAAUyC,EAAKqJ,aAAcA,GAG7B,YADArJ,EAAK6L,gBAAgBF,EAAY7P,EAAWE,EAAYE,EAGhE,EAGkB,IAAdJ,IACAA,EAAYhuD,KAAKg+D,UAAUhQ,WAEZ,IAAfE,IACAA,EAAaluD,KAAKg+D,UAAU9P,YAEb,IAAfE,IACAA,EAAapuD,KAAKg+D,UAAU5P,YAEhCpuD,KAAKk+D,uBAAuBz2D,KAAK,IAAI40D,GAAqBwB,EAAYtC,EAAcvN,EAAWE,EAAYE,GArB3G,MAFIpuD,KAAKg+D,UAAUD,gBAAgBF,EAAY7P,EAAWE,EAAYE,EAwB1E,EAMJ,MAAM2Q,GACFnR,WACAE,UACAjuD,YAAY+tD,EAAYE,GACpB9tD,KAAK4tD,WAAaA,EAClB5tD,KAAK8tD,UAAYA,CACrB,EAEJ,MAAMkR,GACFC,mBACAC,0BACAr/D,YAAYs/D,EAAmBC,GAC3Bp/D,KAAKi/D,mBAAqB,IAAIF,GAAqBI,EAAmB,GACtEn/D,KAAKk/D,0BAA4B,IAAIG,GAAat7D,OAAOu7D,QAAQF,GAAqB,CAAC,GAC3F,CACAG,uBACI,OAAOv/D,KAAKi/D,kBAChB,CACAO,wBAAwBvP,GACpB,OAAkB,OAAdA,EACO+O,GAA6BS,qBAEjCz/D,KAAK0/D,yBAAyB5vD,IAAImgD,EAC7C,CACA0P,4BAA8B,IAAIZ,GAAqB,EAAG,GAC1DW,yBAA2B,IAAI3P,GAAUE,IACrC,MAAMrC,EAAa5tD,KAAK4/D,iBAAiB3P,GACnC4P,EAAoB7/D,KAAK8/D,qBAAqB7P,GACpD,OAAO,IAAI8O,GAAqBnR,EAAYiS,EAAiB,GAMjED,iBAAiB1E,GACb,OAAOl7D,KAAKk/D,0BAA0B1T,MAAM0P,IAAU,CAC1D,CACA4E,qBAAqB7P,GACjB,MAAMzwD,EAAIywD,EAAUzE,MAAMwT,GAA6Be,4BACvD,IAAKvgE,EACD,OAAO,EAEX,OAAQA,EAAE,IACN,IAAK,UACD,OAAO,EACX,IAAK,SACD,OAAO,EACX,IAAK,QACD,OAAO,EACX,IAAK,gBACD,OAAO,EAEf,MAAM,IAAIgyD,MAAM,4CACpB,CACAmO,kCAAoC,4CAExC,MAAMN,GACF15D,OACAq6D,aACAngE,YAAY8F,GACR,GAAsB,IAAlBA,EAAO1B,OACPjE,KAAK2F,OAAS,KACd3F,KAAKggE,aAAe,SAEnB,CACDhgE,KAAK2F,OAAS,IAAI0Z,IAAI1Z,GAEtB,MAAMs6D,EAAgBt6D,EAAOtB,IAAI,EAAE4rD,EAAW3vD,KAAWwvD,GAAuBG,IAChFgQ,EAAcrE,OACdqE,EAAczE,UACdx7D,KAAKggE,aAAe,IAAIE,OAAO,MAAMD,EAAcxH,KAAK,kBAAmB,GAC/E,CACJ,CACAjN,MAAM0P,GACF,IAAKl7D,KAAKggE,aACN,OAEJ,MAAMxgE,EAAI07D,EAAM1P,MAAMxrD,KAAKggE,cAC3B,OAAKxgE,EAIEQ,KAAK2F,OAAOmK,IAAItQ,EAAE,SAJzB,CAKJ,EAMJ,MAAM2gE,GACFC,MACAC,aACAxgE,YAAYugE,EAAOC,GACfrgE,KAAKogE,MAAQA,EACbpgE,KAAKqgE,aAAeA,CACxB,EAcJ,SAASC,GAAgBpM,EAASL,EAAU0M,EAAaC,EAASJ,EAAOK,EAAYC,EAAsBC,GACvG,MAAMC,EAAa/M,EAASp5C,QAAQxW,OACpC,IAAI48D,GAAO,EACPC,GAAiB,EACrB,GAAIJ,EAAsB,CACtB,MAAMK,EAyHd,SAASC,GAAsB9M,EAASL,EAAU0M,EAAaC,EAASJ,EAAOK,GAC3E,IAAIK,EAAkBV,EAAMa,qBAAuB,GAAI,EACvD,MAAMC,EAAa,GACnB,QAASz+C,EAAO29C,EAAO39C,EAAMA,EAAOA,EAAK0+C,MAAO,CAC5C,MAAMC,EAAW3+C,EAAK2yC,QAAQlB,GAC1BkN,aAAoB/K,IACpB6K,EAAWz5D,KAAK,CACZyqD,KAAMkP,EACNhB,MAAO39C,GAGnB,CACA,QAAS4+C,EAAYH,EAAWC,MAAOE,EAAWA,EAAYH,EAAWC,MAAO,CAC5E,MAAQG,cAAaC,eAAgBC,GAAuBH,EAAUnP,KAAMgC,EAASmN,EAAUjB,MAAMqB,QAASlB,EAAaC,IAAYM,GACjIhU,EAAIwU,EAAYnH,kBAAkBtG,EAAU2M,EAASe,GAC3D,IAAIzU,EAkBC,CACDsT,EAAQiB,EAAUjB,MAAMe,MACxB,KACJ,CAnBI,GADsBrU,EAAE8K,SACF3E,GAAa,CAE/BmN,EAAQiB,EAAUjB,MAAMe,MACxB,KACJ,CACIrU,EAAEsC,gBAAkBtC,EAAEsC,eAAenrD,SACrCw8D,EAAWiB,QAAQL,EAAUjB,MAAOtT,EAAEsC,eAAe,GAAG3tB,OACxDkgC,GAAezN,EAASL,EAAU0M,EAAac,EAAUjB,MAAOK,EAAYY,EAAUnP,KAAKoE,cAAexJ,EAAEsC,gBAC5GqR,EAAWiB,QAAQL,EAAUjB,MAAOtT,EAAEsC,eAAe,GAAG5tB,KACxDs/B,EAAiBhU,EAAEsC,eAAe,GAAG5tB,IACjCsrB,EAAEsC,eAAe,GAAG5tB,IAAMg/B,IAC1BA,EAAU1T,EAAEsC,eAAe,GAAG5tB,IAC9B++B,GAAc,GAQ9B,CACA,MAAO,CAAEH,MAAOA,EAAOI,QAASA,EAASM,eAAgBA,EAAgBP,YAAaA,EAC1F,CAhKiCS,CAAsB9M,EAASL,EAAU0M,EAAaC,EAASJ,EAAOK,GAC/FL,EAAQW,EAAiBX,MACzBI,EAAUO,EAAiBP,QAC3BD,EAAcQ,EAAiBR,YAC/BO,EAAiBC,EAAiBD,cACtC,CACA,MAAMc,EAAYz4C,KAAKtI,MACvB,MAAQggD,GAAM,CACV,GAAkB,IAAdF,GACoBx3C,KAAKtI,MAAQ+gD,EACfjB,EACd,OAAO,IAAIR,GAAqBC,GAAO,GAG/CyB,GACJ,CACA,OAAO,IAAI1B,GAAqBC,GAAO,GACvC,SAASyB,IACL,MAAM/U,EA+Id,SAASgV,GAAsB5N,EAASL,EAAU0M,EAAaC,EAASJ,EAAOU,GAE3E,MAAMiB,EAyBV,SAASC,GAAU9N,EAASL,EAAU0M,EAAaC,EAASJ,EAAOU,GAC/D,MAAM5O,EAAOkO,EAAMhL,QAAQlB,IACnBoN,cAAaC,eAAgBU,GAAkB/P,EAAMgC,EAASkM,EAAMqB,QAASlB,EAAaC,IAAYM,GACxGhU,EAAIwU,EAAYnH,kBAAkBtG,EAAU2M,EAASe,GAC3D,OAAIzU,EACO,CACHsC,eAAgBtC,EAAEsC,eAClB8S,cAAepV,EAAE8K,QAGlB,IACX,CApCwBoK,CAAU9N,EAASL,EAAU0M,EAAaC,EAASJ,EAAOU,GAExEjP,EAAaqC,EAAQiO,gBAC3B,GAA0B,IAAtBtQ,EAAW5tD,OAEX,OAAO89D,EAEX,MAAMK,EA8BV,SAASC,GAAgBxQ,EAAYqC,EAASL,EAAU0M,EAAaC,EAASJ,EAAOU,GAEjF,IAEIwB,EAFAC,EAAkBvlD,OAAOwlD,UACzBC,EAA0B,KAE1BC,EAA0B,EAC9B,MAAM1H,EAASoF,EAAMuC,sBAAsBC,gBAC3C,QAASp8C,EAAI,EAAGumC,EAAM8E,EAAW5tD,OAAQuiB,EAAIumC,EAAKvmC,IAAK,CACnD,MAAMsrC,EAAYD,EAAWrrC,GAC7B,IAAKsrC,EAAUjG,QAAQmP,GAEnB,SAEJ,MAAM9I,EAAOgC,EAAQkB,QAAQtD,EAAU8F,SAC/B0J,cAAaC,eAAgBU,GAAkB/P,EAAMgC,EAAS,KAAMqM,EAAaC,IAAYM,GAC/FiB,EAAcT,EAAYnH,kBAAkBtG,EAAU2M,EAASe,GACrE,IAAKQ,EACD,SAEJ,MAAMc,EAAcd,EAAY3S,eAAe,GAAG3tB,MAClD,KAAIohC,GAAeN,KAInBA,EAAkBM,EAClBJ,EAA0BV,EAAY3S,eACtCkT,EAAkBP,EAAYnK,OAC9B8K,EAA0B5Q,EAAUpG,SAChC6W,IAAoB/B,GAEpB,KAER,CACA,OAAIiC,EACO,CACHK,eAA2C,IAA5BJ,EACftT,eAAgBqT,EAChBP,cAAeI,GAGhB,IACX,CAvE4BD,CAAgBxQ,EAAYqC,EAASL,EAAU0M,EAAaC,EAASJ,EAAOU,GACpG,IAAKsB,EAED,OAAOL,EAEX,IAAKA,EAED,OAAOK,EAGX,MAAMW,EAAmBhB,EAAY3S,eAAe,GAAG3tB,MACjDuhC,EAAuBZ,EAAgBhT,eAAe,GAAG3tB,MAC/D,OAAIuhC,EAAuBD,GAAqBX,EAAgBU,eAAiBE,IAAyBD,EAE/FX,EAEJL,CACX,CAzKkBD,CAAsB5N,EAASL,EAAU0M,EAAaC,EAASJ,EAAOU,GAChF,IAAKhU,EAID,OAFA2T,EAAWiB,QAAQtB,EAAOQ,QAC1BC,GAAO,GAGX,MAAMzR,EAAiBtC,EAAEsC,eACnB8S,EAAgBpV,EAAEoV,cAClBe,KAAc7T,GAAkBA,EAAenrD,OAAS,IACxDmrD,EAAe,GAAG5tB,IAAMg/B,EAE9B,GAAI0B,IAAkBlP,GAAW,CAE7B,MAAMkQ,EAAa9C,EAAMhL,QAAQlB,GACjCuM,EAAWiB,QAAQtB,EAAOhR,EAAe,GAAG3tB,OAC5C2+B,EAAQA,EAAM+C,0BAA0B/C,EAAMgD,gBAC9CzB,GAAezN,EAASL,EAAU0M,EAAaH,EAAOK,EAAYyC,EAAWxN,YAAatG,GAC1FqR,EAAWiB,QAAQtB,EAAOhR,EAAe,GAAG5tB,KAE5C,MAAM6hC,EAASjD,EAGf,GAFAA,EAAQA,EAAMzzD,OACdm0D,EAAiBuC,EAAOC,gBACnBL,GAAeI,EAAOE,gBAAkB/C,EAMzC,OAFAC,EAAWiB,QADXtB,EAAQiD,EACkBzC,QAC1BC,GAAO,EAGf,KACK,CAED,MAAM2C,EAAQtP,EAAQkB,QAAQ8M,GAC9BzB,EAAWiB,QAAQtB,EAAOhR,EAAe,GAAG3tB,OAC5C,MAAMgiC,EAAarD,EAEbnQ,EAAYuT,EAAM5P,QAAQC,EAASp5C,QAAS20C,GAC5CgU,EAAiBhD,EAAMuC,sBAAsBe,eAAezT,EAAWiE,GAE7E,GADAkM,EAAQA,EAAM34D,KAAKy6D,EAAe1B,EAASM,EAAgB1R,EAAe,GAAG5tB,MAAQo/B,EAAY,KAAMwC,EAAgBA,GACnHI,aAAiBnO,GAAc,CAC/B,MAAMsO,EAAaH,EACnB7B,GAAezN,EAASL,EAAU0M,EAAaH,EAAOK,EAAYkD,EAAWpO,cAAenG,GAC5FqR,EAAWiB,QAAQtB,EAAOhR,EAAe,GAAG5tB,KAC5Cs/B,EAAiB1R,EAAe,GAAG5tB,IACnC,MAAMgyB,EAAcmQ,EAAW7P,eAAeD,EAASp5C,QAAS20C,GAC1DuT,EAAwBS,EAAeM,eAAelQ,EAAaU,GAKzE,GAJAkM,EAAQA,EAAM+C,0BAA0BR,GACpCgB,EAAWlO,uBACX2K,EAAQA,EAAMwD,YAAYD,EAAW3N,iCAAiCnC,EAASp5C,QAAS20C,MAEvF6T,GAAeQ,EAAWI,cAAczD,GAIzC,OAHAA,EAAQA,EAAMe,MACdV,EAAWiB,QAAQtB,EAAOQ,QAC1BC,GAAO,EAGf,SACS2C,aAAiBnN,GAAgB,CACtC,MAAMsN,EAAaH,EACnB7B,GAAezN,EAASL,EAAU0M,EAAaH,EAAOK,EAAYkD,EAAWpO,cAAenG,GAC5FqR,EAAWiB,QAAQtB,EAAOhR,EAAe,GAAG5tB,KAC5Cs/B,EAAiB1R,EAAe,GAAG5tB,IACnC,MAAMgyB,EAAcmQ,EAAW7P,eAAeD,EAASp5C,QAAS20C,GAC1DuT,EAAwBS,EAAeM,eAAelQ,EAAaU,GAKzE,GAJAkM,EAAQA,EAAM+C,0BAA0BR,GACpCgB,EAAWnN,yBACX4J,EAAQA,EAAMwD,YAAYD,EAAWhN,mCAAmC9C,EAASp5C,QAAS20C,MAEzF6T,GAAeQ,EAAWI,cAAczD,GAIzC,OAHAA,EAAQA,EAAMe,MACdV,EAAWiB,QAAQtB,EAAOQ,QAC1BC,GAAO,EAGf,SAGIc,GAAezN,EAASL,EAAU0M,EAAaH,EAAOK,EADjC+C,EAC0D7O,SAAUvF,GACzFqR,EAAWiB,QAAQtB,EAAOhR,EAAe,GAAG5tB,KAE5C4+B,EAAQA,EAAMe,OACT8B,EAID,OAHA7C,EAAQA,EAAM0D,UACdrD,EAAWiB,QAAQtB,EAAOQ,QAC1BC,GAAO,EAInB,CACIzR,EAAe,GAAG5tB,IAAMg/B,IAExBA,EAAUpR,EAAe,GAAG5tB,IAC5B++B,GAAc,EAEtB,CACJ,CA+HA,SAAS0B,GAAkB/P,EAAMgC,EAASG,EAAgBE,EAAQC,GAE9D,MAAO,CAAE8M,YADWpP,EAAKoC,UAAUJ,EAASG,EAAgBE,EAAQC,GAC9C+M,YAAa,EACvC,CACA,SAASC,GAAuBtP,EAAMgC,EAASG,EAAgBE,EAAQC,GAEnE,MAAO,CAAE8M,YADWpP,EAAK4E,eAAe5C,EAASG,EAAgBE,EAAQC,GACnD+M,YAAa,EACvC,CACA,SAASI,GAAezN,EAASL,EAAU0M,EAAaH,EAAOK,EAAY9L,EAAUvF,GACjF,GAAwB,IAApBuF,EAAS1wD,OACT,OAEJ,MAAM8/D,EAAkBlQ,EAASp5C,QAC3BsyC,EAAM95B,KAAKmH,IAAIu6B,EAAS1wD,OAAQmrD,EAAenrD,QAC/C+/D,EAAa,GACbC,EAAS7U,EAAe,GAAG5tB,IACjC,QAAShb,EAAI,EAAGA,EAAIumC,EAAKvmC,IAAK,CAC1B,MAAM09C,EAAcvP,EAASnuC,GAC7B,GAAoB,OAAhB09C,EAEA,SAEJ,MAAMC,EAAe/U,EAAe5oC,GACpC,GAA4B,IAAxB29C,EAAalgE,OAEb,SAEJ,GAAIkgE,EAAa1iC,MAAQwiC,EAErB,MAGJ,KAAOD,EAAW//D,OAAS,GAAK+/D,EAAWA,EAAW//D,OAAS,GAAGmgE,QAAUD,EAAa1iC,OAErFg/B,EAAW4D,kBAAkBL,EAAWA,EAAW//D,OAAS,GAAG+2D,OAAQgJ,EAAWA,EAAW//D,OAAS,GAAGmgE,QACzGJ,EAAW7C,MAQf,GANI6C,EAAW//D,OAAS,EACpBw8D,EAAW4D,kBAAkBL,EAAWA,EAAW//D,OAAS,GAAG+2D,OAAQmJ,EAAa1iC,OAGpFg/B,EAAWiB,QAAQtB,EAAO+D,EAAa1iC,OAEvCyiC,EAAYlQ,6BAA8B,CAE1C,MAAM/D,EAAYiU,EAAYtQ,QAAQmQ,EAAiB3U,GACjDgU,EAAiBhD,EAAMuC,sBAAsBe,eAAezT,EAAWiE,GACvEV,EAAc0Q,EAAYpQ,eAAeiQ,EAAiB3U,GAC1DuT,EAAwBS,EAAeM,eAAelQ,EAAaU,GACnEoQ,EAAalE,EAAM34D,KAAKy8D,EAAYlQ,6BAA8BmQ,EAAa1iC,OAAO,GAAI,EAAO,KAAM2hC,EAAgBT,GACvH4B,EAAarQ,EAAQsQ,iBAAiBT,EAAgB3f,UAAU,EAAG+f,EAAa3iC,MACtF8+B,GAAgBpM,EAASqQ,EAAahE,GAAsC,IAAvB4D,EAAa1iC,MAAc0iC,EAAa1iC,MAAO6iC,EAAY7D,GAAY,EAA2B,GACvJjU,GAAkB+X,GAClB,QACJ,CACA,MAAME,EAAuBP,EAAYtQ,QAAQmQ,EAAiB3U,GAClE,GAA6B,OAAzBqV,EAA+B,CAG/B,MAAMC,GADOV,EAAW//D,OAAS,EAAI+/D,EAAWA,EAAW//D,OAAS,GAAG+2D,OAASoF,EAAMuC,uBACnDe,eAAee,EAAsBvQ,GACxE8P,EAAWv8D,KAAK,IAAIk9D,GAAkBD,EAAuBP,EAAa3iC,KAC9E,CACJ,CACA,KAAOwiC,EAAW//D,OAAS,GAEvBw8D,EAAW4D,kBAAkBL,EAAWA,EAAW//D,OAAS,GAAG+2D,OAAQgJ,EAAWA,EAAW//D,OAAS,GAAGmgE,QACzGJ,EAAW7C,KAEnB,CACA,MAAMwD,GACF3J,OACAoJ,OACAvkE,YAAYm7D,EAAQoJ,GAChBpkE,KAAKg7D,OAASA,EACdh7D,KAAKokE,OAASA,CAClB,EASJ,SAASQ,GAAkBr/D,EAAQmvC,EAAUwd,EAAM2S,EAAmB3Q,GAClE,MAAM9H,EAAWjB,GAAezW,EAAUowB,IACpClN,EAASb,EAAYI,kBAAkBjF,EAAM2S,EAAmB3Q,EAAQtC,YAC9E,UAAW/F,KAAWO,EAClB7mD,EAAOkC,KAAK,CACRs9D,cAAerwB,EACfmX,QAASA,EAAQA,QACjB+L,OAAQA,EACR1D,QAASA,EACTxI,SAAUG,EAAQH,UAG9B,CACA,SAASoZ,GAAYE,EAAYhK,GAC7B,GAAIA,EAAO/2D,OAAS+gE,EAAW/gE,OAC3B,OAAO,EAEX,IAAIgrD,EAAY,EAChB,OAAO+V,EAAWzY,MAAMvkC,IACpB,QAASxB,EAAIyoC,EAAWzoC,EAAIw0C,EAAO/2D,OAAQuiB,IACvC,GAAIy+C,GAAkBjK,EAAOx0C,GAAIwB,GAC7BinC,SAAYzoC,EAAI,GACT,EAGf,OAAO,GAEf,CACA,SAASy+C,GAAkBC,EAAejV,GACtC,IAAKiV,EACD,OAAO,EAEX,GAAIA,IAAkBjV,EAClB,OAAO,EAEX,MAAMlD,EAAMkD,EAAUhsD,OACtB,OAAOihE,EAAcjhE,OAAS8oD,GAAOmY,EAAc5X,OAAO,EAAGP,KAASkD,GAAoC,MAAvBiV,EAAcnY,EACrG,CACA,MAAMoY,GACFC,eACAC,yBACAC,SACAC,QACAC,YACAC,aACAC,kBACAC,mBACAC,SACAC,YACAC,8BACAC,mBACA,iBAAIC,GAAkB,OAAOhmE,KAAK2lE,kBAAoB,CACtD9lE,YAAYulE,EAAgBlR,EAAS+R,EAAiB7G,EAAmB8G,EAAYb,EAA0Bc,EAAmBb,GAa9H,GAZAtlE,KAAKolE,eAAiBA,EACtBplE,KAAKqlE,yBAA2BA,EAChCrlE,KAAKslE,SAAWA,EAChBtlE,KAAK8lE,8BAAgC,IAAI9G,GAA6BiH,EAAiB7G,GACvFp/D,KAAKulE,SAAU,EACfvlE,KAAKwlE,YAAc,EACnBxlE,KAAKylE,aAAe,CAAC,MACrBzlE,KAAK0lE,kBAAoB,CAAC,EAC1B1lE,KAAK2lE,mBAAqBQ,EAC1BnmE,KAAK4lE,SAAWQ,GAAYlS,EAAS,MACrCl0D,KAAK6lE,YAAc,KACnB7lE,KAAK+lE,mBAAqB,GACtBG,EACA,UAAWxxB,KAAY3wC,OAAOC,KAAKkiE,GAAa,CAC5C,MAAM9Z,EAAWjB,GAAezW,EAAUowB,IAC1C,UAAWjZ,KAAWO,EAClBpsD,KAAK+lE,mBAAmBt+D,KAAK,CACzBokD,QAASA,EAAQA,QACjB5qD,KAAMilE,EAAWxxB,IAG7B,CAER,CACA/P,UACI,UAAWutB,KAAQlyD,KAAKylE,aAChBvT,GACAA,EAAKvtB,SAGjB,CACAu1B,kBAAkB70D,GACd,OAAOrF,KAAKslE,SAASpL,kBAAkB70D,EAC3C,CACAm/D,iBAAiBn/D,GACb,OAAOrF,KAAKslE,SAASd,iBAAiBn/D,EAC1C,CACAghE,oBAAoBnL,GAChB,OAAOl7D,KAAK8lE,8BAA8BtG,wBAAwBtE,EACtE,CACAoL,qBACI,MAWM/gE,EAAS,GACT0qD,EAAYjwD,KAAKolE,eACjBlR,EAZOjE,IACDA,IAAcjwD,KAAKolE,eACZplE,KAAK4lE,SAET5lE,KAAKg4D,mBAAmB/H,GAQvBkW,CAAyBlW,GACzC,GAAIiE,EAAS,CAET,MAAMqS,EAAgBrS,EAAQrC,WAC9B,GAAI0U,EACA,QAASC,KAAcD,EACnB3B,GAAkBr/D,EAAQihE,EAAYD,EAAcC,GAAaxmE,KAAMk0D,GAI/E,MAAMuS,EAAsBzmE,KAAK2lE,mBAAmB9T,WAAW5B,GAC3DwW,GACAA,EAAoB5iE,QAAS6iE,IACzB,MAAMC,EAAmB3mE,KAAKg4D,mBAAmB0O,GACjD,GAAIC,EAAkB,CAClB,MAAMjyB,EAAWiyB,EAAiBC,kBAC9BlyB,GACAkwB,GAAkBr/D,EAAQmvC,EAAUiyB,EAAkB3mE,KAAM2mE,EAEpE,GAGZ,CACAphE,SAAOq2D,KAAK,CAACj9C,EAAIwjB,IAAOxjB,EAAG+sC,SAAWvpB,EAAGupB,UAClCnmD,CACX,CACA48D,gBACI,OAAyB,OAArBniE,KAAK6lE,cACL7lE,KAAK6lE,YAAc7lE,KAAKsmE,sBAErBtmE,KAAK6lE,WAChB,CACA3O,aAAa9lD,GACT,MAAM4sB,IAAOh+B,KAAKwlE,YACZjgE,EAAS6L,EAAyB4sB,GACxC,OAAAh+B,KAAKylE,aAAaznC,GAAMz4B,EACjBA,CACX,CACA6vD,QAAQwC,GACJ,OAAO53D,KAAKylE,aAA4B7N,EAC5C,CACAI,mBAAmB/H,EAAW2B,GAC1B,GAAI5xD,KAAK0lE,kBAAkBzV,GACvB,OAAOjwD,KAAK0lE,kBAAkBzV,GAE7B,GAAIjwD,KAAK2lE,mBAAoB,CAC9B,MAAMkB,EAAqB7mE,KAAK2lE,mBAAmBpU,OAAOtB,GAC1D,GAAI4W,EAEA,OAAA7mE,KAAK0lE,kBAAkBzV,GAAamW,GAAYS,EAAoBjV,GAAcA,EAAWkV,OACtF9mE,KAAK0lE,kBAAkBzV,EAEtC,CAEJ,CACA8W,aAAalT,EAAUmT,EAAWrG,EAAY,GAC1C,MAAM7T,EAAI9sD,KAAKinE,UAAUpT,EAAUmT,GAAW,EAAOrG,GACrD,MAAO,CACHuG,OAAQpa,EAAE2T,WAAW0G,UAAUra,EAAEsa,UAAWta,EAAE8T,YAC9CwG,UAAWta,EAAEsa,UACb/G,aAAcvT,EAAEuT,aAExB,CACAgH,cAAcxT,EAAUmT,EAAWrG,EAAY,GAC3C,MAAM7T,EAAI9sD,KAAKinE,UAAUpT,EAAUmT,GAAW,EAAMrG,GACpD,MAAO,CACHuG,OAAQpa,EAAE2T,WAAW6G,gBAAgBxa,EAAEsa,UAAWta,EAAE8T,YACpDwG,UAAWta,EAAEsa,UACb/G,aAAcvT,EAAEuT,aAExB,CACA4G,UAAUpT,EAAUmT,EAAWO,EAAkB5G,GAM7C,IAAIJ,EACJ,IANqB,IAAjBvgE,KAAKulE,UACLvlE,KAAKulE,QAAUxO,EAAYI,kBAAkBn3D,KAAK4lE,SAAShU,WAAWsG,MAAOl4D,KAAMA,KAAK4lE,SAAShU,YAEjG5xD,KAAKmiE,iBAGJ6E,GAAaA,IAAcQ,EAAe9hC,KAgB3C66B,GAAc,EACdyG,EAAUh+D,YAjBuC,CACjDu3D,GAAc,EACd,MAAMkH,EAAqBznE,KAAK8lE,8BAA8BvG,uBACxDmI,EAAe1nE,KAAKgmE,cAAcvJ,cAClCkL,EAAkB/c,GAAuB/9C,IAAI,EAAG46D,EAAmB7Z,WAAY6Z,EAAmB3Z,UAAW,KAAM4Z,EAAa1Z,UAAW0Z,EAAanK,aAAcmK,EAAalK,cACnLoK,EAAgB5nE,KAAKo1D,QAAQp1D,KAAKulE,SAAS3R,QAAQ,KAAM,MAC/D,IAAIiU,EAEAA,EADAD,EACYE,EAAqBC,6BAA6BH,EAAeD,EAAiB3nE,MAGlF8nE,EAAqBE,WAAW,UAAWL,GAE3DX,EAAY,IAAIQ,EAAe,KAAMxnE,KAAKulE,SAAS,GAAI,GAAI,EAAO,KAAMsC,EAAWA,EACvF,CAMA,MAAMI,EAAejoE,KAAKwkE,iBAD1B3Q,GAAsB,MAEhB+M,EAAaqH,EAAaxtD,QAAQxW,OAClCw8D,EAAa,IAAIyH,GAAWX,EAAkB1T,EAAU7zD,KAAK+lE,mBAAoB/lE,KAAKqlE,0BACtFvY,EAAIwT,GAAgBtgE,KAAMioE,EAAc1H,EAAa,EAAGyG,EAAWvG,GAAY,EAAME,GAC3FnU,UAAkByb,GACX,CACHrH,WAAYA,EACZH,WAAYA,EACZ2G,UAAWta,EAAEsT,MACbC,aAAcvT,EAAEuT,aAExB,EAEJ,SAAS+F,GAAYlS,EAASmJ,GAC1BnJ,SA5oEJ,SAASgC,GAAMvJ,GACX,OAAOD,GAAQC,EACnB,CA0oEcuJ,CAAMhC,IACRtC,WAAasC,EAAQtC,YAAc,CAAC,EAC5CsC,EAAQtC,WAAWsG,MAAQ,CACvBb,wBAAyBnD,EAAQmD,wBACjCrF,SAAUkC,EAAQlC,SAClBzoD,KAAM2qD,EAAQjE,WAElBiE,EAAQtC,WAAWkV,MAAQzJ,GAAQnJ,EAAQtC,WAAWsG,MAC/ChE,CACX,CACA,MAAM4T,EACFn7D,OACA+vD,UACAyL,gBACA,oBAAOC,CAAcC,EAAgB1F,GACjC,IAAIr7D,EAAU+gE,EACVrL,EAAaqL,GAAgB3L,WAAa,KAC9C,UAAW4L,KAAS3F,EAChB3F,EAAaD,GAAWt1D,KAAKu1D,EAAYsL,EAAMtL,YAC/C11D,EAAU,IAAIwgE,EAAqBxgE,EAAS01D,EAAYsL,EAAM7a,wBAElE,OAAOnmD,CACX,CACA,iBAAO0gE,CAAW/X,EAAWkY,GACzB,OAAO,IAAIL,EAAqB,KAAM,IAAI/K,GAAW,KAAM9M,GAAYkY,EAC3E,CACA,mCAAOJ,CAA6B9X,EAAWkY,EAAiBjU,GAC5D,MAAMqU,EAAkBrU,EAAQmS,oBAAoBpW,GAC9CyM,EAAY,IAAIK,GAAW,KAAM9M,GACjCuY,EAAYtU,EAAQ8R,cAAcyC,WAAW/L,GAC7CgM,EAA0BZ,EAAqBa,gBAAgBR,EAAiBI,EAAiBC,GACvG,OAAO,IAAIV,EAAqB,KAAMpL,EAAWgM,EACrD,CACA,aAAIzY,GAAc,OAAOjwD,KAAK08D,UAAUzM,SAAW,CASnDpwD,YAAY8M,EAAQ+vD,EAAWyL,GAC3BnoE,KAAK2M,OAASA,EACd3M,KAAK08D,UAAYA,EACjB18D,KAAKmoE,gBAAkBA,CAC3B,CACApuD,WACI,OAAO/Z,KAAK4iE,gBAAgBnK,KAAK,IACrC,CACAmQ,OAAOzL,GACH,OAAO2K,EAAqBc,OAAO5oE,KAAMm9D,EAC7C,CACA,aAAOyL,CAAOzxB,EAAGC,GACb,OAAG,CAIC,GAHID,IAAMC,IAGLD,IAAMC,EAEP,OAAO,EAMX,IAJKD,IAAMC,GAIPD,EAAE8Y,YAAc7Y,EAAE6Y,WAAa9Y,EAAEgxB,kBAAoB/wB,EAAE+wB,gBACvD,OAAO,EAGXhxB,EAAIA,EAAExqC,OACNyqC,EAAIA,EAAEzqC,MACV,CACJ,CACA,sBAAOg8D,CAAgBE,EAAyBC,EAAsBC,GAClE,IAAI/a,GAAY,EACZE,EAAa,EACbE,EAAa,EACjB,OAAwB,OAApB2a,IACA/a,EAAY+a,EAAgB/a,UAC5BE,EAAa6a,EAAgBxL,aAC7BnP,EAAa2a,EAAgBvL,cAE1B5S,GAAuB/9C,IAAIg8D,EAAyBC,EAAqBlb,WAAYkb,EAAqBhb,UAAW,KAAME,EAAWE,EAAYE,EAC7J,CACAsV,eAAehH,EAAWxI,GACtB,GAAkB,OAAdwI,EACA,OAAO18D,KAEX,IAA+B,IAA3B08D,EAAUnpD,QAAQ,KAElB,OAAOu0D,EAAqBkB,gBAAgBhpE,KAAM08D,EAAWxI,GAEjE,MAAM8G,EAAS0B,EAAU1sD,MAAM,MAC/B,IAAIzK,EAASvF,KACb,UAAWk7D,KAASF,EAChBz1D,EAASuiE,EAAqBkB,gBAAgBzjE,EAAQ21D,EAAOhH,GAEjE,OAAO3uD,CACX,CACA,sBAAOyjE,CAAgB9lE,EAAQ+sD,EAAWiE,GACtC,MAAM+U,EAAc/U,EAAQmS,oBAAoBpW,GAC1CiZ,EAAUhmE,EAAOw5D,UAAUj1D,KAAKwoD,GAChCkZ,EAAwBjV,EAAQ8R,cAAcyC,WAAWS,GACzDE,EAAWtB,EAAqBa,gBAAgBzlE,EAAOilE,gBAAiBc,EAAaE,GAC3F,OAAO,IAAIrB,EAAqB5kE,EAAQgmE,EAASE,EACrD,CACAxG,gBACI,OAAO5iE,KAAK08D,UAAUO,aAC1B,CACAG,sBAAsBC,GAClB,MAAM93D,EAAS,GACf,IAAI8jE,EAAOrpE,KACX,KAAOqpE,GAAQA,IAAShM,GACpB93D,EAAOkC,KAAK,CACRgmD,uBAAwB4b,EAAKlB,gBAC7BnL,WAAYqM,EAAK3M,UAAUU,sBAAsBiM,EAAK18D,QAAQ+vD,WAAa,QAE/E2M,EAAOA,EAAK18D,OAEhB,OAAO08D,IAAShM,EAAO93D,EAAOi2D,eAAYp1D,CAC9C,EAKJ,MAAMohE,EACF76D,OACAirD,OACAqJ,qBACAQ,QACA2B,eACAT,sBACA2G,wBAAqBljE,EAErBu5D,YAAc,IAAI6H,EAAe,KAAM,EAAG,EAAG,GAAG,EAAO,KAAM,KAAM,MAMnE+B,UAMAC,WAIAC,MAYA5pE,YAIA8M,EAIAirD,EAAQ8R,EAAUC,EAIlB1I,EAIAQ,EAIA2B,EAKAT,GACI3iE,KAAK2M,OAASA,EACd3M,KAAK43D,OAASA,EACd53D,KAAKihE,qBAAuBA,EAC5BjhE,KAAKyhE,QAAUA,EACfzhE,KAAKojE,eAAiBA,EACtBpjE,KAAK2iE,sBAAwBA,EAC7B3iE,KAAKypE,MAAQzpE,KAAK2M,OAAS3M,KAAK2M,OAAO88D,MAAQ,EAAI,EACnDzpE,KAAKupE,UAAYG,EACjB1pE,KAAKwpE,WAAaG,CACtB,CACAf,OAAOzL,GACH,OAAc,OAAVA,GAGGqK,EAAeoC,QAAQ5pE,KAAMm9D,EACxC,CACA,cAAOyM,CAAQzyB,EAAGC,GACd,OAAID,IAAMC,KAGLp3C,KAAK6pE,kBAAkB1yB,EAAGC,IAGxB0wB,EAAqBc,OAAOzxB,EAAEwrB,sBAAuBvrB,EAAEurB,sBAClE,CAIA,wBAAOkH,CAAkB1yB,EAAGC,GACxB,OAAG,CAIC,GAHID,IAAMC,IAGLD,IAAMC,EAEP,OAAO,EAMX,IAJKD,IAAMC,GAIPD,EAAEsyB,QAAUryB,EAAEqyB,OACdtyB,EAAEygB,SAAWxgB,EAAEwgB,QACfzgB,EAAEsqB,UAAYrqB,EAAEqqB,QAChB,OAAO,EAGXtqB,EAAIA,EAAExqC,OACNyqC,EAAIA,EAAEzqC,MACV,CACJ,CACAupD,QACI,OAAOl2D,IACX,CACA,aAAO8pE,CAAOz2D,GACV,KAAOA,GACHA,EAAGk2D,WAAY,EACfl2D,EAAGm2D,YAAa,EAChBn2D,EAAKA,EAAG1G,MAEhB,CACA3D,QACIw+D,EAAesC,OAAO9pE,KAC1B,CACAmhE,MACI,OAAOnhE,KAAK2M,MAChB,CACAm3D,UACI,OAAI9jE,KAAK2M,OACE3M,KAAK2M,OAET3M,IACX,CACAyH,KAAKmwD,EAAQ8R,EAAUC,EAAW1I,EAAsBQ,EAAS2B,EAAgBT,GAC7E,OAAO,IAAI6E,EAAexnE,KAAM43D,EAAQ8R,EAAUC,EAAW1I,EAAsBQ,EAAS2B,EAAgBT,EAChH,CACAY,cACI,OAAOvjE,KAAKupE,SAChB,CACAjG,eACI,OAAOtjE,KAAKwpE,UAChB,CACApU,QAAQlB,GACJ,OAAOA,EAAQkB,QAAQp1D,KAAK43D,OAChC,CACA79C,WACI,MAAM+yC,EAAI,GACV,OAAA9sD,KAAK+pE,aAAajd,EAAG,GACd,IAAMA,EAAE2L,KAAK,KAAO,GAC/B,CACAsR,aAAanmE,EAAKomE,GACd,OAAIhqE,KAAK2M,SACLq9D,EAAWhqE,KAAK2M,OAAOo9D,aAAanmE,EAAKomE,IAE7CpmE,EAAIomE,KAAc,IAAIhqE,KAAK43D,WAAW53D,KAAKojE,gBAAgBrpD,eAAe/Z,KAAK2iE,uBAAuB5oD,cAC/FiwD,CACX,CACA7G,0BAA0B8G,GACtB,OAAIjqE,KAAK2iE,wBAA0BsH,EACxBjqE,KAEJA,KAAK2M,OAAOlF,KAAKzH,KAAK43D,OAAQ53D,KAAKupE,UAAWvpE,KAAKwpE,WAAYxpE,KAAKihE,qBAAsBjhE,KAAKyhE,QAASzhE,KAAKojE,eAAgB6G,EACxI,CACArG,YAAYnC,GACR,OAAIzhE,KAAKyhE,UAAYA,EACVzhE,KAEJ,IAAIwnE,EAAexnE,KAAK2M,OAAQ3M,KAAK43D,OAAQ53D,KAAKupE,UAAWvpE,KAAKwpE,WAAYxpE,KAAKihE,qBAAsBQ,EAASzhE,KAAKojE,eAAgBpjE,KAAK2iE,sBACvJ,CAEAkB,cAAc1G,GACV,IAAI9pD,EAAKrT,KACT,KAAOqT,GAAMA,EAAGk2D,YAAcpM,EAAMoM,WAAW,CAC3C,GAAIl2D,EAAGukD,SAAWuF,EAAMvF,OACpB,OAAO,EAEXvkD,EAAKA,EAAG1G,MACZ,CACA,OAAO,CACX,CACAu9D,oBACI,MAAO,CACHtS,OAAuB53D,KAAK43D,OAC5BqJ,qBAAsBjhE,KAAKihE,qBAC3BQ,QAASzhE,KAAKyhE,QACd2B,eAAgBpjE,KAAKojE,gBAAgBhG,sBAAsBp9D,KAAK2M,QAAQy2D,gBAAkB,OAAS,GACnGT,sBAAuB3iE,KAAK2iE,uBAAuBvF,sBAAsBp9D,KAAKojE,iBAAmB,GAEzG,CACA,gBAAO+G,CAAUd,EAAMf,GACnB,MAAMD,EAAiBP,EAAqBM,cAAciB,GAAMjG,gBAAkB,KAAMkF,EAAMlF,gBAC9F,OAAO,IAAIoE,EAAe6B,EAAuBf,EAAM1Q,OAAS0Q,EAAMoB,WAAY,EAAIpB,EAAMqB,YAAa,EAAIrB,EAAMrH,qBAAsBqH,EAAM7G,QAAS4G,EAAgBP,EAAqBM,cAAcC,EAAgBC,EAAM3F,uBACrO,EAEJ,MAAMyH,GACFC,sBACAC,wBACAC,UAAW,EACX1qE,YAAYwqE,EAAuBC,GAC/BtqE,KAAKqqE,sBAAwBA,EAAsBlgB,QAASzV,GACvC,MAAbA,GACA10C,KAAKuqE,UAAW,EACT,IAEJpf,GAAezW,EAAUowB,IAAazgE,IAAK7E,GAAMA,EAAEqsD,UAE9D7rD,KAAKsqE,wBAA0BA,EAAwBngB,QAASzV,GAAayW,GAAezW,EAAUowB,IAAazgE,IAAK7E,GAAMA,EAAEqsD,SACpI,CACA,iBAAI2e,GACA,OAAOxqE,KAAKuqE,UAAoD,IAAxCvqE,KAAKsqE,wBAAwBrmE,MACzD,CACA,gBAAIwmE,GACA,OAA6C,IAAtCzqE,KAAKqqE,sBAAsBpmE,SAAiBjE,KAAKuqE,QAC5D,CACA/e,MAAMwP,GACF,UAAW0P,KAAY1qE,KAAKsqE,wBACxB,GAAII,EAAS1P,GACT,OAAO,EAGf,UAAW2P,KAAY3qE,KAAKqqE,sBACxB,GAAIM,EAAS3P,GACT,OAAO,EAGf,OAAOh7D,KAAKuqE,QAChB,EAEJ,MAAMrC,GACF7C,yBACAuF,kBAIAC,UAIAC,QAIAC,cACAC,mBACAC,oBACAprE,YAAY0nE,EAAkB1T,EAAUqX,EAAoB7F,GACxDrlE,KAAKqlE,yBAA2BA,EAChCrlE,KAAK4qE,kBAAoBrD,EACzBvnE,KAAKirE,oBAAsBC,EAEvBlrE,KAAK6qE,UAAY,KAErB7qE,KAAK8qE,QAAU,GACf9qE,KAAK+qE,cAAgB,GACrB/qE,KAAKgrE,mBAAqB,CAC9B,CACAtJ,QAAQtB,EAAO+K,GACXnrE,KAAKqkE,kBAAkBjE,EAAMuC,sBAAuBwI,EACxD,CACA9G,kBAAkB+G,EAAYD,GAC1B,GAAInrE,KAAKgrE,oBAAsBG,EAC3B,OAEJ,GAAInrE,KAAK4qE,kBAAmB,CACxB,IAAIxB,EAAWgC,GAAYjD,iBAAmB,EAC1C7Z,GAA2B,EAI/B,GAHItuD,KAAKqlE,0BAA0BmF,gBAC/Blc,GAA2B,GAE3BtuD,KAAKirE,oBAAoBhnE,OAAS,GAAMjE,KAAKqlE,2BAA6BrlE,KAAKqlE,yBAAyBmF,gBAAkBxqE,KAAKqlE,yBAAyBoF,aAAe,CAEvK,MAAMzP,EAASoQ,GAAYxI,iBAAmB,GAC9C,UAAW9U,KAAa9tD,KAAKirE,oBACrBnd,EAAUjC,QAAQmP,KAClBoO,EAAWxe,GAAuB/9C,IAAIu8D,EAAU,EAAuBtb,EAAU7sD,KAAO,MAAM,EAA2B,EAAG,IAGhIjB,KAAKqlE,2BACL/W,EAA2BtuD,KAAKqlE,yBAAyB7Z,MAAMwP,GAEvE,CAIA,OAHI1M,IACA8a,EAAWxe,GAAuB/9C,IAAIu8D,EAAU,EAAG,EAA0C9a,GAA0B,EAA2B,EAAG,IAErJtuD,KAAK+qE,cAAc9mE,OAAS,GAAKjE,KAAK+qE,cAAc/qE,KAAK+qE,cAAc9mE,OAAS,KAAOmlE,IAK3FppE,KAAK+qE,cAActjE,KAAKzH,KAAKgrE,oBAC7BhrE,KAAK+qE,cAActjE,KAAK2hE,SAJpBppE,KAAKgrE,mBAAqBG,EAOlC,CACA,MAAMnQ,EAASoQ,GAAYxI,iBAAmB,GAC9C5iE,KAAK8qE,QAAQrjE,KAAK,CACd4jE,WAAYrrE,KAAKgrE,mBACjBG,SAAUA,EAEVnQ,OAAQA,IAEZh7D,KAAKgrE,mBAAqBG,CAC9B,CACAhE,UAAU/G,EAAOQ,GACb,OAAI5gE,KAAK8qE,QAAQ7mE,OAAS,GAAKjE,KAAK8qE,QAAQ9qE,KAAK8qE,QAAQ7mE,OAAS,GAAGonE,aAAezK,EAAa,GAE7F5gE,KAAK8qE,QAAQ3J,MAEW,IAAxBnhE,KAAK8qE,QAAQ7mE,SACbjE,KAAKgrE,oBAAqB,EAC1BhrE,KAAK0hE,QAAQtB,EAAOQ,GACpB5gE,KAAK8qE,QAAQ9qE,KAAK8qE,QAAQ7mE,OAAS,GAAGonE,WAAa,GAEhDrrE,KAAK8qE,OAChB,CACAxD,gBAAgBlH,EAAOQ,GACf5gE,KAAK+qE,cAAc9mE,OAAS,GAAKjE,KAAK+qE,cAAc/qE,KAAK+qE,cAAc9mE,OAAS,KAAO28D,EAAa,IAEpG5gE,KAAK+qE,cAAc5J,MACnBnhE,KAAK+qE,cAAc5J,OAEW,IAA9BnhE,KAAK+qE,cAAc9mE,SACnBjE,KAAKgrE,oBAAqB,EAC1BhrE,KAAK0hE,QAAQtB,EAAOQ,GACpB5gE,KAAK+qE,cAAc/qE,KAAK+qE,cAAc9mE,OAAS,GAAK,GAExD,MAAMsB,EAAS,IAAI+lE,YAAYtrE,KAAK+qE,cAAc9mE,QAClD,QAASuiB,EAAI,EAAGumC,EAAM/sD,KAAK+qE,cAAc9mE,OAAQuiB,EAAIumC,EAAKvmC,IACtDjhB,EAAOihB,GAAKxmB,KAAK+qE,cAAcvkD,GAEnC,OAAOjhB,CACX,EAMJ,MAAMgmE,GACFC,gBACAC,UAAY,IAAIpsD,IAChBqsD,aAAe,IAAIrsD,IACnBssD,mBAAqB,IAAItsD,IACzBusD,OACA/rE,YAAYgsE,EAAOL,GACfxrE,KAAKwrE,gBAAkBA,EACvBxrE,KAAK4rE,OAASC,CAClB,CACAlnC,UACI,UAAWuvB,KAAWl0D,KAAKyrE,UAAU9lE,SACjCuuD,EAAQvvB,SAEhB,CACAmnC,SAASD,GACL7rE,KAAK4rE,OAASC,CAClB,CACArP,cACI,OAAOx8D,KAAK4rE,OAAOpP,aACvB,CAIAuP,WAAW7X,EAASuS,GAChBzmE,KAAK0rE,aAAa7+D,IAAIqnD,EAAQjE,UAAWiE,GACrCuS,GACAzmE,KAAK2rE,mBAAmB9+D,IAAIqnD,EAAQjE,UAAWwW,EAEvD,CAIAlV,OAAOtB,GACH,OAAOjwD,KAAK0rE,aAAa57D,IAAImgD,EACjC,CAIA4B,WAAWma,GACP,OAAOhsE,KAAK2rE,mBAAmB77D,IAAIk8D,EACvC,CAIAvP,cACI,OAAOz8D,KAAK4rE,OAAOnP,aACvB,CAIAgM,WAAW/L,GACP,OAAO18D,KAAK4rE,OAAOpgB,MAAMkR,EAC7B,CAIMuP,oBAAoBhc,EAAWgW,EAAiB7G,EAAmB8G,EAAYb,GAA0B,IAAA6G,EAAAlsE,KAAA,SAAAsqD,KAAA,YAC3G,IAAK4hB,EAAKT,UAAUvtD,IAAI+xC,GAAY,CAChC,IAAIkc,EAAaD,EAAKR,aAAa57D,IAAImgD,GACvC,IAAKkc,EACD,OAAO,KAEXD,EAAKT,UAAU5+D,IAAIojD,EA/uB/B,SAASmc,GAAcnc,EAAWiE,EAAS+R,EAAiB7G,EAAmB8G,EAAYb,EAA0Bc,EAAmBtM,GACpI,OAAO,IAAIsL,GAAQlV,EAAWiE,EAAS+R,EAAiB7G,EAAmB8G,EAAYb,EAA0Bc,EAAmBtM,EACxI,CA6uB0CuS,CAAcnc,EAAWkc,EAAYlG,EAAiB7G,EAAmB8G,EAAYb,EAA0B6G,QAAYA,EAAKV,iBAClK,CACA,OAAOU,EAAKT,UAAU37D,IAAImgD,EAAW,EARsE,EAS/G,EASJ,IAAIoc,GAAa,MACbrjD,SACAsjD,cACAC,oBACA1sE,YAAYsU,GACRnU,KAAKgpB,SAAW7U,EAChBnU,KAAKssE,cAAgB,IAAIf,GAAajR,GAAMI,mBAAmBvmD,EAAQ03D,MAAO13D,EAAQwmD,UAAWxmD,EAAQ0lD,SACzG75D,KAAKusE,oBAAsB,IAAIltD,GACnC,CACAslB,UACI3kC,KAAKssE,cAAc3nC,SACvB,CAIAmnC,SAASD,EAAOlR,GACZ36D,KAAKssE,cAAcR,SAASxR,GAAMI,mBAAmBmR,EAAOlR,GAChE,CAIA6B,cACI,OAAOx8D,KAAKssE,cAAc9P,aAC9B,CAKAgQ,iCAAiC3b,EAAkBoV,EAAiB7G,GAChE,OAAOp/D,KAAKysE,6BAA6B5b,EAAkBoV,EAAiB,CAAE7G,qBAClF,CAKAqN,6BAA6B5b,EAAkBoV,EAAiByG,GAC5D,OAAO1sE,KAAK2sE,aAAa9b,EAAkBoV,EAAiByG,EAActN,kBAAmBsN,EAAcxG,WAAY,IAAIkE,GAAyBsC,EAAcrH,0BAA4B,GAAIqH,EAAcE,4BAA8B,IAClP,CAIAC,YAAYhc,GACR,OAAO7wD,KAAK2sE,aAAa9b,EAAkB,EAAG,KAAM,KAAM,KAC9D,CACM8b,aAAa9b,EAAkBoV,EAAiB7G,EAAmB8G,EAAYb,GAA0B,IAAAyH,EAAA9sE,KAAA,SAAAsqD,KAAA,YAC3G,MAAMyiB,EAAsB,IAAIpc,GAAyBmc,EAAKR,cAAezb,GAC7E,KAAOkc,EAAoB/b,EAAE/sD,OAAS,SAC5B9E,QAAQ2qD,IAAIijB,EAAoB/b,EAAE3sD,IAAKw4B,GAAYiwC,EAAKE,mBAAmBnwC,EAAQozB,aACzF8c,EAAoB9b,eAExB,OAAO6b,EAAKG,qBAAqBpc,EAAkBoV,EAAiB7G,EAAmB8G,EAAYb,EAA0B,EANlB,EAO/G,CACM2H,mBAAmB/c,GAAW,IAAAid,EAAAltE,KAAA,SAAAsqD,KAAA,YAChC,OAAK4iB,EAAKX,oBAAoBruD,IAAI+xC,IAC9Bid,EAAKX,oBAAoB1/D,IAAIojD,EAAWid,EAAKC,qBAAqBld,IAE/Did,EAAKX,oBAAoBz8D,IAAImgD,EAAW,EAJf,EAKpC,CACMkd,qBAAqBld,GAAW,IAAAmd,EAAAptE,KAAA,SAAAsqD,KAAA,YAClC,MAAM4J,QAAgBkZ,EAAKpkD,SAAS6jD,YAAY5c,GAChD,GAAIiE,EAAS,CACT,MAAMrC,EAAoD,mBAAhCub,EAAKpkD,SAASm5C,cAA+BiL,EAAKpkD,SAASm5C,cAAclS,QAAa7pD,EAChHgnE,EAAKd,cAAcP,WAAW7X,EAASrC,EAC3C,CAAC,EALiC,EAMtC,CAIMka,WAAWI,EAAYta,EAAa,GAAIoU,EAAkB,EAAG7G,EAAoB,MAAM,IAAAiO,EAAArtE,KAAA,SAAAsqD,KAAA,YACzF+iB,SAAKf,cAAcP,WAAWI,EAAYta,SAC5Bwb,EAAKJ,qBAAqBd,EAAWlc,UAAWgW,EAAiB7G,EAAoB,EAFV,EAG7F,CAIA6N,qBAAqBhd,EAAWgW,EAAkB,EAAG7G,EAAoB,KAAM8G,EAAa,KAAMb,EAA2B,MACzH,OAAOrlE,KAAKssE,cAAcL,oBAAoBhc,EAAWgW,EAAiB7G,EAAmB8G,EAAYb,EAC7G,GAEJ,MAAMiI,GAAU9F,EAAe9hC,KAoC/B,MAAM6nC,GACF,kBAAO/f,CAAY4b,GACf,IAAItc,EAAIsc,EAASrvD,SAAS,GAC1B,KAAO+yC,EAAE7oD,OAAS,IACd6oD,EAAI,IAAIA,IACZ,OAAOA,CACX,CAeA,oBAAOe,CAAcub,GACjB,OAnCa,IAmCLA,KA7BO,CA8BnB,CACA,mBAAOrb,CAAaqb,GAChB,OArCa,IAqCLA,KA/BO,CAgCnB,CACA,mBAAOnb,CAAamb,GAChB,OAtCa,MAsCLA,KAhCO,EAiCnB,CACA,oBAAOjb,CAAcib,GACjB,OAxCa,QAwCLA,KAlCO,EAmCnB,CACA,oBAAO/a,CAAc+a,GACjB,OA1Ca,WA0CLA,KApCO,EAqCnB,CACA,+BAAO9a,CAAyB8a,GAC5B,SAhDoB,KAgDZA,EACZ,CACA,UAAOv8D,CAAIu8D,EAAUxb,EAAYE,EAAWE,EAAWE,EAAYE,GAC/D,IAAIG,EAAcgf,GAAqB1f,cAAcub,GACjD5a,EAAa+e,GAAqBxf,aAAaqb,GAC/C1a,EAAa6e,GAAqBtf,aAAamb,GAC/Cza,EAAc4e,GAAqBpf,cAAcib,GACjDxa,EAAc2e,GAAqBlf,cAAc+a,GACrD,MAAM3a,EAA+B8e,GAAqBjf,yBAAyB8a,GAC7E,EACA,EACN,OAAmB,IAAfxb,IACAW,EAAcX,GACA,IAAdE,IACAU,EACoB,IAAdV,EAAgE,EAAkCA,GAExGE,IAAcnD,EAAUC,SACxB4D,EAAaV,GACE,IAAfE,IACAS,EAAcT,GACC,IAAfE,IACAQ,EAAcR,IACRG,EACHC,GAnEQ,EAoERE,GAlEQ,GAmERD,GApEe,GAqEfE,GAnEQ,GAoERC,GAnEQ,MAoEP,CACZ,ECljGJ,SAAS4e,GAAWC,EAAMC,GAAiB,GACvC,MAAMC,EAAQF,EAAKz9D,MAAM,YACzB,IAAIsD,EAAQ,EACZ,MAAMs6D,EAAQ,GACd,QAASpnD,EAAI,EAAGA,EAAImnD,EAAM1pE,OAAQuiB,GAAK,EAInConD,EAAMnmE,KAAK,CAHEimE,EACPC,EAAMnnD,IAAMmnD,EAAMnnD,EAAI,IAAM,IAC5BmnD,EAAMnnD,GACMlT,IAClBA,GAASq6D,EAAMnnD,GAAGviB,OAClBqP,GAASq6D,EAAMnnD,EAAI,IAAIviB,QAAU,EAErC,OAAO2pE,CACX,CAMA,SAASC,GAAYC,GACjB,OAAQA,GAAQ,CAAC,YAAa,MAAO,OAAQ,SAAS3mE,SAAS2mE,EACnE,CAMA,SAASC,GAAcD,GACnB,MAAgB,SAATA,GAAmBD,GAAYC,EAC1C,CAMA,SAASE,GAAYnC,GACjB,MAAiB,SAAVA,CACX,CAMA,SAASoC,GAAepC,GACpB,OAAOmC,GAAYnC,EACvB,CAMA,SAASqC,GAAezrD,EAAMgW,GAC1B,IAAKA,EACD,OAAOhW,EACXA,EAAK0rD,aAAe,CAAC,EACrB1rD,EAAK0rD,WAAWC,QAAU,GACW,iBAA1B3rD,EAAK0rD,WAAWC,QACvB3rD,EAAK0rD,WAAWC,MAAQ3rD,EAAK0rD,WAAWC,MAAMp+D,MAAM,SACnDpK,MAAMgB,QAAQ6b,EAAK0rD,WAAWC,SAC/B3rD,EAAK0rD,WAAWC,MAAQ,IAC5B,MAAMC,EAAUzoE,MAAMgB,QAAQ6xB,GAAaA,EAAYA,EAAUzoB,MAAM,QACvE,UAAWtL,KAAK2pE,EACR3pE,IAAM+d,EAAK0rD,WAAWC,MAAMjnE,SAASzC,IACrC+d,EAAK0rD,WAAWC,MAAM3mE,KAAK/C,GAEnC,OAAO+d,CACX,CAgDA,SAAS6rD,GAAyBzC,EAAO13D,GACrC,MAAMo6D,EAAgC,iBAAV1C,EAAqB,CAAC,EAAI,IAAKA,EAAM2C,mBAC3DC,EAA6B,iBAAV5C,EAAqBA,EAAQA,EAAMtiE,KAC5D,UAAYlJ,EAAKC,KAAUyD,OAAOu7D,QAAQnrD,GAASq6D,mBAAqB,CAAC,GAChD,iBAAVluE,EACPiuE,EAAaluE,GAAOC,EACfD,IAAQouE,GACb1qE,OAAO2qE,OAAOH,EAAcjuE,GAEpC,OAAOiuE,CACX,CACA,SAASI,GAAuBh7C,EAAO46C,GACnC,OAAK56C,IAEE46C,IAAe56C,GAAOnxB,gBAAkBmxB,EACnD,CACA,SAASi7C,GAAoBj2D,GACzB,MAAM2iB,EAAS,CAAC,EAChB,OAAI3iB,EAAMgb,QACN2H,EAAO3H,MAAQhb,EAAMgb,OACrBhb,EAAMk2D,UACNvzC,EAAO,oBAAsB3iB,EAAMk2D,SACnCl2D,EAAMq1C,YACFr1C,EAAMq1C,UAAYnD,EAAUG,SAC5B1vB,EAAO,cAAgB,UACvB3iB,EAAMq1C,UAAYnD,EAAUI,OAC5B3vB,EAAO,eAAiB,QACxB3iB,EAAMq1C,UAAYnD,EAAUK,YAC5B5vB,EAAO,mBAAqB,cAE7BA,CACX,CACA,SAASwzC,GAAoBn2D,GACzB,OAAO5U,OAAOu7D,QAAQ3mD,GAAOtU,IAAI,EAAEhE,EAAKC,KAAW,GAAGD,KAAOC,KAASm4D,KAAK,IAC/E,CAgCA,IAAIsW,GAAc,CAChB,QACA,MACA,QACA,SACA,OACA,UACA,OACA,QACA,cACA,YACA,cACA,eACA,aACA,gBACA,aACA,eAIEC,GAAc,CAChB,EAAG,OACH,EAAG,MACH,EAAG,SACH,EAAG,YACH,EAAG,UACH,EAAG,iBAIL,SAASC,GAAa3uE,EAAOka,GAC3B,MAAM00D,EAAa5uE,EAAMiT,QAAQ,QAASiH,GAC1C,IAAmB,IAAf00D,EAAmB,CACrB,MAAMC,EAAY7uE,EAAMiT,QAAQ,IAAK27D,GACrC,MAAO,CACLE,SAAU9uE,EAAM8jD,UAAU8qB,EAAa,EAAGC,GAAWn/D,MAAM,KAC3DqqD,cAAe6U,EACf10D,SAAU20D,EAAY,EAE1B,CACA,MAAO,CACL30D,SAAUla,EAAM2D,OAEpB,CACA,SAASorE,GAAWD,EAAU97D,GAC5B,IAAIihC,EAAS,EACb,MAAM+6B,EAAYF,EAAS97D,EAAQihC,KACnC,IAAI5gB,EACJ,GAAkB,MAAd27C,EAAmB,CACrB,MAAMC,EAAM,CACVH,EAAS97D,EAAQihC,KACjB66B,EAAS97D,EAAQihC,KACjB66B,EAAS97D,EAAQihC,IACjBlwC,IAAK+L,GAAM4M,OAAO6G,SAASzT,IACV,IAAfm/D,EAAItrE,SAAiBsrE,EAAIzzD,KAAM1L,GAAM4M,OAAOF,MAAM1M,MACpDujB,EAAQ,CACN1yB,KAAM,MACNsuE,OAGN,SAAyB,MAAdD,EAAmB,CAC5B,MAAME,EAAaxyD,OAAO6G,SAASurD,EAAS97D,EAAQihC,IAC/Cv3B,OAAOF,MAAM0yD,KAChB77C,EAAQ,CAAE1yB,KAAM,QAASqS,MAAO0J,OAAOwyD,IAE3C,CACA,MAAO,CAACj7B,EAAQ5gB,EAClB,CACA,SAAS87C,GAAcL,GACrB,MAAMM,EAAW,GACjB,QAASlpD,EAAI,EAAGA,EAAI4oD,EAASnrE,OAAQuiB,IAAK,CACxC,MACMmpD,EAAU3yD,OAAO6G,SADVurD,EAAS5oD,IAEtB,IAAIxJ,OAAOF,MAAM6yD,GAEjB,GAAgB,IAAZA,EACFD,EAASjoE,KAAK,CAAExG,KAAM,kBAAY,GACzB0uE,GAAW,EACDX,GAAYW,IAE7BD,EAASjoE,KAAK,CACZxG,KAAM,gBACNX,MAAO0uE,GAAYW,UACpB,GAEMA,GAAW,GAAI,CACxB,MAAMC,EAAaZ,GAAYW,EAAU,IACrCC,GACFF,EAASjoE,KAAK,CACZxG,KAAM,kBACNX,MAAOsvE,GAGb,SAAWD,GAAW,GACpBD,EAASjoE,KAAK,CACZxG,KAAM,qBACNX,MAAO,CAAEW,KAAM,QAASsI,KAAMwlE,GAAYY,EAAU,YACrD,GACoB,KAAZA,EAAgB,CACzB,MAAOp7B,EAAQ5gB,GAAS07C,GAAWD,EAAU5oD,GACzCmN,GACF+7C,EAASjoE,KAAK,CACZxG,KAAM,qBACNX,MAAOqzB,IAGXnN,GAAK+tB,CACP,SAAuB,KAAZo7B,EACTD,EAASjoE,KAAK,CACZxG,KAAM,8BACP,GACQ0uE,GAAW,GACpBD,EAASjoE,KAAK,CACZxG,KAAM,qBACNX,MAAO,CAAEW,KAAM,QAASsI,KAAMwlE,GAAYY,EAAU,YACrD,GACoB,KAAZA,EAAgB,CACzB,MAAOp7B,EAAQ5gB,GAAS07C,GAAWD,EAAU5oD,GACzCmN,GACF+7C,EAASjoE,KAAK,CACZxG,KAAM,qBACNX,MAAOqzB,IAGXnN,GAAK+tB,CACP,MAAuB,KAAZo7B,EACTD,EAASjoE,KAAK,CACZxG,KAAM,yBAEC0uE,GAAW,IAAMA,GAAW,GACrCD,EAASjoE,KAAK,CACZxG,KAAM,qBACNX,MAAO,CAAEW,KAAM,QAASsI,KAAMwlE,GAAYY,EAAU,GAAK,MAElDA,GAAW,KAAOA,GAAW,KACtCD,EAASjoE,KAAK,CACZxG,KAAM,qBACNX,MAAO,CAAEW,KAAM,QAASsI,KAAMwlE,GAAYY,EAAU,IAAM,KAGhE,CACA,OAAOD,CACT,CAqDA,IAAIG,GAAwB,CAC1BC,MAAO,UACPC,IAAK,UACLC,MAAO,UACPC,OAAQ,UACRC,KAAM,UACNC,QAAS,UACTC,KAAM,UACNC,MAAO,UACPC,YAAa,UACbC,UAAW,UACXC,YAAa,UACbC,aAAc,UACdC,WAAY,UACZC,cAAe,UACfC,WAAY,UACZC,YAAa,WAEf,SAASC,GAAmBC,EAAiBlB,IAC3C,SAASmB,EAAWznE,GAClB,OAAOwnE,EAAexnE,EACxB,CACA,SAAS0nE,EAAS1B,GAChB,MAAO,IAAIA,EAAIlrE,IAAK+L,GAAM6iB,KAAKC,IAAI,EAAGD,KAAKmH,IAAIhqB,EAAG,MAAM2J,SAAS,IAAI2zC,SAAS,EAAG,MAAM+K,KAAK,KAC9F,CACA,IAAIyY,EAoCJ,MAAO,CACL5wE,MAXF,SAASA,EAAMqzB,GACb,OAAQA,EAAM1yB,MACZ,IAAK,QACH,OAAO+vE,EAAWr9C,EAAMpqB,MAC1B,IAAK,MACH,OAAO0nE,EAASt9C,EAAM47C,KACxB,IAAK,QACH,OAVN,SAAS4B,EAAW79D,GAClB,OAvBF,SAAS89D,IACP,GAAIF,EACF,OAAOA,EAETA,EAAa,GACb,QAAS1qD,EAAI,EAAGA,EAAIuoD,GAAY9qE,OAAQuiB,IACtC0qD,EAAWzpE,KAAKupE,EAAWjC,GAAYvoD,KAEzC,IAAI6qD,EAAS,CAAC,EAAG,GAAI,IAAK,IAAK,IAAK,KACpC,QAASvkB,EAAI,EAAGA,EAAI,EAAGA,IACrB,QAASwkB,EAAI,EAAGA,EAAI,EAAGA,IACrB,QAASl6B,EAAI,EAAGA,EAAI,EAAGA,IACrB85B,EAAWzpE,KAAKwpE,EAAS,CAACI,EAAOvkB,GAAIukB,EAAOC,GAAID,EAAOj6B,MAI7D,IAAIm6B,EAAQ,EACZ,QAAS/qD,EAAI,EAAGA,EAAI,GAAIA,IAAK+qD,GAAS,GACpCL,EAAWzpE,KAAKwpE,EAAS,CAACM,EAAOA,EAAOA,KAE1C,OAAOL,CACT,CAESE,GAAgB99D,EACzB,CAQa69D,CAAWx9C,EAAMrgB,OAE9B,EAIF,CAuEA,MAAMk+D,UAAmBhgB,MACrB3xD,YAAY4xE,GACRxvE,MAAMwvE,GACNzxE,KAAKuJ,KAAO,YAChB,EAQJ,MAAMmoE,GACFC,OACA7D,KACAjC,MACAhsE,YAAY8xE,EAAQ7D,EAAMjC,GACtB7rE,KAAK2xE,OAASA,EACd3xE,KAAK8tE,KAAOA,EACZ9tE,KAAK6rE,MAAQA,CACjB,CACA,UAAI7Q,GACA,OAUR,SAAS4W,GAAUxR,GACf,MAAMpF,EAAS,GACT6W,EAAU,IAAIt0D,IAWpBu0D,OAVA,SAASA,EAAU1R,GACf,GAAIyR,EAAQ3zD,IAAIkiD,GACZ,OACJyR,EAAQtzD,IAAI6hD,GACZ,MAAM72D,EAAO62D,GAAOgD,gBAAgBnT,UAChC1mD,GACAyxD,EAAOvzD,KAAK8B,GACZ62D,EAAMzzD,QACNmlE,EAAU1R,EAAMzzD,OACxB,CACAmlE,CAAU1R,GACHpF,CACX,CAzBe4W,CAAU5xE,KAAK2xE,OAC1B,CACAI,SACI,MAAO,CACHjE,KAAM9tE,KAAK8tE,KACXjC,MAAO7rE,KAAK6rE,MACZ7Q,OAAQh7D,KAAKg7D,OAErB,EA4BJ,SAASgX,GAAiBC,EAAUxE,EAAMt5D,EAAU,CAAC,GACjD,MAAQ25D,OAAO,OAAQjC,MAAO4C,EAAYwD,EAASC,kBAAkB,IAAQ/9D,EAC7E,GAAI05D,GAAYC,IAASE,GAAYS,GACjC,OAAOjB,GAAWC,GAAMppE,IAAIsvD,GAAQ,CAAC,CAAEl5C,QAASk5C,EAAK,GAAIpf,OAAQof,EAAK,MAC1E,MAAQkY,QAAOlR,YAAasX,EAASnG,SAAS2C,GAC9C,GAAa,SAATX,EACA,OArIR,SAASqE,GAAsBtG,EAAOuG,EAAcj+D,GAChD,MAAMq6D,EAAoBF,GAAyBzC,EAAO13D,GACpDy5D,EAAQJ,GAAW4E,GACnBC,EAAevB,GAAmB/sE,OAAOkmD,YAAY8kB,GAAY1qE,IAAIkF,GAAQ,CAC/EA,EACAsiE,EAAMyG,SAAS,gBAAgB/oE,EAAK,GAAGgmD,gBAAgBhmD,EAAK66C,UAAU,UAEpEmuB,EA7HV,SAASC,KACP,IAAItkB,EAAa,KACbE,EAAa,KACbqkB,EAA+B,IAAIl1D,IACvC,MAAO,CACL8rC,MAAM/oD,GACJ,MAAM4mE,EAAS,GACf,IAAI1sD,EAAW,EACf,EAAG,CACD,MAAMk4D,EAAazD,GAAa3uE,EAAOka,GACjCm4D,EAAOD,EAAWtD,SAAW9uE,EAAM8jD,UAAU5pC,EAAUk4D,EAAWrY,eAAiB/5D,EAAM8jD,UAAU5pC,GASzG,GARIm4D,EAAK1uE,OAAS,GAChBijE,EAAOz/D,KAAK,CACVnH,MAAOqyE,EACPzkB,aACAE,aACA4gB,YAAa,IAAIzxD,IAAIk1D,KAGrBC,EAAWtD,SAAU,CACvB,MAAMM,EAAWD,GAAciD,EAAWtD,UAC1C,UAAWwD,KAAclD,EACC,aAApBkD,EAAW3xE,MACbitD,EAAa,KACbE,EAAa,KACbqkB,EAAa7rC,SACgB,yBAApBgsC,EAAW3xE,KACpBitD,EAAa,KACgB,yBAApB0kB,EAAW3xE,KACpBmtD,EAAa,KACgB,oBAApBwkB,EAAW3xE,MACpBwxE,EAAazmD,OAAO4mD,EAAWtyE,OAGnC,UAAWsyE,KAAclD,EACC,uBAApBkD,EAAW3xE,KACbitD,EAAa0kB,EAAWtyE,MACK,uBAApBsyE,EAAW3xE,KACpBmtD,EAAawkB,EAAWtyE,MACK,kBAApBsyE,EAAW3xE,MACpBwxE,EAAal0D,IAAIq0D,EAAWtyE,MAGlC,CACAka,EAAWk4D,EAAWl4D,QACxB,OAASA,EAAWla,EAAM2D,QAC1B,OAAOijE,CACT,EAEJ,CA4EmBsL,GACf,OAAO5E,EAAMvpE,IAAIsvD,GAAQ4e,EAAOlpB,MAAMsK,EAAK,IAAItvD,IAAKsU,IAChD,IAAIgb,EACAk7C,EACAl2D,EAAMq2D,YAAY9wD,IAAI,YACtByV,EAAQhb,EAAMy1C,WAAaikB,EAAa/xE,MAAMqY,EAAMy1C,YAAcyd,EAAMgH,GACxEhE,EAAUl2D,EAAMu1C,WAAamkB,EAAa/xE,MAAMqY,EAAMu1C,YAAc2d,EAAMiH,KAG1En/C,EAAQhb,EAAMu1C,WAAamkB,EAAa/xE,MAAMqY,EAAMu1C,YAAc2d,EAAMiH,GACxEjE,EAAUl2D,EAAMy1C,WAAaikB,EAAa/xE,MAAMqY,EAAMy1C,iBAAchoD,GAExEutB,EAAQg7C,GAAuBh7C,EAAO66C,GACtCK,EAAUF,GAAuBE,EAASL,GACtC71D,EAAMq2D,YAAY9wD,IAAI,SACtByV,EAoBZ,SAASo/C,GAASp/C,GACd,MAAMq/C,EAAWr/C,EAAM63B,MAAM,8CAC7B,GAAIwnB,EACA,IAAIA,EAAS,GAAI,CAEb,MAAMC,EAAQhgD,KAAKigD,MAAMl2D,OAAO6G,SAASmvD,EAAS,GAAI,IAAM,GACvDj5D,SAAS,IACT2zC,SAAS,EAAG,KACjB,MAAO,IAAIslB,EAAS,KAAKA,EAAS,KAAKC,GAC3C,CACK,OAAID,EAAS,GAEP,IAAIA,EAAS,KAAKA,EAAS,OAI3B,IAAIptE,MAAMnC,KAAKuvE,EAAS,IAC1B3uE,IAAI+L,GAAK,GAAGA,IAAIA,KAChBqoD,KAAK,OAAG,CAGrB,MAAM0a,EAAcx/C,EAAM63B,MAAM,iCAChC,OAAI2nB,EACO,OAAOA,EAAY,UACvBx/C,CACX,CA7CoBo/C,CAASp/C,IACrB,IAAIq6B,EAAYnD,EAAUE,KAC1B,OAAIpyC,EAAMq2D,YAAY9wD,IAAI,UACtB8vC,GAAanD,EAAUI,MACvBtyC,EAAMq2D,YAAY9wD,IAAI,YACtB8vC,GAAanD,EAAUG,QACvBryC,EAAMq2D,YAAY9wD,IAAI,eACtB8vC,GAAanD,EAAUK,WACpB,CACHzwC,QAAS9B,EAAMrY,MACfi0C,OAAQof,EAAK,GACbhgC,QACAk7C,UACA7gB,YACJ,GAER,CA+FemkB,CAAsBtG,EAAO4B,EAAMt5D,GAC9C,MAAMyxD,EAAWqM,EAASmB,YAAYtF,GACtC,GAAI35D,EAAQk/D,aAAc,CACtB,GAAIl/D,EAAQk/D,aAAavF,OAASlI,EAASr8D,KACvC,MAAM,IAAIioE,EAAW,2BAA2Br9D,EAAQk/D,aAAavF,4CAA4ClI,EAASr8D,SAE9H,GAAI4K,EAAQk/D,aAAaxH,QAAU4C,EAC/B,MAAM,IAAI+C,EAAW,wBAAwBr9D,EAAQk/D,aAAaxH,0CAA0C4C,KAEpH,CACA,OAYJ,SAAS6E,GAAkB7F,EAAMvZ,EAAS2X,EAAOlR,EAAUxmD,GACvD,OAAOo/D,GAAmB9F,EAAMvZ,EAAS2X,EAAOlR,EAAUxmD,GAAS+yD,MACvE,CAdWoM,CAAkB7F,EAAM7H,EAAUiG,EAAOlR,EAAUxmD,EAC9D,CAcA,SAASo/D,GAAmB9F,EAAMvZ,EAAS2X,EAAOlR,EAAUxmD,GACxD,MAAMq6D,EAAoBF,GAAyBzC,EAAO13D,IAClDq/D,wBAAwB,EAAGC,oBAAoB,KAASt/D,EAC1Dy5D,EAAQJ,GAAWC,GACzB,IAAIiG,EAAav/D,EAAQk/D,aA7C7B,SAASM,GAAgBnjD,GACrB,KAAMA,aAAiBkhD,IACnB,MAAM,IAAIF,EAAW,yBAEzB,OAAOhhD,EAAMmhD,MACjB,CAyCUgC,CAAgBx/D,EAAQk/D,cACM,MAA9Bl/D,EAAQy/D,mBACJL,GAAmBp/D,EAAQy/D,mBAAoB1f,EAAS2X,EAAOlR,EAAU,IACpExmD,EACHk/D,kBAAcjtE,EACdwtE,wBAAoBxtE,IACrBstE,WACDpG,GACNuG,EAAS,GACb,MAAMC,EAAQ,GACRC,EAAyB,GAC/B,GAAI5/D,EAAQ6/D,mBACR,UAAWC,KAAWpI,EAAM/Q,SAAU,CAClC,IAAIj4D,EACJ,cAAeoxE,EAAQ/Y,OACnB,IAAK,SACDr4D,EAAYoxE,EAAQ/Y,MAAMlrD,MAAM,KAAK3L,IAAI62D,GAASA,EAAMv5C,QACxD,MACJ,IAAK,SACD9e,EAAYoxE,EAAQ/Y,MACpB,MACJ,QACI,SAER6Y,EAAuBtsE,KAAK,CACxBqzD,SAAUmZ,EACVpxE,UAAWA,EAAUwB,IAAIqwC,GAAYA,EAAS1kC,MAAM,OAE5D,CAEJ,QAASwW,EAAI,EAAGumC,EAAM6gB,EAAM3pE,OAAQuiB,EAAIumC,EAAKvmC,IAAK,CAC9C,MAAOmtC,EAAMugB,GAActG,EAAMpnD,GACjC,GAAa,KAATmtC,EAAa,CACbkgB,EAAS,GACTC,EAAMrsE,KAAK,IACX,QACJ,CAEA,GAAI+rE,EAAwB,GAAK7f,EAAK1vD,QAAUuvE,EAAuB,CACnEK,EAAS,GACTC,EAAMrsE,KAAK,CAAC,CACJgT,QAASk5C,EACTpf,OAAQ2/B,EACRvgD,MAAO,GACPq6B,UAAW,KAEnB,QACJ,CACA,IAAImmB,EACAC,EACAC,EACAlgE,EAAQ6/D,qBACRG,EAAmBjgB,EAAQ6S,aAAapT,EAAM+f,GAC9CU,EAAmBD,EAAiBjN,OACpCmN,EAAwB,GAE5B,MAAM9uE,EAAS2uD,EAAQmT,cAAc1T,EAAM+f,EAAYD,GACjDa,EAAe/uE,EAAO2hE,OAAOjjE,OAAS,EAC5C,QAASo3D,EAAI,EAAGA,EAAIiZ,EAAcjZ,IAAK,CACnC,MAAMgQ,EAAa9lE,EAAO2hE,OAAO,EAAI7L,GAC/BkZ,EAAiBlZ,EAAI,EAAIiZ,EAAe/uE,EAAO2hE,OAAO,EAAI7L,EAAI,GAAK1H,EAAK1vD,OAC9E,GAAIonE,IAAekJ,EACf,SACJ,MAAMnL,EAAW7jE,EAAO2hE,OAAO,EAAI7L,EAAI,GACjC1nC,GAAQg7C,GAAuBhU,EAAS4S,GAAqBpf,cAAcib,IAAYoF,GACvFxgB,GAAYuf,GAAqBtf,aAAamb,GAC9CzwD,GAAQ,CACV8B,QAASk5C,EAAKvP,UAAUinB,EAAYkJ,GACpChgC,OAAQ2/B,EAAa7I,EACrB13C,SACAq6B,cAEJ,GAAI75C,EAAQ6/D,mBAAoB,CAC5Br7D,GAAM67D,YAAc,GACpB,IAAIjgC,GAAS,EACb,KAAO82B,EAAa92B,GAASggC,GAAgB,CACzC,MAAME,GAAkBL,EAAiBC,GACnCK,GAAsB/gB,EAAKvP,UAAUqwB,GAAgBpJ,WAAYoJ,GAAgBtJ,UACvF52B,IAAUmgC,GAAoBzwE,OAC9B0U,GAAM67D,YAAY/sE,KAAK,CACnBgT,QAASi6D,GACT1Z,OAAQ2Z,GAAmBZ,EAAwBU,GAAgBzZ,UAEvEqZ,GAAyB,CAC7B,CACJ,CACAR,EAAOpsE,KAAKkR,GAChB,CACAm7D,EAAMrsE,KAAKosE,GACXA,EAAS,GACTH,EAAanuE,EAAO6hE,SACxB,CACA,MAAO,CACHF,OAAQ4M,EACRJ,aAER,CACA,SAASiB,GAAmBC,EAAgB5Z,GACxC,MAAMz1D,EAAS,GACf,QAASihB,EAAI,EAAGumC,EAAMiO,EAAO/2D,OAAQuiB,EAAIumC,EAAKvmC,IAAK,CAC/C,MAAM+0C,EAAeP,EAAOjqD,MAAM,EAAGyV,GAC/B00C,EAAQF,EAAOx0C,GACrBjhB,EAAOihB,GAAK,CACRypC,UAAWiL,EACX2Z,aAAcC,GAAkBF,EAAgB1Z,EAAOK,GAE/D,CACA,OAAOh2D,CACX,CACA,SAASwvE,GAAWrgC,EAAUwmB,GAC1B,OAAOxmB,IAAawmB,GACZA,EAAM9W,UAAU,EAAG1P,EAASzwC,UAAYywC,GAAuC,MAA3BwmB,EAAMxmB,EAASzwC,OAC/E,CACA,SAAS4a,GAAQhc,EAAWq4D,EAAOK,GAC/B,IAAKwZ,GAAWlyE,EAAUA,EAAUoB,OAAS,GAAIi3D,GAC7C,OAAO,EACX,IAAI8Z,EAAsBnyE,EAAUoB,OAAS,EACzCgxE,EAAc1Z,EAAat3D,OAAS,EACxC,KAAO+wE,GAAuB,GAAKC,GAAe,GAC1CF,GAAWlyE,EAAUmyE,GAAsBzZ,EAAa0Z,MACxDD,GAAuB,GAC3BC,GAAe,EAEnB,OAA4B,IAAxBD,CAGR,CACA,SAASF,GAAkBf,EAAwB7Y,EAAOK,GACtD,MAAMh2D,EAAS,GACf,UAAa1C,YAAWi4D,cAAciZ,EAClC,UAAWmB,KAAkBryE,EACzB,GAAIgc,GAAQq2D,EAAgBha,EAAOK,GAAe,CAC9Ch2D,EAAOkC,KAAKqzD,GACZ,KACJ,CAGR,OAAOv1D,CACX,CAKA,SAAS4vE,GAAuBlD,EAAUxE,EAAMt5D,GAC5C,MAAMihE,EAASrxE,OAAOu7D,QAAQnrD,EAAQihE,QACjCtwE,OAAO0hB,GAAKA,EAAE,IACdniB,IAAImiB,KAAQmN,MAAOnN,EAAE,GAAIqlD,MAAOrlD,EAAE,MACjC0gD,EAoCV,SAASmO,MAA0BD,GAC/B,MAAME,EAAYF,EAAO/wE,IAAI,IAAM,IAC7BgY,EAAQ+4D,EAAOnxE,OACrB,QAASuiB,EAAI,EAAGA,EAAI4uD,EAAO,GAAGnxE,OAAQuiB,IAAK,CACvC,MAAMonD,EAAQwH,EAAO/wE,IAAIkxE,GAAKA,EAAE/uD,IAC1BgvD,EAAWF,EAAUjxE,IAAI,IAAM,IACrCixE,EAAUzxE,QAAQ,CAAC0xE,EAAG/uD,IAAM+uD,EAAE9tE,KAAK+tE,EAAShvD,KAC5C,MAAMivD,EAAU7H,EAAMvpE,IAAI,IAAM,GAC1BiD,EAAUsmE,EAAMvpE,IAAIqxE,GAAKA,EAAE,IACjC,KAAOpuE,EAAQilD,MAAMgpB,GAAKA,IAAI,CAC1B,MAAMI,EAAY1iD,KAAKmH,OAAO9yB,EAAQjD,IAAIkxE,GAAKA,EAAE96D,QAAQxW,SACzD,QAAS2xE,EAAI,EAAGA,EAAIv5D,EAAOu5D,IAAK,CAC5B,MAAMj9D,EAAQrR,EAAQsuE,GAClBj9D,EAAM8B,QAAQxW,SAAW0xE,GACzBH,EAASI,GAAGnuE,KAAKkR,GACjB88D,EAAQG,IAAM,EACdtuE,EAAQsuE,GAAKhI,EAAMgI,GAAGH,EAAQG,MAG9BJ,EAASI,GAAGnuE,KAAK,IACVkR,EACH8B,QAAS9B,EAAM8B,QAAQ1J,MAAM,EAAG4kE,KAEpCruE,EAAQsuE,GAAK,IACNj9D,EACH8B,QAAS9B,EAAM8B,QAAQ1J,MAAM4kE,GAC7BphC,OAAQ57B,EAAM47B,OAASohC,GAGnC,CACJ,CACJ,CACA,OAAOL,CACX,CArEmBD,IAA0BD,EAAO/wE,IAAIkxE,GAAKvD,GAAiBC,EAAUxE,EAAM,IACnFt5D,EACH03D,MAAO0J,EAAE1J,UAmBb,OAjBqB3E,EAAO,GACvB7iE,IAAI,CAACsvD,EAAMkiB,IAAYliB,EACvBtvD,IAAI,CAACyxE,EAAQC,KACd,MAAMC,EAAc,CAChBv7D,QAASq7D,EAAOr7D,QAChBw7D,SAAU,CAAC,EACX1hC,OAAQuhC,EAAOvhC,QAEnB,MAAI,uBAAwBpgC,GAAWA,EAAQ6/D,qBAC3CgC,EAAYxB,YAAcsB,EAAOtB,aAErCtN,EAAOrjE,QAAQ,CAAC0xE,EAAGW,KACf,MAAQz7D,QAASva,EAAGs0E,YAAa2B,EAAI5hC,OAAQ6hC,KAAQ96C,GAAWi6C,EAAEM,GAASE,GAC3EC,EAAYC,SAASb,EAAOc,GAAUviD,OAAS2H,IAE5C06C,IAGf,CAsDA,SAASK,GAAapE,EAAUxE,EAAMt5D,GAClC,IAAI0+D,EACAC,EACA5L,EACAuH,EACAjG,EACJ,GAAI,WAAYr0D,EAAS,CACrB,MAAQmiE,eAAe,QAASC,oBAAoB,YAAgBpiE,EAC9DihE,EAASrxE,OAAOu7D,QAAQnrD,EAAQihE,QACjCtwE,OAAO0hB,GAAKA,EAAE,IACdniB,IAAImiB,KAAQmN,MAAOnN,EAAE,GAAIqlD,MAAOrlD,EAAE,MAClCo1C,KAAK,CAACzkB,EAAGC,IAAMD,EAAExjB,QAAU2iD,GAAe,EAAKl/B,EAAEzjB,QAAU2iD,EAAe,EAAI,GACnF,GAAsB,IAAlBlB,EAAOnxE,OACP,MAAM,IAAIutE,EAAW,qCACzB,MAAMgF,EAAcrB,GAAuBlD,EAAUxE,EAAMt5D,GAC3D,GAAImiE,IAAiBlB,EAAOp0B,KAAKu0B,GAAKA,EAAE5hD,QAAU2iD,GAC9C,MAAM,IAAI9E,EAAW,yDAAyD8E,OAClF,MAAMG,EAAYrB,EAAO/wE,IAAIkxE,GAAKtD,EAASyE,SAASnB,EAAE1J,QAChD8K,EAAcvB,EAAO/wE,IAAIkxE,GAAKA,EAAE5hD,OACtCuzC,EAASsP,EACJnyE,IAAIsvD,GAAQA,EAAKtvD,IAAIsU,GA8BlC,SAASi+D,GAAWC,EAAQC,EAAeP,EAAmBD,GAC1D,MAAM39D,EAAQ,CACV8B,QAASo8D,EAAOp8D,QAChB+5D,YAAaqC,EAAOrC,YACpBjgC,OAAQsiC,EAAOtiC,QAEbjZ,EAASw7C,EAAczyE,IAAIkxE,GAAK3G,GAAoBiI,EAAOZ,SAASV,KAEpEwB,EAAY,IAAIx5D,IAAI+d,EAAO6uB,QAAQorB,GAAKxxE,OAAOC,KAAKuxE,KACpDyB,EAAe17C,EAAOrrB,OAAO,CAACgnE,EAAKC,EAAK9pB,KAC1C,UAAW/sD,KAAO02E,EAAW,CACzB,MAAMz2E,EAAQ42E,EAAI72E,IAAQ,UAC1B,GAAY,IAAR+sD,GAAakpB,EACbW,EAAI52E,GAAOC,MAEV,CACD,MACM62E,EAASZ,EAAoBO,EAAc1pB,IAAgB,UAAR/sD,GADjC,UAARA,EAC2D,GAD5B,qBAARA,EAA6B,MAAQ,IAAIA,KAE5E42E,EAAI52E,GACJ42E,EAAI52E,IAAQ,IAAI82E,KAAU72E,IAE1B22E,EAAI52E,GAAO,GAAG82E,KAAU72E,GAChC,CACJ,CACA,OAAO22E,GACR,CAAC,GACJt+D,SAAM0uB,UAAYivC,EACZxH,GAAoBkI,GACpBjzE,OAAO4B,OAAOqxE,GAAcve,KAAK,KAChC9/C,CACX,CA5D2Ci+D,CAAWj+D,EAAOg+D,EAAaJ,EAAmBD,KACrF,MAAMc,EAAyBhC,EAAO/wE,IAAIkxE,GAAKjH,GAAyBiH,EAAE1J,MAAO13D,IACjF2+D,EAAKsC,EAAO/wE,IAAI,CAACkxE,EAAGnoB,KAAiB,IAARA,GAAakpB,EACpC,GACA,GAAGC,EAAoBhB,EAAE5hD,WAAag7C,GAAuB8H,EAAUrpB,GAAK0lB,GAAIsE,EAAuBhqB,KAAS,YAAYqL,KAAK,KACvIoa,EAAKuC,EAAO/wE,IAAI,CAACkxE,EAAGnoB,KAAiB,IAARA,GAAakpB,EACpC,GACA,GAAGC,EAAoBhB,EAAE5hD,cAAgBg7C,GAAuB8H,EAAUrpB,GAAKylB,GAAIuE,EAAuBhqB,KAAS,YAAYqL,KAAK,KAC1IgW,EAAY,gBAAgBgI,EAAUpyE,IAAIkxE,GAAKA,EAAEhsE,MAAMkvD,KAAK,OAC5D+P,EAAY8N,OAAelwE,EAAY,CAAC0sE,EAAID,GAAIpa,KAAK,IACzD,WACS,UAAWtkD,GAShB,MAAM,IAAIq9D,EAAW,gEATI,CACzB,MAAMhD,EAAoBF,GAAyBn6D,EAAQ03D,MAAO13D,EAAQq6D,mBAC1EtH,EAAS8K,GAAiBC,EAAUxE,EAAMt5D,GAC1C,MAAMy3D,EAASqG,EAASyE,SAASviE,EAAQ03D,OACzCgH,EAAKlE,GAAuB/C,EAAOiH,GAAIrE,GACvCsE,EAAKnE,GAAuB/C,EAAOkH,GAAItE,GACvCC,EAAY7C,EAAOriE,IACvB,CAEuF,CAEvF,MAAO,CACH29D,SACA4L,KACAD,KACApE,YACAjG,YAER,CAoCA,SAAS6O,KACL,MAAMhzE,EAAM,IAAIizE,QAChB,SAASC,EAAWC,GAChB,IAAKnzE,EAAI6Z,IAAIs5D,EAAMC,MAAO,CAEtB,IAASC,EAAT,SAA2BC,GACvB,MAAiB,iBAANA,EACA,IACAC,EAAUC,WAAWF,GACxBpjC,OAAQojC,GAIL,IACAA,EACHpjC,OAAQqjC,EAAUE,WAAWH,EAAEhkB,KAAMgkB,EAAEI,WAGnD,EAdA,MAAMH,EA5vBlB,SAASI,GAAwBvK,GAC7B,MAAMG,EAAQJ,GAAWC,GAAM,GAAMppE,IAAI,EAAEsvD,KAAUA,GAmBrD,MAAO,CACHia,QACAiK,WApBJ,SAASA,EAAWvkE,GAChB,IAAIykE,EAAYzkE,EACZqgD,EAAO,EACX,UAAWE,KAAY+Z,EAAO,CAC1B,GAAImK,EAAYlkB,EAAS5vD,OACrB,MACJ8zE,GAAalkB,EAAS5vD,OACtB0vD,GACJ,CACA,MAAO,CAAEA,OAAMokB,YACnB,EAWID,WAVJ,SAASA,EAAWnkB,EAAMokB,GACtB,IAAIzkE,EAAQ,EACZ,QAASkT,EAAI,EAAGA,EAAImtC,EAAMntC,IACtBlT,GAASs6D,EAAMpnD,GAAGviB,OACtBqP,UAASykE,EACFzkE,CACX,EAMJ,CAmuB8B0kE,CAAwBR,EAAMvsE,QAe1C+jE,GAAewI,EAAMrjE,QAAQ66D,aAAe,IAC7C3qE,IAAK4zE,QACHA,EACHx2C,MAAOi2C,EAAkBO,EAAEx2C,OAC3BD,IAAKk2C,EAAkBO,EAAEz2C,SAWrC,SAAS02C,EAAoBp2B,GACzB,QAASt7B,EAAI,EAAGA,EAAIs7B,EAAM79C,OAAQuiB,IAAK,CACnC,MAAM2xD,EAAMr2B,EAAMt7B,GAClB,GAAI2xD,EAAI12C,MAAM8S,OAAS4jC,EAAI32C,IAAI+S,OAC3B,MAAM,IAAIi9B,EAAW,6BAA6BpoB,KAAKO,UAAUwuB,EAAI12C,YAAY2nB,KAAKO,UAAUwuB,EAAI32C,QACxG,QAAS65B,EAAI70C,EAAI,EAAG60C,EAAIvZ,EAAM79C,OAAQo3D,IAAK,CACvC,MAAM+c,EAAMt2B,EAAMuZ,GAEZgd,EAAiBF,EAAI12C,MAAM8S,OAAS6jC,EAAI52C,IAAI+S,QAAU6jC,EAAI52C,IAAI+S,OAAS4jC,EAAI32C,IAAI+S,OAC/E+jC,EAAmBF,EAAI32C,MAAM8S,OAAS4jC,EAAI12C,MAAM8S,QAAU4jC,EAAI12C,MAAM8S,OAAS6jC,EAAI52C,IAAI+S,OACrFgkC,EAAiBH,EAAI32C,MAAM8S,OAAS4jC,EAAI32C,IAAI+S,QAAU4jC,EAAI32C,IAAI+S,OAAS6jC,EAAI52C,IAAI+S,OACrF,GAJyB4jC,EAAI12C,MAAM8S,OAAS6jC,EAAI32C,MAAM8S,QAAU6jC,EAAI32C,MAAM8S,OAAS4jC,EAAI32C,IAAI+S,QAInE8jC,GAAkBC,GAAoBC,EAAgB,CAG1E,GAFIF,GAAkBA,GAElBC,GAAoBC,EACpB,SACJ,MAAM,IAAI/G,EAAW,eAAepoB,KAAKO,UAAUwuB,EAAI12C,cAAc2nB,KAAKO,UAAUyuB,EAAI32C,oBAC5F,CACJ,CACJ,CACJ,EA7BQy2C,CAAoBlJ,GACpB3qE,EAAIwI,IAAI2qE,EAAMC,KAAM,CAChBzI,cACA4I,YACA3sE,OAAQusE,EAAMvsE,QAEtB,CACA,OAAO5G,EAAIyL,IAAI0nE,EAAMC,KACzB,CAsBA,MAAO,CACHluE,KAAM,oBACN29D,OAAOA,GACH,GAAKlnE,KAAKmU,QAAQ66D,aAAa/qE,OAK/B,OA92BZ,SAASu0E,GAAYtR,EAAQjmD,GACzB,MAAMw3D,EAAS7yE,MAAMnC,KAAKwd,aAAuB1D,IAAM0D,EAAc,IAAI1D,IAAI0D,IACxE26C,KAAK,CAACzkB,EAAGC,IAAMD,EAAIC,GACxB,OAAKqhC,EAAOx0E,OAELijE,EAAO7iE,IAAKsvD,GACRA,EAAKxJ,QAASxxC,IACjB,MAAM+/D,EAAqBD,EACtB3zE,OAAO0hB,GAAK7N,EAAM47B,OAAS/tB,GAAKA,EAAI7N,EAAM47B,OAAS57B,EAAM8B,QAAQxW,QACjEI,IAAImiB,GAAKA,EAAI7N,EAAM47B,QACnBqnB,KAAK,CAACzkB,EAAGC,IAAMD,EAAIC,GACxB,OAAKshC,EAAmBz0E,OApCpC,SAAS00E,GAAWhgE,EAAOigE,GACvB,IAAIC,EAAa,EACjB,MAAM3R,EAAS,GACf,UAAW3yB,KAAUqkC,EACbrkC,EAASskC,GACT3R,EAAOz/D,KAAK,IACLkR,EACH8B,QAAS9B,EAAM8B,QAAQ1J,MAAM8nE,EAAYtkC,GACzCA,OAAQ57B,EAAM47B,OAASskC,IAG/BA,EAAatkC,EAEjB,OAAIskC,EAAalgE,EAAM8B,QAAQxW,QAC3BijE,EAAOz/D,KAAK,IACLkR,EACH8B,QAAS9B,EAAM8B,QAAQ1J,MAAM8nE,GAC7BtkC,OAAQ57B,EAAM47B,OAASskC,IAGxB3R,CACX,CAiBmByR,CAAWhgE,EAAO+/D,GADd//D,KARRuuD,CAYf,CA61B6BsR,CAAYtR,EAFjBqQ,EAAWv3E,MACCgvE,YAAY7kB,QAAQ8tB,GAAK,CAACA,EAAEx2C,MAAM8S,OAAQ0jC,EAAEz2C,IAAI+S,SAG5E,EACAk5B,KAAKqL,GACD,IAAK94E,KAAKmU,QAAQ66D,aAAa/qE,OAC3B,OACJ,MAAMjB,EAAMu0E,EAAWv3E,MACjB4tE,EAAQhoE,MAAMnC,KAAKq1E,EAAO75E,UAAU6F,OAAO0hB,GAAgB,YAAXA,EAAEvlB,MAAoC,SAAdulB,EAAEuyD,SAChF,GAAInL,EAAM3pE,SAAWjB,EAAI40E,UAAUhK,MAAM3pE,OACrC,MAAM,IAAIutE,EAAW,oCAAoC5D,EAAM3pE,6DAA6DjB,EAAI40E,UAAUhK,MAAM3pE,yCACpJ,SAAS+0E,EAAiBrlB,EAAMlyB,EAAOD,EAAKouC,GACxC,MAAMqJ,EAASrL,EAAMja,GACrB,IAAIgf,EAAO,GACPtH,GAAa,EACbF,GAAW,EACf,SAASxhB,EAAUt2C,GACf,MAAgB,SAAZA,EAAGpS,KACIoS,EAAG/S,MACE,YAAZ+S,EAAGpS,KACIoS,EAAGpU,SAASoF,IAAIslD,GAAW8O,KAAK,IACpC,EACX,CAOA,GANc,IAAVh3B,IACA4pC,EAAa,GACL,IAAR7pC,IACA2pC,EAAW,GACX3pC,IAAQxkB,OAAOk8D,oBACf/N,EAAW8N,EAAOh6E,SAASgF,SACZ,IAAfonE,IAAkC,IAAbF,EACrB,QAAS3kD,EAAI,EAAGA,EAAIyyD,EAAOh6E,SAASgF,OAAQuiB,IACxCmsD,GAAQhpB,EAAUsvB,EAAOh6E,SAASunB,KACf,IAAf6kD,GAAqBsH,EAAK1uE,SAAWw9B,IACrC4pC,EAAa7kD,EAAI,IACJ,IAAb2kD,GAAmBwH,EAAK1uE,SAAWu9B,IACnC2pC,EAAW3kD,EAAI,GAG3B,IAAmB,IAAf6kD,EACA,MAAM,IAAImG,EAAW,6CAA6CpoB,KAAKO,UAAUimB,EAAWnuC,UAChG,IAAiB,IAAb0pC,EACA,MAAM,IAAIqG,EAAW,2CAA2CpoB,KAAKO,UAAUimB,EAAWpuC,QAC9F,MAAMviC,EAAWg6E,EAAOh6E,SAAS8R,MAAMs6D,EAAYF,GAEnD,GAAKyE,EAAWuJ,YAAcl6E,EAASgF,SAAWg1E,EAAOh6E,SAASgF,OACpB,GAGpC2rE,EAAWuJ,YAAkC,IAApBl6E,EAASgF,QAAqC,YAArBhF,EAAS,GAAGgC,KAInE,CACD,MAAMm4E,EAAU,CACZn4E,KAAM,UACN83E,QAAS,OACT5K,WAAY,CAAC,EACblvE,YAEJo6E,EAAgBD,EAASxJ,EAAY,WACrCqJ,EAAOh6E,SAASuU,OAAO63D,EAAYpsE,EAASgF,OAAQm1E,EACxD,MAZIC,EAAgBp6E,EAAS,GAAI2wE,EAAY,cAJzCyJ,EAAgBJ,EAAQrJ,EAAY,OAiB5C,CACA,SAAS0J,EAAU3lB,EAAMic,GACrBhC,EAAMja,GAAQ0lB,EAAgBzL,EAAMja,GAAOic,EAAY,OAC3D,CACA,SAASyJ,EAAgBhmE,EAAIu8D,EAAY3uE,GACrC,MAAMktE,EAAayB,EAAWzB,YAAc,CAAC,EACvCj6C,EAAY07C,EAAW17C,YAAc1N,GAAKA,GAChDnT,SAAG0lE,QAAUnJ,EAAWmJ,SAAW,OACnC1lE,EAAG86D,WAAa,IACT96D,EAAG86D,cACHA,EACHC,MAAO/6D,EAAG86D,WAAWC,OAErBwB,EAAWzB,YAAYC,OACvBF,GAAe76D,EAAIu8D,EAAWzB,WAAWC,OACxCl6C,EAAU7gB,EAAIpS,IAASoS,CAEhC,CACA,MAAMkmE,EAAc,GAEdd,EAASz1E,EAAIgsE,YAAYpT,KAAK,CAACzkB,EAAGC,IAAMA,EAAE3V,MAAM8S,OAAS4C,EAAE1V,MAAM8S,QACvE,UAAWq7B,KAAc6I,EAAQ,CAC7B,MAAQh3C,QAAOD,OAAQouC,EACvB,GAAInuC,EAAMkyB,OAASnyB,EAAImyB,KACnBqlB,EAAiBv3C,EAAMkyB,KAAMlyB,EAAMs2C,UAAWv2C,EAAIu2C,UAAWnI,QAAU,GAElEnuC,EAAMkyB,KAAOnyB,EAAImyB,KAAM,CAC5BqlB,EAAiBv3C,EAAMkyB,KAAMlyB,EAAMs2C,UAAW/6D,OAAOk8D,kBAAmBtJ,GACxE,QAASppD,EAAIib,EAAMkyB,KAAO,EAAGntC,EAAIgb,EAAImyB,KAAMntC,IACvC+yD,EAAYpjB,QAAQ,IAAMmjB,EAAU9yD,EAAGopD,IAC3CoJ,EAAiBx3C,EAAImyB,KAAM,EAAGnyB,EAAIu2C,UAAWnI,EACjD,CACJ,CACA2J,EAAY11E,QAAQ2iB,GAAKA,IAC7B,EAER,CAEA,MAAMgzD,GAAsB,CACRnC,MAEpB,SAASoC,GAAgBtlE,GACrB,MAAO,IACAA,EAAQulE,cAAgB,MACxBF,GAEX,CAEA,SAASG,GAAW1H,EAAUxE,EAAMt5D,EAASylE,EAAqB,CAC9DnC,KAAM,CAAC,EACPtjE,UACAwlE,WAAYA,CAACE,EAAO7wD,IAAa2wD,GAAW1H,EAAU4H,EAAO7wD,GAC7DqtD,aAAcA,CAACwD,EAAO7wD,IAAaqtD,GAAapE,EAAU4H,EAAO7wD,KAEjE,IAAIgwB,EAAQy0B,EACZ,UAAWqM,KAAeL,GAAgBtlE,GACtC6kC,EAAQ8gC,EAAYC,YAAYC,KAAKJ,EAAoB5gC,EAAO7kC,IAAY6kC,EAChF,IAAMkuB,SAAQ4L,KAAID,KAAIpE,YAAWjG,aAAe6N,GAAapE,EAAUj5B,EAAO7kC,GAC9E,MAAQ8lE,oBAAmB,GAAU9lE,GACZ,IAArB8lE,EACA/S,EA4HR,SAASgT,GAAsBhT,GAC3B,OAAOA,EAAO7iE,IAAKsvD,IACf,MAAMwmB,EAAU,GAChB,IAAIC,EAAiB,GACjBC,EAAc,EAClB1mB,SAAK9vD,QAAQ,CAAC8U,EAAOy0C,KAEjB,MAAMktB,IADc3hE,EAAMq1C,WAAar1C,EAAMq1C,UAAYnD,EAAUK,WAE/DovB,GAAc3hE,EAAM8B,QAAQ+wC,MAAM,UAAYmI,EAAKvG,EAAM,IACpDitB,IACDA,EAAc1hE,EAAM47B,QACxB6lC,GAAkBzhE,EAAM8B,SAGpB2/D,GACIE,EACAH,EAAQ1yE,KAAK,IACNkR,EACH47B,OAAQ8lC,EACR5/D,QAAS2/D,EAAiBzhE,EAAM8B,UAIpC0/D,EAAQ1yE,KAAK,CACTgT,QAAS2/D,EACT7lC,OAAQ8lC,GACT1hE,GAEP0hE,EAAc,EACdD,EAAiB,IAGjBD,EAAQ1yE,KAAKkR,EAAK,GAIvBwhE,GAEf,CAlKiBD,CAAsBhT,GACL,UAArB+S,IACL/S,EAiKR,SAASqT,GAAsBrT,GAC3B,OAAOA,EAAO7iE,IAAKsvD,GACRA,EAAKxJ,QAASxxC,IACjB,GAAIA,EAAM8B,QAAQ+wC,MAAM,SACpB,OAAO7yC,EAEX,MAAM6yC,EAAQ7yC,EAAM8B,QAAQ+wC,MAAM,qBAClC,IAAKA,EACD,OAAO7yC,EACX,MAAM,CAAG6hE,EAAS//D,EAASggE,GAAYjvB,EACvC,IAAKgvB,IAAYC,EACb,OAAO9hE,EACX,MAAM+hE,EAAW,CAAC,IACP/hE,EACH47B,OAAQ57B,EAAM47B,OAASimC,EAAQv2E,OAC/BwW,YAER,OAAI+/D,GACAE,EAASvkB,QAAQ,CACb17C,QAAS+/D,EACTjmC,OAAQ57B,EAAM47B,SAGlBkmC,GACAC,EAASjzE,KAAK,CACVgT,QAASggE,EACTlmC,OAAQ57B,EAAM47B,OAASimC,EAAQv2E,OAASwW,EAAQxW,SAGjDy2E,IAGnB,CAjMiBH,CAAsBrT,IACnC,MAAMyT,EAAgB,IACff,EACH,UAAI3uE,GACA,OAAO+tC,CACX,GAEJ,UAAW8gC,KAAeL,GAAgBtlE,GACtC+yD,EAAS4S,EAAY5S,QAAQ8S,KAAKW,EAAezT,IAAWA,EAChE,OAQJ,SAAS0T,GAAa1T,EAAQ/yD,EAASylE,GACnC,MAAMF,EAAeD,GAAgBtlE,GAC/By5D,EAAQ,GACRz9D,EAAO,CACTlP,KAAM,OACNhC,SAAU,KAEN47E,YAAY,WAAe1mE,EACnC,IAAI2mE,EAAU,CACV75E,KAAM,UACN83E,QAAS,MACT5K,WAAY,CACRC,MAAO,SAASj6D,EAAQs6D,WAAa,KACrC90D,MAAOxF,EAAQq0D,WAAa,oBAAoBr0D,EAAQ0+D,YAAY1+D,EAAQ2+D,KAC5EiI,SAAU,OACPh3E,OAAOkmD,YAAYrkD,MAAMnC,KAAKM,OAAOu7D,QAAQnrD,EAAQsjE,MAAQ,CAAC,IAC5D3yE,OAAO,EAAEzE,MAAUA,EAAIi9D,WAAW,QAE3Cr+D,SAAU,IAEV+7E,EAAW,CACX/5E,KAAM,UACN83E,QAAS,OACT5K,WAAY,CAAC,EACblvE,SAAU2uE,GAEd,MAAMqN,EAAY,GACZh3C,EAAU,IACT21C,EACHiB,YACA3M,kBACA,UAAIjjE,GACA,OAAO2uE,EAAmB3uE,MAC9B,EACA,UAAIi8D,GACA,OAAOA,CACX,EACA,WAAI/yD,GACA,OAAOA,CACX,EACA,QAAIhE,GACA,OAAOA,CACX,EACA,OAAI+qE,GACA,OAAOJ,CACX,EACA,QAAIrN,GACA,OAAOuN,CACX,EACA,SAAIpN,GACA,OAAOqN,CACX,GAyCJ,GAvCA/T,EAAOrjE,QAAQ,CAAC8vD,EAAMvG,KACdA,IACkB,WAAdytB,EACA1qE,EAAKlR,SAASwI,KAAK,CAAExG,KAAM,UAAW83E,QAAS,KAAM5K,WAAY,CAAC,EAAGlvE,SAAU,KAC5D,YAAd47E,GACLjN,EAAMnmE,KAAK,CAAExG,KAAM,OAAQX,MAAO,QAE1C,IAAI66E,EAAW,CACXl6E,KAAM,UACN83E,QAAS,OACT5K,WAAY,CAAEC,MAAO,QACrBnvE,SAAU,IAEVm8E,EAAM,EACV,UAAWziE,KAASg7C,EAAM,CACtB,IAAI0nB,EAAY,CACZp6E,KAAM,UACN83E,QAAS,OACT5K,WAAY,CAAC,EACblvE,SAAU,CAAC,CAAEgC,KAAM,OAAQX,MAAOqY,EAAM8B,WAE5C,MAAMd,EAAQhB,EAAM0uB,WAAaynC,GAAoBF,GAAoBj2D,IACrEgB,IACA0hE,EAAUlN,WAAWx0D,MAAQA,GACjC,UAAWmgE,KAAeJ,EACtB2B,EAAYvB,GAAawB,MAAMtB,KAAK/1C,EAASo3C,EAAWjuB,EAAM,EAAGguB,EAAKD,IAAaE,EACrE,WAAdR,EACA1qE,EAAKlR,SAASwI,KAAK4zE,GACA,YAAdR,GACLM,EAASl8E,SAASwI,KAAK4zE,GAC3BD,GAAOziE,EAAM8B,QAAQxW,MACzB,CACA,GAAkB,YAAd42E,EAAyB,CACzB,UAAWf,KAAeJ,EACtByB,EAAWrB,GAAanmB,MAAMqmB,KAAK/1C,EAASk3C,EAAU/tB,EAAM,IAAM+tB,EACtEF,EAAUxzE,KAAK0zE,GACfvN,EAAMnmE,KAAK0zE,EACf,IAEc,YAAdN,EAAyB,CACzB,UAAWf,KAAeJ,EACtBsB,EAAWlB,GAAarM,MAAMuM,KAAK/1C,EAAS+2C,IAAaA,EAC7DF,EAAQ77E,SAASwI,KAAKuzE,GACtB,UAAWlB,KAAeJ,EACtBoB,EAAUhB,GAAaoB,KAAKlB,KAAK/1C,EAAS62C,IAAYA,EAC1D3qE,EAAKlR,SAASwI,KAAKqzE,EACvB,CACA,IAAIv1E,EAAS4K,EACb,UAAW2pE,KAAeJ,EACtBn0E,EAASu0E,GAAa3pE,MAAM6pE,KAAK/1C,EAAS1+B,IAAWA,EACzD,OAAOA,CACX,CAhHWq1E,CAAa1T,EAAQ,IACrB/yD,EACH2+D,KACAD,KACApE,YACAjG,aACDmS,EACP,CAwLA,MAAMY,GAAmB,CACvB,OACA,OACA,WACA,UACA,KACA,MACA,UACA,QACA,QACA,KACA,QACA,MACA,QACA,SACA,OACA,OACA,QACA,SACA,QACA,OASF,MAAMC,GAOJ37E,YAAY47E,EAAUC,EAAQC,GAC5B37E,KAAKy7E,SAAWA,EAChBz7E,KAAK07E,OAASA,EACVC,IACF37E,KAAK27E,MAAQA,EAEjB,EAqBF,SAASlsC,GAAMmsC,EAAaD,GAE1B,MAAMF,EAAW,CAAC,EAEZC,EAAS,CAAC,EAChB,IAAIpoE,GAAQ,EAEZ,OAASA,EAAQsoE,EAAY33E,QAC3BF,OAAO2qE,OAAO+M,EAAUG,EAAYtoE,GAAOmoE,UAC3C13E,OAAO2qE,OAAOgN,EAAQE,EAAYtoE,GAAOooE,QAG3C,OAAO,IAAIF,GAAOC,EAAUC,EAAQC,EACtC,CAMA,SAASE,GAAUv7E,GACjB,OAAOA,EAAMkC,aACf,CAtCAg5E,GAAO3hE,UAAU4hE,SAAW,CAAC,EAE7BD,GAAO3hE,UAAU6hE,OAAS,CAAC,EAE3BF,GAAO3hE,UAAU8hE,MAAQ,KAoCzB,MAAMG,EAMJj8E,YAAY47E,EAAU5zB,GAEpB7nD,KAAKy7E,SAAWA,EAEhBz7E,KAAK6nD,UAAYA,CACnB,EAIFi0B,EAAKjiE,UAAU8hE,MAAQ,KACvBG,EAAKjiE,UAAUkiE,SAAU,EACzBD,EAAKjiE,UAAUmiE,YAAa,EAC5BF,EAAKjiE,UAAUoiE,mBAAoB,EACnCH,EAAKjiE,UAAUqiE,QAAS,EACxBJ,EAAKjiE,UAAUsiE,gBAAiB,EAChCL,EAAKjiE,UAAUuiE,gBAAiB,EAChCN,EAAKjiE,UAAUwiE,uBAAwB,EACvCP,EAAKjiE,UAAUyiE,iBAAkB,EACjCR,EAAKjiE,UAAU0iE,SAAU,EAEzB,IAAIC,GAAS,EAEb,MAAMT,EAAUU,KACVT,EAAaS,KACbR,GAAoBQ,KACpBP,EAASO,KACTL,EAAiBK,KACjBN,GAAiBM,KACjBJ,EAAwBI,KAE9B,SAASA,KACP,OAAO,KAAOD,EAChB,CAEA,IAAIE,GAAqB34E,OAAO44E,OAAO,CACrCC,UAAW,KACXb,QAASA,EACTC,WAAYA,EACZK,sBAAuBA,EACvBF,eAAgBA,GAChBD,OAAQA,EACRD,kBAAmBA,GACnBG,eAAgBA,IAKlB,MAAMS,GAAS94E,OAAOC,KAAK04E,IAE3B,MAAMI,WAAoBhB,EAQxBj8E,YAAY47E,EAAU5zB,EAAWk1B,EAAMpB,GACrC,IAAIroE,GAAQ,EAMZ,GAJArR,MAAMw5E,EAAU5zB,GAEhBm1B,GAAKh9E,KAAM,QAAS27E,GAEA,iBAAToB,EACT,OAASzpE,EAAQupE,GAAO54E,QAAQ,CAC9B,MAAMg5E,EAAQJ,GAAOvpE,GACrB0pE,GAAKh9E,KAAM68E,GAAOvpE,IAASypE,EAAOL,GAAMO,MAAYP,GAAMO,GAC5D,CAEJ,EAUF,SAASD,GAAKr3E,EAAQtF,EAAKC,GACrBA,IAEFqF,EAAOtF,GAAOC,EAElB,CAZAw8E,GAAYjjE,UAAU0iE,SAAU,EA6BhC,MAAMW,GAAQ,CAAC,EAAElnE,eAMjB,SAASuG,GAAO4gE,GAEd,MAAM1B,EAAW,CAAC,EAEZC,EAAS,CAAC,EAEhB,IAAI0B,EAEJ,IAAKA,KAAQD,EAAWhP,WACtB,GAAI+O,GAAMlD,KAAKmD,EAAWhP,WAAYiP,GAAO,CAC3C,MAAM98E,EAAQ68E,EAAWhP,WAAWiP,GAC9BzxD,EAAO,IAAImxD,GACfM,EACAD,EAAWjpD,UAAUipD,EAAWE,YAAc,CAAC,EAAGD,GAClD98E,EACA68E,EAAWxB,OAIXwB,EAAWb,iBACXa,EAAWb,gBAAgBn1E,SAASi2E,KAEpCzxD,EAAK2wD,iBAAkB,GAGzBb,EAAS2B,GAAQzxD,EAEjB+vD,EAAOG,GAAUuB,IAASA,EAC1B1B,EAAOG,GAAUlwD,EAAKk8B,YAAcu1B,CACtC,CAGF,OAAO,IAAI5B,GAAOC,EAAUC,EAAQyB,EAAWxB,MACjD,CAEA,MAAM2B,GAAQ/gE,GAAO,CACnBo/D,MAAO,QACPznD,WAAUh0B,EAAGk9E,IACJ,SAAWA,EAAKrsE,MAAM,GAAGvO,cAElC2rE,WAAY,CACVoP,aAAc,KACdC,aAAc,KACdC,UAAW,KACXC,UAAW,KACXC,UAAW,KACXC,WAAY,KACZC,UAAW,QAITC,GAAMvhE,GAAO,CACjBo/D,MAAO,MACPznD,WAAUh0B,EAAGk9E,IACJ,OAASA,EAAKrsE,MAAM,GAAGvO,cAEhC2rE,WAAY,CAAC4P,QAAS,KAAMC,QAAS,KAAMC,SAAU,QAQvD,SAASC,GAAuBb,EAAYx1B,GAC1C,OAAOA,KAAaw1B,EAAaA,EAAWx1B,GAAaA,CAC3D,CAOA,SAASs2B,GAAyBd,EAAY5B,GAC5C,OAAOyC,GAAuBb,EAAY5B,EAASj5E,cACrD,CAEA,MAAM47E,GAAQ7hE,GAAO,CACnBo/D,MAAO,QACP0B,WAAY,CAACgB,WAAY,eACzBnqD,UAAWiqD,GACXhQ,WAAY,CAACiQ,MAAO,KAAME,WAAY,QAGlCC,GAAOhiE,GAAO,CAClB2X,WAAUh0B,EAAGk9E,IACK,SAATA,EAAkBA,EAAO,QAAUA,EAAKrsE,MAAM,GAAGvO,cAE1D2rE,WAAY,CACVqQ,qBAAsB,KACtBC,WAAYzC,EACZ0C,iBAAkB,KAClBC,SAAU3C,EACV4C,YAAa5C,EACb6C,aAAc3C,EACd4C,aAAc5C,EACd6C,YAAa7C,EACb8C,aAAc5C,EACd6C,YAAa,KACb3iC,gBAAiB8/B,EACjB8C,YAAa,KACb12B,aAAcwzB,EACdmD,eAAgB/C,EAChBgD,iBAAkB,KAClBC,aAAcrD,EACdsD,WAAYlD,EACZmD,YAAavD,EACbwD,aAAc,KACdC,WAAYzD,EACZ0D,YAAa,KACbC,iBAAkB,KAClBnjC,UAAW,KACXD,eAAgB6/B,EAChBwD,UAAW1D,EACX2D,SAAU,KACVpjC,UAAWu/B,EACX8D,cAAe9D,EACf+D,oBAAqB/D,EACrBgE,gBAAiB,KACjBC,SAAU7D,EACV8D,gBAAiB,KACjBC,aAAcjE,EACdkE,YAAapE,EACbqE,aAAcrE,EACdsE,aAAc,KACdC,aAAcvE,EACdwE,oBAAqBpE,EACrBqE,aAAcvE,EACdwE,aAAcxE,EACdyE,YAAazE,EACb0E,aAAc5E,EACd6E,YAAa3E,EACb4E,SAAU,KACVC,aAAc7E,EACd8E,aAAc9E,EACd+E,aAAc/E,EACdgF,cAAe,KACf9kC,KAAM,QAIJ+kC,GAAS5kE,GAAO,CACpBo/D,MAAO,OACP0B,WAAY,CACV+D,cAAe,iBACfC,UAAW,QACXC,QAAS,MACTC,UAAW,cAEbrtD,UAAWiqD,GACX7B,gBAAiB,CAAC,UAAW,WAAY,QAAS,YAClDnO,WAAY,CAEVqT,KAAM,KACNC,OAAQtF,GACRuF,cAAetF,EACfuF,UAAWvF,EACX5+C,OAAQ,KACRokD,MAAO,KACPC,gBAAiB9F,EACjB+F,oBAAqB/F,EACrBgG,eAAgBhG,EAChBiG,IAAK,KACLC,GAAI,KACJC,MAAOnG,EACPoG,eAAgB,KAChBC,aAAchG,EACd1/B,UAAWq/B,EACXsG,SAAUtG,EACVuG,SAAUlG,EACVpjE,QAAS,KACTupE,QAAS,KACTC,QAASzG,EACT0G,KAAM,KACNhqD,UAAW2jD,EACXsG,KAAMxG,EACNyG,QAAS,KACTloE,QAAS,KACTmoE,gBAAiB5G,EACjB6G,SAAU9G,EACV+G,aAAc1G,EACd2G,OAAQ7G,EAASC,GACjB6G,YAAa,KACbtjF,KAAM,KACNujF,SAAU,KACVC,SAAU,KACV14B,QAASuxB,EACT97B,MAAO87B,EACPxqE,IAAK,KACL4xE,QAAS,KACTn7E,SAAU+zE,EACVqH,SAAUnH,GACVoH,UAAWrH,EACXsH,QAAS,KACTC,aAAc,KACdC,cAAe,KACf5tE,KAAM,KACN6tE,WAAY,KACZC,YAAa,KACbC,WAAY,KACZC,eAAgB7H,EAChB8H,WAAY,KACZC,QAAS1H,EACTzhE,OAAQuhE,EACR6H,OAAQhI,EACRiI,KAAM9H,EACN+H,KAAM,KACNC,SAAU,KACVC,QAAS/H,EACTgI,UAAWhI,EACXp+C,GAAI,KACJqmD,WAAY,KACZC,YAAa,KACbC,MAAOxI,EACPyI,UAAW,KACXC,UAAW,KACXruE,GAAI,KACJsuE,MAAO3I,EACP4I,OAAQ,KACRC,SAAUxI,EACVyI,QAASzI,EACT0I,UAAW/I,EACXgJ,SAAU3I,EACV9pB,KAAM,KACN0yB,MAAO,KACPlX,KAAM,KACNr+C,SAAU,KACVrc,KAAM,KACN6xE,QAAS,KACTC,KAAMnJ,EACNoJ,IAAKjJ,EACLkJ,SAAU,KACVlyD,IAAK,KACLmyD,UAAWnJ,EACXp9D,MAAO,KACPwmE,OAAQ,KACRlrD,IAAK,KACLu7C,UAAWuG,EACXqJ,SAAUxJ,EACVyJ,MAAOzJ,EACPxyE,KAAM,KACN0U,MAAO,KACPwnE,SAAU1J,EACV2J,WAAY3J,EACZ4J,QAAS,KACTC,aAAc,KACdC,WAAY,KACZC,cAAe,KACfC,cAAe,KACfC,eAAgB,KAChBC,eAAgB,KAChBC,OAAQ,KACRC,SAAU,KACVC,UAAW,KACXC,iBAAkB,KAClBpmF,SAAU,KACVqmF,QAAS,KACTC,QAAS,KACTC,cAAe,KACfC,cAAe,KACfC,kBAAmB,KACnBC,OAAQ,KACRC,YAAa,KACbC,MAAO,KACPC,WAAY,KACZC,OAAQ,KACRC,UAAW,KACXC,YAAa,KACbC,WAAY,KACZC,YAAa,KACbC,WAAY,KACZC,YAAa,KACbC,OAAQ,KACRC,iBAAkB,KAClBC,UAAW,KACXC,QAAS,KACTC,QAAS,KACTC,QAAS,KACTC,WAAY,KACZC,aAAc,KACdC,QAAS,KACTC,UAAW,KACXC,UAAW,KACXC,WAAY,KACZC,QAAS,KACTC,iBAAkB,KAClBC,OAAQ,KACRC,aAAc,KACdC,iBAAkB,KAClBC,UAAW,KACXC,YAAa,KACbC,UAAW,KACXC,eAAgB,KAChBC,YAAa,KACbC,aAAc,KACdC,aAAc,KACdC,YAAa,KACbC,WAAY,KACZC,YAAa,KACbC,UAAW,KACXC,UAAW,KACXC,SAAU,KACVC,WAAY,KACZC,WAAY,KACZC,QAAS,KACTC,QAAS,KACTC,OAAQ,KACRC,UAAW,KACXC,WAAY,KACZC,WAAY,KACZC,aAAc,KACdC,mBAAoB,KACpBC,QAAS,KACTC,SAAU,KACVC,SAAU,KACVC,YAAa,KACbC,0BAA2B,KAC3BC,SAAU,KACVC,UAAW,KACXC,SAAU,KACVC,aAAc,KACdC,UAAW,KACXC,UAAW,KACXC,SAAU,KACVC,UAAW,KACXC,aAAc,KACdC,SAAU,KACVC,qBAAsB,KACtBC,SAAU,KACVC,eAAgB,KAChBC,UAAW,KACXC,QAAS,KACT9qC,KAAM47B,EACNmP,QAAShP,EACT/mB,QAAS,KACTg2B,KAAM/O,EACNgP,YAAa,KACbC,YAAatP,EACbuP,QAAS,KACTC,cAAe,KACfC,oBAAqB,KACrBC,OAAQ,KACRC,QAAS,KACTC,SAAU5P,EACV6P,eAAgB,KAChBC,IAAKzP,EACL0P,SAAU/P,EACVgQ,SAAUhQ,EACViQ,KAAM9P,EACN+P,QAAS/P,EACTgQ,QAAS9P,EACTlhB,MAAO,KACPixB,OAAQpQ,EACRqQ,SAAUrQ,EACVsQ,SAAUtQ,EACVuQ,yBAA0BvQ,EAC1BwQ,eAAgB,KAChBC,MAAO,KACPp7D,KAAM8qD,EACNuQ,MAAO,KACPC,KAAM,KACNpR,KAAMY,EACNyQ,WAAY3Q,EACZ4Q,IAAK,KACLC,OAAQ,KACRC,QAAS,KACTC,OAAQ,KACRtrD,MAAOy6C,EACP8Q,KAAM,KACNrzE,MAAO,KACPsJ,SAAUi5D,EACVh5E,OAAQ,KACR+pF,MAAO,KACPC,UAAW,KACXjsF,KAAM,KACNksF,cAAepR,EACfqR,OAAQ,KACR9sF,MAAO07E,EACP5hE,MAAO8hE,EACPmR,KAAM,KAIN9lC,MAAO,KACP+lC,MAAO,KACPC,QAASnR,EACTvjC,KAAM,KACNuV,WAAY,KACZygB,QAAS,KACT2e,OAAQtR,EACRuR,YAAa,KACbC,aAAcxR,EACdyR,YAAa,KACbC,YAAa,KACbC,KAAM,KACNC,QAAS,KACTC,QAAS,KACTnnD,MAAO,KACP6mC,KAAM,KACNugB,SAAU,KACVC,SAAU,KACVt6D,MAAO,KACPu6D,QAASnS,EACToS,QAASpS,EACT1gE,MAAO,KACP+yE,KAAM,KACN9lB,MAAO,KACP+lB,YAAa,KACbC,OAAQpS,EACRqS,WAAYrS,EACZsS,KAAM,KACNC,SAAU,KACVC,OAAQ,KACRC,aAAczS,EACd0S,YAAa1S,EACb2S,SAAU9S,EACV+S,OAAQ/S,EACRgT,QAAShT,EACTiT,OAAQjT,EACRkT,OAAQ,KACRC,QAAS,KACTC,OAAQ,KACRC,IAAK,KACLC,YAAanT,EACbjqB,MAAO,KACPq9B,OAAQ,KACRC,UAAWvT,EACXwT,QAAS,KACTC,QAAS,KACT9c,KAAM,KACN+c,UAAWxT,EACXyT,UAAW,KACXC,QAAS,KACTC,OAAQ,KACRC,MAAO,KACPC,OAAQ7T,EAGR8T,kBAAmB,KACnBC,YAAa,KACbC,SAAU,KACVC,wBAAyBpU,EACzBqU,sBAAuBrU,EACvBsU,OAAQ,KACR5U,SAAU,KACV/tD,QAASwuD,EACToU,SAAU,KACVC,aAAc,QAIZC,GAAQj0E,GAAO,CACnBo/D,MAAO,MACP0B,WAAY,CACVoT,aAAc,gBACdC,kBAAmB,qBACnBC,WAAY,cACZC,cAAe,iBACfC,UAAW,aACXp4D,UAAW,QACXq4D,SAAU,YACVC,SAAU,YACVC,mBAAoB,sBACpBC,0BAA2B,8BAC3BC,aAAc,gBACdC,eAAgB,kBAChBnO,YAAa,cACboO,SAAU,WACVC,iBAAkB,oBAClBC,iBAAkB,oBAClBC,YAAa,eACbC,SAAU,YACVC,WAAY,cACZC,aAAc,gBACdC,WAAY,cACZC,SAAU,YACVC,eAAgB,mBAChBC,YAAa,eACb9jC,UAAW,aACX+jC,YAAa,eACbC,WAAY,cACZC,UAAW,aACXC,2BAA4B,+BAC5BC,yBAA0B,6BAC1BjO,SAAU,WACVkO,UAAW,cACXC,aAAc,iBACdC,aAAc,iBACdC,eAAgB,kBAChBC,cAAe,iBACfC,cAAe,iBACfC,UAAW,aACXC,UAAW,aACXC,YAAa,eACbC,QAAS,WACTC,YAAa,gBACbC,aAAc,iBACdC,QAAS,WACTC,QAAS,WACTC,QAAS,WACTC,SAAU,YACVC,MAAO,SACPC,UAAW,cACXC,WAAY,eACZ3N,QAAS,UACT4N,WAAY,aACZ3N,aAAc,eACdG,cAAe,gBACfyN,QAAS,UACTrN,SAAU,WACVC,UAAW,YACXC,iBAAkB,mBAClBpmF,SAAU,WACVqmF,QAAS,UACTC,QAAS,UACTI,OAAQ,SACRC,YAAa,cACbC,MAAO,QACPC,WAAY,aACZC,OAAQ,SACRC,UAAW,YACXC,YAAa,cACbC,WAAY,aACZC,YAAa,cACbC,WAAY,aACZC,YAAa,cACbC,OAAQ,SACRC,iBAAkB,mBAClBC,UAAW,YACXiM,MAAO,QACPhM,QAAS,UACTC,QAAS,UACTC,QAAS,UACT+L,UAAW,YACXC,WAAY,aACZ9L,aAAc,eACdC,QAAS,UACTC,UAAW,YACXC,UAAW,YACXC,WAAY,aACZC,QAAS,UACTE,OAAQ,SACRC,aAAc,eACdC,iBAAkB,mBAClBE,YAAa,cACbC,UAAW,YACXE,YAAa,cACbC,aAAc,eACdC,aAAc,eACdC,YAAa,cACbC,WAAY,aACZC,YAAa,cACbC,UAAW,YACX2K,aAAc,eACd1K,UAAW,YACXC,SAAU,WACVC,WAAY,aACZC,WAAY,aACZC,QAAS,UACTC,QAAS,UACTC,OAAQ,SACRC,UAAW,YACXC,WAAY,aACZC,WAAY,aACZC,aAAc,eACdiK,SAAU,WACV/J,QAAS,UACTC,SAAU,WACVC,SAAU,WACVG,SAAU,WACVC,UAAW,YACXC,SAAU,WACVyJ,OAAQ,SACRvJ,UAAW,YACXC,UAAW,YACXC,SAAU,WACVC,UAAW,YACXC,aAAc,eACdC,SAAU,WACVE,SAAU,WACVC,eAAgB,iBAChBC,UAAW,YACX+I,OAAQ,SACRC,iBAAkB,oBAClBC,kBAAmB,qBACnBC,WAAY,cACZC,QAAS,WACT55E,cAAe,iBACfqxE,eAAgB,iBAChBwI,gBAAiB,mBACjBC,eAAgB,kBAChBC,UAAW,aACXC,YAAa,eACbC,sBAAuB,yBACvBC,uBAAwB,0BACxBC,gBAAiB,mBACjBC,iBAAkB,oBAClBC,cAAe,iBACfC,eAAgB,kBAChBC,iBAAkB,oBAClBC,cAAe,iBACf56D,YAAa,eACblX,SAAU,WACV+xE,WAAY,cACZC,eAAgB,kBAChBC,cAAe,iBACfr9C,gBAAiB,mBACjBs9C,OAAQ,SACRC,kBAAmB,qBACnBC,mBAAoB,sBACpBC,YAAa,eACbC,aAAc,gBACdC,WAAY,eACZC,YAAa,eACbC,SAAU,YACVC,aAAc,gBACdC,cAAe,iBACfC,aAAc,gBACdC,SAAU,aACVC,YAAa,gBACbC,YAAa,gBACbC,YAAa,eACbC,YAAa,eACbC,QAAS,WAETC,cAAe,gBACfC,cAAe,iBAEjBniE,UAAWgqD,GACX/P,WAAY,CACVmoB,MAAOja,EACPoU,aAAcvU,EACdqa,WAAY,KACZC,SAAU,KACV9F,kBAAmB,KACnB+F,WAAYva,EACZwa,UAAWxa,EACXyU,WAAY,KACZgG,OAAQza,EACR0a,cAAe,KACfC,cAAe,KACfC,QAAS5a,EACT6a,UAAW,KACXnG,cAAe,KACfoG,cAAe,KACfC,YAAa,KACbC,KAAM,KACNthC,MAAO,KACPuhC,KAAMjb,EACNkb,GAAI,KACJC,SAAU,KACVxG,UAAW3U,EACXzjD,UAAW2jD,EACXkb,KAAM,KACNxG,SAAU,KACVyG,cAAe,KACfxG,SAAU,KACVp9D,MAAO,KACPq9D,mBAAoB,KACpBC,0BAA2B,KAC3BC,aAAc,KACdC,eAAgB,KAChB12E,QAAS,KACT+8E,kBAAmB,KACnBC,iBAAkB,KAClBzU,YAAa,KACb/3C,OAAQ,KACRysD,GAAI,KACJC,GAAI,KACJ1f,EAAG,KACHmZ,SAAU,KACVwG,cAAe,KACfC,QAAS3b,EACT4b,gBAAiB5b,EACjBztC,UAAW,KACXspD,QAAS,KACTC,IAAK,KACLC,QAAS/b,EACTmV,iBAAkB,KAClBjO,SAAUrH,EACVmc,GAAI,KACJC,GAAI,KACJC,SAAU,KACVC,SAAU,KACVC,UAAWpc,EACXoV,iBAAkB,KAClB9vD,IAAK,KACLnmB,MAAO,KACPk9E,SAAUrc,EACVsc,0BAA2B,KAC3BC,KAAM,KACNlH,YAAarV,EACbsV,SAAU,KACV1sF,OAAQ,KACR4zF,UAAW,KACXC,YAAa,KACblH,WAAY,KACZC,aAAc,KACdkH,UAAW,KACXC,eAAgB,KAChBlH,WAAY,KACZC,SAAU,KACVC,eAAgB,KAChBC,YAAa,KACb9jC,UAAW,KACX+jC,YAAa,KACbC,WAAY,KACZ8G,OAAQ,KACRC,GAAI,KACJt1F,KAAM,KACNu1F,GAAI,KACJC,GAAI,KACJpgC,GAAIsjB,GACJ+c,GAAI/c,GACJ8V,UAAW9V,GACX+V,2BAA4B,KAC5BC,yBAA0B,KAC1BgH,SAAU,KACVC,kBAAmB,KACnBC,cAAe,KACfj4E,QAAS,KACTk4E,QAASpd,EACTqd,kBAAmB,KACnBC,WAAY,KACZ7+E,OAAQ,KACRspE,KAAM,KACNC,SAAU,KACVkO,UAAWlW,EACXmW,aAAcnW,EACdoW,aAAcpW,EACdl+C,GAAI,KACJy7D,YAAavd,EACbqW,eAAgB,KAChBmH,kBAAmB,KACnBC,GAAI,KACJC,IAAK,KACLC,UAAW3d,EACX4d,EAAG5d,EACH6d,GAAI7d,EACJ8d,GAAI9d,EACJ+d,GAAI/d,EACJge,GAAIhe,EACJie,aAAc9d,EACd+d,iBAAkB,KAClBC,UAAW,KACXC,WAAY,KACZC,SAAU,KACVC,QAAS,KACT1sB,KAAM,KACN2sB,aAAc,KACdjI,cAAe,KACfC,cAAe,KACfiI,kBAAmBxe,EACnBye,MAAO,KACPjI,UAAW,KACXC,UAAW,KACXC,YAAa,KACbgI,aAAc,KACdC,YAAa,KACbC,YAAa,KACb/d,KAAM,KACNge,iBAAkB,KAClBC,UAAW,KACXC,aAAc,KACd/nE,IAAK,KACLpU,MAAO,KACPo8E,uBAAwB,KACxBC,sBAAuB,KACvBC,UAAWlf,EACXmf,UAAW,KACX/V,OAAQ,KACRlrD,IAAK,KACLpL,KAAM,KACNzlB,KAAM,KACNspF,QAAS,KACTC,YAAa,KACbC,aAAc,KACdC,QAAS,KACTC,QAAS,KACTC,QAAS,KACTC,SAAU,KACVC,MAAO,KACPC,UAAW,KACXC,WAAY,KACZgI,WAAY,KACZn6E,SAAU,KACVozB,OAAQ,KACRoxC,QAAS,KACT4N,WAAY,KACZ3N,aAAc,KACdG,cAAe,KACfyN,QAAS,KACTrN,SAAU,KACVC,UAAW,KACXC,iBAAkB,KAClBpmF,SAAU,KACVqmF,QAAS,KACTC,QAAS,KACTI,OAAQ,KACRC,YAAa,KACbC,MAAO,KACPC,WAAY,KACZC,OAAQ,KACRC,UAAW,KACXC,YAAa,KACbC,WAAY,KACZC,YAAa,KACbC,WAAY,KACZC,YAAa,KACbC,OAAQ,KACRC,iBAAkB,KAClBC,UAAW,KACXiM,MAAO,KACPhM,QAAS,KACTC,QAAS,KACTC,QAAS,KACT+L,UAAW,KACXC,WAAY,KACZ9L,aAAc,KACdC,QAAS,KACTC,UAAW,KACXC,UAAW,KACXC,WAAY,KACZC,QAAS,KACTE,OAAQ,KACRC,aAAc,KACdC,iBAAkB,KAClBE,YAAa,KACbC,UAAW,KACXE,YAAa,KACbC,aAAc,KACdC,aAAc,KACdC,YAAa,KACbC,WAAY,KACZC,YAAa,KACbC,UAAW,KACX2K,aAAc,KACd1K,UAAW,KACXC,SAAU,KACVC,WAAY,KACZC,WAAY,KACZC,QAAS,KACTC,QAAS,KACTC,OAAQ,KACRC,UAAW,KACXC,WAAY,KACZC,WAAY,KACZC,aAAc,KACdiK,SAAU,KACV/J,QAAS,KACTC,SAAU,KACVC,SAAU,KACVG,SAAU,KACVC,UAAW,KACXC,SAAU,KACVyJ,OAAQ,KACRvJ,UAAW,KACXC,UAAW,KACXC,SAAU,KACVC,UAAW,KACXC,aAAc,KACdC,SAAU,KACVE,SAAU,KACVC,eAAgB,KAChBC,UAAW,KACX+I,OAAQ,KACRn/D,QAAS,KACT2mE,SAAU,KACVC,MAAO,KACPC,OAAQ,KACRC,YAAa,KACbvvE,OAAQ,KACR9R,SAAU,KACVk7B,QAAS,KACTy+C,iBAAkB9X,EAClB+X,kBAAmB/X,EACnBgY,WAAY,KACZC,QAAS,KACTn1F,KAAM,KACN28F,WAAYzf,EACZ0f,oBAAqB,KACrBC,iBAAkB,KAClBC,aAAc,KACdC,MAAO,KACP5Q,KAAM/O,EACN4f,MAAO,KACP5F,cAAe,KACf77E,cAAe,KACf0hF,OAAQ,KACRC,UAAWhgB,EACXigB,UAAWjgB,EACXkgB,UAAWlgB,EACXmgB,cAAe,KACfC,oBAAqB,KACrBC,eAAgB,KAChBC,UAAW,KACX/gB,SAAUY,EACVvvB,EAAG,KACHj6B,OAAQ,KACR+4D,eAAgB,KAChB6Q,KAAM,KACNC,KAAM,KACN7Q,IAAKxP,EACL+S,IAAK/S,EACL+X,gBAAiB,KACjBuI,YAAa,KACbC,UAAW,KACXC,mBAAoBxgB,EACpBygB,iBAAkBzgB,EAClB0gB,cAAe1gB,EACf2gB,gBAAiB3gB,EACjB4gB,SAAU,KACVC,QAAS,KACT33F,OAAQ,KACR43F,OAAQ,KACRC,GAAI,KACJC,GAAI,KACJC,MAAO,KACPC,KAAM,KACNlJ,eAAgB,KAChBmJ,KAAM,KACNC,MAAO,KACPC,aAAc,KACdC,iBAAkBzhB,EAClB0hB,iBAAkB1hB,EAClB2hB,aAAc,KACdC,QAAS,KACTC,YAAa,KACbC,aAAc,KACdC,MAAO,KACPC,MAAO,KACPC,YAAa,KACb7J,UAAW,KACXC,YAAa,KACbC,sBAAuBtY,EACvBuY,uBAAwBvY,EACxB9hB,OAAQ,KACRgkC,OAAQ,KACR1J,gBAAiBrY,EACjBsY,iBAAkB,KAClBC,cAAe,KACfC,eAAgB,KAChBC,iBAAkB5Y,EAClB6Y,cAAe7Y,EACf/hD,YAAa,KACbxgB,MAAO,KACP0kF,aAAcniB,EACdoiB,aAAc,KACdC,oBAAqB,KACrBC,WAAY,KACZC,cAAe,KACfC,qBAAsB,KACtBC,eAAgBtiB,EAChBp5D,SAAUi5D,EACV0iB,YAAa,KACb17F,OAAQ,KACR27F,QAAS3iB,EACT4iB,QAAS5iB,EACT8Y,WAAY,KACZC,eAAgB,KAChBC,cAAe,KACf6J,WAAY,KACZ1I,cAAe,KACfpJ,MAAO,KACP+R,kBAAmB,KACnB/9F,KAAM,KACNk0F,OAAQ9Y,EACR4iB,GAAI,KACJ/qE,UAAW,KACX2jB,gBAAiB,KACjBqnD,GAAI,KACJC,GAAI,KACJ/J,kBAAmBlZ,EACnBmZ,mBAAoBnZ,EACpBkjB,QAAS,KACT9J,YAAa,KACbC,aAAc,KACdC,WAAYtZ,EACZv2E,OAAQ,KACR8vF,YAAavZ,EACb0Z,cAAe1Z,EACf2Z,aAAc,KACdH,SAAUxZ,EACVyZ,aAAczZ,EACd0T,QAAS,KACTkG,SAAU5Z,EACV6Z,YAAa7Z,EACb8Z,YAAa9Z,EACb5hD,QAAS,KACT+kE,WAAY,KACZ/kF,WAAY,KACZF,MAAO,KACPklF,OAAQ,KACRrJ,YAAa,KACbC,YAAa,KACb9lF,EAAG,KACHmvF,GAAI,KACJC,GAAI,KACJC,iBAAkB,KAClBtJ,QAASja,EACT9pD,EAAG,KACHstE,GAAI,KACJC,GAAI,KACJC,iBAAkB,KAClBC,EAAG,KACHC,WAAY,QASVj4F,GAAQ,kBACRk4F,GAAO,UACPC,GAAM,SA+CZ,SAASC,GAAMC,GACb,MAAO,IAAMA,EAAG19F,aAClB,CAMA,SAAS29F,GAAUD,GACjB,OAAOA,EAAGv0C,OAAO,GAAG4D,aACtB,CAOA,MAAM6wC,GAAS3wD,GAAM,CAACquC,GAAKR,GAAOc,GAAOG,GAAM4C,IAAS,QAClDkf,GAAM5wD,GAAM,CAACquC,GAAKR,GAAOc,GAAOG,GAAMiS,IAAQ,OAmD9C8P,GAAQ,CAAC,EAAEtqF,eAoMjB,MAAMuqF,GAA0B,CAC9B,QACA,MACA,SACA,QACA,SACA,QACA,SACA,OACA,OACA,SACA,MACA,SACA,QACA,SACA,OACA,KACA,SACA,QACA,SACA,OACA,KACA,SACA,SACA,QACA,SACA,SACA,SACA,OACA,OACA,MACA,QACA,SACA,QACA,SACA,OACA,SACA,SACA,QACA,QACA,QACA,SACA,MACA,QACA,SACA,OACA,SACA,SACA,QACA,OACA,OACA,SACA,MACA,SACA,SACA,QACA,SACA,MACA,OACA,SACA,SACA,SACA,KACA,SACA,QACA,QACA,SACA,SACA,OACA,QACA,KACA,OACA,QACA,SACA,OACA,MACA,SACA,SACA,QACA,SACA,OACA,OACA,SACA,SACA,OACA,OACA,SACA,QACA,OACA,QACA,MACA,OACA,MACA,OACA,OACA,OACA,QACA,QACA,QACA,SACA,QACA,SACA,MACA,OACA,SACA,MACA,QAQIC,GAAyB,CAC7BC,KAAM,OACNC,MAAO,OACPC,KAAM,OACNC,MAAO,OACPC,OAAQ,OACRC,IAAK,OACLC,OAAQ,OACRC,KAAM,OACNC,IAAK,OACLC,KAAM,OACNC,KAAM,OACNC,MAAO,OACPC,IAAK,OACLC,IAAK,OACLC,IAAK,OACLC,KAAM,OACNC,IAAK,OACLC,OAAQ,OACRC,KAAM,OACNC,KAAM,OACNC,MAAO,OACPC,MAAO,OACPC,KAAM,OACNC,OAAQ,OACRC,MAAO,OACPC,KAAM,OACNC,KAAM,OACNC,MAAO,OACPC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,OACRC,MAAO,OACPC,OAAQ,OACRC,KAAM,OACNC,MAAO,OACPC,MAAO,OACPC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,OACRC,MAAO,OACPC,KAAM,OACNC,OAAQ,OAC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","names":["chatRoutes","path","children","loadComponent","Promise","resolve","then","__webpack_require__","bind","m","ChatComponent","data","component","BaseControlValueAccessor","constructor","_renderer","_elementRef","this","onChange","_","onTouched","setProperty","key","value","nativeElement","registerOnTouched","fn","registerOnChange","setDisabledState","isDisabled","ɵfac","__ngFactoryType__","i0","ɵdir","type","BuiltInControlValueAccessor","ɵBuiltInControlValueAccessor_BaseFactory","features","NG_VALUE_ACCESSOR","InjectionToken","DEFAULT_VALUE_ACCESSOR","provide","useExisting","forwardRef","DefaultValueAccessor","multi","COMPOSITION_BUFFER_MODE","renderer","elementRef","_compositionMode","super","_composing","_isAndroid","userAgent","ɵgetDOM","getUserAgent","test","toLowerCase","writeValue","_handleInput","_compositionStart","_compositionEnd","selectors","hostBindings","rf","ctx","$event","target","NG_VALIDATORS","NG_ASYNC_VALIDATORS","isPresent","o","toObservable","ɵisPromise","from","mergeErrors","arrayOfErrors","res","forEach","errors","Object","keys","length","executeValidators","control","validators","map","validator","normalizeValidators","isValidatorFn","validate","c","composeValidators","compose","presentValidators","filter","composeAsyncValidators","composeAsync","forkJoin","args","resultSelector","popResultSelector","sources","argsArgArrayOrObject","result","Observable","subscriber","complete","values","Array","remainingCompletions","remainingEmissions","sourceIndex","hasValue","innerFrom","subscribe","createOperatorSubscriber","undefined","next","createObject","pipe","mapOneOrManyArgs","mergeValidators","controlValidators","dirValidator","isArray","getControlValidators","_rawValidators","getControlAsyncValidators","_rawAsyncValidators","makeValidatorsArray","hasValidator","includes","addValidators","currentValidators","current","validatorsToAdd","v","push","removeValidators","AbstractControlDirective","_onDestroyCallbacks","valid","invalid","pending","disabled","enabled","pristine","dirty","touched","status","untouched","statusChanges","valueChanges","_setValidators","_composedValidatorFn","_setAsyncValidators","_composedAsyncValidatorFn","asyncValidator","_registerOnDestroy","_invokeOnDestroyCallbacks","reset","hasError","errorCode","getError","NgControl","arguments","_parent","name","valueAccessor","AbstractControlStatus","cd","_cd","isTouched","_touched","isUntouched","isPristine","_pristine","isDirty","isValid","_status","isInvalid","isPending","isSubmitted","_submitted","submitted","NgControlStatus","hostVars","VALID","INVALID","PENDING","DISABLED","ControlEvent","ValueChangeEvent","source","PristineChangeEvent","TouchedChangeEvent","StatusChangeEvent","isOptionsObj","validatorOrOpts","AbstractControl","asyncValidators","_pendingDirty","_hasOwnPendingAsyncValidator","_pendingTouched","_onCollectionChange","computed","statusReactive","signal","pristineReactive","touchedReactive","_events","Subject","events","asObservable","_onDisabledChange","_assignValidators","_assignAsyncValidators","validatorFn","asyncValidatorFn","parent","untracked","set","updateOn","_updateOn","setValidators","setAsyncValidators","addAsyncValidators","removeAsyncValidators","hasAsyncValidator","clearValidators","clearAsyncValidators","markAsTouched","opts","changed","sourceControl","onlySelf","emitEvent","markAllAsTouched","_forEachChild","markAsUntouched","_updateTouched","markAsDirty","markAsPristine","_updatePristine","markAsPending","emit","disable","skipPristineCheck","_parentMarkedDirty","_updateValue","_updateAncestors","changeFn","enable","updateValueAndValidity","setParent","getRawValue","_setInitialStatus","shouldHaveEmitted","_cancelExistingSubscription","_runValidator","_calculateStatus","_runAsyncValidator","_updateTreeValidity","ctrl","_allControlsDisabled","obs","_asyncValidationSubscription","setErrors","unsubscribe","_updateControlsErrors","get","currPath","split","reduce","_find","root","x","changedControl","_initObservables","EventEmitter","_anyControlsHaveStatus","_anyControls","_anyControlsDirty","_anyControlsTouched","newPristine","_registerOnCollectionChange","_setUpdateStrategy","slice","coerceToValidator","coerceToAsyncValidator","CALL_SET_DISABLED_STATE","providedIn","factory","setDisabledStateDefault","setUpControl","dir","callSetDisabledState","setUpValidators","onValidatorChange","registerOnValidatorChange","setUpViewChangePipeline","newValue","_pendingValue","_pendingChange","updateControl","setUpModelChangePipeline","emitModelEvent","viewToModelUpdate","_unregisterOnChange","setUpBlurPipeline","setUpDisabledChangeHandler","onDisabledChange","registerOnDisabledChange","_unregisterOnDisabledChange","cleanUpControl","validateControlPresenceOnChange","noop","cleanUpValidators","isControlUpdated","updatedValidators","updatedAsyncValidators","setValue","emitModelToViewChange","removeListItem","list","el","index","indexOf","splice","isFormControlState","formState","FormControl","pickValidators","pickAsyncValidators","defaultValue","_onChange","_applyFormState","nonNullable","initialValueIsDefault","options","emitViewToModelChange","patchValue","condition","cb","_syncPendingControls","NG_MODEL_WITH_FORM_CONTROL_WARNING","formControlBinding","FormControlDirective","hasV8BreakIterator","_ngModelWarningSentOnce","valueAccessors","_ngModelWarningConfig","update","_ngModelWarningSent","selectValueAccessor","defaultAccessor","builtinAccessor","customAccessor","isBuiltInAccessor","getPrototypeOf","ngOnChanges","changes","_isControlChanged","previousForm","form","previousValue","isPropertyUpdated","viewModel","hasOwnProperty","change","model","isFirstChange","is","currentValue","ngOnDestroy","inputs","outputs","exportAs","ɵInternalFormsSharedModule","ɵmod","ɵinj","FormsModule","withConfig","ngModule","providers","useValue","imports","ReactiveFormsModule","warnOnNgModelWithFormControl","Intl","v8BreakIterator","supportsPassiveEvents","Platform","_platformId","isBrowser","isPlatformBrowser","document","EDGE","navigator","TRIDENT","BLINK","window","chrome","CSS","WEBKIT","IOS","FIREFOX","ANDROID","SAFARI","PLATFORM_ID","ɵprov","token","normalizePassiveListenerOptions","supportsPassiveEventListeners","addEventListener","defineProperty","capture","RtlScrollAxisType","NORMAL","NEGATED","INVERTED","rtlScrollAxisType","scrollBehaviorSupported","shadowDomIsSupported","supportsScrollBehavior","Element","documentElement","style","scrollToFunction","prototype","scrollTo","toString","getRtlScrollAxisType","scrollContainer","createElement","containerStyle","width","overflow","visibility","pointerEvents","position","content","contentStyle","height","appendChild","body","scrollLeft","remove","_getFocusedElementPierceShadowDom","activeElement","shadowRoot","newActiveElement","_getEventTarget","event","composedPath","_isTestEnvironment","__karma__","jasmine","jest","Mocha","hasModifierKey","modifiers","some","modifier","altKey","shiftKey","ctrlKey","metaKey","skip","count","MutationObserverFactory","create","callback","MutationObserver","ObserversModule","coerceNumberProperty","fallbackValue","_isNumberValue","isNaN","parseFloat","Number","coerceArray","coerceCssPixelValue","coerceElement","elementOrRef","ElementRef","mediaQueriesForWebkitCompatibility","Set","mediaQueryStyleNode","MediaMatcher","_platform","_nonce","_matchMedia","matchMedia","noopMatchMedia","query","createEmptyStyleRule","nonce","has","setAttribute","head","sheet","insertRule","add","e","console","error","i1","CSP_NONCE","matches","media","addListener","removeListener","BreakpointObserver","_mediaMatcher","_zone","_queries","Map","_destroySubject","isMatched","splitQueries","mediaQuery","_registerQuery","mql","observe","observables","observable","stateObservable","combineLatest","concat","take","debounceTime","dueTime","scheduler","asyncScheduler","operate","activeTask","lastValue","lastTime","emitWhenIdle","targetTime","now","schedule","breakpointStates","response","breakpoints","output","observer","handler","run","startWith","takeUntil","queries","a1","a2","trim","InteractivityChecker","element","hasAttribute","isVisible","hasGeometry","offsetWidth","offsetHeight","getClientRects","getComputedStyle","isTabbable","frameElement","getFrameElement","getWindow","node","ownerDocument","defaultView","getTabIndexValue","nodeName","tabIndexValue","isPotentiallyTabbableIOS","inputType","tabIndex","isFocusable","config","isPotentiallyFocusable","isHiddenInput","isInputElement","isNativeFormElement","isAnchorWithHref","isAnchorElement","hasValidTabIndex","ignoreVisibility","getAttribute","parseInt","FocusTrap","_enabled","_startAnchor","_endAnchor","_toggleAnchorTabIndex","_element","_checker","_ngZone","_document","deferAnchors","_injector","_hasAttached","startAnchorListener","focusLastTabbableElement","endAnchorListener","focusFirstTabbableElement","attachAnchors","destroy","startAnchor","endAnchor","removeEventListener","runOutsideAngular","_createAnchor","parentNode","insertBefore","nextSibling","focusInitialElementWhenReady","_executeOnStable","focusInitialElement","focusFirstTabbableElementWhenReady","focusLastTabbableElementWhenReady","_getRegionBoundary","bound","markers","querySelectorAll","_getFirstTabbableElement","_getLastTabbableElement","redirectToElement","querySelector","focusableChild","focus","hasAttached","i","tabbableChild","nodeType","ELEMENT_NODE","anchor","classList","isEnabled","removeAttribute","toggleAnchors","afterNextRender","injector","setTimeout","FocusTrapFactory","inject","Injector","deferCaptureElements","DOCUMENT","isFakeMousedownFromScreenReader","buttons","detail","isFakeTouchstartFromScreenReader","touch","touches","changedTouches","identifier","radiusX","radiusY","INPUT_MODALITY_DETECTOR_OPTIONS","INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS","ignoreKeys","modalityEventListenerOptions","passive","InputModalityDetector","mostRecentModality","_modality","ngZone","_mostRecentTarget","BehaviorSubject","_lastTouchMs","_onKeydown","_options","keyCode","_onMousedown","Date","_onTouchstart","modalityDetected","modalityChanged","distinctUntilChanged","FocusMonitorDetectionMode","IMMEDIATE","EVENTUAL","FOCUS_MONITOR_DEFAULT_OPTIONS","captureEventListenerOptions","FocusMonitor","_inputModalityDetector","_origin","_windowFocused","_originFromTouchInteraction","_elementInfo","_monitoredElementCount","_rootNodeFocusListenerCount","_windowFocusListener","_windowFocusTimeoutId","_stopInputModalityDetector","_rootNodeFocusAndBlurListener","parentElement","_onFocus","_onBlur","_detectionMode","detectionMode","monitor","checkChildren","of","rootNode","_getShadowRoot","_supportsShadowDom","createShadowRoot","attachShadow","getRootNode","ShadowRoot","_getDocument","cachedInfo","subject","info","_registerGlobalListeners","stopMonitoring","elementInfo","_setClasses","delete","_removeGlobalListeners","focusVia","origin","_getClosestElementsInfo","currentElement","_originChanged","_setOrigin","_info","_getWindow","_getFocusOrigin","focusEventTarget","_shouldBeAttributedToTouch","_lastFocusOrigin","_isLastInteractionFromInputLabel","contains","toggle","isFromInteraction","clearTimeout","_originTimeoutId","relatedTarget","Node","_emitOrigin","observers","rootNodeFocusListeners","modality","results","mostRecentTarget","labels","HighContrastMode","NONE","BLACK_ON_WHITE","WHITE_ON_BLACK","BLACK_ON_WHITE_CSS_CLASS","WHITE_ON_BLACK_CSS_CLASS","HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS","HighContrastModeDetector","_breakpointSubscription","_hasCheckedHighContrastMode","_applyBodyHighContrastModeCssClasses","getHighContrastMode","testElement","backgroundColor","documentWindow","computedStyle","computedColor","replace","bodyClasses","mode","A11yModule","highContrastModeDetector","DIR_DOCUMENT","DIR_DOCUMENT_FACTORY","RTL_LOCALE_PATTERN","Directionality","_resolveDirectionality","rawValue","language","BidiModule","MATERIAL_SANITY_CHECKS","MATERIAL_SANITY_CHECKS_FACTORY","MatCommonModule","_sanityChecks","_hasDoneGlobalChecks","_checkIsEnabled","RippleState","FADING_IN","VISIBLE","FADING_OUT","HIDDEN","RippleRef","_animationForciblyDisabledThroughCss","state","fadeOut","fadeOutRipple","passiveCapturingEventOptions$1","RippleEventManager","_delegateEventHandler","handlers","handleEvent","addHandler","handlersForEvent","handlersForElement","removeHandler","size","defaultRippleAnimationConfig","enterDuration","exitDuration","passiveCapturingEventOptions","pointerDownEvents","pointerUpEvents","RippleRenderer","_eventManager","_target","elementOrElementRef","_isPointerDown","_activeRipples","_pointerUpEventsRegistered","_containerElement","fadeInRipple","y","containerRect","_containerRect","getBoundingClientRect","animationConfig","animation","centered","left","top","radius","distanceToFurthestCorner","rect","distX","Math","max","abs","right","distY","bottom","sqrt","offsetX","offsetY","ripple","color","transitionDuration","computedStyles","userTransitionDuration","animationForciblyDisabledThroughCss","transitionProperty","rippleRef","transform","persistent","_mostRecentTransientRipple","eventListeners","onTransitionEnd","fallbackTimer","_finishRippleTransition","onTransitionCancel","_destroyRipple","rippleEl","opacity","fadeOutAll","_getActiveRipples","fadeOutAllNonPersistent","setupTriggerEvents","_triggerElement","_removeTriggerEvents","_onTouchStart","_onPointerUp","_startFadeOutTransition","isMostRecentTransientRipple","isFakeMousedown","isSyntheticEvent","_lastTouchStartEvent","rippleDisabled","clientX","clientY","rippleConfig","terminateOnPointerUp","trigger","MAT_RIPPLE_GLOBAL_OPTIONS","MatRipple","_disabled","_setupTriggerEventsIfEnabled","_trigger","platform","globalOptions","_animationMode","_isInitialized","_globalOptions","_rippleRenderer","ngOnInit","launch","configOrX","i1$1","ANIMATION_MODULE_TYPE","hostAttrs","unbounded","standalone","MatRippleModule","eventListenerOptions","rippleInteractionEvents","matRippleUninitialized","matRippleClassName","matRippleCentered","matRippleDisabled","MatRippleLoader","optional","_globalRippleOptions","NgZone","_hosts","_onInteraction","eventTarget","HTMLElement","closest","namespace","_createRipple","hosts","host","destroyRipple","configureRipple","className","getRipple","setDisabled","existingRipple","append","attachRipple","_c0","MatProgressSpinner_ng_template_0_Template","ctx_r0","_viewBox","_strokeCircumference","_circleStrokeWidth","_circleRadius","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY","diameter","BASE_SIZE","MatProgressSpinner","_color","_defaultColor","animationMode","defaults","_value","_diameter","_noopAnimations","_forceAnimations","strokeWidth","min","_strokeWidth","viewBox","PI","_strokeDashOffset","ɵcmp","viewQuery","_t","_determinateCircle","first","numberAttribute","decls","vars","consts","template","circle_r2","dependencies","NgTemplateOutlet","styles","encapsulation","changeDetection","MatProgressSpinnerModule","CommonModule","nodeEventEmitterMethods","eventTargetMethods","jqueryMethods","fromEvent","eventName","isFunction","isEventTarget","methodName","isNodeStyleEventEmitter","toCommonHandlerRegistry","isJQueryStyleEventEmitter","on","off","isArrayLike","mergeMap","subTarget","TypeError","animationFrameProvider","request","requestAnimationFrame","cancel","cancelAnimationFrame","delegate","handle","timestamp","Subscription","AnimationFrameScheduler","AsyncScheduler","flush","action","_active","flushId","_scheduled","actions","shift","execute","delay","id","AnimationFrameAction","AsyncAction","work","requestAsyncId","recycleAsyncId","_a","resolved","nextHandle","activeHandles","findAndClearHandle","Immediate","setImmediate","clearImmediate","immediateProvider","AsapScheduler","AsapAction","auditTime","duration","audit","durationSelector","durationSubscriber","isComplete","endDuration","cleanupDuration","closed","timer","ScrollDispatcher","_scrolled","_globalSubscription","_scrolledCount","scrollContainers","register","scrollable","elementScrolled","deregister","scrollableReference","scrolled","auditTimeInMs","_addGlobalListener","subscription","_removeGlobalListener","container","ancestorScrolled","ancestors","getAncestorScrollContainers","scrollingContainers","_subscription","_scrollableContainsElement","scrollableElement","getElementRef","CdkScrollable","scrollDispatcher","_destroyed","_elementScrolled","isRtl","end","start","scrollHeight","clientHeight","scrollWidth","clientWidth","_applyScrollToOptions","scrollTop","measureScrollOffset","LEFT","RIGHT","i2","ViewportRuler","_change","_changeListener","_viewportSize","getViewportSize","_updateViewportSize","getViewportRect","scrollPosition","getViewportScrollPosition","documentRect","scrollY","scrollX","throttleTime","innerWidth","innerHeight","CdkScrollableModule","ScrollingModule","Portal","attach","_attachedHost","detach","isAttached","setAttachedHost","ComponentPortal","viewContainerRef","componentFactoryResolver","projectableNodes","TemplatePortal","templateRef","context","DomPortal","BasePortalOutlet","_isDisposed","attachDomPortal","_attachedPortal","portal","attachComponentPortal","attachTemplatePortal","_invokeDisposeFn","dispose","setDisposeFn","_disposeFn","DomPortalOutlet","outletElement","_componentFactoryResolver","_appRef","_defaultInjector","anchorNode","createComment","replaceChild","componentFactory","resolveComponentFactory","componentRef","createComponent","NULL","attachView","hostView","viewCount","detachView","_getComponentRootNode","viewContainer","viewRef","createEmbeddedView","rootNodes","detectChanges","CdkPortalOutlet","_viewContainerRef","attached","_getRootNode","attachedRef","_attachedRef","ref","clear","PortalModule","BlockScrollStrategy","_viewportRuler","_previousHTMLStyles","_isEnabled","_canBeEnabled","_previousScrollPosition","html","htmlStyle","bodyStyle","previousHtmlScrollBehavior","scrollBehavior","previousBodyScrollBehavior","scroll","viewport","CloseScrollStrategy","_scrollDispatcher","_config","_scrollSubscription","_detach","_overlayRef","overlayRef","stream","overlayElement","threshold","_initialScrollPosition","updatePosition","NoopScrollStrategy","isElementScrolledOutsideView","containerBounds","isElementClippedByScrolling","scrollContainerRect","RepositionScrollStrategy","scrollThrottle","autoClose","overlayRect","ScrollStrategyOptions","close","block","reposition","OverlayConfig","scrollStrategy","panelClass","hasBackdrop","backdropClass","disposeOnNavigation","configKeys","ConnectedOverlayPositionChange","connectionPair","scrollableViewProperties","BaseOverlayDispatcher","_attachedOverlays","OverlayKeyboardDispatcher","_keydownListener","overlays","_keydownEvents","keydownEvents","_isAttached","OverlayOutsideClickDispatcher","_cursorStyleIsSet","_pointerDownListener","_pointerDownEventTarget","_clickListener","_outsidePointerEvents","containsPierceShadowDom","outsidePointerEvents","_addEventListeners","_cursorOriginalValue","cursor","child","supportsShadowRoot","OverlayContainer","getContainerElement","_createContainer","containerClass","oppositePlatformContainers","OverlayRef","_portalOutlet","_host","_pane","_keyboardDispatcher","_location","_outsideClickDispatcher","_animationsDisabled","_backdropElement","_backdropClick","_attachments","_detachments","_locationChanges","EMPTY","_backdropClickHandler","_backdropTransitionendHandler","_disposeBackdrop","_renders","_scrollStrategy","_positionStrategy","positionStrategy","_afterRenderRef","afterRender","backdropElement","hostElement","_previousHostParent","attachResult","_updateStackingOrder","_updateElementSize","_updateElementDirection","_togglePointerEvents","_attachBackdrop","_toggleClasses","onDestroy","detachBackdrop","detachmentResult","_detachContentWhenEmpty","_disposeScrollStrategy","backdropClick","attachments","detachments","getConfig","apply","updatePositionStrategy","strategy","updateSize","sizeConfig","setDirection","direction","addPanelClass","classes","removePanelClass","getDirection","updateScrollStrategy","minWidth","minHeight","maxWidth","maxHeight","enablePointer","showingClass","backdropToDetach","_backdropTimeout","cssClasses","isAdd","merge","backdrop","boundingBoxClass","cssUnitPattern","FlexibleConnectedPositionStrategy","positions","_preferredPositions","connectedTo","_overlayContainer","_lastBoundingBoxSize","_isPushed","_canPush","_growAfterOpen","_hasFlexibleDimensions","_positionLocked","_viewportMargin","_scrollables","_positionChanges","_resizeSubscription","_offsetX","_offsetY","_appliedPanelClasses","positionChanges","setOrigin","_validatePositions","_boundingBox","_isInitialRender","_lastPosition","reapplyLastPosition","_clearPanelClasses","_resetOverlayElementStyles","_resetBoundingBoxStyles","_viewportRect","_getNarrowedViewportRect","_originRect","_getOriginRect","_overlayRect","originRect","viewportRect","flexibleFits","fallback","pos","originPoint","_getOriginPoint","overlayPoint","_getOverlayPoint","overlayFit","_getOverlayFit","isCompletelyWithinViewport","_applyPosition","_canFitWithFlexibleDimensions","boundingBoxRect","_calculateBoundingBoxRect","visibleArea","bestFit","bestScore","fit","score","weight","_previousPushAmount","extendStyles","alignItems","justifyContent","lastPosition","withScrollableContainers","scrollables","withPositions","withViewportMargin","margin","withFlexibleDimensions","flexibleDimensions","withGrowAfterOpen","growAfterOpen","withPush","canPush","withLockedPosition","isLocked","withDefaultOffsetX","offset","withDefaultOffsetY","withTransformOriginOn","selector","_transformOriginSelector","originX","startX","_isRtl","endX","originY","overlayStartX","overlayStartY","overlayX","overlayY","point","rawOverlayRect","overlay","getRoundedBoundingClientRect","_getOffset","topOverflow","bottomOverflow","visibleWidth","_subtractOverflows","visibleHeight","fitsInViewportVertically","fitsInViewportHorizontally","availableHeight","availableWidth","getPixelValue","_pushOverlayOnScreen","overflowRight","overflowBottom","overflowTop","overflowLeft","pushX","pushY","_setTransformOrigin","_setOverlayElementStyles","_setBoundingBoxStyles","_addPanelClasses","scrollVisibility","_getScrollVisibility","_lastScrollVisibility","compareScrollVisibility","a","b","isOriginClipped","isOriginOutsideView","isOverlayClipped","isOverlayOutsideView","changeEvent","elements","xOrigin","yOrigin","transformOrigin","smallestDistanceToViewportEdge","previousHeight","previousWidth","_hasExactPosition","hasExactPosition","hasFlexibleDimensions","_getExactOverlayY","_getExactOverlayX","transformString","horizontalStyleProperty","originBounds","overlayBounds","scrollContainerBounds","overflows","currentOverflow","axis","cssClass","destination","input","units","clientRect","floor","wrapperClass","GlobalPositionStrategy","_cssPosition","_topOffset","_bottomOffset","_alignItems","_xPosition","_xOffset","_width","_height","centerHorizontally","centerVertically","parentStyles","shouldBeFlushHorizontally","shouldBeFlushVertically","xPosition","xOffset","marginLeft","marginRight","marginTop","marginBottom","OverlayPositionBuilder","global","flexibleConnectedTo","nextUniqueId","Overlay","scrollStrategies","_positionBuilder","_directionality","_animationsModuleType","_createHostElement","pane","_createPaneElement","portalOutlet","_createPortalOutlet","overlayConfig","EnvironmentInjector","ApplicationRef","i5","i6","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER","deps","useFactory","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY","OverlayModule","CdkDialogContainer_ng_template_0_Template","DialogConfig","role","disableClose","ariaDescribedBy","ariaLabelledBy","ariaLabel","ariaModal","autoFocus","restoreFocus","closeOnNavigation","closeOnDestroy","closeOnOverlayDetachments","CdkDialogContainer","_focusTrapFactory","_interactivityChecker","_focusMonitor","_focusTrap","_elementFocusedBeforeDialogWasOpened","_closeInteractionType","_ariaLabelledByQueue","_changeDetectorRef","ChangeDetectorRef","_isDestroyed","_contentAttached","_addAriaLabelledBy","markForCheck","_removeAriaLabelledBy","_initializeFocusTrap","_handleBackdropClicks","_captureInitialFocus","_trapFocus","_restoreFocus","_recaptureFocus","_containsFocus","_forceFocus","_focusByCssSelector","elementToFocus","_focusDialogContainer","focusConfig","focusTargetElement","DialogRef","preventDefault","focusOrigin","_detachSubscription","containerInstance","closedSubject","componentInstance","DIALOG_SCROLL_STRATEGY","DIALOG_DATA","DEFAULT_DIALOG_CONFIG","uniqueId","Dialog","openDialogs","_parentDialog","_openDialogsAtThisLevel","afterOpened","_afterOpenedAtThisLevel","_overlay","_defaultOptions","_afterAllClosedAtThisLevel","_ariaHiddenElements","afterAllClosed","defer","_getAfterAllClosed","open","componentOrTemplateRef","getDialogById","_getOverlayConfig","dialogRef","dialogContainer","_attachContainer","_attachDialogContent","_hideNonDialogContentFromAssistiveTechnology","_removeOpenDialog","closeAll","reverseForEach","dialog","find","userInjector","containerType","containerPortal","instance","TemplateRef","_createInjector","$implicit","templateContext","contentRef","fallbackInjector","overlayContainer","siblings","sibling","items","DialogModule","MatDialogContainer_ng_template_2_Template","MatDialogConfig","delayFocusTrap","OPEN_CLASS","OPENING_CLASS","CLOSING_CLASS","MatDialogContainer","focusTrapFactory","dialogConfig","interactivityChecker","focusMonitor","_animationStateChanged","_animationsEnabled","_actionSectionCount","_hostElement","_enterAnimationDuration","parseCssTime","enterAnimationDuration","_exitAnimationDuration","exitAnimationDuration","_animationTimer","_finishDialogOpen","_clearAnimationClasses","_openAnimationDone","_finishDialogClose","totalTime","_startOpenAnimation","TRANSITION_DURATION_PROPERTY","_requestAnimationFrame","_waitForAnimationToComplete","_startExitAnimation","_updateActionSectionCount","delta","location","time","endsWith","substring","MatDialogState","OPEN","CLOSING","CLOSED","MatDialogRef","_ref","_containerInstance","_afterOpened","_beforeClosed","_state","_closeFallbackTimeout","_result","_closeDialogVia","dialogResult","afterClosed","beforeClosed","getState","interactionType","MAT_DIALOG_DATA","MAT_DIALOG_DEFAULT_OPTIONS","MAT_DIALOG_SCROLL_STRATEGY","MatDialog","dialogConfigClass","_dialog","_dialogRefConstructor","_dialogContainerType","_dialogDataToken","cdkRef","cdkConfig","_closeDialogs","dialogs","dialogElementUid","MatDialogClose","getClosestDialog","proxiedChange","_matDialogClose","_matDialogCloseResult","_onButtonClick","screenX","screenY","MatDialogLayoutSection","_dialogRef","_onAdd","_onRemove","MatDialogTitle","ɵMatDialogTitle_BaseFactory","MatDialogContent","i3","MatDialogActions","ɵMatDialogActions_BaseFactory","align","MatDialogModule","_c1","_c2","MAT_BUTTON_CONFIG","HOST_SELECTOR_MDC_CLASS_PAIR","attribute","mdcClasses","MatButtonBase","_rippleLoader","disableRipple","_disableRipple","_updateRippleDisabled","_isFab","disabledInteractive","ngAfterViewInit","_getAriaDisabled","ariaDisabled","_getDisabledAttribute","booleanAttribute","MatButton","attrs","ngContentSelectors","MatButtonModule","ChatService","getInstructionCache","cache","localStorage","getItem","JSON","parse","ChatInstructionDialogComponent","instructionText","_chatService","saveInstruction","setItem","stringify","bundledLanguagesInfo","import","all","aliases","bundledLanguagesBase","fromEntries","bundledLanguagesAlias","flatMap","bundledLanguages","getWasmInlined","_asyncToGenerator","wasm","default","_x","bundledThemes","displayName","EncodedTokenAttributes","FontStyle","NotSet","None","Italic","Bold","Underline","createMatchers","matchesName","tokenizer","newTokenizer","regex","match","exec","priority","charAt","log","matcher","parseConjunction","parseOperand","expressionToNegate","matcherInput","expressionInParents","parseInnerExpression","matchers","isIdentifier","identifiers","every","disposeOnigString","str","doClone","something","cloneArray","arr","r","len","cloneObj","obj","mergeObjects","basename","idx","lastIndexOf","substr","process","toBinaryStr","encodedTokenAttributes","padStart","print","languageId","getLanguageId","tokenType","getTokenType","fontStyle","getFontStyle","foreground","getForeground","background","getBackground","containsBalancedBrackets","_languageId","_tokenType","_containsBalancedBracketsBit","_fontStyle","_foreground","_background","CAPTURING_REGEX_SOURCE","RegexSource","hasCaptures","regexSource","lastIndex","replaceCaptures","captureSource","captureIndices","commandIndex","command","toUpperCase","strcmp","strArrCmp","len1","len2","isValidHexColor","hex","escapeRegExpCharacters","CachedFn","TopLevelRuleReference","scopeName","toKey","TopLevelRepositoryRuleReference","ruleName","ExternalReferenceCollector","_references","_seenReferenceKeys","references","visitedRule","reference","ScopeDependencyProcessor","repo","initialScopeName","seenFullScopeRequests","seenPartialScopeRequests","Q","processQueue","q","dep","collectReferencesOfReference","baseGrammarScopeName","selfGrammar","lookup","Error","baseGrammar","collectExternalReferencesInTopLevelRule","collectExternalReferencesInTopLevelRepositoryRule","repository","injections","injection","collectExternalReferencesInRules","patterns","rules","rule","patternRepository","include","parseInclude","kind","newContext","BaseReference","SelfReference","RelativeReference","TopLevelReference","TopLevelRepositoryReference","indexOfSharp","HAS_BACK_REFERENCES","BACK_REFERENCING_END","endRuleId","whileRuleId","Rule","$location","_nameIsCapturing","_name","_contentNameIsCapturing","_contentName","contentName","debugName","filename","line","getName","lineText","getContentName","CaptureRule","retokenizeCapturedWithRuleId","collectPatterns","grammar","out","compile","endRegexSource","compileAG","allowA","allowG","MatchRule","_match","captures","_cachedCompiledPatterns","RegExpSource","debugMatchRegExp","_getCachedCompiledPatterns","RegExpSourceList","IncludeOnlyRule","hasMissingPatterns","pattern","getRule","BeginEndRule","_begin","beginCaptures","_end","endHasBackReferences","endCaptures","applyEndPatternLast","begin","hasBackReferences","debugBeginRegExp","debugEndRegExp","getEndWithResolvedBackReferences","resolveBackReferences","clone","unshift","setSource","BeginWhileRule","whileCaptures","_while","whileHasBackReferences","_cachedCompiledWhilePatterns","debugWhileRegExp","getWhileWithResolvedBackReferences","compileWhile","_getCachedCompiledWhilePatterns","compileWhileAG","RuleFactory","createCaptureRule","helper","registerRule","getCompiledRuleId","desc","$vscodeTextmateLocation","_compileCaptures","_compilePatterns","while","maximumCaptureId","captureId","numericCaptureId","ruleId","localIncludedRule","externalGrammarInclude","externalGrammar","getExternalGrammar","externalIncludedRule","$self","skipRule","hasAnchor","_anchorCache","regExpSource","lastPushedPos","nextCh","join","_buildAnchorCache","newSource","capturedValues","g1","ch","A0_G0_result","A0_G1_result","A1_G0_result","A1_G1_result","A0_G0","A0_G1","A1_G0","A1_G1","resolveAnchors","_items","_hasAnchors","_cached","_disposeCaches","item","onigLib","regExps","CompiledRule","_resolveAnchors","scanner","createOnigScanner","findNextMatchSync","string","startPosition","Theme","_colorMap","_defaults","_root","createFromRawTheme","colorMap","createFromParsedTheme","parseTheme","settings","resultLen","scopes","entry","scope","_scope","segments","j","lenJ","parentScopes","reverse","ParsedThemeRule","resolveParsedThemeRules","parsedThemeRules","sort","defaultFontStyle","defaultForeground","defaultBackground","incomingDefaults","ColorMap","StyleAttributes","getId","ThemeTrieElement","ThemeTrieElementRule","insert","_cachedMatchRoot","getColorMap","getDefaults","scopePath","effectiveRule","_scopePathMatchesParentScopes","scopePattern","_matchesScope","ScopeStack","scopeNames","getSegments","extends","other","getExtensionIfDefined","base","startsWith","foregroundId","backgroundId","_isFrozen","_lastColorId","_id2color","_color2id","scopeDepth","cloneArr","acceptOverwrite","_mainRule","_children","_rulesWithParentScopes","rulesWithParentScopes","_sortBySpecificity","_cmpBySpecificity","aParentScopes","bParentScopes","aParentScopesLen","bParentScopesLen","aLen","bLen","tail","dotIndex","_doInsertHere","BasicScopeAttributes","BasicScopeAttributesProvider","_defaultAttributes","_embeddedLanguagesMatcher","initialLanguageId","embeddedLanguages","ScopeMatcher","entries","getDefaultAttributes","getBasicScopeAttributes","_NULL_SCOPE_METADATA","_getBasicScopeAttributes","static","_scopeToLanguage","standardTokenType","_toStandardTokenType","STANDARD_TOKEN_TYPE_REGEXP","scopesRegExp","escapedScopes","RegExp","TokenizeStringResult","stack","stoppedEarly","_tokenizeString","isFirstLine","linePos","lineTokens","checkWhileConditions","timeLimit","lineLength","STOP","anchorPosition","whileCheckResult","_checkWhileConditions","beginRuleCapturedEOL","whileRules","pop","nodeRule","whileRule","ruleScanner","findOptions","prepareRuleWhileSearch","endRule","produce","handleCaptures","startTime","scanNext","matchRuleOrInjections","matchResult","matchRule","prepareRuleSearch","matchedRuleId","getInjections","injectionResult","matchInjections","bestMatchRuleId","bestMatchRating","MAX_VALUE","bestMatchCaptureIndices","bestMatchResultPriority","contentNameScopesList","getScopeNames","matchRating","priorityMatch","matchResultScore","injectionResultScore","hasAdvanced","poppedRule","withContentNameScopesList","nameScopesList","popped","getAnchorPos","getEnterPos","_rule","beforePush","pushAttributed","pushedRule","withEndRule","hasSameRuleAs","safePop","lineTextContent","localStack","maxEnd","captureRule","captureIndex","endPos","produceFromScopes","stackClone","onigSubStr","createOnigString","captureRuleScopeName","captureRuleScopesList","LocalStackElement","collectInjections","ruleFactoryHelper","nameMatcher","debugSelector","identifers","scopesAreMatching","thisScopeName","Grammar","_rootScopeName","balancedBracketSelectors","_onigLib","_rootId","_lastRuleId","_ruleId2desc","_includedGrammars","_grammarRepository","_grammar","_injections","_basicScopeAttributesProvider","_tokenTypeMatchers","themeProvider","initialLanguage","tokenTypes","grammarRepository","initGrammar","getMetadataForScope","_collectInjections","rawInjections","expression","injectionScopeNames","injectionScopeName","injectionGrammar","injectionSelector","rawIncludedGrammar","$base","tokenizeLine","prevState","_tokenize","tokens","getResult","ruleStack","tokenizeLine2","getBinaryResult","emitBinaryTokens","StateStackImpl","rawDefaultMetadata","defaultStyle","defaultMetadata","rootScopeName","scopeList","AttributedScopeStack","createRootAndLookUpScopeName","createRoot","onigLineText","LineTokens","tokenAttributes","fromExtension","namesScopeList","frame","rawRootMetadata","rootStyle","themeMatch","resolvedTokenAttributes","mergeAttributes","equals","existingTokenAttributes","basicScopeAttributes","styleAttributes","_pushAttributed","rawMetadata","newPath","scopeThemeMatchResult","metadata","self","_stackElementBrand","_enterPos","_anchorPos","depth","enterPos","anchorPos","_equals","_structuralEquals","_reset","_writeString","outIndex","contentNameScopeStack","toStateStackFrame","pushFrame","BalancedBracketSelectors","balancedBracketScopes","unbalancedBracketScopes","allowAny","matchesAlways","matchesNever","excluder","includer","_emitBinaryTokens","_lineText","_tokens","_binaryTokens","_lastTokenEndIndex","_tokenTypeOverrides","tokenTypeOverrides","endIndex","scopesList","startIndex","Uint32Array","SyncRegistry","_onigLibPromise","_grammars","_rawGrammars","_injectionGrammars","_theme","theme","setTheme","addGrammar","targetScope","grammarForScopeName","_this","rawGrammar","createGrammar","Registry$1","_syncRegistry","_ensureGrammarCache","loadGrammarWithEmbeddedLanguages","loadGrammarWithConfiguration","configuration","_loadGrammar","unbalancedBracketSelectors","loadGrammar","_this2","dependencyProcessor","_loadSingleGrammar","_grammarForScopeName","_this3","_doLoadSingleGrammar","_this4","_this5","INITIAL","StackElementMetadata","splitLines","code","preserveEnding","parts","lines","isPlainLang","lang","isSpecialLang","isNoneTheme","isSpecialTheme","addClassToHast","properties","class","targets","resolveColorReplacements","replacements","colorReplacements","themeName","assign","applyColorReplacements","getTokenStyleObject","bgColor","stringifyTokenStyle","namedColors","decorations","findSequence","nextEscape","nextClose","sequence","parseColor","colorMode","rgb","colorIndex","parseSequence","commands","codeInt","decoration","defaultNamedColorsMap","black","red","green","yellow","blue","magenta","cyan","white","brightBlack","brightRed","brightGreen","brightYellow","brightBlue","brightMagenta","brightCyan","brightWhite","createColorPalette","namedColorsMap","namedColor","rgbColor","colorTable","tableColor","getColorTable","levels","g","level","ShikiError","message","GrammarState","_stack","getScopes","visited","pushScope","toJSON","codeToTokensBase","internal","getLoadedThemes","tokenizeAnsiWithTheme","fileContents","colorPalette","colors","parser","createAnsiSequenceParser","decorations2","findResult","text","styleToken","bg","fg","dimColor","hexMatch","alpha","round","cssVarMatch","getLanguage","grammarState","tokenizeWithTheme","_tokenizeWithTheme","tokenizeMaxLineLength","tokenizeTimeLimit","stateStack","getGrammarStack","grammarContextCode","actual","final","themeSettingsSelectors","includeExplanation","setting","lineOffset","resultWithScopes","tokensWithScopes","tokensWithScopesIndex","tokensLength","nextStartIndex","explanation","tokenWithScopes","tokenWithScopesText","explainThemeScopes","themeSelectors","themeMatches","explainThemeScope","matchesOne","selectorParentIndex","parentIndex","selectorPieces","codeToTokensWithThemes","themes","syncThemesTokenization","outThemes","t","outLines","indexes","l","minLength","n","lineIdx","_token","tokenIdx","mergedToken","variants","themeIdx","__","___","codeToTokens","defaultColor","cssVariablePrefix","themeTokens","themeRegs","getTheme","themesOrder","mergeToken","merged","variantsOrder","styleKeys","mergedStyles","acc","cur","varKey","themeColorReplacements","transformerDecorations","WeakMap","getContext","shiki","meta","normalizePosition","p","converter","indexToPos","posToIndex","character","createPositionConverter","d","verifyIntersections","foo","bar","isFooHasBarEnd","isBarHasFooStart","isBarHasFooEnd","splitTokens","sorted","breakpointsInToken","splitToken","offsets","lastOffset","codeEl","tagName","applyLineSection","lineEl","POSITIVE_INFINITY","alwaysWrap","wrapper","applyDecoration","applyLine","lineApplies","builtInTransformers","getTransformers","transformers","codeToHast","transformerContext","_code","transformer","preprocess","call","mergeWhitespaces","mergeWhitespaceTokens","newLine","carryOnContent","firstOffset","couldMerge","splitWhitespaceTokens","leading","trailing","expanded","contextSource","tokensToHast","structure","preNode","tabindex","codeNode","lineNodes","pre","lineNode","col","tokenNode","span","htmlVoidElements","Schema","property","normal","space","definitions","normalize","Info","boolean","booleanish","overloadedBoolean","number","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","defined","powers","increment","types","freeze","__proto__","checks","DefinedInfo","mask","mark","check","own$3","definition","prop","attributes","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDetails","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLevel","ariaLive","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","html$3","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","alt","as","async","autoCapitalize","autoComplete","autoPlay","blocking","charSet","checked","cite","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","dirName","download","draggable","encType","enterKeyHint","fetchPriority","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","hidden","high","href","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inert","inputMode","integrity","isMap","itemId","itemProp","itemRef","itemScope","itemType","label","loading","loop","low","manifest","maxLength","method","multiple","muted","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeToggle","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","ping","placeholder","playsInline","popover","popoverTarget","popoverTargetAction","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rows","rowSpan","sandbox","scoped","seamless","selected","shadowRootDelegatesFocus","shadowRootMode","shape","sizes","slot","spellCheck","src","srcDoc","srcLang","srcSet","step","title","translate","typeMustMatch","useMap","wrap","aLink","archive","border","borderColor","bottomMargin","cellPadding","cellSpacing","char","charOff","classId","codeBase","codeType","compact","declare","face","frameBorder","hSpace","leftMargin","link","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","object","profile","prompt","rev","rightMargin","scheme","scrolling","standby","summary","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","prefix","security","unselectable","svg$1","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","textAnchor","textDecoration","textRendering","typeOf","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cx","cy","defaultAction","descent","diffuseConstant","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filterRes","filterUnits","focusable","focusHighlight","format","fr","fx","fy","g2","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","numOctaves","operator","order","orient","orientation","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","resource","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","unicode","viewTarget","widths","x1","x2","xChannelSelector","y1","y2","yChannelSelector","z","zoomAndPan","dash","cap","kebab","$0","camelcase","html$2","svg","own$2","characterEntitiesLegacy","characterEntitiesHtml4","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","fnof","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","beta","gamma","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","bull","hellip","prime","Prime","oline","frasl","weierp","image","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","infin","ang","and","or","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","rang","loz","spades","clubs","hearts","diams","quot","amp","lt","gt","OElig","oelig","Scaron","scaron","Yuml","circ","tilde","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","permil","lsaquo","rsaquo","euro","dangerous","own$1","characters","formatSmart","named","numeric","toHexadecimal","omit","String","fromCharCode","omitOptionalSemicolons","useNamedReferences","useShortestReferences","toNamed","decimal","toDecimal","stringifyEntities","core","subset","charactersToExpression","groups","basic","escapeOnly","surrogate","pair","charCodeAt","htmlCommentRegex","bogusCommentEntitySubset","commentEntitySubset","ccount","stringify$1","padRight","padLeft","re","whitespace","thing","siblingAfter","siblingBefore","emptyChildren$1","includeWhitespace","own","omission","closing","body$1","caption","headOrColgroupOrCaption","colgroup","dd","dt","html$1","li","optgroup","option","rp","rubyElement","rt","tbody","tbody$1","td","cells","tfoot","th","thead","tr","opening","previous","seen","constants","unquoted","single","double","serializeAttribute","schema","Type","rest","dashes","allowParseErrors","allowDangerousCharacters","quote","characterReferences","tightCommaSeparatedLists","collapseEmptyAttributes","preferUnquoted","quoteSmart","alternative","textEntitySubset","zwitch","one","parameters","unknown","node_","comment","_1","_2","bogusComments","encode","doctype","_3","upperDoctype","tightDoctype","omitOptionalTags","selfClosing","closeEmptyElements","voids","last","serializeAttributes","tightAttributes","closeSelfClosing","tightSelfClosing","raw","allowDangerousHtml","emptyOptions","emptyCharacterReferences","emptyChildren","_main","init","wasmMemory","buffer","binding","updateGlobalBufferAndViews","buf","HEAPU8","Uint8Array","HEAPU32","emscripten_realloc_buffer","grow","byteLength","UTF8Decoder","TextDecoder","UTF8ToString","ptr","maxBytesToRead","UTF8ArrayToString","heapOrArray","endIdx","endPtr","decode","subarray","u0","asmLibraryArg","emscripten_get_now","_emscripten_get_now","performance","emscripten_memcpy_big","_emscripten_memcpy_big","dest","num","copyWithin","emscripten_resize_heap","_emscripten_resize_heap","requestedSize","oldSize","maxHeapSize","alignUp","cutDown","overGrownHeapSize","fd_write","_createWasm","exports","env","wasi_snapshot_preview1","memory","createWasm","onigBinding","UtfString","_utf8ByteLength","charCode","codepoint","wasSurrogatePair","nextCharCode","utf16Length","utf8Length","utf16Value","utf8Value","utf16OffsetToUtf8","utf8OffsetToUtf16","computeIndicesMapping","i8","i16","codePoint","createString","omalloc","initPromise","OnigString","LAST_ID","_onigBinding","utfString","_sharedPtrInUse","_sharedPtr","convertUtf8OffsetToUtf16","utf8Offset","convertUtf16OffsetToUtf8","utf16Offset","ofree","OnigScanner","_ptr","strPtrsArr","strLenArr","strPtrsPtr","strLenPtr","scannerPtr","throwLastOnigError","getLastOnigError","freeOnigScanner","arg","debugCall","_findNextMatchSync","resultPtr","findNextOnigScannerMatchDbg","findNextOnigScannerMatch","beg","loadWasm","_load2","main","isInstantiatorOptionsObject","dataOrOptions","instantiator","isInstantiatorModule","isDataOptionsObject","isResponse","Response","WebAssembly","instantiateStreaming","_makeResponseStreamingLoader","importObject","_makeResponseNonStreamingLoader","_ref2","arrayBuffer","instantiate","_x3","isArrayBuffer","ArrayBuffer","isView","Buffer","isBuffer","SharedArrayBuffer","Module","_makeArrayBufferLoader","_x2","_load","VSCODE_FALLBACK_EDITOR_FG","light","dark","VSCODE_FALLBACK_EDITOR_BG","RESOLVED_KEY","normalizeTheme","rawTheme","tokenColors","globalSetting","s","replacementCount","replacementMap","getReplacementColor","replaceFg","replaceBg","replacement","enumerable","writable","Registry","_resolver","_themes","_langs","_alias","_resolvedThemes","_resolvedGrammars","_langMap","_langGraph","_textmateThemeCache","_loadedThemesCache","_loadedLanguagesCache","loadTheme","loadLanguage","textmateTheme","getGrammar","embeddedLazilyBy","embeddedLangsLazy","addLanguage","grammarConfig","alias","loadLanguages","langs","resolveEmbeddedLanguages","langsGraphArray","missingLangs","dependents","embeddedLangs","getLoadedLanguages","embeddedLang","Resolver","_scopeToLang","onigLibPromise","getLangRegistration","langIdOrAlias","injectTo","scopeParts","subScopeName","_defaultWasmLoader","instancesCount","_createShikiInternal","warnings","warn","isDisposed","normalizeGetter","_x5","_normalizeGetter","resolveLangs","_x6","_resolveLangs","_ref3","_x7","flat","wasmLoader","resolver","_registry","langAlias","_lastTheme","ensureNotDisposed","_loadLanguage","_loadTheme","_ref4","_x8","_lang","Symbol","_createHighlighterCore","createShikiInternal","getLastGrammarState","codeToHtml","toHtml","tree","options_","dist_all","postprocess","getInternalContext","createdBundledHighlighter","_createHighlighter","resolveLang","bundle","resolveTheme","createHighlighterCore","createHighlighter","_x4","ShikiService","highlighter","initShiki","highlightCode","GptService","http","apiUrl","apiKey","getApiKeyForOpenAI","alert","getModelAnsFromOpenAI","messages","HttpHeaders","Authorization","post","max_tokens","temperature","BlockUiDialogComponent","UiBlockService","addBlockUI","removeBlockUI","thread_r3","_r2","ctx_r3","checkHistoryThread","deleteThread","_r5","toggleSidebar","addNewChat","_r6","renameTitle","currentThreadData","_r7","createNewTitle","newTitle","ChatComponent_ng_container_18_div_1_Template","ChatComponent_ng_container_18_div_2_Template","isOpenRenameTitle","message_r8","getSanitizedHtml","ChatComponent_Conditional_35_div_0_Template","msgContents","_shikiService","_gptService","_sanitizer","_uiBlockService","platformId","_markdownService","userMenu","sidebar","myAIChatData","isSidebarOpen","userPromptText","isComposing","defaultCodeBoardLanguaged","createCurrentThreadDafaultData","getMyAIChatDataFromCahce","ngAfterViewChecked","copyCodeBoardEventListener","threadId","updateDeleteData","targetThreadData","targetIdx","findIndex","val","toggleUserMenu","openCusInstructionDialog","formatGptApiRes","ApiRes","allCodeBlockMatch","matchAll","afterFormattedRes","textIndex","fullMatch","getHighlightCode","managedCode","highlightedCode","encodedCode","encodeURIComponent","bypassSecurityTrustHtml","chatMessagesContainer","implementCopyCode","decodeURIComponent","copySuccess","clipboard","writeText","sendMessage","questionMsgContent","getOpenAiGptAnswer","onEnterPress","inputElement","currentHeight","neededHeight","cursorPosition","selectionStart","textBeforeCursor","textAfterCursor","selectionEnd","onCompositionStart","onCompositionEnd","saveToCahce","creatTimestamp","queAndAnsMsgContent","conversation","lastUpdateTime","generateTitleFromTimestamp","threadData","generateNewUUID","tabSortIdx","createTime","crypto","randomUUID","date","getFullYear","getMonth","getDate","getHours","getMinutes","passMsgContent","afterFormat","choices","answerMsgContent","created","fakeApiRes","exampleApiResText","fakeApiRes2","fakeApiRes3","openInstructionDialog","i4","i7","_r1","ChatComponent_div_11_Template","ChatComponent_div_16_Template","ChatComponent_ng_container_18_Template","ChatComponent_Conditional_35_Template","i9","MarkdownModule"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./projects/user/src/app/pages/chat-page/chat.routes.ts","./node_modules/@angular/forms/fesm2022/forms.mjs","./node_modules/rxjs/dist/esm/internal/observable/forkJoin.js","./node_modules/@angular/cdk/fesm2022/platform.mjs","./node_modules/@angular/cdk/fesm2022/keycodes.mjs","./node_modules/rxjs/dist/esm/internal/operators/skip.js","./node_modules/@angular/cdk/fesm2022/observers.mjs","./node_modules/@angular/cdk/fesm2022/coercion.mjs","./node_modules/@angular/cdk/fesm2022/layout.mjs","./node_modules/rxjs/dist/esm/internal/operators/debounceTime.js","./node_modules/@angular/cdk/fesm2022/a11y.mjs","./node_modules/@angular/cdk/fesm2022/bidi.mjs","./node_modules/@angular/material/fesm2022/core.mjs","./node_modules/@angular/material/fesm2022/progress-spinner.mjs","./node_modules/rxjs/dist/esm/internal/observable/fromEvent.js","./node_modules/rxjs/dist/esm/internal/scheduler/animationFrameProvider.js","./node_modules/rxjs/dist/esm/internal/scheduler/animationFrame.js","./node_modules/rxjs/dist/esm/internal/scheduler/AnimationFrameScheduler.js","./node_modules/rxjs/dist/esm/internal/scheduler/AnimationFrameAction.js","./node_modules/rxjs/dist/esm/internal/util/Immediate.js","./node_modules/rxjs/dist/esm/internal/scheduler/immediateProvider.js","./node_modules/rxjs/dist/esm/internal/scheduler/asap.js","./node_modules/rxjs/dist/esm/internal/scheduler/AsapScheduler.js","./node_modules/rxjs/dist/esm/internal/scheduler/AsapAction.js","./node_modules/rxjs/dist/esm/internal/operators/auditTime.js","./node_modules/rxjs/dist/esm/internal/operators/audit.js","./node_modules/@angular/cdk/fesm2022/scrolling.mjs","./node_modules/@angular/cdk/fesm2022/portal.mjs","./node_modules/@angular/cdk/fesm2022/overlay.mjs","./node_modules/@angular/cdk/fesm2022/dialog.mjs","./node_modules/@angular/material/fesm2022/dialog.mjs","./node_modules/@angular/material/fesm2022/button.mjs","./projects/user/src/app/services/chat.service.ts","./projects/user/src/app/pages/chat-page/chat/chatInstructionDialog/chat-instruction-dialog.component.ts","./projects/user/src/app/pages/chat-page/chat/chatInstructionDialog/chat-instruction-dialog.component.html","./node_modules/shiki/dist/langs.mjs","./node_modules/shiki/dist/chunks/wasm-dynamic.mjs","./node_modules/shiki/dist/themes.mjs","./node_modules/@shikijs/core/dist/types.mjs","./node_modules/@shikijs/core/dist/textmate.mjs","./node_modules/@shikijs/core/dist/index.mjs","./node_modules/shiki/dist/bundle-full.mjs","./projects/user/src/app/services/shiki.service.ts","./projects/user/src/app/services/gpt.service.ts","./projects/user/src/app/common-component/bolck-ui/block-ui-dialog.component.ts","./projects/user/src/app/common-component/bolck-ui/block-ui-dialog.component.html","./projects/user/src/app/services/block-ui.service.ts","./projects/user/src/app/pages/chat-page/chat/chat.component.html","./projects/user/src/app/pages/chat-page/chat/chat.component.ts"],"sourcesContent":["import { Routes } from '@angular/router';\nimport { ChatComponent } from './chat/chat.component';\n\n\nexport const chatRoutes: Routes = [\n  {\n    path: \"\",\n    children: [\n      {\n        path: 'index',\n        loadComponent: () => import('../chat-page/chat/chat.component').then(m => m.ChatComponent),\n        data: {\n          component: ChatComponent,\n        }\n      }\n    ],\n  }\n];\n\n","/**\n * @license Angular v18.2.8\n * (c) 2010-2024 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport * as i0 from '@angular/core';\nimport { Directive, InjectionToken, forwardRef, Optional, Inject, ɵisPromise, ɵisSubscribable, ɵRuntimeError, Self, computed, signal, untracked, EventEmitter, Input, Host, SkipSelf, booleanAttribute, ChangeDetectorRef, Output, Injectable, inject, NgModule, Version } from '@angular/core';\nimport { ɵgetDOM } from '@angular/common';\nimport { from, forkJoin, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * Base class for all ControlValueAccessor classes defined in Forms package.\n * Contains common logic and utility functions.\n *\n * Note: this is an *internal-only* class and should not be extended or used directly in\n * applications code.\n */\nclass BaseControlValueAccessor {\n    constructor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /**\n         * The registered callback function called when a change or input event occurs on the input\n         * element.\n         * @nodoc\n         */\n        this.onChange = (_) => { };\n        /**\n         * The registered callback function called when a blur event occurs on the input element.\n         * @nodoc\n         */\n        this.onTouched = () => { };\n    }\n    /**\n     * Helper method that sets a property on a target element using the current Renderer\n     * implementation.\n     * @nodoc\n     */\n    setProperty(key, value) {\n        this._renderer.setProperty(this._elementRef.nativeElement, key, value);\n    }\n    /**\n     * Registers a function called when the control is touched.\n     * @nodoc\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    /**\n     * Sets the \"disabled\" property on the range input element.\n     * @nodoc\n     */\n    setDisabledState(isDisabled) {\n        this.setProperty('disabled', isDisabled);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: BaseControlValueAccessor, deps: [{ token: i0.Renderer2 }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.8\", type: BaseControlValueAccessor, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: BaseControlValueAccessor, decorators: [{\n            type: Directive\n        }], ctorParameters: () => [{ type: i0.Renderer2 }, { type: i0.ElementRef }] });\n/**\n * Base class for all built-in ControlValueAccessor classes (except DefaultValueAccessor, which is\n * used in case no other CVAs can be found). We use this class to distinguish between default CVA,\n * built-in CVAs and custom CVAs, so that Forms logic can recognize built-in CVAs and treat custom\n * ones with higher priority (when both built-in and custom CVAs are present).\n *\n * Note: this is an *internal-only* class and should not be extended or used directly in\n * applications code.\n */\nclass BuiltInControlValueAccessor extends BaseControlValueAccessor {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: BuiltInControlValueAccessor, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.8\", type: BuiltInControlValueAccessor, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: BuiltInControlValueAccessor, decorators: [{\n            type: Directive\n        }] });\n/**\n * Used to provide a `ControlValueAccessor` for form controls.\n *\n * See `DefaultValueAccessor` for how to implement one.\n *\n * @publicApi\n */\nconst NG_VALUE_ACCESSOR = new InjectionToken(ngDevMode ? 'NgValueAccessor' : '');\n\nconst CHECKBOX_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => CheckboxControlValueAccessor),\n    multi: true,\n};\n/**\n * @description\n * A `ControlValueAccessor` for writing a value and listening to changes on a checkbox input\n * element.\n *\n * @usageNotes\n *\n * ### Using a checkbox with a reactive form.\n *\n * The following example shows how to use a checkbox with a reactive form.\n *\n * ```ts\n * const rememberLoginControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"checkbox\" [formControl]=\"rememberLoginControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass CheckboxControlValueAccessor extends BuiltInControlValueAccessor {\n    /**\n     * Sets the \"checked\" property on the input element.\n     * @nodoc\n     */\n    writeValue(value) {\n        this.setProperty('checked', value);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: CheckboxControlValueAccessor, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.8\", type: CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\", host: { listeners: { \"change\": \"onChange($event.target.checked)\", \"blur\": \"onTouched()\" } }, providers: [CHECKBOX_VALUE_ACCESSOR], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: CheckboxControlValueAccessor, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]',\n                    host: { '(change)': 'onChange($event.target.checked)', '(blur)': 'onTouched()' },\n                    providers: [CHECKBOX_VALUE_ACCESSOR],\n                }]\n        }] });\n\nconst DEFAULT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => DefaultValueAccessor),\n    multi: true,\n};\n/**\n * We must check whether the agent is Android because composition events\n * behave differently between iOS and Android.\n */\nfunction _isAndroid() {\n    const userAgent = ɵgetDOM() ? ɵgetDOM().getUserAgent() : '';\n    return /android (\\d+)/.test(userAgent.toLowerCase());\n}\n/**\n * @description\n * Provide this token to control if form directives buffer IME input until\n * the \"compositionend\" event occurs.\n * @publicApi\n */\nconst COMPOSITION_BUFFER_MODE = new InjectionToken(ngDevMode ? 'CompositionEventMode' : '');\n/**\n * The default `ControlValueAccessor` for writing a value and listening to changes on input\n * elements. The accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n *\n * @usageNotes\n *\n * ### Using the default value accessor\n *\n * The following example shows how to use an input element that activates the default value accessor\n * (in this case, a text field).\n *\n * ```ts\n * const firstNameControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"text\" [formControl]=\"firstNameControl\">\n * ```\n *\n * This value accessor is used by default for `<input type=\"text\">` and `<textarea>` elements, but\n * you could also use it for custom components that have similar behavior and do not require special\n * processing. In order to attach the default value accessor to a custom element, add the\n * `ngDefaultControl` attribute as shown below.\n *\n * ```\n * <custom-input-component ngDefaultControl [(ngModel)]=\"value\"></custom-input-component>\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass DefaultValueAccessor extends BaseControlValueAccessor {\n    constructor(renderer, elementRef, _compositionMode) {\n        super(renderer, elementRef);\n        this._compositionMode = _compositionMode;\n        /** Whether the user is creating a composition string (IME events). */\n        this._composing = false;\n        if (this._compositionMode == null) {\n            this._compositionMode = !_isAndroid();\n        }\n    }\n    /**\n     * Sets the \"value\" property on the input element.\n     * @nodoc\n     */\n    writeValue(value) {\n        const normalizedValue = value == null ? '' : value;\n        this.setProperty('value', normalizedValue);\n    }\n    /** @internal */\n    _handleInput(value) {\n        if (!this._compositionMode || (this._compositionMode && !this._composing)) {\n            this.onChange(value);\n        }\n    }\n    /** @internal */\n    _compositionStart() {\n        this._composing = true;\n    }\n    /** @internal */\n    _compositionEnd(value) {\n        this._composing = false;\n        this._compositionMode && this.onChange(value);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: DefaultValueAccessor, deps: [{ token: i0.Renderer2 }, { token: i0.ElementRef }, { token: COMPOSITION_BUFFER_MODE, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.8\", type: DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\", host: { listeners: { \"input\": \"$any(this)._handleInput($event.target.value)\", \"blur\": \"onTouched()\", \"compositionstart\": \"$any(this)._compositionStart()\", \"compositionend\": \"$any(this)._compositionEnd($event.target.value)\" } }, providers: [DEFAULT_VALUE_ACCESSOR], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: DefaultValueAccessor, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]',\n                    // TODO: vsavkin replace the above selector with the one below it once\n                    // https://github.com/angular/angular/issues/3011 is implemented\n                    // selector: '[ngModel],[formControl],[formControlName]',\n                    host: {\n                        '(input)': '$any(this)._handleInput($event.target.value)',\n                        '(blur)': 'onTouched()',\n                        '(compositionstart)': '$any(this)._compositionStart()',\n                        '(compositionend)': '$any(this)._compositionEnd($event.target.value)',\n                    },\n                    providers: [DEFAULT_VALUE_ACCESSOR],\n                }]\n        }], ctorParameters: () => [{ type: i0.Renderer2 }, { type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [COMPOSITION_BUFFER_MODE]\n                }] }] });\n\nfunction isEmptyInputValue(value) {\n    /**\n     * Check if the object is a string or array before evaluating the length attribute.\n     * This avoids falsely rejecting objects that contain a custom length attribute.\n     * For example, the object {id: 1, length: 0, width: 0} should not be returned as empty.\n     */\n    return (value == null || ((typeof value === 'string' || Array.isArray(value)) && value.length === 0));\n}\nfunction hasValidLength(value) {\n    // non-strict comparison is intentional, to check for both `null` and `undefined` values\n    return value != null && typeof value.length === 'number';\n}\n/**\n * @description\n * An `InjectionToken` for registering additional synchronous validators used with\n * `AbstractControl`s.\n *\n * @see {@link NG_ASYNC_VALIDATORS}\n *\n * @usageNotes\n *\n * ### Providing a custom validator\n *\n * The following example registers a custom validator directive. Adding the validator to the\n * existing collection of validators requires the `multi: true` option.\n *\n * ```typescript\n * @Directive({\n *   selector: '[customValidator]',\n *   providers: [{provide: NG_VALIDATORS, useExisting: CustomValidatorDirective, multi: true}]\n * })\n * class CustomValidatorDirective implements Validator {\n *   validate(control: AbstractControl): ValidationErrors | null {\n *     return { 'custom': true };\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nconst NG_VALIDATORS = new InjectionToken(ngDevMode ? 'NgValidators' : '');\n/**\n * @description\n * An `InjectionToken` for registering additional asynchronous validators used with\n * `AbstractControl`s.\n *\n * @see {@link NG_VALIDATORS}\n *\n * @usageNotes\n *\n * ### Provide a custom async validator directive\n *\n * The following example implements the `AsyncValidator` interface to create an\n * async validator directive with a custom error key.\n *\n * ```typescript\n * @Directive({\n *   selector: '[customAsyncValidator]',\n *   providers: [{provide: NG_ASYNC_VALIDATORS, useExisting: CustomAsyncValidatorDirective, multi:\n * true}]\n * })\n * class CustomAsyncValidatorDirective implements AsyncValidator {\n *   validate(control: AbstractControl): Promise<ValidationErrors|null> {\n *     return Promise.resolve({'custom': true});\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nconst NG_ASYNC_VALIDATORS = new InjectionToken(ngDevMode ? 'NgAsyncValidators' : '');\n/**\n * A regular expression that matches valid e-mail addresses.\n *\n * At a high level, this regexp matches e-mail addresses of the format `local-part@tld`, where:\n * - `local-part` consists of one or more of the allowed characters (alphanumeric and some\n *   punctuation symbols).\n * - `local-part` cannot begin or end with a period (`.`).\n * - `local-part` cannot be longer than 64 characters.\n * - `tld` consists of one or more `labels` separated by periods (`.`). For example `localhost` or\n *   `foo.com`.\n * - A `label` consists of one or more of the allowed characters (alphanumeric, dashes (`-`) and\n *   periods (`.`)).\n * - A `label` cannot begin or end with a dash (`-`) or a period (`.`).\n * - A `label` cannot be longer than 63 characters.\n * - The whole address cannot be longer than 254 characters.\n *\n * ## Implementation background\n *\n * This regexp was ported over from AngularJS (see there for git history):\n * https://github.com/angular/angular.js/blob/c133ef836/src/ng/directive/input.js#L27\n * It is based on the\n * [WHATWG version](https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address) with\n * some enhancements to incorporate more RFC rules (such as rules related to domain names and the\n * lengths of different parts of the address). The main differences from the WHATWG version are:\n *   - Disallow `local-part` to begin or end with a period (`.`).\n *   - Disallow `local-part` length to exceed 64 characters.\n *   - Disallow total address length to exceed 254 characters.\n *\n * See [this commit](https://github.com/angular/angular.js/commit/f3f5cf72e) for more details.\n */\nconst EMAIL_REGEXP = /^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n/**\n * @description\n * Provides a set of built-in validators that can be used by form controls.\n *\n * A validator is a function that processes a `FormControl` or collection of\n * controls and returns an error map or null. A null map means that validation has passed.\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @publicApi\n */\nclass Validators {\n    /**\n     * @description\n     * Validator that requires the control's value to be greater than or equal to the provided number.\n     *\n     * @usageNotes\n     *\n     * ### Validate against a minimum of 3\n     *\n     * ```typescript\n     * const control = new FormControl(2, Validators.min(3));\n     *\n     * console.log(control.errors); // {min: {min: 3, actual: 2}}\n     * ```\n     *\n     * @returns A validator function that returns an error map with the\n     * `min` property if the validation check fails, otherwise `null`.\n     *\n     * @see {@link updateValueAndValidity()}\n     *\n     */\n    static min(min) {\n        return minValidator(min);\n    }\n    /**\n     * @description\n     * Validator that requires the control's value to be less than or equal to the provided number.\n     *\n     * @usageNotes\n     *\n     * ### Validate against a maximum of 15\n     *\n     * ```typescript\n     * const control = new FormControl(16, Validators.max(15));\n     *\n     * console.log(control.errors); // {max: {max: 15, actual: 16}}\n     * ```\n     *\n     * @returns A validator function that returns an error map with the\n     * `max` property if the validation check fails, otherwise `null`.\n     *\n     * @see {@link updateValueAndValidity()}\n     *\n     */\n    static max(max) {\n        return maxValidator(max);\n    }\n    /**\n     * @description\n     * Validator that requires the control have a non-empty value.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field is non-empty\n     *\n     * ```typescript\n     * const control = new FormControl('', Validators.required);\n     *\n     * console.log(control.errors); // {required: true}\n     * ```\n     *\n     * @returns An error map with the `required` property\n     * if the validation check fails, otherwise `null`.\n     *\n     * @see {@link updateValueAndValidity()}\n     *\n     */\n    static required(control) {\n        return requiredValidator(control);\n    }\n    /**\n     * @description\n     * Validator that requires the control's value be true. This validator is commonly\n     * used for required checkboxes.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field value is true\n     *\n     * ```typescript\n     * const control = new FormControl('some value', Validators.requiredTrue);\n     *\n     * console.log(control.errors); // {required: true}\n     * ```\n     *\n     * @returns An error map that contains the `required` property\n     * set to `true` if the validation check fails, otherwise `null`.\n     *\n     * @see {@link updateValueAndValidity()}\n     *\n     */\n    static requiredTrue(control) {\n        return requiredTrueValidator(control);\n    }\n    /**\n     * @description\n     * Validator that requires the control's value pass an email validation test.\n     *\n     * Tests the value using a [regular\n     * expression](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions)\n     * pattern suitable for common use cases. The pattern is based on the definition of a valid email\n     * address in the [WHATWG HTML\n     * specification](https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address) with\n     * some enhancements to incorporate more RFC rules (such as rules related to domain names and the\n     * lengths of different parts of the address).\n     *\n     * The differences from the WHATWG version include:\n     * - Disallow `local-part` (the part before the `@` symbol) to begin or end with a period (`.`).\n     * - Disallow `local-part` to be longer than 64 characters.\n     * - Disallow the whole address to be longer than 254 characters.\n     *\n     * If this pattern does not satisfy your business needs, you can use `Validators.pattern()` to\n     * validate the value against a different pattern.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field matches a valid email pattern\n     *\n     * ```typescript\n     * const control = new FormControl('bad@', Validators.email);\n     *\n     * console.log(control.errors); // {email: true}\n     * ```\n     *\n     * @returns An error map with the `email` property\n     * if the validation check fails, otherwise `null`.\n     *\n     * @see {@link updateValueAndValidity()}\n     *\n     */\n    static email(control) {\n        return emailValidator(control);\n    }\n    /**\n     * @description\n     * Validator that requires the length of the control's value to be greater than or equal\n     * to the provided minimum length. This validator is also provided by default if you use the\n     * the HTML5 `minlength` attribute. Note that the `minLength` validator is intended to be used\n     * only for types that have a numeric `length` property, such as strings or arrays. The\n     * `minLength` validator logic is also not invoked for values when their `length` property is 0\n     * (for example in case of an empty string or an empty array), to support optional controls. You\n     * can use the standard `required` validator if empty values should not be considered valid.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field has a minimum of 3 characters\n     *\n     * ```typescript\n     * const control = new FormControl('ng', Validators.minLength(3));\n     *\n     * console.log(control.errors); // {minlength: {requiredLength: 3, actualLength: 2}}\n     * ```\n     *\n     * ```html\n     * <input minlength=\"5\">\n     * ```\n     *\n     * @returns A validator function that returns an error map with the\n     * `minlength` property if the validation check fails, otherwise `null`.\n     *\n     * @see {@link updateValueAndValidity()}\n     *\n     */\n    static minLength(minLength) {\n        return minLengthValidator(minLength);\n    }\n    /**\n     * @description\n     * Validator that requires the length of the control's value to be less than or equal\n     * to the provided maximum length. This validator is also provided by default if you use the\n     * the HTML5 `maxlength` attribute. Note that the `maxLength` validator is intended to be used\n     * only for types that have a numeric `length` property, such as strings or arrays.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field has maximum of 5 characters\n     *\n     * ```typescript\n     * const control = new FormControl('Angular', Validators.maxLength(5));\n     *\n     * console.log(control.errors); // {maxlength: {requiredLength: 5, actualLength: 7}}\n     * ```\n     *\n     * ```html\n     * <input maxlength=\"5\">\n     * ```\n     *\n     * @returns A validator function that returns an error map with the\n     * `maxlength` property if the validation check fails, otherwise `null`.\n     *\n     * @see {@link updateValueAndValidity()}\n     *\n     */\n    static maxLength(maxLength) {\n        return maxLengthValidator(maxLength);\n    }\n    /**\n     * @description\n     * Validator that requires the control's value to match a regex pattern. This validator is also\n     * provided by default if you use the HTML5 `pattern` attribute.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field only contains letters or spaces\n     *\n     * ```typescript\n     * const control = new FormControl('1', Validators.pattern('[a-zA-Z ]*'));\n     *\n     * console.log(control.errors); // {pattern: {requiredPattern: '^[a-zA-Z ]*$', actualValue: '1'}}\n     * ```\n     *\n     * ```html\n     * <input pattern=\"[a-zA-Z ]*\">\n     * ```\n     *\n     * ### Pattern matching with the global or sticky flag\n     *\n     * `RegExp` objects created with the `g` or `y` flags that are passed into `Validators.pattern`\n     * can produce different results on the same input when validations are run consecutively. This is\n     * due to how the behavior of `RegExp.prototype.test` is\n     * specified in [ECMA-262](https://tc39.es/ecma262/#sec-regexpbuiltinexec)\n     * (`RegExp` preserves the index of the last match when the global or sticky flag is used).\n     * Due to this behavior, it is recommended that when using\n     * `Validators.pattern` you **do not** pass in a `RegExp` object with either the global or sticky\n     * flag enabled.\n     *\n     * ```typescript\n     * // Not recommended (since the `g` flag is used)\n     * const controlOne = new FormControl('1', Validators.pattern(/foo/g));\n     *\n     * // Good\n     * const controlTwo = new FormControl('1', Validators.pattern(/foo/));\n     * ```\n     *\n     * @param pattern A regular expression to be used as is to test the values, or a string.\n     * If a string is passed, the `^` character is prepended and the `$` character is\n     * appended to the provided string (if not already present), and the resulting regular\n     * expression is used to test the values.\n     *\n     * @returns A validator function that returns an error map with the\n     * `pattern` property if the validation check fails, otherwise `null`.\n     *\n     * @see {@link updateValueAndValidity()}\n     *\n     */\n    static pattern(pattern) {\n        return patternValidator(pattern);\n    }\n    /**\n     * @description\n     * Validator that performs no operation.\n     *\n     * @see {@link updateValueAndValidity()}\n     *\n     */\n    static nullValidator(control) {\n        return nullValidator(control);\n    }\n    static compose(validators) {\n        return compose(validators);\n    }\n    /**\n     * @description\n     * Compose multiple async validators into a single function that returns the union\n     * of the individual error objects for the provided control.\n     *\n     * @returns A validator function that returns an error map with the\n     * merged error objects of the async validators if the validation check fails, otherwise `null`.\n     *\n     * @see {@link updateValueAndValidity()}\n     *\n     */\n    static composeAsync(validators) {\n        return composeAsync(validators);\n    }\n}\n/**\n * Validator that requires the control's value to be greater than or equal to the provided number.\n * See `Validators.min` for additional information.\n */\nfunction minValidator(min) {\n    return (control) => {\n        if (isEmptyInputValue(control.value) || isEmptyInputValue(min)) {\n            return null; // don't validate empty values to allow optional controls\n        }\n        const value = parseFloat(control.value);\n        // Controls with NaN values after parsing should be treated as not having a\n        // minimum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-min\n        return !isNaN(value) && value < min ? { 'min': { 'min': min, 'actual': control.value } } : null;\n    };\n}\n/**\n * Validator that requires the control's value to be less than or equal to the provided number.\n * See `Validators.max` for additional information.\n */\nfunction maxValidator(max) {\n    return (control) => {\n        if (isEmptyInputValue(control.value) || isEmptyInputValue(max)) {\n            return null; // don't validate empty values to allow optional controls\n        }\n        const value = parseFloat(control.value);\n        // Controls with NaN values after parsing should be treated as not having a\n        // maximum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-max\n        return !isNaN(value) && value > max ? { 'max': { 'max': max, 'actual': control.value } } : null;\n    };\n}\n/**\n * Validator that requires the control have a non-empty value.\n * See `Validators.required` for additional information.\n */\nfunction requiredValidator(control) {\n    return isEmptyInputValue(control.value) ? { 'required': true } : null;\n}\n/**\n * Validator that requires the control's value be true. This validator is commonly\n * used for required checkboxes.\n * See `Validators.requiredTrue` for additional information.\n */\nfunction requiredTrueValidator(control) {\n    return control.value === true ? null : { 'required': true };\n}\n/**\n * Validator that requires the control's value pass an email validation test.\n * See `Validators.email` for additional information.\n */\nfunction emailValidator(control) {\n    if (isEmptyInputValue(control.value)) {\n        return null; // don't validate empty values to allow optional controls\n    }\n    return EMAIL_REGEXP.test(control.value) ? null : { 'email': true };\n}\n/**\n * Validator that requires the length of the control's value to be greater than or equal\n * to the provided minimum length. See `Validators.minLength` for additional information.\n */\nfunction minLengthValidator(minLength) {\n    return (control) => {\n        if (isEmptyInputValue(control.value) || !hasValidLength(control.value)) {\n            // don't validate empty values to allow optional controls\n            // don't validate values without `length` property\n            return null;\n        }\n        return control.value.length < minLength\n            ? { 'minlength': { 'requiredLength': minLength, 'actualLength': control.value.length } }\n            : null;\n    };\n}\n/**\n * Validator that requires the length of the control's value to be less than or equal\n * to the provided maximum length. See `Validators.maxLength` for additional information.\n */\nfunction maxLengthValidator(maxLength) {\n    return (control) => {\n        return hasValidLength(control.value) && control.value.length > maxLength\n            ? { 'maxlength': { 'requiredLength': maxLength, 'actualLength': control.value.length } }\n            : null;\n    };\n}\n/**\n * Validator that requires the control's value to match a regex pattern.\n * See `Validators.pattern` for additional information.\n */\nfunction patternValidator(pattern) {\n    if (!pattern)\n        return nullValidator;\n    let regex;\n    let regexStr;\n    if (typeof pattern === 'string') {\n        regexStr = '';\n        if (pattern.charAt(0) !== '^')\n            regexStr += '^';\n        regexStr += pattern;\n        if (pattern.charAt(pattern.length - 1) !== '$')\n            regexStr += '$';\n        regex = new RegExp(regexStr);\n    }\n    else {\n        regexStr = pattern.toString();\n        regex = pattern;\n    }\n    return (control) => {\n        if (isEmptyInputValue(control.value)) {\n            return null; // don't validate empty values to allow optional controls\n        }\n        const value = control.value;\n        return regex.test(value)\n            ? null\n            : { 'pattern': { 'requiredPattern': regexStr, 'actualValue': value } };\n    };\n}\n/**\n * Function that has `ValidatorFn` shape, but performs no operation.\n */\nfunction nullValidator(control) {\n    return null;\n}\nfunction isPresent(o) {\n    return o != null;\n}\nfunction toObservable(value) {\n    const obs = ɵisPromise(value) ? from(value) : value;\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && !ɵisSubscribable(obs)) {\n        let errorMessage = `Expected async validator to return Promise or Observable.`;\n        // A synchronous validator will return object or null.\n        if (typeof value === 'object') {\n            errorMessage +=\n                ' Are you using a synchronous validator where an async validator is expected?';\n        }\n        throw new ɵRuntimeError(-1101 /* RuntimeErrorCode.WRONG_VALIDATOR_RETURN_TYPE */, errorMessage);\n    }\n    return obs;\n}\nfunction mergeErrors(arrayOfErrors) {\n    let res = {};\n    arrayOfErrors.forEach((errors) => {\n        res = errors != null ? { ...res, ...errors } : res;\n    });\n    return Object.keys(res).length === 0 ? null : res;\n}\nfunction executeValidators(control, validators) {\n    return validators.map((validator) => validator(control));\n}\nfunction isValidatorFn(validator) {\n    return !validator.validate;\n}\n/**\n * Given the list of validators that may contain both functions as well as classes, return the list\n * of validator functions (convert validator classes into validator functions). This is needed to\n * have consistent structure in validators list before composing them.\n *\n * @param validators The set of validators that may contain validators both in plain function form\n *     as well as represented as a validator class.\n */\nfunction normalizeValidators(validators) {\n    return validators.map((validator) => {\n        return isValidatorFn(validator)\n            ? validator\n            : ((c) => validator.validate(c));\n    });\n}\n/**\n * Merges synchronous validators into a single validator function.\n * See `Validators.compose` for additional information.\n */\nfunction compose(validators) {\n    if (!validators)\n        return null;\n    const presentValidators = validators.filter(isPresent);\n    if (presentValidators.length == 0)\n        return null;\n    return function (control) {\n        return mergeErrors(executeValidators(control, presentValidators));\n    };\n}\n/**\n * Accepts a list of validators of different possible shapes (`Validator` and `ValidatorFn`),\n * normalizes the list (converts everything to `ValidatorFn`) and merges them into a single\n * validator function.\n */\nfunction composeValidators(validators) {\n    return validators != null ? compose(normalizeValidators(validators)) : null;\n}\n/**\n * Merges asynchronous validators into a single validator function.\n * See `Validators.composeAsync` for additional information.\n */\nfunction composeAsync(validators) {\n    if (!validators)\n        return null;\n    const presentValidators = validators.filter(isPresent);\n    if (presentValidators.length == 0)\n        return null;\n    return function (control) {\n        const observables = executeValidators(control, presentValidators).map(toObservable);\n        return forkJoin(observables).pipe(map(mergeErrors));\n    };\n}\n/**\n * Accepts a list of async validators of different possible shapes (`AsyncValidator` and\n * `AsyncValidatorFn`), normalizes the list (converts everything to `AsyncValidatorFn`) and merges\n * them into a single validator function.\n */\nfunction composeAsyncValidators(validators) {\n    return validators != null\n        ? composeAsync(normalizeValidators(validators))\n        : null;\n}\n/**\n * Merges raw control validators with a given directive validator and returns the combined list of\n * validators as an array.\n */\nfunction mergeValidators(controlValidators, dirValidator) {\n    if (controlValidators === null)\n        return [dirValidator];\n    return Array.isArray(controlValidators)\n        ? [...controlValidators, dirValidator]\n        : [controlValidators, dirValidator];\n}\n/**\n * Retrieves the list of raw synchronous validators attached to a given control.\n */\nfunction getControlValidators(control) {\n    return control._rawValidators;\n}\n/**\n * Retrieves the list of raw asynchronous validators attached to a given control.\n */\nfunction getControlAsyncValidators(control) {\n    return control._rawAsyncValidators;\n}\n/**\n * Accepts a singleton validator, an array, or null, and returns an array type with the provided\n * validators.\n *\n * @param validators A validator, validators, or null.\n * @returns A validators array.\n */\nfunction makeValidatorsArray(validators) {\n    if (!validators)\n        return [];\n    return Array.isArray(validators) ? validators : [validators];\n}\n/**\n * Determines whether a validator or validators array has a given validator.\n *\n * @param validators The validator or validators to compare against.\n * @param validator The validator to check.\n * @returns Whether the validator is present.\n */\nfunction hasValidator(validators, validator) {\n    return Array.isArray(validators) ? validators.includes(validator) : validators === validator;\n}\n/**\n * Combines two arrays of validators into one. If duplicates are provided, only one will be added.\n *\n * @param validators The new validators.\n * @param currentValidators The base array of current validators.\n * @returns An array of validators.\n */\nfunction addValidators(validators, currentValidators) {\n    const current = makeValidatorsArray(currentValidators);\n    const validatorsToAdd = makeValidatorsArray(validators);\n    validatorsToAdd.forEach((v) => {\n        // Note: if there are duplicate entries in the new validators array,\n        // only the first one would be added to the current list of validators.\n        // Duplicate ones would be ignored since `hasValidator` would detect\n        // the presence of a validator function and we update the current list in place.\n        if (!hasValidator(current, v)) {\n            current.push(v);\n        }\n    });\n    return current;\n}\nfunction removeValidators(validators, currentValidators) {\n    return makeValidatorsArray(currentValidators).filter((v) => !hasValidator(validators, v));\n}\n\n/**\n * @description\n * Base class for control directives.\n *\n * This class is only used internally in the `ReactiveFormsModule` and the `FormsModule`.\n *\n * @publicApi\n */\nclass AbstractControlDirective {\n    constructor() {\n        /**\n         * Set of synchronous validators as they were provided while calling `setValidators` function.\n         * @internal\n         */\n        this._rawValidators = [];\n        /**\n         * Set of asynchronous validators as they were provided while calling `setAsyncValidators`\n         * function.\n         * @internal\n         */\n        this._rawAsyncValidators = [];\n        /*\n         * The set of callbacks to be invoked when directive instance is being destroyed.\n         */\n        this._onDestroyCallbacks = [];\n    }\n    /**\n     * @description\n     * Reports the value of the control if it is present, otherwise null.\n     */\n    get value() {\n        return this.control ? this.control.value : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is valid. A control is considered valid if no\n     * validation errors exist with the current value.\n     * If the control is not present, null is returned.\n     */\n    get valid() {\n        return this.control ? this.control.valid : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is invalid, meaning that an error exists in the input value.\n     * If the control is not present, null is returned.\n     */\n    get invalid() {\n        return this.control ? this.control.invalid : null;\n    }\n    /**\n     * @description\n     * Reports whether a control is pending, meaning that async validation is occurring and\n     * errors are not yet available for the input value. If the control is not present, null is\n     * returned.\n     */\n    get pending() {\n        return this.control ? this.control.pending : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is disabled, meaning that the control is disabled\n     * in the UI and is exempt from validation checks and excluded from aggregate\n     * values of ancestor controls. If the control is not present, null is returned.\n     */\n    get disabled() {\n        return this.control ? this.control.disabled : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is enabled, meaning that the control is included in ancestor\n     * calculations of validity or value. If the control is not present, null is returned.\n     */\n    get enabled() {\n        return this.control ? this.control.enabled : null;\n    }\n    /**\n     * @description\n     * Reports the control's validation errors. If the control is not present, null is returned.\n     */\n    get errors() {\n        return this.control ? this.control.errors : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is pristine, meaning that the user has not yet changed\n     * the value in the UI. If the control is not present, null is returned.\n     */\n    get pristine() {\n        return this.control ? this.control.pristine : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is dirty, meaning that the user has changed\n     * the value in the UI. If the control is not present, null is returned.\n     */\n    get dirty() {\n        return this.control ? this.control.dirty : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is touched, meaning that the user has triggered\n     * a `blur` event on it. If the control is not present, null is returned.\n     */\n    get touched() {\n        return this.control ? this.control.touched : null;\n    }\n    /**\n     * @description\n     * Reports the validation status of the control. Possible values include:\n     * 'VALID', 'INVALID', 'DISABLED', and 'PENDING'.\n     * If the control is not present, null is returned.\n     */\n    get status() {\n        return this.control ? this.control.status : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is untouched, meaning that the user has not yet triggered\n     * a `blur` event on it. If the control is not present, null is returned.\n     */\n    get untouched() {\n        return this.control ? this.control.untouched : null;\n    }\n    /**\n     * @description\n     * Returns a multicasting observable that emits a validation status whenever it is\n     * calculated for the control. If the control is not present, null is returned.\n     */\n    get statusChanges() {\n        return this.control ? this.control.statusChanges : null;\n    }\n    /**\n     * @description\n     * Returns a multicasting observable of value changes for the control that emits every time the\n     * value of the control changes in the UI or programmatically.\n     * If the control is not present, null is returned.\n     */\n    get valueChanges() {\n        return this.control ? this.control.valueChanges : null;\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n        return null;\n    }\n    /**\n     * Sets synchronous validators for this directive.\n     * @internal\n     */\n    _setValidators(validators) {\n        this._rawValidators = validators || [];\n        this._composedValidatorFn = composeValidators(this._rawValidators);\n    }\n    /**\n     * Sets asynchronous validators for this directive.\n     * @internal\n     */\n    _setAsyncValidators(validators) {\n        this._rawAsyncValidators = validators || [];\n        this._composedAsyncValidatorFn = composeAsyncValidators(this._rawAsyncValidators);\n    }\n    /**\n     * @description\n     * Synchronous validator function composed of all the synchronous validators registered with this\n     * directive.\n     */\n    get validator() {\n        return this._composedValidatorFn || null;\n    }\n    /**\n     * @description\n     * Asynchronous validator function composed of all the asynchronous validators registered with\n     * this directive.\n     */\n    get asyncValidator() {\n        return this._composedAsyncValidatorFn || null;\n    }\n    /**\n     * Internal function to register callbacks that should be invoked\n     * when directive instance is being destroyed.\n     * @internal\n     */\n    _registerOnDestroy(fn) {\n        this._onDestroyCallbacks.push(fn);\n    }\n    /**\n     * Internal function to invoke all registered \"on destroy\" callbacks.\n     * Note: calling this function also clears the list of callbacks.\n     * @internal\n     */\n    _invokeOnDestroyCallbacks() {\n        this._onDestroyCallbacks.forEach((fn) => fn());\n        this._onDestroyCallbacks = [];\n    }\n    /**\n     * @description\n     * Resets the control with the provided value if the control is present.\n     */\n    reset(value = undefined) {\n        if (this.control)\n            this.control.reset(value);\n    }\n    /**\n     * @description\n     * Reports whether the control with the given path has the error specified.\n     *\n     * @param errorCode The code of the error to check\n     * @param path A list of control names that designates how to move from the current control\n     * to the control that should be queried for errors.\n     *\n     * @usageNotes\n     * For example, for the following `FormGroup`:\n     *\n     * ```\n     * form = new FormGroup({\n     *   address: new FormGroup({ street: new FormControl() })\n     * });\n     * ```\n     *\n     * The path to the 'street' control from the root form would be 'address' -> 'street'.\n     *\n     * It can be provided to this method in one of two formats:\n     *\n     * 1. An array of string control names, e.g. `['address', 'street']`\n     * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n     *\n     * If no path is given, this method checks for the error on the current control.\n     *\n     * @returns whether the given error is present in the control at the given path.\n     *\n     * If the control is not present, false is returned.\n     */\n    hasError(errorCode, path) {\n        return this.control ? this.control.hasError(errorCode, path) : false;\n    }\n    /**\n     * @description\n     * Reports error data for the control with the given path.\n     *\n     * @param errorCode The code of the error to check\n     * @param path A list of control names that designates how to move from the current control\n     * to the control that should be queried for errors.\n     *\n     * @usageNotes\n     * For example, for the following `FormGroup`:\n     *\n     * ```\n     * form = new FormGroup({\n     *   address: new FormGroup({ street: new FormControl() })\n     * });\n     * ```\n     *\n     * The path to the 'street' control from the root form would be 'address' -> 'street'.\n     *\n     * It can be provided to this method in one of two formats:\n     *\n     * 1. An array of string control names, e.g. `['address', 'street']`\n     * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n     *\n     * @returns error data for that particular error. If the control or error is not present,\n     * null is returned.\n     */\n    getError(errorCode, path) {\n        return this.control ? this.control.getError(errorCode, path) : null;\n    }\n}\n\n/**\n * @description\n * A base class for directives that contain multiple registered instances of `NgControl`.\n * Only used by the forms module.\n *\n * @publicApi\n */\nclass ControlContainer extends AbstractControlDirective {\n    /**\n     * @description\n     * The top-level form directive for the control.\n     */\n    get formDirective() {\n        return null;\n    }\n    /**\n     * @description\n     * The path to this group.\n     */\n    get path() {\n        return null;\n    }\n}\n\n/**\n * @description\n * A base class that all `FormControl`-based directives extend. It binds a `FormControl`\n * object to a DOM element.\n *\n * @publicApi\n */\nclass NgControl extends AbstractControlDirective {\n    constructor() {\n        super(...arguments);\n        /**\n         * @description\n         * The parent form for the control.\n         *\n         * @internal\n         */\n        this._parent = null;\n        /**\n         * @description\n         * The name for the control\n         */\n        this.name = null;\n        /**\n         * @description\n         * The value accessor for the control\n         */\n        this.valueAccessor = null;\n    }\n}\n\n// DO NOT REFACTOR!\n// Each status is represented by a separate function to make sure that\n// advanced Closure Compiler optimizations related to property renaming\n// can work correctly.\nclass AbstractControlStatus {\n    constructor(cd) {\n        this._cd = cd;\n    }\n    get isTouched() {\n        // track the touched signal\n        this._cd?.control?._touched?.();\n        return !!this._cd?.control?.touched;\n    }\n    get isUntouched() {\n        return !!this._cd?.control?.untouched;\n    }\n    get isPristine() {\n        // track the pristine signal\n        this._cd?.control?._pristine?.();\n        return !!this._cd?.control?.pristine;\n    }\n    get isDirty() {\n        // pristine signal already tracked above\n        return !!this._cd?.control?.dirty;\n    }\n    get isValid() {\n        // track the status signal\n        this._cd?.control?._status?.();\n        return !!this._cd?.control?.valid;\n    }\n    get isInvalid() {\n        // status signal already tracked above\n        return !!this._cd?.control?.invalid;\n    }\n    get isPending() {\n        // status signal already tracked above\n        return !!this._cd?.control?.pending;\n    }\n    get isSubmitted() {\n        // track the submitted signal\n        this._cd?._submitted?.();\n        // We check for the `submitted` field from `NgForm` and `FormGroupDirective` classes, but\n        // we avoid instanceof checks to prevent non-tree-shakable references to those types.\n        return !!this._cd?.submitted;\n    }\n}\nconst ngControlStatusHost = {\n    '[class.ng-untouched]': 'isUntouched',\n    '[class.ng-touched]': 'isTouched',\n    '[class.ng-pristine]': 'isPristine',\n    '[class.ng-dirty]': 'isDirty',\n    '[class.ng-valid]': 'isValid',\n    '[class.ng-invalid]': 'isInvalid',\n    '[class.ng-pending]': 'isPending',\n};\nconst ngGroupStatusHost = {\n    ...ngControlStatusHost,\n    '[class.ng-submitted]': 'isSubmitted',\n};\n/**\n * @description\n * Directive automatically applied to Angular form controls that sets CSS classes\n * based on control status.\n *\n * @usageNotes\n *\n * ### CSS classes applied\n *\n * The following classes are applied as the properties become true:\n *\n * * ng-valid\n * * ng-invalid\n * * ng-pending\n * * ng-pristine\n * * ng-dirty\n * * ng-untouched\n * * ng-touched\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgControlStatus extends AbstractControlStatus {\n    constructor(cd) {\n        super(cd);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: NgControlStatus, deps: [{ token: NgControl, self: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.8\", type: NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\", host: { properties: { \"class.ng-untouched\": \"isUntouched\", \"class.ng-touched\": \"isTouched\", \"class.ng-pristine\": \"isPristine\", \"class.ng-dirty\": \"isDirty\", \"class.ng-valid\": \"isValid\", \"class.ng-invalid\": \"isInvalid\", \"class.ng-pending\": \"isPending\" } }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: NgControlStatus, decorators: [{\n            type: Directive,\n            args: [{ selector: '[formControlName],[ngModel],[formControl]', host: ngControlStatusHost }]\n        }], ctorParameters: () => [{ type: NgControl, decorators: [{\n                    type: Self\n                }] }] });\n/**\n * @description\n * Directive automatically applied to Angular form groups that sets CSS classes\n * based on control status (valid/invalid/dirty/etc). On groups, this includes the additional\n * class ng-submitted.\n *\n * @see {@link NgControlStatus}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgControlStatusGroup extends AbstractControlStatus {\n    constructor(cd) {\n        super(cd);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: NgControlStatusGroup, deps: [{ token: ControlContainer, optional: true, self: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.8\", type: NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\", host: { properties: { \"class.ng-untouched\": \"isUntouched\", \"class.ng-touched\": \"isTouched\", \"class.ng-pristine\": \"isPristine\", \"class.ng-dirty\": \"isDirty\", \"class.ng-valid\": \"isValid\", \"class.ng-invalid\": \"isInvalid\", \"class.ng-pending\": \"isPending\", \"class.ng-submitted\": \"isSubmitted\" } }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: NgControlStatusGroup, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]',\n                    host: ngGroupStatusHost,\n                }]\n        }], ctorParameters: () => [{ type: ControlContainer, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }] }] });\n\nconst formControlNameExample = `\n  <div [formGroup]=\"myGroup\">\n    <input formControlName=\"firstName\">\n  </div>\n\n  In your class:\n\n  this.myGroup = new FormGroup({\n      firstName: new FormControl()\n  });`;\nconst formGroupNameExample = `\n  <div [formGroup]=\"myGroup\">\n      <div formGroupName=\"person\">\n        <input formControlName=\"firstName\">\n      </div>\n  </div>\n\n  In your class:\n\n  this.myGroup = new FormGroup({\n      person: new FormGroup({ firstName: new FormControl() })\n  });`;\nconst formArrayNameExample = `\n  <div [formGroup]=\"myGroup\">\n    <div formArrayName=\"cities\">\n      <div *ngFor=\"let city of cityArray.controls; index as i\">\n        <input [formControlName]=\"i\">\n      </div>\n    </div>\n  </div>\n\n  In your class:\n\n  this.cityArray = new FormArray([new FormControl('SF')]);\n  this.myGroup = new FormGroup({\n    cities: this.cityArray\n  });`;\nconst ngModelGroupExample = `\n  <form>\n      <div ngModelGroup=\"person\">\n        <input [(ngModel)]=\"person.name\" name=\"firstName\">\n      </div>\n  </form>`;\nconst ngModelWithFormGroupExample = `\n  <div [formGroup]=\"myGroup\">\n      <input formControlName=\"firstName\">\n      <input [(ngModel)]=\"showMoreControls\" [ngModelOptions]=\"{standalone: true}\">\n  </div>\n`;\n\nfunction controlParentException(nameOrIndex) {\n    return new ɵRuntimeError(1050 /* RuntimeErrorCode.FORM_CONTROL_NAME_MISSING_PARENT */, `formControlName must be used with a parent formGroup directive. You'll want to add a formGroup\n      directive and pass it an existing FormGroup instance (you can create one in your class).\n\n      ${describeFormControl(nameOrIndex)}\n\n    Example:\n\n    ${formControlNameExample}`);\n}\nfunction describeFormControl(nameOrIndex) {\n    if (nameOrIndex == null || nameOrIndex === '') {\n        return '';\n    }\n    const valueType = typeof nameOrIndex === 'string' ? 'name' : 'index';\n    return `Affected Form Control ${valueType}: \"${nameOrIndex}\"`;\n}\nfunction ngModelGroupException() {\n    return new ɵRuntimeError(1051 /* RuntimeErrorCode.FORM_CONTROL_NAME_INSIDE_MODEL_GROUP */, `formControlName cannot be used with an ngModelGroup parent. It is only compatible with parents\n      that also have a \"form\" prefix: formGroupName, formArrayName, or formGroup.\n\n      Option 1:  Update the parent to be formGroupName (reactive form strategy)\n\n      ${formGroupNameExample}\n\n      Option 2: Use ngModel instead of formControlName (template-driven strategy)\n\n      ${ngModelGroupExample}`);\n}\nfunction missingFormException() {\n    return new ɵRuntimeError(1052 /* RuntimeErrorCode.FORM_GROUP_MISSING_INSTANCE */, `formGroup expects a FormGroup instance. Please pass one in.\n\n      Example:\n\n      ${formControlNameExample}`);\n}\nfunction groupParentException() {\n    return new ɵRuntimeError(1053 /* RuntimeErrorCode.FORM_GROUP_NAME_MISSING_PARENT */, `formGroupName must be used with a parent formGroup directive.  You'll want to add a formGroup\n    directive and pass it an existing FormGroup instance (you can create one in your class).\n\n    Example:\n\n    ${formGroupNameExample}`);\n}\nfunction arrayParentException() {\n    return new ɵRuntimeError(1054 /* RuntimeErrorCode.FORM_ARRAY_NAME_MISSING_PARENT */, `formArrayName must be used with a parent formGroup directive.  You'll want to add a formGroup\n      directive and pass it an existing FormGroup instance (you can create one in your class).\n\n      Example:\n\n      ${formArrayNameExample}`);\n}\nconst disabledAttrWarning = `\n  It looks like you're using the disabled attribute with a reactive form directive. If you set disabled to true\n  when you set up this control in your component class, the disabled attribute will actually be set in the DOM for\n  you. We recommend using this approach to avoid 'changed after checked' errors.\n\n  Example:\n  // Specify the \\`disabled\\` property at control creation time:\n  form = new FormGroup({\n    first: new FormControl({value: 'Nancy', disabled: true}, Validators.required),\n    last: new FormControl('Drew', Validators.required)\n  });\n\n  // Controls can also be enabled/disabled after creation:\n  form.get('first')?.enable();\n  form.get('last')?.disable();\n`;\nconst asyncValidatorsDroppedWithOptsWarning = `\n  It looks like you're constructing using a FormControl with both an options argument and an\n  async validators argument. Mixing these arguments will cause your async validators to be dropped.\n  You should either put all your validators in the options object, or in separate validators\n  arguments. For example:\n\n  // Using validators arguments\n  fc = new FormControl(42, Validators.required, myAsyncValidator);\n\n  // Using AbstractControlOptions\n  fc = new FormControl(42, {validators: Validators.required, asyncValidators: myAV});\n\n  // Do NOT mix them: async validators will be dropped!\n  fc = new FormControl(42, {validators: Validators.required}, /* Oops! */ myAsyncValidator);\n`;\nfunction ngModelWarning(directiveName) {\n    return `\n  It looks like you're using ngModel on the same form field as ${directiveName}.\n  Support for using the ngModel input property and ngModelChange event with\n  reactive form directives has been deprecated in Angular v6 and will be removed\n  in a future version of Angular.\n\n  For more information on this, see our API docs here:\n  https://angular.io/api/forms/${directiveName === 'formControl' ? 'FormControlDirective' : 'FormControlName'}#use-with-ngmodel\n  `;\n}\nfunction describeKey(isFormGroup, key) {\n    return isFormGroup ? `with name: '${key}'` : `at index: ${key}`;\n}\nfunction noControlsError(isFormGroup) {\n    return `\n    There are no form controls registered with this ${isFormGroup ? 'group' : 'array'} yet. If you're using ngModel,\n    you may want to check next tick (e.g. use setTimeout).\n  `;\n}\nfunction missingControlError(isFormGroup, key) {\n    return `Cannot find form control ${describeKey(isFormGroup, key)}`;\n}\nfunction missingControlValueError(isFormGroup, key) {\n    return `Must supply a value for form control ${describeKey(isFormGroup, key)}`;\n}\n\n/**\n * Reports that a control is valid, meaning that no errors exist in the input value.\n *\n * @see {@link status}\n */\nconst VALID = 'VALID';\n/**\n * Reports that a control is invalid, meaning that an error exists in the input value.\n *\n * @see {@link status}\n */\nconst INVALID = 'INVALID';\n/**\n * Reports that a control is pending, meaning that async validation is occurring and\n * errors are not yet available for the input value.\n *\n * @see {@link markAsPending}\n * @see {@link status}\n */\nconst PENDING = 'PENDING';\n/**\n * Reports that a control is disabled, meaning that the control is exempt from ancestor\n * calculations of validity or value.\n *\n * @see {@link markAsDisabled}\n * @see {@link status}\n */\nconst DISABLED = 'DISABLED';\n/**\n * Base class for every event sent by `AbstractControl.events()`\n *\n * @publicApi\n */\nclass ControlEvent {\n}\n/**\n * Event fired when the value of a control changes.\n *\n * @publicApi\n */\nclass ValueChangeEvent extends ControlEvent {\n    constructor(value, source) {\n        super();\n        this.value = value;\n        this.source = source;\n    }\n}\n/**\n * Event fired when the control's pristine state changes (pristine <=> dirty).\n *\n * @publicApi */\nclass PristineChangeEvent extends ControlEvent {\n    constructor(pristine, source) {\n        super();\n        this.pristine = pristine;\n        this.source = source;\n    }\n}\n/**\n * Event fired when the control's touched status changes (touched <=> untouched).\n *\n * @publicApi\n */\nclass TouchedChangeEvent extends ControlEvent {\n    constructor(touched, source) {\n        super();\n        this.touched = touched;\n        this.source = source;\n    }\n}\n/**\n * Event fired when the control's status changes.\n *\n * @publicApi\n */\nclass StatusChangeEvent extends ControlEvent {\n    constructor(status, source) {\n        super();\n        this.status = status;\n        this.source = source;\n    }\n}\n/**\n * Event fired when a form is submitted\n *\n * @publicApi\n */\nclass FormSubmittedEvent extends ControlEvent {\n    constructor(source) {\n        super();\n        this.source = source;\n    }\n}\n/**\n * Event fired when a form is reset.\n *\n * @publicApi\n */\nclass FormResetEvent extends ControlEvent {\n    constructor(source) {\n        super();\n        this.source = source;\n    }\n}\n/**\n * Gets validators from either an options object or given validators.\n */\nfunction pickValidators(validatorOrOpts) {\n    return (isOptionsObj(validatorOrOpts) ? validatorOrOpts.validators : validatorOrOpts) || null;\n}\n/**\n * Creates validator function by combining provided validators.\n */\nfunction coerceToValidator(validator) {\n    return Array.isArray(validator) ? composeValidators(validator) : validator || null;\n}\n/**\n * Gets async validators from either an options object or given validators.\n */\nfunction pickAsyncValidators(asyncValidator, validatorOrOpts) {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (isOptionsObj(validatorOrOpts) && asyncValidator) {\n            console.warn(asyncValidatorsDroppedWithOptsWarning);\n        }\n    }\n    return (isOptionsObj(validatorOrOpts) ? validatorOrOpts.asyncValidators : asyncValidator) || null;\n}\n/**\n * Creates async validator function by combining provided async validators.\n */\nfunction coerceToAsyncValidator(asyncValidator) {\n    return Array.isArray(asyncValidator)\n        ? composeAsyncValidators(asyncValidator)\n        : asyncValidator || null;\n}\nfunction isOptionsObj(validatorOrOpts) {\n    return (validatorOrOpts != null &&\n        !Array.isArray(validatorOrOpts) &&\n        typeof validatorOrOpts === 'object');\n}\nfunction assertControlPresent(parent, isGroup, key) {\n    const controls = parent.controls;\n    const collection = isGroup ? Object.keys(controls) : controls;\n    if (!collection.length) {\n        throw new ɵRuntimeError(1000 /* RuntimeErrorCode.NO_CONTROLS */, typeof ngDevMode === 'undefined' || ngDevMode ? noControlsError(isGroup) : '');\n    }\n    if (!controls[key]) {\n        throw new ɵRuntimeError(1001 /* RuntimeErrorCode.MISSING_CONTROL */, typeof ngDevMode === 'undefined' || ngDevMode ? missingControlError(isGroup, key) : '');\n    }\n}\nfunction assertAllValuesPresent(control, isGroup, value) {\n    control._forEachChild((_, key) => {\n        if (value[key] === undefined) {\n            throw new ɵRuntimeError(1002 /* RuntimeErrorCode.MISSING_CONTROL_VALUE */, typeof ngDevMode === 'undefined' || ngDevMode ? missingControlValueError(isGroup, key) : '');\n        }\n    });\n}\n/**\n * This is the base class for `FormControl`, `FormGroup`, and `FormArray`.\n *\n * It provides some of the shared behavior that all controls and groups of controls have, like\n * running validators, calculating status, and resetting state. It also defines the properties\n * that are shared between all sub-classes, like `value`, `valid`, and `dirty`. It shouldn't be\n * instantiated directly.\n *\n * The first type parameter TValue represents the value type of the control (`control.value`).\n * The optional type parameter TRawValue  represents the raw value type (`control.getRawValue()`).\n *\n * @see [Forms Guide](guide/forms)\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n * @see [Dynamic Forms Guide](guide/forms/dynamic-forms)\n *\n * @publicApi\n */\nclass AbstractControl {\n    /**\n     * Initialize the AbstractControl instance.\n     *\n     * @param validators The function or array of functions that is used to determine the validity of\n     *     this control synchronously.\n     * @param asyncValidators The function or array of functions that is used to determine validity of\n     *     this control asynchronously.\n     */\n    constructor(validators, asyncValidators) {\n        /** @internal */\n        this._pendingDirty = false;\n        /**\n         * Indicates that a control has its own pending asynchronous validation in progress.\n         * It also stores if the control should emit events when the validation status changes.\n         *\n         * @internal\n         */\n        this._hasOwnPendingAsyncValidator = null;\n        /** @internal */\n        this._pendingTouched = false;\n        /** @internal */\n        this._onCollectionChange = () => { };\n        this._parent = null;\n        /** @internal */\n        this._status = computed(() => this.statusReactive());\n        this.statusReactive = signal(undefined);\n        /** @internal */\n        this._pristine = computed(() => this.pristineReactive());\n        this.pristineReactive = signal(true);\n        /** @internal */\n        this._touched = computed(() => this.touchedReactive());\n        this.touchedReactive = signal(false);\n        /**\n         * Exposed as observable, see below.\n         *\n         * @internal\n         */\n        this._events = new Subject();\n        /**\n         * A multicasting observable that emits an event every time the state of the control changes.\n         * It emits for value, status, pristine or touched changes.\n         *\n         * **Note**: On value change, the emit happens right after a value of this control is updated. The\n         * value of a parent control (for example if this FormControl is a part of a FormGroup) is updated\n         * later, so accessing a value of a parent control (using the `value` property) from the callback\n         * of this event might result in getting a value that has not been updated yet. Subscribe to the\n         * `events` of the parent control instead.\n         * For other event types, the events are emitted after the parent control has been updated.\n         *\n         */\n        this.events = this._events.asObservable();\n        /** @internal */\n        this._onDisabledChange = [];\n        this._assignValidators(validators);\n        this._assignAsyncValidators(asyncValidators);\n    }\n    /**\n     * Returns the function that is used to determine the validity of this control synchronously.\n     * If multiple validators have been added, this will be a single composed function.\n     * See `Validators.compose()` for additional information.\n     */\n    get validator() {\n        return this._composedValidatorFn;\n    }\n    set validator(validatorFn) {\n        this._rawValidators = this._composedValidatorFn = validatorFn;\n    }\n    /**\n     * Returns the function that is used to determine the validity of this control asynchronously.\n     * If multiple validators have been added, this will be a single composed function.\n     * See `Validators.compose()` for additional information.\n     */\n    get asyncValidator() {\n        return this._composedAsyncValidatorFn;\n    }\n    set asyncValidator(asyncValidatorFn) {\n        this._rawAsyncValidators = this._composedAsyncValidatorFn = asyncValidatorFn;\n    }\n    /**\n     * The parent control.\n     */\n    get parent() {\n        return this._parent;\n    }\n    /**\n     * The validation status of the control.\n     *\n     * @see {@link FormControlStatus}\n     *\n     * These status values are mutually exclusive, so a control cannot be\n     * both valid AND invalid or invalid AND disabled.\n     */\n    get status() {\n        return untracked(this.statusReactive);\n    }\n    set status(v) {\n        untracked(() => this.statusReactive.set(v));\n    }\n    /**\n     * A control is `valid` when its `status` is `VALID`.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @returns True if the control has passed all of its validation tests,\n     * false otherwise.\n     */\n    get valid() {\n        return this.status === VALID;\n    }\n    /**\n     * A control is `invalid` when its `status` is `INVALID`.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @returns True if this control has failed one or more of its validation checks,\n     * false otherwise.\n     */\n    get invalid() {\n        return this.status === INVALID;\n    }\n    /**\n     * A control is `pending` when its `status` is `PENDING`.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @returns True if this control is in the process of conducting a validation check,\n     * false otherwise.\n     */\n    get pending() {\n        return this.status == PENDING;\n    }\n    /**\n     * A control is `disabled` when its `status` is `DISABLED`.\n     *\n     * Disabled controls are exempt from validation checks and\n     * are not included in the aggregate value of their ancestor\n     * controls.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @returns True if the control is disabled, false otherwise.\n     */\n    get disabled() {\n        return this.status === DISABLED;\n    }\n    /**\n     * A control is `enabled` as long as its `status` is not `DISABLED`.\n     *\n     * @returns True if the control has any status other than 'DISABLED',\n     * false if the status is 'DISABLED'.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     */\n    get enabled() {\n        return this.status !== DISABLED;\n    }\n    /**\n     * A control is `pristine` if the user has not yet changed\n     * the value in the UI.\n     *\n     * @returns True if the user has not yet changed the value in the UI; compare `dirty`.\n     * Programmatic changes to a control's value do not mark it dirty.\n     */\n    get pristine() {\n        return untracked(this.pristineReactive);\n    }\n    set pristine(v) {\n        untracked(() => this.pristineReactive.set(v));\n    }\n    /**\n     * A control is `dirty` if the user has changed the value\n     * in the UI.\n     *\n     * @returns True if the user has changed the value of this control in the UI; compare `pristine`.\n     * Programmatic changes to a control's value do not mark it dirty.\n     */\n    get dirty() {\n        return !this.pristine;\n    }\n    /**\n     * True if the control is marked as `touched`.\n     *\n     * A control is marked `touched` once the user has triggered\n     * a `blur` event on it.\n     */\n    get touched() {\n        return untracked(this.touchedReactive);\n    }\n    set touched(v) {\n        untracked(() => this.touchedReactive.set(v));\n    }\n    /**\n     * True if the control has not been marked as touched\n     *\n     * A control is `untouched` if the user has not yet triggered\n     * a `blur` event on it.\n     */\n    get untouched() {\n        return !this.touched;\n    }\n    /**\n     * Reports the update strategy of the `AbstractControl` (meaning\n     * the event on which the control updates itself).\n     * Possible values: `'change'` | `'blur'` | `'submit'`\n     * Default value: `'change'`\n     */\n    get updateOn() {\n        return this._updateOn ? this._updateOn : this.parent ? this.parent.updateOn : 'change';\n    }\n    /**\n     * Sets the synchronous validators that are active on this control.  Calling\n     * this overwrites any existing synchronous validators.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     * If you want to add a new validator without affecting existing ones, consider\n     * using `addValidators()` method instead.\n     */\n    setValidators(validators) {\n        this._assignValidators(validators);\n    }\n    /**\n     * Sets the asynchronous validators that are active on this control. Calling this\n     * overwrites any existing asynchronous validators.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     * If you want to add a new validator without affecting existing ones, consider\n     * using `addAsyncValidators()` method instead.\n     */\n    setAsyncValidators(validators) {\n        this._assignAsyncValidators(validators);\n    }\n    /**\n     * Add a synchronous validator or validators to this control, without affecting other validators.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     * Adding a validator that already exists will have no effect. If duplicate validator functions\n     * are present in the `validators` array, only the first instance would be added to a form\n     * control.\n     *\n     * @param validators The new validator function or functions to add to this control.\n     */\n    addValidators(validators) {\n        this.setValidators(addValidators(validators, this._rawValidators));\n    }\n    /**\n     * Add an asynchronous validator or validators to this control, without affecting other\n     * validators.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     * Adding a validator that already exists will have no effect.\n     *\n     * @param validators The new asynchronous validator function or functions to add to this control.\n     */\n    addAsyncValidators(validators) {\n        this.setAsyncValidators(addValidators(validators, this._rawAsyncValidators));\n    }\n    /**\n     * Remove a synchronous validator from this control, without affecting other validators.\n     * Validators are compared by function reference; you must pass a reference to the exact same\n     * validator function as the one that was originally set. If a provided validator is not found,\n     * it is ignored.\n     *\n     * @usageNotes\n     *\n     * ### Reference to a ValidatorFn\n     *\n     * ```\n     * // Reference to the RequiredValidator\n     * const ctrl = new FormControl<string | null>('', Validators.required);\n     * ctrl.removeValidators(Validators.required);\n     *\n     * // Reference to anonymous function inside MinValidator\n     * const minValidator = Validators.min(3);\n     * const ctrl = new FormControl<string | null>('', minValidator);\n     * expect(ctrl.hasValidator(minValidator)).toEqual(true)\n     * expect(ctrl.hasValidator(Validators.min(3))).toEqual(false)\n     *\n     * ctrl.removeValidators(minValidator);\n     * ```\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     * @param validators The validator or validators to remove.\n     */\n    removeValidators(validators) {\n        this.setValidators(removeValidators(validators, this._rawValidators));\n    }\n    /**\n     * Remove an asynchronous validator from this control, without affecting other validators.\n     * Validators are compared by function reference; you must pass a reference to the exact same\n     * validator function as the one that was originally set. If a provided validator is not found, it\n     * is ignored.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     * @param validators The asynchronous validator or validators to remove.\n     */\n    removeAsyncValidators(validators) {\n        this.setAsyncValidators(removeValidators(validators, this._rawAsyncValidators));\n    }\n    /**\n     * Check whether a synchronous validator function is present on this control. The provided\n     * validator must be a reference to the exact same function that was provided.\n     *\n     * @usageNotes\n     *\n     * ### Reference to a ValidatorFn\n     *\n     * ```\n     * // Reference to the RequiredValidator\n     * const ctrl = new FormControl<number | null>(0, Validators.required);\n     * expect(ctrl.hasValidator(Validators.required)).toEqual(true)\n     *\n     * // Reference to anonymous function inside MinValidator\n     * const minValidator = Validators.min(3);\n     * const ctrl = new FormControl<number | null>(0, minValidator);\n     * expect(ctrl.hasValidator(minValidator)).toEqual(true)\n     * expect(ctrl.hasValidator(Validators.min(3))).toEqual(false)\n     * ```\n     *\n     * @param validator The validator to check for presence. Compared by function reference.\n     * @returns Whether the provided validator was found on this control.\n     */\n    hasValidator(validator) {\n        return hasValidator(this._rawValidators, validator);\n    }\n    /**\n     * Check whether an asynchronous validator function is present on this control. The provided\n     * validator must be a reference to the exact same function that was provided.\n     *\n     * @param validator The asynchronous validator to check for presence. Compared by function\n     *     reference.\n     * @returns Whether the provided asynchronous validator was found on this control.\n     */\n    hasAsyncValidator(validator) {\n        return hasValidator(this._rawAsyncValidators, validator);\n    }\n    /**\n     * Empties out the synchronous validator list.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     */\n    clearValidators() {\n        this.validator = null;\n    }\n    /**\n     * Empties out the async validator list.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     */\n    clearAsyncValidators() {\n        this.asyncValidator = null;\n    }\n    markAsTouched(opts = {}) {\n        const changed = this.touched === false;\n        this.touched = true;\n        const sourceControl = opts.sourceControl ?? this;\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsTouched({ ...opts, sourceControl });\n        }\n        if (changed && opts.emitEvent !== false) {\n            this._events.next(new TouchedChangeEvent(true, sourceControl));\n        }\n    }\n    /**\n     * Marks the control and all its descendant controls as `touched`.\n     * @see {@link markAsTouched()}\n     *\n     * @param opts Configuration options that determine how the control propagates changes\n     * and emits events after marking is applied.\n     * * `emitEvent`: When true or not supplied (the default), the `events`\n     * observable emits a `TouchedChangeEvent` with the `touched` property being `true`.\n     * When false, no events are emitted.\n     */\n    markAllAsTouched(opts = {}) {\n        this.markAsTouched({ onlySelf: true, emitEvent: opts.emitEvent, sourceControl: this });\n        this._forEachChild((control) => control.markAllAsTouched(opts));\n    }\n    markAsUntouched(opts = {}) {\n        const changed = this.touched === true;\n        this.touched = false;\n        this._pendingTouched = false;\n        const sourceControl = opts.sourceControl ?? this;\n        this._forEachChild((control) => {\n            control.markAsUntouched({ onlySelf: true, emitEvent: opts.emitEvent, sourceControl });\n        });\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updateTouched(opts, sourceControl);\n        }\n        if (changed && opts.emitEvent !== false) {\n            this._events.next(new TouchedChangeEvent(false, sourceControl));\n        }\n    }\n    markAsDirty(opts = {}) {\n        const changed = this.pristine === true;\n        this.pristine = false;\n        const sourceControl = opts.sourceControl ?? this;\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsDirty({ ...opts, sourceControl });\n        }\n        if (changed && opts.emitEvent !== false) {\n            this._events.next(new PristineChangeEvent(false, sourceControl));\n        }\n    }\n    markAsPristine(opts = {}) {\n        const changed = this.pristine === false;\n        this.pristine = true;\n        this._pendingDirty = false;\n        const sourceControl = opts.sourceControl ?? this;\n        this._forEachChild((control) => {\n            /** We don't propagate the source control downwards */\n            control.markAsPristine({ onlySelf: true, emitEvent: opts.emitEvent });\n        });\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updatePristine(opts, sourceControl);\n        }\n        if (changed && opts.emitEvent !== false) {\n            this._events.next(new PristineChangeEvent(true, sourceControl));\n        }\n    }\n    markAsPending(opts = {}) {\n        this.status = PENDING;\n        const sourceControl = opts.sourceControl ?? this;\n        if (opts.emitEvent !== false) {\n            this._events.next(new StatusChangeEvent(this.status, sourceControl));\n            this.statusChanges.emit(this.status);\n        }\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsPending({ ...opts, sourceControl });\n        }\n    }\n    disable(opts = {}) {\n        // If parent has been marked artificially dirty we don't want to re-calculate the\n        // parent's dirtiness based on the children.\n        const skipPristineCheck = this._parentMarkedDirty(opts.onlySelf);\n        this.status = DISABLED;\n        this.errors = null;\n        this._forEachChild((control) => {\n            /** We don't propagate the source control downwards */\n            control.disable({ ...opts, onlySelf: true });\n        });\n        this._updateValue();\n        const sourceControl = opts.sourceControl ?? this;\n        if (opts.emitEvent !== false) {\n            this._events.next(new ValueChangeEvent(this.value, sourceControl));\n            this._events.next(new StatusChangeEvent(this.status, sourceControl));\n            this.valueChanges.emit(this.value);\n            this.statusChanges.emit(this.status);\n        }\n        this._updateAncestors({ ...opts, skipPristineCheck }, this);\n        this._onDisabledChange.forEach((changeFn) => changeFn(true));\n    }\n    /**\n     * Enables the control. This means the control is included in validation checks and\n     * the aggregate value of its parent. Its status recalculates based on its value and\n     * its validators.\n     *\n     * By default, if the control has children, all children are enabled.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @param opts Configure options that control how the control propagates changes and\n     * emits events when marked as untouched\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     * * `emitEvent`: When true or not supplied (the default), the `statusChanges`,\n     * `valueChanges` and `events`\n     * observables emit events with the latest status and value when the control is enabled.\n     * When false, no events are emitted.\n     */\n    enable(opts = {}) {\n        // If parent has been marked artificially dirty we don't want to re-calculate the\n        // parent's dirtiness based on the children.\n        const skipPristineCheck = this._parentMarkedDirty(opts.onlySelf);\n        this.status = VALID;\n        this._forEachChild((control) => {\n            control.enable({ ...opts, onlySelf: true });\n        });\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: opts.emitEvent });\n        this._updateAncestors({ ...opts, skipPristineCheck }, this);\n        this._onDisabledChange.forEach((changeFn) => changeFn(false));\n    }\n    _updateAncestors(opts, sourceControl) {\n        if (this._parent && !opts.onlySelf) {\n            this._parent.updateValueAndValidity(opts);\n            if (!opts.skipPristineCheck) {\n                this._parent._updatePristine({}, sourceControl);\n            }\n            this._parent._updateTouched({}, sourceControl);\n        }\n    }\n    /**\n     * Sets the parent of the control\n     *\n     * @param parent The new parent.\n     */\n    setParent(parent) {\n        this._parent = parent;\n    }\n    /**\n     * The raw value of this control. For most control implementations, the raw value will include\n     * disabled children.\n     */\n    getRawValue() {\n        return this.value;\n    }\n    updateValueAndValidity(opts = {}) {\n        this._setInitialStatus();\n        this._updateValue();\n        if (this.enabled) {\n            const shouldHaveEmitted = this._cancelExistingSubscription();\n            this.errors = this._runValidator();\n            this.status = this._calculateStatus();\n            if (this.status === VALID || this.status === PENDING) {\n                // If the canceled subscription should have emitted\n                // we make sure the async validator emits the status change on completion\n                this._runAsyncValidator(shouldHaveEmitted, opts.emitEvent);\n            }\n        }\n        const sourceControl = opts.sourceControl ?? this;\n        if (opts.emitEvent !== false) {\n            this._events.next(new ValueChangeEvent(this.value, sourceControl));\n            this._events.next(new StatusChangeEvent(this.status, sourceControl));\n            this.valueChanges.emit(this.value);\n            this.statusChanges.emit(this.status);\n        }\n        if (this._parent && !opts.onlySelf) {\n            this._parent.updateValueAndValidity({ ...opts, sourceControl });\n        }\n    }\n    /** @internal */\n    _updateTreeValidity(opts = { emitEvent: true }) {\n        this._forEachChild((ctrl) => ctrl._updateTreeValidity(opts));\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: opts.emitEvent });\n    }\n    _setInitialStatus() {\n        this.status = this._allControlsDisabled() ? DISABLED : VALID;\n    }\n    _runValidator() {\n        return this.validator ? this.validator(this) : null;\n    }\n    _runAsyncValidator(shouldHaveEmitted, emitEvent) {\n        if (this.asyncValidator) {\n            this.status = PENDING;\n            this._hasOwnPendingAsyncValidator = { emitEvent: emitEvent !== false };\n            const obs = toObservable(this.asyncValidator(this));\n            this._asyncValidationSubscription = obs.subscribe((errors) => {\n                this._hasOwnPendingAsyncValidator = null;\n                // This will trigger the recalculation of the validation status, which depends on\n                // the state of the asynchronous validation (whether it is in progress or not). So, it is\n                // necessary that we have updated the `_hasOwnPendingAsyncValidator` boolean flag first.\n                this.setErrors(errors, { emitEvent, shouldHaveEmitted });\n            });\n        }\n    }\n    _cancelExistingSubscription() {\n        if (this._asyncValidationSubscription) {\n            this._asyncValidationSubscription.unsubscribe();\n            // we're cancelling the validator subscribtion, we keep if it should have emitted\n            // because we want to emit eventually if it was required at least once.\n            const shouldHaveEmitted = this._hasOwnPendingAsyncValidator?.emitEvent ?? false;\n            this._hasOwnPendingAsyncValidator = null;\n            return shouldHaveEmitted;\n        }\n        return false;\n    }\n    setErrors(errors, opts = {}) {\n        this.errors = errors;\n        this._updateControlsErrors(opts.emitEvent !== false, this, opts.shouldHaveEmitted);\n    }\n    /**\n     * Retrieves a child control given the control's name or path.\n     *\n     * @param path A dot-delimited string or array of string/number values that define the path to the\n     * control. If a string is provided, passing it as a string literal will result in improved type\n     * information. Likewise, if an array is provided, passing it `as const` will cause improved type\n     * information to be available.\n     *\n     * @usageNotes\n     * ### Retrieve a nested control\n     *\n     * For example, to get a `name` control nested within a `person` sub-group:\n     *\n     * * `this.form.get('person.name');`\n     *\n     * -OR-\n     *\n     * * `this.form.get(['person', 'name'] as const);` // `as const` gives improved typings\n     *\n     * ### Retrieve a control in a FormArray\n     *\n     * When accessing an element inside a FormArray, you can use an element index.\n     * For example, to get a `price` control from the first element in an `items` array you can use:\n     *\n     * * `this.form.get('items.0.price');`\n     *\n     * -OR-\n     *\n     * * `this.form.get(['items', 0, 'price']);`\n     */\n    get(path) {\n        let currPath = path;\n        if (currPath == null)\n            return null;\n        if (!Array.isArray(currPath))\n            currPath = currPath.split('.');\n        if (currPath.length === 0)\n            return null;\n        return currPath.reduce((control, name) => control && control._find(name), this);\n    }\n    /**\n     * @description\n     * Reports error data for the control with the given path.\n     *\n     * @param errorCode The code of the error to check\n     * @param path A list of control names that designates how to move from the current control\n     * to the control that should be queried for errors.\n     *\n     * @usageNotes\n     * For example, for the following `FormGroup`:\n     *\n     * ```\n     * form = new FormGroup({\n     *   address: new FormGroup({ street: new FormControl() })\n     * });\n     * ```\n     *\n     * The path to the 'street' control from the root form would be 'address' -> 'street'.\n     *\n     * It can be provided to this method in one of two formats:\n     *\n     * 1. An array of string control names, e.g. `['address', 'street']`\n     * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n     *\n     * @returns error data for that particular error. If the control or error is not present,\n     * null is returned.\n     */\n    getError(errorCode, path) {\n        const control = path ? this.get(path) : this;\n        return control && control.errors ? control.errors[errorCode] : null;\n    }\n    /**\n     * @description\n     * Reports whether the control with the given path has the error specified.\n     *\n     * @param errorCode The code of the error to check\n     * @param path A list of control names that designates how to move from the current control\n     * to the control that should be queried for errors.\n     *\n     * @usageNotes\n     * For example, for the following `FormGroup`:\n     *\n     * ```\n     * form = new FormGroup({\n     *   address: new FormGroup({ street: new FormControl() })\n     * });\n     * ```\n     *\n     * The path to the 'street' control from the root form would be 'address' -> 'street'.\n     *\n     * It can be provided to this method in one of two formats:\n     *\n     * 1. An array of string control names, e.g. `['address', 'street']`\n     * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n     *\n     * If no path is given, this method checks for the error on the current control.\n     *\n     * @returns whether the given error is present in the control at the given path.\n     *\n     * If the control is not present, false is returned.\n     */\n    hasError(errorCode, path) {\n        return !!this.getError(errorCode, path);\n    }\n    /**\n     * Retrieves the top-level ancestor of this control.\n     */\n    get root() {\n        let x = this;\n        while (x._parent) {\n            x = x._parent;\n        }\n        return x;\n    }\n    /** @internal */\n    _updateControlsErrors(emitEvent, changedControl, shouldHaveEmitted) {\n        this.status = this._calculateStatus();\n        if (emitEvent) {\n            this.statusChanges.emit(this.status);\n        }\n        // The Events Observable expose a slight different bevahior than the statusChanges obs\n        // An async validator will still emit a StatusChangeEvent is a previously cancelled\n        // async validator has emitEvent set to true\n        if (emitEvent || shouldHaveEmitted) {\n            this._events.next(new StatusChangeEvent(this.status, changedControl));\n        }\n        if (this._parent) {\n            this._parent._updateControlsErrors(emitEvent, changedControl, shouldHaveEmitted);\n        }\n    }\n    /** @internal */\n    _initObservables() {\n        this.valueChanges = new EventEmitter();\n        this.statusChanges = new EventEmitter();\n    }\n    _calculateStatus() {\n        if (this._allControlsDisabled())\n            return DISABLED;\n        if (this.errors)\n            return INVALID;\n        if (this._hasOwnPendingAsyncValidator || this._anyControlsHaveStatus(PENDING))\n            return PENDING;\n        if (this._anyControlsHaveStatus(INVALID))\n            return INVALID;\n        return VALID;\n    }\n    /** @internal */\n    _anyControlsHaveStatus(status) {\n        return this._anyControls((control) => control.status === status);\n    }\n    /** @internal */\n    _anyControlsDirty() {\n        return this._anyControls((control) => control.dirty);\n    }\n    /** @internal */\n    _anyControlsTouched() {\n        return this._anyControls((control) => control.touched);\n    }\n    /** @internal */\n    _updatePristine(opts, changedControl) {\n        const newPristine = !this._anyControlsDirty();\n        const changed = this.pristine !== newPristine;\n        this.pristine = newPristine;\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updatePristine(opts, changedControl);\n        }\n        if (changed) {\n            this._events.next(new PristineChangeEvent(this.pristine, changedControl));\n        }\n    }\n    /** @internal */\n    _updateTouched(opts = {}, changedControl) {\n        this.touched = this._anyControlsTouched();\n        this._events.next(new TouchedChangeEvent(this.touched, changedControl));\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updateTouched(opts, changedControl);\n        }\n    }\n    /** @internal */\n    _registerOnCollectionChange(fn) {\n        this._onCollectionChange = fn;\n    }\n    /** @internal */\n    _setUpdateStrategy(opts) {\n        if (isOptionsObj(opts) && opts.updateOn != null) {\n            this._updateOn = opts.updateOn;\n        }\n    }\n    /**\n     * Check to see if parent has been marked artificially dirty.\n     *\n     * @internal\n     */\n    _parentMarkedDirty(onlySelf) {\n        const parentDirty = this._parent && this._parent.dirty;\n        return !onlySelf && !!parentDirty && !this._parent._anyControlsDirty();\n    }\n    /** @internal */\n    _find(name) {\n        return null;\n    }\n    /**\n     * Internal implementation of the `setValidators` method. Needs to be separated out into a\n     * different method, because it is called in the constructor and it can break cases where\n     * a control is extended.\n     */\n    _assignValidators(validators) {\n        this._rawValidators = Array.isArray(validators) ? validators.slice() : validators;\n        this._composedValidatorFn = coerceToValidator(this._rawValidators);\n    }\n    /**\n     * Internal implementation of the `setAsyncValidators` method. Needs to be separated out into a\n     * different method, because it is called in the constructor and it can break cases where\n     * a control is extended.\n     */\n    _assignAsyncValidators(validators) {\n        this._rawAsyncValidators = Array.isArray(validators) ? validators.slice() : validators;\n        this._composedAsyncValidatorFn = coerceToAsyncValidator(this._rawAsyncValidators);\n    }\n}\n\n/**\n * Tracks the value and validity state of a group of `FormControl` instances.\n *\n * A `FormGroup` aggregates the values of each child `FormControl` into one object,\n * with each control name as the key.  It calculates its status by reducing the status values\n * of its children. For example, if one of the controls in a group is invalid, the entire\n * group becomes invalid.\n *\n * `FormGroup` is one of the four fundamental building blocks used to define forms in Angular,\n * along with `FormControl`, `FormArray`, and `FormRecord`.\n *\n * When instantiating a `FormGroup`, pass in a collection of child controls as the first\n * argument. The key for each child registers the name for the control.\n *\n * `FormGroup` is intended for use cases where the keys are known ahead of time.\n * If you need to dynamically add and remove controls, use {@link FormRecord} instead.\n *\n * `FormGroup` accepts an optional type parameter `TControl`, which is an object type with inner\n * control types as values.\n *\n * @usageNotes\n *\n * ### Create a form group with 2 controls\n *\n * ```\n * const form = new FormGroup({\n *   first: new FormControl('Nancy', Validators.minLength(2)),\n *   last: new FormControl('Drew'),\n * });\n *\n * console.log(form.value);   // {first: 'Nancy', last; 'Drew'}\n * console.log(form.status);  // 'VALID'\n * ```\n *\n * ### The type argument, and optional controls\n *\n * `FormGroup` accepts one generic argument, which is an object containing its inner controls.\n * This type will usually be inferred automatically, but you can always specify it explicitly if you\n * wish.\n *\n * If you have controls that are optional (i.e. they can be removed, you can use the `?` in the\n * type):\n *\n * ```\n * const form = new FormGroup<{\n *   first: FormControl<string|null>,\n *   middle?: FormControl<string|null>, // Middle name is optional.\n *   last: FormControl<string|null>,\n * }>({\n *   first: new FormControl('Nancy'),\n *   last: new FormControl('Drew'),\n * });\n * ```\n *\n * ### Create a form group with a group-level validator\n *\n * You include group-level validators as the second arg, or group-level async\n * validators as the third arg. These come in handy when you want to perform validation\n * that considers the value of more than one child control.\n *\n * ```\n * const form = new FormGroup({\n *   password: new FormControl('', Validators.minLength(2)),\n *   passwordConfirm: new FormControl('', Validators.minLength(2)),\n * }, passwordMatchValidator);\n *\n *\n * function passwordMatchValidator(g: FormGroup) {\n *    return g.get('password').value === g.get('passwordConfirm').value\n *       ? null : {'mismatch': true};\n * }\n * ```\n *\n * Like `FormControl` instances, you choose to pass in\n * validators and async validators as part of an options object.\n *\n * ```\n * const form = new FormGroup({\n *   password: new FormControl('')\n *   passwordConfirm: new FormControl('')\n * }, { validators: passwordMatchValidator, asyncValidators: otherValidator });\n * ```\n *\n * ### Set the updateOn property for all controls in a form group\n *\n * The options object is used to set a default value for each child\n * control's `updateOn` property. If you set `updateOn` to `'blur'` at the\n * group level, all child controls default to 'blur', unless the child\n * has explicitly specified a different `updateOn` value.\n *\n * ```ts\n * const c = new FormGroup({\n *   one: new FormControl()\n * }, { updateOn: 'blur' });\n * ```\n *\n * ### Using a FormGroup with optional controls\n *\n * It is possible to have optional controls in a FormGroup. An optional control can be removed later\n * using `removeControl`, and can be omitted when calling `reset`. Optional controls must be\n * declared optional in the group's type.\n *\n * ```ts\n * const c = new FormGroup<{one?: FormControl<string>}>({\n *   one: new FormControl('')\n * });\n * ```\n *\n * Notice that `c.value.one` has type `string|null|undefined`. This is because calling `c.reset({})`\n * without providing the optional key `one` will cause it to become `null`.\n *\n * @publicApi\n */\nclass FormGroup extends AbstractControl {\n    /**\n     * Creates a new `FormGroup` instance.\n     *\n     * @param controls A collection of child controls. The key for each child is the name\n     * under which it is registered.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or an `AbstractControlOptions` object that contains validation functions\n     * and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator functions\n     *\n     */\n    constructor(controls, validatorOrOpts, asyncValidator) {\n        super(pickValidators(validatorOrOpts), pickAsyncValidators(asyncValidator, validatorOrOpts));\n        (typeof ngDevMode === 'undefined' || ngDevMode) && validateFormGroupControls(controls);\n        this.controls = controls;\n        this._initObservables();\n        this._setUpdateStrategy(validatorOrOpts);\n        this._setUpControls();\n        this.updateValueAndValidity({\n            onlySelf: true,\n            // If `asyncValidator` is present, it will trigger control status change from `PENDING` to\n            // `VALID` or `INVALID`. The status should be broadcasted via the `statusChanges` observable,\n            // so we set `emitEvent` to `true` to allow that during the control creation process.\n            emitEvent: !!this.asyncValidator,\n        });\n    }\n    registerControl(name, control) {\n        if (this.controls[name])\n            return this.controls[name];\n        this.controls[name] = control;\n        control.setParent(this);\n        control._registerOnCollectionChange(this._onCollectionChange);\n        return control;\n    }\n    addControl(name, control, options = {}) {\n        this.registerControl(name, control);\n        this.updateValueAndValidity({ emitEvent: options.emitEvent });\n        this._onCollectionChange();\n    }\n    /**\n     * Remove a control from this group. In a strongly-typed group, required controls cannot be\n     * removed.\n     *\n     * This method also updates the value and validity of the control.\n     *\n     * @param name The control name to remove from the collection\n     * @param options Specifies whether this FormGroup instance should emit events after a\n     *     control is removed.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges` observables emit events with the latest status and value when the control is\n     * removed. When false, no events are emitted.\n     */\n    removeControl(name, options = {}) {\n        if (this.controls[name])\n            this.controls[name]._registerOnCollectionChange(() => { });\n        delete this.controls[name];\n        this.updateValueAndValidity({ emitEvent: options.emitEvent });\n        this._onCollectionChange();\n    }\n    setControl(name, control, options = {}) {\n        if (this.controls[name])\n            this.controls[name]._registerOnCollectionChange(() => { });\n        delete this.controls[name];\n        if (control)\n            this.registerControl(name, control);\n        this.updateValueAndValidity({ emitEvent: options.emitEvent });\n        this._onCollectionChange();\n    }\n    contains(controlName) {\n        return this.controls.hasOwnProperty(controlName) && this.controls[controlName].enabled;\n    }\n    /**\n     * Sets the value of the `FormGroup`. It accepts an object that matches\n     * the structure of the group, with control names as keys.\n     *\n     * @usageNotes\n     * ### Set the complete value for the form group\n     *\n     * ```\n     * const form = new FormGroup({\n     *   first: new FormControl(),\n     *   last: new FormControl()\n     * });\n     *\n     * console.log(form.value);   // {first: null, last: null}\n     *\n     * form.setValue({first: 'Nancy', last: 'Drew'});\n     * console.log(form.value);   // {first: 'Nancy', last: 'Drew'}\n     * ```\n     *\n     * @throws When strict checks fail, such as setting the value of a control\n     * that doesn't exist or if you exclude a value of a control that does exist.\n     *\n     * @param value The new value for the control that matches the structure of the group.\n     * @param options Configuration options that determine how the control propagates changes\n     * and emits events after the value changes.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n     * false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control value is updated.\n     * When false, no events are emitted.\n     */\n    setValue(value, options = {}) {\n        assertAllValuesPresent(this, true, value);\n        Object.keys(value).forEach((name) => {\n            assertControlPresent(this, true, name);\n            this.controls[name].setValue(value[name], {\n                onlySelf: true,\n                emitEvent: options.emitEvent,\n            });\n        });\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Patches the value of the `FormGroup`. It accepts an object with control\n     * names as keys, and does its best to match the values to the correct controls\n     * in the group.\n     *\n     * It accepts both super-sets and sub-sets of the group without throwing an error.\n     *\n     * @usageNotes\n     * ### Patch the value for a form group\n     *\n     * ```\n     * const form = new FormGroup({\n     *    first: new FormControl(),\n     *    last: new FormControl()\n     * });\n     * console.log(form.value);   // {first: null, last: null}\n     *\n     * form.patchValue({first: 'Nancy'});\n     * console.log(form.value);   // {first: 'Nancy', last: null}\n     * ```\n     *\n     * @param value The object that matches the structure of the group.\n     * @param options Configuration options that determine how the control propagates changes and\n     * emits events after the value is patched.\n     * * `onlySelf`: When true, each change only affects this control and not its parent. Default is\n     * true.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges` observables emit events with the latest status and value when the control value\n     * is updated. When false, no events are emitted. The configuration options are passed to\n     * the {@link AbstractControl#updateValueAndValidity updateValueAndValidity} method.\n     */\n    patchValue(value, options = {}) {\n        // Even though the `value` argument type doesn't allow `null` and `undefined` values, the\n        // `patchValue` can be called recursively and inner data structures might have these values, so\n        // we just ignore such cases when a field containing FormGroup instance receives `null` or\n        // `undefined` as a value.\n        if (value == null /* both `null` and `undefined` */)\n            return;\n        Object.keys(value).forEach((name) => {\n            // The compiler cannot see through the uninstantiated conditional type of `this.controls`, so\n            // `as any` is required.\n            const control = this.controls[name];\n            if (control) {\n                control.patchValue(\n                /* Guaranteed to be present, due to the outer forEach. */ value[name], { onlySelf: true, emitEvent: options.emitEvent });\n            }\n        });\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Resets the `FormGroup`, marks all descendants `pristine` and `untouched` and sets\n     * the value of all descendants to their default values, or null if no defaults were provided.\n     *\n     * You reset to a specific form state by passing in a map of states\n     * that matches the structure of your form, with control names as keys. The state\n     * is a standalone value or a form state object with both a value and a disabled\n     * status.\n     *\n     * @param value Resets the control with an initial value,\n     * or an object that defines the initial value and disabled state.\n     *\n     * @param options Configuration options that determine how the control propagates changes\n     * and emits events when the group is reset.\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n     * false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is reset.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     *\n     * @usageNotes\n     *\n     * ### Reset the form group values\n     *\n     * ```ts\n     * const form = new FormGroup({\n     *   first: new FormControl('first name'),\n     *   last: new FormControl('last name')\n     * });\n     *\n     * console.log(form.value);  // {first: 'first name', last: 'last name'}\n     *\n     * form.reset({ first: 'name', last: 'last name' });\n     *\n     * console.log(form.value);  // {first: 'name', last: 'last name'}\n     * ```\n     *\n     * ### Reset the form group values and disabled status\n     *\n     * ```\n     * const form = new FormGroup({\n     *   first: new FormControl('first name'),\n     *   last: new FormControl('last name')\n     * });\n     *\n     * form.reset({\n     *   first: {value: 'name', disabled: true},\n     *   last: 'last'\n     * });\n     *\n     * console.log(form.value);  // {last: 'last'}\n     * console.log(form.get('first').status);  // 'DISABLED'\n     * ```\n     */\n    reset(value = {}, options = {}) {\n        this._forEachChild((control, name) => {\n            control.reset(value ? value[name] : null, {\n                onlySelf: true,\n                emitEvent: options.emitEvent,\n            });\n        });\n        this._updatePristine(options, this);\n        this._updateTouched(options, this);\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * The aggregate value of the `FormGroup`, including any disabled controls.\n     *\n     * Retrieves all values regardless of disabled status.\n     */\n    getRawValue() {\n        return this._reduceChildren({}, (acc, control, name) => {\n            acc[name] = control.getRawValue();\n            return acc;\n        });\n    }\n    /** @internal */\n    _syncPendingControls() {\n        let subtreeUpdated = this._reduceChildren(false, (updated, child) => {\n            return child._syncPendingControls() ? true : updated;\n        });\n        if (subtreeUpdated)\n            this.updateValueAndValidity({ onlySelf: true });\n        return subtreeUpdated;\n    }\n    /** @internal */\n    _forEachChild(cb) {\n        Object.keys(this.controls).forEach((key) => {\n            // The list of controls can change (for ex. controls might be removed) while the loop\n            // is running (as a result of invoking Forms API in `valueChanges` subscription), so we\n            // have to null check before invoking the callback.\n            const control = this.controls[key];\n            control && cb(control, key);\n        });\n    }\n    /** @internal */\n    _setUpControls() {\n        this._forEachChild((control) => {\n            control.setParent(this);\n            control._registerOnCollectionChange(this._onCollectionChange);\n        });\n    }\n    /** @internal */\n    _updateValue() {\n        this.value = this._reduceValue();\n    }\n    /** @internal */\n    _anyControls(condition) {\n        for (const [controlName, control] of Object.entries(this.controls)) {\n            if (this.contains(controlName) && condition(control)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /** @internal */\n    _reduceValue() {\n        let acc = {};\n        return this._reduceChildren(acc, (acc, control, name) => {\n            if (control.enabled || this.disabled) {\n                acc[name] = control.value;\n            }\n            return acc;\n        });\n    }\n    /** @internal */\n    _reduceChildren(initValue, fn) {\n        let res = initValue;\n        this._forEachChild((control, name) => {\n            res = fn(res, control, name);\n        });\n        return res;\n    }\n    /** @internal */\n    _allControlsDisabled() {\n        for (const controlName of Object.keys(this.controls)) {\n            if (this.controls[controlName].enabled) {\n                return false;\n            }\n        }\n        return Object.keys(this.controls).length > 0 || this.disabled;\n    }\n    /** @internal */\n    _find(name) {\n        return this.controls.hasOwnProperty(name)\n            ? this.controls[name]\n            : null;\n    }\n}\n/**\n * Will validate that none of the controls has a key with a dot\n * Throws other wise\n */\nfunction validateFormGroupControls(controls) {\n    const invalidKeys = Object.keys(controls).filter((key) => key.includes('.'));\n    if (invalidKeys.length > 0) {\n        // TODO: make this an error once there are no more uses in G3\n        console.warn(`FormGroup keys cannot include \\`.\\`, please replace the keys for: ${invalidKeys.join(',')}.`);\n    }\n}\nconst UntypedFormGroup = FormGroup;\n/**\n * @description\n * Asserts that the given control is an instance of `FormGroup`\n *\n * @publicApi\n */\nconst isFormGroup = (control) => control instanceof FormGroup;\n/**\n * Tracks the value and validity state of a collection of `FormControl` instances, each of which has\n * the same value type.\n *\n * `FormRecord` is very similar to {@link FormGroup}, except it can be used with a dynamic keys,\n * with controls added and removed as needed.\n *\n * `FormRecord` accepts one generic argument, which describes the type of the controls it contains.\n *\n * @usageNotes\n *\n * ```\n * let numbers = new FormRecord({bill: new FormControl('415-123-456')});\n * numbers.addControl('bob', new FormControl('415-234-567'));\n * numbers.removeControl('bill');\n * ```\n *\n * @publicApi\n */\nclass FormRecord extends FormGroup {\n}\n/**\n * @description\n * Asserts that the given control is an instance of `FormRecord`\n *\n * @publicApi\n */\nconst isFormRecord = (control) => control instanceof FormRecord;\n\n/**\n * Token to provide to allow SetDisabledState to always be called when a CVA is added, regardless of\n * whether the control is disabled or enabled.\n *\n * @see {@link FormsModule#withconfig}\n */\nconst CALL_SET_DISABLED_STATE = new InjectionToken('CallSetDisabledState', {\n    providedIn: 'root',\n    factory: () => setDisabledStateDefault,\n});\n/**\n * Whether to use the fixed setDisabledState behavior by default.\n */\nconst setDisabledStateDefault = 'always';\nfunction controlPath(name, parent) {\n    return [...parent.path, name];\n}\n/**\n * Links a Form control and a Form directive by setting up callbacks (such as `onChange`) on both\n * instances. This function is typically invoked when form directive is being initialized.\n *\n * @param control Form control instance that should be linked.\n * @param dir Directive that should be linked with a given control.\n */\nfunction setUpControl(control, dir, callSetDisabledState = setDisabledStateDefault) {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (!control)\n            _throwError(dir, 'Cannot find control with');\n        if (!dir.valueAccessor)\n            _throwMissingValueAccessorError(dir);\n    }\n    setUpValidators(control, dir);\n    dir.valueAccessor.writeValue(control.value);\n    // The legacy behavior only calls the CVA's `setDisabledState` if the control is disabled.\n    // If the `callSetDisabledState` option is set to `always`, then this bug is fixed and\n    // the method is always called.\n    if (control.disabled || callSetDisabledState === 'always') {\n        dir.valueAccessor.setDisabledState?.(control.disabled);\n    }\n    setUpViewChangePipeline(control, dir);\n    setUpModelChangePipeline(control, dir);\n    setUpBlurPipeline(control, dir);\n    setUpDisabledChangeHandler(control, dir);\n}\n/**\n * Reverts configuration performed by the `setUpControl` control function.\n * Effectively disconnects form control with a given form directive.\n * This function is typically invoked when corresponding form directive is being destroyed.\n *\n * @param control Form control which should be cleaned up.\n * @param dir Directive that should be disconnected from a given control.\n * @param validateControlPresenceOnChange Flag that indicates whether onChange handler should\n *     contain asserts to verify that it's not called once directive is destroyed. We need this flag\n *     to avoid potentially breaking changes caused by better control cleanup introduced in #39235.\n */\nfunction cleanUpControl(control, dir, validateControlPresenceOnChange = true) {\n    const noop = () => {\n        if (validateControlPresenceOnChange && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            _noControlError(dir);\n        }\n    };\n    // The `valueAccessor` field is typically defined on FromControl and FormControlName directive\n    // instances and there is a logic in `selectValueAccessor` function that throws if it's not the\n    // case. We still check the presence of `valueAccessor` before invoking its methods to make sure\n    // that cleanup works correctly if app code or tests are setup to ignore the error thrown from\n    // `selectValueAccessor`. See https://github.com/angular/angular/issues/40521.\n    if (dir.valueAccessor) {\n        dir.valueAccessor.registerOnChange(noop);\n        dir.valueAccessor.registerOnTouched(noop);\n    }\n    cleanUpValidators(control, dir);\n    if (control) {\n        dir._invokeOnDestroyCallbacks();\n        control._registerOnCollectionChange(() => { });\n    }\n}\nfunction registerOnValidatorChange(validators, onChange) {\n    validators.forEach((validator) => {\n        if (validator.registerOnValidatorChange)\n            validator.registerOnValidatorChange(onChange);\n    });\n}\n/**\n * Sets up disabled change handler function on a given form control if ControlValueAccessor\n * associated with a given directive instance supports the `setDisabledState` call.\n *\n * @param control Form control where disabled change handler should be setup.\n * @param dir Corresponding directive instance associated with this control.\n */\nfunction setUpDisabledChangeHandler(control, dir) {\n    if (dir.valueAccessor.setDisabledState) {\n        const onDisabledChange = (isDisabled) => {\n            dir.valueAccessor.setDisabledState(isDisabled);\n        };\n        control.registerOnDisabledChange(onDisabledChange);\n        // Register a callback function to cleanup disabled change handler\n        // from a control instance when a directive is destroyed.\n        dir._registerOnDestroy(() => {\n            control._unregisterOnDisabledChange(onDisabledChange);\n        });\n    }\n}\n/**\n * Sets up sync and async directive validators on provided form control.\n * This function merges validators from the directive into the validators of the control.\n *\n * @param control Form control where directive validators should be setup.\n * @param dir Directive instance that contains validators to be setup.\n */\nfunction setUpValidators(control, dir) {\n    const validators = getControlValidators(control);\n    if (dir.validator !== null) {\n        control.setValidators(mergeValidators(validators, dir.validator));\n    }\n    else if (typeof validators === 'function') {\n        // If sync validators are represented by a single validator function, we force the\n        // `Validators.compose` call to happen by executing the `setValidators` function with\n        // an array that contains that function. We need this to avoid possible discrepancies in\n        // validators behavior, so sync validators are always processed by the `Validators.compose`.\n        // Note: we should consider moving this logic inside the `setValidators` function itself, so we\n        // have consistent behavior on AbstractControl API level. The same applies to the async\n        // validators logic below.\n        control.setValidators([validators]);\n    }\n    const asyncValidators = getControlAsyncValidators(control);\n    if (dir.asyncValidator !== null) {\n        control.setAsyncValidators(mergeValidators(asyncValidators, dir.asyncValidator));\n    }\n    else if (typeof asyncValidators === 'function') {\n        control.setAsyncValidators([asyncValidators]);\n    }\n    // Re-run validation when validator binding changes, e.g. minlength=3 -> minlength=4\n    const onValidatorChange = () => control.updateValueAndValidity();\n    registerOnValidatorChange(dir._rawValidators, onValidatorChange);\n    registerOnValidatorChange(dir._rawAsyncValidators, onValidatorChange);\n}\n/**\n * Cleans up sync and async directive validators on provided form control.\n * This function reverts the setup performed by the `setUpValidators` function, i.e.\n * removes directive-specific validators from a given control instance.\n *\n * @param control Form control from where directive validators should be removed.\n * @param dir Directive instance that contains validators to be removed.\n * @returns true if a control was updated as a result of this action.\n */\nfunction cleanUpValidators(control, dir) {\n    let isControlUpdated = false;\n    if (control !== null) {\n        if (dir.validator !== null) {\n            const validators = getControlValidators(control);\n            if (Array.isArray(validators) && validators.length > 0) {\n                // Filter out directive validator function.\n                const updatedValidators = validators.filter((validator) => validator !== dir.validator);\n                if (updatedValidators.length !== validators.length) {\n                    isControlUpdated = true;\n                    control.setValidators(updatedValidators);\n                }\n            }\n        }\n        if (dir.asyncValidator !== null) {\n            const asyncValidators = getControlAsyncValidators(control);\n            if (Array.isArray(asyncValidators) && asyncValidators.length > 0) {\n                // Filter out directive async validator function.\n                const updatedAsyncValidators = asyncValidators.filter((asyncValidator) => asyncValidator !== dir.asyncValidator);\n                if (updatedAsyncValidators.length !== asyncValidators.length) {\n                    isControlUpdated = true;\n                    control.setAsyncValidators(updatedAsyncValidators);\n                }\n            }\n        }\n    }\n    // Clear onValidatorChange callbacks by providing a noop function.\n    const noop = () => { };\n    registerOnValidatorChange(dir._rawValidators, noop);\n    registerOnValidatorChange(dir._rawAsyncValidators, noop);\n    return isControlUpdated;\n}\nfunction setUpViewChangePipeline(control, dir) {\n    dir.valueAccessor.registerOnChange((newValue) => {\n        control._pendingValue = newValue;\n        control._pendingChange = true;\n        control._pendingDirty = true;\n        if (control.updateOn === 'change')\n            updateControl(control, dir);\n    });\n}\nfunction setUpBlurPipeline(control, dir) {\n    dir.valueAccessor.registerOnTouched(() => {\n        control._pendingTouched = true;\n        if (control.updateOn === 'blur' && control._pendingChange)\n            updateControl(control, dir);\n        if (control.updateOn !== 'submit')\n            control.markAsTouched();\n    });\n}\nfunction updateControl(control, dir) {\n    if (control._pendingDirty)\n        control.markAsDirty();\n    control.setValue(control._pendingValue, { emitModelToViewChange: false });\n    dir.viewToModelUpdate(control._pendingValue);\n    control._pendingChange = false;\n}\nfunction setUpModelChangePipeline(control, dir) {\n    const onChange = (newValue, emitModelEvent) => {\n        // control -> view\n        dir.valueAccessor.writeValue(newValue);\n        // control -> ngModel\n        if (emitModelEvent)\n            dir.viewToModelUpdate(newValue);\n    };\n    control.registerOnChange(onChange);\n    // Register a callback function to cleanup onChange handler\n    // from a control instance when a directive is destroyed.\n    dir._registerOnDestroy(() => {\n        control._unregisterOnChange(onChange);\n    });\n}\n/**\n * Links a FormGroup or FormArray instance and corresponding Form directive by setting up validators\n * present in the view.\n *\n * @param control FormGroup or FormArray instance that should be linked.\n * @param dir Directive that provides view validators.\n */\nfunction setUpFormContainer(control, dir) {\n    if (control == null && (typeof ngDevMode === 'undefined' || ngDevMode))\n        _throwError(dir, 'Cannot find control with');\n    setUpValidators(control, dir);\n}\n/**\n * Reverts the setup performed by the `setUpFormContainer` function.\n *\n * @param control FormGroup or FormArray instance that should be cleaned up.\n * @param dir Directive that provided view validators.\n * @returns true if a control was updated as a result of this action.\n */\nfunction cleanUpFormContainer(control, dir) {\n    return cleanUpValidators(control, dir);\n}\nfunction _noControlError(dir) {\n    return _throwError(dir, 'There is no FormControl instance attached to form control element with');\n}\nfunction _throwError(dir, message) {\n    const messageEnd = _describeControlLocation(dir);\n    throw new Error(`${message} ${messageEnd}`);\n}\nfunction _describeControlLocation(dir) {\n    const path = dir.path;\n    if (path && path.length > 1)\n        return `path: '${path.join(' -> ')}'`;\n    if (path?.[0])\n        return `name: '${path}'`;\n    return 'unspecified name attribute';\n}\nfunction _throwMissingValueAccessorError(dir) {\n    const loc = _describeControlLocation(dir);\n    throw new ɵRuntimeError(-1203 /* RuntimeErrorCode.NG_MISSING_VALUE_ACCESSOR */, `No value accessor for form control ${loc}.`);\n}\nfunction _throwInvalidValueAccessorError(dir) {\n    const loc = _describeControlLocation(dir);\n    throw new ɵRuntimeError(1200 /* RuntimeErrorCode.NG_VALUE_ACCESSOR_NOT_PROVIDED */, `Value accessor was not provided as an array for form control with ${loc}. ` +\n        `Check that the \\`NG_VALUE_ACCESSOR\\` token is configured as a \\`multi: true\\` provider.`);\n}\nfunction isPropertyUpdated(changes, viewModel) {\n    if (!changes.hasOwnProperty('model'))\n        return false;\n    const change = changes['model'];\n    if (change.isFirstChange())\n        return true;\n    return !Object.is(viewModel, change.currentValue);\n}\nfunction isBuiltInAccessor(valueAccessor) {\n    // Check if a given value accessor is an instance of a class that directly extends\n    // `BuiltInControlValueAccessor` one.\n    return Object.getPrototypeOf(valueAccessor.constructor) === BuiltInControlValueAccessor;\n}\nfunction syncPendingControls(form, directives) {\n    form._syncPendingControls();\n    directives.forEach((dir) => {\n        const control = dir.control;\n        if (control.updateOn === 'submit' && control._pendingChange) {\n            dir.viewToModelUpdate(control._pendingValue);\n            control._pendingChange = false;\n        }\n    });\n}\n// TODO: vsavkin remove it once https://github.com/angular/angular/issues/3011 is implemented\nfunction selectValueAccessor(dir, valueAccessors) {\n    if (!valueAccessors)\n        return null;\n    if (!Array.isArray(valueAccessors) && (typeof ngDevMode === 'undefined' || ngDevMode))\n        _throwInvalidValueAccessorError(dir);\n    let defaultAccessor = undefined;\n    let builtinAccessor = undefined;\n    let customAccessor = undefined;\n    valueAccessors.forEach((v) => {\n        if (v.constructor === DefaultValueAccessor) {\n            defaultAccessor = v;\n        }\n        else if (isBuiltInAccessor(v)) {\n            if (builtinAccessor && (typeof ngDevMode === 'undefined' || ngDevMode))\n                _throwError(dir, 'More than one built-in value accessor matches form control with');\n            builtinAccessor = v;\n        }\n        else {\n            if (customAccessor && (typeof ngDevMode === 'undefined' || ngDevMode))\n                _throwError(dir, 'More than one custom value accessor matches form control with');\n            customAccessor = v;\n        }\n    });\n    if (customAccessor)\n        return customAccessor;\n    if (builtinAccessor)\n        return builtinAccessor;\n    if (defaultAccessor)\n        return defaultAccessor;\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        _throwError(dir, 'No valid value accessor for form control with');\n    }\n    return null;\n}\nfunction removeListItem$1(list, el) {\n    const index = list.indexOf(el);\n    if (index > -1)\n        list.splice(index, 1);\n}\n// TODO(kara): remove after deprecation period\nfunction _ngModelWarning(name, type, instance, warningConfig) {\n    if (warningConfig === 'never')\n        return;\n    if (((warningConfig === null || warningConfig === 'once') && !type._ngModelWarningSentOnce) ||\n        (warningConfig === 'always' && !instance._ngModelWarningSent)) {\n        console.warn(ngModelWarning(name));\n        type._ngModelWarningSentOnce = true;\n        instance._ngModelWarningSent = true;\n    }\n}\n\nconst formDirectiveProvider$1 = {\n    provide: ControlContainer,\n    useExisting: forwardRef(() => NgForm),\n};\nconst resolvedPromise$1 = (() => Promise.resolve())();\n/**\n * @description\n * Creates a top-level `FormGroup` instance and binds it to a form\n * to track aggregate form value and validation status.\n *\n * As soon as you import the `FormsModule`, this directive becomes active by default on\n * all `<form>` tags.  You don't need to add a special selector.\n *\n * You optionally export the directive into a local template variable using `ngForm` as the key\n * (ex: `#myForm=\"ngForm\"`). This is optional, but useful.  Many properties from the underlying\n * `FormGroup` instance are duplicated on the directive itself, so a reference to it\n * gives you access to the aggregate value and validity status of the form, as well as\n * user interaction properties like `dirty` and `touched`.\n *\n * To register child controls with the form, use `NgModel` with a `name`\n * attribute. You may use `NgModelGroup` to create sub-groups within the form.\n *\n * If necessary, listen to the directive's `ngSubmit` event to be notified when the user has\n * triggered a form submission. The `ngSubmit` event emits the original form\n * submission event.\n *\n * In template driven forms, all `<form>` tags are automatically tagged as `NgForm`.\n * To import the `FormsModule` but skip its usage in some forms,\n * for example, to use native HTML5 validation, add the `ngNoForm` and the `<form>`\n * tags won't create an `NgForm` directive. In reactive forms, using `ngNoForm` is\n * unnecessary because the `<form>` tags are inert. In that case, you would\n * refrain from using the `formGroup` directive.\n *\n * @usageNotes\n *\n * ### Listening for form submission\n *\n * The following example shows how to capture the form values from the \"ngSubmit\" event.\n *\n * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * ### Setting the update options\n *\n * The following example shows you how to change the \"updateOn\" option from its default using\n * ngFormOptions.\n *\n * ```html\n * <form [ngFormOptions]=\"{updateOn: 'blur'}\">\n *    <input name=\"one\" ngModel>  <!-- this ngModel will update on blur -->\n * </form>\n * ```\n *\n * ### Native DOM validation UI\n *\n * In order to prevent the native DOM form validation UI from interfering with Angular's form\n * validation, Angular automatically adds the `novalidate` attribute on any `<form>` whenever\n * `FormModule` or `ReactiveFormModule` are imported into the application.\n * If you want to explicitly enable native DOM validation UI with Angular forms, you can add the\n * `ngNativeValidate` attribute to the `<form>` element:\n *\n * ```html\n * <form ngNativeValidate>\n *   ...\n * </form>\n * ```\n *\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgForm extends ControlContainer {\n    /**\n     * @description\n     * Returns whether the form submission has been triggered.\n     */\n    get submitted() {\n        return untracked(this.submittedReactive);\n    }\n    constructor(validators, asyncValidators, callSetDisabledState) {\n        super();\n        this.callSetDisabledState = callSetDisabledState;\n        /** @internal */\n        this._submitted = computed(() => this.submittedReactive());\n        this.submittedReactive = signal(false);\n        this._directives = new Set();\n        /**\n         * @description\n         * Event emitter for the \"ngSubmit\" event\n         */\n        this.ngSubmit = new EventEmitter();\n        this.form = new FormGroup({}, composeValidators(validators), composeAsyncValidators(asyncValidators));\n    }\n    /** @nodoc */\n    ngAfterViewInit() {\n        this._setUpdateStrategy();\n    }\n    /**\n     * @description\n     * The directive instance.\n     */\n    get formDirective() {\n        return this;\n    }\n    /**\n     * @description\n     * The internal `FormGroup` instance.\n     */\n    get control() {\n        return this.form;\n    }\n    /**\n     * @description\n     * Returns an array representing the path to this group. Because this directive\n     * always lives at the top level of a form, it is always an empty array.\n     */\n    get path() {\n        return [];\n    }\n    /**\n     * @description\n     * Returns a map of the controls in this group.\n     */\n    get controls() {\n        return this.form.controls;\n    }\n    /**\n     * @description\n     * Method that sets up the control directive in this group, re-calculates its value\n     * and validity, and adds the instance to the internal list of directives.\n     *\n     * @param dir The `NgModel` directive instance.\n     */\n    addControl(dir) {\n        resolvedPromise$1.then(() => {\n            const container = this._findContainer(dir.path);\n            dir.control = (container.registerControl(dir.name, dir.control));\n            setUpControl(dir.control, dir, this.callSetDisabledState);\n            dir.control.updateValueAndValidity({ emitEvent: false });\n            this._directives.add(dir);\n        });\n    }\n    /**\n     * @description\n     * Retrieves the `FormControl` instance from the provided `NgModel` directive.\n     *\n     * @param dir The `NgModel` directive instance.\n     */\n    getControl(dir) {\n        return this.form.get(dir.path);\n    }\n    /**\n     * @description\n     * Removes the `NgModel` instance from the internal list of directives\n     *\n     * @param dir The `NgModel` directive instance.\n     */\n    removeControl(dir) {\n        resolvedPromise$1.then(() => {\n            const container = this._findContainer(dir.path);\n            if (container) {\n                container.removeControl(dir.name);\n            }\n            this._directives.delete(dir);\n        });\n    }\n    /**\n     * @description\n     * Adds a new `NgModelGroup` directive instance to the form.\n     *\n     * @param dir The `NgModelGroup` directive instance.\n     */\n    addFormGroup(dir) {\n        resolvedPromise$1.then(() => {\n            const container = this._findContainer(dir.path);\n            const group = new FormGroup({});\n            setUpFormContainer(group, dir);\n            container.registerControl(dir.name, group);\n            group.updateValueAndValidity({ emitEvent: false });\n        });\n    }\n    /**\n     * @description\n     * Removes the `NgModelGroup` directive instance from the form.\n     *\n     * @param dir The `NgModelGroup` directive instance.\n     */\n    removeFormGroup(dir) {\n        resolvedPromise$1.then(() => {\n            const container = this._findContainer(dir.path);\n            if (container) {\n                container.removeControl(dir.name);\n            }\n        });\n    }\n    /**\n     * @description\n     * Retrieves the `FormGroup` for a provided `NgModelGroup` directive instance\n     *\n     * @param dir The `NgModelGroup` directive instance.\n     */\n    getFormGroup(dir) {\n        return this.form.get(dir.path);\n    }\n    /**\n     * Sets the new value for the provided `NgControl` directive.\n     *\n     * @param dir The `NgControl` directive instance.\n     * @param value The new value for the directive's control.\n     */\n    updateModel(dir, value) {\n        resolvedPromise$1.then(() => {\n            const ctrl = this.form.get(dir.path);\n            ctrl.setValue(value);\n        });\n    }\n    /**\n     * @description\n     * Sets the value for this `FormGroup`.\n     *\n     * @param value The new value\n     */\n    setValue(value) {\n        this.control.setValue(value);\n    }\n    /**\n     * @description\n     * Method called when the \"submit\" event is triggered on the form.\n     * Triggers the `ngSubmit` emitter to emit the \"submit\" event as its payload.\n     *\n     * @param $event The \"submit\" event object\n     */\n    onSubmit($event) {\n        this.submittedReactive.set(true);\n        syncPendingControls(this.form, this._directives);\n        this.ngSubmit.emit($event);\n        // Forms with `method=\"dialog\"` have some special behavior\n        // that won't reload the page and that shouldn't be prevented.\n        return $event?.target?.method === 'dialog';\n    }\n    /**\n     * @description\n     * Method called when the \"reset\" event is triggered on the form.\n     */\n    onReset() {\n        this.resetForm();\n    }\n    /**\n     * @description\n     * Resets the form to an initial value and resets its submitted status.\n     *\n     * @param value The new value for the form.\n     */\n    resetForm(value = undefined) {\n        this.form.reset(value);\n        this.submittedReactive.set(false);\n    }\n    _setUpdateStrategy() {\n        if (this.options && this.options.updateOn != null) {\n            this.form._updateOn = this.options.updateOn;\n        }\n    }\n    _findContainer(path) {\n        path.pop();\n        return path.length ? this.form.get(path) : this.form;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: NgForm, deps: [{ token: NG_VALIDATORS, optional: true, self: true }, { token: NG_ASYNC_VALIDATORS, optional: true, self: true }, { token: CALL_SET_DISABLED_STATE, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.8\", type: NgForm, selector: \"form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]\", inputs: { options: [\"ngFormOptions\", \"options\"] }, outputs: { ngSubmit: \"ngSubmit\" }, host: { listeners: { \"submit\": \"onSubmit($event)\", \"reset\": \"onReset()\" } }, providers: [formDirectiveProvider$1], exportAs: [\"ngForm\"], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: NgForm, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]',\n                    providers: [formDirectiveProvider$1],\n                    host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n                    outputs: ['ngSubmit'],\n                    exportAs: 'ngForm',\n                }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_VALIDATORS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_ASYNC_VALIDATORS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CALL_SET_DISABLED_STATE]\n                }] }], propDecorators: { options: [{\n                type: Input,\n                args: ['ngFormOptions']\n            }] } });\n\nfunction removeListItem(list, el) {\n    const index = list.indexOf(el);\n    if (index > -1)\n        list.splice(index, 1);\n}\n\nfunction isFormControlState(formState) {\n    return (typeof formState === 'object' &&\n        formState !== null &&\n        Object.keys(formState).length === 2 &&\n        'value' in formState &&\n        'disabled' in formState);\n}\nconst FormControl = class FormControl extends AbstractControl {\n    constructor(\n    // formState and defaultValue will only be null if T is nullable\n    formState = null, validatorOrOpts, asyncValidator) {\n        super(pickValidators(validatorOrOpts), pickAsyncValidators(asyncValidator, validatorOrOpts));\n        /** @publicApi */\n        this.defaultValue = null;\n        /** @internal */\n        this._onChange = [];\n        /** @internal */\n        this._pendingChange = false;\n        this._applyFormState(formState);\n        this._setUpdateStrategy(validatorOrOpts);\n        this._initObservables();\n        this.updateValueAndValidity({\n            onlySelf: true,\n            // If `asyncValidator` is present, it will trigger control status change from `PENDING` to\n            // `VALID` or `INVALID`.\n            // The status should be broadcasted via the `statusChanges` observable, so we set\n            // `emitEvent` to `true` to allow that during the control creation process.\n            emitEvent: !!this.asyncValidator,\n        });\n        if (isOptionsObj(validatorOrOpts) &&\n            (validatorOrOpts.nonNullable || validatorOrOpts.initialValueIsDefault)) {\n            if (isFormControlState(formState)) {\n                this.defaultValue = formState.value;\n            }\n            else {\n                this.defaultValue = formState;\n            }\n        }\n    }\n    setValue(value, options = {}) {\n        this.value = this._pendingValue = value;\n        if (this._onChange.length && options.emitModelToViewChange !== false) {\n            this._onChange.forEach((changeFn) => changeFn(this.value, options.emitViewToModelChange !== false));\n        }\n        this.updateValueAndValidity(options);\n    }\n    patchValue(value, options = {}) {\n        this.setValue(value, options);\n    }\n    reset(formState = this.defaultValue, options = {}) {\n        this._applyFormState(formState);\n        this.markAsPristine(options);\n        this.markAsUntouched(options);\n        this.setValue(this.value, options);\n        this._pendingChange = false;\n    }\n    /**  @internal */\n    _updateValue() { }\n    /**  @internal */\n    _anyControls(condition) {\n        return false;\n    }\n    /**  @internal */\n    _allControlsDisabled() {\n        return this.disabled;\n    }\n    registerOnChange(fn) {\n        this._onChange.push(fn);\n    }\n    /** @internal */\n    _unregisterOnChange(fn) {\n        removeListItem(this._onChange, fn);\n    }\n    registerOnDisabledChange(fn) {\n        this._onDisabledChange.push(fn);\n    }\n    /** @internal */\n    _unregisterOnDisabledChange(fn) {\n        removeListItem(this._onDisabledChange, fn);\n    }\n    /** @internal */\n    _forEachChild(cb) { }\n    /** @internal */\n    _syncPendingControls() {\n        if (this.updateOn === 'submit') {\n            if (this._pendingDirty)\n                this.markAsDirty();\n            if (this._pendingTouched)\n                this.markAsTouched();\n            if (this._pendingChange) {\n                this.setValue(this._pendingValue, { onlySelf: true, emitModelToViewChange: false });\n                return true;\n            }\n        }\n        return false;\n    }\n    _applyFormState(formState) {\n        if (isFormControlState(formState)) {\n            this.value = this._pendingValue = formState.value;\n            formState.disabled\n                ? this.disable({ onlySelf: true, emitEvent: false })\n                : this.enable({ onlySelf: true, emitEvent: false });\n        }\n        else {\n            this.value = this._pendingValue = formState;\n        }\n    }\n};\nconst UntypedFormControl = FormControl;\n/**\n * @description\n * Asserts that the given control is an instance of `FormControl`\n *\n * @publicApi\n */\nconst isFormControl = (control) => control instanceof FormControl;\n\n/**\n * @description\n * A base class for code shared between the `NgModelGroup` and `FormGroupName` directives.\n *\n * @publicApi\n */\nclass AbstractFormGroupDirective extends ControlContainer {\n    /** @nodoc */\n    ngOnInit() {\n        this._checkParentType();\n        // Register the group with its parent group.\n        this.formDirective.addFormGroup(this);\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n        if (this.formDirective) {\n            // Remove the group from its parent group.\n            this.formDirective.removeFormGroup(this);\n        }\n    }\n    /**\n     * @description\n     * The `FormGroup` bound to this directive.\n     */\n    get control() {\n        return this.formDirective.getFormGroup(this);\n    }\n    /**\n     * @description\n     * The path to this group from the top-level directive.\n     */\n    get path() {\n        return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n    }\n    /**\n     * @description\n     * The top-level directive for this group if present, otherwise null.\n     */\n    get formDirective() {\n        return this._parent ? this._parent.formDirective : null;\n    }\n    /** @internal */\n    _checkParentType() { }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: AbstractFormGroupDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.8\", type: AbstractFormGroupDirective, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: AbstractFormGroupDirective, decorators: [{\n            type: Directive\n        }] });\n\nfunction modelParentException() {\n    return new ɵRuntimeError(1350 /* RuntimeErrorCode.NGMODEL_IN_FORM_GROUP */, `\n    ngModel cannot be used to register form controls with a parent formGroup directive.  Try using\n    formGroup's partner directive \"formControlName\" instead.  Example:\n\n    ${formControlNameExample}\n\n    Or, if you'd like to avoid registering this form control, indicate that it's standalone in ngModelOptions:\n\n    Example:\n\n    ${ngModelWithFormGroupExample}`);\n}\nfunction formGroupNameException() {\n    return new ɵRuntimeError(1351 /* RuntimeErrorCode.NGMODEL_IN_FORM_GROUP_NAME */, `\n    ngModel cannot be used to register form controls with a parent formGroupName or formArrayName directive.\n\n    Option 1: Use formControlName instead of ngModel (reactive strategy):\n\n    ${formGroupNameExample}\n\n    Option 2:  Update ngModel's parent be ngModelGroup (template-driven strategy):\n\n    ${ngModelGroupExample}`);\n}\nfunction missingNameException() {\n    return new ɵRuntimeError(1352 /* RuntimeErrorCode.NGMODEL_WITHOUT_NAME */, `If ngModel is used within a form tag, either the name attribute must be set or the form\n    control must be defined as 'standalone' in ngModelOptions.\n\n    Example 1: <input [(ngModel)]=\"person.firstName\" name=\"first\">\n    Example 2: <input [(ngModel)]=\"person.firstName\" [ngModelOptions]=\"{standalone: true}\">`);\n}\nfunction modelGroupParentException() {\n    return new ɵRuntimeError(1353 /* RuntimeErrorCode.NGMODELGROUP_IN_FORM_GROUP */, `\n    ngModelGroup cannot be used with a parent formGroup directive.\n\n    Option 1: Use formGroupName instead of ngModelGroup (reactive strategy):\n\n    ${formGroupNameExample}\n\n    Option 2:  Use a regular form tag instead of the formGroup directive (template-driven strategy):\n\n    ${ngModelGroupExample}`);\n}\n\nconst modelGroupProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(() => NgModelGroup),\n};\n/**\n * @description\n * Creates and binds a `FormGroup` instance to a DOM element.\n *\n * This directive can only be used as a child of `NgForm` (within `<form>` tags).\n *\n * Use this directive to validate a sub-group of your form separately from the\n * rest of your form, or if some values in your domain model make more sense\n * to consume together in a nested object.\n *\n * Provide a name for the sub-group and it will become the key\n * for the sub-group in the form's full value. If you need direct access, export the directive into\n * a local template variable using `ngModelGroup` (ex: `#myGroup=\"ngModelGroup\"`).\n *\n * @usageNotes\n *\n * ### Consuming controls in a grouping\n *\n * The following example shows you how to combine controls together in a sub-group\n * of the form.\n *\n * {@example forms/ts/ngModelGroup/ng_model_group_example.ts region='Component'}\n *\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgModelGroup extends AbstractFormGroupDirective {\n    constructor(parent, validators, asyncValidators) {\n        super();\n        /**\n         * @description\n         * Tracks the name of the `NgModelGroup` bound to the directive. The name corresponds\n         * to a key in the parent `NgForm`.\n         */\n        this.name = '';\n        this._parent = parent;\n        this._setValidators(validators);\n        this._setAsyncValidators(asyncValidators);\n    }\n    /** @internal */\n    _checkParentType() {\n        if (!(this._parent instanceof NgModelGroup) &&\n            !(this._parent instanceof NgForm) &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw modelGroupParentException();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: NgModelGroup, deps: [{ token: ControlContainer, host: true, skipSelf: true }, { token: NG_VALIDATORS, optional: true, self: true }, { token: NG_ASYNC_VALIDATORS, optional: true, self: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.8\", type: NgModelGroup, selector: \"[ngModelGroup]\", inputs: { name: [\"ngModelGroup\", \"name\"] }, providers: [modelGroupProvider], exportAs: [\"ngModelGroup\"], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: NgModelGroup, decorators: [{\n            type: Directive,\n            args: [{ selector: '[ngModelGroup]', providers: [modelGroupProvider], exportAs: 'ngModelGroup' }]\n        }], ctorParameters: () => [{ type: ControlContainer, decorators: [{\n                    type: Host\n                }, {\n                    type: SkipSelf\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_VALIDATORS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_ASYNC_VALIDATORS]\n                }] }], propDecorators: { name: [{\n                type: Input,\n                args: ['ngModelGroup']\n            }] } });\n\nconst formControlBinding$1 = {\n    provide: NgControl,\n    useExisting: forwardRef(() => NgModel),\n};\n/**\n * `ngModel` forces an additional change detection run when its inputs change:\n * E.g.:\n * ```\n * <div>{{myModel.valid}}</div>\n * <input [(ngModel)]=\"myValue\" #myModel=\"ngModel\">\n * ```\n * I.e. `ngModel` can export itself on the element and then be used in the template.\n * Normally, this would result in expressions before the `input` that use the exported directive\n * to have an old value as they have been\n * dirty checked before. As this is a very common case for `ngModel`, we added this second change\n * detection run.\n *\n * Notes:\n * - this is just one extra run no matter how many `ngModel`s have been changed.\n * - this is a general problem when using `exportAs` for directives!\n */\nconst resolvedPromise = (() => Promise.resolve())();\n/**\n * @description\n * Creates a `FormControl` instance from a [domain\n * model](https://en.wikipedia.org/wiki/Domain_model) and binds it to a form control element.\n *\n * The `FormControl` instance tracks the value, user interaction, and\n * validation status of the control and keeps the view synced with the model. If used\n * within a parent form, the directive also registers itself with the form as a child\n * control.\n *\n * This directive is used by itself or as part of a larger form. Use the\n * `ngModel` selector to activate it.\n *\n * It accepts a domain model as an optional `Input`. If you have a one-way binding\n * to `ngModel` with `[]` syntax, changing the domain model's value in the component\n * class sets the value in the view. If you have a two-way binding with `[()]` syntax\n * (also known as 'banana-in-a-box syntax'), the value in the UI always syncs back to\n * the domain model in your class.\n *\n * To inspect the properties of the associated `FormControl` (like the validity state),\n * export the directive into a local template variable using `ngModel` as the key (ex:\n * `#myVar=\"ngModel\"`). You can then access the control using the directive's `control` property.\n * However, the most commonly used properties (like `valid` and `dirty`) also exist on the control\n * for direct access. See a full list of properties directly available in\n * `AbstractControlDirective`.\n *\n * @see {@link RadioControlValueAccessor}\n * @see {@link SelectControlValueAccessor}\n *\n * @usageNotes\n *\n * ### Using ngModel on a standalone control\n *\n * The following examples show a simple standalone control using `ngModel`:\n *\n * {@example forms/ts/simpleNgModel/simple_ng_model_example.ts region='Component'}\n *\n * When using the `ngModel` within `<form>` tags, you'll also need to supply a `name` attribute\n * so that the control can be registered with the parent form under that name.\n *\n * In the context of a parent form, it's often unnecessary to include one-way or two-way binding,\n * as the parent form syncs the value for you. You access its properties by exporting it into a\n * local template variable using `ngForm` such as (`#f=\"ngForm\"`). Use the variable where\n * needed on form submission.\n *\n * If you do need to populate initial values into your form, using a one-way binding for\n * `ngModel` tends to be sufficient as long as you use the exported form's value rather\n * than the domain model's value on submit.\n *\n * ### Using ngModel within a form\n *\n * The following example shows controls using `ngModel` within a form:\n *\n * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * ### Using a standalone ngModel within a group\n *\n * The following example shows you how to use a standalone ngModel control\n * within a form. This controls the display of the form, but doesn't contain form data.\n *\n * ```html\n * <form>\n *   <input name=\"login\" ngModel placeholder=\"Login\">\n *   <input type=\"checkbox\" ngModel [ngModelOptions]=\"{standalone: true}\"> Show more options?\n * </form>\n * <!-- form value: {login: ''} -->\n * ```\n *\n * ### Setting the ngModel `name` attribute through options\n *\n * The following example shows you an alternate way to set the name attribute. Here,\n * an attribute identified as name is used within a custom form control component. To still be able\n * to specify the NgModel's name, you must specify it using the `ngModelOptions` input instead.\n *\n * ```html\n * <form>\n *   <my-custom-form-control name=\"Nancy\" ngModel [ngModelOptions]=\"{name: 'user'}\">\n *   </my-custom-form-control>\n * </form>\n * <!-- form value: {user: ''} -->\n * ```\n *\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgModel extends NgControl {\n    constructor(parent, validators, asyncValidators, valueAccessors, _changeDetectorRef, callSetDisabledState) {\n        super();\n        this._changeDetectorRef = _changeDetectorRef;\n        this.callSetDisabledState = callSetDisabledState;\n        this.control = new FormControl();\n        /** @internal */\n        this._registered = false;\n        /**\n         * @description\n         * Tracks the name bound to the directive. If a parent form exists, it\n         * uses this name as a key to retrieve this control's value.\n         */\n        this.name = '';\n        /**\n         * @description\n         * Event emitter for producing the `ngModelChange` event after\n         * the view model updates.\n         */\n        this.update = new EventEmitter();\n        this._parent = parent;\n        this._setValidators(validators);\n        this._setAsyncValidators(asyncValidators);\n        this.valueAccessor = selectValueAccessor(this, valueAccessors);\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n        this._checkForErrors();\n        if (!this._registered || 'name' in changes) {\n            if (this._registered) {\n                this._checkName();\n                if (this.formDirective) {\n                    // We can't call `formDirective.removeControl(this)`, because the `name` has already been\n                    // changed. We also can't reset the name temporarily since the logic in `removeControl`\n                    // is inside a promise and it won't run immediately. We work around it by giving it an\n                    // object with the same shape instead.\n                    const oldName = changes['name'].previousValue;\n                    this.formDirective.removeControl({ name: oldName, path: this._getPath(oldName) });\n                }\n            }\n            this._setUpControl();\n        }\n        if ('isDisabled' in changes) {\n            this._updateDisabled(changes);\n        }\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            this._updateValue(this.model);\n            this.viewModel = this.model;\n        }\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n        this.formDirective && this.formDirective.removeControl(this);\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n        return this._getPath(this.name);\n    }\n    /**\n     * @description\n     * The top-level directive for this control if present, otherwise null.\n     */\n    get formDirective() {\n        return this._parent ? this._parent.formDirective : null;\n    }\n    /**\n     * @description\n     * Sets the new value for the view model and emits an `ngModelChange` event.\n     *\n     * @param newValue The new value emitted by `ngModelChange`.\n     */\n    viewToModelUpdate(newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    }\n    _setUpControl() {\n        this._setUpdateStrategy();\n        this._isStandalone() ? this._setUpStandalone() : this.formDirective.addControl(this);\n        this._registered = true;\n    }\n    _setUpdateStrategy() {\n        if (this.options && this.options.updateOn != null) {\n            this.control._updateOn = this.options.updateOn;\n        }\n    }\n    _isStandalone() {\n        return !this._parent || !!(this.options && this.options.standalone);\n    }\n    _setUpStandalone() {\n        setUpControl(this.control, this, this.callSetDisabledState);\n        this.control.updateValueAndValidity({ emitEvent: false });\n    }\n    _checkForErrors() {\n        if (!this._isStandalone()) {\n            this._checkParentType();\n        }\n        this._checkName();\n    }\n    _checkParentType() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!(this._parent instanceof NgModelGroup) &&\n                this._parent instanceof AbstractFormGroupDirective) {\n                throw formGroupNameException();\n            }\n            else if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n                throw modelParentException();\n            }\n        }\n    }\n    _checkName() {\n        if (this.options && this.options.name)\n            this.name = this.options.name;\n        if (!this._isStandalone() && !this.name && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw missingNameException();\n        }\n    }\n    _updateValue(value) {\n        resolvedPromise.then(() => {\n            this.control.setValue(value, { emitViewToModelChange: false });\n            this._changeDetectorRef?.markForCheck();\n        });\n    }\n    _updateDisabled(changes) {\n        const disabledValue = changes['isDisabled'].currentValue;\n        // checking for 0 to avoid breaking change\n        const isDisabled = disabledValue !== 0 && booleanAttribute(disabledValue);\n        resolvedPromise.then(() => {\n            if (isDisabled && !this.control.disabled) {\n                this.control.disable();\n            }\n            else if (!isDisabled && this.control.disabled) {\n                this.control.enable();\n            }\n            this._changeDetectorRef?.markForCheck();\n        });\n    }\n    _getPath(controlName) {\n        return this._parent ? controlPath(controlName, this._parent) : [controlName];\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: NgModel, deps: [{ token: ControlContainer, host: true, optional: true }, { token: NG_VALIDATORS, optional: true, self: true }, { token: NG_ASYNC_VALIDATORS, optional: true, self: true }, { token: NG_VALUE_ACCESSOR, optional: true, self: true }, { token: ChangeDetectorRef, optional: true }, { token: CALL_SET_DISABLED_STATE, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.8\", type: NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: { name: \"name\", isDisabled: [\"disabled\", \"isDisabled\"], model: [\"ngModel\", \"model\"], options: [\"ngModelOptions\", \"options\"] }, outputs: { update: \"ngModelChange\" }, providers: [formControlBinding$1], exportAs: [\"ngModel\"], usesInheritance: true, usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: NgModel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngModel]:not([formControlName]):not([formControl])',\n                    providers: [formControlBinding$1],\n                    exportAs: 'ngModel',\n                }]\n        }], ctorParameters: () => [{ type: ControlContainer, decorators: [{\n                    type: Optional\n                }, {\n                    type: Host\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_VALIDATORS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_ASYNC_VALIDATORS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_VALUE_ACCESSOR]\n                }] }, { type: i0.ChangeDetectorRef, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ChangeDetectorRef]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CALL_SET_DISABLED_STATE]\n                }] }], propDecorators: { name: [{\n                type: Input\n            }], isDisabled: [{\n                type: Input,\n                args: ['disabled']\n            }], model: [{\n                type: Input,\n                args: ['ngModel']\n            }], options: [{\n                type: Input,\n                args: ['ngModelOptions']\n            }], update: [{\n                type: Output,\n                args: ['ngModelChange']\n            }] } });\n\n/**\n * @description\n *\n * Adds `novalidate` attribute to all forms by default.\n *\n * `novalidate` is used to disable browser's native form validation.\n *\n * If you want to use native validation with Angular forms, just add `ngNativeValidate` attribute:\n *\n * ```\n * <form ngNativeValidate></form>\n * ```\n *\n * @publicApi\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n */\nclass ɵNgNoValidate {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: ɵNgNoValidate, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.8\", type: ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\", host: { attributes: { \"novalidate\": \"\" } }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: ɵNgNoValidate, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'form:not([ngNoForm]):not([ngNativeValidate])',\n                    host: { 'novalidate': '' },\n                }]\n        }] });\n\nconst NUMBER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NumberValueAccessor),\n    multi: true,\n};\n/**\n * @description\n * The `ControlValueAccessor` for writing a number value and listening to number input changes.\n * The value accessor is used by the `FormControlDirective`, `FormControlName`, and `NgModel`\n * directives.\n *\n * @usageNotes\n *\n * ### Using a number input with a reactive form.\n *\n * The following example shows how to use a number input with a reactive form.\n *\n * ```ts\n * const totalCountControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"number\" [formControl]=\"totalCountControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass NumberValueAccessor extends BuiltInControlValueAccessor {\n    /**\n     * Sets the \"value\" property on the input element.\n     * @nodoc\n     */\n    writeValue(value) {\n        // The value needs to be normalized for IE9, otherwise it is set to 'null' when null\n        const normalizedValue = value == null ? '' : value;\n        this.setProperty('value', normalizedValue);\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n        this.onChange = (value) => {\n            fn(value == '' ? null : parseFloat(value));\n        };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: NumberValueAccessor, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.8\", type: NumberValueAccessor, selector: \"input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]\", host: { listeners: { \"input\": \"onChange($event.target.value)\", \"blur\": \"onTouched()\" } }, providers: [NUMBER_VALUE_ACCESSOR], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: NumberValueAccessor, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]',\n                    host: { '(input)': 'onChange($event.target.value)', '(blur)': 'onTouched()' },\n                    providers: [NUMBER_VALUE_ACCESSOR],\n                }]\n        }] });\n\nconst RADIO_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => RadioControlValueAccessor),\n    multi: true,\n};\nfunction throwNameError() {\n    throw new ɵRuntimeError(1202 /* RuntimeErrorCode.NAME_AND_FORM_CONTROL_NAME_MUST_MATCH */, `\n      If you define both a name and a formControlName attribute on your radio button, their values\n      must match. Ex: <input type=\"radio\" formControlName=\"food\" name=\"food\">\n    `);\n}\n/**\n * @description\n * Class used by Angular to track radio buttons. For internal use only.\n */\nclass RadioControlRegistry {\n    constructor() {\n        this._accessors = [];\n    }\n    /**\n     * @description\n     * Adds a control to the internal registry. For internal use only.\n     */\n    add(control, accessor) {\n        this._accessors.push([control, accessor]);\n    }\n    /**\n     * @description\n     * Removes a control from the internal registry. For internal use only.\n     */\n    remove(accessor) {\n        for (let i = this._accessors.length - 1; i >= 0; --i) {\n            if (this._accessors[i][1] === accessor) {\n                this._accessors.splice(i, 1);\n                return;\n            }\n        }\n    }\n    /**\n     * @description\n     * Selects a radio button. For internal use only.\n     */\n    select(accessor) {\n        this._accessors.forEach((c) => {\n            if (this._isSameGroup(c, accessor) && c[1] !== accessor) {\n                c[1].fireUncheck(accessor.value);\n            }\n        });\n    }\n    _isSameGroup(controlPair, accessor) {\n        if (!controlPair[0].control)\n            return false;\n        return (controlPair[0]._parent === accessor._control._parent && controlPair[1].name === accessor.name);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: RadioControlRegistry, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: RadioControlRegistry, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: RadioControlRegistry, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/**\n * @description\n * The `ControlValueAccessor` for writing radio control values and listening to radio control\n * changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @usageNotes\n *\n * ### Using radio buttons with reactive form directives\n *\n * The follow example shows how to use radio buttons in a reactive form. When using radio buttons in\n * a reactive form, radio buttons in the same group should have the same `formControlName`.\n * Providing a `name` attribute is optional.\n *\n * {@example forms/ts/reactiveRadioButtons/reactive_radio_button_example.ts region='Reactive'}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass RadioControlValueAccessor extends BuiltInControlValueAccessor {\n    constructor(renderer, elementRef, _registry, _injector) {\n        super(renderer, elementRef);\n        this._registry = _registry;\n        this._injector = _injector;\n        this.setDisabledStateFired = false;\n        /**\n         * The registered callback function called when a change event occurs on the input element.\n         * Note: we declare `onChange` here (also used as host listener) as a function with no arguments\n         * to override the `onChange` function (which expects 1 argument) in the parent\n         * `BaseControlValueAccessor` class.\n         * @nodoc\n         */\n        this.onChange = () => { };\n        this.callSetDisabledState = inject(CALL_SET_DISABLED_STATE, { optional: true }) ?? setDisabledStateDefault;\n    }\n    /** @nodoc */\n    ngOnInit() {\n        this._control = this._injector.get(NgControl);\n        this._checkName();\n        this._registry.add(this._control, this);\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n        this._registry.remove(this);\n    }\n    /**\n     * Sets the \"checked\" property value on the radio input element.\n     * @nodoc\n     */\n    writeValue(value) {\n        this._state = value === this.value;\n        this.setProperty('checked', this._state);\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n        this._fn = fn;\n        this.onChange = () => {\n            fn(this.value);\n            this._registry.select(this);\n        };\n    }\n    /** @nodoc */\n    setDisabledState(isDisabled) {\n        /**\n         * `setDisabledState` is supposed to be called whenever the disabled state of a control changes,\n         * including upon control creation. However, a longstanding bug caused the method to not fire\n         * when an *enabled* control was attached. This bug was fixed in v15 in #47576.\n         *\n         * This had a side effect: previously, it was possible to instantiate a reactive form control\n         * with `[attr.disabled]=true`, even though the corresponding control was enabled in the\n         * model. This resulted in a mismatch between the model and the DOM. Now, because\n         * `setDisabledState` is always called, the value in the DOM will be immediately overwritten\n         * with the \"correct\" enabled value.\n         *\n         * However, the fix also created an exceptional case: radio buttons. Because Reactive Forms\n         * models the entire group of radio buttons as a single `FormControl`, there is no way to\n         * control the disabled state for individual radios, so they can no longer be configured as\n         * disabled. Thus, we keep the old behavior for radio buttons, so that `[attr.disabled]`\n         * continues to work. Specifically, we drop the first call to `setDisabledState` if `disabled`\n         * is `false`, and we are not in legacy mode.\n         */\n        if (this.setDisabledStateFired ||\n            isDisabled ||\n            this.callSetDisabledState === 'whenDisabledForLegacyCode') {\n            this.setProperty('disabled', isDisabled);\n        }\n        this.setDisabledStateFired = true;\n    }\n    /**\n     * Sets the \"value\" on the radio input element and unchecks it.\n     *\n     * @param value\n     */\n    fireUncheck(value) {\n        this.writeValue(value);\n    }\n    _checkName() {\n        if (this.name &&\n            this.formControlName &&\n            this.name !== this.formControlName &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwNameError();\n        }\n        if (!this.name && this.formControlName)\n            this.name = this.formControlName;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: RadioControlValueAccessor, deps: [{ token: i0.Renderer2 }, { token: i0.ElementRef }, { token: RadioControlRegistry }, { token: i0.Injector }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.8\", type: RadioControlValueAccessor, selector: \"input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]\", inputs: { name: \"name\", formControlName: \"formControlName\", value: \"value\" }, host: { listeners: { \"change\": \"onChange()\", \"blur\": \"onTouched()\" } }, providers: [RADIO_VALUE_ACCESSOR], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: RadioControlValueAccessor, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]',\n                    host: { '(change)': 'onChange()', '(blur)': 'onTouched()' },\n                    providers: [RADIO_VALUE_ACCESSOR],\n                }]\n        }], ctorParameters: () => [{ type: i0.Renderer2 }, { type: i0.ElementRef }, { type: RadioControlRegistry }, { type: i0.Injector }], propDecorators: { name: [{\n                type: Input\n            }], formControlName: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }] } });\n\nconst RANGE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => RangeValueAccessor),\n    multi: true,\n};\n/**\n * @description\n * The `ControlValueAccessor` for writing a range value and listening to range input changes.\n * The value accessor is used by the `FormControlDirective`, `FormControlName`, and  `NgModel`\n * directives.\n *\n * @usageNotes\n *\n * ### Using a range input with a reactive form\n *\n * The following example shows how to use a range input with a reactive form.\n *\n * ```ts\n * const ageControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"range\" [formControl]=\"ageControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass RangeValueAccessor extends BuiltInControlValueAccessor {\n    /**\n     * Sets the \"value\" property on the input element.\n     * @nodoc\n     */\n    writeValue(value) {\n        this.setProperty('value', parseFloat(value));\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n        this.onChange = (value) => {\n            fn(value == '' ? null : parseFloat(value));\n        };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: RangeValueAccessor, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.8\", type: RangeValueAccessor, selector: \"input[type=range][formControlName],input[type=range][formControl],input[type=range][ngModel]\", host: { listeners: { \"change\": \"onChange($event.target.value)\", \"input\": \"onChange($event.target.value)\", \"blur\": \"onTouched()\" } }, providers: [RANGE_VALUE_ACCESSOR], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: RangeValueAccessor, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[type=range][formControlName],input[type=range][formControl],input[type=range][ngModel]',\n                    host: {\n                        '(change)': 'onChange($event.target.value)',\n                        '(input)': 'onChange($event.target.value)',\n                        '(blur)': 'onTouched()',\n                    },\n                    providers: [RANGE_VALUE_ACCESSOR],\n                }]\n        }] });\n\n/**\n * Token to provide to turn off the ngModel warning on formControl and formControlName.\n */\nconst NG_MODEL_WITH_FORM_CONTROL_WARNING = new InjectionToken(ngDevMode ? 'NgModelWithFormControlWarning' : '');\nconst formControlBinding = {\n    provide: NgControl,\n    useExisting: forwardRef(() => FormControlDirective),\n};\n/**\n * @description\n * Synchronizes a standalone `FormControl` instance to a form control element.\n *\n * Note that support for using the `ngModel` input property and `ngModelChange` event with reactive\n * form directives was deprecated in Angular v6 and is scheduled for removal in\n * a future version of Angular.\n *\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n * @see {@link FormControl}\n * @see {@link AbstractControl}\n *\n * @usageNotes\n *\n * The following example shows how to register a standalone control and set its value.\n *\n * {@example forms/ts/simpleFormControl/simple_form_control_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormControlDirective extends NgControl {\n    /**\n     * @description\n     * Triggers a warning in dev mode that this input should not be used with reactive forms.\n     */\n    set isDisabled(isDisabled) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            console.warn(disabledAttrWarning);\n        }\n    }\n    /**\n     * @description\n     * Static property used to track whether any ngModel warnings have been sent across\n     * all instances of FormControlDirective. Used to support warning config of \"once\".\n     *\n     * @internal\n     */\n    static { this._ngModelWarningSentOnce = false; }\n    constructor(validators, asyncValidators, valueAccessors, _ngModelWarningConfig, callSetDisabledState) {\n        super();\n        this._ngModelWarningConfig = _ngModelWarningConfig;\n        this.callSetDisabledState = callSetDisabledState;\n        /** @deprecated as of v6 */\n        this.update = new EventEmitter();\n        /**\n         * @description\n         * Instance property used to track whether an ngModel warning has been sent out for this\n         * particular `FormControlDirective` instance. Used to support warning config of \"always\".\n         *\n         * @internal\n         */\n        this._ngModelWarningSent = false;\n        this._setValidators(validators);\n        this._setAsyncValidators(asyncValidators);\n        this.valueAccessor = selectValueAccessor(this, valueAccessors);\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n        if (this._isControlChanged(changes)) {\n            const previousForm = changes['form'].previousValue;\n            if (previousForm) {\n                cleanUpControl(previousForm, this, /* validateControlPresenceOnChange */ false);\n            }\n            setUpControl(this.form, this, this.callSetDisabledState);\n            this.form.updateValueAndValidity({ emitEvent: false });\n        }\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                _ngModelWarning('formControl', FormControlDirective, this, this._ngModelWarningConfig);\n            }\n            this.form.setValue(this.model);\n            this.viewModel = this.model;\n        }\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n        if (this.form) {\n            cleanUpControl(this.form, this, /* validateControlPresenceOnChange */ false);\n        }\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n        return [];\n    }\n    /**\n     * @description\n     * The `FormControl` bound to this directive.\n     */\n    get control() {\n        return this.form;\n    }\n    /**\n     * @description\n     * Sets the new value for the view model and emits an `ngModelChange` event.\n     *\n     * @param newValue The new value for the view model.\n     */\n    viewToModelUpdate(newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    }\n    _isControlChanged(changes) {\n        return changes.hasOwnProperty('form');\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: FormControlDirective, deps: [{ token: NG_VALIDATORS, optional: true, self: true }, { token: NG_ASYNC_VALIDATORS, optional: true, self: true }, { token: NG_VALUE_ACCESSOR, optional: true, self: true }, { token: NG_MODEL_WITH_FORM_CONTROL_WARNING, optional: true }, { token: CALL_SET_DISABLED_STATE, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.8\", type: FormControlDirective, selector: \"[formControl]\", inputs: { form: [\"formControl\", \"form\"], isDisabled: [\"disabled\", \"isDisabled\"], model: [\"ngModel\", \"model\"] }, outputs: { update: \"ngModelChange\" }, providers: [formControlBinding], exportAs: [\"ngForm\"], usesInheritance: true, usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: FormControlDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: '[formControl]', providers: [formControlBinding], exportAs: 'ngForm' }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_VALIDATORS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_ASYNC_VALIDATORS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_VALUE_ACCESSOR]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [NG_MODEL_WITH_FORM_CONTROL_WARNING]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CALL_SET_DISABLED_STATE]\n                }] }], propDecorators: { form: [{\n                type: Input,\n                args: ['formControl']\n            }], isDisabled: [{\n                type: Input,\n                args: ['disabled']\n            }], model: [{\n                type: Input,\n                args: ['ngModel']\n            }], update: [{\n                type: Output,\n                args: ['ngModelChange']\n            }] } });\n\nconst formDirectiveProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(() => FormGroupDirective),\n};\n/**\n * @description\n *\n * Binds an existing `FormGroup` or `FormRecord` to a DOM element.\n *\n * This directive accepts an existing `FormGroup` instance. It will then use this\n * `FormGroup` instance to match any child `FormControl`, `FormGroup`/`FormRecord`,\n * and `FormArray` instances to child `FormControlName`, `FormGroupName`,\n * and `FormArrayName` directives.\n *\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n * @see {@link AbstractControl}\n *\n * @usageNotes\n * ### Register Form Group\n *\n * The following example registers a `FormGroup` with first name and last name controls,\n * and listens for the *ngSubmit* event when the button is clicked.\n *\n * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormGroupDirective extends ControlContainer {\n    /**\n     * @description\n     * Reports whether the form submission has been triggered.\n     */\n    get submitted() {\n        return untracked(this._submittedReactive);\n    }\n    // TODO(atscott): Remove once invalid API usage is cleaned up internally\n    set submitted(value) {\n        this._submittedReactive.set(value);\n    }\n    constructor(validators, asyncValidators, callSetDisabledState) {\n        super();\n        this.callSetDisabledState = callSetDisabledState;\n        /** @internal */\n        this._submitted = computed(() => this._submittedReactive());\n        this._submittedReactive = signal(false);\n        /**\n         * Callback that should be invoked when controls in FormGroup or FormArray collection change\n         * (added or removed). This callback triggers corresponding DOM updates.\n         */\n        this._onCollectionChange = () => this._updateDomValue();\n        /**\n         * @description\n         * Tracks the list of added `FormControlName` instances\n         */\n        this.directives = [];\n        /**\n         * @description\n         * Tracks the `FormGroup` bound to this directive.\n         */\n        this.form = null;\n        /**\n         * @description\n         * Emits an event when the form submission has been triggered.\n         */\n        this.ngSubmit = new EventEmitter();\n        this._setValidators(validators);\n        this._setAsyncValidators(asyncValidators);\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n        this._checkFormPresent();\n        if (changes.hasOwnProperty('form')) {\n            this._updateValidators();\n            this._updateDomValue();\n            this._updateRegistrations();\n            this._oldForm = this.form;\n        }\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n        if (this.form) {\n            cleanUpValidators(this.form, this);\n            // Currently the `onCollectionChange` callback is rewritten each time the\n            // `_registerOnCollectionChange` function is invoked. The implication is that cleanup should\n            // happen *only* when the `onCollectionChange` callback was set by this directive instance.\n            // Otherwise it might cause overriding a callback of some other directive instances. We should\n            // consider updating this logic later to make it similar to how `onChange` callbacks are\n            // handled, see https://github.com/angular/angular/issues/39732 for additional info.\n            if (this.form._onCollectionChange === this._onCollectionChange) {\n                this.form._registerOnCollectionChange(() => { });\n            }\n        }\n    }\n    /**\n     * @description\n     * Returns this directive's instance.\n     */\n    get formDirective() {\n        return this;\n    }\n    /**\n     * @description\n     * Returns the `FormGroup` bound to this directive.\n     */\n    get control() {\n        return this.form;\n    }\n    /**\n     * @description\n     * Returns an array representing the path to this group. Because this directive\n     * always lives at the top level of a form, it always an empty array.\n     */\n    get path() {\n        return [];\n    }\n    /**\n     * @description\n     * Method that sets up the control directive in this group, re-calculates its value\n     * and validity, and adds the instance to the internal list of directives.\n     *\n     * @param dir The `FormControlName` directive instance.\n     */\n    addControl(dir) {\n        const ctrl = this.form.get(dir.path);\n        setUpControl(ctrl, dir, this.callSetDisabledState);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n        this.directives.push(dir);\n        return ctrl;\n    }\n    /**\n     * @description\n     * Retrieves the `FormControl` instance from the provided `FormControlName` directive\n     *\n     * @param dir The `FormControlName` directive instance.\n     */\n    getControl(dir) {\n        return this.form.get(dir.path);\n    }\n    /**\n     * @description\n     * Removes the `FormControlName` instance from the internal list of directives\n     *\n     * @param dir The `FormControlName` directive instance.\n     */\n    removeControl(dir) {\n        cleanUpControl(dir.control || null, dir, /* validateControlPresenceOnChange */ false);\n        removeListItem$1(this.directives, dir);\n    }\n    /**\n     * Adds a new `FormGroupName` directive instance to the form.\n     *\n     * @param dir The `FormGroupName` directive instance.\n     */\n    addFormGroup(dir) {\n        this._setUpFormContainer(dir);\n    }\n    /**\n     * Performs the necessary cleanup when a `FormGroupName` directive instance is removed from the\n     * view.\n     *\n     * @param dir The `FormGroupName` directive instance.\n     */\n    removeFormGroup(dir) {\n        this._cleanUpFormContainer(dir);\n    }\n    /**\n     * @description\n     * Retrieves the `FormGroup` for a provided `FormGroupName` directive instance\n     *\n     * @param dir The `FormGroupName` directive instance.\n     */\n    getFormGroup(dir) {\n        return this.form.get(dir.path);\n    }\n    /**\n     * Performs the necessary setup when a `FormArrayName` directive instance is added to the view.\n     *\n     * @param dir The `FormArrayName` directive instance.\n     */\n    addFormArray(dir) {\n        this._setUpFormContainer(dir);\n    }\n    /**\n     * Performs the necessary cleanup when a `FormArrayName` directive instance is removed from the\n     * view.\n     *\n     * @param dir The `FormArrayName` directive instance.\n     */\n    removeFormArray(dir) {\n        this._cleanUpFormContainer(dir);\n    }\n    /**\n     * @description\n     * Retrieves the `FormArray` for a provided `FormArrayName` directive instance.\n     *\n     * @param dir The `FormArrayName` directive instance.\n     */\n    getFormArray(dir) {\n        return this.form.get(dir.path);\n    }\n    /**\n     * Sets the new value for the provided `FormControlName` directive.\n     *\n     * @param dir The `FormControlName` directive instance.\n     * @param value The new value for the directive's control.\n     */\n    updateModel(dir, value) {\n        const ctrl = this.form.get(dir.path);\n        ctrl.setValue(value);\n    }\n    /**\n     * @description\n     * Method called with the \"submit\" event is triggered on the form.\n     * Triggers the `ngSubmit` emitter to emit the \"submit\" event as its payload.\n     *\n     * @param $event The \"submit\" event object\n     */\n    onSubmit($event) {\n        this._submittedReactive.set(true);\n        syncPendingControls(this.form, this.directives);\n        this.ngSubmit.emit($event);\n        this.form._events.next(new FormSubmittedEvent(this.control));\n        // Forms with `method=\"dialog\"` have some special behavior that won't reload the page and that\n        // shouldn't be prevented. Note that we need to null check the `event` and the `target`, because\n        // some internal apps call this method directly with the wrong arguments.\n        return $event?.target?.method === 'dialog';\n    }\n    /**\n     * @description\n     * Method called when the \"reset\" event is triggered on the form.\n     */\n    onReset() {\n        this.resetForm();\n    }\n    /**\n     * @description\n     * Resets the form to an initial value and resets its submitted status.\n     *\n     * @param value The new value for the form.\n     */\n    resetForm(value = undefined) {\n        this.form.reset(value);\n        this._submittedReactive.set(false);\n        this.form._events.next(new FormResetEvent(this.form));\n    }\n    /** @internal */\n    _updateDomValue() {\n        this.directives.forEach((dir) => {\n            const oldCtrl = dir.control;\n            const newCtrl = this.form.get(dir.path);\n            if (oldCtrl !== newCtrl) {\n                // Note: the value of the `dir.control` may not be defined, for example when it's a first\n                // `FormControl` that is added to a `FormGroup` instance (via `addControl` call).\n                cleanUpControl(oldCtrl || null, dir);\n                // Check whether new control at the same location inside the corresponding `FormGroup` is an\n                // instance of `FormControl` and perform control setup only if that's the case.\n                // Note: we don't need to clear the list of directives (`this.directives`) here, it would be\n                // taken care of in the `removeControl` method invoked when corresponding `formControlName`\n                // directive instance is being removed (invoked from `FormControlName.ngOnDestroy`).\n                if (isFormControl(newCtrl)) {\n                    setUpControl(newCtrl, dir, this.callSetDisabledState);\n                    dir.control = newCtrl;\n                }\n            }\n        });\n        this.form._updateTreeValidity({ emitEvent: false });\n    }\n    _setUpFormContainer(dir) {\n        const ctrl = this.form.get(dir.path);\n        setUpFormContainer(ctrl, dir);\n        // NOTE: this operation looks unnecessary in case no new validators were added in\n        // `setUpFormContainer` call. Consider updating this code to match the logic in\n        // `_cleanUpFormContainer` function.\n        ctrl.updateValueAndValidity({ emitEvent: false });\n    }\n    _cleanUpFormContainer(dir) {\n        if (this.form) {\n            const ctrl = this.form.get(dir.path);\n            if (ctrl) {\n                const isControlUpdated = cleanUpFormContainer(ctrl, dir);\n                if (isControlUpdated) {\n                    // Run validity check only in case a control was updated (i.e. view validators were\n                    // removed) as removing view validators might cause validity to change.\n                    ctrl.updateValueAndValidity({ emitEvent: false });\n                }\n            }\n        }\n    }\n    _updateRegistrations() {\n        this.form._registerOnCollectionChange(this._onCollectionChange);\n        if (this._oldForm) {\n            this._oldForm._registerOnCollectionChange(() => { });\n        }\n    }\n    _updateValidators() {\n        setUpValidators(this.form, this);\n        if (this._oldForm) {\n            cleanUpValidators(this._oldForm, this);\n        }\n    }\n    _checkFormPresent() {\n        if (!this.form && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw missingFormException();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: FormGroupDirective, deps: [{ token: NG_VALIDATORS, optional: true, self: true }, { token: NG_ASYNC_VALIDATORS, optional: true, self: true }, { token: CALL_SET_DISABLED_STATE, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.8\", type: FormGroupDirective, selector: \"[formGroup]\", inputs: { form: [\"formGroup\", \"form\"] }, outputs: { ngSubmit: \"ngSubmit\" }, host: { listeners: { \"submit\": \"onSubmit($event)\", \"reset\": \"onReset()\" } }, providers: [formDirectiveProvider], exportAs: [\"ngForm\"], usesInheritance: true, usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: FormGroupDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[formGroup]',\n                    providers: [formDirectiveProvider],\n                    host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n                    exportAs: 'ngForm',\n                }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_VALIDATORS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_ASYNC_VALIDATORS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CALL_SET_DISABLED_STATE]\n                }] }], propDecorators: { form: [{\n                type: Input,\n                args: ['formGroup']\n            }], ngSubmit: [{\n                type: Output\n            }] } });\n\nconst formGroupNameProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(() => FormGroupName),\n};\n/**\n * @description\n *\n * Syncs a nested `FormGroup` or `FormRecord` to a DOM element.\n *\n * This directive can only be used with a parent `FormGroupDirective`.\n *\n * It accepts the string name of the nested `FormGroup` or `FormRecord` to link, and\n * looks for a `FormGroup` or `FormRecord` registered with that name in the parent\n * `FormGroup` instance you passed into `FormGroupDirective`.\n *\n * Use nested form groups to validate a sub-group of a\n * form separately from the rest or to group the values of certain\n * controls into their own nested object.\n *\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n *\n * @usageNotes\n *\n * ### Access the group by name\n *\n * The following example uses the `AbstractControl.get` method to access the\n * associated `FormGroup`\n *\n * ```ts\n *   this.form.get('name');\n * ```\n *\n * ### Access individual controls in the group\n *\n * The following example uses the `AbstractControl.get` method to access\n * individual controls within the group using dot syntax.\n *\n * ```ts\n *   this.form.get('name.first');\n * ```\n *\n * ### Register a nested `FormGroup`.\n *\n * The following example registers a nested *name* `FormGroup` within an existing `FormGroup`,\n * and provides methods to retrieve the nested `FormGroup` and individual controls.\n *\n * {@example forms/ts/nestedFormGroup/nested_form_group_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormGroupName extends AbstractFormGroupDirective {\n    constructor(parent, validators, asyncValidators) {\n        super();\n        /**\n         * @description\n         * Tracks the name of the `FormGroup` bound to the directive. The name corresponds\n         * to a key in the parent `FormGroup` or `FormArray`.\n         * Accepts a name as a string or a number.\n         * The name in the form of a string is useful for individual forms,\n         * while the numerical form allows for form groups to be bound\n         * to indices when iterating over groups in a `FormArray`.\n         */\n        this.name = null;\n        this._parent = parent;\n        this._setValidators(validators);\n        this._setAsyncValidators(asyncValidators);\n    }\n    /** @internal */\n    _checkParentType() {\n        if (_hasInvalidParent(this._parent) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw groupParentException();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: FormGroupName, deps: [{ token: ControlContainer, host: true, optional: true, skipSelf: true }, { token: NG_VALIDATORS, optional: true, self: true }, { token: NG_ASYNC_VALIDATORS, optional: true, self: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.8\", type: FormGroupName, selector: \"[formGroupName]\", inputs: { name: [\"formGroupName\", \"name\"] }, providers: [formGroupNameProvider], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: FormGroupName, decorators: [{\n            type: Directive,\n            args: [{ selector: '[formGroupName]', providers: [formGroupNameProvider] }]\n        }], ctorParameters: () => [{ type: ControlContainer, decorators: [{\n                    type: Optional\n                }, {\n                    type: Host\n                }, {\n                    type: SkipSelf\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_VALIDATORS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_ASYNC_VALIDATORS]\n                }] }], propDecorators: { name: [{\n                type: Input,\n                args: ['formGroupName']\n            }] } });\nconst formArrayNameProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(() => FormArrayName),\n};\n/**\n * @description\n *\n * Syncs a nested `FormArray` to a DOM element.\n *\n * This directive is designed to be used with a parent `FormGroupDirective` (selector:\n * `[formGroup]`).\n *\n * It accepts the string name of the nested `FormArray` you want to link, and\n * will look for a `FormArray` registered with that name in the parent\n * `FormGroup` instance you passed into `FormGroupDirective`.\n *\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n * @see {@link AbstractControl}\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example forms/ts/nestedFormArray/nested_form_array_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormArrayName extends ControlContainer {\n    constructor(parent, validators, asyncValidators) {\n        super();\n        /**\n         * @description\n         * Tracks the name of the `FormArray` bound to the directive. The name corresponds\n         * to a key in the parent `FormGroup` or `FormArray`.\n         * Accepts a name as a string or a number.\n         * The name in the form of a string is useful for individual forms,\n         * while the numerical form allows for form arrays to be bound\n         * to indices when iterating over arrays in a `FormArray`.\n         */\n        this.name = null;\n        this._parent = parent;\n        this._setValidators(validators);\n        this._setAsyncValidators(asyncValidators);\n    }\n    /**\n     * A lifecycle method called when the directive's inputs are initialized. For internal use only.\n     * @throws If the directive does not have a valid parent.\n     * @nodoc\n     */\n    ngOnInit() {\n        this._checkParentType();\n        this.formDirective.addFormArray(this);\n    }\n    /**\n     * A lifecycle method called before the directive's instance is destroyed. For internal use only.\n     * @nodoc\n     */\n    ngOnDestroy() {\n        if (this.formDirective) {\n            this.formDirective.removeFormArray(this);\n        }\n    }\n    /**\n     * @description\n     * The `FormArray` bound to this directive.\n     */\n    get control() {\n        return this.formDirective.getFormArray(this);\n    }\n    /**\n     * @description\n     * The top-level directive for this group if present, otherwise null.\n     */\n    get formDirective() {\n        return this._parent ? this._parent.formDirective : null;\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n        return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n    }\n    _checkParentType() {\n        if (_hasInvalidParent(this._parent) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw arrayParentException();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: FormArrayName, deps: [{ token: ControlContainer, host: true, optional: true, skipSelf: true }, { token: NG_VALIDATORS, optional: true, self: true }, { token: NG_ASYNC_VALIDATORS, optional: true, self: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.8\", type: FormArrayName, selector: \"[formArrayName]\", inputs: { name: [\"formArrayName\", \"name\"] }, providers: [formArrayNameProvider], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: FormArrayName, decorators: [{\n            type: Directive,\n            args: [{ selector: '[formArrayName]', providers: [formArrayNameProvider] }]\n        }], ctorParameters: () => [{ type: ControlContainer, decorators: [{\n                    type: Optional\n                }, {\n                    type: Host\n                }, {\n                    type: SkipSelf\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_VALIDATORS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_ASYNC_VALIDATORS]\n                }] }], propDecorators: { name: [{\n                type: Input,\n                args: ['formArrayName']\n            }] } });\nfunction _hasInvalidParent(parent) {\n    return (!(parent instanceof FormGroupName) &&\n        !(parent instanceof FormGroupDirective) &&\n        !(parent instanceof FormArrayName));\n}\n\nconst controlNameBinding = {\n    provide: NgControl,\n    useExisting: forwardRef(() => FormControlName),\n};\n/**\n * @description\n * Syncs a `FormControl` in an existing `FormGroup` to a form control\n * element by name.\n *\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n * @see {@link FormControl}\n * @see {@link AbstractControl}\n *\n * @usageNotes\n *\n * ### Register `FormControl` within a group\n *\n * The following example shows how to register multiple form controls within a form group\n * and set their value.\n *\n * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * To see `formControlName` examples with different form control types, see:\n *\n * * Radio buttons: `RadioControlValueAccessor`\n * * Selects: `SelectControlValueAccessor`\n *\n * ### Use with ngModel is deprecated\n *\n * Support for using the `ngModel` input property and `ngModelChange` event with reactive\n * form directives has been deprecated in Angular v6 and is scheduled for removal in\n * a future version of Angular.\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormControlName extends NgControl {\n    /**\n     * @description\n     * Triggers a warning in dev mode that this input should not be used with reactive forms.\n     */\n    set isDisabled(isDisabled) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            console.warn(disabledAttrWarning);\n        }\n    }\n    /**\n     * @description\n     * Static property used to track whether any ngModel warnings have been sent across\n     * all instances of FormControlName. Used to support warning config of \"once\".\n     *\n     * @internal\n     */\n    static { this._ngModelWarningSentOnce = false; }\n    constructor(parent, validators, asyncValidators, valueAccessors, _ngModelWarningConfig) {\n        super();\n        this._ngModelWarningConfig = _ngModelWarningConfig;\n        this._added = false;\n        /**\n         * @description\n         * Tracks the name of the `FormControl` bound to the directive. The name corresponds\n         * to a key in the parent `FormGroup` or `FormArray`.\n         * Accepts a name as a string or a number.\n         * The name in the form of a string is useful for individual forms,\n         * while the numerical form allows for form controls to be bound\n         * to indices when iterating over controls in a `FormArray`.\n         */\n        this.name = null;\n        /** @deprecated as of v6 */\n        this.update = new EventEmitter();\n        /**\n         * @description\n         * Instance property used to track whether an ngModel warning has been sent out for this\n         * particular FormControlName instance. Used to support warning config of \"always\".\n         *\n         * @internal\n         */\n        this._ngModelWarningSent = false;\n        this._parent = parent;\n        this._setValidators(validators);\n        this._setAsyncValidators(asyncValidators);\n        this.valueAccessor = selectValueAccessor(this, valueAccessors);\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n        if (!this._added)\n            this._setUpControl();\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                _ngModelWarning('formControlName', FormControlName, this, this._ngModelWarningConfig);\n            }\n            this.viewModel = this.model;\n            this.formDirective.updateModel(this, this.model);\n        }\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n        if (this.formDirective) {\n            this.formDirective.removeControl(this);\n        }\n    }\n    /**\n     * @description\n     * Sets the new value for the view model and emits an `ngModelChange` event.\n     *\n     * @param newValue The new value for the view model.\n     */\n    viewToModelUpdate(newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n        return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n    }\n    /**\n     * @description\n     * The top-level directive for this group if present, otherwise null.\n     */\n    get formDirective() {\n        return this._parent ? this._parent.formDirective : null;\n    }\n    _checkParentType() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!(this._parent instanceof FormGroupName) &&\n                this._parent instanceof AbstractFormGroupDirective) {\n                throw ngModelGroupException();\n            }\n            else if (!(this._parent instanceof FormGroupName) &&\n                !(this._parent instanceof FormGroupDirective) &&\n                !(this._parent instanceof FormArrayName)) {\n                throw controlParentException(this.name);\n            }\n        }\n    }\n    _setUpControl() {\n        this._checkParentType();\n        this.control = this.formDirective.addControl(this);\n        this._added = true;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: FormControlName, deps: [{ token: ControlContainer, host: true, optional: true, skipSelf: true }, { token: NG_VALIDATORS, optional: true, self: true }, { token: NG_ASYNC_VALIDATORS, optional: true, self: true }, { token: NG_VALUE_ACCESSOR, optional: true, self: true }, { token: NG_MODEL_WITH_FORM_CONTROL_WARNING, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.8\", type: FormControlName, selector: \"[formControlName]\", inputs: { name: [\"formControlName\", \"name\"], isDisabled: [\"disabled\", \"isDisabled\"], model: [\"ngModel\", \"model\"] }, outputs: { update: \"ngModelChange\" }, providers: [controlNameBinding], usesInheritance: true, usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: FormControlName, decorators: [{\n            type: Directive,\n            args: [{ selector: '[formControlName]', providers: [controlNameBinding] }]\n        }], ctorParameters: () => [{ type: ControlContainer, decorators: [{\n                    type: Optional\n                }, {\n                    type: Host\n                }, {\n                    type: SkipSelf\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_VALIDATORS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_ASYNC_VALIDATORS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_VALUE_ACCESSOR]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [NG_MODEL_WITH_FORM_CONTROL_WARNING]\n                }] }], propDecorators: { name: [{\n                type: Input,\n                args: ['formControlName']\n            }], isDisabled: [{\n                type: Input,\n                args: ['disabled']\n            }], model: [{\n                type: Input,\n                args: ['ngModel']\n            }], update: [{\n                type: Output,\n                args: ['ngModelChange']\n            }] } });\n\nconst SELECT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SelectControlValueAccessor),\n    multi: true,\n};\nfunction _buildValueString$1(id, value) {\n    if (id == null)\n        return `${value}`;\n    if (value && typeof value === 'object')\n        value = 'Object';\n    return `${id}: ${value}`.slice(0, 50);\n}\nfunction _extractId$1(valueString) {\n    return valueString.split(':')[0];\n}\n/**\n * @description\n * The `ControlValueAccessor` for writing select control values and listening to select control\n * changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @usageNotes\n *\n * ### Using select controls in a reactive form\n *\n * The following examples show how to use a select control in a reactive form.\n *\n * {@example forms/ts/reactiveSelectControl/reactive_select_control_example.ts region='Component'}\n *\n * ### Using select controls in a template-driven form\n *\n * To use a select in a template-driven form, simply add an `ngModel` and a `name`\n * attribute to the main `<select>` tag.\n *\n * {@example forms/ts/selectControl/select_control_example.ts region='Component'}\n *\n * ### Customizing option selection\n *\n * Angular uses object identity to select option. It's possible for the identities of items\n * to change while the data does not. This can happen, for example, if the items are produced\n * from an RPC to the server, and that RPC is re-run. Even if the data hasn't changed, the\n * second response will produce objects with different identities.\n *\n * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.\n * `compareWith` takes a **function** which has two arguments: `option1` and `option2`.\n * If `compareWith` is given, Angular selects option by the return value of the function.\n *\n * ```ts\n * const selectedCountriesControl = new FormControl();\n * ```\n *\n * ```\n * <select [compareWith]=\"compareFn\"  [formControl]=\"selectedCountriesControl\">\n *     <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *         {{country.name}}\n *     </option>\n * </select>\n *\n * compareFn(c1: Country, c2: Country): boolean {\n *     return c1 && c2 ? c1.id === c2.id : c1 === c2;\n * }\n * ```\n *\n * **Note:** We listen to the 'change' event because 'input' events aren't fired\n * for selects in IE, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event#browser_compatibility\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass SelectControlValueAccessor extends BuiltInControlValueAccessor {\n    constructor() {\n        super(...arguments);\n        /** @internal */\n        this._optionMap = new Map();\n        /** @internal */\n        this._idCounter = 0;\n        this._compareWith = Object.is;\n    }\n    /**\n     * @description\n     * Tracks the option comparison algorithm for tracking identities when\n     * checking for changes.\n     */\n    set compareWith(fn) {\n        if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw new ɵRuntimeError(1201 /* RuntimeErrorCode.COMPAREWITH_NOT_A_FN */, `compareWith must be a function, but received ${JSON.stringify(fn)}`);\n        }\n        this._compareWith = fn;\n    }\n    /**\n     * Sets the \"value\" property on the select element.\n     * @nodoc\n     */\n    writeValue(value) {\n        this.value = value;\n        const id = this._getOptionId(value);\n        const valueString = _buildValueString$1(id, value);\n        this.setProperty('value', valueString);\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n        this.onChange = (valueString) => {\n            this.value = this._getOptionValue(valueString);\n            fn(this.value);\n        };\n    }\n    /** @internal */\n    _registerOption() {\n        return (this._idCounter++).toString();\n    }\n    /** @internal */\n    _getOptionId(value) {\n        for (const id of this._optionMap.keys()) {\n            if (this._compareWith(this._optionMap.get(id), value))\n                return id;\n        }\n        return null;\n    }\n    /** @internal */\n    _getOptionValue(valueString) {\n        const id = _extractId$1(valueString);\n        return this._optionMap.has(id) ? this._optionMap.get(id) : valueString;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: SelectControlValueAccessor, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.8\", type: SelectControlValueAccessor, selector: \"select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]\", inputs: { compareWith: \"compareWith\" }, host: { listeners: { \"change\": \"onChange($event.target.value)\", \"blur\": \"onTouched()\" } }, providers: [SELECT_VALUE_ACCESSOR], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: SelectControlValueAccessor, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]',\n                    host: { '(change)': 'onChange($event.target.value)', '(blur)': 'onTouched()' },\n                    providers: [SELECT_VALUE_ACCESSOR],\n                }]\n        }], propDecorators: { compareWith: [{\n                type: Input\n            }] } });\n/**\n * @description\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * @see {@link SelectControlValueAccessor}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgSelectOption {\n    constructor(_element, _renderer, _select) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this._select = _select;\n        if (this._select)\n            this.id = this._select._registerOption();\n    }\n    /**\n     * @description\n     * Tracks the value bound to the option element. Unlike the value binding,\n     * ngValue supports binding to objects.\n     */\n    set ngValue(value) {\n        if (this._select == null)\n            return;\n        this._select._optionMap.set(this.id, value);\n        this._setElementValue(_buildValueString$1(this.id, value));\n        this._select.writeValue(this._select.value);\n    }\n    /**\n     * @description\n     * Tracks simple string values bound to the option element.\n     * For objects, use the `ngValue` input binding.\n     */\n    set value(value) {\n        this._setElementValue(value);\n        if (this._select)\n            this._select.writeValue(this._select.value);\n    }\n    /** @internal */\n    _setElementValue(value) {\n        this._renderer.setProperty(this._element.nativeElement, 'value', value);\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n        if (this._select) {\n            this._select._optionMap.delete(this.id);\n            this._select.writeValue(this._select.value);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: NgSelectOption, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: SelectControlValueAccessor, host: true, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.8\", type: NgSelectOption, selector: \"option\", inputs: { ngValue: \"ngValue\", value: \"value\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: NgSelectOption, decorators: [{\n            type: Directive,\n            args: [{ selector: 'option' }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: SelectControlValueAccessor, decorators: [{\n                    type: Optional\n                }, {\n                    type: Host\n                }] }], propDecorators: { ngValue: [{\n                type: Input,\n                args: ['ngValue']\n            }], value: [{\n                type: Input,\n                args: ['value']\n            }] } });\n\nconst SELECT_MULTIPLE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SelectMultipleControlValueAccessor),\n    multi: true,\n};\nfunction _buildValueString(id, value) {\n    if (id == null)\n        return `${value}`;\n    if (typeof value === 'string')\n        value = `'${value}'`;\n    if (value && typeof value === 'object')\n        value = 'Object';\n    return `${id}: ${value}`.slice(0, 50);\n}\nfunction _extractId(valueString) {\n    return valueString.split(':')[0];\n}\n/** Mock interface for HTMLCollection */\nclass HTMLCollection {\n}\n/**\n * @description\n * The `ControlValueAccessor` for writing multi-select control values and listening to multi-select\n * control changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @see {@link SelectControlValueAccessor}\n *\n * @usageNotes\n *\n * ### Using a multi-select control\n *\n * The follow example shows you how to use a multi-select control with a reactive form.\n *\n * ```ts\n * const countryControl = new FormControl();\n * ```\n *\n * ```\n * <select multiple name=\"countries\" [formControl]=\"countryControl\">\n *   <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *     {{ country.name }}\n *   </option>\n * </select>\n * ```\n *\n * ### Customizing option selection\n *\n * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.\n * See the `SelectControlValueAccessor` for usage.\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass SelectMultipleControlValueAccessor extends BuiltInControlValueAccessor {\n    constructor() {\n        super(...arguments);\n        /** @internal */\n        this._optionMap = new Map();\n        /** @internal */\n        this._idCounter = 0;\n        this._compareWith = Object.is;\n    }\n    /**\n     * @description\n     * Tracks the option comparison algorithm for tracking identities when\n     * checking for changes.\n     */\n    set compareWith(fn) {\n        if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw new ɵRuntimeError(1201 /* RuntimeErrorCode.COMPAREWITH_NOT_A_FN */, `compareWith must be a function, but received ${JSON.stringify(fn)}`);\n        }\n        this._compareWith = fn;\n    }\n    /**\n     * Sets the \"value\" property on one or of more of the select's options.\n     * @nodoc\n     */\n    writeValue(value) {\n        this.value = value;\n        let optionSelectedStateSetter;\n        if (Array.isArray(value)) {\n            // convert values to ids\n            const ids = value.map((v) => this._getOptionId(v));\n            optionSelectedStateSetter = (opt, o) => {\n                opt._setSelected(ids.indexOf(o.toString()) > -1);\n            };\n        }\n        else {\n            optionSelectedStateSetter = (opt, o) => {\n                opt._setSelected(false);\n            };\n        }\n        this._optionMap.forEach(optionSelectedStateSetter);\n    }\n    /**\n     * Registers a function called when the control value changes\n     * and writes an array of the selected options.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n        this.onChange = (element) => {\n            const selected = [];\n            const selectedOptions = element.selectedOptions;\n            if (selectedOptions !== undefined) {\n                const options = selectedOptions;\n                for (let i = 0; i < options.length; i++) {\n                    const opt = options[i];\n                    const val = this._getOptionValue(opt.value);\n                    selected.push(val);\n                }\n            }\n            // Degrade to use `options` when `selectedOptions` property is not available.\n            // Note: the `selectedOptions` is available in all supported browsers, but the Domino lib\n            // doesn't have it currently, see https://github.com/fgnass/domino/issues/177.\n            else {\n                const options = element.options;\n                for (let i = 0; i < options.length; i++) {\n                    const opt = options[i];\n                    if (opt.selected) {\n                        const val = this._getOptionValue(opt.value);\n                        selected.push(val);\n                    }\n                }\n            }\n            this.value = selected;\n            fn(selected);\n        };\n    }\n    /** @internal */\n    _registerOption(value) {\n        const id = (this._idCounter++).toString();\n        this._optionMap.set(id, value);\n        return id;\n    }\n    /** @internal */\n    _getOptionId(value) {\n        for (const id of this._optionMap.keys()) {\n            if (this._compareWith(this._optionMap.get(id)._value, value))\n                return id;\n        }\n        return null;\n    }\n    /** @internal */\n    _getOptionValue(valueString) {\n        const id = _extractId(valueString);\n        return this._optionMap.has(id) ? this._optionMap.get(id)._value : valueString;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: SelectMultipleControlValueAccessor, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.8\", type: SelectMultipleControlValueAccessor, selector: \"select[multiple][formControlName],select[multiple][formControl],select[multiple][ngModel]\", inputs: { compareWith: \"compareWith\" }, host: { listeners: { \"change\": \"onChange($event.target)\", \"blur\": \"onTouched()\" } }, providers: [SELECT_MULTIPLE_VALUE_ACCESSOR], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: SelectMultipleControlValueAccessor, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'select[multiple][formControlName],select[multiple][formControl],select[multiple][ngModel]',\n                    host: { '(change)': 'onChange($event.target)', '(blur)': 'onTouched()' },\n                    providers: [SELECT_MULTIPLE_VALUE_ACCESSOR],\n                }]\n        }], propDecorators: { compareWith: [{\n                type: Input\n            }] } });\n/**\n * @description\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * @see {@link SelectMultipleControlValueAccessor}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass ɵNgSelectMultipleOption {\n    constructor(_element, _renderer, _select) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this._select = _select;\n        if (this._select) {\n            this.id = this._select._registerOption(this);\n        }\n    }\n    /**\n     * @description\n     * Tracks the value bound to the option element. Unlike the value binding,\n     * ngValue supports binding to objects.\n     */\n    set ngValue(value) {\n        if (this._select == null)\n            return;\n        this._value = value;\n        this._setElementValue(_buildValueString(this.id, value));\n        this._select.writeValue(this._select.value);\n    }\n    /**\n     * @description\n     * Tracks simple string values bound to the option element.\n     * For objects, use the `ngValue` input binding.\n     */\n    set value(value) {\n        if (this._select) {\n            this._value = value;\n            this._setElementValue(_buildValueString(this.id, value));\n            this._select.writeValue(this._select.value);\n        }\n        else {\n            this._setElementValue(value);\n        }\n    }\n    /** @internal */\n    _setElementValue(value) {\n        this._renderer.setProperty(this._element.nativeElement, 'value', value);\n    }\n    /** @internal */\n    _setSelected(selected) {\n        this._renderer.setProperty(this._element.nativeElement, 'selected', selected);\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n        if (this._select) {\n            this._select._optionMap.delete(this.id);\n            this._select.writeValue(this._select.value);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: ɵNgSelectMultipleOption, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: SelectMultipleControlValueAccessor, host: true, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.8\", type: ɵNgSelectMultipleOption, selector: \"option\", inputs: { ngValue: \"ngValue\", value: \"value\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: ɵNgSelectMultipleOption, decorators: [{\n            type: Directive,\n            args: [{ selector: 'option' }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: SelectMultipleControlValueAccessor, decorators: [{\n                    type: Optional\n                }, {\n                    type: Host\n                }] }], propDecorators: { ngValue: [{\n                type: Input,\n                args: ['ngValue']\n            }], value: [{\n                type: Input,\n                args: ['value']\n            }] } });\n\n/**\n * Method that updates string to integer if not already a number\n *\n * @param value The value to convert to integer.\n * @returns value of parameter converted to number or integer.\n */\nfunction toInteger(value) {\n    return typeof value === 'number' ? value : parseInt(value, 10);\n}\n/**\n * Method that ensures that provided value is a float (and converts it to float if needed).\n *\n * @param value The value to convert to float.\n * @returns value of parameter converted to number or float.\n */\nfunction toFloat(value) {\n    return typeof value === 'number' ? value : parseFloat(value);\n}\n/**\n * A base class for Validator-based Directives. The class contains common logic shared across such\n * Directives.\n *\n * For internal use only, this class is not intended for use outside of the Forms package.\n */\nclass AbstractValidatorDirective {\n    constructor() {\n        this._validator = nullValidator;\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n        if (this.inputName in changes) {\n            const input = this.normalizeInput(changes[this.inputName].currentValue);\n            this._enabled = this.enabled(input);\n            this._validator = this._enabled ? this.createValidator(input) : nullValidator;\n            if (this._onChange) {\n                this._onChange();\n            }\n        }\n    }\n    /** @nodoc */\n    validate(control) {\n        return this._validator(control);\n    }\n    /** @nodoc */\n    registerOnValidatorChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * @description\n     * Determines whether this validator should be active or not based on an input.\n     * Base class implementation checks whether an input is defined (if the value is different from\n     * `null` and `undefined`). Validator classes that extend this base class can override this\n     * function with the logic specific to a particular validator directive.\n     */\n    enabled(input) {\n        return input != null /* both `null` and `undefined` */;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: AbstractValidatorDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.8\", type: AbstractValidatorDirective, usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: AbstractValidatorDirective, decorators: [{\n            type: Directive\n        }] });\n/**\n * @description\n * Provider which adds `MaxValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MAX_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MaxValidator),\n    multi: true,\n};\n/**\n * A directive which installs the {@link MaxValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `max` attribute.\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a max validator\n *\n * The following example shows how to add a max validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input type=\"number\" ngModel max=\"4\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass MaxValidator extends AbstractValidatorDirective {\n    constructor() {\n        super(...arguments);\n        /** @internal */\n        this.inputName = 'max';\n        /** @internal */\n        this.normalizeInput = (input) => toFloat(input);\n        /** @internal */\n        this.createValidator = (max) => maxValidator(max);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: MaxValidator, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.8\", type: MaxValidator, selector: \"input[type=number][max][formControlName],input[type=number][max][formControl],input[type=number][max][ngModel]\", inputs: { max: \"max\" }, host: { properties: { \"attr.max\": \"_enabled ? max : null\" } }, providers: [MAX_VALIDATOR], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: MaxValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[type=number][max][formControlName],input[type=number][max][formControl],input[type=number][max][ngModel]',\n                    providers: [MAX_VALIDATOR],\n                    host: { '[attr.max]': '_enabled ? max : null' },\n                }]\n        }], propDecorators: { max: [{\n                type: Input\n            }] } });\n/**\n * @description\n * Provider which adds `MinValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MIN_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MinValidator),\n    multi: true,\n};\n/**\n * A directive which installs the {@link MinValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a min validator\n *\n * The following example shows how to add a min validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input type=\"number\" ngModel min=\"4\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass MinValidator extends AbstractValidatorDirective {\n    constructor() {\n        super(...arguments);\n        /** @internal */\n        this.inputName = 'min';\n        /** @internal */\n        this.normalizeInput = (input) => toFloat(input);\n        /** @internal */\n        this.createValidator = (min) => minValidator(min);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: MinValidator, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.8\", type: MinValidator, selector: \"input[type=number][min][formControlName],input[type=number][min][formControl],input[type=number][min][ngModel]\", inputs: { min: \"min\" }, host: { properties: { \"attr.min\": \"_enabled ? min : null\" } }, providers: [MIN_VALIDATOR], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: MinValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[type=number][min][formControlName],input[type=number][min][formControl],input[type=number][min][ngModel]',\n                    providers: [MIN_VALIDATOR],\n                    host: { '[attr.min]': '_enabled ? min : null' },\n                }]\n        }], propDecorators: { min: [{\n                type: Input\n            }] } });\n/**\n * @description\n * Provider which adds `RequiredValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => RequiredValidator),\n    multi: true,\n};\n/**\n * @description\n * Provider which adds `CheckboxRequiredValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst CHECKBOX_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => CheckboxRequiredValidator),\n    multi: true,\n};\n/**\n * @description\n * A directive that adds the `required` validator to any controls marked with the\n * `required` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a required validator using template-driven forms\n *\n * ```\n * <input name=\"fullName\" ngModel required>\n * ```\n *\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass RequiredValidator extends AbstractValidatorDirective {\n    constructor() {\n        super(...arguments);\n        /** @internal */\n        this.inputName = 'required';\n        /** @internal */\n        this.normalizeInput = booleanAttribute;\n        /** @internal */\n        this.createValidator = (input) => requiredValidator;\n    }\n    /** @nodoc */\n    enabled(input) {\n        return input;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: RequiredValidator, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.8\", type: RequiredValidator, selector: \":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]\", inputs: { required: \"required\" }, host: { properties: { \"attr.required\": \"_enabled ? \\\"\\\" : null\" } }, providers: [REQUIRED_VALIDATOR], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: RequiredValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: ':not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]',\n                    providers: [REQUIRED_VALIDATOR],\n                    host: { '[attr.required]': '_enabled ? \"\" : null' },\n                }]\n        }], propDecorators: { required: [{\n                type: Input\n            }] } });\n/**\n * A Directive that adds the `required` validator to checkbox controls marked with the\n * `required` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a required checkbox validator using template-driven forms\n *\n * The following example shows how to add a checkbox required validator to an input attached to an\n * ngModel binding.\n *\n * ```\n * <input type=\"checkbox\" name=\"active\" ngModel required>\n * ```\n *\n * @publicApi\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n */\nclass CheckboxRequiredValidator extends RequiredValidator {\n    constructor() {\n        super(...arguments);\n        /** @internal */\n        this.createValidator = (input) => requiredTrueValidator;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: CheckboxRequiredValidator, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.8\", type: CheckboxRequiredValidator, selector: \"input[type=checkbox][required][formControlName],input[type=checkbox][required][formControl],input[type=checkbox][required][ngModel]\", host: { properties: { \"attr.required\": \"_enabled ? \\\"\\\" : null\" } }, providers: [CHECKBOX_REQUIRED_VALIDATOR], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: CheckboxRequiredValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[type=checkbox][required][formControlName],input[type=checkbox][required][formControl],input[type=checkbox][required][ngModel]',\n                    providers: [CHECKBOX_REQUIRED_VALIDATOR],\n                    host: { '[attr.required]': '_enabled ? \"\" : null' },\n                }]\n        }] });\n/**\n * @description\n * Provider which adds `EmailValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst EMAIL_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => EmailValidator),\n    multi: true,\n};\n/**\n * A directive that adds the `email` validator to controls marked with the\n * `email` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * The email validation is based on the WHATWG HTML specification with some enhancements to\n * incorporate more RFC rules. More information can be found on the [Validators.email\n * page](api/forms/Validators#email).\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @usageNotes\n *\n * ### Adding an email validator\n *\n * The following example shows how to add an email validator to an input attached to an ngModel\n * binding.\n *\n * ```\n * <input type=\"email\" name=\"email\" ngModel email>\n * <input type=\"email\" name=\"email\" ngModel email=\"true\">\n * <input type=\"email\" name=\"email\" ngModel [email]=\"true\">\n * ```\n *\n * @publicApi\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n */\nclass EmailValidator extends AbstractValidatorDirective {\n    constructor() {\n        super(...arguments);\n        /** @internal */\n        this.inputName = 'email';\n        /** @internal */\n        this.normalizeInput = booleanAttribute;\n        /** @internal */\n        this.createValidator = (input) => emailValidator;\n    }\n    /** @nodoc */\n    enabled(input) {\n        return input;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: EmailValidator, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.8\", type: EmailValidator, selector: \"[email][formControlName],[email][formControl],[email][ngModel]\", inputs: { email: \"email\" }, providers: [EMAIL_VALIDATOR], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: EmailValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[email][formControlName],[email][formControl],[email][ngModel]',\n                    providers: [EMAIL_VALIDATOR],\n                }]\n        }], propDecorators: { email: [{\n                type: Input\n            }] } });\n/**\n * @description\n * Provider which adds `MinLengthValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MIN_LENGTH_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MinLengthValidator),\n    multi: true,\n};\n/**\n * A directive that adds minimum length validation to controls marked with the\n * `minlength` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a minimum length validator\n *\n * The following example shows how to add a minimum length validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel minlength=\"4\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass MinLengthValidator extends AbstractValidatorDirective {\n    constructor() {\n        super(...arguments);\n        /** @internal */\n        this.inputName = 'minlength';\n        /** @internal */\n        this.normalizeInput = (input) => toInteger(input);\n        /** @internal */\n        this.createValidator = (minlength) => minLengthValidator(minlength);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: MinLengthValidator, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.8\", type: MinLengthValidator, selector: \"[minlength][formControlName],[minlength][formControl],[minlength][ngModel]\", inputs: { minlength: \"minlength\" }, host: { properties: { \"attr.minlength\": \"_enabled ? minlength : null\" } }, providers: [MIN_LENGTH_VALIDATOR], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: MinLengthValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[minlength][formControlName],[minlength][formControl],[minlength][ngModel]',\n                    providers: [MIN_LENGTH_VALIDATOR],\n                    host: { '[attr.minlength]': '_enabled ? minlength : null' },\n                }]\n        }], propDecorators: { minlength: [{\n                type: Input\n            }] } });\n/**\n * @description\n * Provider which adds `MaxLengthValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MAX_LENGTH_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MaxLengthValidator),\n    multi: true,\n};\n/**\n * A directive that adds maximum length validation to controls marked with the\n * `maxlength` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a maximum length validator\n *\n * The following example shows how to add a maximum length validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel maxlength=\"25\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass MaxLengthValidator extends AbstractValidatorDirective {\n    constructor() {\n        super(...arguments);\n        /** @internal */\n        this.inputName = 'maxlength';\n        /** @internal */\n        this.normalizeInput = (input) => toInteger(input);\n        /** @internal */\n        this.createValidator = (maxlength) => maxLengthValidator(maxlength);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: MaxLengthValidator, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.8\", type: MaxLengthValidator, selector: \"[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]\", inputs: { maxlength: \"maxlength\" }, host: { properties: { \"attr.maxlength\": \"_enabled ? maxlength : null\" } }, providers: [MAX_LENGTH_VALIDATOR], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: MaxLengthValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]',\n                    providers: [MAX_LENGTH_VALIDATOR],\n                    host: { '[attr.maxlength]': '_enabled ? maxlength : null' },\n                }]\n        }], propDecorators: { maxlength: [{\n                type: Input\n            }] } });\n/**\n * @description\n * Provider which adds `PatternValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst PATTERN_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => PatternValidator),\n    multi: true,\n};\n/**\n * @description\n * A directive that adds regex pattern validation to controls marked with the\n * `pattern` attribute. The regex must match the entire control value.\n * The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a pattern validator\n *\n * The following example shows how to add a pattern validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel pattern=\"[a-zA-Z ]*\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass PatternValidator extends AbstractValidatorDirective {\n    constructor() {\n        super(...arguments);\n        /** @internal */\n        this.inputName = 'pattern';\n        /** @internal */\n        this.normalizeInput = (input) => input;\n        /** @internal */\n        this.createValidator = (input) => patternValidator(input);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: PatternValidator, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.8\", type: PatternValidator, selector: \"[pattern][formControlName],[pattern][formControl],[pattern][ngModel]\", inputs: { pattern: \"pattern\" }, host: { properties: { \"attr.pattern\": \"_enabled ? pattern : null\" } }, providers: [PATTERN_VALIDATOR], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: PatternValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pattern][formControlName],[pattern][formControl],[pattern][ngModel]',\n                    providers: [PATTERN_VALIDATOR],\n                    host: { '[attr.pattern]': '_enabled ? pattern : null' },\n                }]\n        }], propDecorators: { pattern: [{\n                type: Input\n            }] } });\n\nconst SHARED_FORM_DIRECTIVES = [\n    ɵNgNoValidate,\n    NgSelectOption,\n    ɵNgSelectMultipleOption,\n    DefaultValueAccessor,\n    NumberValueAccessor,\n    RangeValueAccessor,\n    CheckboxControlValueAccessor,\n    SelectControlValueAccessor,\n    SelectMultipleControlValueAccessor,\n    RadioControlValueAccessor,\n    NgControlStatus,\n    NgControlStatusGroup,\n    RequiredValidator,\n    MinLengthValidator,\n    MaxLengthValidator,\n    PatternValidator,\n    CheckboxRequiredValidator,\n    EmailValidator,\n    MinValidator,\n    MaxValidator,\n];\nconst TEMPLATE_DRIVEN_DIRECTIVES = [NgModel, NgModelGroup, NgForm];\nconst REACTIVE_DRIVEN_DIRECTIVES = [\n    FormControlDirective,\n    FormGroupDirective,\n    FormControlName,\n    FormGroupName,\n    FormArrayName,\n];\n/**\n * Internal module used for sharing directives between FormsModule and ReactiveFormsModule\n */\nclass ɵInternalFormsSharedModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: ɵInternalFormsSharedModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.2.8\", ngImport: i0, type: ɵInternalFormsSharedModule, declarations: [ɵNgNoValidate,\n            NgSelectOption,\n            ɵNgSelectMultipleOption,\n            DefaultValueAccessor,\n            NumberValueAccessor,\n            RangeValueAccessor,\n            CheckboxControlValueAccessor,\n            SelectControlValueAccessor,\n            SelectMultipleControlValueAccessor,\n            RadioControlValueAccessor,\n            NgControlStatus,\n            NgControlStatusGroup,\n            RequiredValidator,\n            MinLengthValidator,\n            MaxLengthValidator,\n            PatternValidator,\n            CheckboxRequiredValidator,\n            EmailValidator,\n            MinValidator,\n            MaxValidator], exports: [ɵNgNoValidate,\n            NgSelectOption,\n            ɵNgSelectMultipleOption,\n            DefaultValueAccessor,\n            NumberValueAccessor,\n            RangeValueAccessor,\n            CheckboxControlValueAccessor,\n            SelectControlValueAccessor,\n            SelectMultipleControlValueAccessor,\n            RadioControlValueAccessor,\n            NgControlStatus,\n            NgControlStatusGroup,\n            RequiredValidator,\n            MinLengthValidator,\n            MaxLengthValidator,\n            PatternValidator,\n            CheckboxRequiredValidator,\n            EmailValidator,\n            MinValidator,\n            MaxValidator] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: ɵInternalFormsSharedModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: ɵInternalFormsSharedModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: SHARED_FORM_DIRECTIVES,\n                    exports: SHARED_FORM_DIRECTIVES,\n                }]\n        }] });\n\n/**\n * Tracks the value and validity state of an array of `FormControl`,\n * `FormGroup` or `FormArray` instances.\n *\n * A `FormArray` aggregates the values of each child `FormControl` into an array.\n * It calculates its status by reducing the status values of its children. For example, if one of\n * the controls in a `FormArray` is invalid, the entire array becomes invalid.\n *\n * `FormArray` accepts one generic argument, which is the type of the controls inside.\n * If you need a heterogenous array, use {@link UntypedFormArray}.\n *\n * `FormArray` is one of the four fundamental building blocks used to define forms in Angular,\n * along with `FormControl`, `FormGroup`, and `FormRecord`.\n *\n * @usageNotes\n *\n * ### Create an array of form controls\n *\n * ```\n * const arr = new FormArray([\n *   new FormControl('Nancy', Validators.minLength(2)),\n *   new FormControl('Drew'),\n * ]);\n *\n * console.log(arr.value);   // ['Nancy', 'Drew']\n * console.log(arr.status);  // 'VALID'\n * ```\n *\n * ### Create a form array with array-level validators\n *\n * You include array-level validators and async validators. These come in handy\n * when you want to perform validation that considers the value of more than one child\n * control.\n *\n * The two types of validators are passed in separately as the second and third arg\n * respectively, or together as part of an options object.\n *\n * ```\n * const arr = new FormArray([\n *   new FormControl('Nancy'),\n *   new FormControl('Drew')\n * ], {validators: myValidator, asyncValidators: myAsyncValidator});\n * ```\n *\n * ### Set the updateOn property for all controls in a form array\n *\n * The options object is used to set a default value for each child\n * control's `updateOn` property. If you set `updateOn` to `'blur'` at the\n * array level, all child controls default to 'blur', unless the child\n * has explicitly specified a different `updateOn` value.\n *\n * ```ts\n * const arr = new FormArray([\n *    new FormControl()\n * ], {updateOn: 'blur'});\n * ```\n *\n * ### Adding or removing controls from a form array\n *\n * To change the controls in the array, use the `push`, `insert`, `removeAt` or `clear` methods\n * in `FormArray` itself. These methods ensure the controls are properly tracked in the\n * form's hierarchy. Do not modify the array of `AbstractControl`s used to instantiate\n * the `FormArray` directly, as that result in strange and unexpected behavior such\n * as broken change detection.\n *\n * @publicApi\n */\nclass FormArray extends AbstractControl {\n    /**\n     * Creates a new `FormArray` instance.\n     *\n     * @param controls An array of child controls. Each child control is given an index\n     * where it is registered.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or an `AbstractControlOptions` object that contains validation functions\n     * and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator functions\n     *\n     */\n    constructor(controls, validatorOrOpts, asyncValidator) {\n        super(pickValidators(validatorOrOpts), pickAsyncValidators(asyncValidator, validatorOrOpts));\n        this.controls = controls;\n        this._initObservables();\n        this._setUpdateStrategy(validatorOrOpts);\n        this._setUpControls();\n        this.updateValueAndValidity({\n            onlySelf: true,\n            // If `asyncValidator` is present, it will trigger control status change from `PENDING` to\n            // `VALID` or `INVALID`.\n            // The status should be broadcasted via the `statusChanges` observable, so we set `emitEvent`\n            // to `true` to allow that during the control creation process.\n            emitEvent: !!this.asyncValidator,\n        });\n    }\n    /**\n     * Get the `AbstractControl` at the given `index` in the array.\n     *\n     * @param index Index in the array to retrieve the control. If `index` is negative, it will wrap\n     *     around from the back, and if index is greatly negative (less than `-length`), the result is\n     * undefined. This behavior is the same as `Array.at(index)`.\n     */\n    at(index) {\n        return this.controls[this._adjustIndex(index)];\n    }\n    /**\n     * Insert a new `AbstractControl` at the end of the array.\n     *\n     * @param control Form control to be inserted\n     * @param options Specifies whether this FormArray instance should emit events after a new\n     *     control is added.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges` observables emit events with the latest status and value when the control is\n     * inserted. When false, no events are emitted.\n     */\n    push(control, options = {}) {\n        this.controls.push(control);\n        this._registerControl(control);\n        this.updateValueAndValidity({ emitEvent: options.emitEvent });\n        this._onCollectionChange();\n    }\n    /**\n     * Insert a new `AbstractControl` at the given `index` in the array.\n     *\n     * @param index Index in the array to insert the control. If `index` is negative, wraps around\n     *     from the back. If `index` is greatly negative (less than `-length`), prepends to the array.\n     * This behavior is the same as `Array.splice(index, 0, control)`.\n     * @param control Form control to be inserted\n     * @param options Specifies whether this FormArray instance should emit events after a new\n     *     control is inserted.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges` observables emit events with the latest status and value when the control is\n     * inserted. When false, no events are emitted.\n     */\n    insert(index, control, options = {}) {\n        this.controls.splice(index, 0, control);\n        this._registerControl(control);\n        this.updateValueAndValidity({ emitEvent: options.emitEvent });\n    }\n    /**\n     * Remove the control at the given `index` in the array.\n     *\n     * @param index Index in the array to remove the control.  If `index` is negative, wraps around\n     *     from the back. If `index` is greatly negative (less than `-length`), removes the first\n     *     element. This behavior is the same as `Array.splice(index, 1)`.\n     * @param options Specifies whether this FormArray instance should emit events after a\n     *     control is removed.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges` observables emit events with the latest status and value when the control is\n     * removed. When false, no events are emitted.\n     */\n    removeAt(index, options = {}) {\n        // Adjust the index, then clamp it at no less than 0 to prevent undesired underflows.\n        let adjustedIndex = this._adjustIndex(index);\n        if (adjustedIndex < 0)\n            adjustedIndex = 0;\n        if (this.controls[adjustedIndex])\n            this.controls[adjustedIndex]._registerOnCollectionChange(() => { });\n        this.controls.splice(adjustedIndex, 1);\n        this.updateValueAndValidity({ emitEvent: options.emitEvent });\n    }\n    /**\n     * Replace an existing control.\n     *\n     * @param index Index in the array to replace the control. If `index` is negative, wraps around\n     *     from the back. If `index` is greatly negative (less than `-length`), replaces the first\n     *     element. This behavior is the same as `Array.splice(index, 1, control)`.\n     * @param control The `AbstractControl` control to replace the existing control\n     * @param options Specifies whether this FormArray instance should emit events after an\n     *     existing control is replaced with a new one.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges` observables emit events with the latest status and value when the control is\n     * replaced with a new one. When false, no events are emitted.\n     */\n    setControl(index, control, options = {}) {\n        // Adjust the index, then clamp it at no less than 0 to prevent undesired underflows.\n        let adjustedIndex = this._adjustIndex(index);\n        if (adjustedIndex < 0)\n            adjustedIndex = 0;\n        if (this.controls[adjustedIndex])\n            this.controls[adjustedIndex]._registerOnCollectionChange(() => { });\n        this.controls.splice(adjustedIndex, 1);\n        if (control) {\n            this.controls.splice(adjustedIndex, 0, control);\n            this._registerControl(control);\n        }\n        this.updateValueAndValidity({ emitEvent: options.emitEvent });\n        this._onCollectionChange();\n    }\n    /**\n     * Length of the control array.\n     */\n    get length() {\n        return this.controls.length;\n    }\n    /**\n     * Sets the value of the `FormArray`. It accepts an array that matches\n     * the structure of the control.\n     *\n     * This method performs strict checks, and throws an error if you try\n     * to set the value of a control that doesn't exist or if you exclude the\n     * value of a control.\n     *\n     * @usageNotes\n     * ### Set the values for the controls in the form array\n     *\n     * ```\n     * const arr = new FormArray([\n     *   new FormControl(),\n     *   new FormControl()\n     * ]);\n     * console.log(arr.value);   // [null, null]\n     *\n     * arr.setValue(['Nancy', 'Drew']);\n     * console.log(arr.value);   // ['Nancy', 'Drew']\n     * ```\n     *\n     * @param value Array of values for the controls\n     * @param options Configure options that determine how the control propagates changes and\n     * emits events after the value changes\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n     * is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control value is updated.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     */\n    setValue(value, options = {}) {\n        assertAllValuesPresent(this, false, value);\n        value.forEach((newValue, index) => {\n            assertControlPresent(this, false, index);\n            this.at(index).setValue(newValue, { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Patches the value of the `FormArray`. It accepts an array that matches the\n     * structure of the control, and does its best to match the values to the correct\n     * controls in the group.\n     *\n     * It accepts both super-sets and sub-sets of the array without throwing an error.\n     *\n     * @usageNotes\n     * ### Patch the values for controls in a form array\n     *\n     * ```\n     * const arr = new FormArray([\n     *    new FormControl(),\n     *    new FormControl()\n     * ]);\n     * console.log(arr.value);   // [null, null]\n     *\n     * arr.patchValue(['Nancy']);\n     * console.log(arr.value);   // ['Nancy', null]\n     * ```\n     *\n     * @param value Array of latest values for the controls\n     * @param options Configure options that determine how the control propagates changes and\n     * emits events after the value changes\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n     * is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges` observables emit events with the latest status and value when the control\n     * value is updated. When false, no events are emitted. The configuration options are passed to\n     * the {@link AbstractControl#updateValueAndValidity updateValueAndValidity} method.\n     */\n    patchValue(value, options = {}) {\n        // Even though the `value` argument type doesn't allow `null` and `undefined` values, the\n        // `patchValue` can be called recursively and inner data structures might have these values,\n        // so we just ignore such cases when a field containing FormArray instance receives `null` or\n        // `undefined` as a value.\n        if (value == null /* both `null` and `undefined` */)\n            return;\n        value.forEach((newValue, index) => {\n            if (this.at(index)) {\n                this.at(index).patchValue(newValue, { onlySelf: true, emitEvent: options.emitEvent });\n            }\n        });\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Resets the `FormArray` and all descendants are marked `pristine` and `untouched`, and the\n     * value of all descendants to null or null maps.\n     *\n     * You reset to a specific form state by passing in an array of states\n     * that matches the structure of the control. The state is a standalone value\n     * or a form state object with both a value and a disabled status.\n     *\n     * @usageNotes\n     * ### Reset the values in a form array\n     *\n     * ```ts\n     * const arr = new FormArray([\n     *    new FormControl(),\n     *    new FormControl()\n     * ]);\n     * arr.reset(['name', 'last name']);\n     *\n     * console.log(arr.value);  // ['name', 'last name']\n     * ```\n     *\n     * ### Reset the values in a form array and the disabled status for the first control\n     *\n     * ```\n     * arr.reset([\n     *   {value: 'name', disabled: true},\n     *   'last'\n     * ]);\n     *\n     * console.log(arr.value);  // ['last']\n     * console.log(arr.at(0).status);  // 'DISABLED'\n     * ```\n     *\n     * @param value Array of values for the controls\n     * @param options Configure options that determine how the control propagates changes and\n     * emits events after the value changes\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n     * is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is reset.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     */\n    reset(value = [], options = {}) {\n        this._forEachChild((control, index) => {\n            control.reset(value[index], { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this._updatePristine(options, this);\n        this._updateTouched(options, this);\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * The aggregate value of the array, including any disabled controls.\n     *\n     * Reports all values regardless of disabled status.\n     */\n    getRawValue() {\n        return this.controls.map((control) => control.getRawValue());\n    }\n    /**\n     * Remove all controls in the `FormArray`.\n     *\n     * @param options Specifies whether this FormArray instance should emit events after all\n     *     controls are removed.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges` observables emit events with the latest status and value when all controls\n     * in this FormArray instance are removed. When false, no events are emitted.\n     *\n     * @usageNotes\n     * ### Remove all elements from a FormArray\n     *\n     * ```ts\n     * const arr = new FormArray([\n     *    new FormControl(),\n     *    new FormControl()\n     * ]);\n     * console.log(arr.length);  // 2\n     *\n     * arr.clear();\n     * console.log(arr.length);  // 0\n     * ```\n     *\n     * It's a simpler and more efficient alternative to removing all elements one by one:\n     *\n     * ```ts\n     * const arr = new FormArray([\n     *    new FormControl(),\n     *    new FormControl()\n     * ]);\n     *\n     * while (arr.length) {\n     *    arr.removeAt(0);\n     * }\n     * ```\n     */\n    clear(options = {}) {\n        if (this.controls.length < 1)\n            return;\n        this._forEachChild((control) => control._registerOnCollectionChange(() => { }));\n        this.controls.splice(0);\n        this.updateValueAndValidity({ emitEvent: options.emitEvent });\n    }\n    /**\n     * Adjusts a negative index by summing it with the length of the array. For very negative\n     * indices, the result may remain negative.\n     * @internal\n     */\n    _adjustIndex(index) {\n        return index < 0 ? index + this.length : index;\n    }\n    /** @internal */\n    _syncPendingControls() {\n        let subtreeUpdated = this.controls.reduce((updated, child) => {\n            return child._syncPendingControls() ? true : updated;\n        }, false);\n        if (subtreeUpdated)\n            this.updateValueAndValidity({ onlySelf: true });\n        return subtreeUpdated;\n    }\n    /** @internal */\n    _forEachChild(cb) {\n        this.controls.forEach((control, index) => {\n            cb(control, index);\n        });\n    }\n    /** @internal */\n    _updateValue() {\n        this.value = this.controls\n            .filter((control) => control.enabled || this.disabled)\n            .map((control) => control.value);\n    }\n    /** @internal */\n    _anyControls(condition) {\n        return this.controls.some((control) => control.enabled && condition(control));\n    }\n    /** @internal */\n    _setUpControls() {\n        this._forEachChild((control) => this._registerControl(control));\n    }\n    /** @internal */\n    _allControlsDisabled() {\n        for (const control of this.controls) {\n            if (control.enabled)\n                return false;\n        }\n        return this.controls.length > 0 || this.disabled;\n    }\n    _registerControl(control) {\n        control.setParent(this);\n        control._registerOnCollectionChange(this._onCollectionChange);\n    }\n    /** @internal */\n    _find(name) {\n        return this.at(name) ?? null;\n    }\n}\nconst UntypedFormArray = FormArray;\n/**\n * @description\n * Asserts that the given control is an instance of `FormArray`\n *\n * @publicApi\n */\nconst isFormArray = (control) => control instanceof FormArray;\n\nfunction isAbstractControlOptions(options) {\n    return (!!options &&\n        (options.asyncValidators !== undefined ||\n            options.validators !== undefined ||\n            options.updateOn !== undefined));\n}\n/**\n * @description\n * Creates an `AbstractControl` from a user-specified configuration.\n *\n * The `FormBuilder` provides syntactic sugar that shortens creating instances of a\n * `FormControl`, `FormGroup`, or `FormArray`. It reduces the amount of boilerplate needed to\n * build complex forms.\n *\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n *\n * @publicApi\n */\nclass FormBuilder {\n    constructor() {\n        this.useNonNullable = false;\n    }\n    /**\n     * @description\n     * Returns a FormBuilder in which automatically constructed `FormControl` elements\n     * have `{nonNullable: true}` and are non-nullable.\n     *\n     * **Constructing non-nullable controls**\n     *\n     * When constructing a control, it will be non-nullable, and will reset to its initial value.\n     *\n     * ```ts\n     * let nnfb = new FormBuilder().nonNullable;\n     * let name = nnfb.control('Alex'); // FormControl<string>\n     * name.reset();\n     * console.log(name); // 'Alex'\n     * ```\n     *\n     * **Constructing non-nullable groups or arrays**\n     *\n     * When constructing a group or array, all automatically created inner controls will be\n     * non-nullable, and will reset to their initial values.\n     *\n     * ```ts\n     * let nnfb = new FormBuilder().nonNullable;\n     * let name = nnfb.group({who: 'Alex'}); // FormGroup<{who: FormControl<string>}>\n     * name.reset();\n     * console.log(name); // {who: 'Alex'}\n     * ```\n     * **Constructing *nullable* fields on groups or arrays**\n     *\n     * It is still possible to have a nullable field. In particular, any `FormControl` which is\n     * *already* constructed will not be altered. For example:\n     *\n     * ```ts\n     * let nnfb = new FormBuilder().nonNullable;\n     * // FormGroup<{who: FormControl<string|null>}>\n     * let name = nnfb.group({who: new FormControl('Alex')});\n     * name.reset(); console.log(name); // {who: null}\n     * ```\n     *\n     * Because the inner control is constructed explicitly by the caller, the builder has\n     * no control over how it is created, and cannot exclude the `null`.\n     */\n    get nonNullable() {\n        const nnfb = new FormBuilder();\n        nnfb.useNonNullable = true;\n        return nnfb;\n    }\n    group(controls, options = null) {\n        const reducedControls = this._reduceControls(controls);\n        let newOptions = {};\n        if (isAbstractControlOptions(options)) {\n            // `options` are `AbstractControlOptions`\n            newOptions = options;\n        }\n        else if (options !== null) {\n            // `options` are legacy form group options\n            newOptions.validators = options.validator;\n            newOptions.asyncValidators = options.asyncValidator;\n        }\n        return new FormGroup(reducedControls, newOptions);\n    }\n    /**\n     * @description\n     * Constructs a new `FormRecord` instance. Accepts a single generic argument, which is an object\n     * containing all the keys and corresponding inner control types.\n     *\n     * @param controls A collection of child controls. The key for each child is the name\n     * under which it is registered.\n     *\n     * @param options Configuration options object for the `FormRecord`. The object should have the\n     * `AbstractControlOptions` type and might contain the following fields:\n     * * `validators`: A synchronous validator function, or an array of validator functions.\n     * * `asyncValidators`: A single async validator or array of async validator functions.\n     * * `updateOn`: The event upon which the control should be updated (options: 'change' | 'blur'\n     * | submit').\n     */\n    record(controls, options = null) {\n        const reducedControls = this._reduceControls(controls);\n        // Cast to `any` because the inferred types are not as specific as Element.\n        return new FormRecord(reducedControls, options);\n    }\n    /**\n     * @description\n     * Constructs a new `FormControl` with the given state, validators and options. Sets\n     * `{nonNullable: true}` in the options to get a non-nullable control. Otherwise, the\n     * control will be nullable. Accepts a single generic argument, which is the type  of the\n     * control's value.\n     *\n     * @param formState Initializes the control with an initial state value, or\n     * with an object that contains both a value and a disabled status.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or a `FormControlOptions` object that contains\n     * validation functions and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator\n     * functions.\n     *\n     * @usageNotes\n     *\n     * ### Initialize a control as disabled\n     *\n     * The following example returns a control with an initial value in a disabled state.\n     *\n     * <code-example path=\"forms/ts/formBuilder/form_builder_example.ts\" region=\"disabled-control\">\n     * </code-example>\n     */\n    control(formState, validatorOrOpts, asyncValidator) {\n        let newOptions = {};\n        if (!this.useNonNullable) {\n            return new FormControl(formState, validatorOrOpts, asyncValidator);\n        }\n        if (isAbstractControlOptions(validatorOrOpts)) {\n            // If the second argument is options, then they are copied.\n            newOptions = validatorOrOpts;\n        }\n        else {\n            // If the other arguments are validators, they are copied into an options object.\n            newOptions.validators = validatorOrOpts;\n            newOptions.asyncValidators = asyncValidator;\n        }\n        return new FormControl(formState, { ...newOptions, nonNullable: true });\n    }\n    /**\n     * Constructs a new `FormArray` from the given array of configurations,\n     * validators and options. Accepts a single generic argument, which is the type of each control\n     * inside the array.\n     *\n     * @param controls An array of child controls or control configs. Each child control is given an\n     *     index when it is registered.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of such functions, or an\n     *     `AbstractControlOptions` object that contains\n     * validation functions and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator functions.\n     */\n    array(controls, validatorOrOpts, asyncValidator) {\n        const createdControls = controls.map((c) => this._createControl(c));\n        // Cast to `any` because the inferred types are not as specific as Element.\n        return new FormArray(createdControls, validatorOrOpts, asyncValidator);\n    }\n    /** @internal */\n    _reduceControls(controls) {\n        const createdControls = {};\n        Object.keys(controls).forEach((controlName) => {\n            createdControls[controlName] = this._createControl(controls[controlName]);\n        });\n        return createdControls;\n    }\n    /** @internal */\n    _createControl(controls) {\n        if (controls instanceof FormControl) {\n            return controls;\n        }\n        else if (controls instanceof AbstractControl) {\n            // A control; just return it\n            return controls;\n        }\n        else if (Array.isArray(controls)) {\n            // ControlConfig Tuple\n            const value = controls[0];\n            const validator = controls.length > 1 ? controls[1] : null;\n            const asyncValidator = controls.length > 2 ? controls[2] : null;\n            return this.control(value, validator, asyncValidator);\n        }\n        else {\n            // T or FormControlState<T>\n            return this.control(controls);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: FormBuilder, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: FormBuilder, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: FormBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/**\n * @description\n * `NonNullableFormBuilder` is similar to {@link FormBuilder}, but automatically constructed\n * {@link FormControl} elements have `{nonNullable: true}` and are non-nullable.\n *\n * @publicApi\n */\nclass NonNullableFormBuilder {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: NonNullableFormBuilder, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: NonNullableFormBuilder, providedIn: 'root', useFactory: () => inject(FormBuilder).nonNullable }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: NonNullableFormBuilder, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                    useFactory: () => inject(FormBuilder).nonNullable,\n                }]\n        }] });\n/**\n * UntypedFormBuilder is the same as `FormBuilder`, but it provides untyped controls.\n */\nclass UntypedFormBuilder extends FormBuilder {\n    group(controlsConfig, options = null) {\n        return super.group(controlsConfig, options);\n    }\n    /**\n     * Like `FormBuilder#control`, except the resulting control is untyped.\n     */\n    control(formState, validatorOrOpts, asyncValidator) {\n        return super.control(formState, validatorOrOpts, asyncValidator);\n    }\n    /**\n     * Like `FormBuilder#array`, except the resulting array is untyped.\n     */\n    array(controlsConfig, validatorOrOpts, asyncValidator) {\n        return super.array(controlsConfig, validatorOrOpts, asyncValidator);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: UntypedFormBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: UntypedFormBuilder, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: UntypedFormBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the forms package.\n */\n/**\n * @publicApi\n */\nconst VERSION = new Version('18.2.8');\n\n/**\n * Exports the required providers and directives for template-driven forms,\n * making them available for import by NgModules that import this module.\n *\n * @see [Forms Overview](guide/forms)\n * @see [Template-driven Forms Guide](guide/forms)\n *\n * @publicApi\n */\nclass FormsModule {\n    /**\n     * @description\n     * Provides options for configuring the forms module.\n     *\n     * @param opts An object of configuration options\n     * * `callSetDisabledState` Configures whether to `always` call `setDisabledState`, which is more\n     * correct, or to only call it `whenDisabled`, which is the legacy behavior.\n     */\n    static withConfig(opts) {\n        return {\n            ngModule: FormsModule,\n            providers: [\n                {\n                    provide: CALL_SET_DISABLED_STATE,\n                    useValue: opts.callSetDisabledState ?? setDisabledStateDefault,\n                },\n            ],\n        };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: FormsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.2.8\", ngImport: i0, type: FormsModule, declarations: [NgModel, NgModelGroup, NgForm], exports: [ɵInternalFormsSharedModule, NgModel, NgModelGroup, NgForm] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: FormsModule, imports: [ɵInternalFormsSharedModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: FormsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: TEMPLATE_DRIVEN_DIRECTIVES,\n                    exports: [ɵInternalFormsSharedModule, TEMPLATE_DRIVEN_DIRECTIVES],\n                }]\n        }] });\n/**\n * Exports the required infrastructure and directives for reactive forms,\n * making them available for import by NgModules that import this module.\n *\n * @see [Forms Overview](guide/forms)\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n *\n * @publicApi\n */\nclass ReactiveFormsModule {\n    /**\n     * @description\n     * Provides options for configuring the reactive forms module.\n     *\n     * @param opts An object of configuration options\n     * * `warnOnNgModelWithFormControl` Configures when to emit a warning when an `ngModel`\n     * binding is used with reactive form directives.\n     * * `callSetDisabledState` Configures whether to `always` call `setDisabledState`, which is more\n     * correct, or to only call it `whenDisabled`, which is the legacy behavior.\n     */\n    static withConfig(opts) {\n        return {\n            ngModule: ReactiveFormsModule,\n            providers: [\n                {\n                    provide: NG_MODEL_WITH_FORM_CONTROL_WARNING,\n                    useValue: opts.warnOnNgModelWithFormControl ?? 'always',\n                },\n                {\n                    provide: CALL_SET_DISABLED_STATE,\n                    useValue: opts.callSetDisabledState ?? setDisabledStateDefault,\n                },\n            ],\n        };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: ReactiveFormsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.2.8\", ngImport: i0, type: ReactiveFormsModule, declarations: [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName], exports: [ɵInternalFormsSharedModule, FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: ReactiveFormsModule, imports: [ɵInternalFormsSharedModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.8\", ngImport: i0, type: ReactiveFormsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [REACTIVE_DRIVEN_DIRECTIVES],\n                    exports: [ɵInternalFormsSharedModule, REACTIVE_DRIVEN_DIRECTIVES],\n                }]\n        }] });\n\n/**\n * @module\n * @description\n * This module is used for handling user input, by defining and building a `FormGroup` that\n * consists of `FormControl` objects, and mapping them onto the DOM. `FormControl`\n * objects can then be used to read information from the form DOM elements.\n *\n * Forms providers are not included in default providers; you must import these providers\n * explicitly.\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n// This file is not used to build this module. It is only used during editing\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AbstractControl, AbstractControlDirective, AbstractFormGroupDirective, COMPOSITION_BUFFER_MODE, CheckboxControlValueAccessor, CheckboxRequiredValidator, ControlContainer, ControlEvent, DefaultValueAccessor, EmailValidator, FormArray, FormArrayName, FormBuilder, FormControl, FormControlDirective, FormControlName, FormGroup, FormGroupDirective, FormGroupName, FormRecord, FormResetEvent, FormSubmittedEvent, FormsModule, MaxLengthValidator, MaxValidator, MinLengthValidator, MinValidator, NG_ASYNC_VALIDATORS, NG_VALIDATORS, NG_VALUE_ACCESSOR, NgControl, NgControlStatus, NgControlStatusGroup, NgForm, NgModel, NgModelGroup, NgSelectOption, NonNullableFormBuilder, NumberValueAccessor, PatternValidator, PristineChangeEvent, RadioControlValueAccessor, RangeValueAccessor, ReactiveFormsModule, RequiredValidator, SelectControlValueAccessor, SelectMultipleControlValueAccessor, StatusChangeEvent, TouchedChangeEvent, UntypedFormArray, UntypedFormBuilder, UntypedFormControl, UntypedFormGroup, VERSION, Validators, ValueChangeEvent, isFormArray, isFormControl, isFormGroup, isFormRecord, ɵInternalFormsSharedModule, ɵNgNoValidate, ɵNgSelectMultipleOption };\n","import { Observable } from '../Observable';\nimport { argsArgArrayOrObject } from '../util/argsArgArrayOrObject';\nimport { innerFrom } from './innerFrom';\nimport { popResultSelector } from '../util/args';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { createObject } from '../util/createObject';\nexport function forkJoin(...args) {\n    const resultSelector = popResultSelector(args);\n    const { args: sources, keys } = argsArgArrayOrObject(args);\n    const result = new Observable((subscriber) => {\n        const { length } = sources;\n        if (!length) {\n            subscriber.complete();\n            return;\n        }\n        const values = new Array(length);\n        let remainingCompletions = length;\n        let remainingEmissions = length;\n        for (let sourceIndex = 0; sourceIndex < length; sourceIndex++) {\n            let hasValue = false;\n            innerFrom(sources[sourceIndex]).subscribe(createOperatorSubscriber(subscriber, (value) => {\n                if (!hasValue) {\n                    hasValue = true;\n                    remainingEmissions--;\n                }\n                values[sourceIndex] = value;\n            }, () => remainingCompletions--, undefined, () => {\n                if (!remainingCompletions || !hasValue) {\n                    if (!remainingEmissions) {\n                        subscriber.next(keys ? createObject(keys, values) : values);\n                    }\n                    subscriber.complete();\n                }\n            }));\n        }\n    });\n    return resultSelector ? result.pipe(mapOneOrManyArgs(resultSelector)) : result;\n}\n","import * as i0 from '@angular/core';\nimport { PLATFORM_ID, Injectable, Inject, NgModule } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n// Whether the current platform supports the V8 Break Iterator. The V8 check\n// is necessary to detect all Blink based browsers.\nlet hasV8BreakIterator;\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n    hasV8BreakIterator = typeof Intl !== 'undefined' && Intl.v8BreakIterator;\n}\ncatch {\n    hasV8BreakIterator = false;\n}\n/**\n * Service to detect the current platform by comparing the userAgent strings and\n * checking browser-specific global properties.\n */\nclass Platform {\n    constructor(_platformId) {\n        this._platformId = _platformId;\n        // We want to use the Angular platform check because if the Document is shimmed\n        // without the navigator, the following checks will fail. This is preferred because\n        // sometimes the Document may be shimmed without the user's knowledge or intention\n        /** Whether the Angular application is being rendered in the browser. */\n        this.isBrowser = this._platformId\n            ? isPlatformBrowser(this._platformId)\n            : typeof document === 'object' && !!document;\n        /** Whether the current browser is Microsoft Edge. */\n        this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);\n        /** Whether the current rendering engine is Microsoft Trident. */\n        this.TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\n        // EdgeHTML and Trident mock Blink specific things and need to be excluded from this check.\n        /** Whether the current rendering engine is Blink. */\n        this.BLINK = this.isBrowser &&\n            !!(window.chrome || hasV8BreakIterator) &&\n            typeof CSS !== 'undefined' &&\n            !this.EDGE &&\n            !this.TRIDENT;\n        // Webkit is part of the userAgent in EdgeHTML, Blink and Trident. Therefore we need to\n        // ensure that Webkit runs standalone and is not used as another engine's base.\n        /** Whether the current rendering engine is WebKit. */\n        this.WEBKIT = this.isBrowser &&\n            /AppleWebKit/i.test(navigator.userAgent) &&\n            !this.BLINK &&\n            !this.EDGE &&\n            !this.TRIDENT;\n        /** Whether the current platform is Apple iOS. */\n        this.IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) && !('MSStream' in window);\n        // It's difficult to detect the plain Gecko engine, because most of the browsers identify\n        // them self as Gecko-like browsers and modify the userAgent's according to that.\n        // Since we only cover one explicit Firefox case, we can simply check for Firefox\n        // instead of having an unstable check for Gecko.\n        /** Whether the current browser is Firefox. */\n        this.FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\n        /** Whether the current platform is Android. */\n        // Trident on mobile adds the android platform to the userAgent to trick detections.\n        this.ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\n        // Safari browsers will include the Safari keyword in their userAgent. Some browsers may fake\n        // this and just place the Safari keyword in the userAgent. To be more safe about Safari every\n        // Safari browser should also use Webkit as its layout engine.\n        /** Whether the current browser is Safari. */\n        this.SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: Platform, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: Platform, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: Platform, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }] });\n\nclass PlatformModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: PlatformModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: PlatformModule }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: PlatformModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: PlatformModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }] });\n\n/** Cached result Set of input types support by the current browser. */\nlet supportedInputTypes;\n/** Types of `<input>` that *might* be supported. */\nconst candidateInputTypes = [\n    // `color` must come first. Chrome 56 shows a warning if we change the type to `color` after\n    // first changing it to something else:\n    // The specified value \"\" does not conform to the required format.\n    // The format is \"#rrggbb\" where rr, gg, bb are two-digit hexadecimal numbers.\n    'color',\n    'button',\n    'checkbox',\n    'date',\n    'datetime-local',\n    'email',\n    'file',\n    'hidden',\n    'image',\n    'month',\n    'number',\n    'password',\n    'radio',\n    'range',\n    'reset',\n    'search',\n    'submit',\n    'tel',\n    'text',\n    'time',\n    'url',\n    'week',\n];\n/** @returns The input types supported by this browser. */\nfunction getSupportedInputTypes() {\n    // Result is cached.\n    if (supportedInputTypes) {\n        return supportedInputTypes;\n    }\n    // We can't check if an input type is not supported until we're on the browser, so say that\n    // everything is supported when not on the browser. We don't use `Platform` here since it's\n    // just a helper function and can't inject it.\n    if (typeof document !== 'object' || !document) {\n        supportedInputTypes = new Set(candidateInputTypes);\n        return supportedInputTypes;\n    }\n    let featureTestInput = document.createElement('input');\n    supportedInputTypes = new Set(candidateInputTypes.filter(value => {\n        featureTestInput.setAttribute('type', value);\n        return featureTestInput.type === value;\n    }));\n    return supportedInputTypes;\n}\n\n/** Cached result of whether the user's browser supports passive event listeners. */\nlet supportsPassiveEvents;\n/**\n * Checks whether the user's browser supports passive event listeners.\n * See: https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n */\nfunction supportsPassiveEventListeners() {\n    if (supportsPassiveEvents == null && typeof window !== 'undefined') {\n        try {\n            window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\n                get: () => (supportsPassiveEvents = true),\n            }));\n        }\n        finally {\n            supportsPassiveEvents = supportsPassiveEvents || false;\n        }\n    }\n    return supportsPassiveEvents;\n}\n/**\n * Normalizes an `AddEventListener` object to something that can be passed\n * to `addEventListener` on any browser, no matter whether it supports the\n * `options` parameter.\n * @param options Object to be normalized.\n */\nfunction normalizePassiveListenerOptions(options) {\n    return supportsPassiveEventListeners() ? options : !!options.capture;\n}\n\n/** The possible ways the browser may handle the horizontal scroll axis in RTL languages. */\nvar RtlScrollAxisType;\n(function (RtlScrollAxisType) {\n    /**\n     * scrollLeft is 0 when scrolled all the way left and (scrollWidth - clientWidth) when scrolled\n     * all the way right.\n     */\n    RtlScrollAxisType[RtlScrollAxisType[\"NORMAL\"] = 0] = \"NORMAL\";\n    /**\n     * scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and 0 when scrolled\n     * all the way right.\n     */\n    RtlScrollAxisType[RtlScrollAxisType[\"NEGATED\"] = 1] = \"NEGATED\";\n    /**\n     * scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and 0 when scrolled\n     * all the way right.\n     */\n    RtlScrollAxisType[RtlScrollAxisType[\"INVERTED\"] = 2] = \"INVERTED\";\n})(RtlScrollAxisType || (RtlScrollAxisType = {}));\n/** Cached result of the way the browser handles the horizontal scroll axis in RTL mode. */\nlet rtlScrollAxisType;\n/** Cached result of the check that indicates whether the browser supports scroll behaviors. */\nlet scrollBehaviorSupported;\n/** Check whether the browser supports scroll behaviors. */\nfunction supportsScrollBehavior() {\n    if (scrollBehaviorSupported == null) {\n        // If we're not in the browser, it can't be supported. Also check for `Element`, because\n        // some projects stub out the global `document` during SSR which can throw us off.\n        if (typeof document !== 'object' || !document || typeof Element !== 'function' || !Element) {\n            scrollBehaviorSupported = false;\n            return scrollBehaviorSupported;\n        }\n        // If the element can have a `scrollBehavior` style, we can be sure that it's supported.\n        if ('scrollBehavior' in document.documentElement.style) {\n            scrollBehaviorSupported = true;\n        }\n        else {\n            // At this point we have 3 possibilities: `scrollTo` isn't supported at all, it's\n            // supported but it doesn't handle scroll behavior, or it has been polyfilled.\n            const scrollToFunction = Element.prototype.scrollTo;\n            if (scrollToFunction) {\n                // We can detect if the function has been polyfilled by calling `toString` on it. Native\n                // functions are obfuscated using `[native code]`, whereas if it was overwritten we'd get\n                // the actual function source. Via https://davidwalsh.name/detect-native-function. Consider\n                // polyfilled functions as supporting scroll behavior.\n                scrollBehaviorSupported = !/\\{\\s*\\[native code\\]\\s*\\}/.test(scrollToFunction.toString());\n            }\n            else {\n                scrollBehaviorSupported = false;\n            }\n        }\n    }\n    return scrollBehaviorSupported;\n}\n/**\n * Checks the type of RTL scroll axis used by this browser. As of time of writing, Chrome is NORMAL,\n * Firefox & Safari are NEGATED, and IE & Edge are INVERTED.\n */\nfunction getRtlScrollAxisType() {\n    // We can't check unless we're on the browser. Just assume 'normal' if we're not.\n    if (typeof document !== 'object' || !document) {\n        return RtlScrollAxisType.NORMAL;\n    }\n    if (rtlScrollAxisType == null) {\n        // Create a 1px wide scrolling container and a 2px wide content element.\n        const scrollContainer = document.createElement('div');\n        const containerStyle = scrollContainer.style;\n        scrollContainer.dir = 'rtl';\n        containerStyle.width = '1px';\n        containerStyle.overflow = 'auto';\n        containerStyle.visibility = 'hidden';\n        containerStyle.pointerEvents = 'none';\n        containerStyle.position = 'absolute';\n        const content = document.createElement('div');\n        const contentStyle = content.style;\n        contentStyle.width = '2px';\n        contentStyle.height = '1px';\n        scrollContainer.appendChild(content);\n        document.body.appendChild(scrollContainer);\n        rtlScrollAxisType = RtlScrollAxisType.NORMAL;\n        // The viewport starts scrolled all the way to the right in RTL mode. If we are in a NORMAL\n        // browser this would mean that the scrollLeft should be 1. If it's zero instead we know we're\n        // dealing with one of the other two types of browsers.\n        if (scrollContainer.scrollLeft === 0) {\n            // In a NEGATED browser the scrollLeft is always somewhere in [-maxScrollAmount, 0]. For an\n            // INVERTED browser it is always somewhere in [0, maxScrollAmount]. We can determine which by\n            // setting to the scrollLeft to 1. This is past the max for a NEGATED browser, so it will\n            // return 0 when we read it again.\n            scrollContainer.scrollLeft = 1;\n            rtlScrollAxisType =\n                scrollContainer.scrollLeft === 0 ? RtlScrollAxisType.NEGATED : RtlScrollAxisType.INVERTED;\n        }\n        scrollContainer.remove();\n    }\n    return rtlScrollAxisType;\n}\n\nlet shadowDomIsSupported;\n/** Checks whether the user's browser support Shadow DOM. */\nfunction _supportsShadowDom() {\n    if (shadowDomIsSupported == null) {\n        const head = typeof document !== 'undefined' ? document.head : null;\n        shadowDomIsSupported = !!(head && (head.createShadowRoot || head.attachShadow));\n    }\n    return shadowDomIsSupported;\n}\n/** Gets the shadow root of an element, if supported and the element is inside the Shadow DOM. */\nfunction _getShadowRoot(element) {\n    if (_supportsShadowDom()) {\n        const rootNode = element.getRootNode ? element.getRootNode() : null;\n        // Note that this should be caught by `_supportsShadowDom`, but some\n        // teams have been able to hit this code path on unsupported browsers.\n        if (typeof ShadowRoot !== 'undefined' && ShadowRoot && rootNode instanceof ShadowRoot) {\n            return rootNode;\n        }\n    }\n    return null;\n}\n/**\n * Gets the currently-focused element on the page while\n * also piercing through Shadow DOM boundaries.\n */\nfunction _getFocusedElementPierceShadowDom() {\n    let activeElement = typeof document !== 'undefined' && document\n        ? document.activeElement\n        : null;\n    while (activeElement && activeElement.shadowRoot) {\n        const newActiveElement = activeElement.shadowRoot.activeElement;\n        if (newActiveElement === activeElement) {\n            break;\n        }\n        else {\n            activeElement = newActiveElement;\n        }\n    }\n    return activeElement;\n}\n/** Gets the target of an event while accounting for Shadow DOM. */\nfunction _getEventTarget(event) {\n    // If an event is bound outside the Shadow DOM, the `event.target` will\n    // point to the shadow root so we have to use `composedPath` instead.\n    return (event.composedPath ? event.composedPath()[0] : event.target);\n}\n\n/** Gets whether the code is currently running in a test environment. */\nfunction _isTestEnvironment() {\n    // We can't use `declare const` because it causes conflicts inside Google with the real typings\n    // for these symbols and we can't read them off the global object, because they don't appear to\n    // be attached there for some runners like Jest.\n    // (see: https://github.com/angular/components/issues/23365#issuecomment-938146643)\n    return (\n    // @ts-ignore\n    (typeof __karma__ !== 'undefined' && !!__karma__) ||\n        // @ts-ignore\n        (typeof jasmine !== 'undefined' && !!jasmine) ||\n        // @ts-ignore\n        (typeof jest !== 'undefined' && !!jest) ||\n        // @ts-ignore\n        (typeof Mocha !== 'undefined' && !!Mocha));\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Platform, PlatformModule, RtlScrollAxisType, _getEventTarget, _getFocusedElementPierceShadowDom, _getShadowRoot, _isTestEnvironment, _supportsShadowDom, getRtlScrollAxisType, getSupportedInputTypes, normalizePassiveListenerOptions, supportsPassiveEventListeners, supportsScrollBehavior };\n","const MAC_ENTER = 3;\nconst BACKSPACE = 8;\nconst TAB = 9;\nconst NUM_CENTER = 12;\nconst ENTER = 13;\nconst SHIFT = 16;\nconst CONTROL = 17;\nconst ALT = 18;\nconst PAUSE = 19;\nconst CAPS_LOCK = 20;\nconst ESCAPE = 27;\nconst SPACE = 32;\nconst PAGE_UP = 33;\nconst PAGE_DOWN = 34;\nconst END = 35;\nconst HOME = 36;\nconst LEFT_ARROW = 37;\nconst UP_ARROW = 38;\nconst RIGHT_ARROW = 39;\nconst DOWN_ARROW = 40;\nconst PLUS_SIGN = 43;\nconst PRINT_SCREEN = 44;\nconst INSERT = 45;\nconst DELETE = 46;\nconst ZERO = 48;\nconst ONE = 49;\nconst TWO = 50;\nconst THREE = 51;\nconst FOUR = 52;\nconst FIVE = 53;\nconst SIX = 54;\nconst SEVEN = 55;\nconst EIGHT = 56;\nconst NINE = 57;\nconst FF_SEMICOLON = 59; // Firefox (Gecko) fires this for semicolon instead of 186\nconst FF_EQUALS = 61; // Firefox (Gecko) fires this for equals instead of 187\nconst QUESTION_MARK = 63;\nconst AT_SIGN = 64;\nconst A = 65;\nconst B = 66;\nconst C = 67;\nconst D = 68;\nconst E = 69;\nconst F = 70;\nconst G = 71;\nconst H = 72;\nconst I = 73;\nconst J = 74;\nconst K = 75;\nconst L = 76;\nconst M = 77;\nconst N = 78;\nconst O = 79;\nconst P = 80;\nconst Q = 81;\nconst R = 82;\nconst S = 83;\nconst T = 84;\nconst U = 85;\nconst V = 86;\nconst W = 87;\nconst X = 88;\nconst Y = 89;\nconst Z = 90;\nconst META = 91; // WIN_KEY_LEFT\nconst MAC_WK_CMD_LEFT = 91;\nconst MAC_WK_CMD_RIGHT = 93;\nconst CONTEXT_MENU = 93;\nconst NUMPAD_ZERO = 96;\nconst NUMPAD_ONE = 97;\nconst NUMPAD_TWO = 98;\nconst NUMPAD_THREE = 99;\nconst NUMPAD_FOUR = 100;\nconst NUMPAD_FIVE = 101;\nconst NUMPAD_SIX = 102;\nconst NUMPAD_SEVEN = 103;\nconst NUMPAD_EIGHT = 104;\nconst NUMPAD_NINE = 105;\nconst NUMPAD_MULTIPLY = 106;\nconst NUMPAD_PLUS = 107;\nconst NUMPAD_MINUS = 109;\nconst NUMPAD_PERIOD = 110;\nconst NUMPAD_DIVIDE = 111;\nconst F1 = 112;\nconst F2 = 113;\nconst F3 = 114;\nconst F4 = 115;\nconst F5 = 116;\nconst F6 = 117;\nconst F7 = 118;\nconst F8 = 119;\nconst F9 = 120;\nconst F10 = 121;\nconst F11 = 122;\nconst F12 = 123;\nconst NUM_LOCK = 144;\nconst SCROLL_LOCK = 145;\nconst FIRST_MEDIA = 166;\nconst FF_MINUS = 173;\nconst MUTE = 173; // Firefox (Gecko) fires 181 for MUTE\nconst VOLUME_DOWN = 174; // Firefox (Gecko) fires 182 for VOLUME_DOWN\nconst VOLUME_UP = 175; // Firefox (Gecko) fires 183 for VOLUME_UP\nconst FF_MUTE = 181;\nconst FF_VOLUME_DOWN = 182;\nconst LAST_MEDIA = 183;\nconst FF_VOLUME_UP = 183;\nconst SEMICOLON = 186; // Firefox (Gecko) fires 59 for SEMICOLON\nconst EQUALS = 187; // Firefox (Gecko) fires 61 for EQUALS\nconst COMMA = 188;\nconst DASH = 189; // Firefox (Gecko) fires 173 for DASH/MINUS\nconst PERIOD = 190;\nconst SLASH = 191;\nconst APOSTROPHE = 192;\nconst TILDE = 192;\nconst OPEN_SQUARE_BRACKET = 219;\nconst BACKSLASH = 220;\nconst CLOSE_SQUARE_BRACKET = 221;\nconst SINGLE_QUOTE = 222;\nconst MAC_META = 224;\n\n/**\n * Checks whether a modifier key is pressed.\n * @param event Event to be checked.\n */\nfunction hasModifierKey(event, ...modifiers) {\n    if (modifiers.length) {\n        return modifiers.some(modifier => event[modifier]);\n    }\n    return event.altKey || event.shiftKey || event.ctrlKey || event.metaKey;\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { A, ALT, APOSTROPHE, AT_SIGN, B, BACKSLASH, BACKSPACE, C, CAPS_LOCK, CLOSE_SQUARE_BRACKET, COMMA, CONTEXT_MENU, CONTROL, D, DASH, DELETE, DOWN_ARROW, E, EIGHT, END, ENTER, EQUALS, ESCAPE, F, F1, F10, F11, F12, F2, F3, F4, F5, F6, F7, F8, F9, FF_EQUALS, FF_MINUS, FF_MUTE, FF_SEMICOLON, FF_VOLUME_DOWN, FF_VOLUME_UP, FIRST_MEDIA, FIVE, FOUR, G, H, HOME, I, INSERT, J, K, L, LAST_MEDIA, LEFT_ARROW, M, MAC_ENTER, MAC_META, MAC_WK_CMD_LEFT, MAC_WK_CMD_RIGHT, META, MUTE, N, NINE, NUMPAD_DIVIDE, NUMPAD_EIGHT, NUMPAD_FIVE, NUMPAD_FOUR, NUMPAD_MINUS, NUMPAD_MULTIPLY, NUMPAD_NINE, NUMPAD_ONE, NUMPAD_PERIOD, NUMPAD_PLUS, NUMPAD_SEVEN, NUMPAD_SIX, NUMPAD_THREE, NUMPAD_TWO, NUMPAD_ZERO, NUM_CENTER, NUM_LOCK, O, ONE, OPEN_SQUARE_BRACKET, P, PAGE_DOWN, PAGE_UP, PAUSE, PERIOD, PLUS_SIGN, PRINT_SCREEN, Q, QUESTION_MARK, R, RIGHT_ARROW, S, SCROLL_LOCK, SEMICOLON, SEVEN, SHIFT, SINGLE_QUOTE, SIX, SLASH, SPACE, T, TAB, THREE, TILDE, TWO, U, UP_ARROW, V, VOLUME_DOWN, VOLUME_UP, W, X, Y, Z, ZERO, hasModifierKey };\n","import { filter } from './filter';\nexport function skip(count) {\n    return filter((_, index) => count <= index);\n}\n","import { coerceElement, coerceNumberProperty } from '@angular/cdk/coercion';\nimport * as i0 from '@angular/core';\nimport { Injectable, inject, NgZone, EventEmitter, booleanAttribute, Directive, Output, Input, NgModule } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { map, filter, debounceTime } from 'rxjs/operators';\n\n// Angular may add, remove, or edit comment nodes during change detection. We don't care about\n// these changes because they don't affect the user-preceived content, and worse it can cause\n// infinite change detection cycles where the change detection updates a comment, triggering the\n// MutationObserver, triggering another change detection and kicking the cycle off again.\nfunction shouldIgnoreRecord(record) {\n    // Ignore changes to comment text.\n    if (record.type === 'characterData' && record.target instanceof Comment) {\n        return true;\n    }\n    // Ignore addition / removal of comments.\n    if (record.type === 'childList') {\n        for (let i = 0; i < record.addedNodes.length; i++) {\n            if (!(record.addedNodes[i] instanceof Comment)) {\n                return false;\n            }\n        }\n        for (let i = 0; i < record.removedNodes.length; i++) {\n            if (!(record.removedNodes[i] instanceof Comment)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    // Observe everything else.\n    return false;\n}\n/**\n * Factory that creates a new MutationObserver and allows us to stub it out in unit tests.\n * @docs-private\n */\nclass MutationObserverFactory {\n    create(callback) {\n        return typeof MutationObserver === 'undefined' ? null : new MutationObserver(callback);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MutationObserverFactory, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MutationObserverFactory, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MutationObserverFactory, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/** An injectable service that allows watching elements for changes to their content. */\nclass ContentObserver {\n    constructor(_mutationObserverFactory) {\n        this._mutationObserverFactory = _mutationObserverFactory;\n        /** Keeps track of the existing MutationObservers so they can be reused. */\n        this._observedElements = new Map();\n        this._ngZone = inject(NgZone);\n    }\n    ngOnDestroy() {\n        this._observedElements.forEach((_, element) => this._cleanupObserver(element));\n    }\n    observe(elementOrRef) {\n        const element = coerceElement(elementOrRef);\n        return new Observable((observer) => {\n            const stream = this._observeElement(element);\n            const subscription = stream\n                .pipe(map(records => records.filter(record => !shouldIgnoreRecord(record))), filter(records => !!records.length))\n                .subscribe(records => {\n                this._ngZone.run(() => {\n                    observer.next(records);\n                });\n            });\n            return () => {\n                subscription.unsubscribe();\n                this._unobserveElement(element);\n            };\n        });\n    }\n    /**\n     * Observes the given element by using the existing MutationObserver if available, or creating a\n     * new one if not.\n     */\n    _observeElement(element) {\n        return this._ngZone.runOutsideAngular(() => {\n            if (!this._observedElements.has(element)) {\n                const stream = new Subject();\n                const observer = this._mutationObserverFactory.create(mutations => stream.next(mutations));\n                if (observer) {\n                    observer.observe(element, {\n                        characterData: true,\n                        childList: true,\n                        subtree: true,\n                    });\n                }\n                this._observedElements.set(element, { observer, stream, count: 1 });\n            }\n            else {\n                this._observedElements.get(element).count++;\n            }\n            return this._observedElements.get(element).stream;\n        });\n    }\n    /**\n     * Un-observes the given element and cleans up the underlying MutationObserver if nobody else is\n     * observing this element.\n     */\n    _unobserveElement(element) {\n        if (this._observedElements.has(element)) {\n            this._observedElements.get(element).count--;\n            if (!this._observedElements.get(element).count) {\n                this._cleanupObserver(element);\n            }\n        }\n    }\n    /** Clean up the underlying MutationObserver for the specified element. */\n    _cleanupObserver(element) {\n        if (this._observedElements.has(element)) {\n            const { observer, stream } = this._observedElements.get(element);\n            if (observer) {\n                observer.disconnect();\n            }\n            stream.complete();\n            this._observedElements.delete(element);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: ContentObserver, deps: [{ token: MutationObserverFactory }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: ContentObserver, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: ContentObserver, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: MutationObserverFactory }] });\n/**\n * Directive that triggers a callback whenever the content of\n * its associated element has changed.\n */\nclass CdkObserveContent {\n    /**\n     * Whether observing content is disabled. This option can be used\n     * to disconnect the underlying MutationObserver until it is needed.\n     */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        this._disabled ? this._unsubscribe() : this._subscribe();\n    }\n    /** Debounce interval for emitting the changes. */\n    get debounce() {\n        return this._debounce;\n    }\n    set debounce(value) {\n        this._debounce = coerceNumberProperty(value);\n        this._subscribe();\n    }\n    constructor(_contentObserver, _elementRef) {\n        this._contentObserver = _contentObserver;\n        this._elementRef = _elementRef;\n        /** Event emitted for each change in the element's content. */\n        this.event = new EventEmitter();\n        this._disabled = false;\n        this._currentSubscription = null;\n    }\n    ngAfterContentInit() {\n        if (!this._currentSubscription && !this.disabled) {\n            this._subscribe();\n        }\n    }\n    ngOnDestroy() {\n        this._unsubscribe();\n    }\n    _subscribe() {\n        this._unsubscribe();\n        const stream = this._contentObserver.observe(this._elementRef);\n        this._currentSubscription = (this.debounce ? stream.pipe(debounceTime(this.debounce)) : stream).subscribe(this.event);\n    }\n    _unsubscribe() {\n        this._currentSubscription?.unsubscribe();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: CdkObserveContent, deps: [{ token: ContentObserver }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"18.1.0-next.3\", type: CdkObserveContent, isStandalone: true, selector: \"[cdkObserveContent]\", inputs: { disabled: [\"cdkObserveContentDisabled\", \"disabled\", booleanAttribute], debounce: \"debounce\" }, outputs: { event: \"cdkObserveContent\" }, exportAs: [\"cdkObserveContent\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: CdkObserveContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkObserveContent]',\n                    exportAs: 'cdkObserveContent',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: ContentObserver }, { type: i0.ElementRef }], propDecorators: { event: [{\n                type: Output,\n                args: ['cdkObserveContent']\n            }], disabled: [{\n                type: Input,\n                args: [{ alias: 'cdkObserveContentDisabled', transform: booleanAttribute }]\n            }], debounce: [{\n                type: Input\n            }] } });\nclass ObserversModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: ObserversModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: ObserversModule, imports: [CdkObserveContent], exports: [CdkObserveContent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: ObserversModule, providers: [MutationObserverFactory] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: ObserversModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CdkObserveContent],\n                    exports: [CdkObserveContent],\n                    providers: [MutationObserverFactory],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkObserveContent, ContentObserver, MutationObserverFactory, ObserversModule };\n","import { ElementRef } from '@angular/core';\n\n/** Coerces a data-bound value (typically a string) to a boolean. */\nfunction coerceBooleanProperty(value) {\n    return value != null && `${value}` !== 'false';\n}\n\nfunction coerceNumberProperty(value, fallbackValue = 0) {\n    return _isNumberValue(value) ? Number(value) : fallbackValue;\n}\n/**\n * Whether the provided value is considered a number.\n * @docs-private\n */\nfunction _isNumberValue(value) {\n    // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\n    // and other non-number values as NaN, where Number just uses 0) but it considers the string\n    // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\n    return !isNaN(parseFloat(value)) && !isNaN(Number(value));\n}\n\nfunction coerceArray(value) {\n    return Array.isArray(value) ? value : [value];\n}\n\n/** Coerces a value to a CSS pixel value. */\nfunction coerceCssPixelValue(value) {\n    if (value == null) {\n        return '';\n    }\n    return typeof value === 'string' ? value : `${value}px`;\n}\n\n/**\n * Coerces an ElementRef or an Element into an element.\n * Useful for APIs that can accept either a ref or the native element itself.\n */\nfunction coerceElement(elementOrRef) {\n    return elementOrRef instanceof ElementRef ? elementOrRef.nativeElement : elementOrRef;\n}\n\n/**\n * Coerces a value to an array of trimmed non-empty strings.\n * Any input that is not an array, `null` or `undefined` will be turned into a string\n * via `toString()` and subsequently split with the given separator.\n * `null` and `undefined` will result in an empty array.\n * This results in the following outcomes:\n * - `null` -&gt; `[]`\n * - `[null]` -&gt; `[\"null\"]`\n * - `[\"a\", \"b \", \" \"]` -&gt; `[\"a\", \"b\"]`\n * - `[1, [2, 3]]` -&gt; `[\"1\", \"2,3\"]`\n * - `[{ a: 0 }]` -&gt; `[\"[object Object]\"]`\n * - `{ a: 0 }` -&gt; `[\"[object\", \"Object]\"]`\n *\n * Useful for defining CSS classes or table columns.\n * @param value the value to coerce into an array of strings\n * @param separator split-separator if value isn't an array\n */\nfunction coerceStringArray(value, separator = /\\s+/) {\n    const result = [];\n    if (value != null) {\n        const sourceValues = Array.isArray(value) ? value : `${value}`.split(separator);\n        for (const sourceValue of sourceValues) {\n            const trimmedString = `${sourceValue}`.trim();\n            if (trimmedString) {\n                result.push(trimmedString);\n            }\n        }\n    }\n    return result;\n}\n\nexport { _isNumberValue, coerceArray, coerceBooleanProperty, coerceCssPixelValue, coerceElement, coerceNumberProperty, coerceStringArray };\n","import * as i0 from '@angular/core';\nimport { NgModule, CSP_NONCE, Injectable, Optional, Inject } from '@angular/core';\nimport { coerceArray } from '@angular/cdk/coercion';\nimport { Subject, combineLatest, concat, Observable } from 'rxjs';\nimport { take, skip, debounceTime, map, startWith, takeUntil } from 'rxjs/operators';\nimport * as i1 from '@angular/cdk/platform';\n\nclass LayoutModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: LayoutModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: LayoutModule }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: LayoutModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: LayoutModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }] });\n\n/** Global registry for all dynamically-created, injected media queries. */\nconst mediaQueriesForWebkitCompatibility = new Set();\n/** Style tag that holds all of the dynamically-created media queries. */\nlet mediaQueryStyleNode;\n/** A utility for calling matchMedia queries. */\nclass MediaMatcher {\n    constructor(_platform, _nonce) {\n        this._platform = _platform;\n        this._nonce = _nonce;\n        this._matchMedia =\n            this._platform.isBrowser && window.matchMedia\n                ? // matchMedia is bound to the window scope intentionally as it is an illegal invocation to\n                    // call it from a different scope.\n                    window.matchMedia.bind(window)\n                : noopMatchMedia;\n    }\n    /**\n     * Evaluates the given media query and returns the native MediaQueryList from which results\n     * can be retrieved.\n     * Confirms the layout engine will trigger for the selector query provided and returns the\n     * MediaQueryList for the query provided.\n     */\n    matchMedia(query) {\n        if (this._platform.WEBKIT || this._platform.BLINK) {\n            createEmptyStyleRule(query, this._nonce);\n        }\n        return this._matchMedia(query);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MediaMatcher, deps: [{ token: i1.Platform }, { token: CSP_NONCE, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MediaMatcher, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MediaMatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: i1.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CSP_NONCE]\n                }] }] });\n/**\n * Creates an empty stylesheet that is used to work around browser inconsistencies related to\n * `matchMedia`. At the time of writing, it handles the following cases:\n * 1. On WebKit browsers, a media query has to have at least one rule in order for `matchMedia`\n * to fire. We work around it by declaring a dummy stylesheet with a `@media` declaration.\n * 2. In some cases Blink browsers will stop firing the `matchMedia` listener if none of the rules\n * inside the `@media` match existing elements on the page. We work around it by having one rule\n * targeting the `body`. See https://github.com/angular/components/issues/23546.\n */\nfunction createEmptyStyleRule(query, nonce) {\n    if (mediaQueriesForWebkitCompatibility.has(query)) {\n        return;\n    }\n    try {\n        if (!mediaQueryStyleNode) {\n            mediaQueryStyleNode = document.createElement('style');\n            if (nonce) {\n                mediaQueryStyleNode.setAttribute('nonce', nonce);\n            }\n            mediaQueryStyleNode.setAttribute('type', 'text/css');\n            document.head.appendChild(mediaQueryStyleNode);\n        }\n        if (mediaQueryStyleNode.sheet) {\n            mediaQueryStyleNode.sheet.insertRule(`@media ${query} {body{ }}`, 0);\n            mediaQueriesForWebkitCompatibility.add(query);\n        }\n    }\n    catch (e) {\n        console.error(e);\n    }\n}\n/** No-op matchMedia replacement for non-browser platforms. */\nfunction noopMatchMedia(query) {\n    // Use `as any` here to avoid adding additional necessary properties for\n    // the noop matcher.\n    return {\n        matches: query === 'all' || query === '',\n        media: query,\n        addListener: () => { },\n        removeListener: () => { },\n    };\n}\n\n/** Utility for checking the matching state of @media queries. */\nclass BreakpointObserver {\n    constructor(_mediaMatcher, _zone) {\n        this._mediaMatcher = _mediaMatcher;\n        this._zone = _zone;\n        /**  A map of all media queries currently being listened for. */\n        this._queries = new Map();\n        /** A subject for all other observables to takeUntil based on. */\n        this._destroySubject = new Subject();\n    }\n    /** Completes the active subject, signalling to all other observables to complete. */\n    ngOnDestroy() {\n        this._destroySubject.next();\n        this._destroySubject.complete();\n    }\n    /**\n     * Whether one or more media queries match the current viewport size.\n     * @param value One or more media queries to check.\n     * @returns Whether any of the media queries match.\n     */\n    isMatched(value) {\n        const queries = splitQueries(coerceArray(value));\n        return queries.some(mediaQuery => this._registerQuery(mediaQuery).mql.matches);\n    }\n    /**\n     * Gets an observable of results for the given queries that will emit new results for any changes\n     * in matching of the given queries.\n     * @param value One or more media queries to check.\n     * @returns A stream of matches for the given queries.\n     */\n    observe(value) {\n        const queries = splitQueries(coerceArray(value));\n        const observables = queries.map(query => this._registerQuery(query).observable);\n        let stateObservable = combineLatest(observables);\n        // Emit the first state immediately, and then debounce the subsequent emissions.\n        stateObservable = concat(stateObservable.pipe(take(1)), stateObservable.pipe(skip(1), debounceTime(0)));\n        return stateObservable.pipe(map(breakpointStates => {\n            const response = {\n                matches: false,\n                breakpoints: {},\n            };\n            breakpointStates.forEach(({ matches, query }) => {\n                response.matches = response.matches || matches;\n                response.breakpoints[query] = matches;\n            });\n            return response;\n        }));\n    }\n    /** Registers a specific query to be listened for. */\n    _registerQuery(query) {\n        // Only set up a new MediaQueryList if it is not already being listened for.\n        if (this._queries.has(query)) {\n            return this._queries.get(query);\n        }\n        const mql = this._mediaMatcher.matchMedia(query);\n        // Create callback for match changes and add it is as a listener.\n        const queryObservable = new Observable((observer) => {\n            // Listener callback methods are wrapped to be placed back in ngZone. Callbacks must be placed\n            // back into the zone because matchMedia is only included in Zone.js by loading the\n            // webapis-media-query.js file alongside the zone.js file.  Additionally, some browsers do not\n            // have MediaQueryList inherit from EventTarget, which causes inconsistencies in how Zone.js\n            // patches it.\n            const handler = (e) => this._zone.run(() => observer.next(e));\n            mql.addListener(handler);\n            return () => {\n                mql.removeListener(handler);\n            };\n        }).pipe(startWith(mql), map(({ matches }) => ({ query, matches })), takeUntil(this._destroySubject));\n        // Add the MediaQueryList to the set of queries.\n        const output = { observable: queryObservable, mql };\n        this._queries.set(query, output);\n        return output;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: BreakpointObserver, deps: [{ token: MediaMatcher }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: BreakpointObserver, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: BreakpointObserver, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: MediaMatcher }, { type: i0.NgZone }] });\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n */\nfunction splitQueries(queries) {\n    return queries\n        .map(query => query.split(','))\n        .reduce((a1, a2) => a1.concat(a2))\n        .map(query => query.trim());\n}\n\n// PascalCase is being used as Breakpoints is used like an enum.\n// tslint:disable-next-line:variable-name\nconst Breakpoints = {\n    XSmall: '(max-width: 599.98px)',\n    Small: '(min-width: 600px) and (max-width: 959.98px)',\n    Medium: '(min-width: 960px) and (max-width: 1279.98px)',\n    Large: '(min-width: 1280px) and (max-width: 1919.98px)',\n    XLarge: '(min-width: 1920px)',\n    Handset: '(max-width: 599.98px) and (orientation: portrait), ' +\n        '(max-width: 959.98px) and (orientation: landscape)',\n    Tablet: '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait), ' +\n        '(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',\n    Web: '(min-width: 840px) and (orientation: portrait), ' +\n        '(min-width: 1280px) and (orientation: landscape)',\n    HandsetPortrait: '(max-width: 599.98px) and (orientation: portrait)',\n    TabletPortrait: '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait)',\n    WebPortrait: '(min-width: 840px) and (orientation: portrait)',\n    HandsetLandscape: '(max-width: 959.98px) and (orientation: landscape)',\n    TabletLandscape: '(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',\n    WebLandscape: '(min-width: 1280px) and (orientation: landscape)',\n};\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BreakpointObserver, Breakpoints, LayoutModule, MediaMatcher };\n","import { asyncScheduler } from '../scheduler/async';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function debounceTime(dueTime, scheduler = asyncScheduler) {\n    return operate((source, subscriber) => {\n        let activeTask = null;\n        let lastValue = null;\n        let lastTime = null;\n        const emit = () => {\n            if (activeTask) {\n                activeTask.unsubscribe();\n                activeTask = null;\n                const value = lastValue;\n                lastValue = null;\n                subscriber.next(value);\n            }\n        };\n        function emitWhenIdle() {\n            const targetTime = lastTime + dueTime;\n            const now = scheduler.now();\n            if (now < targetTime) {\n                activeTask = this.schedule(undefined, targetTime - now);\n                subscriber.add(activeTask);\n                return;\n            }\n            emit();\n        }\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n            lastValue = value;\n            lastTime = scheduler.now();\n            if (!activeTask) {\n                activeTask = scheduler.schedule(emitWhenIdle, dueTime);\n                subscriber.add(activeTask);\n            }\n        }, () => {\n            emit();\n            subscriber.complete();\n        }, undefined, () => {\n            lastValue = activeTask = null;\n        }));\n    });\n}\n","import { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, APP_ID, Injectable, Inject, QueryList, isSignal, effect, afterNextRender, Injector, booleanAttribute, Directive, Input, InjectionToken, Optional, EventEmitter, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/cdk/platform';\nimport { Platform, _getFocusedElementPierceShadowDom, normalizePassiveListenerOptions, _getEventTarget, _getShadowRoot } from '@angular/cdk/platform';\nimport { Subject, Subscription, BehaviorSubject, of } from 'rxjs';\nimport { hasModifierKey, A, Z, ZERO, NINE, PAGE_DOWN, PAGE_UP, END, HOME, LEFT_ARROW, RIGHT_ARROW, UP_ARROW, DOWN_ARROW, TAB, ALT, CONTROL, MAC_META, META, SHIFT } from '@angular/cdk/keycodes';\nimport { tap, debounceTime, filter, map, skip, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport * as i1$1 from '@angular/cdk/observers';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { coerceElement } from '@angular/cdk/coercion';\nimport { BreakpointObserver } from '@angular/cdk/layout';\n\n/** IDs are delimited by an empty space, as per the spec. */\nconst ID_DELIMITER = ' ';\n/**\n * Adds the given ID to the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction addAriaReferencedId(el, attr, id) {\n    const ids = getAriaReferenceIds(el, attr);\n    id = id.trim();\n    if (ids.some(existingId => existingId.trim() === id)) {\n        return;\n    }\n    ids.push(id);\n    el.setAttribute(attr, ids.join(ID_DELIMITER));\n}\n/**\n * Removes the given ID from the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction removeAriaReferencedId(el, attr, id) {\n    const ids = getAriaReferenceIds(el, attr);\n    id = id.trim();\n    const filteredIds = ids.filter(val => val !== id);\n    if (filteredIds.length) {\n        el.setAttribute(attr, filteredIds.join(ID_DELIMITER));\n    }\n    else {\n        el.removeAttribute(attr);\n    }\n}\n/**\n * Gets the list of IDs referenced by the given ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction getAriaReferenceIds(el, attr) {\n    // Get string array of all individual ids (whitespace delimited) in the attribute value\n    const attrValue = el.getAttribute(attr);\n    return attrValue?.match(/\\S+/g) ?? [];\n}\n\n/**\n * ID used for the body container where all messages are appended.\n * @deprecated No longer being used. To be removed.\n * @breaking-change 14.0.0\n */\nconst MESSAGES_CONTAINER_ID = 'cdk-describedby-message-container';\n/**\n * ID prefix used for each created message element.\n * @deprecated To be turned into a private variable.\n * @breaking-change 14.0.0\n */\nconst CDK_DESCRIBEDBY_ID_PREFIX = 'cdk-describedby-message';\n/**\n * Attribute given to each host element that is described by a message element.\n * @deprecated To be turned into a private variable.\n * @breaking-change 14.0.0\n */\nconst CDK_DESCRIBEDBY_HOST_ATTRIBUTE = 'cdk-describedby-host';\n/** Global incremental identifier for each registered message element. */\nlet nextId = 0;\n/**\n * Utility that creates visually hidden elements with a message content. Useful for elements that\n * want to use aria-describedby to further describe themselves without adding additional visual\n * content.\n */\nclass AriaDescriber {\n    constructor(_document, \n    /**\n     * @deprecated To be turned into a required parameter.\n     * @breaking-change 14.0.0\n     */\n    _platform) {\n        this._platform = _platform;\n        /** Map of all registered message elements that have been placed into the document. */\n        this._messageRegistry = new Map();\n        /** Container for all registered messages. */\n        this._messagesContainer = null;\n        /** Unique ID for the service. */\n        this._id = `${nextId++}`;\n        this._document = _document;\n        this._id = inject(APP_ID) + '-' + nextId++;\n    }\n    describe(hostElement, message, role) {\n        if (!this._canBeDescribed(hostElement, message)) {\n            return;\n        }\n        const key = getKey(message, role);\n        if (typeof message !== 'string') {\n            // We need to ensure that the element has an ID.\n            setMessageId(message, this._id);\n            this._messageRegistry.set(key, { messageElement: message, referenceCount: 0 });\n        }\n        else if (!this._messageRegistry.has(key)) {\n            this._createMessageElement(message, role);\n        }\n        if (!this._isElementDescribedByMessage(hostElement, key)) {\n            this._addMessageReference(hostElement, key);\n        }\n    }\n    removeDescription(hostElement, message, role) {\n        if (!message || !this._isElementNode(hostElement)) {\n            return;\n        }\n        const key = getKey(message, role);\n        if (this._isElementDescribedByMessage(hostElement, key)) {\n            this._removeMessageReference(hostElement, key);\n        }\n        // If the message is a string, it means that it's one that we created for the\n        // consumer so we can remove it safely, otherwise we should leave it in place.\n        if (typeof message === 'string') {\n            const registeredMessage = this._messageRegistry.get(key);\n            if (registeredMessage && registeredMessage.referenceCount === 0) {\n                this._deleteMessageElement(key);\n            }\n        }\n        if (this._messagesContainer?.childNodes.length === 0) {\n            this._messagesContainer.remove();\n            this._messagesContainer = null;\n        }\n    }\n    /** Unregisters all created message elements and removes the message container. */\n    ngOnDestroy() {\n        const describedElements = this._document.querySelectorAll(`[${CDK_DESCRIBEDBY_HOST_ATTRIBUTE}=\"${this._id}\"]`);\n        for (let i = 0; i < describedElements.length; i++) {\n            this._removeCdkDescribedByReferenceIds(describedElements[i]);\n            describedElements[i].removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n        }\n        this._messagesContainer?.remove();\n        this._messagesContainer = null;\n        this._messageRegistry.clear();\n    }\n    /**\n     * Creates a new element in the visually hidden message container element with the message\n     * as its content and adds it to the message registry.\n     */\n    _createMessageElement(message, role) {\n        const messageElement = this._document.createElement('div');\n        setMessageId(messageElement, this._id);\n        messageElement.textContent = message;\n        if (role) {\n            messageElement.setAttribute('role', role);\n        }\n        this._createMessagesContainer();\n        this._messagesContainer.appendChild(messageElement);\n        this._messageRegistry.set(getKey(message, role), { messageElement, referenceCount: 0 });\n    }\n    /** Deletes the message element from the global messages container. */\n    _deleteMessageElement(key) {\n        this._messageRegistry.get(key)?.messageElement?.remove();\n        this._messageRegistry.delete(key);\n    }\n    /** Creates the global container for all aria-describedby messages. */\n    _createMessagesContainer() {\n        if (this._messagesContainer) {\n            return;\n        }\n        const containerClassName = 'cdk-describedby-message-container';\n        const serverContainers = this._document.querySelectorAll(`.${containerClassName}[platform=\"server\"]`);\n        for (let i = 0; i < serverContainers.length; i++) {\n            // When going from the server to the client, we may end up in a situation where there's\n            // already a container on the page, but we don't have a reference to it. Clear the\n            // old container so we don't get duplicates. Doing this, instead of emptying the previous\n            // container, should be slightly faster.\n            serverContainers[i].remove();\n        }\n        const messagesContainer = this._document.createElement('div');\n        // We add `visibility: hidden` in order to prevent text in this container from\n        // being searchable by the browser's Ctrl + F functionality.\n        // Screen-readers will still read the description for elements with aria-describedby even\n        // when the description element is not visible.\n        messagesContainer.style.visibility = 'hidden';\n        // Even though we use `visibility: hidden`, we still apply `cdk-visually-hidden` so that\n        // the description element doesn't impact page layout.\n        messagesContainer.classList.add(containerClassName);\n        messagesContainer.classList.add('cdk-visually-hidden');\n        // @breaking-change 14.0.0 Remove null check for `_platform`.\n        if (this._platform && !this._platform.isBrowser) {\n            messagesContainer.setAttribute('platform', 'server');\n        }\n        this._document.body.appendChild(messagesContainer);\n        this._messagesContainer = messagesContainer;\n    }\n    /** Removes all cdk-describedby messages that are hosted through the element. */\n    _removeCdkDescribedByReferenceIds(element) {\n        // Remove all aria-describedby reference IDs that are prefixed by CDK_DESCRIBEDBY_ID_PREFIX\n        const originalReferenceIds = getAriaReferenceIds(element, 'aria-describedby').filter(id => id.indexOf(CDK_DESCRIBEDBY_ID_PREFIX) != 0);\n        element.setAttribute('aria-describedby', originalReferenceIds.join(' '));\n    }\n    /**\n     * Adds a message reference to the element using aria-describedby and increments the registered\n     * message's reference count.\n     */\n    _addMessageReference(element, key) {\n        const registeredMessage = this._messageRegistry.get(key);\n        // Add the aria-describedby reference and set the\n        // describedby_host attribute to mark the element.\n        addAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n        element.setAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE, this._id);\n        registeredMessage.referenceCount++;\n    }\n    /**\n     * Removes a message reference from the element using aria-describedby\n     * and decrements the registered message's reference count.\n     */\n    _removeMessageReference(element, key) {\n        const registeredMessage = this._messageRegistry.get(key);\n        registeredMessage.referenceCount--;\n        removeAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n        element.removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n    }\n    /** Returns true if the element has been described by the provided message ID. */\n    _isElementDescribedByMessage(element, key) {\n        const referenceIds = getAriaReferenceIds(element, 'aria-describedby');\n        const registeredMessage = this._messageRegistry.get(key);\n        const messageId = registeredMessage && registeredMessage.messageElement.id;\n        return !!messageId && referenceIds.indexOf(messageId) != -1;\n    }\n    /** Determines whether a message can be described on a particular element. */\n    _canBeDescribed(element, message) {\n        if (!this._isElementNode(element)) {\n            return false;\n        }\n        if (message && typeof message === 'object') {\n            // We'd have to make some assumptions about the description element's text, if the consumer\n            // passed in an element. Assume that if an element is passed in, the consumer has verified\n            // that it can be used as a description.\n            return true;\n        }\n        const trimmedMessage = message == null ? '' : `${message}`.trim();\n        const ariaLabel = element.getAttribute('aria-label');\n        // We shouldn't set descriptions if they're exactly the same as the `aria-label` of the\n        // element, because screen readers will end up reading out the same text twice in a row.\n        return trimmedMessage ? !ariaLabel || ariaLabel.trim() !== trimmedMessage : false;\n    }\n    /** Checks whether a node is an Element node. */\n    _isElementNode(element) {\n        return element.nodeType === this._document.ELEMENT_NODE;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: AriaDescriber, deps: [{ token: DOCUMENT }, { token: i1.Platform }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: AriaDescriber, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: AriaDescriber, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i1.Platform }] });\n/** Gets a key that can be used to look messages up in the registry. */\nfunction getKey(message, role) {\n    return typeof message === 'string' ? `${role || ''}/${message}` : message;\n}\n/** Assigns a unique ID to an element, if it doesn't have one already. */\nfunction setMessageId(element, serviceId) {\n    if (!element.id) {\n        element.id = `${CDK_DESCRIBEDBY_ID_PREFIX}-${serviceId}-${nextId++}`;\n    }\n}\n\n/**\n * This class manages keyboard events for selectable lists. If you pass it a query list\n * of items, it will set the active item correctly when arrow events occur.\n */\nclass ListKeyManager {\n    constructor(_items, injector) {\n        this._items = _items;\n        this._activeItemIndex = -1;\n        this._activeItem = null;\n        this._wrap = false;\n        this._letterKeyStream = new Subject();\n        this._typeaheadSubscription = Subscription.EMPTY;\n        this._vertical = true;\n        this._allowedModifierKeys = [];\n        this._homeAndEnd = false;\n        this._pageUpAndDown = { enabled: false, delta: 10 };\n        /**\n         * Predicate function that can be used to check whether an item should be skipped\n         * by the key manager. By default, disabled items are skipped.\n         */\n        this._skipPredicateFn = (item) => item.disabled;\n        // Buffer for the letters that the user has pressed when the typeahead option is turned on.\n        this._pressedLetters = [];\n        /**\n         * Stream that emits any time the TAB key is pressed, so components can react\n         * when focus is shifted off of the list.\n         */\n        this.tabOut = new Subject();\n        /** Stream that emits whenever the active item of the list manager changes. */\n        this.change = new Subject();\n        // We allow for the items to be an array because, in some cases, the consumer may\n        // not have access to a QueryList of the items they want to manage (e.g. when the\n        // items aren't being collected via `ViewChildren` or `ContentChildren`).\n        if (_items instanceof QueryList) {\n            this._itemChangesSubscription = _items.changes.subscribe((newItems) => this._itemsChanged(newItems.toArray()));\n        }\n        else if (isSignal(_items)) {\n            if (!injector && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw new Error('ListKeyManager constructed with a signal must receive an injector');\n            }\n            this._effectRef = effect(() => this._itemsChanged(_items()), { injector });\n        }\n    }\n    /**\n     * Sets the predicate function that determines which items should be skipped by the\n     * list key manager.\n     * @param predicate Function that determines whether the given item should be skipped.\n     */\n    skipPredicate(predicate) {\n        this._skipPredicateFn = predicate;\n        return this;\n    }\n    /**\n     * Configures wrapping mode, which determines whether the active item will wrap to\n     * the other end of list when there are no more items in the given direction.\n     * @param shouldWrap Whether the list should wrap when reaching the end.\n     */\n    withWrap(shouldWrap = true) {\n        this._wrap = shouldWrap;\n        return this;\n    }\n    /**\n     * Configures whether the key manager should be able to move the selection vertically.\n     * @param enabled Whether vertical selection should be enabled.\n     */\n    withVerticalOrientation(enabled = true) {\n        this._vertical = enabled;\n        return this;\n    }\n    /**\n     * Configures the key manager to move the selection horizontally.\n     * Passing in `null` will disable horizontal movement.\n     * @param direction Direction in which the selection can be moved.\n     */\n    withHorizontalOrientation(direction) {\n        this._horizontal = direction;\n        return this;\n    }\n    /**\n     * Modifier keys which are allowed to be held down and whose default actions will be prevented\n     * as the user is pressing the arrow keys. Defaults to not allowing any modifier keys.\n     */\n    withAllowedModifierKeys(keys) {\n        this._allowedModifierKeys = keys;\n        return this;\n    }\n    /**\n     * Turns on typeahead mode which allows users to set the active item by typing.\n     * @param debounceInterval Time to wait after the last keystroke before setting the active item.\n     */\n    withTypeAhead(debounceInterval = 200) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            const items = this._getItemsArray();\n            if (items.length > 0 && items.some(item => typeof item.getLabel !== 'function')) {\n                throw Error('ListKeyManager items in typeahead mode must implement the `getLabel` method.');\n            }\n        }\n        this._typeaheadSubscription.unsubscribe();\n        // Debounce the presses of non-navigational keys, collect the ones that correspond to letters\n        // and convert those letters back into a string. Afterwards find the first item that starts\n        // with that string and select it.\n        this._typeaheadSubscription = this._letterKeyStream\n            .pipe(tap(letter => this._pressedLetters.push(letter)), debounceTime(debounceInterval), filter(() => this._pressedLetters.length > 0), map(() => this._pressedLetters.join('')))\n            .subscribe(inputString => {\n            const items = this._getItemsArray();\n            // Start at 1 because we want to start searching at the item immediately\n            // following the current active item.\n            for (let i = 1; i < items.length + 1; i++) {\n                const index = (this._activeItemIndex + i) % items.length;\n                const item = items[index];\n                if (!this._skipPredicateFn(item) &&\n                    item.getLabel().toUpperCase().trim().indexOf(inputString) === 0) {\n                    this.setActiveItem(index);\n                    break;\n                }\n            }\n            this._pressedLetters = [];\n        });\n        return this;\n    }\n    /** Cancels the current typeahead sequence. */\n    cancelTypeahead() {\n        this._pressedLetters = [];\n        return this;\n    }\n    /**\n     * Configures the key manager to activate the first and last items\n     * respectively when the Home or End key is pressed.\n     * @param enabled Whether pressing the Home or End key activates the first/last item.\n     */\n    withHomeAndEnd(enabled = true) {\n        this._homeAndEnd = enabled;\n        return this;\n    }\n    /**\n     * Configures the key manager to activate every 10th, configured or first/last element in up/down direction\n     * respectively when the Page-Up or Page-Down key is pressed.\n     * @param enabled Whether pressing the Page-Up or Page-Down key activates the first/last item.\n     * @param delta Whether pressing the Home or End key activates the first/last item.\n     */\n    withPageUpDown(enabled = true, delta = 10) {\n        this._pageUpAndDown = { enabled, delta };\n        return this;\n    }\n    setActiveItem(item) {\n        const previousActiveItem = this._activeItem;\n        this.updateActiveItem(item);\n        if (this._activeItem !== previousActiveItem) {\n            this.change.next(this._activeItemIndex);\n        }\n    }\n    /**\n     * Sets the active item depending on the key event passed in.\n     * @param event Keyboard event to be used for determining which element should be active.\n     */\n    onKeydown(event) {\n        const keyCode = event.keyCode;\n        const modifiers = ['altKey', 'ctrlKey', 'metaKey', 'shiftKey'];\n        const isModifierAllowed = modifiers.every(modifier => {\n            return !event[modifier] || this._allowedModifierKeys.indexOf(modifier) > -1;\n        });\n        switch (keyCode) {\n            case TAB:\n                this.tabOut.next();\n                return;\n            case DOWN_ARROW:\n                if (this._vertical && isModifierAllowed) {\n                    this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case UP_ARROW:\n                if (this._vertical && isModifierAllowed) {\n                    this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case RIGHT_ARROW:\n                if (this._horizontal && isModifierAllowed) {\n                    this._horizontal === 'rtl' ? this.setPreviousItemActive() : this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case LEFT_ARROW:\n                if (this._horizontal && isModifierAllowed) {\n                    this._horizontal === 'rtl' ? this.setNextItemActive() : this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case HOME:\n                if (this._homeAndEnd && isModifierAllowed) {\n                    this.setFirstItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case END:\n                if (this._homeAndEnd && isModifierAllowed) {\n                    this.setLastItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case PAGE_UP:\n                if (this._pageUpAndDown.enabled && isModifierAllowed) {\n                    const targetIndex = this._activeItemIndex - this._pageUpAndDown.delta;\n                    this._setActiveItemByIndex(targetIndex > 0 ? targetIndex : 0, 1);\n                    break;\n                }\n                else {\n                    return;\n                }\n            case PAGE_DOWN:\n                if (this._pageUpAndDown.enabled && isModifierAllowed) {\n                    const targetIndex = this._activeItemIndex + this._pageUpAndDown.delta;\n                    const itemsLength = this._getItemsArray().length;\n                    this._setActiveItemByIndex(targetIndex < itemsLength ? targetIndex : itemsLength - 1, -1);\n                    break;\n                }\n                else {\n                    return;\n                }\n            default:\n                if (isModifierAllowed || hasModifierKey(event, 'shiftKey')) {\n                    // Attempt to use the `event.key` which also maps it to the user's keyboard language,\n                    // otherwise fall back to resolving alphanumeric characters via the keyCode.\n                    if (event.key && event.key.length === 1) {\n                        this._letterKeyStream.next(event.key.toLocaleUpperCase());\n                    }\n                    else if ((keyCode >= A && keyCode <= Z) || (keyCode >= ZERO && keyCode <= NINE)) {\n                        this._letterKeyStream.next(String.fromCharCode(keyCode));\n                    }\n                }\n                // Note that we return here, in order to avoid preventing\n                // the default action of non-navigational keys.\n                return;\n        }\n        this._pressedLetters = [];\n        event.preventDefault();\n    }\n    /** Index of the currently active item. */\n    get activeItemIndex() {\n        return this._activeItemIndex;\n    }\n    /** The active item. */\n    get activeItem() {\n        return this._activeItem;\n    }\n    /** Gets whether the user is currently typing into the manager using the typeahead feature. */\n    isTyping() {\n        return this._pressedLetters.length > 0;\n    }\n    /** Sets the active item to the first enabled item in the list. */\n    setFirstItemActive() {\n        this._setActiveItemByIndex(0, 1);\n    }\n    /** Sets the active item to the last enabled item in the list. */\n    setLastItemActive() {\n        this._setActiveItemByIndex(this._getItemsArray().length - 1, -1);\n    }\n    /** Sets the active item to the next enabled item in the list. */\n    setNextItemActive() {\n        this._activeItemIndex < 0 ? this.setFirstItemActive() : this._setActiveItemByDelta(1);\n    }\n    /** Sets the active item to a previous enabled item in the list. */\n    setPreviousItemActive() {\n        this._activeItemIndex < 0 && this._wrap\n            ? this.setLastItemActive()\n            : this._setActiveItemByDelta(-1);\n    }\n    updateActiveItem(item) {\n        const itemArray = this._getItemsArray();\n        const index = typeof item === 'number' ? item : itemArray.indexOf(item);\n        const activeItem = itemArray[index];\n        // Explicitly check for `null` and `undefined` because other falsy values are valid.\n        this._activeItem = activeItem == null ? null : activeItem;\n        this._activeItemIndex = index;\n    }\n    /** Cleans up the key manager. */\n    destroy() {\n        this._typeaheadSubscription.unsubscribe();\n        this._itemChangesSubscription?.unsubscribe();\n        this._effectRef?.destroy();\n        this._letterKeyStream.complete();\n        this.tabOut.complete();\n        this.change.complete();\n        this._pressedLetters = [];\n    }\n    /**\n     * This method sets the active item, given a list of items and the delta between the\n     * currently active item and the new active item. It will calculate differently\n     * depending on whether wrap mode is turned on.\n     */\n    _setActiveItemByDelta(delta) {\n        this._wrap ? this._setActiveInWrapMode(delta) : this._setActiveInDefaultMode(delta);\n    }\n    /**\n     * Sets the active item properly given \"wrap\" mode. In other words, it will continue to move\n     * down the list until it finds an item that is not disabled, and it will wrap if it\n     * encounters either end of the list.\n     */\n    _setActiveInWrapMode(delta) {\n        const items = this._getItemsArray();\n        for (let i = 1; i <= items.length; i++) {\n            const index = (this._activeItemIndex + delta * i + items.length) % items.length;\n            const item = items[index];\n            if (!this._skipPredicateFn(item)) {\n                this.setActiveItem(index);\n                return;\n            }\n        }\n    }\n    /**\n     * Sets the active item properly given the default mode. In other words, it will\n     * continue to move down the list until it finds an item that is not disabled. If\n     * it encounters either end of the list, it will stop and not wrap.\n     */\n    _setActiveInDefaultMode(delta) {\n        this._setActiveItemByIndex(this._activeItemIndex + delta, delta);\n    }\n    /**\n     * Sets the active item to the first enabled item starting at the index specified. If the\n     * item is disabled, it will move in the fallbackDelta direction until it either\n     * finds an enabled item or encounters the end of the list.\n     */\n    _setActiveItemByIndex(index, fallbackDelta) {\n        const items = this._getItemsArray();\n        if (!items[index]) {\n            return;\n        }\n        while (this._skipPredicateFn(items[index])) {\n            index += fallbackDelta;\n            if (!items[index]) {\n                return;\n            }\n        }\n        this.setActiveItem(index);\n    }\n    /** Returns the items as an array. */\n    _getItemsArray() {\n        if (isSignal(this._items)) {\n            return this._items();\n        }\n        return this._items instanceof QueryList ? this._items.toArray() : this._items;\n    }\n    /** Callback for when the items have changed. */\n    _itemsChanged(newItems) {\n        if (this._activeItem) {\n            const newIndex = newItems.indexOf(this._activeItem);\n            if (newIndex > -1 && newIndex !== this._activeItemIndex) {\n                this._activeItemIndex = newIndex;\n            }\n        }\n    }\n}\n\nclass ActiveDescendantKeyManager extends ListKeyManager {\n    setActiveItem(index) {\n        if (this.activeItem) {\n            this.activeItem.setInactiveStyles();\n        }\n        super.setActiveItem(index);\n        if (this.activeItem) {\n            this.activeItem.setActiveStyles();\n        }\n    }\n}\n\nclass FocusKeyManager extends ListKeyManager {\n    constructor() {\n        super(...arguments);\n        this._origin = 'program';\n    }\n    /**\n     * Sets the focus origin that will be passed in to the items for any subsequent `focus` calls.\n     * @param origin Focus origin to be used when focusing items.\n     */\n    setFocusOrigin(origin) {\n        this._origin = origin;\n        return this;\n    }\n    setActiveItem(item) {\n        super.setActiveItem(item);\n        if (this.activeItem) {\n            this.activeItem.focus(this._origin);\n        }\n    }\n}\n\n/**\n * Configuration for the isFocusable method.\n */\nclass IsFocusableConfig {\n    constructor() {\n        /**\n         * Whether to count an element as focusable even if it is not currently visible.\n         */\n        this.ignoreVisibility = false;\n    }\n}\n// The InteractivityChecker leans heavily on the ally.js accessibility utilities.\n// Methods like `isTabbable` are only covering specific edge-cases for the browsers which are\n// supported.\n/**\n * Utility for checking the interactivity of an element, such as whether it is focusable or\n * tabbable.\n */\nclass InteractivityChecker {\n    constructor(_platform) {\n        this._platform = _platform;\n    }\n    /**\n     * Gets whether an element is disabled.\n     *\n     * @param element Element to be checked.\n     * @returns Whether the element is disabled.\n     */\n    isDisabled(element) {\n        // This does not capture some cases, such as a non-form control with a disabled attribute or\n        // a form control inside of a disabled form, but should capture the most common cases.\n        return element.hasAttribute('disabled');\n    }\n    /**\n     * Gets whether an element is visible for the purposes of interactivity.\n     *\n     * This will capture states like `display: none` and `visibility: hidden`, but not things like\n     * being clipped by an `overflow: hidden` parent or being outside the viewport.\n     *\n     * @returns Whether the element is visible.\n     */\n    isVisible(element) {\n        return hasGeometry(element) && getComputedStyle(element).visibility === 'visible';\n    }\n    /**\n     * Gets whether an element can be reached via Tab key.\n     * Assumes that the element has already been checked with isFocusable.\n     *\n     * @param element Element to be checked.\n     * @returns Whether the element is tabbable.\n     */\n    isTabbable(element) {\n        // Nothing is tabbable on the server 😎\n        if (!this._platform.isBrowser) {\n            return false;\n        }\n        const frameElement = getFrameElement(getWindow(element));\n        if (frameElement) {\n            // Frame elements inherit their tabindex onto all child elements.\n            if (getTabIndexValue(frameElement) === -1) {\n                return false;\n            }\n            // Browsers disable tabbing to an element inside of an invisible frame.\n            if (!this.isVisible(frameElement)) {\n                return false;\n            }\n        }\n        let nodeName = element.nodeName.toLowerCase();\n        let tabIndexValue = getTabIndexValue(element);\n        if (element.hasAttribute('contenteditable')) {\n            return tabIndexValue !== -1;\n        }\n        if (nodeName === 'iframe' || nodeName === 'object') {\n            // The frame or object's content may be tabbable depending on the content, but it's\n            // not possibly to reliably detect the content of the frames. We always consider such\n            // elements as non-tabbable.\n            return false;\n        }\n        // In iOS, the browser only considers some specific elements as tabbable.\n        if (this._platform.WEBKIT && this._platform.IOS && !isPotentiallyTabbableIOS(element)) {\n            return false;\n        }\n        if (nodeName === 'audio') {\n            // Audio elements without controls enabled are never tabbable, regardless\n            // of the tabindex attribute explicitly being set.\n            if (!element.hasAttribute('controls')) {\n                return false;\n            }\n            // Audio elements with controls are by default tabbable unless the\n            // tabindex attribute is set to `-1` explicitly.\n            return tabIndexValue !== -1;\n        }\n        if (nodeName === 'video') {\n            // For all video elements, if the tabindex attribute is set to `-1`, the video\n            // is not tabbable. Note: We cannot rely on the default `HTMLElement.tabIndex`\n            // property as that one is set to `-1` in Chrome, Edge and Safari v13.1. The\n            // tabindex attribute is the source of truth here.\n            if (tabIndexValue === -1) {\n                return false;\n            }\n            // If the tabindex is explicitly set, and not `-1` (as per check before), the\n            // video element is always tabbable (regardless of whether it has controls or not).\n            if (tabIndexValue !== null) {\n                return true;\n            }\n            // Otherwise (when no explicit tabindex is set), a video is only tabbable if it\n            // has controls enabled. Firefox is special as videos are always tabbable regardless\n            // of whether there are controls or not.\n            return this._platform.FIREFOX || element.hasAttribute('controls');\n        }\n        return element.tabIndex >= 0;\n    }\n    /**\n     * Gets whether an element can be focused by the user.\n     *\n     * @param element Element to be checked.\n     * @param config The config object with options to customize this method's behavior\n     * @returns Whether the element is focusable.\n     */\n    isFocusable(element, config) {\n        // Perform checks in order of left to most expensive.\n        // Again, naive approach that does not capture many edge cases and browser quirks.\n        return (isPotentiallyFocusable(element) &&\n            !this.isDisabled(element) &&\n            (config?.ignoreVisibility || this.isVisible(element)));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: InteractivityChecker, deps: [{ token: i1.Platform }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: InteractivityChecker, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: InteractivityChecker, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: i1.Platform }] });\n/**\n * Returns the frame element from a window object. Since browsers like MS Edge throw errors if\n * the frameElement property is being accessed from a different host address, this property\n * should be accessed carefully.\n */\nfunction getFrameElement(window) {\n    try {\n        return window.frameElement;\n    }\n    catch {\n        return null;\n    }\n}\n/** Checks whether the specified element has any geometry / rectangles. */\nfunction hasGeometry(element) {\n    // Use logic from jQuery to check for an invisible element.\n    // See https://github.com/jquery/jquery/blob/master/src/css/hiddenVisibleSelectors.js#L12\n    return !!(element.offsetWidth ||\n        element.offsetHeight ||\n        (typeof element.getClientRects === 'function' && element.getClientRects().length));\n}\n/** Gets whether an element's  */\nfunction isNativeFormElement(element) {\n    let nodeName = element.nodeName.toLowerCase();\n    return (nodeName === 'input' ||\n        nodeName === 'select' ||\n        nodeName === 'button' ||\n        nodeName === 'textarea');\n}\n/** Gets whether an element is an `<input type=\"hidden\">`. */\nfunction isHiddenInput(element) {\n    return isInputElement(element) && element.type == 'hidden';\n}\n/** Gets whether an element is an anchor that has an href attribute. */\nfunction isAnchorWithHref(element) {\n    return isAnchorElement(element) && element.hasAttribute('href');\n}\n/** Gets whether an element is an input element. */\nfunction isInputElement(element) {\n    return element.nodeName.toLowerCase() == 'input';\n}\n/** Gets whether an element is an anchor element. */\nfunction isAnchorElement(element) {\n    return element.nodeName.toLowerCase() == 'a';\n}\n/** Gets whether an element has a valid tabindex. */\nfunction hasValidTabIndex(element) {\n    if (!element.hasAttribute('tabindex') || element.tabIndex === undefined) {\n        return false;\n    }\n    let tabIndex = element.getAttribute('tabindex');\n    return !!(tabIndex && !isNaN(parseInt(tabIndex, 10)));\n}\n/**\n * Returns the parsed tabindex from the element attributes instead of returning the\n * evaluated tabindex from the browsers defaults.\n */\nfunction getTabIndexValue(element) {\n    if (!hasValidTabIndex(element)) {\n        return null;\n    }\n    // See browser issue in Gecko https://bugzilla.mozilla.org/show_bug.cgi?id=1128054\n    const tabIndex = parseInt(element.getAttribute('tabindex') || '', 10);\n    return isNaN(tabIndex) ? -1 : tabIndex;\n}\n/** Checks whether the specified element is potentially tabbable on iOS */\nfunction isPotentiallyTabbableIOS(element) {\n    let nodeName = element.nodeName.toLowerCase();\n    let inputType = nodeName === 'input' && element.type;\n    return (inputType === 'text' ||\n        inputType === 'password' ||\n        nodeName === 'select' ||\n        nodeName === 'textarea');\n}\n/**\n * Gets whether an element is potentially focusable without taking current visible/disabled state\n * into account.\n */\nfunction isPotentiallyFocusable(element) {\n    // Inputs are potentially focusable *unless* they're type=\"hidden\".\n    if (isHiddenInput(element)) {\n        return false;\n    }\n    return (isNativeFormElement(element) ||\n        isAnchorWithHref(element) ||\n        element.hasAttribute('contenteditable') ||\n        hasValidTabIndex(element));\n}\n/** Gets the parent window of a DOM node with regards of being inside of an iframe. */\nfunction getWindow(node) {\n    // ownerDocument is null if `node` itself *is* a document.\n    return (node.ownerDocument && node.ownerDocument.defaultView) || window;\n}\n\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class currently uses a relatively simple approach to focus trapping.\n * It assumes that the tab order is the same as DOM order, which is not necessarily true.\n * Things like `tabIndex > 0`, flex `order`, and shadow roots can cause the two to be misaligned.\n */\nclass FocusTrap {\n    /** Whether the focus trap is active. */\n    get enabled() {\n        return this._enabled;\n    }\n    set enabled(value) {\n        this._enabled = value;\n        if (this._startAnchor && this._endAnchor) {\n            this._toggleAnchorTabIndex(value, this._startAnchor);\n            this._toggleAnchorTabIndex(value, this._endAnchor);\n        }\n    }\n    constructor(_element, _checker, _ngZone, _document, deferAnchors = false, \n    /** @breaking-change 20.0.0 param to become required */\n    _injector) {\n        this._element = _element;\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._injector = _injector;\n        this._hasAttached = false;\n        // Event listeners for the anchors. Need to be regular functions so that we can unbind them later.\n        this.startAnchorListener = () => this.focusLastTabbableElement();\n        this.endAnchorListener = () => this.focusFirstTabbableElement();\n        this._enabled = true;\n        if (!deferAnchors) {\n            this.attachAnchors();\n        }\n    }\n    /** Destroys the focus trap by cleaning up the anchors. */\n    destroy() {\n        const startAnchor = this._startAnchor;\n        const endAnchor = this._endAnchor;\n        if (startAnchor) {\n            startAnchor.removeEventListener('focus', this.startAnchorListener);\n            startAnchor.remove();\n        }\n        if (endAnchor) {\n            endAnchor.removeEventListener('focus', this.endAnchorListener);\n            endAnchor.remove();\n        }\n        this._startAnchor = this._endAnchor = null;\n        this._hasAttached = false;\n    }\n    /**\n     * Inserts the anchors into the DOM. This is usually done automatically\n     * in the constructor, but can be deferred for cases like directives with `*ngIf`.\n     * @returns Whether the focus trap managed to attach successfully. This may not be the case\n     * if the target element isn't currently in the DOM.\n     */\n    attachAnchors() {\n        // If we're not on the browser, there can be no focus to trap.\n        if (this._hasAttached) {\n            return true;\n        }\n        this._ngZone.runOutsideAngular(() => {\n            if (!this._startAnchor) {\n                this._startAnchor = this._createAnchor();\n                this._startAnchor.addEventListener('focus', this.startAnchorListener);\n            }\n            if (!this._endAnchor) {\n                this._endAnchor = this._createAnchor();\n                this._endAnchor.addEventListener('focus', this.endAnchorListener);\n            }\n        });\n        if (this._element.parentNode) {\n            this._element.parentNode.insertBefore(this._startAnchor, this._element);\n            this._element.parentNode.insertBefore(this._endAnchor, this._element.nextSibling);\n            this._hasAttached = true;\n        }\n        return this._hasAttached;\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses the first tabbable element.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfully.\n     */\n    focusInitialElementWhenReady(options) {\n        return new Promise(resolve => {\n            this._executeOnStable(() => resolve(this.focusInitialElement(options)));\n        });\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the first tabbable element within the focus trap region.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfully.\n     */\n    focusFirstTabbableElementWhenReady(options) {\n        return new Promise(resolve => {\n            this._executeOnStable(() => resolve(this.focusFirstTabbableElement(options)));\n        });\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the last tabbable element within the focus trap region.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfully.\n     */\n    focusLastTabbableElementWhenReady(options) {\n        return new Promise(resolve => {\n            this._executeOnStable(() => resolve(this.focusLastTabbableElement(options)));\n        });\n    }\n    /**\n     * Get the specified boundary element of the trapped region.\n     * @param bound The boundary to get (start or end of trapped region).\n     * @returns The boundary element.\n     */\n    _getRegionBoundary(bound) {\n        // Contains the deprecated version of selector, for temporary backwards comparability.\n        const markers = this._element.querySelectorAll(`[cdk-focus-region-${bound}], ` + `[cdkFocusRegion${bound}], ` + `[cdk-focus-${bound}]`);\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            for (let i = 0; i < markers.length; i++) {\n                // @breaking-change 8.0.0\n                if (markers[i].hasAttribute(`cdk-focus-${bound}`)) {\n                    console.warn(`Found use of deprecated attribute 'cdk-focus-${bound}', ` +\n                        `use 'cdkFocusRegion${bound}' instead. The deprecated ` +\n                        `attribute will be removed in 8.0.0.`, markers[i]);\n                }\n                else if (markers[i].hasAttribute(`cdk-focus-region-${bound}`)) {\n                    console.warn(`Found use of deprecated attribute 'cdk-focus-region-${bound}', ` +\n                        `use 'cdkFocusRegion${bound}' instead. The deprecated attribute ` +\n                        `will be removed in 8.0.0.`, markers[i]);\n                }\n            }\n        }\n        if (bound == 'start') {\n            return markers.length ? markers[0] : this._getFirstTabbableElement(this._element);\n        }\n        return markers.length\n            ? markers[markers.length - 1]\n            : this._getLastTabbableElement(this._element);\n    }\n    /**\n     * Focuses the element that should be focused when the focus trap is initialized.\n     * @returns Whether focus was moved successfully.\n     */\n    focusInitialElement(options) {\n        // Contains the deprecated version of selector, for temporary backwards comparability.\n        const redirectToElement = this._element.querySelector(`[cdk-focus-initial], ` + `[cdkFocusInitial]`);\n        if (redirectToElement) {\n            // @breaking-change 8.0.0\n            if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n                redirectToElement.hasAttribute(`cdk-focus-initial`)) {\n                console.warn(`Found use of deprecated attribute 'cdk-focus-initial', ` +\n                    `use 'cdkFocusInitial' instead. The deprecated attribute ` +\n                    `will be removed in 8.0.0`, redirectToElement);\n            }\n            // Warn the consumer if the element they've pointed to\n            // isn't focusable, when not in production mode.\n            if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n                !this._checker.isFocusable(redirectToElement)) {\n                console.warn(`Element matching '[cdkFocusInitial]' is not focusable.`, redirectToElement);\n            }\n            if (!this._checker.isFocusable(redirectToElement)) {\n                const focusableChild = this._getFirstTabbableElement(redirectToElement);\n                focusableChild?.focus(options);\n                return !!focusableChild;\n            }\n            redirectToElement.focus(options);\n            return true;\n        }\n        return this.focusFirstTabbableElement(options);\n    }\n    /**\n     * Focuses the first tabbable element within the focus trap region.\n     * @returns Whether focus was moved successfully.\n     */\n    focusFirstTabbableElement(options) {\n        const redirectToElement = this._getRegionBoundary('start');\n        if (redirectToElement) {\n            redirectToElement.focus(options);\n        }\n        return !!redirectToElement;\n    }\n    /**\n     * Focuses the last tabbable element within the focus trap region.\n     * @returns Whether focus was moved successfully.\n     */\n    focusLastTabbableElement(options) {\n        const redirectToElement = this._getRegionBoundary('end');\n        if (redirectToElement) {\n            redirectToElement.focus(options);\n        }\n        return !!redirectToElement;\n    }\n    /**\n     * Checks whether the focus trap has successfully been attached.\n     */\n    hasAttached() {\n        return this._hasAttached;\n    }\n    /** Get the first tabbable element from a DOM subtree (inclusive). */\n    _getFirstTabbableElement(root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        const children = root.children;\n        for (let i = 0; i < children.length; i++) {\n            const tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE\n                ? this._getFirstTabbableElement(children[i])\n                : null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    }\n    /** Get the last tabbable element from a DOM subtree (inclusive). */\n    _getLastTabbableElement(root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        // Iterate in reverse DOM order.\n        const children = root.children;\n        for (let i = children.length - 1; i >= 0; i--) {\n            const tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE\n                ? this._getLastTabbableElement(children[i])\n                : null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    }\n    /** Creates an anchor element. */\n    _createAnchor() {\n        const anchor = this._document.createElement('div');\n        this._toggleAnchorTabIndex(this._enabled, anchor);\n        anchor.classList.add('cdk-visually-hidden');\n        anchor.classList.add('cdk-focus-trap-anchor');\n        anchor.setAttribute('aria-hidden', 'true');\n        return anchor;\n    }\n    /**\n     * Toggles the `tabindex` of an anchor, based on the enabled state of the focus trap.\n     * @param isEnabled Whether the focus trap is enabled.\n     * @param anchor Anchor on which to toggle the tabindex.\n     */\n    _toggleAnchorTabIndex(isEnabled, anchor) {\n        // Remove the tabindex completely, rather than setting it to -1, because if the\n        // element has a tabindex, the user might still hit it when navigating with the arrow keys.\n        isEnabled ? anchor.setAttribute('tabindex', '0') : anchor.removeAttribute('tabindex');\n    }\n    /**\n     * Toggles the`tabindex` of both anchors to either trap Tab focus or allow it to escape.\n     * @param enabled: Whether the anchors should trap Tab.\n     */\n    toggleAnchors(enabled) {\n        if (this._startAnchor && this._endAnchor) {\n            this._toggleAnchorTabIndex(enabled, this._startAnchor);\n            this._toggleAnchorTabIndex(enabled, this._endAnchor);\n        }\n    }\n    /** Executes a function when the zone is stable. */\n    _executeOnStable(fn) {\n        // TODO: remove this conditional when injector is required in the constructor.\n        if (this._injector) {\n            afterNextRender(fn, { injector: this._injector });\n        }\n        else {\n            setTimeout(fn);\n        }\n    }\n}\n/**\n * Factory that allows easy instantiation of focus traps.\n */\nclass FocusTrapFactory {\n    constructor(_checker, _ngZone, _document) {\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._injector = inject(Injector);\n        this._document = _document;\n    }\n    /**\n     * Creates a focus-trapped region around the given element.\n     * @param element The element around which focus will be trapped.\n     * @param deferCaptureElements Defers the creation of focus-capturing elements to be done\n     *     manually by the user.\n     * @returns The created focus trap instance.\n     */\n    create(element, deferCaptureElements = false) {\n        return new FocusTrap(element, this._checker, this._ngZone, this._document, deferCaptureElements, this._injector);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: FocusTrapFactory, deps: [{ token: InteractivityChecker }, { token: i0.NgZone }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: FocusTrapFactory, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: FocusTrapFactory, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: InteractivityChecker }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }] });\n/** Directive for trapping focus within a region. */\nclass CdkTrapFocus {\n    /** Whether the focus trap is active. */\n    get enabled() {\n        return this.focusTrap?.enabled || false;\n    }\n    set enabled(value) {\n        if (this.focusTrap) {\n            this.focusTrap.enabled = value;\n        }\n    }\n    constructor(_elementRef, _focusTrapFactory, \n    /**\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 13.0.0\n     */\n    _document) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        /** Previously focused element to restore focus to upon destroy when using autoCapture. */\n        this._previouslyFocusedElement = null;\n        const platform = inject(Platform);\n        if (platform.isBrowser) {\n            this.focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement, true);\n        }\n    }\n    ngOnDestroy() {\n        this.focusTrap?.destroy();\n        // If we stored a previously focused element when using autoCapture, return focus to that\n        // element now that the trapped region is being destroyed.\n        if (this._previouslyFocusedElement) {\n            this._previouslyFocusedElement.focus();\n            this._previouslyFocusedElement = null;\n        }\n    }\n    ngAfterContentInit() {\n        this.focusTrap?.attachAnchors();\n        if (this.autoCapture) {\n            this._captureFocus();\n        }\n    }\n    ngDoCheck() {\n        if (this.focusTrap && !this.focusTrap.hasAttached()) {\n            this.focusTrap.attachAnchors();\n        }\n    }\n    ngOnChanges(changes) {\n        const autoCaptureChange = changes['autoCapture'];\n        if (autoCaptureChange &&\n            !autoCaptureChange.firstChange &&\n            this.autoCapture &&\n            this.focusTrap?.hasAttached()) {\n            this._captureFocus();\n        }\n    }\n    _captureFocus() {\n        this._previouslyFocusedElement = _getFocusedElementPierceShadowDom();\n        this.focusTrap?.focusInitialElementWhenReady();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: CdkTrapFocus, deps: [{ token: i0.ElementRef }, { token: FocusTrapFactory }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"18.1.0-next.3\", type: CdkTrapFocus, isStandalone: true, selector: \"[cdkTrapFocus]\", inputs: { enabled: [\"cdkTrapFocus\", \"enabled\", booleanAttribute], autoCapture: [\"cdkTrapFocusAutoCapture\", \"autoCapture\", booleanAttribute] }, exportAs: [\"cdkTrapFocus\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: CdkTrapFocus, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkTrapFocus]',\n                    exportAs: 'cdkTrapFocus',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: FocusTrapFactory }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }], propDecorators: { enabled: [{\n                type: Input,\n                args: [{ alias: 'cdkTrapFocus', transform: booleanAttribute }]\n            }], autoCapture: [{\n                type: Input,\n                args: [{ alias: 'cdkTrapFocusAutoCapture', transform: booleanAttribute }]\n            }] } });\n\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class uses a strategy pattern that determines how it traps focus.\n * See FocusTrapInertStrategy.\n */\nclass ConfigurableFocusTrap extends FocusTrap {\n    /** Whether the FocusTrap is enabled. */\n    get enabled() {\n        return this._enabled;\n    }\n    set enabled(value) {\n        this._enabled = value;\n        if (this._enabled) {\n            this._focusTrapManager.register(this);\n        }\n        else {\n            this._focusTrapManager.deregister(this);\n        }\n    }\n    constructor(_element, _checker, _ngZone, _document, _focusTrapManager, _inertStrategy, config, injector) {\n        super(_element, _checker, _ngZone, _document, config.defer, injector);\n        this._focusTrapManager = _focusTrapManager;\n        this._inertStrategy = _inertStrategy;\n        this._focusTrapManager.register(this);\n    }\n    /** Notifies the FocusTrapManager that this FocusTrap will be destroyed. */\n    destroy() {\n        this._focusTrapManager.deregister(this);\n        super.destroy();\n    }\n    /** @docs-private Implemented as part of ManagedFocusTrap. */\n    _enable() {\n        this._inertStrategy.preventFocus(this);\n        this.toggleAnchors(true);\n    }\n    /** @docs-private Implemented as part of ManagedFocusTrap. */\n    _disable() {\n        this._inertStrategy.allowFocus(this);\n        this.toggleAnchors(false);\n    }\n}\n\n/**\n * Lightweight FocusTrapInertStrategy that adds a document focus event\n * listener to redirect focus back inside the FocusTrap.\n */\nclass EventListenerFocusTrapInertStrategy {\n    constructor() {\n        /** Focus event handler. */\n        this._listener = null;\n    }\n    /** Adds a document event listener that keeps focus inside the FocusTrap. */\n    preventFocus(focusTrap) {\n        // Ensure there's only one listener per document\n        if (this._listener) {\n            focusTrap._document.removeEventListener('focus', this._listener, true);\n        }\n        this._listener = (e) => this._trapFocus(focusTrap, e);\n        focusTrap._ngZone.runOutsideAngular(() => {\n            focusTrap._document.addEventListener('focus', this._listener, true);\n        });\n    }\n    /** Removes the event listener added in preventFocus. */\n    allowFocus(focusTrap) {\n        if (!this._listener) {\n            return;\n        }\n        focusTrap._document.removeEventListener('focus', this._listener, true);\n        this._listener = null;\n    }\n    /**\n     * Refocuses the first element in the FocusTrap if the focus event target was outside\n     * the FocusTrap.\n     *\n     * This is an event listener callback. The event listener is added in runOutsideAngular,\n     * so all this code runs outside Angular as well.\n     */\n    _trapFocus(focusTrap, event) {\n        const target = event.target;\n        const focusTrapRoot = focusTrap._element;\n        // Don't refocus if target was in an overlay, because the overlay might be associated\n        // with an element inside the FocusTrap, ex. mat-select.\n        if (target && !focusTrapRoot.contains(target) && !target.closest?.('div.cdk-overlay-pane')) {\n            // Some legacy FocusTrap usages have logic that focuses some element on the page\n            // just before FocusTrap is destroyed. For backwards compatibility, wait\n            // to be sure FocusTrap is still enabled before refocusing.\n            setTimeout(() => {\n                // Check whether focus wasn't put back into the focus trap while the timeout was pending.\n                if (focusTrap.enabled && !focusTrapRoot.contains(focusTrap._document.activeElement)) {\n                    focusTrap.focusFirstTabbableElement();\n                }\n            });\n        }\n    }\n}\n\n/** The injection token used to specify the inert strategy. */\nconst FOCUS_TRAP_INERT_STRATEGY = new InjectionToken('FOCUS_TRAP_INERT_STRATEGY');\n\n/** Injectable that ensures only the most recently enabled FocusTrap is active. */\nclass FocusTrapManager {\n    constructor() {\n        // A stack of the FocusTraps on the page. Only the FocusTrap at the\n        // top of the stack is active.\n        this._focusTrapStack = [];\n    }\n    /**\n     * Disables the FocusTrap at the top of the stack, and then pushes\n     * the new FocusTrap onto the stack.\n     */\n    register(focusTrap) {\n        // Dedupe focusTraps that register multiple times.\n        this._focusTrapStack = this._focusTrapStack.filter(ft => ft !== focusTrap);\n        let stack = this._focusTrapStack;\n        if (stack.length) {\n            stack[stack.length - 1]._disable();\n        }\n        stack.push(focusTrap);\n        focusTrap._enable();\n    }\n    /**\n     * Removes the FocusTrap from the stack, and activates the\n     * FocusTrap that is the new top of the stack.\n     */\n    deregister(focusTrap) {\n        focusTrap._disable();\n        const stack = this._focusTrapStack;\n        const i = stack.indexOf(focusTrap);\n        if (i !== -1) {\n            stack.splice(i, 1);\n            if (stack.length) {\n                stack[stack.length - 1]._enable();\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: FocusTrapManager, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: FocusTrapManager, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: FocusTrapManager, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/** Factory that allows easy instantiation of configurable focus traps. */\nclass ConfigurableFocusTrapFactory {\n    constructor(_checker, _ngZone, _focusTrapManager, _document, _inertStrategy) {\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._focusTrapManager = _focusTrapManager;\n        this._injector = inject(Injector);\n        this._document = _document;\n        // TODO split up the strategies into different modules, similar to DateAdapter.\n        this._inertStrategy = _inertStrategy || new EventListenerFocusTrapInertStrategy();\n    }\n    create(element, config = { defer: false }) {\n        let configObject;\n        if (typeof config === 'boolean') {\n            configObject = { defer: config };\n        }\n        else {\n            configObject = config;\n        }\n        return new ConfigurableFocusTrap(element, this._checker, this._ngZone, this._document, this._focusTrapManager, this._inertStrategy, configObject, this._injector);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: ConfigurableFocusTrapFactory, deps: [{ token: InteractivityChecker }, { token: i0.NgZone }, { token: FocusTrapManager }, { token: DOCUMENT }, { token: FOCUS_TRAP_INERT_STRATEGY, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: ConfigurableFocusTrapFactory, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: ConfigurableFocusTrapFactory, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: InteractivityChecker }, { type: i0.NgZone }, { type: FocusTrapManager }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [FOCUS_TRAP_INERT_STRATEGY]\n                }] }] });\n\n/** Gets whether an event could be a faked `mousedown` event dispatched by a screen reader. */\nfunction isFakeMousedownFromScreenReader(event) {\n    // Some screen readers will dispatch a fake `mousedown` event when pressing enter or space on\n    // a clickable element. We can distinguish these events when `event.buttons` is zero, or\n    // `event.detail` is zero depending on the browser:\n    // - `event.buttons` works on Firefox, but fails on Chrome.\n    // - `detail` works on Chrome, but fails on Firefox.\n    return event.buttons === 0 || event.detail === 0;\n}\n/** Gets whether an event could be a faked `touchstart` event dispatched by a screen reader. */\nfunction isFakeTouchstartFromScreenReader(event) {\n    const touch = (event.touches && event.touches[0]) || (event.changedTouches && event.changedTouches[0]);\n    // A fake `touchstart` can be distinguished from a real one by looking at the `identifier`\n    // which is typically >= 0 on a real device versus -1 from a screen reader. Just to be safe,\n    // we can also look at `radiusX` and `radiusY`. This behavior was observed against a Windows 10\n    // device with a touch screen running NVDA v2020.4 and Firefox 85 or Chrome 88.\n    return (!!touch &&\n        touch.identifier === -1 &&\n        (touch.radiusX == null || touch.radiusX === 1) &&\n        (touch.radiusY == null || touch.radiusY === 1));\n}\n\n/**\n * Injectable options for the InputModalityDetector. These are shallowly merged with the default\n * options.\n */\nconst INPUT_MODALITY_DETECTOR_OPTIONS = new InjectionToken('cdk-input-modality-detector-options');\n/**\n * Default options for the InputModalityDetector.\n *\n * Modifier keys are ignored by default (i.e. when pressed won't cause the service to detect\n * keyboard input modality) for two reasons:\n *\n * 1. Modifier keys are commonly used with mouse to perform actions such as 'right click' or 'open\n *    in new tab', and are thus less representative of actual keyboard interaction.\n * 2. VoiceOver triggers some keyboard events when linearly navigating with Control + Option (but\n *    confusingly not with Caps Lock). Thus, to have parity with other screen readers, we ignore\n *    these keys so as to not update the input modality.\n *\n * Note that we do not by default ignore the right Meta key on Safari because it has the same key\n * code as the ContextMenu key on other browsers. When we switch to using event.key, we can\n * distinguish between the two.\n */\nconst INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS = {\n    ignoreKeys: [ALT, CONTROL, MAC_META, META, SHIFT],\n};\n/**\n * The amount of time needed to pass after a touchstart event in order for a subsequent mousedown\n * event to be attributed as mouse and not touch.\n *\n * This is the value used by AngularJS Material. Through trial and error (on iPhone 6S) they found\n * that a value of around 650ms seems appropriate.\n */\nconst TOUCH_BUFFER_MS = 650;\n/**\n * Event listener options that enable capturing and also mark the listener as passive if the browser\n * supports it.\n */\nconst modalityEventListenerOptions = normalizePassiveListenerOptions({\n    passive: true,\n    capture: true,\n});\n/**\n * Service that detects the user's input modality.\n *\n * This service does not update the input modality when a user navigates with a screen reader\n * (e.g. linear navigation with VoiceOver, object navigation / browse mode with NVDA, virtual PC\n * cursor mode with JAWS). This is in part due to technical limitations (i.e. keyboard events do not\n * fire as expected in these modes) but is also arguably the correct behavior. Navigating with a\n * screen reader is akin to visually scanning a page, and should not be interpreted as actual user\n * input interaction.\n *\n * When a user is not navigating but *interacting* with a screen reader, this service attempts to\n * update the input modality to keyboard, but in general this service's behavior is largely\n * undefined.\n */\nclass InputModalityDetector {\n    /** The most recently detected input modality. */\n    get mostRecentModality() {\n        return this._modality.value;\n    }\n    constructor(_platform, ngZone, document, options) {\n        this._platform = _platform;\n        /**\n         * The most recently detected input modality event target. Is null if no input modality has been\n         * detected or if the associated event target is null for some unknown reason.\n         */\n        this._mostRecentTarget = null;\n        /** The underlying BehaviorSubject that emits whenever an input modality is detected. */\n        this._modality = new BehaviorSubject(null);\n        /**\n         * The timestamp of the last touch input modality. Used to determine whether mousedown events\n         * should be attributed to mouse or touch.\n         */\n        this._lastTouchMs = 0;\n        /**\n         * Handles keydown events. Must be an arrow function in order to preserve the context when it gets\n         * bound.\n         */\n        this._onKeydown = (event) => {\n            // If this is one of the keys we should ignore, then ignore it and don't update the input\n            // modality to keyboard.\n            if (this._options?.ignoreKeys?.some(keyCode => keyCode === event.keyCode)) {\n                return;\n            }\n            this._modality.next('keyboard');\n            this._mostRecentTarget = _getEventTarget(event);\n        };\n        /**\n         * Handles mousedown events. Must be an arrow function in order to preserve the context when it\n         * gets bound.\n         */\n        this._onMousedown = (event) => {\n            // Touches trigger both touch and mouse events, so we need to distinguish between mouse events\n            // that were triggered via mouse vs touch. To do so, check if the mouse event occurs closely\n            // after the previous touch event.\n            if (Date.now() - this._lastTouchMs < TOUCH_BUFFER_MS) {\n                return;\n            }\n            // Fake mousedown events are fired by some screen readers when controls are activated by the\n            // screen reader. Attribute them to keyboard input modality.\n            this._modality.next(isFakeMousedownFromScreenReader(event) ? 'keyboard' : 'mouse');\n            this._mostRecentTarget = _getEventTarget(event);\n        };\n        /**\n         * Handles touchstart events. Must be an arrow function in order to preserve the context when it\n         * gets bound.\n         */\n        this._onTouchstart = (event) => {\n            // Same scenario as mentioned in _onMousedown, but on touch screen devices, fake touchstart\n            // events are fired. Again, attribute to keyboard input modality.\n            if (isFakeTouchstartFromScreenReader(event)) {\n                this._modality.next('keyboard');\n                return;\n            }\n            // Store the timestamp of this touch event, as it's used to distinguish between mouse events\n            // triggered via mouse vs touch.\n            this._lastTouchMs = Date.now();\n            this._modality.next('touch');\n            this._mostRecentTarget = _getEventTarget(event);\n        };\n        this._options = {\n            ...INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS,\n            ...options,\n        };\n        // Skip the first emission as it's null.\n        this.modalityDetected = this._modality.pipe(skip(1));\n        this.modalityChanged = this.modalityDetected.pipe(distinctUntilChanged());\n        // If we're not in a browser, this service should do nothing, as there's no relevant input\n        // modality to detect.\n        if (_platform.isBrowser) {\n            ngZone.runOutsideAngular(() => {\n                document.addEventListener('keydown', this._onKeydown, modalityEventListenerOptions);\n                document.addEventListener('mousedown', this._onMousedown, modalityEventListenerOptions);\n                document.addEventListener('touchstart', this._onTouchstart, modalityEventListenerOptions);\n            });\n        }\n    }\n    ngOnDestroy() {\n        this._modality.complete();\n        if (this._platform.isBrowser) {\n            document.removeEventListener('keydown', this._onKeydown, modalityEventListenerOptions);\n            document.removeEventListener('mousedown', this._onMousedown, modalityEventListenerOptions);\n            document.removeEventListener('touchstart', this._onTouchstart, modalityEventListenerOptions);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: InputModalityDetector, deps: [{ token: i1.Platform }, { token: i0.NgZone }, { token: DOCUMENT }, { token: INPUT_MODALITY_DETECTOR_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: InputModalityDetector, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: InputModalityDetector, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: i1.Platform }, { type: i0.NgZone }, { type: Document, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [INPUT_MODALITY_DETECTOR_OPTIONS]\n                }] }] });\n\nconst LIVE_ANNOUNCER_ELEMENT_TOKEN = new InjectionToken('liveAnnouncerElement', {\n    providedIn: 'root',\n    factory: LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY,\n});\n/** @docs-private */\nfunction LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY() {\n    return null;\n}\n/** Injection token that can be used to configure the default options for the LiveAnnouncer. */\nconst LIVE_ANNOUNCER_DEFAULT_OPTIONS = new InjectionToken('LIVE_ANNOUNCER_DEFAULT_OPTIONS');\n\nlet uniqueIds = 0;\nclass LiveAnnouncer {\n    constructor(elementToken, _ngZone, _document, _defaultOptions) {\n        this._ngZone = _ngZone;\n        this._defaultOptions = _defaultOptions;\n        // We inject the live element and document as `any` because the constructor signature cannot\n        // reference browser globals (HTMLElement, Document) on non-browser environments, since having\n        // a class decorator causes TypeScript to preserve the constructor signature types.\n        this._document = _document;\n        this._liveElement = elementToken || this._createLiveElement();\n    }\n    announce(message, ...args) {\n        const defaultOptions = this._defaultOptions;\n        let politeness;\n        let duration;\n        if (args.length === 1 && typeof args[0] === 'number') {\n            duration = args[0];\n        }\n        else {\n            [politeness, duration] = args;\n        }\n        this.clear();\n        clearTimeout(this._previousTimeout);\n        if (!politeness) {\n            politeness =\n                defaultOptions && defaultOptions.politeness ? defaultOptions.politeness : 'polite';\n        }\n        if (duration == null && defaultOptions) {\n            duration = defaultOptions.duration;\n        }\n        // TODO: ensure changing the politeness works on all environments we support.\n        this._liveElement.setAttribute('aria-live', politeness);\n        if (this._liveElement.id) {\n            this._exposeAnnouncerToModals(this._liveElement.id);\n        }\n        // This 100ms timeout is necessary for some browser + screen-reader combinations:\n        // - Both JAWS and NVDA over IE11 will not announce anything without a non-zero timeout.\n        // - With Chrome and IE11 with NVDA or JAWS, a repeated (identical) message won't be read a\n        //   second time without clearing and then using a non-zero delay.\n        // (using JAWS 17 at time of this writing).\n        return this._ngZone.runOutsideAngular(() => {\n            if (!this._currentPromise) {\n                this._currentPromise = new Promise(resolve => (this._currentResolve = resolve));\n            }\n            clearTimeout(this._previousTimeout);\n            this._previousTimeout = setTimeout(() => {\n                this._liveElement.textContent = message;\n                if (typeof duration === 'number') {\n                    this._previousTimeout = setTimeout(() => this.clear(), duration);\n                }\n                // For some reason in tests this can be undefined\n                // Probably related to ZoneJS and every other thing that patches browser APIs in tests\n                this._currentResolve?.();\n                this._currentPromise = this._currentResolve = undefined;\n            }, 100);\n            return this._currentPromise;\n        });\n    }\n    /**\n     * Clears the current text from the announcer element. Can be used to prevent\n     * screen readers from reading the text out again while the user is going\n     * through the page landmarks.\n     */\n    clear() {\n        if (this._liveElement) {\n            this._liveElement.textContent = '';\n        }\n    }\n    ngOnDestroy() {\n        clearTimeout(this._previousTimeout);\n        this._liveElement?.remove();\n        this._liveElement = null;\n        this._currentResolve?.();\n        this._currentPromise = this._currentResolve = undefined;\n    }\n    _createLiveElement() {\n        const elementClass = 'cdk-live-announcer-element';\n        const previousElements = this._document.getElementsByClassName(elementClass);\n        const liveEl = this._document.createElement('div');\n        // Remove any old containers. This can happen when coming in from a server-side-rendered page.\n        for (let i = 0; i < previousElements.length; i++) {\n            previousElements[i].remove();\n        }\n        liveEl.classList.add(elementClass);\n        liveEl.classList.add('cdk-visually-hidden');\n        liveEl.setAttribute('aria-atomic', 'true');\n        liveEl.setAttribute('aria-live', 'polite');\n        liveEl.id = `cdk-live-announcer-${uniqueIds++}`;\n        this._document.body.appendChild(liveEl);\n        return liveEl;\n    }\n    /**\n     * Some browsers won't expose the accessibility node of the live announcer element if there is an\n     * `aria-modal` and the live announcer is outside of it. This method works around the issue by\n     * pointing the `aria-owns` of all modals to the live announcer element.\n     */\n    _exposeAnnouncerToModals(id) {\n        // TODO(http://github.com/angular/components/issues/26853): consider de-duplicating this with\n        // the `SnakBarContainer` and other usages.\n        //\n        // Note that the selector here is limited to CDK overlays at the moment in order to reduce the\n        // section of the DOM we need to look through. This should cover all the cases we support, but\n        // the selector can be expanded if it turns out to be too narrow.\n        const modals = this._document.querySelectorAll('body > .cdk-overlay-container [aria-modal=\"true\"]');\n        for (let i = 0; i < modals.length; i++) {\n            const modal = modals[i];\n            const ariaOwns = modal.getAttribute('aria-owns');\n            if (!ariaOwns) {\n                modal.setAttribute('aria-owns', id);\n            }\n            else if (ariaOwns.indexOf(id) === -1) {\n                modal.setAttribute('aria-owns', ariaOwns + ' ' + id);\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: LiveAnnouncer, deps: [{ token: LIVE_ANNOUNCER_ELEMENT_TOKEN, optional: true }, { token: i0.NgZone }, { token: DOCUMENT }, { token: LIVE_ANNOUNCER_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: LiveAnnouncer, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: LiveAnnouncer, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [LIVE_ANNOUNCER_ELEMENT_TOKEN]\n                }] }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [LIVE_ANNOUNCER_DEFAULT_OPTIONS]\n                }] }] });\n/**\n * A directive that works similarly to aria-live, but uses the LiveAnnouncer to ensure compatibility\n * with a wider range of browsers and screen readers.\n */\nclass CdkAriaLive {\n    /** The aria-live politeness level to use when announcing messages. */\n    get politeness() {\n        return this._politeness;\n    }\n    set politeness(value) {\n        this._politeness = value === 'off' || value === 'assertive' ? value : 'polite';\n        if (this._politeness === 'off') {\n            if (this._subscription) {\n                this._subscription.unsubscribe();\n                this._subscription = null;\n            }\n        }\n        else if (!this._subscription) {\n            this._subscription = this._ngZone.runOutsideAngular(() => {\n                return this._contentObserver.observe(this._elementRef).subscribe(() => {\n                    // Note that we use textContent here, rather than innerText, in order to avoid a reflow.\n                    const elementText = this._elementRef.nativeElement.textContent;\n                    // The `MutationObserver` fires also for attribute\n                    // changes which we don't want to announce.\n                    if (elementText !== this._previousAnnouncedText) {\n                        this._liveAnnouncer.announce(elementText, this._politeness, this.duration);\n                        this._previousAnnouncedText = elementText;\n                    }\n                });\n            });\n        }\n    }\n    constructor(_elementRef, _liveAnnouncer, _contentObserver, _ngZone) {\n        this._elementRef = _elementRef;\n        this._liveAnnouncer = _liveAnnouncer;\n        this._contentObserver = _contentObserver;\n        this._ngZone = _ngZone;\n        this._politeness = 'polite';\n    }\n    ngOnDestroy() {\n        if (this._subscription) {\n            this._subscription.unsubscribe();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: CdkAriaLive, deps: [{ token: i0.ElementRef }, { token: LiveAnnouncer }, { token: i1$1.ContentObserver }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.1.0-next.3\", type: CdkAriaLive, isStandalone: true, selector: \"[cdkAriaLive]\", inputs: { politeness: [\"cdkAriaLive\", \"politeness\"], duration: [\"cdkAriaLiveDuration\", \"duration\"] }, exportAs: [\"cdkAriaLive\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: CdkAriaLive, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkAriaLive]',\n                    exportAs: 'cdkAriaLive',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: LiveAnnouncer }, { type: i1$1.ContentObserver }, { type: i0.NgZone }], propDecorators: { politeness: [{\n                type: Input,\n                args: ['cdkAriaLive']\n            }], duration: [{\n                type: Input,\n                args: ['cdkAriaLiveDuration']\n            }] } });\n\n/** Detection mode used for attributing the origin of a focus event. */\nvar FocusMonitorDetectionMode;\n(function (FocusMonitorDetectionMode) {\n    /**\n     * Any mousedown, keydown, or touchstart event that happened in the previous\n     * tick or the current tick will be used to assign a focus event's origin (to\n     * either mouse, keyboard, or touch). This is the default option.\n     */\n    FocusMonitorDetectionMode[FocusMonitorDetectionMode[\"IMMEDIATE\"] = 0] = \"IMMEDIATE\";\n    /**\n     * A focus event's origin is always attributed to the last corresponding\n     * mousedown, keydown, or touchstart event, no matter how long ago it occurred.\n     */\n    FocusMonitorDetectionMode[FocusMonitorDetectionMode[\"EVENTUAL\"] = 1] = \"EVENTUAL\";\n})(FocusMonitorDetectionMode || (FocusMonitorDetectionMode = {}));\n/** InjectionToken for FocusMonitorOptions. */\nconst FOCUS_MONITOR_DEFAULT_OPTIONS = new InjectionToken('cdk-focus-monitor-default-options');\n/**\n * Event listener options that enable capturing and also\n * mark the listener as passive if the browser supports it.\n */\nconst captureEventListenerOptions = normalizePassiveListenerOptions({\n    passive: true,\n    capture: true,\n});\n/** Monitors mouse and keyboard events to determine the cause of focus events. */\nclass FocusMonitor {\n    constructor(_ngZone, _platform, _inputModalityDetector, \n    /** @breaking-change 11.0.0 make document required */\n    document, options) {\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._inputModalityDetector = _inputModalityDetector;\n        /** The focus origin that the next focus event is a result of. */\n        this._origin = null;\n        /** Whether the window has just been focused. */\n        this._windowFocused = false;\n        /**\n         * Whether the origin was determined via a touch interaction. Necessary as properly attributing\n         * focus events to touch interactions requires special logic.\n         */\n        this._originFromTouchInteraction = false;\n        /** Map of elements being monitored to their info. */\n        this._elementInfo = new Map();\n        /** The number of elements currently being monitored. */\n        this._monitoredElementCount = 0;\n        /**\n         * Keeps track of the root nodes to which we've currently bound a focus/blur handler,\n         * as well as the number of monitored elements that they contain. We have to treat focus/blur\n         * handlers differently from the rest of the events, because the browser won't emit events\n         * to the document when focus moves inside of a shadow root.\n         */\n        this._rootNodeFocusListenerCount = new Map();\n        /**\n         * Event listener for `focus` events on the window.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._windowFocusListener = () => {\n            // Make a note of when the window regains focus, so we can\n            // restore the origin info for the focused element.\n            this._windowFocused = true;\n            this._windowFocusTimeoutId = window.setTimeout(() => (this._windowFocused = false));\n        };\n        /** Subject for stopping our InputModalityDetector subscription. */\n        this._stopInputModalityDetector = new Subject();\n        /**\n         * Event listener for `focus` and 'blur' events on the document.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._rootNodeFocusAndBlurListener = (event) => {\n            const target = _getEventTarget(event);\n            // We need to walk up the ancestor chain in order to support `checkChildren`.\n            for (let element = target; element; element = element.parentElement) {\n                if (event.type === 'focus') {\n                    this._onFocus(event, element);\n                }\n                else {\n                    this._onBlur(event, element);\n                }\n            }\n        };\n        this._document = document;\n        this._detectionMode = options?.detectionMode || FocusMonitorDetectionMode.IMMEDIATE;\n    }\n    monitor(element, checkChildren = false) {\n        const nativeElement = coerceElement(element);\n        // Do nothing if we're not on the browser platform or the passed in node isn't an element.\n        if (!this._platform.isBrowser || nativeElement.nodeType !== 1) {\n            // Note: we don't want the observable to emit at all so we don't pass any parameters.\n            return of();\n        }\n        // If the element is inside the shadow DOM, we need to bind our focus/blur listeners to\n        // the shadow root, rather than the `document`, because the browser won't emit focus events\n        // to the `document`, if focus is moving within the same shadow root.\n        const rootNode = _getShadowRoot(nativeElement) || this._getDocument();\n        const cachedInfo = this._elementInfo.get(nativeElement);\n        // Check if we're already monitoring this element.\n        if (cachedInfo) {\n            if (checkChildren) {\n                // TODO(COMP-318): this can be problematic, because it'll turn all non-checkChildren\n                // observers into ones that behave as if `checkChildren` was turned on. We need a more\n                // robust solution.\n                cachedInfo.checkChildren = true;\n            }\n            return cachedInfo.subject;\n        }\n        // Create monitored element info.\n        const info = {\n            checkChildren: checkChildren,\n            subject: new Subject(),\n            rootNode,\n        };\n        this._elementInfo.set(nativeElement, info);\n        this._registerGlobalListeners(info);\n        return info.subject;\n    }\n    stopMonitoring(element) {\n        const nativeElement = coerceElement(element);\n        const elementInfo = this._elementInfo.get(nativeElement);\n        if (elementInfo) {\n            elementInfo.subject.complete();\n            this._setClasses(nativeElement);\n            this._elementInfo.delete(nativeElement);\n            this._removeGlobalListeners(elementInfo);\n        }\n    }\n    focusVia(element, origin, options) {\n        const nativeElement = coerceElement(element);\n        const focusedElement = this._getDocument().activeElement;\n        // If the element is focused already, calling `focus` again won't trigger the event listener\n        // which means that the focus classes won't be updated. If that's the case, update the classes\n        // directly without waiting for an event.\n        if (nativeElement === focusedElement) {\n            this._getClosestElementsInfo(nativeElement).forEach(([currentElement, info]) => this._originChanged(currentElement, origin, info));\n        }\n        else {\n            this._setOrigin(origin);\n            // `focus` isn't available on the server\n            if (typeof nativeElement.focus === 'function') {\n                nativeElement.focus(options);\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._elementInfo.forEach((_info, element) => this.stopMonitoring(element));\n    }\n    /** Access injected document if available or fallback to global document reference */\n    _getDocument() {\n        return this._document || document;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    _getFocusOrigin(focusEventTarget) {\n        if (this._origin) {\n            // If the origin was realized via a touch interaction, we need to perform additional checks\n            // to determine whether the focus origin should be attributed to touch or program.\n            if (this._originFromTouchInteraction) {\n                return this._shouldBeAttributedToTouch(focusEventTarget) ? 'touch' : 'program';\n            }\n            else {\n                return this._origin;\n            }\n        }\n        // If the window has just regained focus, we can restore the most recent origin from before the\n        // window blurred. Otherwise, we've reached the point where we can't identify the source of the\n        // focus. This typically means one of two things happened:\n        //\n        // 1) The element was programmatically focused, or\n        // 2) The element was focused via screen reader navigation (which generally doesn't fire\n        //    events).\n        //\n        // Because we can't distinguish between these two cases, we default to setting `program`.\n        if (this._windowFocused && this._lastFocusOrigin) {\n            return this._lastFocusOrigin;\n        }\n        // If the interaction is coming from an input label, we consider it a mouse interactions.\n        // This is a special case where focus moves on `click`, rather than `mousedown` which breaks\n        // our detection, because all our assumptions are for `mousedown`. We need to handle this\n        // special case, because it's very common for checkboxes and radio buttons.\n        if (focusEventTarget && this._isLastInteractionFromInputLabel(focusEventTarget)) {\n            return 'mouse';\n        }\n        return 'program';\n    }\n    /**\n     * Returns whether the focus event should be attributed to touch. Recall that in IMMEDIATE mode, a\n     * touch origin isn't immediately reset at the next tick (see _setOrigin). This means that when we\n     * handle a focus event following a touch interaction, we need to determine whether (1) the focus\n     * event was directly caused by the touch interaction or (2) the focus event was caused by a\n     * subsequent programmatic focus call triggered by the touch interaction.\n     * @param focusEventTarget The target of the focus event under examination.\n     */\n    _shouldBeAttributedToTouch(focusEventTarget) {\n        // Please note that this check is not perfect. Consider the following edge case:\n        //\n        // <div #parent tabindex=\"0\">\n        //   <div #child tabindex=\"0\" (click)=\"#parent.focus()\"></div>\n        // </div>\n        //\n        // Suppose there is a FocusMonitor in IMMEDIATE mode attached to #parent. When the user touches\n        // #child, #parent is programmatically focused. This code will attribute the focus to touch\n        // instead of program. This is a relatively minor edge-case that can be worked around by using\n        // focusVia(parent, 'program') to focus #parent.\n        return (this._detectionMode === FocusMonitorDetectionMode.EVENTUAL ||\n            !!focusEventTarget?.contains(this._inputModalityDetector._mostRecentTarget));\n    }\n    /**\n     * Sets the focus classes on the element based on the given focus origin.\n     * @param element The element to update the classes on.\n     * @param origin The focus origin.\n     */\n    _setClasses(element, origin) {\n        element.classList.toggle('cdk-focused', !!origin);\n        element.classList.toggle('cdk-touch-focused', origin === 'touch');\n        element.classList.toggle('cdk-keyboard-focused', origin === 'keyboard');\n        element.classList.toggle('cdk-mouse-focused', origin === 'mouse');\n        element.classList.toggle('cdk-program-focused', origin === 'program');\n    }\n    /**\n     * Updates the focus origin. If we're using immediate detection mode, we schedule an async\n     * function to clear the origin at the end of a timeout. The duration of the timeout depends on\n     * the origin being set.\n     * @param origin The origin to set.\n     * @param isFromInteraction Whether we are setting the origin from an interaction event.\n     */\n    _setOrigin(origin, isFromInteraction = false) {\n        this._ngZone.runOutsideAngular(() => {\n            this._origin = origin;\n            this._originFromTouchInteraction = origin === 'touch' && isFromInteraction;\n            // If we're in IMMEDIATE mode, reset the origin at the next tick (or in `TOUCH_BUFFER_MS` ms\n            // for a touch event). We reset the origin at the next tick because Firefox focuses one tick\n            // after the interaction event. We wait `TOUCH_BUFFER_MS` ms before resetting the origin for\n            // a touch event because when a touch event is fired, the associated focus event isn't yet in\n            // the event queue. Before doing so, clear any pending timeouts.\n            if (this._detectionMode === FocusMonitorDetectionMode.IMMEDIATE) {\n                clearTimeout(this._originTimeoutId);\n                const ms = this._originFromTouchInteraction ? TOUCH_BUFFER_MS : 1;\n                this._originTimeoutId = setTimeout(() => (this._origin = null), ms);\n            }\n        });\n    }\n    /**\n     * Handles focus events on a registered element.\n     * @param event The focus event.\n     * @param element The monitored element.\n     */\n    _onFocus(event, element) {\n        // NOTE(mmalerba): We currently set the classes based on the focus origin of the most recent\n        // focus event affecting the monitored element. If we want to use the origin of the first event\n        // instead we should check for the cdk-focused class here and return if the element already has\n        // it. (This only matters for elements that have includesChildren = true).\n        // If we are not counting child-element-focus as focused, make sure that the event target is the\n        // monitored element itself.\n        const elementInfo = this._elementInfo.get(element);\n        const focusEventTarget = _getEventTarget(event);\n        if (!elementInfo || (!elementInfo.checkChildren && element !== focusEventTarget)) {\n            return;\n        }\n        this._originChanged(element, this._getFocusOrigin(focusEventTarget), elementInfo);\n    }\n    /**\n     * Handles blur events on a registered element.\n     * @param event The blur event.\n     * @param element The monitored element.\n     */\n    _onBlur(event, element) {\n        // If we are counting child-element-focus as focused, make sure that we aren't just blurring in\n        // order to focus another child of the monitored element.\n        const elementInfo = this._elementInfo.get(element);\n        if (!elementInfo ||\n            (elementInfo.checkChildren &&\n                event.relatedTarget instanceof Node &&\n                element.contains(event.relatedTarget))) {\n            return;\n        }\n        this._setClasses(element);\n        this._emitOrigin(elementInfo, null);\n    }\n    _emitOrigin(info, origin) {\n        if (info.subject.observers.length) {\n            this._ngZone.run(() => info.subject.next(origin));\n        }\n    }\n    _registerGlobalListeners(elementInfo) {\n        if (!this._platform.isBrowser) {\n            return;\n        }\n        const rootNode = elementInfo.rootNode;\n        const rootNodeFocusListeners = this._rootNodeFocusListenerCount.get(rootNode) || 0;\n        if (!rootNodeFocusListeners) {\n            this._ngZone.runOutsideAngular(() => {\n                rootNode.addEventListener('focus', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n                rootNode.addEventListener('blur', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n            });\n        }\n        this._rootNodeFocusListenerCount.set(rootNode, rootNodeFocusListeners + 1);\n        // Register global listeners when first element is monitored.\n        if (++this._monitoredElementCount === 1) {\n            // Note: we listen to events in the capture phase so we\n            // can detect them even if the user stops propagation.\n            this._ngZone.runOutsideAngular(() => {\n                const window = this._getWindow();\n                window.addEventListener('focus', this._windowFocusListener);\n            });\n            // The InputModalityDetector is also just a collection of global listeners.\n            this._inputModalityDetector.modalityDetected\n                .pipe(takeUntil(this._stopInputModalityDetector))\n                .subscribe(modality => {\n                this._setOrigin(modality, true /* isFromInteraction */);\n            });\n        }\n    }\n    _removeGlobalListeners(elementInfo) {\n        const rootNode = elementInfo.rootNode;\n        if (this._rootNodeFocusListenerCount.has(rootNode)) {\n            const rootNodeFocusListeners = this._rootNodeFocusListenerCount.get(rootNode);\n            if (rootNodeFocusListeners > 1) {\n                this._rootNodeFocusListenerCount.set(rootNode, rootNodeFocusListeners - 1);\n            }\n            else {\n                rootNode.removeEventListener('focus', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n                rootNode.removeEventListener('blur', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n                this._rootNodeFocusListenerCount.delete(rootNode);\n            }\n        }\n        // Unregister global listeners when last element is unmonitored.\n        if (!--this._monitoredElementCount) {\n            const window = this._getWindow();\n            window.removeEventListener('focus', this._windowFocusListener);\n            // Equivalently, stop our InputModalityDetector subscription.\n            this._stopInputModalityDetector.next();\n            // Clear timeouts for all potentially pending timeouts to prevent the leaks.\n            clearTimeout(this._windowFocusTimeoutId);\n            clearTimeout(this._originTimeoutId);\n        }\n    }\n    /** Updates all the state on an element once its focus origin has changed. */\n    _originChanged(element, origin, elementInfo) {\n        this._setClasses(element, origin);\n        this._emitOrigin(elementInfo, origin);\n        this._lastFocusOrigin = origin;\n    }\n    /**\n     * Collects the `MonitoredElementInfo` of a particular element and\n     * all of its ancestors that have enabled `checkChildren`.\n     * @param element Element from which to start the search.\n     */\n    _getClosestElementsInfo(element) {\n        const results = [];\n        this._elementInfo.forEach((info, currentElement) => {\n            if (currentElement === element || (info.checkChildren && currentElement.contains(element))) {\n                results.push([currentElement, info]);\n            }\n        });\n        return results;\n    }\n    /**\n     * Returns whether an interaction is likely to have come from the user clicking the `label` of\n     * an `input` or `textarea` in order to focus it.\n     * @param focusEventTarget Target currently receiving focus.\n     */\n    _isLastInteractionFromInputLabel(focusEventTarget) {\n        const { _mostRecentTarget: mostRecentTarget, mostRecentModality } = this._inputModalityDetector;\n        // If the last interaction used the mouse on an element contained by one of the labels\n        // of an `input`/`textarea` that is currently focused, it is very likely that the\n        // user redirected focus using the label.\n        if (mostRecentModality !== 'mouse' ||\n            !mostRecentTarget ||\n            mostRecentTarget === focusEventTarget ||\n            (focusEventTarget.nodeName !== 'INPUT' && focusEventTarget.nodeName !== 'TEXTAREA') ||\n            focusEventTarget.disabled) {\n            return false;\n        }\n        const labels = focusEventTarget.labels;\n        if (labels) {\n            for (let i = 0; i < labels.length; i++) {\n                if (labels[i].contains(mostRecentTarget)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: FocusMonitor, deps: [{ token: i0.NgZone }, { token: i1.Platform }, { token: InputModalityDetector }, { token: DOCUMENT, optional: true }, { token: FOCUS_MONITOR_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: FocusMonitor, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: FocusMonitor, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: i0.NgZone }, { type: i1.Platform }, { type: InputModalityDetector }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [FOCUS_MONITOR_DEFAULT_OPTIONS]\n                }] }] });\n/**\n * Directive that determines how a particular element was focused (via keyboard, mouse, touch, or\n * programmatically) and adds corresponding classes to the element.\n *\n * There are two variants of this directive:\n * 1) cdkMonitorElementFocus: does not consider an element to be focused if one of its children is\n *    focused.\n * 2) cdkMonitorSubtreeFocus: considers an element focused if it or any of its children are focused.\n */\nclass CdkMonitorFocus {\n    constructor(_elementRef, _focusMonitor) {\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this._focusOrigin = null;\n        this.cdkFocusChange = new EventEmitter();\n    }\n    get focusOrigin() {\n        return this._focusOrigin;\n    }\n    ngAfterViewInit() {\n        const element = this._elementRef.nativeElement;\n        this._monitorSubscription = this._focusMonitor\n            .monitor(element, element.nodeType === 1 && element.hasAttribute('cdkMonitorSubtreeFocus'))\n            .subscribe(origin => {\n            this._focusOrigin = origin;\n            this.cdkFocusChange.emit(origin);\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        if (this._monitorSubscription) {\n            this._monitorSubscription.unsubscribe();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: CdkMonitorFocus, deps: [{ token: i0.ElementRef }, { token: FocusMonitor }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.1.0-next.3\", type: CdkMonitorFocus, isStandalone: true, selector: \"[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]\", outputs: { cdkFocusChange: \"cdkFocusChange\" }, exportAs: [\"cdkMonitorFocus\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: CdkMonitorFocus, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]',\n                    exportAs: 'cdkMonitorFocus',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: FocusMonitor }], propDecorators: { cdkFocusChange: [{\n                type: Output\n            }] } });\n\n/** Set of possible high-contrast mode backgrounds. */\nvar HighContrastMode;\n(function (HighContrastMode) {\n    HighContrastMode[HighContrastMode[\"NONE\"] = 0] = \"NONE\";\n    HighContrastMode[HighContrastMode[\"BLACK_ON_WHITE\"] = 1] = \"BLACK_ON_WHITE\";\n    HighContrastMode[HighContrastMode[\"WHITE_ON_BLACK\"] = 2] = \"WHITE_ON_BLACK\";\n})(HighContrastMode || (HighContrastMode = {}));\n/** CSS class applied to the document body when in black-on-white high-contrast mode. */\nconst BLACK_ON_WHITE_CSS_CLASS = 'cdk-high-contrast-black-on-white';\n/** CSS class applied to the document body when in white-on-black high-contrast mode. */\nconst WHITE_ON_BLACK_CSS_CLASS = 'cdk-high-contrast-white-on-black';\n/** CSS class applied to the document body when in high-contrast mode. */\nconst HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS = 'cdk-high-contrast-active';\n/**\n * Service to determine whether the browser is currently in a high-contrast-mode environment.\n *\n * Microsoft Windows supports an accessibility feature called \"High Contrast Mode\". This mode\n * changes the appearance of all applications, including web applications, to dramatically increase\n * contrast.\n *\n * IE, Edge, and Firefox currently support this mode. Chrome does not support Windows High Contrast\n * Mode. This service does not detect high-contrast mode as added by the Chrome \"High Contrast\"\n * browser extension.\n */\nclass HighContrastModeDetector {\n    constructor(_platform, document) {\n        this._platform = _platform;\n        this._document = document;\n        this._breakpointSubscription = inject(BreakpointObserver)\n            .observe('(forced-colors: active)')\n            .subscribe(() => {\n            if (this._hasCheckedHighContrastMode) {\n                this._hasCheckedHighContrastMode = false;\n                this._applyBodyHighContrastModeCssClasses();\n            }\n        });\n    }\n    /** Gets the current high-contrast-mode for the page. */\n    getHighContrastMode() {\n        if (!this._platform.isBrowser) {\n            return HighContrastMode.NONE;\n        }\n        // Create a test element with an arbitrary background-color that is neither black nor\n        // white; high-contrast mode will coerce the color to either black or white. Also ensure that\n        // appending the test element to the DOM does not affect layout by absolutely positioning it\n        const testElement = this._document.createElement('div');\n        testElement.style.backgroundColor = 'rgb(1,2,3)';\n        testElement.style.position = 'absolute';\n        this._document.body.appendChild(testElement);\n        // Get the computed style for the background color, collapsing spaces to normalize between\n        // browsers. Once we get this color, we no longer need the test element. Access the `window`\n        // via the document so we can fake it in tests. Note that we have extra null checks, because\n        // this logic will likely run during app bootstrap and throwing can break the entire app.\n        const documentWindow = this._document.defaultView || window;\n        const computedStyle = documentWindow && documentWindow.getComputedStyle\n            ? documentWindow.getComputedStyle(testElement)\n            : null;\n        const computedColor = ((computedStyle && computedStyle.backgroundColor) || '').replace(/ /g, '');\n        testElement.remove();\n        switch (computedColor) {\n            // Pre Windows 11 dark theme.\n            case 'rgb(0,0,0)':\n            // Windows 11 dark themes.\n            case 'rgb(45,50,54)':\n            case 'rgb(32,32,32)':\n                return HighContrastMode.WHITE_ON_BLACK;\n            // Pre Windows 11 light theme.\n            case 'rgb(255,255,255)':\n            // Windows 11 light theme.\n            case 'rgb(255,250,239)':\n                return HighContrastMode.BLACK_ON_WHITE;\n        }\n        return HighContrastMode.NONE;\n    }\n    ngOnDestroy() {\n        this._breakpointSubscription.unsubscribe();\n    }\n    /** Applies CSS classes indicating high-contrast mode to document body (browser-only). */\n    _applyBodyHighContrastModeCssClasses() {\n        if (!this._hasCheckedHighContrastMode && this._platform.isBrowser && this._document.body) {\n            const bodyClasses = this._document.body.classList;\n            bodyClasses.remove(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS, BLACK_ON_WHITE_CSS_CLASS, WHITE_ON_BLACK_CSS_CLASS);\n            this._hasCheckedHighContrastMode = true;\n            const mode = this.getHighContrastMode();\n            if (mode === HighContrastMode.BLACK_ON_WHITE) {\n                bodyClasses.add(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS, BLACK_ON_WHITE_CSS_CLASS);\n            }\n            else if (mode === HighContrastMode.WHITE_ON_BLACK) {\n                bodyClasses.add(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS, WHITE_ON_BLACK_CSS_CLASS);\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: HighContrastModeDetector, deps: [{ token: i1.Platform }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: HighContrastModeDetector, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: HighContrastModeDetector, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: i1.Platform }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }] });\n\nclass A11yModule {\n    constructor(highContrastModeDetector) {\n        highContrastModeDetector._applyBodyHighContrastModeCssClasses();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: A11yModule, deps: [{ token: HighContrastModeDetector }], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: A11yModule, imports: [ObserversModule, CdkAriaLive, CdkTrapFocus, CdkMonitorFocus], exports: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: A11yModule, imports: [ObserversModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: A11yModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ObserversModule, CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],\n                    exports: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],\n                }]\n        }], ctorParameters: () => [{ type: HighContrastModeDetector }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { A11yModule, ActiveDescendantKeyManager, AriaDescriber, CDK_DESCRIBEDBY_HOST_ATTRIBUTE, CDK_DESCRIBEDBY_ID_PREFIX, CdkAriaLive, CdkMonitorFocus, CdkTrapFocus, ConfigurableFocusTrap, ConfigurableFocusTrapFactory, EventListenerFocusTrapInertStrategy, FOCUS_MONITOR_DEFAULT_OPTIONS, FOCUS_TRAP_INERT_STRATEGY, FocusKeyManager, FocusMonitor, FocusMonitorDetectionMode, FocusTrap, FocusTrapFactory, HighContrastMode, HighContrastModeDetector, INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS, INPUT_MODALITY_DETECTOR_OPTIONS, InputModalityDetector, InteractivityChecker, IsFocusableConfig, LIVE_ANNOUNCER_DEFAULT_OPTIONS, LIVE_ANNOUNCER_ELEMENT_TOKEN, LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY, ListKeyManager, LiveAnnouncer, MESSAGES_CONTAINER_ID, addAriaReferencedId, getAriaReferenceIds, isFakeMousedownFromScreenReader, isFakeTouchstartFromScreenReader, removeAriaReferencedId };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, inject, EventEmitter, Injectable, Optional, Inject, Directive, Output, Input, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n *\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n *\n * We also can't re-provide the DOCUMENT token from platform-browser because the unit tests\n * themselves use things like `querySelector` in test code.\n *\n * This token is defined in a separate file from Directionality as a workaround for\n * https://github.com/angular/angular/issues/22559\n *\n * @docs-private\n */\nconst DIR_DOCUMENT = new InjectionToken('cdk-dir-doc', {\n    providedIn: 'root',\n    factory: DIR_DOCUMENT_FACTORY,\n});\n/** @docs-private */\nfunction DIR_DOCUMENT_FACTORY() {\n    return inject(DOCUMENT);\n}\n\n/** Regex that matches locales with an RTL script. Taken from `goog.i18n.bidi.isRtlLanguage`. */\nconst RTL_LOCALE_PATTERN = /^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i;\n/** Resolves a string value to a specific direction. */\nfunction _resolveDirectionality(rawValue) {\n    const value = rawValue?.toLowerCase() || '';\n    if (value === 'auto' && typeof navigator !== 'undefined' && navigator?.language) {\n        return RTL_LOCALE_PATTERN.test(navigator.language) ? 'rtl' : 'ltr';\n    }\n    return value === 'rtl' ? 'rtl' : 'ltr';\n}\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\nclass Directionality {\n    constructor(_document) {\n        /** The current 'ltr' or 'rtl' value. */\n        this.value = 'ltr';\n        /** Stream that emits whenever the 'ltr' / 'rtl' state changes. */\n        this.change = new EventEmitter();\n        if (_document) {\n            const bodyDir = _document.body ? _document.body.dir : null;\n            const htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n            this.value = _resolveDirectionality(bodyDir || htmlDir || 'ltr');\n        }\n    }\n    ngOnDestroy() {\n        this.change.complete();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: Directionality, deps: [{ token: DIR_DOCUMENT, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: Directionality, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: Directionality, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DIR_DOCUMENT]\n                }] }] });\n\n/**\n * Directive to listen for changes of direction of part of the DOM.\n *\n * Provides itself as Directionality such that descendant directives only need to ever inject\n * Directionality to get the closest direction.\n */\nclass Dir {\n    constructor() {\n        /** Normalized direction that accounts for invalid/unsupported values. */\n        this._dir = 'ltr';\n        /** Whether the `value` has been set to its initial value. */\n        this._isInitialized = false;\n        /** Event emitted when the direction changes. */\n        this.change = new EventEmitter();\n    }\n    /** @docs-private */\n    get dir() {\n        return this._dir;\n    }\n    set dir(value) {\n        const previousValue = this._dir;\n        // Note: `_resolveDirectionality` resolves the language based on the browser's language,\n        // whereas the browser does it based on the content of the element. Since doing so based\n        // on the content can be expensive, for now we're doing the simpler matching.\n        this._dir = _resolveDirectionality(value);\n        this._rawDir = value;\n        if (previousValue !== this._dir && this._isInitialized) {\n            this.change.emit(this._dir);\n        }\n    }\n    /** Current layout direction of the element. */\n    get value() {\n        return this.dir;\n    }\n    /** Initialize once default value has been set. */\n    ngAfterContentInit() {\n        this._isInitialized = true;\n    }\n    ngOnDestroy() {\n        this.change.complete();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: Dir, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.1.0-next.3\", type: Dir, isStandalone: true, selector: \"[dir]\", inputs: { dir: \"dir\" }, outputs: { change: \"dirChange\" }, host: { properties: { \"attr.dir\": \"_rawDir\" } }, providers: [{ provide: Directionality, useExisting: Dir }], exportAs: [\"dir\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: Dir, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[dir]',\n                    providers: [{ provide: Directionality, useExisting: Dir }],\n                    host: { '[attr.dir]': '_rawDir' },\n                    exportAs: 'dir',\n                    standalone: true,\n                }]\n        }], propDecorators: { change: [{\n                type: Output,\n                args: ['dirChange']\n            }], dir: [{\n                type: Input\n            }] } });\n\nclass BidiModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: BidiModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: BidiModule, imports: [Dir], exports: [Dir] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: BidiModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: BidiModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [Dir],\n                    exports: [Dir],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BidiModule, DIR_DOCUMENT, Dir, Directionality };\n","import * as i0 from '@angular/core';\nimport { Version, InjectionToken, inject, NgModule, Optional, Inject, LOCALE_ID, Injectable, Directive, ANIMATION_MODULE_TYPE, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, booleanAttribute, EventEmitter, Output, ViewChild, NgZone, ElementRef } from '@angular/core';\nimport * as i1 from '@angular/cdk/a11y';\nimport { isFakeMousedownFromScreenReader, isFakeTouchstartFromScreenReader } from '@angular/cdk/a11y';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { VERSION as VERSION$1 } from '@angular/cdk';\nimport { DOCUMENT } from '@angular/common';\nimport * as i1$1 from '@angular/cdk/platform';\nimport { Platform, _isTestEnvironment, normalizePassiveListenerOptions, _getEventTarget } from '@angular/cdk/platform';\nimport { coerceBooleanProperty, coerceNumberProperty, coerceElement } from '@angular/cdk/coercion';\nimport { Observable, Subject } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\nimport { ENTER, SPACE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/** Current version of Angular Material. */\nconst VERSION = new Version('18.1.0');\n\n/** @docs-private */\nclass AnimationCurves {\n    static { this.STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)'; }\n    static { this.DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)'; }\n    static { this.ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)'; }\n    static { this.SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)'; }\n}\n/** @docs-private */\nclass AnimationDurations {\n    static { this.COMPLEX = '375ms'; }\n    static { this.ENTERING = '225ms'; }\n    static { this.EXITING = '195ms'; }\n}\n\n/** @docs-private */\nfunction MATERIAL_SANITY_CHECKS_FACTORY() {\n    return true;\n}\n/** Injection token that configures whether the Material sanity checks are enabled. */\nconst MATERIAL_SANITY_CHECKS = new InjectionToken('mat-sanity-checks', {\n    providedIn: 'root',\n    factory: MATERIAL_SANITY_CHECKS_FACTORY,\n});\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\nclass MatCommonModule {\n    constructor(highContrastModeDetector, _sanityChecks, _document) {\n        this._sanityChecks = _sanityChecks;\n        this._document = _document;\n        /** Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype). */\n        this._hasDoneGlobalChecks = false;\n        // While A11yModule also does this, we repeat it here to avoid importing A11yModule\n        // in MatCommonModule.\n        highContrastModeDetector._applyBodyHighContrastModeCssClasses();\n        if (!this._hasDoneGlobalChecks) {\n            this._hasDoneGlobalChecks = true;\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                // Inject in here so the reference to `Platform` can be removed in production mode.\n                const platform = inject(Platform, { optional: true });\n                if (this._checkIsEnabled('doctype')) {\n                    _checkDoctypeIsDefined(this._document);\n                }\n                if (this._checkIsEnabled('theme')) {\n                    _checkThemeIsPresent(this._document, !!platform?.isBrowser);\n                }\n                if (this._checkIsEnabled('version')) {\n                    _checkCdkVersionMatch();\n                }\n            }\n        }\n    }\n    /** Gets whether a specific sanity check is enabled. */\n    _checkIsEnabled(name) {\n        if (_isTestEnvironment()) {\n            return false;\n        }\n        if (typeof this._sanityChecks === 'boolean') {\n            return this._sanityChecks;\n        }\n        return !!this._sanityChecks[name];\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatCommonModule, deps: [{ token: i1.HighContrastModeDetector }, { token: MATERIAL_SANITY_CHECKS, optional: true }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatCommonModule, imports: [BidiModule], exports: [BidiModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatCommonModule, imports: [BidiModule, BidiModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatCommonModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [BidiModule],\n                    exports: [BidiModule],\n                }]\n        }], ctorParameters: () => [{ type: i1.HighContrastModeDetector }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MATERIAL_SANITY_CHECKS]\n                }] }, { type: Document, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }] });\n/** Checks that the page has a doctype. */\nfunction _checkDoctypeIsDefined(doc) {\n    if (!doc.doctype) {\n        console.warn('Current document does not have a doctype. This may cause ' +\n            'some Angular Material components not to behave as expected.');\n    }\n}\n/** Checks that a theme has been included. */\nfunction _checkThemeIsPresent(doc, isBrowser) {\n    // We need to assert that the `body` is defined, because these checks run very early\n    // and the `body` won't be defined if the consumer put their scripts in the `head`.\n    if (!doc.body || !isBrowser) {\n        return;\n    }\n    const testElement = doc.createElement('div');\n    testElement.classList.add('mat-theme-loaded-marker');\n    doc.body.appendChild(testElement);\n    const computedStyle = getComputedStyle(testElement);\n    // In some situations the computed style of the test element can be null. For example in\n    // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n    if (computedStyle && computedStyle.display !== 'none') {\n        console.warn('Could not find Angular Material core theme. Most Material ' +\n            'components may not work as expected. For more info refer ' +\n            'to the theming guide: https://material.angular.io/guide/theming');\n    }\n    testElement.remove();\n}\n/** Checks whether the Material version matches the CDK version. */\nfunction _checkCdkVersionMatch() {\n    if (VERSION.full !== VERSION$1.full) {\n        console.warn('The Angular Material version (' +\n            VERSION.full +\n            ') does not match ' +\n            'the Angular CDK version (' +\n            VERSION$1.full +\n            ').\\n' +\n            'Please ensure the versions of these two packages exactly match.');\n    }\n}\n\nfunction mixinDisabled(base) {\n    return class extends base {\n        get disabled() {\n            return this._disabled;\n        }\n        set disabled(value) {\n            this._disabled = coerceBooleanProperty(value);\n        }\n        constructor(...args) {\n            super(...args);\n            this._disabled = false;\n        }\n    };\n}\n\nfunction mixinColor(base, defaultColor) {\n    return class extends base {\n        get color() {\n            return this._color;\n        }\n        set color(value) {\n            const colorPalette = value || this.defaultColor;\n            if (colorPalette !== this._color) {\n                if (this._color) {\n                    this._elementRef.nativeElement.classList.remove(`mat-${this._color}`);\n                }\n                if (colorPalette) {\n                    this._elementRef.nativeElement.classList.add(`mat-${colorPalette}`);\n                }\n                this._color = colorPalette;\n            }\n        }\n        constructor(...args) {\n            super(...args);\n            this.defaultColor = defaultColor;\n            // Set the default color that can be specified from the mixin.\n            this.color = defaultColor;\n        }\n    };\n}\n\nfunction mixinDisableRipple(base) {\n    return class extends base {\n        /** Whether the ripple effect is disabled or not. */\n        get disableRipple() {\n            return this._disableRipple;\n        }\n        set disableRipple(value) {\n            this._disableRipple = coerceBooleanProperty(value);\n        }\n        constructor(...args) {\n            super(...args);\n            this._disableRipple = false;\n        }\n    };\n}\n\nfunction mixinTabIndex(base, defaultTabIndex = 0) {\n    return class extends base {\n        get tabIndex() {\n            return this.disabled ? -1 : this._tabIndex;\n        }\n        set tabIndex(value) {\n            // If the specified tabIndex value is null or undefined, fall back to the default value.\n            this._tabIndex = value != null ? coerceNumberProperty(value) : this.defaultTabIndex;\n        }\n        constructor(...args) {\n            super(...args);\n            this._tabIndex = defaultTabIndex;\n            this.defaultTabIndex = defaultTabIndex;\n        }\n    };\n}\n\n/**\n * Class that tracks the error state of a component.\n * @docs-private\n */\nclass _ErrorStateTracker {\n    constructor(_defaultMatcher, ngControl, _parentFormGroup, _parentForm, _stateChanges) {\n        this._defaultMatcher = _defaultMatcher;\n        this.ngControl = ngControl;\n        this._parentFormGroup = _parentFormGroup;\n        this._parentForm = _parentForm;\n        this._stateChanges = _stateChanges;\n        /** Whether the tracker is currently in an error state. */\n        this.errorState = false;\n    }\n    /** Updates the error state based on the provided error state matcher. */\n    updateErrorState() {\n        const oldState = this.errorState;\n        const parent = this._parentFormGroup || this._parentForm;\n        const matcher = this.matcher || this._defaultMatcher;\n        const control = this.ngControl ? this.ngControl.control : null;\n        const newState = matcher?.isErrorState(control, parent) ?? false;\n        if (newState !== oldState) {\n            this.errorState = newState;\n            this._stateChanges.next();\n        }\n    }\n}\nfunction mixinErrorState(base) {\n    return class extends base {\n        /** Whether the component is in an error state. */\n        get errorState() {\n            return this._getTracker().errorState;\n        }\n        set errorState(value) {\n            this._getTracker().errorState = value;\n        }\n        /** An object used to control the error state of the component. */\n        get errorStateMatcher() {\n            return this._getTracker().matcher;\n        }\n        set errorStateMatcher(value) {\n            this._getTracker().matcher = value;\n        }\n        /** Updates the error state based on the provided error state matcher. */\n        updateErrorState() {\n            this._getTracker().updateErrorState();\n        }\n        _getTracker() {\n            if (!this._tracker) {\n                this._tracker = new _ErrorStateTracker(this._defaultErrorStateMatcher, this.ngControl, this._parentFormGroup, this._parentForm, this.stateChanges);\n            }\n            return this._tracker;\n        }\n        constructor(...args) {\n            super(...args);\n        }\n    };\n}\n\n/**\n * Mixin to augment a directive with an initialized property that will emits when ngOnInit ends.\n * @deprecated Track the initialized state manually.\n * @breaking-change 19.0.0\n */\nfunction mixinInitialized(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            /** Whether this directive has been marked as initialized. */\n            this._isInitialized = false;\n            /**\n             * List of subscribers that subscribed before the directive was initialized. Should be notified\n             * during _markInitialized. Set to null after pending subscribers are notified, and should\n             * not expect to be populated after.\n             */\n            this._pendingSubscribers = [];\n            /**\n             * Observable stream that emits when the directive initializes. If already initialized, the\n             * subscriber is stored to be notified once _markInitialized is called.\n             */\n            this.initialized = new Observable(subscriber => {\n                // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\n                // when _markInitialized is called.\n                if (this._isInitialized) {\n                    this._notifySubscriber(subscriber);\n                }\n                else {\n                    this._pendingSubscribers.push(subscriber);\n                }\n            });\n        }\n        /**\n         * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n         * of ngOnInit.\n         * @docs-private\n         */\n        _markInitialized() {\n            if (this._isInitialized && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('This directive has already been marked as initialized and ' +\n                    'should not be called twice.');\n            }\n            this._isInitialized = true;\n            this._pendingSubscribers.forEach(this._notifySubscriber);\n            this._pendingSubscribers = null;\n        }\n        /** Emits and completes the subscriber stream (should only emit once). */\n        _notifySubscriber(subscriber) {\n            subscriber.next();\n            subscriber.complete();\n        }\n    };\n}\n\n/** InjectionToken for datepicker that can be used to override default locale code. */\nconst MAT_DATE_LOCALE = new InjectionToken('MAT_DATE_LOCALE', {\n    providedIn: 'root',\n    factory: MAT_DATE_LOCALE_FACTORY,\n});\n/** @docs-private */\nfunction MAT_DATE_LOCALE_FACTORY() {\n    return inject(LOCALE_ID);\n}\n/** Adapts type `D` to be usable as a date by cdk-based components that work with dates. */\nclass DateAdapter {\n    constructor() {\n        this._localeChanges = new Subject();\n        /** A stream that emits when the locale changes. */\n        this.localeChanges = this._localeChanges;\n    }\n    /**\n     * Given a potential date object, returns that same date object if it is\n     * a valid date, or `null` if it's not a valid date.\n     * @param obj The object to check.\n     * @returns A date or `null`.\n     */\n    getValidDateOrNull(obj) {\n        return this.isDateInstance(obj) && this.isValid(obj) ? obj : null;\n    }\n    /**\n     * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n     * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n     * string). The default implementation does not allow any deserialization, it simply checks that\n     * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n     * method on all of its `@Input()` properties that accept dates. It is therefore possible to\n     * support passing values from your backend directly to these properties by overriding this method\n     * to also deserialize the format used by your backend.\n     * @param value The value to be deserialized into a date object.\n     * @returns The deserialized date object, either a valid date, null if the value can be\n     *     deserialized into a null date (e.g. the empty string), or an invalid date.\n     */\n    deserialize(value) {\n        if (value == null || (this.isDateInstance(value) && this.isValid(value))) {\n            return value;\n        }\n        return this.invalid();\n    }\n    /**\n     * Sets the locale used for all dates.\n     * @param locale The new locale.\n     */\n    setLocale(locale) {\n        this.locale = locale;\n        this._localeChanges.next();\n    }\n    /**\n     * Compares two dates.\n     * @param first The first date to compare.\n     * @param second The second date to compare.\n     * @returns 0 if the dates are equal, a number less than 0 if the first date is earlier,\n     *     a number greater than 0 if the first date is later.\n     */\n    compareDate(first, second) {\n        return (this.getYear(first) - this.getYear(second) ||\n            this.getMonth(first) - this.getMonth(second) ||\n            this.getDate(first) - this.getDate(second));\n    }\n    /**\n     * Checks if two dates are equal.\n     * @param first The first date to check.\n     * @param second The second date to check.\n     * @returns Whether the two dates are equal.\n     *     Null dates are considered equal to other null dates.\n     */\n    sameDate(first, second) {\n        if (first && second) {\n            let firstValid = this.isValid(first);\n            let secondValid = this.isValid(second);\n            if (firstValid && secondValid) {\n                return !this.compareDate(first, second);\n            }\n            return firstValid == secondValid;\n        }\n        return first == second;\n    }\n    /**\n     * Clamp the given date between min and max dates.\n     * @param date The date to clamp.\n     * @param min The minimum value to allow. If null or omitted no min is enforced.\n     * @param max The maximum value to allow. If null or omitted no max is enforced.\n     * @returns `min` if `date` is less than `min`, `max` if date is greater than `max`,\n     *     otherwise `date`.\n     */\n    clampDate(date, min, max) {\n        if (min && this.compareDate(date, min) < 0) {\n            return min;\n        }\n        if (max && this.compareDate(date, max) > 0) {\n            return max;\n        }\n        return date;\n    }\n}\n\nconst MAT_DATE_FORMATS = new InjectionToken('mat-date-formats');\n\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n */\nconst ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n/** Creates an array and fills it with values. */\nfunction range(length, valueFunction) {\n    const valuesArray = Array(length);\n    for (let i = 0; i < length; i++) {\n        valuesArray[i] = valueFunction(i);\n    }\n    return valuesArray;\n}\n/** Adapts the native JS Date for use with cdk-based components that work with dates. */\nclass NativeDateAdapter extends DateAdapter {\n    constructor(\n    /**\n     * @deprecated Now injected via inject(), param to be removed.\n     * @breaking-change 18.0.0\n     */\n    matDateLocale) {\n        super();\n        /**\n         * @deprecated No longer being used. To be removed.\n         * @breaking-change 14.0.0\n         */\n        this.useUtcForDisplay = false;\n        /** The injected locale. */\n        this._matDateLocale = inject(MAT_DATE_LOCALE, { optional: true });\n        if (matDateLocale !== undefined) {\n            this._matDateLocale = matDateLocale;\n        }\n        super.setLocale(this._matDateLocale);\n    }\n    getYear(date) {\n        return date.getFullYear();\n    }\n    getMonth(date) {\n        return date.getMonth();\n    }\n    getDate(date) {\n        return date.getDate();\n    }\n    getDayOfWeek(date) {\n        return date.getDay();\n    }\n    getMonthNames(style) {\n        const dtf = new Intl.DateTimeFormat(this.locale, { month: style, timeZone: 'utc' });\n        return range(12, i => this._format(dtf, new Date(2017, i, 1)));\n    }\n    getDateNames() {\n        const dtf = new Intl.DateTimeFormat(this.locale, { day: 'numeric', timeZone: 'utc' });\n        return range(31, i => this._format(dtf, new Date(2017, 0, i + 1)));\n    }\n    getDayOfWeekNames(style) {\n        const dtf = new Intl.DateTimeFormat(this.locale, { weekday: style, timeZone: 'utc' });\n        return range(7, i => this._format(dtf, new Date(2017, 0, i + 1)));\n    }\n    getYearName(date) {\n        const dtf = new Intl.DateTimeFormat(this.locale, { year: 'numeric', timeZone: 'utc' });\n        return this._format(dtf, date);\n    }\n    getFirstDayOfWeek() {\n        // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n        return 0;\n    }\n    getNumDaysInMonth(date) {\n        return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));\n    }\n    clone(date) {\n        return new Date(date.getTime());\n    }\n    createDate(year, month, date) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            // Check for invalid month and date (except upper bound on date which we have to check after\n            // creating the Date).\n            if (month < 0 || month > 11) {\n                throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n            }\n            if (date < 1) {\n                throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n            }\n        }\n        let result = this._createDateWithOverflow(year, month, date);\n        // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n        if (result.getMonth() != month && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n        }\n        return result;\n    }\n    today() {\n        return new Date();\n    }\n    parse(value, parseFormat) {\n        // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n        // parameters.\n        if (typeof value == 'number') {\n            return new Date(value);\n        }\n        return value ? new Date(Date.parse(value)) : null;\n    }\n    format(date, displayFormat) {\n        if (!this.isValid(date)) {\n            throw Error('NativeDateAdapter: Cannot format invalid date.');\n        }\n        const dtf = new Intl.DateTimeFormat(this.locale, { ...displayFormat, timeZone: 'utc' });\n        return this._format(dtf, date);\n    }\n    addCalendarYears(date, years) {\n        return this.addCalendarMonths(date, years * 12);\n    }\n    addCalendarMonths(date, months) {\n        let newDate = this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n        // It's possible to wind up in the wrong month if the original month has more days than the new\n        // month. In this case we want to go to the last day of the desired month.\n        // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n        // guarantee this.\n        if (this.getMonth(newDate) != (((this.getMonth(date) + months) % 12) + 12) % 12) {\n            newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n        }\n        return newDate;\n    }\n    addCalendarDays(date, days) {\n        return this._createDateWithOverflow(this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n    }\n    toIso8601(date) {\n        return [\n            date.getUTCFullYear(),\n            this._2digit(date.getUTCMonth() + 1),\n            this._2digit(date.getUTCDate()),\n        ].join('-');\n    }\n    /**\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n     * invalid date for all other values.\n     */\n    deserialize(value) {\n        if (typeof value === 'string') {\n            if (!value) {\n                return null;\n            }\n            // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n            // string is the right format first.\n            if (ISO_8601_REGEX.test(value)) {\n                let date = new Date(value);\n                if (this.isValid(date)) {\n                    return date;\n                }\n            }\n        }\n        return super.deserialize(value);\n    }\n    isDateInstance(obj) {\n        return obj instanceof Date;\n    }\n    isValid(date) {\n        return !isNaN(date.getTime());\n    }\n    invalid() {\n        return new Date(NaN);\n    }\n    /** Creates a date but allows the month and date to overflow. */\n    _createDateWithOverflow(year, month, date) {\n        // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n        // To work around this we use `setFullYear` and `setHours` instead.\n        const d = new Date();\n        d.setFullYear(year, month, date);\n        d.setHours(0, 0, 0, 0);\n        return d;\n    }\n    /**\n     * Pads a number to make it two digits.\n     * @param n The number to pad.\n     * @returns The padded number.\n     */\n    _2digit(n) {\n        return ('00' + n).slice(-2);\n    }\n    /**\n     * When converting Date object to string, javascript built-in functions may return wrong\n     * results because it applies its internal DST rules. The DST rules around the world change\n     * very frequently, and the current valid rule is not always valid in previous years though.\n     * We work around this problem building a new Date object which has its internal UTC\n     * representation with the local date and time.\n     * @param dtf Intl.DateTimeFormat object, containing the desired string format. It must have\n     *    timeZone set to 'utc' to work fine.\n     * @param date Date from which we want to get the string representation according to dtf\n     * @returns A Date object with its UTC representation based on the passed in date info\n     */\n    _format(dtf, date) {\n        // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n        // To work around this we use `setUTCFullYear` and `setUTCHours` instead.\n        const d = new Date();\n        d.setUTCFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n        d.setUTCHours(date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());\n        return dtf.format(d);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: NativeDateAdapter, deps: [{ token: MAT_DATE_LOCALE, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: NativeDateAdapter }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: NativeDateAdapter, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_DATE_LOCALE]\n                }] }] });\n\nconst MAT_NATIVE_DATE_FORMATS = {\n    parse: {\n        dateInput: null,\n    },\n    display: {\n        dateInput: { year: 'numeric', month: 'numeric', day: 'numeric' },\n        monthYearLabel: { year: 'numeric', month: 'short' },\n        dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\n        monthYearA11yLabel: { year: 'numeric', month: 'long' },\n    },\n};\n\nclass NativeDateModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: NativeDateModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: NativeDateModule }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: NativeDateModule, providers: [{ provide: DateAdapter, useClass: NativeDateAdapter }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: NativeDateModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [{ provide: DateAdapter, useClass: NativeDateAdapter }],\n                }]\n        }] });\nclass MatNativeDateModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatNativeDateModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatNativeDateModule }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatNativeDateModule, providers: [provideNativeDateAdapter()] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatNativeDateModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [provideNativeDateAdapter()],\n                }]\n        }] });\nfunction provideNativeDateAdapter(formats = MAT_NATIVE_DATE_FORMATS) {\n    return [\n        { provide: DateAdapter, useClass: NativeDateAdapter },\n        { provide: MAT_DATE_FORMATS, useValue: formats },\n    ];\n}\n\n/** Error state matcher that matches when a control is invalid and dirty. */\nclass ShowOnDirtyErrorStateMatcher {\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: ShowOnDirtyErrorStateMatcher, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: ShowOnDirtyErrorStateMatcher }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: ShowOnDirtyErrorStateMatcher, decorators: [{\n            type: Injectable\n        }] });\n/** Provider that defines how form controls behave with regards to displaying error messages. */\nclass ErrorStateMatcher {\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: ErrorStateMatcher, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: ErrorStateMatcher, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: ErrorStateMatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(MatLine) query, then\n * counted by checking the query list's length.\n */\nclass MatLine {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatLine, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.1.0-next.3\", type: MatLine, isStandalone: true, selector: \"[mat-line], [matLine]\", host: { classAttribute: \"mat-line\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatLine, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-line], [matLine]',\n                    host: { 'class': 'mat-line' },\n                    standalone: true,\n                }]\n        }] });\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nfunction setLines(lines, element, prefix = 'mat') {\n    // Note: doesn't need to unsubscribe, because `changes`\n    // gets completed by Angular when the view is destroyed.\n    lines.changes.pipe(startWith(lines)).subscribe(({ length }) => {\n        setClass(element, `${prefix}-2-line`, false);\n        setClass(element, `${prefix}-3-line`, false);\n        setClass(element, `${prefix}-multi-line`, false);\n        if (length === 2 || length === 3) {\n            setClass(element, `${prefix}-${length}-line`, true);\n        }\n        else if (length > 3) {\n            setClass(element, `${prefix}-multi-line`, true);\n        }\n    });\n}\n/** Adds or removes a class from an element. */\nfunction setClass(element, className, isAdd) {\n    element.nativeElement.classList.toggle(className, isAdd);\n}\nclass MatLineModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatLineModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatLineModule, imports: [MatCommonModule, MatLine], exports: [MatLine, MatCommonModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatLineModule, imports: [MatCommonModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatLineModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule, MatLine],\n                    exports: [MatLine, MatCommonModule],\n                }]\n        }] });\n\n/** Possible states for a ripple element. */\nvar RippleState;\n(function (RippleState) {\n    RippleState[RippleState[\"FADING_IN\"] = 0] = \"FADING_IN\";\n    RippleState[RippleState[\"VISIBLE\"] = 1] = \"VISIBLE\";\n    RippleState[RippleState[\"FADING_OUT\"] = 2] = \"FADING_OUT\";\n    RippleState[RippleState[\"HIDDEN\"] = 3] = \"HIDDEN\";\n})(RippleState || (RippleState = {}));\n/**\n * Reference to a previously launched ripple element.\n */\nclass RippleRef {\n    constructor(_renderer, \n    /** Reference to the ripple HTML element. */\n    element, \n    /** Ripple configuration used for the ripple. */\n    config, \n    /* Whether animations are forcibly disabled for ripples through CSS. */\n    _animationForciblyDisabledThroughCss = false) {\n        this._renderer = _renderer;\n        this.element = element;\n        this.config = config;\n        this._animationForciblyDisabledThroughCss = _animationForciblyDisabledThroughCss;\n        /** Current state of the ripple. */\n        this.state = RippleState.HIDDEN;\n    }\n    /** Fades out the ripple element. */\n    fadeOut() {\n        this._renderer.fadeOutRipple(this);\n    }\n}\n\n/** Options used to bind a passive capturing event. */\nconst passiveCapturingEventOptions$1 = normalizePassiveListenerOptions({\n    passive: true,\n    capture: true,\n});\n/** Manages events through delegation so that as few event handlers as possible are bound. */\nclass RippleEventManager {\n    constructor() {\n        this._events = new Map();\n        /** Event handler that is bound and which dispatches the events to the different targets. */\n        this._delegateEventHandler = (event) => {\n            const target = _getEventTarget(event);\n            if (target) {\n                this._events.get(event.type)?.forEach((handlers, element) => {\n                    if (element === target || element.contains(target)) {\n                        handlers.forEach(handler => handler.handleEvent(event));\n                    }\n                });\n            }\n        };\n    }\n    /** Adds an event handler. */\n    addHandler(ngZone, name, element, handler) {\n        const handlersForEvent = this._events.get(name);\n        if (handlersForEvent) {\n            const handlersForElement = handlersForEvent.get(element);\n            if (handlersForElement) {\n                handlersForElement.add(handler);\n            }\n            else {\n                handlersForEvent.set(element, new Set([handler]));\n            }\n        }\n        else {\n            this._events.set(name, new Map([[element, new Set([handler])]]));\n            ngZone.runOutsideAngular(() => {\n                document.addEventListener(name, this._delegateEventHandler, passiveCapturingEventOptions$1);\n            });\n        }\n    }\n    /** Removes an event handler. */\n    removeHandler(name, element, handler) {\n        const handlersForEvent = this._events.get(name);\n        if (!handlersForEvent) {\n            return;\n        }\n        const handlersForElement = handlersForEvent.get(element);\n        if (!handlersForElement) {\n            return;\n        }\n        handlersForElement.delete(handler);\n        if (handlersForElement.size === 0) {\n            handlersForEvent.delete(element);\n        }\n        if (handlersForEvent.size === 0) {\n            this._events.delete(name);\n            document.removeEventListener(name, this._delegateEventHandler, passiveCapturingEventOptions$1);\n        }\n    }\n}\n\n/**\n * Default ripple animation configuration for ripples without an explicit\n * animation config specified.\n */\nconst defaultRippleAnimationConfig = {\n    enterDuration: 225,\n    exitDuration: 150,\n};\n/**\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n */\nconst ignoreMouseEventsTimeout = 800;\n/** Options used to bind a passive capturing event. */\nconst passiveCapturingEventOptions = normalizePassiveListenerOptions({\n    passive: true,\n    capture: true,\n});\n/** Events that signal that the pointer is down. */\nconst pointerDownEvents = ['mousedown', 'touchstart'];\n/** Events that signal that the pointer is up. */\nconst pointerUpEvents = ['mouseup', 'mouseleave', 'touchend', 'touchcancel'];\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * @docs-private\n */\nclass RippleRenderer {\n    static { this._eventManager = new RippleEventManager(); }\n    constructor(_target, _ngZone, elementOrElementRef, _platform) {\n        this._target = _target;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        /** Whether the pointer is currently down or not. */\n        this._isPointerDown = false;\n        /**\n         * Map of currently active ripple references.\n         * The ripple reference is mapped to its element event listeners.\n         * The reason why `| null` is used is that event listeners are added only\n         * when the condition is truthy (see the `_startFadeOutTransition` method).\n         */\n        this._activeRipples = new Map();\n        /** Whether pointer-up event listeners have been registered. */\n        this._pointerUpEventsRegistered = false;\n        // Only do anything if we're on the browser.\n        if (_platform.isBrowser) {\n            this._containerElement = coerceElement(elementOrElementRef);\n        }\n    }\n    /**\n     * Fades in a ripple at the given coordinates.\n     * @param x Coordinate within the element, along the X axis at which to start the ripple.\n     * @param y Coordinate within the element, along the Y axis at which to start the ripple.\n     * @param config Extra ripple options.\n     */\n    fadeInRipple(x, y, config = {}) {\n        const containerRect = (this._containerRect =\n            this._containerRect || this._containerElement.getBoundingClientRect());\n        const animationConfig = { ...defaultRippleAnimationConfig, ...config.animation };\n        if (config.centered) {\n            x = containerRect.left + containerRect.width / 2;\n            y = containerRect.top + containerRect.height / 2;\n        }\n        const radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n        const offsetX = x - containerRect.left;\n        const offsetY = y - containerRect.top;\n        const enterDuration = animationConfig.enterDuration;\n        const ripple = document.createElement('div');\n        ripple.classList.add('mat-ripple-element');\n        ripple.style.left = `${offsetX - radius}px`;\n        ripple.style.top = `${offsetY - radius}px`;\n        ripple.style.height = `${radius * 2}px`;\n        ripple.style.width = `${radius * 2}px`;\n        // If a custom color has been specified, set it as inline style. If no color is\n        // set, the default color will be applied through the ripple theme styles.\n        if (config.color != null) {\n            ripple.style.backgroundColor = config.color;\n        }\n        ripple.style.transitionDuration = `${enterDuration}ms`;\n        this._containerElement.appendChild(ripple);\n        // By default the browser does not recalculate the styles of dynamically created\n        // ripple elements. This is critical to ensure that the `scale` animates properly.\n        // We enforce a style recalculation by calling `getComputedStyle` and *accessing* a property.\n        // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n        const computedStyles = window.getComputedStyle(ripple);\n        const userTransitionProperty = computedStyles.transitionProperty;\n        const userTransitionDuration = computedStyles.transitionDuration;\n        // Note: We detect whether animation is forcibly disabled through CSS (e.g. through\n        // `transition: none` or `display: none`). This is technically unexpected since animations are\n        // controlled through the animation config, but this exists for backwards compatibility. This\n        // logic does not need to be super accurate since it covers some edge cases which can be easily\n        // avoided by users.\n        const animationForciblyDisabledThroughCss = userTransitionProperty === 'none' ||\n            // Note: The canonical unit for serialized CSS `<time>` properties is seconds. Additionally\n            // some browsers expand the duration for every property (in our case `opacity` and `transform`).\n            userTransitionDuration === '0s' ||\n            userTransitionDuration === '0s, 0s' ||\n            // If the container is 0x0, it's likely `display: none`.\n            (containerRect.width === 0 && containerRect.height === 0);\n        // Exposed reference to the ripple that will be returned.\n        const rippleRef = new RippleRef(this, ripple, config, animationForciblyDisabledThroughCss);\n        // Start the enter animation by setting the transform/scale to 100%. The animation will\n        // execute as part of this statement because we forced a style recalculation before.\n        // Note: We use a 3d transform here in order to avoid an issue in Safari where\n        // the ripples aren't clipped when inside the shadow DOM (see #24028).\n        ripple.style.transform = 'scale3d(1, 1, 1)';\n        rippleRef.state = RippleState.FADING_IN;\n        if (!config.persistent) {\n            this._mostRecentTransientRipple = rippleRef;\n        }\n        let eventListeners = null;\n        // Do not register the `transition` event listener if fade-in and fade-out duration\n        // are set to zero. The events won't fire anyway and we can save resources here.\n        if (!animationForciblyDisabledThroughCss && (enterDuration || animationConfig.exitDuration)) {\n            this._ngZone.runOutsideAngular(() => {\n                const onTransitionEnd = () => {\n                    // Clear the fallback timer since the transition fired correctly.\n                    if (eventListeners) {\n                        eventListeners.fallbackTimer = null;\n                    }\n                    clearTimeout(fallbackTimer);\n                    this._finishRippleTransition(rippleRef);\n                };\n                const onTransitionCancel = () => this._destroyRipple(rippleRef);\n                // In some cases where there's a higher load on the browser, it can choose not to dispatch\n                // neither `transitionend` nor `transitioncancel` (see b/227356674). This timer serves as a\n                // fallback for such cases so that the ripple doesn't become stuck. We add a 100ms buffer\n                // because timers aren't precise. Note that another approach can be to transition the ripple\n                // to the `VISIBLE` state immediately above and to `FADING_IN` afterwards inside\n                // `transitionstart`. We go with the timer because it's one less event listener and\n                // it's less likely to break existing tests.\n                const fallbackTimer = setTimeout(onTransitionCancel, enterDuration + 100);\n                ripple.addEventListener('transitionend', onTransitionEnd);\n                // If the transition is cancelled (e.g. due to DOM removal), we destroy the ripple\n                // directly as otherwise we would keep it part of the ripple container forever.\n                // https://www.w3.org/TR/css-transitions-1/#:~:text=no%20longer%20in%20the%20document.\n                ripple.addEventListener('transitioncancel', onTransitionCancel);\n                eventListeners = { onTransitionEnd, onTransitionCancel, fallbackTimer };\n            });\n        }\n        // Add the ripple reference to the list of all active ripples.\n        this._activeRipples.set(rippleRef, eventListeners);\n        // In case there is no fade-in transition duration, we need to manually call the transition\n        // end listener because `transitionend` doesn't fire if there is no transition.\n        if (animationForciblyDisabledThroughCss || !enterDuration) {\n            this._finishRippleTransition(rippleRef);\n        }\n        return rippleRef;\n    }\n    /** Fades out a ripple reference. */\n    fadeOutRipple(rippleRef) {\n        // For ripples already fading out or hidden, this should be a noop.\n        if (rippleRef.state === RippleState.FADING_OUT || rippleRef.state === RippleState.HIDDEN) {\n            return;\n        }\n        const rippleEl = rippleRef.element;\n        const animationConfig = { ...defaultRippleAnimationConfig, ...rippleRef.config.animation };\n        // This starts the fade-out transition and will fire the transition end listener that\n        // removes the ripple element from the DOM.\n        rippleEl.style.transitionDuration = `${animationConfig.exitDuration}ms`;\n        rippleEl.style.opacity = '0';\n        rippleRef.state = RippleState.FADING_OUT;\n        // In case there is no fade-out transition duration, we need to manually call the\n        // transition end listener because `transitionend` doesn't fire if there is no transition.\n        if (rippleRef._animationForciblyDisabledThroughCss || !animationConfig.exitDuration) {\n            this._finishRippleTransition(rippleRef);\n        }\n    }\n    /** Fades out all currently active ripples. */\n    fadeOutAll() {\n        this._getActiveRipples().forEach(ripple => ripple.fadeOut());\n    }\n    /** Fades out all currently active non-persistent ripples. */\n    fadeOutAllNonPersistent() {\n        this._getActiveRipples().forEach(ripple => {\n            if (!ripple.config.persistent) {\n                ripple.fadeOut();\n            }\n        });\n    }\n    /** Sets up the trigger event listeners */\n    setupTriggerEvents(elementOrElementRef) {\n        const element = coerceElement(elementOrElementRef);\n        if (!this._platform.isBrowser || !element || element === this._triggerElement) {\n            return;\n        }\n        // Remove all previously registered event listeners from the trigger element.\n        this._removeTriggerEvents();\n        this._triggerElement = element;\n        // Use event delegation for the trigger events since they're\n        // set up during creation and are performance-sensitive.\n        pointerDownEvents.forEach(type => {\n            RippleRenderer._eventManager.addHandler(this._ngZone, type, element, this);\n        });\n    }\n    /**\n     * Handles all registered events.\n     * @docs-private\n     */\n    handleEvent(event) {\n        if (event.type === 'mousedown') {\n            this._onMousedown(event);\n        }\n        else if (event.type === 'touchstart') {\n            this._onTouchStart(event);\n        }\n        else {\n            this._onPointerUp();\n        }\n        // If pointer-up events haven't been registered yet, do so now.\n        // We do this on-demand in order to reduce the total number of event listeners\n        // registered by the ripples, which speeds up the rendering time for large UIs.\n        if (!this._pointerUpEventsRegistered) {\n            // The events for hiding the ripple are bound directly on the trigger, because:\n            // 1. Some of them occur frequently (e.g. `mouseleave`) and any advantage we get from\n            // delegation will be diminished by having to look through all the data structures often.\n            // 2. They aren't as performance-sensitive, because they're bound only after the user\n            // has interacted with an element.\n            this._ngZone.runOutsideAngular(() => {\n                pointerUpEvents.forEach(type => {\n                    this._triggerElement.addEventListener(type, this, passiveCapturingEventOptions);\n                });\n            });\n            this._pointerUpEventsRegistered = true;\n        }\n    }\n    /** Method that will be called if the fade-in or fade-in transition completed. */\n    _finishRippleTransition(rippleRef) {\n        if (rippleRef.state === RippleState.FADING_IN) {\n            this._startFadeOutTransition(rippleRef);\n        }\n        else if (rippleRef.state === RippleState.FADING_OUT) {\n            this._destroyRipple(rippleRef);\n        }\n    }\n    /**\n     * Starts the fade-out transition of the given ripple if it's not persistent and the pointer\n     * is not held down anymore.\n     */\n    _startFadeOutTransition(rippleRef) {\n        const isMostRecentTransientRipple = rippleRef === this._mostRecentTransientRipple;\n        const { persistent } = rippleRef.config;\n        rippleRef.state = RippleState.VISIBLE;\n        // When the timer runs out while the user has kept their pointer down, we want to\n        // keep only the persistent ripples and the latest transient ripple. We do this,\n        // because we don't want stacked transient ripples to appear after their enter\n        // animation has finished.\n        if (!persistent && (!isMostRecentTransientRipple || !this._isPointerDown)) {\n            rippleRef.fadeOut();\n        }\n    }\n    /** Destroys the given ripple by removing it from the DOM and updating its state. */\n    _destroyRipple(rippleRef) {\n        const eventListeners = this._activeRipples.get(rippleRef) ?? null;\n        this._activeRipples.delete(rippleRef);\n        // Clear out the cached bounding rect if we have no more ripples.\n        if (!this._activeRipples.size) {\n            this._containerRect = null;\n        }\n        // If the current ref is the most recent transient ripple, unset it\n        // avoid memory leaks.\n        if (rippleRef === this._mostRecentTransientRipple) {\n            this._mostRecentTransientRipple = null;\n        }\n        rippleRef.state = RippleState.HIDDEN;\n        if (eventListeners !== null) {\n            rippleRef.element.removeEventListener('transitionend', eventListeners.onTransitionEnd);\n            rippleRef.element.removeEventListener('transitioncancel', eventListeners.onTransitionCancel);\n            if (eventListeners.fallbackTimer !== null) {\n                clearTimeout(eventListeners.fallbackTimer);\n            }\n        }\n        rippleRef.element.remove();\n    }\n    /** Function being called whenever the trigger is being pressed using mouse. */\n    _onMousedown(event) {\n        // Screen readers will fire fake mouse events for space/enter. Skip launching a\n        // ripple in this case for consistency with the non-screen-reader experience.\n        const isFakeMousedown = isFakeMousedownFromScreenReader(event);\n        const isSyntheticEvent = this._lastTouchStartEvent &&\n            Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;\n        if (!this._target.rippleDisabled && !isFakeMousedown && !isSyntheticEvent) {\n            this._isPointerDown = true;\n            this.fadeInRipple(event.clientX, event.clientY, this._target.rippleConfig);\n        }\n    }\n    /** Function being called whenever the trigger is being pressed using touch. */\n    _onTouchStart(event) {\n        if (!this._target.rippleDisabled && !isFakeTouchstartFromScreenReader(event)) {\n            // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n            // events will launch a second ripple if we don't ignore mouse events for a specific\n            // time after a touchstart event.\n            this._lastTouchStartEvent = Date.now();\n            this._isPointerDown = true;\n            // Use `changedTouches` so we skip any touches where the user put\n            // their finger down, but used another finger to tap the element again.\n            const touches = event.changedTouches;\n            // According to the typings the touches should always be defined, but in some cases\n            // the browser appears to not assign them in tests which leads to flakes.\n            if (touches) {\n                for (let i = 0; i < touches.length; i++) {\n                    this.fadeInRipple(touches[i].clientX, touches[i].clientY, this._target.rippleConfig);\n                }\n            }\n        }\n    }\n    /** Function being called whenever the trigger is being released. */\n    _onPointerUp() {\n        if (!this._isPointerDown) {\n            return;\n        }\n        this._isPointerDown = false;\n        // Fade-out all ripples that are visible and not persistent.\n        this._getActiveRipples().forEach(ripple => {\n            // By default, only ripples that are completely visible will fade out on pointer release.\n            // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\n            const isVisible = ripple.state === RippleState.VISIBLE ||\n                (ripple.config.terminateOnPointerUp && ripple.state === RippleState.FADING_IN);\n            if (!ripple.config.persistent && isVisible) {\n                ripple.fadeOut();\n            }\n        });\n    }\n    _getActiveRipples() {\n        return Array.from(this._activeRipples.keys());\n    }\n    /** Removes previously registered event listeners from the trigger element. */\n    _removeTriggerEvents() {\n        const trigger = this._triggerElement;\n        if (trigger) {\n            pointerDownEvents.forEach(type => RippleRenderer._eventManager.removeHandler(type, trigger, this));\n            if (this._pointerUpEventsRegistered) {\n                pointerUpEvents.forEach(type => trigger.removeEventListener(type, this, passiveCapturingEventOptions));\n                this._pointerUpEventsRegistered = false;\n            }\n        }\n    }\n}\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n */\nfunction distanceToFurthestCorner(x, y, rect) {\n    const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n    const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n    return Math.sqrt(distX * distX + distY * distY);\n}\n\n/** Injection token that can be used to specify the global ripple options. */\nconst MAT_RIPPLE_GLOBAL_OPTIONS = new InjectionToken('mat-ripple-global-options');\nclass MatRipple {\n    /**\n     * Whether click events will not trigger the ripple. Ripples can be still launched manually\n     * by using the `launch()` method.\n     */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        if (value) {\n            this.fadeOutAllNonPersistent();\n        }\n        this._disabled = value;\n        this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * The element that triggers the ripple when click events are received.\n     * Defaults to the directive's host element.\n     */\n    get trigger() {\n        return this._trigger || this._elementRef.nativeElement;\n    }\n    set trigger(trigger) {\n        this._trigger = trigger;\n        this._setupTriggerEventsIfEnabled();\n    }\n    constructor(_elementRef, ngZone, platform, globalOptions, _animationMode) {\n        this._elementRef = _elementRef;\n        this._animationMode = _animationMode;\n        /**\n         * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n         * will be the distance from the center of the ripple to the furthest corner of the host element's\n         * bounding rectangle.\n         */\n        this.radius = 0;\n        this._disabled = false;\n        /** @docs-private Whether ripple directive is initialized and the input bindings are set. */\n        this._isInitialized = false;\n        this._globalOptions = globalOptions || {};\n        this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\n    }\n    ngOnInit() {\n        this._isInitialized = true;\n        this._setupTriggerEventsIfEnabled();\n    }\n    ngOnDestroy() {\n        this._rippleRenderer._removeTriggerEvents();\n    }\n    /** Fades out all currently showing ripple elements. */\n    fadeOutAll() {\n        this._rippleRenderer.fadeOutAll();\n    }\n    /** Fades out all currently showing non-persistent ripple elements. */\n    fadeOutAllNonPersistent() {\n        this._rippleRenderer.fadeOutAllNonPersistent();\n    }\n    /**\n     * Ripple configuration from the directive's input values.\n     * @docs-private Implemented as part of RippleTarget\n     */\n    get rippleConfig() {\n        return {\n            centered: this.centered,\n            radius: this.radius,\n            color: this.color,\n            animation: {\n                ...this._globalOptions.animation,\n                ...(this._animationMode === 'NoopAnimations' ? { enterDuration: 0, exitDuration: 0 } : {}),\n                ...this.animation,\n            },\n            terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,\n        };\n    }\n    /**\n     * Whether ripples on pointer-down are disabled or not.\n     * @docs-private Implemented as part of RippleTarget\n     */\n    get rippleDisabled() {\n        return this.disabled || !!this._globalOptions.disabled;\n    }\n    /** Sets up the trigger event listeners if ripples are enabled. */\n    _setupTriggerEventsIfEnabled() {\n        if (!this.disabled && this._isInitialized) {\n            this._rippleRenderer.setupTriggerEvents(this.trigger);\n        }\n    }\n    /** Launches a manual ripple at the specified coordinated or just by the ripple config. */\n    launch(configOrX, y = 0, config) {\n        if (typeof configOrX === 'number') {\n            return this._rippleRenderer.fadeInRipple(configOrX, y, { ...this.rippleConfig, ...config });\n        }\n        else {\n            return this._rippleRenderer.fadeInRipple(0, 0, { ...this.rippleConfig, ...configOrX });\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatRipple, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: i1$1.Platform }, { token: MAT_RIPPLE_GLOBAL_OPTIONS, optional: true }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.1.0-next.3\", type: MatRipple, isStandalone: true, selector: \"[mat-ripple], [matRipple]\", inputs: { color: [\"matRippleColor\", \"color\"], unbounded: [\"matRippleUnbounded\", \"unbounded\"], centered: [\"matRippleCentered\", \"centered\"], radius: [\"matRippleRadius\", \"radius\"], animation: [\"matRippleAnimation\", \"animation\"], disabled: [\"matRippleDisabled\", \"disabled\"], trigger: [\"matRippleTrigger\", \"trigger\"] }, host: { properties: { \"class.mat-ripple-unbounded\": \"unbounded\" }, classAttribute: \"mat-ripple\" }, exportAs: [\"matRipple\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatRipple, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-ripple], [matRipple]',\n                    exportAs: 'matRipple',\n                    host: {\n                        'class': 'mat-ripple',\n                        '[class.mat-ripple-unbounded]': 'unbounded',\n                    },\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: i1$1.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }], propDecorators: { color: [{\n                type: Input,\n                args: ['matRippleColor']\n            }], unbounded: [{\n                type: Input,\n                args: ['matRippleUnbounded']\n            }], centered: [{\n                type: Input,\n                args: ['matRippleCentered']\n            }], radius: [{\n                type: Input,\n                args: ['matRippleRadius']\n            }], animation: [{\n                type: Input,\n                args: ['matRippleAnimation']\n            }], disabled: [{\n                type: Input,\n                args: ['matRippleDisabled']\n            }], trigger: [{\n                type: Input,\n                args: ['matRippleTrigger']\n            }] } });\n\nclass MatRippleModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatRippleModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatRippleModule, imports: [MatCommonModule, MatRipple], exports: [MatRipple, MatCommonModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatRippleModule, imports: [MatCommonModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatRippleModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule, MatRipple],\n                    exports: [MatRipple, MatCommonModule],\n                }]\n        }] });\n\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\nclass MatPseudoCheckbox {\n    constructor(_animationMode) {\n        this._animationMode = _animationMode;\n        /** Display state of the checkbox. */\n        this.state = 'unchecked';\n        /** Whether the checkbox is disabled. */\n        this.disabled = false;\n        /**\n         * Appearance of the pseudo checkbox. Default appearance of 'full' renders a checkmark/mixedmark\n         * indicator inside a square box. 'minimal' appearance only renders the checkmark/mixedmark.\n         */\n        this.appearance = 'full';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatPseudoCheckbox, deps: [{ token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.1.0-next.3\", type: MatPseudoCheckbox, isStandalone: true, selector: \"mat-pseudo-checkbox\", inputs: { state: \"state\", disabled: \"disabled\", appearance: \"appearance\" }, host: { properties: { \"class.mat-pseudo-checkbox-indeterminate\": \"state === \\\"indeterminate\\\"\", \"class.mat-pseudo-checkbox-checked\": \"state === \\\"checked\\\"\", \"class.mat-pseudo-checkbox-disabled\": \"disabled\", \"class.mat-pseudo-checkbox-minimal\": \"appearance === \\\"minimal\\\"\", \"class.mat-pseudo-checkbox-full\": \"appearance === \\\"full\\\"\", \"class._mat-animation-noopable\": \"_animationMode === \\\"NoopAnimations\\\"\" }, classAttribute: \"mat-pseudo-checkbox\" }, ngImport: i0, template: '', isInline: true, styles: [\".mat-pseudo-checkbox{border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox._mat-animation-noopable{transition:none !important;animation:none !important}.mat-pseudo-checkbox._mat-animation-noopable::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{left:1px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{left:1px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-checked::after,.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-indeterminate::after{color:var(--mat-minimal-pseudo-checkbox-selected-checkmark-color)}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled::after,.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled::after{color:var(--mat-minimal-pseudo-checkbox-disabled-selected-checkmark-color)}.mat-pseudo-checkbox-full{border-color:var(--mat-full-pseudo-checkbox-unselected-icon-color);border-width:2px;border-style:solid}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-disabled{border-color:var(--mat-full-pseudo-checkbox-disabled-unselected-icon-color)}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate{background-color:var(--mat-full-pseudo-checkbox-selected-icon-color);border-color:rgba(0,0,0,0)}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked::after,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate::after{color:var(--mat-full-pseudo-checkbox-selected-checkmark-color)}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled{background-color:var(--mat-full-pseudo-checkbox-disabled-selected-icon-color)}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled::after,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled::after{color:var(--mat-full-pseudo-checkbox-disabled-selected-checkmark-color)}.mat-pseudo-checkbox{width:18px;height:18px}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-checked::after{width:14px;height:6px;transform-origin:center;top:-4.2426406871px;left:0;bottom:0;right:0;margin:auto}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-indeterminate::after{top:8px;width:16px}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked::after{width:10px;height:4px;transform-origin:center;top:-2.8284271247px;left:0;bottom:0;right:0;margin:auto}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate::after{top:6px;width:12px}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatPseudoCheckbox, decorators: [{\n            type: Component,\n            args: [{ encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, selector: 'mat-pseudo-checkbox', template: '', host: {\n                        'class': 'mat-pseudo-checkbox',\n                        '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n                        '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n                        '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n                        '[class.mat-pseudo-checkbox-minimal]': 'appearance === \"minimal\"',\n                        '[class.mat-pseudo-checkbox-full]': 'appearance === \"full\"',\n                        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    }, standalone: true, styles: [\".mat-pseudo-checkbox{border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox._mat-animation-noopable{transition:none !important;animation:none !important}.mat-pseudo-checkbox._mat-animation-noopable::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{left:1px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{left:1px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-checked::after,.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-indeterminate::after{color:var(--mat-minimal-pseudo-checkbox-selected-checkmark-color)}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled::after,.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled::after{color:var(--mat-minimal-pseudo-checkbox-disabled-selected-checkmark-color)}.mat-pseudo-checkbox-full{border-color:var(--mat-full-pseudo-checkbox-unselected-icon-color);border-width:2px;border-style:solid}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-disabled{border-color:var(--mat-full-pseudo-checkbox-disabled-unselected-icon-color)}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate{background-color:var(--mat-full-pseudo-checkbox-selected-icon-color);border-color:rgba(0,0,0,0)}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked::after,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate::after{color:var(--mat-full-pseudo-checkbox-selected-checkmark-color)}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled{background-color:var(--mat-full-pseudo-checkbox-disabled-selected-icon-color)}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled::after,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled::after{color:var(--mat-full-pseudo-checkbox-disabled-selected-checkmark-color)}.mat-pseudo-checkbox{width:18px;height:18px}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-checked::after{width:14px;height:6px;transform-origin:center;top:-4.2426406871px;left:0;bottom:0;right:0;margin:auto}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-indeterminate::after{top:8px;width:16px}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked::after{width:10px;height:4px;transform-origin:center;top:-2.8284271247px;left:0;bottom:0;right:0;margin:auto}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate::after{top:6px;width:12px}\"] }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }], propDecorators: { state: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], appearance: [{\n                type: Input\n            }] } });\n\nclass MatPseudoCheckboxModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatPseudoCheckboxModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatPseudoCheckboxModule, imports: [MatCommonModule, MatPseudoCheckbox], exports: [MatPseudoCheckbox] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatPseudoCheckboxModule, imports: [MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatPseudoCheckboxModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule, MatPseudoCheckbox],\n                    exports: [MatPseudoCheckbox],\n                }]\n        }] });\n\n/**\n * Injection token used to provide the parent component to options.\n */\nconst MAT_OPTION_PARENT_COMPONENT = new InjectionToken('MAT_OPTION_PARENT_COMPONENT');\n\n// Notes on the accessibility pattern used for `mat-optgroup`.\n// The option group has two different \"modes\": regular and inert. The regular mode uses the\n// recommended a11y pattern which has `role=\"group\"` on the group element with `aria-labelledby`\n// pointing to the label. This works for `mat-select`, but it seems to hit a bug for autocomplete\n// under VoiceOver where the group doesn't get read out at all. The bug appears to be that if\n// there's __any__ a11y-related attribute on the group (e.g. `role` or `aria-labelledby`),\n// VoiceOver on Safari won't read it out.\n// We've introduced the `inert` mode as a workaround. Under this mode, all a11y attributes are\n// removed from the group, and we get the screen reader to read out the group label by mirroring it\n// inside an invisible element in the option. This is sub-optimal, because the screen reader will\n// repeat the group label on each navigation, whereas the default pattern only reads the group when\n// the user enters a new group. The following alternate approaches were considered:\n// 1. Reading out the group label using the `LiveAnnouncer` solves the problem, but we can't control\n//    when the text will be read out so sometimes it comes in too late or never if the user\n//    navigates quickly.\n// 2. `<mat-option aria-describedby=\"groupLabel\"` - This works on Safari, but VoiceOver in Chrome\n//    won't read out the description at all.\n// 3. `<mat-option aria-labelledby=\"optionLabel groupLabel\"` - This works on Chrome, but Safari\n//     doesn't read out the text at all. Furthermore, on\n// Counter for unique group ids.\nlet _uniqueOptgroupIdCounter = 0;\n/**\n * Injection token that can be used to reference instances of `MatOptgroup`. It serves as\n * alternative token to the actual `MatOptgroup` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_OPTGROUP = new InjectionToken('MatOptgroup');\n/**\n * Component that is used to group instances of `mat-option`.\n */\nclass MatOptgroup {\n    constructor(parent) {\n        /** whether the option group is disabled. */\n        this.disabled = false;\n        /** Unique id for the underlying label. */\n        this._labelId = `mat-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n        this._inert = parent?.inertGroups ?? false;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatOptgroup, deps: [{ token: MAT_OPTION_PARENT_COMPONENT, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"18.1.0-next.3\", type: MatOptgroup, isStandalone: true, selector: \"mat-optgroup\", inputs: { label: \"label\", disabled: [\"disabled\", \"disabled\", booleanAttribute] }, host: { properties: { \"attr.role\": \"_inert ? null : \\\"group\\\"\", \"attr.aria-disabled\": \"_inert ? null : disabled.toString()\", \"attr.aria-labelledby\": \"_inert ? null : _labelId\" }, classAttribute: \"mat-mdc-optgroup\" }, providers: [{ provide: MAT_OPTGROUP, useExisting: MatOptgroup }], exportAs: [\"matOptgroup\"], ngImport: i0, template: \"<span\\n  class=\\\"mat-mdc-optgroup-label\\\"\\n  role=\\\"presentation\\\"\\n  [class.mdc-list-item--disabled]=\\\"disabled\\\"\\n  [id]=\\\"_labelId\\\">\\n  <span class=\\\"mdc-list-item__primary-text\\\">{{ label }} <ng-content></ng-content></span>\\n</span>\\n\\n<ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\\n\", styles: [\".mat-mdc-optgroup{color:var(--mat-optgroup-label-text-color);font-family:var(--mat-optgroup-label-text-font);line-height:var(--mat-optgroup-label-text-line-height);font-size:var(--mat-optgroup-label-text-size);letter-spacing:var(--mat-optgroup-label-text-tracking);font-weight:var(--mat-optgroup-label-text-weight)}.mat-mdc-optgroup-label{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;min-height:48px;padding:0 16px;outline:none}.mat-mdc-optgroup-label.mdc-list-item--disabled{opacity:.38}.mat-mdc-optgroup-label .mdc-list-item__primary-text{font-size:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;font-family:inherit;text-decoration:inherit;text-transform:inherit;white-space:normal}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatOptgroup, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-optgroup', exportAs: 'matOptgroup', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        'class': 'mat-mdc-optgroup',\n                        '[attr.role]': '_inert ? null : \"group\"',\n                        '[attr.aria-disabled]': '_inert ? null : disabled.toString()',\n                        '[attr.aria-labelledby]': '_inert ? null : _labelId',\n                    }, providers: [{ provide: MAT_OPTGROUP, useExisting: MatOptgroup }], standalone: true, template: \"<span\\n  class=\\\"mat-mdc-optgroup-label\\\"\\n  role=\\\"presentation\\\"\\n  [class.mdc-list-item--disabled]=\\\"disabled\\\"\\n  [id]=\\\"_labelId\\\">\\n  <span class=\\\"mdc-list-item__primary-text\\\">{{ label }} <ng-content></ng-content></span>\\n</span>\\n\\n<ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\\n\", styles: [\".mat-mdc-optgroup{color:var(--mat-optgroup-label-text-color);font-family:var(--mat-optgroup-label-text-font);line-height:var(--mat-optgroup-label-text-line-height);font-size:var(--mat-optgroup-label-text-size);letter-spacing:var(--mat-optgroup-label-text-tracking);font-weight:var(--mat-optgroup-label-text-weight)}.mat-mdc-optgroup-label{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;min-height:48px;padding:0 16px;outline:none}.mat-mdc-optgroup-label.mdc-list-item--disabled{opacity:.38}.mat-mdc-optgroup-label .mdc-list-item__primary-text{font-size:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;font-family:inherit;text-decoration:inherit;text-transform:inherit;white-space:normal}\"] }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_OPTION_PARENT_COMPONENT]\n                }, {\n                    type: Optional\n                }] }], propDecorators: { label: [{\n                type: Input\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }] } });\n\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueIdCounter = 0;\n/** Event object emitted by MatOption when selected or deselected. */\nclass MatOptionSelectionChange {\n    constructor(\n    /** Reference to the option that emitted the event. */\n    source, \n    /** Whether the change in the option's value was a result of a user action. */\n    isUserInput = false) {\n        this.source = source;\n        this.isUserInput = isUserInput;\n    }\n}\n/**\n * Single option inside of a `<mat-select>` element.\n */\nclass MatOption {\n    /** Whether the wrapping component is in multiple selection mode. */\n    get multiple() {\n        return this._parent && this._parent.multiple;\n    }\n    /** Whether or not the option is currently selected. */\n    get selected() {\n        return this._selected;\n    }\n    /** Whether the option is disabled. */\n    get disabled() {\n        return (this.group && this.group.disabled) || this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n    }\n    /** Whether ripples for the option are disabled. */\n    get disableRipple() {\n        return !!(this._parent && this._parent.disableRipple);\n    }\n    /** Whether to display checkmark for single-selection. */\n    get hideSingleSelectionIndicator() {\n        return !!(this._parent && this._parent.hideSingleSelectionIndicator);\n    }\n    constructor(_element, _changeDetectorRef, _parent, group) {\n        this._element = _element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._parent = _parent;\n        this.group = group;\n        this._selected = false;\n        this._active = false;\n        this._disabled = false;\n        this._mostRecentViewValue = '';\n        /** The unique ID of the option. */\n        this.id = `mat-option-${_uniqueIdCounter++}`;\n        /** Event emitted when the option is selected or deselected. */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onSelectionChange = new EventEmitter();\n        /** Emits when the state of the option changes and any parents have to be notified. */\n        this._stateChanges = new Subject();\n    }\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     */\n    get active() {\n        return this._active;\n    }\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     */\n    get viewValue() {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this._text?.nativeElement.textContent || '').trim();\n    }\n    /** Selects the option. */\n    select(emitEvent = true) {\n        if (!this._selected) {\n            this._selected = true;\n            this._changeDetectorRef.markForCheck();\n            if (emitEvent) {\n                this._emitSelectionChangeEvent();\n            }\n        }\n    }\n    /** Deselects the option. */\n    deselect(emitEvent = true) {\n        if (this._selected) {\n            this._selected = false;\n            this._changeDetectorRef.markForCheck();\n            if (emitEvent) {\n                this._emitSelectionChangeEvent();\n            }\n        }\n    }\n    /** Sets focus onto this option. */\n    focus(_origin, options) {\n        // Note that we aren't using `_origin`, but we need to keep it because some internal consumers\n        // use `MatOption` in a `FocusKeyManager` and we need it to match `FocusableOption`.\n        const element = this._getHostElement();\n        if (typeof element.focus === 'function') {\n            element.focus(options);\n        }\n    }\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setActiveStyles() {\n        if (!this._active) {\n            this._active = true;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setInactiveStyles() {\n        if (this._active) {\n            this._active = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel() {\n        return this.viewValue;\n    }\n    /** Ensures the option is selected when activated from the keyboard. */\n    _handleKeydown(event) {\n        if ((event.keyCode === ENTER || event.keyCode === SPACE) && !hasModifierKey(event)) {\n            this._selectViaInteraction();\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     */\n    _selectViaInteraction() {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent(true);\n        }\n    }\n    /** Returns the correct tabindex for the option depending on disabled state. */\n    // This method is only used by `MatLegacyOption`. Keeping it here to avoid breaking the types.\n    // That's because `MatLegacyOption` use `MatOption` type in a few places such as\n    // `MatOptionSelectionChange`. It is safe to delete this when `MatLegacyOption` is deleted.\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /** Gets the host DOM element. */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n    ngAfterViewChecked() {\n        // Since parent components could be using the option's label to display the selected values\n        // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            const viewValue = this.viewValue;\n            if (viewValue !== this._mostRecentViewValue) {\n                if (this._mostRecentViewValue) {\n                    this._stateChanges.next();\n                }\n                this._mostRecentViewValue = viewValue;\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    /** Emits the selection change event. */\n    _emitSelectionChangeEvent(isUserInput = false) {\n        this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatOption, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: MAT_OPTION_PARENT_COMPONENT, optional: true }, { token: MAT_OPTGROUP, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"18.1.0-next.3\", type: MatOption, isStandalone: true, selector: \"mat-option\", inputs: { value: \"value\", id: \"id\", disabled: [\"disabled\", \"disabled\", booleanAttribute] }, outputs: { onSelectionChange: \"onSelectionChange\" }, host: { attributes: { \"role\": \"option\" }, listeners: { \"click\": \"_selectViaInteraction()\", \"keydown\": \"_handleKeydown($event)\" }, properties: { \"class.mdc-list-item--selected\": \"selected\", \"class.mat-mdc-option-multiple\": \"multiple\", \"class.mat-mdc-option-active\": \"active\", \"class.mdc-list-item--disabled\": \"disabled\", \"id\": \"id\", \"attr.aria-selected\": \"selected\", \"attr.aria-disabled\": \"disabled.toString()\" }, classAttribute: \"mat-mdc-option mdc-list-item\" }, viewQueries: [{ propertyName: \"_text\", first: true, predicate: [\"text\"], descendants: true, static: true }], exportAs: [\"matOption\"], ngImport: i0, template: \"<!-- Set aria-hidden=\\\"true\\\" to this DOM node and other decorative nodes in this file. This might\\n be contributing to issue where sometimes VoiceOver focuses on a TextNode in the a11y tree instead\\n of the Option node (#23202). Most assistive technology will generally ignore non-role,\\n non-text-content elements. Adding aria-hidden seems to make VoiceOver behave more consistently. -->\\n@if (multiple) {\\n    <mat-pseudo-checkbox\\n        class=\\\"mat-mdc-option-pseudo-checkbox\\\"\\n        [disabled]=\\\"disabled\\\"\\n        [state]=\\\"selected ? 'checked' : 'unchecked'\\\"\\n        aria-hidden=\\\"true\\\"></mat-pseudo-checkbox>\\n}\\n\\n<ng-content select=\\\"mat-icon\\\"></ng-content>\\n\\n<span class=\\\"mdc-list-item__primary-text\\\" #text><ng-content></ng-content></span>\\n\\n<!-- Render checkmark at the end for single-selection. -->\\n@if (!multiple && selected && !hideSingleSelectionIndicator) {\\n    <mat-pseudo-checkbox\\n        class=\\\"mat-mdc-option-pseudo-checkbox\\\"\\n        [disabled]=\\\"disabled\\\"\\n        state=\\\"checked\\\"\\n        aria-hidden=\\\"true\\\"\\n        appearance=\\\"minimal\\\"></mat-pseudo-checkbox>\\n}\\n\\n<!-- See a11y notes inside optgroup.ts for context behind this element. -->\\n@if (group && group._inert) {\\n    <span class=\\\"cdk-visually-hidden\\\">({{ group.label }})</span>\\n}\\n\\n<div class=\\\"mat-mdc-option-ripple mat-mdc-focus-indicator\\\" aria-hidden=\\\"true\\\" mat-ripple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\" [matRippleDisabled]=\\\"disabled || disableRipple\\\">\\n</div>\\n\", styles: [\".mat-mdc-option{-webkit-user-select:none;user-select:none;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;min-height:48px;padding:0 16px;cursor:pointer;-webkit-tap-highlight-color:rgba(0,0,0,0);color:var(--mat-option-label-text-color);font-family:var(--mat-option-label-text-font);line-height:var(--mat-option-label-text-line-height);font-size:var(--mat-option-label-text-size);letter-spacing:var(--mat-option-label-text-tracking);font-weight:var(--mat-option-label-text-weight)}.mat-mdc-option:hover:not(.mdc-list-item--disabled){background-color:var(--mat-option-hover-state-layer-color)}.mat-mdc-option:focus.mdc-list-item,.mat-mdc-option.mat-mdc-option-active.mdc-list-item{background-color:var(--mat-option-focus-state-layer-color);outline:0}.mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled) .mdc-list-item__primary-text{color:var(--mat-option-selected-state-label-text-color)}.mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled):not(.mat-mdc-option-multiple){background-color:var(--mat-option-selected-state-layer-color)}.mat-mdc-option.mdc-list-item{align-items:center;background:rgba(0,0,0,0)}.mat-mdc-option.mdc-list-item--disabled{cursor:default;pointer-events:none}.mat-mdc-option.mdc-list-item--disabled .mat-mdc-option-pseudo-checkbox,.mat-mdc-option.mdc-list-item--disabled .mdc-list-item__primary-text,.mat-mdc-option.mdc-list-item--disabled>mat-icon{opacity:.38}.mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:32px}[dir=rtl] .mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:16px;padding-right:32px}.mat-mdc-option .mat-icon,.mat-mdc-option .mat-pseudo-checkbox-full{margin-right:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-icon,[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox-full{margin-right:0;margin-left:16px}.mat-mdc-option .mat-pseudo-checkbox-minimal{margin-left:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox-minimal{margin-right:16px;margin-left:0}.mat-mdc-option .mat-mdc-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-option .mdc-list-item__primary-text{white-space:normal;font-size:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;font-family:inherit;text-decoration:inherit;text-transform:inherit;margin-right:auto}[dir=rtl] .mat-mdc-option .mdc-list-item__primary-text{margin-right:0;margin-left:auto}.cdk-high-contrast-active .mat-mdc-option.mdc-list-item--selected:not(.mat-mdc-option-multiple)::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}[dir=rtl] .cdk-high-contrast-active .mat-mdc-option.mdc-list-item--selected:not(.mat-mdc-option-multiple)::after{right:auto;left:16px}.mat-mdc-option-multiple{--mdc-list-list-item-selected-container-color:var(--mdc-list-list-item-container-color, transparent)}.mat-mdc-option-active .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"], dependencies: [{ kind: \"component\", type: MatPseudoCheckbox, selector: \"mat-pseudo-checkbox\", inputs: [\"state\", \"disabled\", \"appearance\"] }, { kind: \"directive\", type: MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatOption, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-option', exportAs: 'matOption', host: {\n                        'role': 'option',\n                        '[class.mdc-list-item--selected]': 'selected',\n                        '[class.mat-mdc-option-multiple]': 'multiple',\n                        '[class.mat-mdc-option-active]': 'active',\n                        '[class.mdc-list-item--disabled]': 'disabled',\n                        '[id]': 'id',\n                        // Set aria-selected to false for non-selected items and true for selected items. Conform to\n                        // [WAI ARIA Listbox authoring practices guide](\n                        //  https://www.w3.org/WAI/ARIA/apg/patterns/listbox/), \"If any options are selected, each\n                        // selected option has either aria-selected or aria-checked  set to true. All options that are\n                        // selectable but not selected have either aria-selected or aria-checked set to false.\" Align\n                        // aria-selected implementation of Chips and List components.\n                        //\n                        // Set `aria-selected=\"false\"` on not-selected listbox options to fix VoiceOver announcing\n                        // every option as \"selected\" (#21491).\n                        '[attr.aria-selected]': 'selected',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '(click)': '_selectViaInteraction()',\n                        '(keydown)': '_handleKeydown($event)',\n                        'class': 'mat-mdc-option mdc-list-item',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, imports: [MatPseudoCheckbox, MatRipple], template: \"<!-- Set aria-hidden=\\\"true\\\" to this DOM node and other decorative nodes in this file. This might\\n be contributing to issue where sometimes VoiceOver focuses on a TextNode in the a11y tree instead\\n of the Option node (#23202). Most assistive technology will generally ignore non-role,\\n non-text-content elements. Adding aria-hidden seems to make VoiceOver behave more consistently. -->\\n@if (multiple) {\\n    <mat-pseudo-checkbox\\n        class=\\\"mat-mdc-option-pseudo-checkbox\\\"\\n        [disabled]=\\\"disabled\\\"\\n        [state]=\\\"selected ? 'checked' : 'unchecked'\\\"\\n        aria-hidden=\\\"true\\\"></mat-pseudo-checkbox>\\n}\\n\\n<ng-content select=\\\"mat-icon\\\"></ng-content>\\n\\n<span class=\\\"mdc-list-item__primary-text\\\" #text><ng-content></ng-content></span>\\n\\n<!-- Render checkmark at the end for single-selection. -->\\n@if (!multiple && selected && !hideSingleSelectionIndicator) {\\n    <mat-pseudo-checkbox\\n        class=\\\"mat-mdc-option-pseudo-checkbox\\\"\\n        [disabled]=\\\"disabled\\\"\\n        state=\\\"checked\\\"\\n        aria-hidden=\\\"true\\\"\\n        appearance=\\\"minimal\\\"></mat-pseudo-checkbox>\\n}\\n\\n<!-- See a11y notes inside optgroup.ts for context behind this element. -->\\n@if (group && group._inert) {\\n    <span class=\\\"cdk-visually-hidden\\\">({{ group.label }})</span>\\n}\\n\\n<div class=\\\"mat-mdc-option-ripple mat-mdc-focus-indicator\\\" aria-hidden=\\\"true\\\" mat-ripple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\" [matRippleDisabled]=\\\"disabled || disableRipple\\\">\\n</div>\\n\", styles: [\".mat-mdc-option{-webkit-user-select:none;user-select:none;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;min-height:48px;padding:0 16px;cursor:pointer;-webkit-tap-highlight-color:rgba(0,0,0,0);color:var(--mat-option-label-text-color);font-family:var(--mat-option-label-text-font);line-height:var(--mat-option-label-text-line-height);font-size:var(--mat-option-label-text-size);letter-spacing:var(--mat-option-label-text-tracking);font-weight:var(--mat-option-label-text-weight)}.mat-mdc-option:hover:not(.mdc-list-item--disabled){background-color:var(--mat-option-hover-state-layer-color)}.mat-mdc-option:focus.mdc-list-item,.mat-mdc-option.mat-mdc-option-active.mdc-list-item{background-color:var(--mat-option-focus-state-layer-color);outline:0}.mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled) .mdc-list-item__primary-text{color:var(--mat-option-selected-state-label-text-color)}.mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled):not(.mat-mdc-option-multiple){background-color:var(--mat-option-selected-state-layer-color)}.mat-mdc-option.mdc-list-item{align-items:center;background:rgba(0,0,0,0)}.mat-mdc-option.mdc-list-item--disabled{cursor:default;pointer-events:none}.mat-mdc-option.mdc-list-item--disabled .mat-mdc-option-pseudo-checkbox,.mat-mdc-option.mdc-list-item--disabled .mdc-list-item__primary-text,.mat-mdc-option.mdc-list-item--disabled>mat-icon{opacity:.38}.mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:32px}[dir=rtl] .mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:16px;padding-right:32px}.mat-mdc-option .mat-icon,.mat-mdc-option .mat-pseudo-checkbox-full{margin-right:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-icon,[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox-full{margin-right:0;margin-left:16px}.mat-mdc-option .mat-pseudo-checkbox-minimal{margin-left:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox-minimal{margin-right:16px;margin-left:0}.mat-mdc-option .mat-mdc-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-option .mdc-list-item__primary-text{white-space:normal;font-size:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;font-family:inherit;text-decoration:inherit;text-transform:inherit;margin-right:auto}[dir=rtl] .mat-mdc-option .mdc-list-item__primary-text{margin-right:0;margin-left:auto}.cdk-high-contrast-active .mat-mdc-option.mdc-list-item--selected:not(.mat-mdc-option-multiple)::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}[dir=rtl] .cdk-high-contrast-active .mat-mdc-option.mdc-list-item--selected:not(.mat-mdc-option-multiple)::after{right:auto;left:16px}.mat-mdc-option-multiple{--mdc-list-list-item-selected-container-color:var(--mdc-list-list-item-container-color, transparent)}.mat-mdc-option-active .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"] }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_OPTION_PARENT_COMPONENT]\n                }] }, { type: MatOptgroup, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_OPTGROUP]\n                }] }], propDecorators: { value: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], onSelectionChange: [{\n                type: Output\n            }], _text: [{\n                type: ViewChild,\n                args: ['text', { static: true }]\n            }] } });\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nfunction _countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {\n    if (optionGroups.length) {\n        let optionsArray = options.toArray();\n        let groups = optionGroups.toArray();\n        let groupCounter = 0;\n        for (let i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n        return groupCounter;\n    }\n    return 0;\n}\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionOffset Offset of the option from the top of the panel.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nfunction _getOptionScrollPosition(optionOffset, optionHeight, currentScrollPosition, panelHeight) {\n    if (optionOffset < currentScrollPosition) {\n        return optionOffset;\n    }\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n    return currentScrollPosition;\n}\n\nclass MatOptionModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatOptionModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatOptionModule, imports: [MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, MatOption, MatOptgroup], exports: [MatOption, MatOptgroup] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatOptionModule, imports: [MatRippleModule, MatCommonModule, MatPseudoCheckboxModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatOptionModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, MatOption, MatOptgroup],\n                    exports: [MatOption, MatOptgroup],\n                }]\n        }] });\n\n/** The options for the MatRippleLoader's event listeners. */\nconst eventListenerOptions = { capture: true };\n/**\n * The events that should trigger the initialization of the ripple.\n * Note that we use `mousedown`, rather than `click`, for mouse devices because\n * we can't rely on `mouseenter` in the shadow DOM and `click` happens too late.\n */\nconst rippleInteractionEvents = ['focus', 'mousedown', 'mouseenter', 'touchstart'];\n/** The attribute attached to a component whose ripple has not yet been initialized. */\nconst matRippleUninitialized = 'mat-ripple-loader-uninitialized';\n/** Additional classes that should be added to the ripple when it is rendered. */\nconst matRippleClassName = 'mat-ripple-loader-class-name';\n/** Whether the ripple should be centered. */\nconst matRippleCentered = 'mat-ripple-loader-centered';\n/** Whether the ripple should be disabled. */\nconst matRippleDisabled = 'mat-ripple-loader-disabled';\n/**\n * Handles attaching ripples on demand.\n *\n * This service allows us to avoid eagerly creating & attaching MatRipples.\n * It works by creating & attaching a ripple only when a component is first interacted with.\n *\n * @docs-private\n */\nclass MatRippleLoader {\n    constructor() {\n        this._document = inject(DOCUMENT, { optional: true });\n        this._animationMode = inject(ANIMATION_MODULE_TYPE, { optional: true });\n        this._globalRippleOptions = inject(MAT_RIPPLE_GLOBAL_OPTIONS, { optional: true });\n        this._platform = inject(Platform);\n        this._ngZone = inject(NgZone);\n        this._hosts = new Map();\n        /**\n         * Handles creating and attaching component internals\n         * when a component is initially interacted with.\n         */\n        this._onInteraction = (event) => {\n            const eventTarget = _getEventTarget(event);\n            if (eventTarget instanceof HTMLElement) {\n                // TODO(wagnermaciel): Consider batching these events to improve runtime performance.\n                const element = eventTarget.closest(`[${matRippleUninitialized}=\"${this._globalRippleOptions?.namespace ?? ''}\"]`);\n                if (element) {\n                    this._createRipple(element);\n                }\n            }\n        };\n        this._ngZone.runOutsideAngular(() => {\n            for (const event of rippleInteractionEvents) {\n                this._document?.addEventListener(event, this._onInteraction, eventListenerOptions);\n            }\n        });\n    }\n    ngOnDestroy() {\n        const hosts = this._hosts.keys();\n        for (const host of hosts) {\n            this.destroyRipple(host);\n        }\n        for (const event of rippleInteractionEvents) {\n            this._document?.removeEventListener(event, this._onInteraction, eventListenerOptions);\n        }\n    }\n    /**\n     * Configures the ripple that will be rendered by the ripple loader.\n     *\n     * Stores the given information about how the ripple should be configured on the host\n     * element so that it can later be retrived & used when the ripple is actually created.\n     */\n    configureRipple(host, config) {\n        // Indicates that the ripple has not yet been rendered for this component.\n        host.setAttribute(matRippleUninitialized, this._globalRippleOptions?.namespace ?? '');\n        // Store the additional class name(s) that should be added to the ripple element.\n        if (config.className || !host.hasAttribute(matRippleClassName)) {\n            host.setAttribute(matRippleClassName, config.className || '');\n        }\n        // Store whether the ripple should be centered.\n        if (config.centered) {\n            host.setAttribute(matRippleCentered, '');\n        }\n        if (config.disabled) {\n            host.setAttribute(matRippleDisabled, '');\n        }\n    }\n    /** Returns the ripple instance for the given host element. */\n    getRipple(host) {\n        const ripple = this._hosts.get(host);\n        return ripple || this._createRipple(host);\n    }\n    /** Sets the disabled state on the ripple instance corresponding to the given host element. */\n    setDisabled(host, disabled) {\n        const ripple = this._hosts.get(host);\n        // If the ripple has already been instantiated, just disable it.\n        if (ripple) {\n            ripple.disabled = disabled;\n            return;\n        }\n        // Otherwise, set an attribute so we know what the\n        // disabled state should be when the ripple is initialized.\n        if (disabled) {\n            host.setAttribute(matRippleDisabled, '');\n        }\n        else {\n            host.removeAttribute(matRippleDisabled);\n        }\n    }\n    /** Creates a MatRipple and appends it to the given element. */\n    _createRipple(host) {\n        if (!this._document) {\n            return;\n        }\n        const existingRipple = this._hosts.get(host);\n        if (existingRipple) {\n            return existingRipple;\n        }\n        // Create the ripple element.\n        host.querySelector('.mat-ripple')?.remove();\n        const rippleEl = this._document.createElement('span');\n        rippleEl.classList.add('mat-ripple', host.getAttribute(matRippleClassName));\n        host.append(rippleEl);\n        // Create the MatRipple.\n        const ripple = new MatRipple(new ElementRef(rippleEl), this._ngZone, this._platform, this._globalRippleOptions ? this._globalRippleOptions : undefined, this._animationMode ? this._animationMode : undefined);\n        ripple._isInitialized = true;\n        ripple.trigger = host;\n        ripple.centered = host.hasAttribute(matRippleCentered);\n        ripple.disabled = host.hasAttribute(matRippleDisabled);\n        this.attachRipple(host, ripple);\n        return ripple;\n    }\n    attachRipple(host, ripple) {\n        host.removeAttribute(matRippleUninitialized);\n        this._hosts.set(host, ripple);\n    }\n    destroyRipple(host) {\n        const ripple = this._hosts.get(host);\n        if (ripple) {\n            // Since this directive is created manually, it needs to be destroyed manually too.\n            // tslint:disable-next-line:no-lifecycle-invocation\n            ripple.ngOnDestroy();\n            this._hosts.delete(host);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatRippleLoader, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatRippleLoader, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatRippleLoader, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n\n/**\n * Internal shared component used as a container in form field controls.\n * Not to be confused with `mat-form-field` which MDC calls a \"text field\".\n * @docs-private\n */\nclass _MatInternalFormField {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: _MatInternalFormField, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.1.0-next.3\", type: _MatInternalFormField, isStandalone: true, selector: \"div[mat-internal-form-field]\", inputs: { labelPosition: \"labelPosition\" }, host: { properties: { \"class.mdc-form-field--align-end\": \"labelPosition === \\\"before\\\"\" }, classAttribute: \"mdc-form-field mat-internal-form-field\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, styles: [\".mat-internal-form-field{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:inline-flex;align-items:center;vertical-align:middle}.mat-internal-form-field>label{margin-left:0;margin-right:auto;padding-left:4px;padding-right:0;order:0}[dir=rtl] .mat-internal-form-field>label{margin-left:auto;margin-right:0;padding-left:0;padding-right:4px}.mdc-form-field--align-end>label{margin-left:auto;margin-right:0;padding-left:0;padding-right:4px;order:-1}[dir=rtl] .mdc-form-field--align-end .mdc-form-field--align-end label{margin-left:0;margin-right:auto;padding-left:4px;padding-right:0}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: _MatInternalFormField, decorators: [{\n            type: Component,\n            args: [{ selector: 'div[mat-internal-form-field]', standalone: true, template: '<ng-content></ng-content>', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        'class': 'mdc-form-field mat-internal-form-field',\n                        '[class.mdc-form-field--align-end]': 'labelPosition === \"before\"',\n                    }, styles: [\".mat-internal-form-field{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:inline-flex;align-items:center;vertical-align:middle}.mat-internal-form-field>label{margin-left:0;margin-right:auto;padding-left:4px;padding-right:0;order:0}[dir=rtl] .mat-internal-form-field>label{margin-left:auto;margin-right:0;padding-left:0;padding-right:4px}.mdc-form-field--align-end>label{margin-left:auto;margin-right:0;padding-left:0;padding-right:4px;order:-1}[dir=rtl] .mdc-form-field--align-end .mdc-form-field--align-end label{margin-left:0;margin-right:auto;padding-left:4px;padding-right:0}\"] }]\n        }], propDecorators: { labelPosition: [{\n                type: Input,\n                args: [{ required: true }]\n            }] } });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AnimationCurves, AnimationDurations, DateAdapter, ErrorStateMatcher, MATERIAL_SANITY_CHECKS, MAT_DATE_FORMATS, MAT_DATE_LOCALE, MAT_DATE_LOCALE_FACTORY, MAT_NATIVE_DATE_FORMATS, MAT_OPTGROUP, MAT_OPTION_PARENT_COMPONENT, MAT_RIPPLE_GLOBAL_OPTIONS, MatCommonModule, MatLine, MatLineModule, MatNativeDateModule, MatOptgroup, MatOption, MatOptionModule, MatOptionSelectionChange, MatPseudoCheckbox, MatPseudoCheckboxModule, MatRipple, MatRippleLoader, MatRippleModule, NativeDateAdapter, NativeDateModule, RippleRef, RippleRenderer, RippleState, ShowOnDirtyErrorStateMatcher, VERSION, _ErrorStateTracker, _MatInternalFormField, _countGroupLabelsBeforeOption, _getOptionScrollPosition, defaultRippleAnimationConfig, mixinColor, mixinDisableRipple, mixinDisabled, mixinErrorState, mixinInitialized, mixinTabIndex, provideNativeDateAdapter, setLines };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, ANIMATION_MODULE_TYPE, numberAttribute, Component, ChangeDetectionStrategy, ViewEncapsulation, Optional, Inject, Input, ViewChild, NgModule } from '@angular/core';\nimport { NgTemplateOutlet, CommonModule } from '@angular/common';\nimport { MatCommonModule } from '@angular/material/core';\n\n/** Injection token to be used to override the default options for `mat-progress-spinner`. */\nconst MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS = new InjectionToken('mat-progress-spinner-default-options', {\n    providedIn: 'root',\n    factory: MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY() {\n    return { diameter: BASE_SIZE };\n}\n/**\n * Base reference size of the spinner.\n */\nconst BASE_SIZE = 100;\n/**\n * Base reference stroke width of the spinner.\n */\nconst BASE_STROKE_WIDTH = 10;\nclass MatProgressSpinner {\n    // TODO: should be typed as `ThemePalette` but internal apps pass in arbitrary strings.\n    /**\n     * Theme color of the progress spinner. This API is supported in M2 themes only, it\n     * has no effect in M3 themes.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.io/guide/theming#using-component-color-variants.\n     */\n    get color() {\n        return this._color || this._defaultColor;\n    }\n    set color(value) {\n        this._color = value;\n    }\n    constructor(_elementRef, animationMode, defaults) {\n        this._elementRef = _elementRef;\n        this._defaultColor = 'primary';\n        this._value = 0;\n        this._diameter = BASE_SIZE;\n        this._noopAnimations =\n            animationMode === 'NoopAnimations' && !!defaults && !defaults._forceAnimations;\n        this.mode =\n            _elementRef.nativeElement.nodeName.toLowerCase() === 'mat-spinner'\n                ? 'indeterminate'\n                : 'determinate';\n        if (defaults) {\n            if (defaults.color) {\n                this.color = this._defaultColor = defaults.color;\n            }\n            if (defaults.diameter) {\n                this.diameter = defaults.diameter;\n            }\n            if (defaults.strokeWidth) {\n                this.strokeWidth = defaults.strokeWidth;\n            }\n        }\n    }\n    /** Value of the progress bar. Defaults to zero. Mirrored to aria-valuenow. */\n    get value() {\n        return this.mode === 'determinate' ? this._value : 0;\n    }\n    set value(v) {\n        this._value = Math.max(0, Math.min(100, v || 0));\n    }\n    /** The diameter of the progress spinner (will set width and height of svg). */\n    get diameter() {\n        return this._diameter;\n    }\n    set diameter(size) {\n        this._diameter = size || 0;\n    }\n    /** Stroke width of the progress spinner. */\n    get strokeWidth() {\n        return this._strokeWidth ?? this.diameter / 10;\n    }\n    set strokeWidth(value) {\n        this._strokeWidth = value || 0;\n    }\n    /** The radius of the spinner, adjusted for stroke width. */\n    _circleRadius() {\n        return (this.diameter - BASE_STROKE_WIDTH) / 2;\n    }\n    /** The view box of the spinner's svg element. */\n    _viewBox() {\n        const viewBox = this._circleRadius() * 2 + this.strokeWidth;\n        return `0 0 ${viewBox} ${viewBox}`;\n    }\n    /** The stroke circumference of the svg circle. */\n    _strokeCircumference() {\n        return 2 * Math.PI * this._circleRadius();\n    }\n    /** The dash offset of the svg circle. */\n    _strokeDashOffset() {\n        if (this.mode === 'determinate') {\n            return (this._strokeCircumference() * (100 - this._value)) / 100;\n        }\n        return null;\n    }\n    /** Stroke width of the circle in percent. */\n    _circleStrokeWidth() {\n        return (this.strokeWidth / this.diameter) * 100;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatProgressSpinner, deps: [{ token: i0.ElementRef }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"18.1.0-next.3\", type: MatProgressSpinner, isStandalone: true, selector: \"mat-progress-spinner, mat-spinner\", inputs: { color: \"color\", mode: \"mode\", value: [\"value\", \"value\", numberAttribute], diameter: [\"diameter\", \"diameter\", numberAttribute], strokeWidth: [\"strokeWidth\", \"strokeWidth\", numberAttribute] }, host: { attributes: { \"role\": \"progressbar\", \"tabindex\": \"-1\" }, properties: { \"class\": \"\\\"mat-\\\" + color\", \"class._mat-animation-noopable\": \"_noopAnimations\", \"class.mdc-circular-progress--indeterminate\": \"mode === \\\"indeterminate\\\"\", \"style.width.px\": \"diameter\", \"style.height.px\": \"diameter\", \"style.--mdc-circular-progress-size\": \"diameter + \\\"px\\\"\", \"style.--mdc-circular-progress-active-indicator-width\": \"diameter + \\\"px\\\"\", \"attr.aria-valuemin\": \"0\", \"attr.aria-valuemax\": \"100\", \"attr.aria-valuenow\": \"mode === \\\"determinate\\\" ? value : null\", \"attr.mode\": \"mode\" }, classAttribute: \"mat-mdc-progress-spinner mdc-circular-progress\" }, viewQueries: [{ propertyName: \"_determinateCircle\", first: true, predicate: [\"determinateSpinner\"], descendants: true }], exportAs: [\"matProgressSpinner\"], ngImport: i0, template: \"<ng-template #circle>\\n  <svg [attr.viewBox]=\\\"_viewBox()\\\" class=\\\"mdc-circular-progress__indeterminate-circle-graphic\\\"\\n       xmlns=\\\"http://www.w3.org/2000/svg\\\" focusable=\\\"false\\\">\\n    <circle [attr.r]=\\\"_circleRadius()\\\"\\n            [style.stroke-dasharray.px]=\\\"_strokeCircumference()\\\"\\n            [style.stroke-dashoffset.px]=\\\"_strokeCircumference() / 2\\\"\\n            [style.stroke-width.%]=\\\"_circleStrokeWidth()\\\"\\n            cx=\\\"50%\\\" cy=\\\"50%\\\"/>\\n  </svg>\\n</ng-template>\\n\\n<!--\\n  All children need to be hidden for screen readers in order to support ChromeVox.\\n  More context in the issue: https://github.com/angular/components/issues/22165.\\n-->\\n<div class=\\\"mdc-circular-progress__determinate-container\\\" aria-hidden=\\\"true\\\" #determinateSpinner>\\n  <svg [attr.viewBox]=\\\"_viewBox()\\\" class=\\\"mdc-circular-progress__determinate-circle-graphic\\\"\\n       xmlns=\\\"http://www.w3.org/2000/svg\\\" focusable=\\\"false\\\">\\n    <circle [attr.r]=\\\"_circleRadius()\\\"\\n            [style.stroke-dasharray.px]=\\\"_strokeCircumference()\\\"\\n            [style.stroke-dashoffset.px]=\\\"_strokeDashOffset()\\\"\\n            [style.stroke-width.%]=\\\"_circleStrokeWidth()\\\"\\n            class=\\\"mdc-circular-progress__determinate-circle\\\"\\n            cx=\\\"50%\\\" cy=\\\"50%\\\"/>\\n  </svg>\\n</div>\\n<!--TODO: figure out why there are 3 separate svgs-->\\n<div class=\\\"mdc-circular-progress__indeterminate-container\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"mdc-circular-progress__spinner-layer\\\">\\n    <div class=\\\"mdc-circular-progress__circle-clipper mdc-circular-progress__circle-left\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n    <div class=\\\"mdc-circular-progress__gap-patch\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n    <div class=\\\"mdc-circular-progress__circle-clipper mdc-circular-progress__circle-right\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\"@keyframes mdc-circular-progress-container-rotate{to{transform:rotate(360deg)}}@keyframes mdc-circular-progress-spinner-layer-rotate{12.5%{transform:rotate(135deg)}25%{transform:rotate(270deg)}37.5%{transform:rotate(405deg)}50%{transform:rotate(540deg)}62.5%{transform:rotate(675deg)}75%{transform:rotate(810deg)}87.5%{transform:rotate(945deg)}100%{transform:rotate(1080deg)}}@keyframes mdc-circular-progress-color-1-fade-in-out{from{opacity:.99}25%{opacity:.99}26%{opacity:0}89%{opacity:0}90%{opacity:.99}to{opacity:.99}}@keyframes mdc-circular-progress-color-2-fade-in-out{from{opacity:0}15%{opacity:0}25%{opacity:.99}50%{opacity:.99}51%{opacity:0}to{opacity:0}}@keyframes mdc-circular-progress-color-3-fade-in-out{from{opacity:0}40%{opacity:0}50%{opacity:.99}75%{opacity:.99}76%{opacity:0}to{opacity:0}}@keyframes mdc-circular-progress-color-4-fade-in-out{from{opacity:0}65%{opacity:0}75%{opacity:.99}90%{opacity:.99}to{opacity:0}}@keyframes mdc-circular-progress-left-spin{from{transform:rotate(265deg)}50%{transform:rotate(130deg)}to{transform:rotate(265deg)}}@keyframes mdc-circular-progress-right-spin{from{transform:rotate(-265deg)}50%{transform:rotate(-130deg)}to{transform:rotate(-265deg)}}.mdc-circular-progress{display:inline-flex;position:relative;direction:ltr;line-height:0;transition:opacity 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-circular-progress__determinate-container,.mdc-circular-progress__indeterminate-circle-graphic,.mdc-circular-progress__indeterminate-container,.mdc-circular-progress__spinner-layer{position:absolute;width:100%;height:100%}.mdc-circular-progress__determinate-container{transform:rotate(-90deg)}.mdc-circular-progress__indeterminate-container{font-size:0;letter-spacing:0;white-space:nowrap;opacity:0}.mdc-circular-progress__determinate-circle-graphic,.mdc-circular-progress__indeterminate-circle-graphic{fill:rgba(0,0,0,0)}.mdc-circular-progress__determinate-circle{transition:stroke-dashoffset 500ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-circular-progress__gap-patch{position:absolute;top:0;left:47.5%;box-sizing:border-box;width:5%;height:100%;overflow:hidden}.mdc-circular-progress__gap-patch .mdc-circular-progress__indeterminate-circle-graphic{left:-900%;width:2000%;transform:rotate(180deg)}.mdc-circular-progress__circle-clipper{display:inline-flex;position:relative;width:50%;height:100%;overflow:hidden}.mdc-circular-progress__circle-clipper .mdc-circular-progress__indeterminate-circle-graphic{width:200%}.mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{left:-100%}.mdc-circular-progress--indeterminate .mdc-circular-progress__determinate-container{opacity:0}.mdc-circular-progress--indeterminate .mdc-circular-progress__indeterminate-container{opacity:1}.mdc-circular-progress--indeterminate .mdc-circular-progress__indeterminate-container{animation:mdc-circular-progress-container-rotate 1568.2352941176ms linear infinite}.mdc-circular-progress--indeterminate .mdc-circular-progress__spinner-layer{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-1{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-1-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-2{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-2-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-3{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-3-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-4{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-4-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-left .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-left-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-right-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--closed{opacity:0}.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:var(--mdc-circular-progress-active-indicator-color)}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}.mat-mdc-progress-spinner circle{stroke-width:var(--mdc-circular-progress-active-indicator-width)}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-1 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-2 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-3 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-4 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}.mat-mdc-progress-spinner .mdc-circular-progress{width:var(--mdc-circular-progress-size) !important;height:var(--mdc-circular-progress-size) !important}.mat-mdc-progress-spinner{display:block;overflow:hidden;line-height:0}.mat-mdc-progress-spinner._mat-animation-noopable,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__determinate-circle{transition:none}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-circle-graphic,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__spinner-layer,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container{animation:none}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container circle{stroke-dasharray:0 !important}.cdk-high-contrast-active .mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic,.cdk-high-contrast-active .mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle{stroke:currentColor;stroke:CanvasText}\"], dependencies: [{ kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatProgressSpinner, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-progress-spinner, mat-spinner', exportAs: 'matProgressSpinner', host: {\n                        'role': 'progressbar',\n                        'class': 'mat-mdc-progress-spinner mdc-circular-progress',\n                        // set tab index to -1 so screen readers will read the aria-label\n                        // Note: there is a known issue with JAWS that does not read progressbar aria labels on FireFox\n                        'tabindex': '-1',\n                        '[class]': '\"mat-\" + color',\n                        '[class._mat-animation-noopable]': `_noopAnimations`,\n                        '[class.mdc-circular-progress--indeterminate]': 'mode === \"indeterminate\"',\n                        '[style.width.px]': 'diameter',\n                        '[style.height.px]': 'diameter',\n                        '[style.--mdc-circular-progress-size]': 'diameter + \"px\"',\n                        '[style.--mdc-circular-progress-active-indicator-width]': 'diameter + \"px\"',\n                        '[attr.aria-valuemin]': '0',\n                        '[attr.aria-valuemax]': '100',\n                        '[attr.aria-valuenow]': 'mode === \"determinate\" ? value : null',\n                        '[attr.mode]': 'mode',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, standalone: true, imports: [NgTemplateOutlet], template: \"<ng-template #circle>\\n  <svg [attr.viewBox]=\\\"_viewBox()\\\" class=\\\"mdc-circular-progress__indeterminate-circle-graphic\\\"\\n       xmlns=\\\"http://www.w3.org/2000/svg\\\" focusable=\\\"false\\\">\\n    <circle [attr.r]=\\\"_circleRadius()\\\"\\n            [style.stroke-dasharray.px]=\\\"_strokeCircumference()\\\"\\n            [style.stroke-dashoffset.px]=\\\"_strokeCircumference() / 2\\\"\\n            [style.stroke-width.%]=\\\"_circleStrokeWidth()\\\"\\n            cx=\\\"50%\\\" cy=\\\"50%\\\"/>\\n  </svg>\\n</ng-template>\\n\\n<!--\\n  All children need to be hidden for screen readers in order to support ChromeVox.\\n  More context in the issue: https://github.com/angular/components/issues/22165.\\n-->\\n<div class=\\\"mdc-circular-progress__determinate-container\\\" aria-hidden=\\\"true\\\" #determinateSpinner>\\n  <svg [attr.viewBox]=\\\"_viewBox()\\\" class=\\\"mdc-circular-progress__determinate-circle-graphic\\\"\\n       xmlns=\\\"http://www.w3.org/2000/svg\\\" focusable=\\\"false\\\">\\n    <circle [attr.r]=\\\"_circleRadius()\\\"\\n            [style.stroke-dasharray.px]=\\\"_strokeCircumference()\\\"\\n            [style.stroke-dashoffset.px]=\\\"_strokeDashOffset()\\\"\\n            [style.stroke-width.%]=\\\"_circleStrokeWidth()\\\"\\n            class=\\\"mdc-circular-progress__determinate-circle\\\"\\n            cx=\\\"50%\\\" cy=\\\"50%\\\"/>\\n  </svg>\\n</div>\\n<!--TODO: figure out why there are 3 separate svgs-->\\n<div class=\\\"mdc-circular-progress__indeterminate-container\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"mdc-circular-progress__spinner-layer\\\">\\n    <div class=\\\"mdc-circular-progress__circle-clipper mdc-circular-progress__circle-left\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n    <div class=\\\"mdc-circular-progress__gap-patch\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n    <div class=\\\"mdc-circular-progress__circle-clipper mdc-circular-progress__circle-right\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\"@keyframes mdc-circular-progress-container-rotate{to{transform:rotate(360deg)}}@keyframes mdc-circular-progress-spinner-layer-rotate{12.5%{transform:rotate(135deg)}25%{transform:rotate(270deg)}37.5%{transform:rotate(405deg)}50%{transform:rotate(540deg)}62.5%{transform:rotate(675deg)}75%{transform:rotate(810deg)}87.5%{transform:rotate(945deg)}100%{transform:rotate(1080deg)}}@keyframes mdc-circular-progress-color-1-fade-in-out{from{opacity:.99}25%{opacity:.99}26%{opacity:0}89%{opacity:0}90%{opacity:.99}to{opacity:.99}}@keyframes mdc-circular-progress-color-2-fade-in-out{from{opacity:0}15%{opacity:0}25%{opacity:.99}50%{opacity:.99}51%{opacity:0}to{opacity:0}}@keyframes mdc-circular-progress-color-3-fade-in-out{from{opacity:0}40%{opacity:0}50%{opacity:.99}75%{opacity:.99}76%{opacity:0}to{opacity:0}}@keyframes mdc-circular-progress-color-4-fade-in-out{from{opacity:0}65%{opacity:0}75%{opacity:.99}90%{opacity:.99}to{opacity:0}}@keyframes mdc-circular-progress-left-spin{from{transform:rotate(265deg)}50%{transform:rotate(130deg)}to{transform:rotate(265deg)}}@keyframes mdc-circular-progress-right-spin{from{transform:rotate(-265deg)}50%{transform:rotate(-130deg)}to{transform:rotate(-265deg)}}.mdc-circular-progress{display:inline-flex;position:relative;direction:ltr;line-height:0;transition:opacity 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-circular-progress__determinate-container,.mdc-circular-progress__indeterminate-circle-graphic,.mdc-circular-progress__indeterminate-container,.mdc-circular-progress__spinner-layer{position:absolute;width:100%;height:100%}.mdc-circular-progress__determinate-container{transform:rotate(-90deg)}.mdc-circular-progress__indeterminate-container{font-size:0;letter-spacing:0;white-space:nowrap;opacity:0}.mdc-circular-progress__determinate-circle-graphic,.mdc-circular-progress__indeterminate-circle-graphic{fill:rgba(0,0,0,0)}.mdc-circular-progress__determinate-circle{transition:stroke-dashoffset 500ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-circular-progress__gap-patch{position:absolute;top:0;left:47.5%;box-sizing:border-box;width:5%;height:100%;overflow:hidden}.mdc-circular-progress__gap-patch .mdc-circular-progress__indeterminate-circle-graphic{left:-900%;width:2000%;transform:rotate(180deg)}.mdc-circular-progress__circle-clipper{display:inline-flex;position:relative;width:50%;height:100%;overflow:hidden}.mdc-circular-progress__circle-clipper .mdc-circular-progress__indeterminate-circle-graphic{width:200%}.mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{left:-100%}.mdc-circular-progress--indeterminate .mdc-circular-progress__determinate-container{opacity:0}.mdc-circular-progress--indeterminate .mdc-circular-progress__indeterminate-container{opacity:1}.mdc-circular-progress--indeterminate .mdc-circular-progress__indeterminate-container{animation:mdc-circular-progress-container-rotate 1568.2352941176ms linear infinite}.mdc-circular-progress--indeterminate .mdc-circular-progress__spinner-layer{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-1{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-1-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-2{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-2-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-3{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-3-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-4{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-4-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-left .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-left-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-right-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--closed{opacity:0}.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:var(--mdc-circular-progress-active-indicator-color)}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}.mat-mdc-progress-spinner circle{stroke-width:var(--mdc-circular-progress-active-indicator-width)}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-1 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-2 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-3 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-4 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}.mat-mdc-progress-spinner .mdc-circular-progress{width:var(--mdc-circular-progress-size) !important;height:var(--mdc-circular-progress-size) !important}.mat-mdc-progress-spinner{display:block;overflow:hidden;line-height:0}.mat-mdc-progress-spinner._mat-animation-noopable,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__determinate-circle{transition:none}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-circle-graphic,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__spinner-layer,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container{animation:none}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container circle{stroke-dasharray:0 !important}.cdk-high-contrast-active .mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic,.cdk-high-contrast-active .mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle{stroke:currentColor;stroke:CanvasText}\"] }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS]\n                }] }], propDecorators: { color: [{\n                type: Input\n            }], _determinateCircle: [{\n                type: ViewChild,\n                args: ['determinateSpinner']\n            }], mode: [{\n                type: Input\n            }], value: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], diameter: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], strokeWidth: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }] } });\n/**\n * @deprecated Import Progress Spinner instead. Note that the\n *    `mat-spinner` selector isn't deprecated.\n * @breaking-change 16.0.0\n */\n// tslint:disable-next-line:variable-name\nconst MatSpinner = MatProgressSpinner;\n\nclass MatProgressSpinnerModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatProgressSpinnerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatProgressSpinnerModule, imports: [CommonModule, MatProgressSpinner, MatSpinner], exports: [MatProgressSpinner, MatSpinner, MatCommonModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatProgressSpinnerModule, imports: [CommonModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatProgressSpinnerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, MatProgressSpinner, MatSpinner],\n                    exports: [MatProgressSpinner, MatSpinner, MatCommonModule],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS, MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY, MatProgressSpinner, MatProgressSpinnerModule, MatSpinner };\n","import { innerFrom } from '../observable/innerFrom';\nimport { Observable } from '../Observable';\nimport { mergeMap } from '../operators/mergeMap';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isFunction } from '../util/isFunction';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nconst nodeEventEmitterMethods = ['addListener', 'removeListener'];\nconst eventTargetMethods = ['addEventListener', 'removeEventListener'];\nconst jqueryMethods = ['on', 'off'];\nexport function fromEvent(target, eventName, options, resultSelector) {\n    if (isFunction(options)) {\n        resultSelector = options;\n        options = undefined;\n    }\n    if (resultSelector) {\n        return fromEvent(target, eventName, options).pipe(mapOneOrManyArgs(resultSelector));\n    }\n    const [add, remove] = isEventTarget(target)\n        ? eventTargetMethods.map((methodName) => (handler) => target[methodName](eventName, handler, options))\n        :\n            isNodeStyleEventEmitter(target)\n                ? nodeEventEmitterMethods.map(toCommonHandlerRegistry(target, eventName))\n                : isJQueryStyleEventEmitter(target)\n                    ? jqueryMethods.map(toCommonHandlerRegistry(target, eventName))\n                    : [];\n    if (!add) {\n        if (isArrayLike(target)) {\n            return mergeMap((subTarget) => fromEvent(subTarget, eventName, options))(innerFrom(target));\n        }\n    }\n    if (!add) {\n        throw new TypeError('Invalid event target');\n    }\n    return new Observable((subscriber) => {\n        const handler = (...args) => subscriber.next(1 < args.length ? args : args[0]);\n        add(handler);\n        return () => remove(handler);\n    });\n}\nfunction toCommonHandlerRegistry(target, eventName) {\n    return (methodName) => (handler) => target[methodName](eventName, handler);\n}\nfunction isNodeStyleEventEmitter(target) {\n    return isFunction(target.addListener) && isFunction(target.removeListener);\n}\nfunction isJQueryStyleEventEmitter(target) {\n    return isFunction(target.on) && isFunction(target.off);\n}\nfunction isEventTarget(target) {\n    return isFunction(target.addEventListener) && isFunction(target.removeEventListener);\n}\n","import { Subscription } from '../Subscription';\nexport const animationFrameProvider = {\n    schedule(callback) {\n        let request = requestAnimationFrame;\n        let cancel = cancelAnimationFrame;\n        const { delegate } = animationFrameProvider;\n        if (delegate) {\n            request = delegate.requestAnimationFrame;\n            cancel = delegate.cancelAnimationFrame;\n        }\n        const handle = request((timestamp) => {\n            cancel = undefined;\n            callback(timestamp);\n        });\n        return new Subscription(() => cancel === null || cancel === void 0 ? void 0 : cancel(handle));\n    },\n    requestAnimationFrame(...args) {\n        const { delegate } = animationFrameProvider;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.requestAnimationFrame) || requestAnimationFrame)(...args);\n    },\n    cancelAnimationFrame(...args) {\n        const { delegate } = animationFrameProvider;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.cancelAnimationFrame) || cancelAnimationFrame)(...args);\n    },\n    delegate: undefined,\n};\n","import { AnimationFrameAction } from './AnimationFrameAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\nexport const animationFrameScheduler = new AnimationFrameScheduler(AnimationFrameAction);\nexport const animationFrame = animationFrameScheduler;\n","import { AsyncScheduler } from './AsyncScheduler';\nexport class AnimationFrameScheduler extends AsyncScheduler {\n    flush(action) {\n        this._active = true;\n        const flushId = this._scheduled;\n        this._scheduled = undefined;\n        const { actions } = this;\n        let error;\n        action = action || actions.shift();\n        do {\n            if ((error = action.execute(action.state, action.delay))) {\n                break;\n            }\n        } while ((action = actions[0]) && action.id === flushId && actions.shift());\n        this._active = false;\n        if (error) {\n            while ((action = actions[0]) && action.id === flushId && actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { animationFrameProvider } from './animationFrameProvider';\nexport class AnimationFrameAction extends AsyncAction {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n    }\n    requestAsyncId(scheduler, id, delay = 0) {\n        if (delay !== null && delay > 0) {\n            return super.requestAsyncId(scheduler, id, delay);\n        }\n        scheduler.actions.push(this);\n        return scheduler._scheduled || (scheduler._scheduled = animationFrameProvider.requestAnimationFrame(() => scheduler.flush(undefined)));\n    }\n    recycleAsyncId(scheduler, id, delay = 0) {\n        var _a;\n        if (delay != null ? delay > 0 : this.delay > 0) {\n            return super.recycleAsyncId(scheduler, id, delay);\n        }\n        const { actions } = scheduler;\n        if (id != null && ((_a = actions[actions.length - 1]) === null || _a === void 0 ? void 0 : _a.id) !== id) {\n            animationFrameProvider.cancelAnimationFrame(id);\n            scheduler._scheduled = undefined;\n        }\n        return undefined;\n    }\n}\n","let nextHandle = 1;\nlet resolved;\nconst activeHandles = {};\nfunction findAndClearHandle(handle) {\n    if (handle in activeHandles) {\n        delete activeHandles[handle];\n        return true;\n    }\n    return false;\n}\nexport const Immediate = {\n    setImmediate(cb) {\n        const handle = nextHandle++;\n        activeHandles[handle] = true;\n        if (!resolved) {\n            resolved = Promise.resolve();\n        }\n        resolved.then(() => findAndClearHandle(handle) && cb());\n        return handle;\n    },\n    clearImmediate(handle) {\n        findAndClearHandle(handle);\n    },\n};\nexport const TestTools = {\n    pending() {\n        return Object.keys(activeHandles).length;\n    }\n};\n","import { Immediate } from '../util/Immediate';\nconst { setImmediate, clearImmediate } = Immediate;\nexport const immediateProvider = {\n    setImmediate(...args) {\n        const { delegate } = immediateProvider;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.setImmediate) || setImmediate)(...args);\n    },\n    clearImmediate(handle) {\n        const { delegate } = immediateProvider;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearImmediate) || clearImmediate)(handle);\n    },\n    delegate: undefined,\n};\n","import { AsapAction } from './AsapAction';\nimport { AsapScheduler } from './AsapScheduler';\nexport const asapScheduler = new AsapScheduler(AsapAction);\nexport const asap = asapScheduler;\n","import { AsyncScheduler } from './AsyncScheduler';\nexport class AsapScheduler extends AsyncScheduler {\n    flush(action) {\n        this._active = true;\n        const flushId = this._scheduled;\n        this._scheduled = undefined;\n        const { actions } = this;\n        let error;\n        action = action || actions.shift();\n        do {\n            if ((error = action.execute(action.state, action.delay))) {\n                break;\n            }\n        } while ((action = actions[0]) && action.id === flushId && actions.shift());\n        this._active = false;\n        if (error) {\n            while ((action = actions[0]) && action.id === flushId && actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { immediateProvider } from './immediateProvider';\nexport class AsapAction extends AsyncAction {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n    }\n    requestAsyncId(scheduler, id, delay = 0) {\n        if (delay !== null && delay > 0) {\n            return super.requestAsyncId(scheduler, id, delay);\n        }\n        scheduler.actions.push(this);\n        return scheduler._scheduled || (scheduler._scheduled = immediateProvider.setImmediate(scheduler.flush.bind(scheduler, undefined)));\n    }\n    recycleAsyncId(scheduler, id, delay = 0) {\n        var _a;\n        if (delay != null ? delay > 0 : this.delay > 0) {\n            return super.recycleAsyncId(scheduler, id, delay);\n        }\n        const { actions } = scheduler;\n        if (id != null && ((_a = actions[actions.length - 1]) === null || _a === void 0 ? void 0 : _a.id) !== id) {\n            immediateProvider.clearImmediate(id);\n            if (scheduler._scheduled === id) {\n                scheduler._scheduled = undefined;\n            }\n        }\n        return undefined;\n    }\n}\n","import { asyncScheduler } from '../scheduler/async';\nimport { audit } from './audit';\nimport { timer } from '../observable/timer';\nexport function auditTime(duration, scheduler = asyncScheduler) {\n    return audit(() => timer(duration, scheduler));\n}\n","import { operate } from '../util/lift';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function audit(durationSelector) {\n    return operate((source, subscriber) => {\n        let hasValue = false;\n        let lastValue = null;\n        let durationSubscriber = null;\n        let isComplete = false;\n        const endDuration = () => {\n            durationSubscriber === null || durationSubscriber === void 0 ? void 0 : durationSubscriber.unsubscribe();\n            durationSubscriber = null;\n            if (hasValue) {\n                hasValue = false;\n                const value = lastValue;\n                lastValue = null;\n                subscriber.next(value);\n            }\n            isComplete && subscriber.complete();\n        };\n        const cleanupDuration = () => {\n            durationSubscriber = null;\n            isComplete && subscriber.complete();\n        };\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n            hasValue = true;\n            lastValue = value;\n            if (!durationSubscriber) {\n                innerFrom(durationSelector(value)).subscribe((durationSubscriber = createOperatorSubscriber(subscriber, endDuration, cleanupDuration)));\n            }\n        }, () => {\n            isComplete = true;\n            (!hasValue || !durationSubscriber || durationSubscriber.closed) && subscriber.complete();\n        }));\n    });\n}\n","import { coerceNumberProperty, coerceElement } from '@angular/cdk/coercion';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, Directive, Input, Injectable, Optional, Inject, inject, Injector, afterNextRender, booleanAttribute, Component, ViewEncapsulation, ChangeDetectionStrategy, Output, ViewChild, SkipSelf, ElementRef, NgModule } from '@angular/core';\nimport { Subject, of, Observable, fromEvent, animationFrameScheduler, asapScheduler, Subscription, isObservable } from 'rxjs';\nimport { distinctUntilChanged, auditTime, filter, takeUntil, startWith, pairwise, switchMap, shareReplay } from 'rxjs/operators';\nimport * as i1 from '@angular/cdk/platform';\nimport { getRtlScrollAxisType, RtlScrollAxisType, supportsScrollBehavior, Platform } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport * as i2 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i2$1 from '@angular/cdk/collections';\nimport { isDataSource, ArrayDataSource, _VIEW_REPEATER_STRATEGY, _RecycleViewRepeaterStrategy } from '@angular/cdk/collections';\n\n/** The injection token used to specify the virtual scrolling strategy. */\nconst VIRTUAL_SCROLL_STRATEGY = new InjectionToken('VIRTUAL_SCROLL_STRATEGY');\n\n/** Virtual scrolling strategy for lists with items of known fixed size. */\nclass FixedSizeVirtualScrollStrategy {\n    /**\n     * @param itemSize The size of the items in the virtually scrolling list.\n     * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     */\n    constructor(itemSize, minBufferPx, maxBufferPx) {\n        this._scrolledIndexChange = new Subject();\n        /** @docs-private Implemented as part of VirtualScrollStrategy. */\n        this.scrolledIndexChange = this._scrolledIndexChange.pipe(distinctUntilChanged());\n        /** The attached viewport. */\n        this._viewport = null;\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n    }\n    /**\n     * Attaches this scroll strategy to a viewport.\n     * @param viewport The viewport to attach this strategy to.\n     */\n    attach(viewport) {\n        this._viewport = viewport;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /** Detaches this scroll strategy from the currently attached viewport. */\n    detach() {\n        this._scrolledIndexChange.complete();\n        this._viewport = null;\n    }\n    /**\n     * Update the item size and buffer size.\n     * @param itemSize The size of the items in the virtually scrolling list.\n     * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     */\n    updateItemAndBufferSize(itemSize, minBufferPx, maxBufferPx) {\n        if (maxBufferPx < minBufferPx && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('CDK virtual scroll: maxBufferPx must be greater than or equal to minBufferPx');\n        }\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onContentScrolled() {\n        this._updateRenderedRange();\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onDataLengthChanged() {\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onContentRendered() {\n        /* no-op */\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onRenderedOffsetChanged() {\n        /* no-op */\n    }\n    /**\n     * Scroll to the offset for the given index.\n     * @param index The index of the element to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling.\n     */\n    scrollToIndex(index, behavior) {\n        if (this._viewport) {\n            this._viewport.scrollToOffset(index * this._itemSize, behavior);\n        }\n    }\n    /** Update the viewport's total content size. */\n    _updateTotalContentSize() {\n        if (!this._viewport) {\n            return;\n        }\n        this._viewport.setTotalContentSize(this._viewport.getDataLength() * this._itemSize);\n    }\n    /** Update the viewport's rendered range. */\n    _updateRenderedRange() {\n        if (!this._viewport) {\n            return;\n        }\n        const renderedRange = this._viewport.getRenderedRange();\n        const newRange = { start: renderedRange.start, end: renderedRange.end };\n        const viewportSize = this._viewport.getViewportSize();\n        const dataLength = this._viewport.getDataLength();\n        let scrollOffset = this._viewport.measureScrollOffset();\n        // Prevent NaN as result when dividing by zero.\n        let firstVisibleIndex = this._itemSize > 0 ? scrollOffset / this._itemSize : 0;\n        // If user scrolls to the bottom of the list and data changes to a smaller list\n        if (newRange.end > dataLength) {\n            // We have to recalculate the first visible index based on new data length and viewport size.\n            const maxVisibleItems = Math.ceil(viewportSize / this._itemSize);\n            const newVisibleIndex = Math.max(0, Math.min(firstVisibleIndex, dataLength - maxVisibleItems));\n            // If first visible index changed we must update scroll offset to handle start/end buffers\n            // Current range must also be adjusted to cover the new position (bottom of new list).\n            if (firstVisibleIndex != newVisibleIndex) {\n                firstVisibleIndex = newVisibleIndex;\n                scrollOffset = newVisibleIndex * this._itemSize;\n                newRange.start = Math.floor(firstVisibleIndex);\n            }\n            newRange.end = Math.max(0, Math.min(dataLength, newRange.start + maxVisibleItems));\n        }\n        const startBuffer = scrollOffset - newRange.start * this._itemSize;\n        if (startBuffer < this._minBufferPx && newRange.start != 0) {\n            const expandStart = Math.ceil((this._maxBufferPx - startBuffer) / this._itemSize);\n            newRange.start = Math.max(0, newRange.start - expandStart);\n            newRange.end = Math.min(dataLength, Math.ceil(firstVisibleIndex + (viewportSize + this._minBufferPx) / this._itemSize));\n        }\n        else {\n            const endBuffer = newRange.end * this._itemSize - (scrollOffset + viewportSize);\n            if (endBuffer < this._minBufferPx && newRange.end != dataLength) {\n                const expandEnd = Math.ceil((this._maxBufferPx - endBuffer) / this._itemSize);\n                if (expandEnd > 0) {\n                    newRange.end = Math.min(dataLength, newRange.end + expandEnd);\n                    newRange.start = Math.max(0, Math.floor(firstVisibleIndex - this._minBufferPx / this._itemSize));\n                }\n            }\n        }\n        this._viewport.setRenderedRange(newRange);\n        this._viewport.setRenderedContentOffset(this._itemSize * newRange.start);\n        this._scrolledIndexChange.next(Math.floor(firstVisibleIndex));\n    }\n}\n/**\n * Provider factory for `FixedSizeVirtualScrollStrategy` that simply extracts the already created\n * `FixedSizeVirtualScrollStrategy` from the given directive.\n * @param fixedSizeDir The instance of `CdkFixedSizeVirtualScroll` to extract the\n *     `FixedSizeVirtualScrollStrategy` from.\n */\nfunction _fixedSizeVirtualScrollStrategyFactory(fixedSizeDir) {\n    return fixedSizeDir._scrollStrategy;\n}\n/** A virtual scroll strategy that supports fixed-size items. */\nclass CdkFixedSizeVirtualScroll {\n    constructor() {\n        this._itemSize = 20;\n        this._minBufferPx = 100;\n        this._maxBufferPx = 200;\n        /** The scroll strategy used by this directive. */\n        this._scrollStrategy = new FixedSizeVirtualScrollStrategy(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n    /** The size of the items in the list (in pixels). */\n    get itemSize() {\n        return this._itemSize;\n    }\n    set itemSize(value) {\n        this._itemSize = coerceNumberProperty(value);\n    }\n    /**\n     * The minimum amount of buffer rendered beyond the viewport (in pixels).\n     * If the amount of buffer dips below this number, more items will be rendered. Defaults to 100px.\n     */\n    get minBufferPx() {\n        return this._minBufferPx;\n    }\n    set minBufferPx(value) {\n        this._minBufferPx = coerceNumberProperty(value);\n    }\n    /**\n     * The number of pixels worth of buffer to render for when rendering new items. Defaults to 200px.\n     */\n    get maxBufferPx() {\n        return this._maxBufferPx;\n    }\n    set maxBufferPx(value) {\n        this._maxBufferPx = coerceNumberProperty(value);\n    }\n    ngOnChanges() {\n        this._scrollStrategy.updateItemAndBufferSize(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: CdkFixedSizeVirtualScroll, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.1.0-next.3\", type: CdkFixedSizeVirtualScroll, isStandalone: true, selector: \"cdk-virtual-scroll-viewport[itemSize]\", inputs: { itemSize: \"itemSize\", minBufferPx: \"minBufferPx\", maxBufferPx: \"maxBufferPx\" }, providers: [\n            {\n                provide: VIRTUAL_SCROLL_STRATEGY,\n                useFactory: _fixedSizeVirtualScrollStrategyFactory,\n                deps: [forwardRef(() => CdkFixedSizeVirtualScroll)],\n            },\n        ], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: CdkFixedSizeVirtualScroll, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-virtual-scroll-viewport[itemSize]',\n                    standalone: true,\n                    providers: [\n                        {\n                            provide: VIRTUAL_SCROLL_STRATEGY,\n                            useFactory: _fixedSizeVirtualScrollStrategyFactory,\n                            deps: [forwardRef(() => CdkFixedSizeVirtualScroll)],\n                        },\n                    ],\n                }]\n        }], propDecorators: { itemSize: [{\n                type: Input\n            }], minBufferPx: [{\n                type: Input\n            }], maxBufferPx: [{\n                type: Input\n            }] } });\n\n/** Time in ms to throttle the scrolling events by default. */\nconst DEFAULT_SCROLL_TIME = 20;\n/**\n * Service contained all registered Scrollable references and emits an event when any one of the\n * Scrollable references emit a scrolled event.\n */\nclass ScrollDispatcher {\n    constructor(_ngZone, _platform, document) {\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        /** Subject for notifying that a registered scrollable reference element has been scrolled. */\n        this._scrolled = new Subject();\n        /** Keeps track of the global `scroll` and `resize` subscriptions. */\n        this._globalSubscription = null;\n        /** Keeps track of the amount of subscriptions to `scrolled`. Used for cleaning up afterwards. */\n        this._scrolledCount = 0;\n        /**\n         * Map of all the scrollable references that are registered with the service and their\n         * scroll event subscriptions.\n         */\n        this.scrollContainers = new Map();\n        this._document = document;\n    }\n    /**\n     * Registers a scrollable instance with the service and listens for its scrolled events. When the\n     * scrollable is scrolled, the service emits the event to its scrolled observable.\n     * @param scrollable Scrollable instance to be registered.\n     */\n    register(scrollable) {\n        if (!this.scrollContainers.has(scrollable)) {\n            this.scrollContainers.set(scrollable, scrollable.elementScrolled().subscribe(() => this._scrolled.next(scrollable)));\n        }\n    }\n    /**\n     * De-registers a Scrollable reference and unsubscribes from its scroll event observable.\n     * @param scrollable Scrollable instance to be deregistered.\n     */\n    deregister(scrollable) {\n        const scrollableReference = this.scrollContainers.get(scrollable);\n        if (scrollableReference) {\n            scrollableReference.unsubscribe();\n            this.scrollContainers.delete(scrollable);\n        }\n    }\n    /**\n     * Returns an observable that emits an event whenever any of the registered Scrollable\n     * references (or window, document, or body) fire a scrolled event. Can provide a time in ms\n     * to override the default \"throttle\" time.\n     *\n     * **Note:** in order to avoid hitting change detection for every scroll event,\n     * all of the events emitted from this stream will be run outside the Angular zone.\n     * If you need to update any data bindings as a result of a scroll event, you have\n     * to run the callback using `NgZone.run`.\n     */\n    scrolled(auditTimeInMs = DEFAULT_SCROLL_TIME) {\n        if (!this._platform.isBrowser) {\n            return of();\n        }\n        return new Observable((observer) => {\n            if (!this._globalSubscription) {\n                this._addGlobalListener();\n            }\n            // In the case of a 0ms delay, use an observable without auditTime\n            // since it does add a perceptible delay in processing overhead.\n            const subscription = auditTimeInMs > 0\n                ? this._scrolled.pipe(auditTime(auditTimeInMs)).subscribe(observer)\n                : this._scrolled.subscribe(observer);\n            this._scrolledCount++;\n            return () => {\n                subscription.unsubscribe();\n                this._scrolledCount--;\n                if (!this._scrolledCount) {\n                    this._removeGlobalListener();\n                }\n            };\n        });\n    }\n    ngOnDestroy() {\n        this._removeGlobalListener();\n        this.scrollContainers.forEach((_, container) => this.deregister(container));\n        this._scrolled.complete();\n    }\n    /**\n     * Returns an observable that emits whenever any of the\n     * scrollable ancestors of an element are scrolled.\n     * @param elementOrElementRef Element whose ancestors to listen for.\n     * @param auditTimeInMs Time to throttle the scroll events.\n     */\n    ancestorScrolled(elementOrElementRef, auditTimeInMs) {\n        const ancestors = this.getAncestorScrollContainers(elementOrElementRef);\n        return this.scrolled(auditTimeInMs).pipe(filter(target => {\n            return !target || ancestors.indexOf(target) > -1;\n        }));\n    }\n    /** Returns all registered Scrollables that contain the provided element. */\n    getAncestorScrollContainers(elementOrElementRef) {\n        const scrollingContainers = [];\n        this.scrollContainers.forEach((_subscription, scrollable) => {\n            if (this._scrollableContainsElement(scrollable, elementOrElementRef)) {\n                scrollingContainers.push(scrollable);\n            }\n        });\n        return scrollingContainers;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        return this._document.defaultView || window;\n    }\n    /** Returns true if the element is contained within the provided Scrollable. */\n    _scrollableContainsElement(scrollable, elementOrElementRef) {\n        let element = coerceElement(elementOrElementRef);\n        let scrollableElement = scrollable.getElementRef().nativeElement;\n        // Traverse through the element parents until we reach null, checking if any of the elements\n        // are the scrollable's element.\n        do {\n            if (element == scrollableElement) {\n                return true;\n            }\n        } while ((element = element.parentElement));\n        return false;\n    }\n    /** Sets up the global scroll listeners. */\n    _addGlobalListener() {\n        this._globalSubscription = this._ngZone.runOutsideAngular(() => {\n            const window = this._getWindow();\n            return fromEvent(window.document, 'scroll').subscribe(() => this._scrolled.next());\n        });\n    }\n    /** Cleans up the global scroll listener. */\n    _removeGlobalListener() {\n        if (this._globalSubscription) {\n            this._globalSubscription.unsubscribe();\n            this._globalSubscription = null;\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: ScrollDispatcher, deps: [{ token: i0.NgZone }, { token: i1.Platform }, { token: DOCUMENT, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: ScrollDispatcher, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: ScrollDispatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: i0.NgZone }, { type: i1.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }] });\n\n/**\n * Sends an event when the directive's element is scrolled. Registers itself with the\n * ScrollDispatcher service to include itself as part of its collection of scrolling events that it\n * can be listened to through the service.\n */\nclass CdkScrollable {\n    constructor(elementRef, scrollDispatcher, ngZone, dir) {\n        this.elementRef = elementRef;\n        this.scrollDispatcher = scrollDispatcher;\n        this.ngZone = ngZone;\n        this.dir = dir;\n        this._destroyed = new Subject();\n        this._elementScrolled = new Observable((observer) => this.ngZone.runOutsideAngular(() => fromEvent(this.elementRef.nativeElement, 'scroll')\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(observer)));\n    }\n    ngOnInit() {\n        this.scrollDispatcher.register(this);\n    }\n    ngOnDestroy() {\n        this.scrollDispatcher.deregister(this);\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Returns observable that emits when a scroll event is fired on the host element. */\n    elementScrolled() {\n        return this._elementScrolled;\n    }\n    /** Gets the ElementRef for the viewport. */\n    getElementRef() {\n        return this.elementRef;\n    }\n    /**\n     * Scrolls to the specified offsets. This is a normalized version of the browser's native scrollTo\n     * method, since browsers are not consistent about what scrollLeft means in RTL. For this method\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param options specified the offsets to scroll to.\n     */\n    scrollTo(options) {\n        const el = this.elementRef.nativeElement;\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        // Rewrite start & end offsets as right or left offsets.\n        if (options.left == null) {\n            options.left = isRtl ? options.end : options.start;\n        }\n        if (options.right == null) {\n            options.right = isRtl ? options.start : options.end;\n        }\n        // Rewrite the bottom offset as a top offset.\n        if (options.bottom != null) {\n            options.top =\n                el.scrollHeight - el.clientHeight - options.bottom;\n        }\n        // Rewrite the right offset as a left offset.\n        if (isRtl && getRtlScrollAxisType() != RtlScrollAxisType.NORMAL) {\n            if (options.left != null) {\n                options.right =\n                    el.scrollWidth - el.clientWidth - options.left;\n            }\n            if (getRtlScrollAxisType() == RtlScrollAxisType.INVERTED) {\n                options.left = options.right;\n            }\n            else if (getRtlScrollAxisType() == RtlScrollAxisType.NEGATED) {\n                options.left = options.right ? -options.right : options.right;\n            }\n        }\n        else {\n            if (options.right != null) {\n                options.left =\n                    el.scrollWidth - el.clientWidth - options.right;\n            }\n        }\n        this._applyScrollToOptions(options);\n    }\n    _applyScrollToOptions(options) {\n        const el = this.elementRef.nativeElement;\n        if (supportsScrollBehavior()) {\n            el.scrollTo(options);\n        }\n        else {\n            if (options.top != null) {\n                el.scrollTop = options.top;\n            }\n            if (options.left != null) {\n                el.scrollLeft = options.left;\n            }\n        }\n    }\n    /**\n     * Measures the scroll offset relative to the specified edge of the viewport. This method can be\n     * used instead of directly checking scrollLeft or scrollTop, since browsers are not consistent\n     * about what scrollLeft means in RTL. The values returned by this method are normalized such that\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param from The edge to measure from.\n     */\n    measureScrollOffset(from) {\n        const LEFT = 'left';\n        const RIGHT = 'right';\n        const el = this.elementRef.nativeElement;\n        if (from == 'top') {\n            return el.scrollTop;\n        }\n        if (from == 'bottom') {\n            return el.scrollHeight - el.clientHeight - el.scrollTop;\n        }\n        // Rewrite start & end as left or right offsets.\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        if (from == 'start') {\n            from = isRtl ? RIGHT : LEFT;\n        }\n        else if (from == 'end') {\n            from = isRtl ? LEFT : RIGHT;\n        }\n        if (isRtl && getRtlScrollAxisType() == RtlScrollAxisType.INVERTED) {\n            // For INVERTED, scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n            else {\n                return el.scrollLeft;\n            }\n        }\n        else if (isRtl && getRtlScrollAxisType() == RtlScrollAxisType.NEGATED) {\n            // For NEGATED, scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft + el.scrollWidth - el.clientWidth;\n            }\n            else {\n                return -el.scrollLeft;\n            }\n        }\n        else {\n            // For NORMAL, as well as non-RTL contexts, scrollLeft is 0 when scrolled all the way left and\n            // (scrollWidth - clientWidth) when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft;\n            }\n            else {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: CdkScrollable, deps: [{ token: i0.ElementRef }, { token: ScrollDispatcher }, { token: i0.NgZone }, { token: i2.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.1.0-next.3\", type: CdkScrollable, isStandalone: true, selector: \"[cdk-scrollable], [cdkScrollable]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: CdkScrollable, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdk-scrollable], [cdkScrollable]',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: ScrollDispatcher }, { type: i0.NgZone }, { type: i2.Directionality, decorators: [{\n                    type: Optional\n                }] }] });\n\n/** Time in ms to throttle the resize events by default. */\nconst DEFAULT_RESIZE_TIME = 20;\n/**\n * Simple utility for getting the bounds of the browser viewport.\n * @docs-private\n */\nclass ViewportRuler {\n    constructor(_platform, ngZone, document) {\n        this._platform = _platform;\n        /** Stream of viewport change events. */\n        this._change = new Subject();\n        /** Event listener that will be used to handle the viewport change events. */\n        this._changeListener = (event) => {\n            this._change.next(event);\n        };\n        this._document = document;\n        ngZone.runOutsideAngular(() => {\n            if (_platform.isBrowser) {\n                const window = this._getWindow();\n                // Note that bind the events ourselves, rather than going through something like RxJS's\n                // `fromEvent` so that we can ensure that they're bound outside of the NgZone.\n                window.addEventListener('resize', this._changeListener);\n                window.addEventListener('orientationchange', this._changeListener);\n            }\n            // Clear the cached position so that the viewport is re-measured next time it is required.\n            // We don't need to keep track of the subscription, because it is completed on destroy.\n            this.change().subscribe(() => (this._viewportSize = null));\n        });\n    }\n    ngOnDestroy() {\n        if (this._platform.isBrowser) {\n            const window = this._getWindow();\n            window.removeEventListener('resize', this._changeListener);\n            window.removeEventListener('orientationchange', this._changeListener);\n        }\n        this._change.complete();\n    }\n    /** Returns the viewport's width and height. */\n    getViewportSize() {\n        if (!this._viewportSize) {\n            this._updateViewportSize();\n        }\n        const output = { width: this._viewportSize.width, height: this._viewportSize.height };\n        // If we're not on a browser, don't cache the size since it'll be mocked out anyway.\n        if (!this._platform.isBrowser) {\n            this._viewportSize = null;\n        }\n        return output;\n    }\n    /** Gets a DOMRect for the viewport's bounds. */\n    getViewportRect() {\n        // Use the document element's bounding rect rather than the window scroll properties\n        // (e.g. pageYOffset, scrollY) due to in issue in Chrome and IE where window scroll\n        // properties and client coordinates (boundingClientRect, clientX/Y, etc.) are in different\n        // conceptual viewports. Under most circumstances these viewports are equivalent, but they\n        // can disagree when the page is pinch-zoomed (on devices that support touch).\n        // See https://bugs.chromium.org/p/chromium/issues/detail?id=489206#c4\n        // We use the documentElement instead of the body because, by default (without a css reset)\n        // browsers typically give the document body an 8px margin, which is not included in\n        // getBoundingClientRect().\n        const scrollPosition = this.getViewportScrollPosition();\n        const { width, height } = this.getViewportSize();\n        return {\n            top: scrollPosition.top,\n            left: scrollPosition.left,\n            bottom: scrollPosition.top + height,\n            right: scrollPosition.left + width,\n            height,\n            width,\n        };\n    }\n    /** Gets the (top, left) scroll position of the viewport. */\n    getViewportScrollPosition() {\n        // While we can get a reference to the fake document\n        // during SSR, it doesn't have getBoundingClientRect.\n        if (!this._platform.isBrowser) {\n            return { top: 0, left: 0 };\n        }\n        // The top-left-corner of the viewport is determined by the scroll position of the document\n        // body, normally just (scrollLeft, scrollTop). However, Chrome and Firefox disagree about\n        // whether `document.body` or `document.documentElement` is the scrolled element, so reading\n        // `scrollTop` and `scrollLeft` is inconsistent. However, using the bounding rect of\n        // `document.documentElement` works consistently, where the `top` and `left` values will\n        // equal negative the scroll position.\n        const document = this._document;\n        const window = this._getWindow();\n        const documentElement = document.documentElement;\n        const documentRect = documentElement.getBoundingClientRect();\n        const top = -documentRect.top ||\n            document.body.scrollTop ||\n            window.scrollY ||\n            documentElement.scrollTop ||\n            0;\n        const left = -documentRect.left ||\n            document.body.scrollLeft ||\n            window.scrollX ||\n            documentElement.scrollLeft ||\n            0;\n        return { top, left };\n    }\n    /**\n     * Returns a stream that emits whenever the size of the viewport changes.\n     * This stream emits outside of the Angular zone.\n     * @param throttleTime Time in milliseconds to throttle the stream.\n     */\n    change(throttleTime = DEFAULT_RESIZE_TIME) {\n        return throttleTime > 0 ? this._change.pipe(auditTime(throttleTime)) : this._change;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        return this._document.defaultView || window;\n    }\n    /** Updates the cached viewport size. */\n    _updateViewportSize() {\n        const window = this._getWindow();\n        this._viewportSize = this._platform.isBrowser\n            ? { width: window.innerWidth, height: window.innerHeight }\n            : { width: 0, height: 0 };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: ViewportRuler, deps: [{ token: i1.Platform }, { token: i0.NgZone }, { token: DOCUMENT, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: ViewportRuler, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: ViewportRuler, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: i1.Platform }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }] });\n\nconst VIRTUAL_SCROLLABLE = new InjectionToken('VIRTUAL_SCROLLABLE');\n/**\n * Extending the {@link CdkScrollable} to be used as scrolling container for virtual scrolling.\n */\nclass CdkVirtualScrollable extends CdkScrollable {\n    constructor(elementRef, scrollDispatcher, ngZone, dir) {\n        super(elementRef, scrollDispatcher, ngZone, dir);\n    }\n    /**\n     * Measure the viewport size for the provided orientation.\n     *\n     * @param orientation The orientation to measure the size from.\n     */\n    measureViewportSize(orientation) {\n        const viewportEl = this.elementRef.nativeElement;\n        return orientation === 'horizontal' ? viewportEl.clientWidth : viewportEl.clientHeight;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: CdkVirtualScrollable, deps: [{ token: i0.ElementRef }, { token: ScrollDispatcher }, { token: i0.NgZone }, { token: i2.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.1.0-next.3\", type: CdkVirtualScrollable, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: CdkVirtualScrollable, decorators: [{\n            type: Directive\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: ScrollDispatcher }, { type: i0.NgZone }, { type: i2.Directionality, decorators: [{\n                    type: Optional\n                }] }] });\n\n/** Checks if the given ranges are equal. */\nfunction rangesEqual(r1, r2) {\n    return r1.start == r2.start && r1.end == r2.end;\n}\n/**\n * Scheduler to be used for scroll events. Needs to fall back to\n * something that doesn't rely on requestAnimationFrame on environments\n * that don't support it (e.g. server-side rendering).\n */\nconst SCROLL_SCHEDULER = typeof requestAnimationFrame !== 'undefined' ? animationFrameScheduler : asapScheduler;\n/** A viewport that virtualizes its scrolling with the help of `CdkVirtualForOf`. */\nclass CdkVirtualScrollViewport extends CdkVirtualScrollable {\n    /** The direction the viewport scrolls. */\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(orientation) {\n        if (this._orientation !== orientation) {\n            this._orientation = orientation;\n            this._calculateSpacerSize();\n        }\n    }\n    constructor(elementRef, _changeDetectorRef, ngZone, _scrollStrategy, dir, scrollDispatcher, viewportRuler, scrollable) {\n        super(elementRef, scrollDispatcher, ngZone, dir);\n        this.elementRef = elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._scrollStrategy = _scrollStrategy;\n        this.scrollable = scrollable;\n        this._platform = inject(Platform);\n        /** Emits when the viewport is detached from a CdkVirtualForOf. */\n        this._detachedSubject = new Subject();\n        /** Emits when the rendered range changes. */\n        this._renderedRangeSubject = new Subject();\n        this._orientation = 'vertical';\n        /**\n         * Whether rendered items should persist in the DOM after scrolling out of view. By default, items\n         * will be removed.\n         */\n        this.appendOnly = false;\n        // Note: we don't use the typical EventEmitter here because we need to subscribe to the scroll\n        // strategy lazily (i.e. only if the user is actually listening to the events). We do this because\n        // depending on how the strategy calculates the scrolled index, it may come at a cost to\n        // performance.\n        /** Emits when the index of the first element visible in the viewport changes. */\n        this.scrolledIndexChange = new Observable((observer) => this._scrollStrategy.scrolledIndexChange.subscribe(index => Promise.resolve().then(() => this.ngZone.run(() => observer.next(index)))));\n        /** A stream that emits whenever the rendered range changes. */\n        this.renderedRangeStream = this._renderedRangeSubject;\n        /**\n         * The total size of all content (in pixels), including content that is not currently rendered.\n         */\n        this._totalContentSize = 0;\n        /** A string representing the `style.width` property value to be used for the spacer element. */\n        this._totalContentWidth = '';\n        /** A string representing the `style.height` property value to be used for the spacer element. */\n        this._totalContentHeight = '';\n        /** The currently rendered range of indices. */\n        this._renderedRange = { start: 0, end: 0 };\n        /** The length of the data bound to this viewport (in number of items). */\n        this._dataLength = 0;\n        /** The size of the viewport (in pixels). */\n        this._viewportSize = 0;\n        /** The last rendered content offset that was set. */\n        this._renderedContentOffset = 0;\n        /**\n         * Whether the last rendered content offset was to the end of the content (and therefore needs to\n         * be rewritten as an offset to the start of the content).\n         */\n        this._renderedContentOffsetNeedsRewrite = false;\n        /** Whether there is a pending change detection cycle. */\n        this._isChangeDetectionPending = false;\n        /** A list of functions to run after the next change detection cycle. */\n        this._runAfterChangeDetection = [];\n        /** Subscription to changes in the viewport size. */\n        this._viewportChanges = Subscription.EMPTY;\n        this._injector = inject(Injector);\n        this._isDestroyed = false;\n        if (!_scrollStrategy && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('Error: cdk-virtual-scroll-viewport requires the \"itemSize\" property to be set.');\n        }\n        this._viewportChanges = viewportRuler.change().subscribe(() => {\n            this.checkViewportSize();\n        });\n        if (!this.scrollable) {\n            // No scrollable is provided, so the virtual-scroll-viewport needs to become a scrollable\n            this.elementRef.nativeElement.classList.add('cdk-virtual-scrollable');\n            this.scrollable = this;\n        }\n    }\n    ngOnInit() {\n        // Scrolling depends on the element dimensions which we can't get during SSR.\n        if (!this._platform.isBrowser) {\n            return;\n        }\n        if (this.scrollable === this) {\n            super.ngOnInit();\n        }\n        // It's still too early to measure the viewport at this point. Deferring with a promise allows\n        // the Viewport to be rendered with the correct size before we measure. We run this outside the\n        // zone to avoid causing more change detection cycles. We handle the change detection loop\n        // ourselves instead.\n        this.ngZone.runOutsideAngular(() => Promise.resolve().then(() => {\n            this._measureViewportSize();\n            this._scrollStrategy.attach(this);\n            this.scrollable\n                .elementScrolled()\n                .pipe(\n            // Start off with a fake scroll event so we properly detect our initial position.\n            startWith(null), \n            // Collect multiple events into one until the next animation frame. This way if\n            // there are multiple scroll events in the same frame we only need to recheck\n            // our layout once.\n            auditTime(0, SCROLL_SCHEDULER), \n            // Usually `elementScrolled` is completed when the scrollable is destroyed, but\n            // that may not be the case if a `CdkVirtualScrollableElement` is used so we have\n            // to unsubscribe here just in case.\n            takeUntil(this._destroyed))\n                .subscribe(() => this._scrollStrategy.onContentScrolled());\n            this._markChangeDetectionNeeded();\n        }));\n    }\n    ngOnDestroy() {\n        this.detach();\n        this._scrollStrategy.detach();\n        // Complete all subjects\n        this._renderedRangeSubject.complete();\n        this._detachedSubject.complete();\n        this._viewportChanges.unsubscribe();\n        this._isDestroyed = true;\n        super.ngOnDestroy();\n    }\n    /** Attaches a `CdkVirtualScrollRepeater` to this viewport. */\n    attach(forOf) {\n        if (this._forOf && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('CdkVirtualScrollViewport is already attached.');\n        }\n        // Subscribe to the data stream of the CdkVirtualForOf to keep track of when the data length\n        // changes. Run outside the zone to avoid triggering change detection, since we're managing the\n        // change detection loop ourselves.\n        this.ngZone.runOutsideAngular(() => {\n            this._forOf = forOf;\n            this._forOf.dataStream.pipe(takeUntil(this._detachedSubject)).subscribe(data => {\n                const newLength = data.length;\n                if (newLength !== this._dataLength) {\n                    this._dataLength = newLength;\n                    this._scrollStrategy.onDataLengthChanged();\n                }\n                this._doChangeDetection();\n            });\n        });\n    }\n    /** Detaches the current `CdkVirtualForOf`. */\n    detach() {\n        this._forOf = null;\n        this._detachedSubject.next();\n    }\n    /** Gets the length of the data bound to this viewport (in number of items). */\n    getDataLength() {\n        return this._dataLength;\n    }\n    /** Gets the size of the viewport (in pixels). */\n    getViewportSize() {\n        return this._viewportSize;\n    }\n    // TODO(mmalerba): This is technically out of sync with what's really rendered until a render\n    // cycle happens. I'm being careful to only call it after the render cycle is complete and before\n    // setting it to something else, but its error prone and should probably be split into\n    // `pendingRange` and `renderedRange`, the latter reflecting whats actually in the DOM.\n    /** Get the current rendered range of items. */\n    getRenderedRange() {\n        return this._renderedRange;\n    }\n    measureBoundingClientRectWithScrollOffset(from) {\n        return this.getElementRef().nativeElement.getBoundingClientRect()[from];\n    }\n    /**\n     * Sets the total size of all content (in pixels), including content that is not currently\n     * rendered.\n     */\n    setTotalContentSize(size) {\n        if (this._totalContentSize !== size) {\n            this._totalContentSize = size;\n            this._calculateSpacerSize();\n            this._markChangeDetectionNeeded();\n        }\n    }\n    /** Sets the currently rendered range of indices. */\n    setRenderedRange(range) {\n        if (!rangesEqual(this._renderedRange, range)) {\n            if (this.appendOnly) {\n                range = { start: 0, end: Math.max(this._renderedRange.end, range.end) };\n            }\n            this._renderedRangeSubject.next((this._renderedRange = range));\n            this._markChangeDetectionNeeded(() => this._scrollStrategy.onContentRendered());\n        }\n    }\n    /**\n     * Gets the offset from the start of the viewport to the start of the rendered data (in pixels).\n     */\n    getOffsetToRenderedContentStart() {\n        return this._renderedContentOffsetNeedsRewrite ? null : this._renderedContentOffset;\n    }\n    /**\n     * Sets the offset from the start of the viewport to either the start or end of the rendered data\n     * (in pixels).\n     */\n    setRenderedContentOffset(offset, to = 'to-start') {\n        // In appendOnly, we always start from the top\n        offset = this.appendOnly && to === 'to-start' ? 0 : offset;\n        // For a horizontal viewport in a right-to-left language we need to translate along the x-axis\n        // in the negative direction.\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        const isHorizontal = this.orientation == 'horizontal';\n        const axis = isHorizontal ? 'X' : 'Y';\n        const axisDirection = isHorizontal && isRtl ? -1 : 1;\n        let transform = `translate${axis}(${Number(axisDirection * offset)}px)`;\n        this._renderedContentOffset = offset;\n        if (to === 'to-end') {\n            transform += ` translate${axis}(-100%)`;\n            // The viewport should rewrite this as a `to-start` offset on the next render cycle. Otherwise\n            // elements will appear to expand in the wrong direction (e.g. `mat-expansion-panel` would\n            // expand upward).\n            this._renderedContentOffsetNeedsRewrite = true;\n        }\n        if (this._renderedContentTransform != transform) {\n            // We know this value is safe because we parse `offset` with `Number()` before passing it\n            // into the string.\n            this._renderedContentTransform = transform;\n            this._markChangeDetectionNeeded(() => {\n                if (this._renderedContentOffsetNeedsRewrite) {\n                    this._renderedContentOffset -= this.measureRenderedContentSize();\n                    this._renderedContentOffsetNeedsRewrite = false;\n                    this.setRenderedContentOffset(this._renderedContentOffset);\n                }\n                else {\n                    this._scrollStrategy.onRenderedOffsetChanged();\n                }\n            });\n        }\n    }\n    /**\n     * Scrolls to the given offset from the start of the viewport. Please note that this is not always\n     * the same as setting `scrollTop` or `scrollLeft`. In a horizontal viewport with right-to-left\n     * direction, this would be the equivalent of setting a fictional `scrollRight` property.\n     * @param offset The offset to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     */\n    scrollToOffset(offset, behavior = 'auto') {\n        const options = { behavior };\n        if (this.orientation === 'horizontal') {\n            options.start = offset;\n        }\n        else {\n            options.top = offset;\n        }\n        this.scrollable.scrollTo(options);\n    }\n    /**\n     * Scrolls to the offset for the given index.\n     * @param index The index of the element to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     */\n    scrollToIndex(index, behavior = 'auto') {\n        this._scrollStrategy.scrollToIndex(index, behavior);\n    }\n    /**\n     * Gets the current scroll offset from the start of the scrollable (in pixels).\n     * @param from The edge to measure the offset from. Defaults to 'top' in vertical mode and 'start'\n     *     in horizontal mode.\n     */\n    measureScrollOffset(from) {\n        // This is to break the call cycle\n        let measureScrollOffset;\n        if (this.scrollable == this) {\n            measureScrollOffset = (_from) => super.measureScrollOffset(_from);\n        }\n        else {\n            measureScrollOffset = (_from) => this.scrollable.measureScrollOffset(_from);\n        }\n        return Math.max(0, measureScrollOffset(from ?? (this.orientation === 'horizontal' ? 'start' : 'top')) -\n            this.measureViewportOffset());\n    }\n    /**\n     * Measures the offset of the viewport from the scrolling container\n     * @param from The edge to measure from.\n     */\n    measureViewportOffset(from) {\n        let fromRect;\n        const LEFT = 'left';\n        const RIGHT = 'right';\n        const isRtl = this.dir?.value == 'rtl';\n        if (from == 'start') {\n            fromRect = isRtl ? RIGHT : LEFT;\n        }\n        else if (from == 'end') {\n            fromRect = isRtl ? LEFT : RIGHT;\n        }\n        else if (from) {\n            fromRect = from;\n        }\n        else {\n            fromRect = this.orientation === 'horizontal' ? 'left' : 'top';\n        }\n        const scrollerClientRect = this.scrollable.measureBoundingClientRectWithScrollOffset(fromRect);\n        const viewportClientRect = this.elementRef.nativeElement.getBoundingClientRect()[fromRect];\n        return viewportClientRect - scrollerClientRect;\n    }\n    /** Measure the combined size of all of the rendered items. */\n    measureRenderedContentSize() {\n        const contentEl = this._contentWrapper.nativeElement;\n        return this.orientation === 'horizontal' ? contentEl.offsetWidth : contentEl.offsetHeight;\n    }\n    /**\n     * Measure the total combined size of the given range. Throws if the range includes items that are\n     * not rendered.\n     */\n    measureRangeSize(range) {\n        if (!this._forOf) {\n            return 0;\n        }\n        return this._forOf.measureRangeSize(range, this.orientation);\n    }\n    /** Update the viewport dimensions and re-render. */\n    checkViewportSize() {\n        // TODO: Cleanup later when add logic for handling content resize\n        this._measureViewportSize();\n        this._scrollStrategy.onDataLengthChanged();\n    }\n    /** Measure the viewport size. */\n    _measureViewportSize() {\n        this._viewportSize = this.scrollable.measureViewportSize(this.orientation);\n    }\n    /** Queue up change detection to run. */\n    _markChangeDetectionNeeded(runAfter) {\n        if (runAfter) {\n            this._runAfterChangeDetection.push(runAfter);\n        }\n        // Use a Promise to batch together calls to `_doChangeDetection`. This way if we set a bunch of\n        // properties sequentially we only have to run `_doChangeDetection` once at the end.\n        if (!this._isChangeDetectionPending) {\n            this._isChangeDetectionPending = true;\n            this.ngZone.runOutsideAngular(() => Promise.resolve().then(() => {\n                this._doChangeDetection();\n            }));\n        }\n    }\n    /** Run change detection. */\n    _doChangeDetection() {\n        if (this._isDestroyed) {\n            return;\n        }\n        this.ngZone.run(() => {\n            // Apply changes to Angular bindings. Note: We must call `markForCheck` to run change detection\n            // from the root, since the repeated items are content projected in. Calling `detectChanges`\n            // instead does not properly check the projected content.\n            this._changeDetectorRef.markForCheck();\n            // Apply the content transform. The transform can't be set via an Angular binding because\n            // bypassSecurityTrustStyle is banned in Google. However the value is safe, it's composed of\n            // string literals, a variable that can only be 'X' or 'Y', and user input that is run through\n            // the `Number` function first to coerce it to a numeric value.\n            this._contentWrapper.nativeElement.style.transform = this._renderedContentTransform;\n            afterNextRender(() => {\n                this._isChangeDetectionPending = false;\n                const runAfterChangeDetection = this._runAfterChangeDetection;\n                this._runAfterChangeDetection = [];\n                for (const fn of runAfterChangeDetection) {\n                    fn();\n                }\n            }, { injector: this._injector });\n        });\n    }\n    /** Calculates the `style.width` and `style.height` for the spacer element. */\n    _calculateSpacerSize() {\n        this._totalContentHeight =\n            this.orientation === 'horizontal' ? '' : `${this._totalContentSize}px`;\n        this._totalContentWidth =\n            this.orientation === 'horizontal' ? `${this._totalContentSize}px` : '';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: CdkVirtualScrollViewport, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i0.NgZone }, { token: VIRTUAL_SCROLL_STRATEGY, optional: true }, { token: i2.Directionality, optional: true }, { token: ScrollDispatcher }, { token: ViewportRuler }, { token: VIRTUAL_SCROLLABLE, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"18.1.0-next.3\", type: CdkVirtualScrollViewport, isStandalone: true, selector: \"cdk-virtual-scroll-viewport\", inputs: { orientation: \"orientation\", appendOnly: [\"appendOnly\", \"appendOnly\", booleanAttribute] }, outputs: { scrolledIndexChange: \"scrolledIndexChange\" }, host: { properties: { \"class.cdk-virtual-scroll-orientation-horizontal\": \"orientation === \\\"horizontal\\\"\", \"class.cdk-virtual-scroll-orientation-vertical\": \"orientation !== \\\"horizontal\\\"\" }, classAttribute: \"cdk-virtual-scroll-viewport\" }, providers: [\n            {\n                provide: CdkScrollable,\n                useFactory: (virtualScrollable, viewport) => virtualScrollable || viewport,\n                deps: [[new Optional(), new Inject(VIRTUAL_SCROLLABLE)], CdkVirtualScrollViewport],\n            },\n        ], viewQueries: [{ propertyName: \"_contentWrapper\", first: true, predicate: [\"contentWrapper\"], descendants: true, static: true }], usesInheritance: true, ngImport: i0, template: \"<!--\\n  Wrap the rendered content in an element that will be used to offset it based on the scroll\\n  position.\\n-->\\n<div #contentWrapper class=\\\"cdk-virtual-scroll-content-wrapper\\\">\\n  <ng-content></ng-content>\\n</div>\\n<!--\\n  Spacer used to force the scrolling container to the correct size for the *total* number of items\\n  so that the scrollbar captures the size of the entire data set.\\n-->\\n<div class=\\\"cdk-virtual-scroll-spacer\\\"\\n     [style.width]=\\\"_totalContentWidth\\\" [style.height]=\\\"_totalContentHeight\\\"></div>\\n\", styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;transform:translateZ(0)}.cdk-virtual-scrollable{overflow:auto;will-change:scroll-position;contain:strict;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{height:1px;transform-origin:0 0;flex:0 0 auto}[dir=rtl] .cdk-virtual-scroll-spacer{transform-origin:100% 0}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: CdkVirtualScrollViewport, decorators: [{\n            type: Component,\n            args: [{ selector: 'cdk-virtual-scroll-viewport', host: {\n                        'class': 'cdk-virtual-scroll-viewport',\n                        '[class.cdk-virtual-scroll-orientation-horizontal]': 'orientation === \"horizontal\"',\n                        '[class.cdk-virtual-scroll-orientation-vertical]': 'orientation !== \"horizontal\"',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, providers: [\n                        {\n                            provide: CdkScrollable,\n                            useFactory: (virtualScrollable, viewport) => virtualScrollable || viewport,\n                            deps: [[new Optional(), new Inject(VIRTUAL_SCROLLABLE)], CdkVirtualScrollViewport],\n                        },\n                    ], template: \"<!--\\n  Wrap the rendered content in an element that will be used to offset it based on the scroll\\n  position.\\n-->\\n<div #contentWrapper class=\\\"cdk-virtual-scroll-content-wrapper\\\">\\n  <ng-content></ng-content>\\n</div>\\n<!--\\n  Spacer used to force the scrolling container to the correct size for the *total* number of items\\n  so that the scrollbar captures the size of the entire data set.\\n-->\\n<div class=\\\"cdk-virtual-scroll-spacer\\\"\\n     [style.width]=\\\"_totalContentWidth\\\" [style.height]=\\\"_totalContentHeight\\\"></div>\\n\", styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;transform:translateZ(0)}.cdk-virtual-scrollable{overflow:auto;will-change:scroll-position;contain:strict;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{height:1px;transform-origin:0 0;flex:0 0 auto}[dir=rtl] .cdk-virtual-scroll-spacer{transform-origin:100% 0}\"] }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [VIRTUAL_SCROLL_STRATEGY]\n                }] }, { type: i2.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: ScrollDispatcher }, { type: ViewportRuler }, { type: CdkVirtualScrollable, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [VIRTUAL_SCROLLABLE]\n                }] }], propDecorators: { orientation: [{\n                type: Input\n            }], appendOnly: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], scrolledIndexChange: [{\n                type: Output\n            }], _contentWrapper: [{\n                type: ViewChild,\n                args: ['contentWrapper', { static: true }]\n            }] } });\n\n/** Helper to extract the offset of a DOM Node in a certain direction. */\nfunction getOffset(orientation, direction, node) {\n    const el = node;\n    if (!el.getBoundingClientRect) {\n        return 0;\n    }\n    const rect = el.getBoundingClientRect();\n    if (orientation === 'horizontal') {\n        return direction === 'start' ? rect.left : rect.right;\n    }\n    return direction === 'start' ? rect.top : rect.bottom;\n}\n/**\n * A directive similar to `ngForOf` to be used for rendering data inside a virtual scrolling\n * container.\n */\nclass CdkVirtualForOf {\n    /** The DataSource to display. */\n    get cdkVirtualForOf() {\n        return this._cdkVirtualForOf;\n    }\n    set cdkVirtualForOf(value) {\n        this._cdkVirtualForOf = value;\n        if (isDataSource(value)) {\n            this._dataSourceChanges.next(value);\n        }\n        else {\n            // If value is an an NgIterable, convert it to an array.\n            this._dataSourceChanges.next(new ArrayDataSource(isObservable(value) ? value : Array.from(value || [])));\n        }\n    }\n    /**\n     * The `TrackByFunction` to use for tracking changes. The `TrackByFunction` takes the index and\n     * the item and produces a value to be used as the item's identity when tracking changes.\n     */\n    get cdkVirtualForTrackBy() {\n        return this._cdkVirtualForTrackBy;\n    }\n    set cdkVirtualForTrackBy(fn) {\n        this._needsUpdate = true;\n        this._cdkVirtualForTrackBy = fn\n            ? (index, item) => fn(index + (this._renderedRange ? this._renderedRange.start : 0), item)\n            : undefined;\n    }\n    /** The template used to stamp out new elements. */\n    set cdkVirtualForTemplate(value) {\n        if (value) {\n            this._needsUpdate = true;\n            this._template = value;\n        }\n    }\n    /**\n     * The size of the cache used to store templates that are not being used for re-use later.\n     * Setting the cache size to `0` will disable caching. Defaults to 20 templates.\n     */\n    get cdkVirtualForTemplateCacheSize() {\n        return this._viewRepeater.viewCacheSize;\n    }\n    set cdkVirtualForTemplateCacheSize(size) {\n        this._viewRepeater.viewCacheSize = coerceNumberProperty(size);\n    }\n    constructor(\n    /** The view container to add items to. */\n    _viewContainerRef, \n    /** The template to use when stamping out new items. */\n    _template, \n    /** The set of available differs. */\n    _differs, \n    /** The strategy used to render items in the virtual scroll viewport. */\n    _viewRepeater, \n    /** The virtual scrolling viewport that these items are being rendered in. */\n    _viewport, ngZone) {\n        this._viewContainerRef = _viewContainerRef;\n        this._template = _template;\n        this._differs = _differs;\n        this._viewRepeater = _viewRepeater;\n        this._viewport = _viewport;\n        /** Emits when the rendered view of the data changes. */\n        this.viewChange = new Subject();\n        /** Subject that emits when a new DataSource instance is given. */\n        this._dataSourceChanges = new Subject();\n        /** Emits whenever the data in the current DataSource changes. */\n        this.dataStream = this._dataSourceChanges.pipe(\n        // Start off with null `DataSource`.\n        startWith(null), \n        // Bundle up the previous and current data sources so we can work with both.\n        pairwise(), \n        // Use `_changeDataSource` to disconnect from the previous data source and connect to the\n        // new one, passing back a stream of data changes which we run through `switchMap` to give\n        // us a data stream that emits the latest data from whatever the current `DataSource` is.\n        switchMap(([prev, cur]) => this._changeDataSource(prev, cur)), \n        // Replay the last emitted data when someone subscribes.\n        shareReplay(1));\n        /** The differ used to calculate changes to the data. */\n        this._differ = null;\n        /** Whether the rendered data should be updated during the next ngDoCheck cycle. */\n        this._needsUpdate = false;\n        this._destroyed = new Subject();\n        this.dataStream.subscribe(data => {\n            this._data = data;\n            this._onRenderedDataChange();\n        });\n        this._viewport.renderedRangeStream.pipe(takeUntil(this._destroyed)).subscribe(range => {\n            this._renderedRange = range;\n            if (this.viewChange.observers.length) {\n                ngZone.run(() => this.viewChange.next(this._renderedRange));\n            }\n            this._onRenderedDataChange();\n        });\n        this._viewport.attach(this);\n    }\n    /**\n     * Measures the combined size (width for horizontal orientation, height for vertical) of all items\n     * in the specified range. Throws an error if the range includes items that are not currently\n     * rendered.\n     */\n    measureRangeSize(range, orientation) {\n        if (range.start >= range.end) {\n            return 0;\n        }\n        if ((range.start < this._renderedRange.start || range.end > this._renderedRange.end) &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`Error: attempted to measure an item that isn't rendered.`);\n        }\n        // The index into the list of rendered views for the first item in the range.\n        const renderedStartIndex = range.start - this._renderedRange.start;\n        // The length of the range we're measuring.\n        const rangeLen = range.end - range.start;\n        // Loop over all the views, find the first and land node and compute the size by subtracting\n        // the top of the first node from the bottom of the last one.\n        let firstNode;\n        let lastNode;\n        // Find the first node by starting from the beginning and going forwards.\n        for (let i = 0; i < rangeLen; i++) {\n            const view = this._viewContainerRef.get(i + renderedStartIndex);\n            if (view && view.rootNodes.length) {\n                firstNode = lastNode = view.rootNodes[0];\n                break;\n            }\n        }\n        // Find the last node by starting from the end and going backwards.\n        for (let i = rangeLen - 1; i > -1; i--) {\n            const view = this._viewContainerRef.get(i + renderedStartIndex);\n            if (view && view.rootNodes.length) {\n                lastNode = view.rootNodes[view.rootNodes.length - 1];\n                break;\n            }\n        }\n        return firstNode && lastNode\n            ? getOffset(orientation, 'end', lastNode) - getOffset(orientation, 'start', firstNode)\n            : 0;\n    }\n    ngDoCheck() {\n        if (this._differ && this._needsUpdate) {\n            // TODO(mmalerba): We should differentiate needs update due to scrolling and a new portion of\n            // this list being rendered (can use simpler algorithm) vs needs update due to data actually\n            // changing (need to do this diff).\n            const changes = this._differ.diff(this._renderedItems);\n            if (!changes) {\n                this._updateContext();\n            }\n            else {\n                this._applyChanges(changes);\n            }\n            this._needsUpdate = false;\n        }\n    }\n    ngOnDestroy() {\n        this._viewport.detach();\n        this._dataSourceChanges.next(undefined);\n        this._dataSourceChanges.complete();\n        this.viewChange.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._viewRepeater.detach();\n    }\n    /** React to scroll state changes in the viewport. */\n    _onRenderedDataChange() {\n        if (!this._renderedRange) {\n            return;\n        }\n        this._renderedItems = this._data.slice(this._renderedRange.start, this._renderedRange.end);\n        if (!this._differ) {\n            // Use a wrapper function for the `trackBy` so any new values are\n            // picked up automatically without having to recreate the differ.\n            this._differ = this._differs.find(this._renderedItems).create((index, item) => {\n                return this.cdkVirtualForTrackBy ? this.cdkVirtualForTrackBy(index, item) : item;\n            });\n        }\n        this._needsUpdate = true;\n    }\n    /** Swap out one `DataSource` for another. */\n    _changeDataSource(oldDs, newDs) {\n        if (oldDs) {\n            oldDs.disconnect(this);\n        }\n        this._needsUpdate = true;\n        return newDs ? newDs.connect(this) : of();\n    }\n    /** Update the `CdkVirtualForOfContext` for all views. */\n    _updateContext() {\n        const count = this._data.length;\n        let i = this._viewContainerRef.length;\n        while (i--) {\n            const view = this._viewContainerRef.get(i);\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n            view.detectChanges();\n        }\n    }\n    /** Apply changes to the DOM. */\n    _applyChanges(changes) {\n        this._viewRepeater.applyChanges(changes, this._viewContainerRef, (record, _adjustedPreviousIndex, currentIndex) => this._getEmbeddedViewArgs(record, currentIndex), record => record.item);\n        // Update $implicit for any items that had an identity change.\n        changes.forEachIdentityChange((record) => {\n            const view = this._viewContainerRef.get(record.currentIndex);\n            view.context.$implicit = record.item;\n        });\n        // Update the context variables on all items.\n        const count = this._data.length;\n        let i = this._viewContainerRef.length;\n        while (i--) {\n            const view = this._viewContainerRef.get(i);\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n        }\n    }\n    /** Update the computed properties on the `CdkVirtualForOfContext`. */\n    _updateComputedContextProperties(context) {\n        context.first = context.index === 0;\n        context.last = context.index === context.count - 1;\n        context.even = context.index % 2 === 0;\n        context.odd = !context.even;\n    }\n    _getEmbeddedViewArgs(record, index) {\n        // Note that it's important that we insert the item directly at the proper index,\n        // rather than inserting it and the moving it in place, because if there's a directive\n        // on the same node that injects the `ViewContainerRef`, Angular will insert another\n        // comment node which can throw off the move when it's being repeated for all items.\n        return {\n            templateRef: this._template,\n            context: {\n                $implicit: record.item,\n                // It's guaranteed that the iterable is not \"undefined\" or \"null\" because we only\n                // generate views for elements if the \"cdkVirtualForOf\" iterable has elements.\n                cdkVirtualForOf: this._cdkVirtualForOf,\n                index: -1,\n                count: -1,\n                first: false,\n                last: false,\n                odd: false,\n                even: false,\n            },\n            index,\n        };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: CdkVirtualForOf, deps: [{ token: i0.ViewContainerRef }, { token: i0.TemplateRef }, { token: i0.IterableDiffers }, { token: _VIEW_REPEATER_STRATEGY }, { token: CdkVirtualScrollViewport, skipSelf: true }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.1.0-next.3\", type: CdkVirtualForOf, isStandalone: true, selector: \"[cdkVirtualFor][cdkVirtualForOf]\", inputs: { cdkVirtualForOf: \"cdkVirtualForOf\", cdkVirtualForTrackBy: \"cdkVirtualForTrackBy\", cdkVirtualForTemplate: \"cdkVirtualForTemplate\", cdkVirtualForTemplateCacheSize: \"cdkVirtualForTemplateCacheSize\" }, providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: CdkVirtualForOf, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkVirtualFor][cdkVirtualForOf]',\n                    providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }],\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.ViewContainerRef }, { type: i0.TemplateRef }, { type: i0.IterableDiffers }, { type: i2$1._RecycleViewRepeaterStrategy, decorators: [{\n                    type: Inject,\n                    args: [_VIEW_REPEATER_STRATEGY]\n                }] }, { type: CdkVirtualScrollViewport, decorators: [{\n                    type: SkipSelf\n                }] }, { type: i0.NgZone }], propDecorators: { cdkVirtualForOf: [{\n                type: Input\n            }], cdkVirtualForTrackBy: [{\n                type: Input\n            }], cdkVirtualForTemplate: [{\n                type: Input\n            }], cdkVirtualForTemplateCacheSize: [{\n                type: Input\n            }] } });\n\n/**\n * Provides a virtual scrollable for the element it is attached to.\n */\nclass CdkVirtualScrollableElement extends CdkVirtualScrollable {\n    constructor(elementRef, scrollDispatcher, ngZone, dir) {\n        super(elementRef, scrollDispatcher, ngZone, dir);\n    }\n    measureBoundingClientRectWithScrollOffset(from) {\n        return (this.getElementRef().nativeElement.getBoundingClientRect()[from] -\n            this.measureScrollOffset(from));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: CdkVirtualScrollableElement, deps: [{ token: i0.ElementRef }, { token: ScrollDispatcher }, { token: i0.NgZone }, { token: i2.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.1.0-next.3\", type: CdkVirtualScrollableElement, isStandalone: true, selector: \"[cdkVirtualScrollingElement]\", host: { classAttribute: \"cdk-virtual-scrollable\" }, providers: [{ provide: VIRTUAL_SCROLLABLE, useExisting: CdkVirtualScrollableElement }], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: CdkVirtualScrollableElement, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkVirtualScrollingElement]',\n                    providers: [{ provide: VIRTUAL_SCROLLABLE, useExisting: CdkVirtualScrollableElement }],\n                    standalone: true,\n                    host: {\n                        'class': 'cdk-virtual-scrollable',\n                    },\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: ScrollDispatcher }, { type: i0.NgZone }, { type: i2.Directionality, decorators: [{\n                    type: Optional\n                }] }] });\n\n/**\n * Provides as virtual scrollable for the global / window scrollbar.\n */\nclass CdkVirtualScrollableWindow extends CdkVirtualScrollable {\n    constructor(scrollDispatcher, ngZone, dir) {\n        super(new ElementRef(document.documentElement), scrollDispatcher, ngZone, dir);\n        this._elementScrolled = new Observable((observer) => this.ngZone.runOutsideAngular(() => fromEvent(document, 'scroll').pipe(takeUntil(this._destroyed)).subscribe(observer)));\n    }\n    measureBoundingClientRectWithScrollOffset(from) {\n        return this.getElementRef().nativeElement.getBoundingClientRect()[from];\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: CdkVirtualScrollableWindow, deps: [{ token: ScrollDispatcher }, { token: i0.NgZone }, { token: i2.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.1.0-next.3\", type: CdkVirtualScrollableWindow, isStandalone: true, selector: \"cdk-virtual-scroll-viewport[scrollWindow]\", providers: [{ provide: VIRTUAL_SCROLLABLE, useExisting: CdkVirtualScrollableWindow }], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: CdkVirtualScrollableWindow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-virtual-scroll-viewport[scrollWindow]',\n                    providers: [{ provide: VIRTUAL_SCROLLABLE, useExisting: CdkVirtualScrollableWindow }],\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: ScrollDispatcher }, { type: i0.NgZone }, { type: i2.Directionality, decorators: [{\n                    type: Optional\n                }] }] });\n\nclass CdkScrollableModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: CdkScrollableModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: CdkScrollableModule, imports: [CdkScrollable], exports: [CdkScrollable] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: CdkScrollableModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: CdkScrollableModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [CdkScrollable],\n                    imports: [CdkScrollable],\n                }]\n        }] });\n/**\n * @docs-primary-export\n */\nclass ScrollingModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: ScrollingModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: ScrollingModule, imports: [BidiModule, CdkScrollableModule, CdkVirtualScrollViewport,\n            CdkFixedSizeVirtualScroll,\n            CdkVirtualForOf,\n            CdkVirtualScrollableWindow,\n            CdkVirtualScrollableElement], exports: [BidiModule, CdkScrollableModule, CdkFixedSizeVirtualScroll,\n            CdkVirtualForOf,\n            CdkVirtualScrollViewport,\n            CdkVirtualScrollableWindow,\n            CdkVirtualScrollableElement] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: ScrollingModule, imports: [BidiModule,\n            CdkScrollableModule, BidiModule, CdkScrollableModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: ScrollingModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        BidiModule,\n                        CdkScrollableModule,\n                        CdkVirtualScrollViewport,\n                        CdkFixedSizeVirtualScroll,\n                        CdkVirtualForOf,\n                        CdkVirtualScrollableWindow,\n                        CdkVirtualScrollableElement,\n                    ],\n                    exports: [\n                        BidiModule,\n                        CdkScrollableModule,\n                        CdkFixedSizeVirtualScroll,\n                        CdkVirtualForOf,\n                        CdkVirtualScrollViewport,\n                        CdkVirtualScrollableWindow,\n                        CdkVirtualScrollableElement,\n                    ],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkFixedSizeVirtualScroll, CdkScrollable, CdkScrollableModule, CdkVirtualForOf, CdkVirtualScrollViewport, CdkVirtualScrollable, CdkVirtualScrollableElement, CdkVirtualScrollableWindow, DEFAULT_RESIZE_TIME, DEFAULT_SCROLL_TIME, FixedSizeVirtualScrollStrategy, ScrollDispatcher, ScrollingModule, VIRTUAL_SCROLLABLE, VIRTUAL_SCROLL_STRATEGY, ViewportRuler, _fixedSizeVirtualScrollStrategyFactory };\n","import * as i0 from '@angular/core';\nimport { ElementRef, Injector, Directive, EventEmitter, Inject, Input, Output, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * Throws an exception when attempting to attach a null portal to a host.\n * @docs-private\n */\nfunction throwNullPortalError() {\n    throw Error('Must provide a portal to attach');\n}\n/**\n * Throws an exception when attempting to attach a portal to a host that is already attached.\n * @docs-private\n */\nfunction throwPortalAlreadyAttachedError() {\n    throw Error('Host already has a portal attached');\n}\n/**\n * Throws an exception when attempting to attach a portal to an already-disposed host.\n * @docs-private\n */\nfunction throwPortalOutletAlreadyDisposedError() {\n    throw Error('This PortalOutlet has already been disposed');\n}\n/**\n * Throws an exception when attempting to attach an unknown portal type.\n * @docs-private\n */\nfunction throwUnknownPortalTypeError() {\n    throw Error('Attempting to attach an unknown Portal type. BasePortalOutlet accepts either ' +\n        'a ComponentPortal or a TemplatePortal.');\n}\n/**\n * Throws an exception when attempting to attach a portal to a null host.\n * @docs-private\n */\nfunction throwNullPortalOutletError() {\n    throw Error('Attempting to attach a portal to a null PortalOutlet');\n}\n/**\n * Throws an exception when attempting to detach a portal that is not attached.\n * @docs-private\n */\nfunction throwNoPortalAttachedError() {\n    throw Error('Attempting to detach a portal that is not attached to a host');\n}\n\n/**\n * A `Portal` is something that you want to render somewhere else.\n * It can be attach to / detached from a `PortalOutlet`.\n */\nclass Portal {\n    /** Attach this portal to a host. */\n    attach(host) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (host == null) {\n                throwNullPortalOutletError();\n            }\n            if (host.hasAttached()) {\n                throwPortalAlreadyAttachedError();\n            }\n        }\n        this._attachedHost = host;\n        return host.attach(this);\n    }\n    /** Detach this portal from its host */\n    detach() {\n        let host = this._attachedHost;\n        if (host != null) {\n            this._attachedHost = null;\n            host.detach();\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throwNoPortalAttachedError();\n        }\n    }\n    /** Whether this portal is attached to a host. */\n    get isAttached() {\n        return this._attachedHost != null;\n    }\n    /**\n     * Sets the PortalOutlet reference without performing `attach()`. This is used directly by\n     * the PortalOutlet when it is performing an `attach()` or `detach()`.\n     */\n    setAttachedHost(host) {\n        this._attachedHost = host;\n    }\n}\n/**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n */\nclass ComponentPortal extends Portal {\n    constructor(component, viewContainerRef, injector, componentFactoryResolver, projectableNodes) {\n        super();\n        this.component = component;\n        this.viewContainerRef = viewContainerRef;\n        this.injector = injector;\n        this.componentFactoryResolver = componentFactoryResolver;\n        this.projectableNodes = projectableNodes;\n    }\n}\n/**\n * A `TemplatePortal` is a portal that represents some embedded template (TemplateRef).\n */\nclass TemplatePortal extends Portal {\n    constructor(\n    /** The embedded template that will be used to instantiate an embedded View in the host. */\n    templateRef, \n    /** Reference to the ViewContainer into which the template will be stamped out. */\n    viewContainerRef, \n    /** Contextual data to be passed in to the embedded view. */\n    context, \n    /** The injector to use for the embedded view. */\n    injector) {\n        super();\n        this.templateRef = templateRef;\n        this.viewContainerRef = viewContainerRef;\n        this.context = context;\n        this.injector = injector;\n    }\n    get origin() {\n        return this.templateRef.elementRef;\n    }\n    /**\n     * Attach the portal to the provided `PortalOutlet`.\n     * When a context is provided it will override the `context` property of the `TemplatePortal`\n     * instance.\n     */\n    attach(host, context = this.context) {\n        this.context = context;\n        return super.attach(host);\n    }\n    detach() {\n        this.context = undefined;\n        return super.detach();\n    }\n}\n/**\n * A `DomPortal` is a portal whose DOM element will be taken from its current position\n * in the DOM and moved into a portal outlet, when it is attached. On detach, the content\n * will be restored to its original position.\n */\nclass DomPortal extends Portal {\n    constructor(element) {\n        super();\n        this.element = element instanceof ElementRef ? element.nativeElement : element;\n    }\n}\n/**\n * Partial implementation of PortalOutlet that handles attaching\n * ComponentPortal and TemplatePortal.\n */\nclass BasePortalOutlet {\n    constructor() {\n        /** Whether this host has already been permanently disposed. */\n        this._isDisposed = false;\n        // @breaking-change 10.0.0 `attachDomPortal` to become a required abstract method.\n        this.attachDomPortal = null;\n    }\n    /** Whether this host has an attached portal. */\n    hasAttached() {\n        return !!this._attachedPortal;\n    }\n    /** Attaches a portal. */\n    attach(portal) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!portal) {\n                throwNullPortalError();\n            }\n            if (this.hasAttached()) {\n                throwPortalAlreadyAttachedError();\n            }\n            if (this._isDisposed) {\n                throwPortalOutletAlreadyDisposedError();\n            }\n        }\n        if (portal instanceof ComponentPortal) {\n            this._attachedPortal = portal;\n            return this.attachComponentPortal(portal);\n        }\n        else if (portal instanceof TemplatePortal) {\n            this._attachedPortal = portal;\n            return this.attachTemplatePortal(portal);\n            // @breaking-change 10.0.0 remove null check for `this.attachDomPortal`.\n        }\n        else if (this.attachDomPortal && portal instanceof DomPortal) {\n            this._attachedPortal = portal;\n            return this.attachDomPortal(portal);\n        }\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throwUnknownPortalTypeError();\n        }\n    }\n    /** Detaches a previously attached portal. */\n    detach() {\n        if (this._attachedPortal) {\n            this._attachedPortal.setAttachedHost(null);\n            this._attachedPortal = null;\n        }\n        this._invokeDisposeFn();\n    }\n    /** Permanently dispose of this portal host. */\n    dispose() {\n        if (this.hasAttached()) {\n            this.detach();\n        }\n        this._invokeDisposeFn();\n        this._isDisposed = true;\n    }\n    /** @docs-private */\n    setDisposeFn(fn) {\n        this._disposeFn = fn;\n    }\n    _invokeDisposeFn() {\n        if (this._disposeFn) {\n            this._disposeFn();\n            this._disposeFn = null;\n        }\n    }\n}\n/**\n * @deprecated Use `BasePortalOutlet` instead.\n * @breaking-change 9.0.0\n */\nclass BasePortalHost extends BasePortalOutlet {\n}\n\n/**\n * A PortalOutlet for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n */\nclass DomPortalOutlet extends BasePortalOutlet {\n    /**\n     * @param outletElement Element into which the content is projected.\n     * @param _componentFactoryResolver Used to resolve the component factory.\n     *   Only required when attaching component portals.\n     * @param _appRef Reference to the application. Only used in component portals when there\n     *   is no `ViewContainerRef` available.\n     * @param _defaultInjector Injector to use as a fallback when the portal being attached doesn't\n     *   have one. Only used for component portals.\n     * @param _document Reference to the document. Used when attaching a DOM portal. Will eventually\n     *   become a required parameter.\n     */\n    constructor(\n    /** Element into which the content is projected. */\n    outletElement, _componentFactoryResolver, _appRef, _defaultInjector, \n    /**\n     * @deprecated `_document` Parameter to be made required.\n     * @breaking-change 10.0.0\n     */\n    _document) {\n        super();\n        this.outletElement = outletElement;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n        this._defaultInjector = _defaultInjector;\n        /**\n         * Attaches a DOM portal by transferring its content into the outlet.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * @breaking-change 10.0.0\n         */\n        this.attachDomPortal = (portal) => {\n            // @breaking-change 10.0.0 Remove check and error once the\n            // `_document` constructor parameter is required.\n            if (!this._document && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('Cannot attach DOM portal without _document constructor parameter');\n            }\n            const element = portal.element;\n            if (!element.parentNode && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('DOM portal content must be attached to a parent node.');\n            }\n            // Anchor used to save the element's previous position so\n            // that we can restore it when the portal is detached.\n            const anchorNode = this._document.createComment('dom-portal');\n            element.parentNode.insertBefore(anchorNode, element);\n            this.outletElement.appendChild(element);\n            this._attachedPortal = portal;\n            super.setDisposeFn(() => {\n                // We can't use `replaceWith` here because IE doesn't support it.\n                if (anchorNode.parentNode) {\n                    anchorNode.parentNode.replaceChild(element, anchorNode);\n                }\n            });\n        };\n        this._document = _document;\n    }\n    /**\n     * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n     * @param portal Portal to be attached\n     * @returns Reference to the created component.\n     */\n    attachComponentPortal(portal) {\n        const resolver = (portal.componentFactoryResolver || this._componentFactoryResolver);\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) && !resolver) {\n            throw Error('Cannot attach component portal to outlet without a ComponentFactoryResolver.');\n        }\n        const componentFactory = resolver.resolveComponentFactory(portal.component);\n        let componentRef;\n        // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n        // for the component (in terms of Angular's component tree, not rendering).\n        // When the ViewContainerRef is missing, we use the factory to create the component directly\n        // and then manually attach the view to the application.\n        if (portal.viewContainerRef) {\n            componentRef = portal.viewContainerRef.createComponent(componentFactory, portal.viewContainerRef.length, portal.injector || portal.viewContainerRef.injector, portal.projectableNodes || undefined);\n            this.setDisposeFn(() => componentRef.destroy());\n        }\n        else {\n            if ((typeof ngDevMode === 'undefined' || ngDevMode) && !this._appRef) {\n                throw Error('Cannot attach component portal to outlet without an ApplicationRef.');\n            }\n            componentRef = componentFactory.create(portal.injector || this._defaultInjector || Injector.NULL);\n            this._appRef.attachView(componentRef.hostView);\n            this.setDisposeFn(() => {\n                // Verify that the ApplicationRef has registered views before trying to detach a host view.\n                // This check also protects the `detachView` from being called on a destroyed ApplicationRef.\n                if (this._appRef.viewCount > 0) {\n                    this._appRef.detachView(componentRef.hostView);\n                }\n                componentRef.destroy();\n            });\n        }\n        // At this point the component has been instantiated, so we move it to the location in the DOM\n        // where we want it to be rendered.\n        this.outletElement.appendChild(this._getComponentRootNode(componentRef));\n        this._attachedPortal = portal;\n        return componentRef;\n    }\n    /**\n     * Attaches a template portal to the DOM as an embedded view.\n     * @param portal Portal to be attached.\n     * @returns Reference to the created embedded view.\n     */\n    attachTemplatePortal(portal) {\n        let viewContainer = portal.viewContainerRef;\n        let viewRef = viewContainer.createEmbeddedView(portal.templateRef, portal.context, {\n            injector: portal.injector,\n        });\n        // The method `createEmbeddedView` will add the view as a child of the viewContainer.\n        // But for the DomPortalOutlet the view can be added everywhere in the DOM\n        // (e.g Overlay Container) To move the view to the specified host element. We just\n        // re-append the existing root nodes.\n        viewRef.rootNodes.forEach(rootNode => this.outletElement.appendChild(rootNode));\n        // Note that we want to detect changes after the nodes have been moved so that\n        // any directives inside the portal that are looking at the DOM inside a lifecycle\n        // hook won't be invoked too early.\n        viewRef.detectChanges();\n        this.setDisposeFn(() => {\n            let index = viewContainer.indexOf(viewRef);\n            if (index !== -1) {\n                viewContainer.remove(index);\n            }\n        });\n        this._attachedPortal = portal;\n        // TODO(jelbourn): Return locals from view.\n        return viewRef;\n    }\n    /**\n     * Clears out a portal from the DOM.\n     */\n    dispose() {\n        super.dispose();\n        this.outletElement.remove();\n    }\n    /** Gets the root HTMLElement for an instantiated component. */\n    _getComponentRootNode(componentRef) {\n        return componentRef.hostView.rootNodes[0];\n    }\n}\n/**\n * @deprecated Use `DomPortalOutlet` instead.\n * @breaking-change 9.0.0\n */\nclass DomPortalHost extends DomPortalOutlet {\n}\n\n/**\n * Directive version of a `TemplatePortal`. Because the directive *is* a TemplatePortal,\n * the directive instance itself can be attached to a host, enabling declarative use of portals.\n */\nclass CdkPortal extends TemplatePortal {\n    constructor(templateRef, viewContainerRef) {\n        super(templateRef, viewContainerRef);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: CdkPortal, deps: [{ token: i0.TemplateRef }, { token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.1.0-next.3\", type: CdkPortal, isStandalone: true, selector: \"[cdkPortal]\", exportAs: [\"cdkPortal\"], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: CdkPortal, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkPortal]',\n                    exportAs: 'cdkPortal',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.TemplateRef }, { type: i0.ViewContainerRef }] });\n/**\n * @deprecated Use `CdkPortal` instead.\n * @breaking-change 9.0.0\n */\nclass TemplatePortalDirective extends CdkPortal {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: TemplatePortalDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.1.0-next.3\", type: TemplatePortalDirective, isStandalone: true, selector: \"[cdk-portal], [portal]\", providers: [\n            {\n                provide: CdkPortal,\n                useExisting: TemplatePortalDirective,\n            },\n        ], exportAs: [\"cdkPortal\"], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: TemplatePortalDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdk-portal], [portal]',\n                    exportAs: 'cdkPortal',\n                    providers: [\n                        {\n                            provide: CdkPortal,\n                            useExisting: TemplatePortalDirective,\n                        },\n                    ],\n                    standalone: true,\n                }]\n        }] });\n/**\n * Directive version of a PortalOutlet. Because the directive *is* a PortalOutlet, portals can be\n * directly attached to it, enabling declarative use.\n *\n * Usage:\n * `<ng-template [cdkPortalOutlet]=\"greeting\"></ng-template>`\n */\nclass CdkPortalOutlet extends BasePortalOutlet {\n    constructor(_componentFactoryResolver, _viewContainerRef, \n    /**\n     * @deprecated `_document` parameter to be made required.\n     * @breaking-change 9.0.0\n     */\n    _document) {\n        super();\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._viewContainerRef = _viewContainerRef;\n        /** Whether the portal component is initialized. */\n        this._isInitialized = false;\n        /** Emits when a portal is attached to the outlet. */\n        this.attached = new EventEmitter();\n        /**\n         * Attaches the given DomPortal to this PortalHost by moving all of the portal content into it.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * @breaking-change 10.0.0\n         */\n        this.attachDomPortal = (portal) => {\n            // @breaking-change 9.0.0 Remove check and error once the\n            // `_document` constructor parameter is required.\n            if (!this._document && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('Cannot attach DOM portal without _document constructor parameter');\n            }\n            const element = portal.element;\n            if (!element.parentNode && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('DOM portal content must be attached to a parent node.');\n            }\n            // Anchor used to save the element's previous position so\n            // that we can restore it when the portal is detached.\n            const anchorNode = this._document.createComment('dom-portal');\n            portal.setAttachedHost(this);\n            element.parentNode.insertBefore(anchorNode, element);\n            this._getRootNode().appendChild(element);\n            this._attachedPortal = portal;\n            super.setDisposeFn(() => {\n                if (anchorNode.parentNode) {\n                    anchorNode.parentNode.replaceChild(element, anchorNode);\n                }\n            });\n        };\n        this._document = _document;\n    }\n    /** Portal associated with the Portal outlet. */\n    get portal() {\n        return this._attachedPortal;\n    }\n    set portal(portal) {\n        // Ignore the cases where the `portal` is set to a falsy value before the lifecycle hooks have\n        // run. This handles the cases where the user might do something like `<div cdkPortalOutlet>`\n        // and attach a portal programmatically in the parent component. When Angular does the first CD\n        // round, it will fire the setter with empty string, causing the user's content to be cleared.\n        if (this.hasAttached() && !portal && !this._isInitialized) {\n            return;\n        }\n        if (this.hasAttached()) {\n            super.detach();\n        }\n        if (portal) {\n            super.attach(portal);\n        }\n        this._attachedPortal = portal || null;\n    }\n    /** Component or view reference that is attached to the portal. */\n    get attachedRef() {\n        return this._attachedRef;\n    }\n    ngOnInit() {\n        this._isInitialized = true;\n    }\n    ngOnDestroy() {\n        super.dispose();\n        this._attachedRef = this._attachedPortal = null;\n    }\n    /**\n     * Attach the given ComponentPortal to this PortalOutlet using the ComponentFactoryResolver.\n     *\n     * @param portal Portal to be attached to the portal outlet.\n     * @returns Reference to the created component.\n     */\n    attachComponentPortal(portal) {\n        portal.setAttachedHost(this);\n        // If the portal specifies an origin, use that as the logical location of the component\n        // in the application tree. Otherwise use the location of this PortalOutlet.\n        const viewContainerRef = portal.viewContainerRef != null ? portal.viewContainerRef : this._viewContainerRef;\n        const resolver = portal.componentFactoryResolver || this._componentFactoryResolver;\n        const componentFactory = resolver.resolveComponentFactory(portal.component);\n        const ref = viewContainerRef.createComponent(componentFactory, viewContainerRef.length, portal.injector || viewContainerRef.injector, portal.projectableNodes || undefined);\n        // If we're using a view container that's different from the injected one (e.g. when the portal\n        // specifies its own) we need to move the component into the outlet, otherwise it'll be rendered\n        // inside of the alternate view container.\n        if (viewContainerRef !== this._viewContainerRef) {\n            this._getRootNode().appendChild(ref.hostView.rootNodes[0]);\n        }\n        super.setDisposeFn(() => ref.destroy());\n        this._attachedPortal = portal;\n        this._attachedRef = ref;\n        this.attached.emit(ref);\n        return ref;\n    }\n    /**\n     * Attach the given TemplatePortal to this PortalHost as an embedded View.\n     * @param portal Portal to be attached.\n     * @returns Reference to the created embedded view.\n     */\n    attachTemplatePortal(portal) {\n        portal.setAttachedHost(this);\n        const viewRef = this._viewContainerRef.createEmbeddedView(portal.templateRef, portal.context, {\n            injector: portal.injector,\n        });\n        super.setDisposeFn(() => this._viewContainerRef.clear());\n        this._attachedPortal = portal;\n        this._attachedRef = viewRef;\n        this.attached.emit(viewRef);\n        return viewRef;\n    }\n    /** Gets the root node of the portal outlet. */\n    _getRootNode() {\n        const nativeElement = this._viewContainerRef.element.nativeElement;\n        // The directive could be set on a template which will result in a comment\n        // node being the root. Use the comment's parent node if that is the case.\n        return (nativeElement.nodeType === nativeElement.ELEMENT_NODE\n            ? nativeElement\n            : nativeElement.parentNode);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: CdkPortalOutlet, deps: [{ token: i0.ComponentFactoryResolver }, { token: i0.ViewContainerRef }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.1.0-next.3\", type: CdkPortalOutlet, isStandalone: true, selector: \"[cdkPortalOutlet]\", inputs: { portal: [\"cdkPortalOutlet\", \"portal\"] }, outputs: { attached: \"attached\" }, exportAs: [\"cdkPortalOutlet\"], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: CdkPortalOutlet, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkPortalOutlet]',\n                    exportAs: 'cdkPortalOutlet',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.ComponentFactoryResolver }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }], propDecorators: { portal: [{\n                type: Input,\n                args: ['cdkPortalOutlet']\n            }], attached: [{\n                type: Output\n            }] } });\n/**\n * @deprecated Use `CdkPortalOutlet` instead.\n * @breaking-change 9.0.0\n */\nclass PortalHostDirective extends CdkPortalOutlet {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: PortalHostDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.1.0-next.3\", type: PortalHostDirective, isStandalone: true, selector: \"[cdkPortalHost], [portalHost]\", inputs: { portal: [\"cdkPortalHost\", \"portal\"] }, providers: [\n            {\n                provide: CdkPortalOutlet,\n                useExisting: PortalHostDirective,\n            },\n        ], exportAs: [\"cdkPortalHost\"], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: PortalHostDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkPortalHost], [portalHost]',\n                    exportAs: 'cdkPortalHost',\n                    inputs: [{ name: 'portal', alias: 'cdkPortalHost' }],\n                    providers: [\n                        {\n                            provide: CdkPortalOutlet,\n                            useExisting: PortalHostDirective,\n                        },\n                    ],\n                    standalone: true,\n                }]\n        }] });\nclass PortalModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: PortalModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: PortalModule, imports: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective], exports: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: PortalModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: PortalModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective],\n                    exports: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective],\n                }]\n        }] });\n\n/**\n * Custom injector to be used when providing custom\n * injection tokens to components inside a portal.\n * @docs-private\n * @deprecated Use `Injector.create` instead.\n * @breaking-change 11.0.0\n */\nclass PortalInjector {\n    constructor(_parentInjector, _customTokens) {\n        this._parentInjector = _parentInjector;\n        this._customTokens = _customTokens;\n    }\n    get(token, notFoundValue) {\n        const value = this._customTokens.get(token);\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n        return this._parentInjector.get(token, notFoundValue);\n    }\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BasePortalHost, BasePortalOutlet, CdkPortal, CdkPortalOutlet, ComponentPortal, DomPortal, DomPortalHost, DomPortalOutlet, Portal, PortalHostDirective, PortalInjector, PortalModule, TemplatePortal, TemplatePortalDirective };\n","import * as i1 from '@angular/cdk/scrolling';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nexport { CdkScrollable, ScrollDispatcher, ViewportRuler } from '@angular/cdk/scrolling';\nimport * as i6 from '@angular/common';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, Inject, Optional, untracked, afterRender, afterNextRender, ElementRef, EnvironmentInjector, ApplicationRef, ANIMATION_MODULE_TYPE, InjectionToken, inject, Directive, NgZone, EventEmitter, booleanAttribute, Input, Output, NgModule } from '@angular/core';\nimport { coerceCssPixelValue, coerceArray } from '@angular/cdk/coercion';\nimport * as i1$1 from '@angular/cdk/platform';\nimport { supportsScrollBehavior, _getEventTarget, _isTestEnvironment } from '@angular/cdk/platform';\nimport { filter, takeUntil, takeWhile } from 'rxjs/operators';\nimport * as i5 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { DomPortalOutlet, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { Subject, Subscription, merge } from 'rxjs';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\n\nconst scrollBehaviorSupported = supportsScrollBehavior();\n/**\n * Strategy that will prevent the user from scrolling while the overlay is visible.\n */\nclass BlockScrollStrategy {\n    constructor(_viewportRuler, document) {\n        this._viewportRuler = _viewportRuler;\n        this._previousHTMLStyles = { top: '', left: '' };\n        this._isEnabled = false;\n        this._document = document;\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    attach() { }\n    /** Blocks page-level scroll while the attached overlay is open. */\n    enable() {\n        if (this._canBeEnabled()) {\n            const root = this._document.documentElement;\n            this._previousScrollPosition = this._viewportRuler.getViewportScrollPosition();\n            // Cache the previous inline styles in case the user had set them.\n            this._previousHTMLStyles.left = root.style.left || '';\n            this._previousHTMLStyles.top = root.style.top || '';\n            // Note: we're using the `html` node, instead of the `body`, because the `body` may\n            // have the user agent margin, whereas the `html` is guaranteed not to have one.\n            root.style.left = coerceCssPixelValue(-this._previousScrollPosition.left);\n            root.style.top = coerceCssPixelValue(-this._previousScrollPosition.top);\n            root.classList.add('cdk-global-scrollblock');\n            this._isEnabled = true;\n        }\n    }\n    /** Unblocks page-level scroll while the attached overlay is open. */\n    disable() {\n        if (this._isEnabled) {\n            const html = this._document.documentElement;\n            const body = this._document.body;\n            const htmlStyle = html.style;\n            const bodyStyle = body.style;\n            const previousHtmlScrollBehavior = htmlStyle.scrollBehavior || '';\n            const previousBodyScrollBehavior = bodyStyle.scrollBehavior || '';\n            this._isEnabled = false;\n            htmlStyle.left = this._previousHTMLStyles.left;\n            htmlStyle.top = this._previousHTMLStyles.top;\n            html.classList.remove('cdk-global-scrollblock');\n            // Disable user-defined smooth scrolling temporarily while we restore the scroll position.\n            // See https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-behavior\n            // Note that we don't mutate the property if the browser doesn't support `scroll-behavior`,\n            // because it can throw off feature detections in `supportsScrollBehavior` which\n            // checks for `'scrollBehavior' in documentElement.style`.\n            if (scrollBehaviorSupported) {\n                htmlStyle.scrollBehavior = bodyStyle.scrollBehavior = 'auto';\n            }\n            window.scroll(this._previousScrollPosition.left, this._previousScrollPosition.top);\n            if (scrollBehaviorSupported) {\n                htmlStyle.scrollBehavior = previousHtmlScrollBehavior;\n                bodyStyle.scrollBehavior = previousBodyScrollBehavior;\n            }\n        }\n    }\n    _canBeEnabled() {\n        // Since the scroll strategies can't be singletons, we have to use a global CSS class\n        // (`cdk-global-scrollblock`) to make sure that we don't try to disable global\n        // scrolling multiple times.\n        const html = this._document.documentElement;\n        if (html.classList.contains('cdk-global-scrollblock') || this._isEnabled) {\n            return false;\n        }\n        const body = this._document.body;\n        const viewport = this._viewportRuler.getViewportSize();\n        return body.scrollHeight > viewport.height || body.scrollWidth > viewport.width;\n    }\n}\n\n/**\n * Returns an error to be thrown when attempting to attach an already-attached scroll strategy.\n */\nfunction getMatScrollStrategyAlreadyAttachedError() {\n    return Error(`Scroll strategy has already been attached.`);\n}\n\n/**\n * Strategy that will close the overlay as soon as the user starts scrolling.\n */\nclass CloseScrollStrategy {\n    constructor(_scrollDispatcher, _ngZone, _viewportRuler, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._config = _config;\n        this._scrollSubscription = null;\n        /** Detaches the overlay ref and disables the scroll strategy. */\n        this._detach = () => {\n            this.disable();\n            if (this._overlayRef.hasAttached()) {\n                this._ngZone.run(() => this._overlayRef.detach());\n            }\n        };\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    attach(overlayRef) {\n        if (this._overlayRef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    }\n    /** Enables the closing of the attached overlay on scroll. */\n    enable() {\n        if (this._scrollSubscription) {\n            return;\n        }\n        const stream = this._scrollDispatcher.scrolled(0).pipe(filter(scrollable => {\n            return (!scrollable ||\n                !this._overlayRef.overlayElement.contains(scrollable.getElementRef().nativeElement));\n        }));\n        if (this._config && this._config.threshold && this._config.threshold > 1) {\n            this._initialScrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n            this._scrollSubscription = stream.subscribe(() => {\n                const scrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n                if (Math.abs(scrollPosition - this._initialScrollPosition) > this._config.threshold) {\n                    this._detach();\n                }\n                else {\n                    this._overlayRef.updatePosition();\n                }\n            });\n        }\n        else {\n            this._scrollSubscription = stream.subscribe(this._detach);\n        }\n    }\n    /** Disables the closing the attached overlay on scroll. */\n    disable() {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    }\n    detach() {\n        this.disable();\n        this._overlayRef = null;\n    }\n}\n\n/** Scroll strategy that doesn't do anything. */\nclass NoopScrollStrategy {\n    /** Does nothing, as this scroll strategy is a no-op. */\n    enable() { }\n    /** Does nothing, as this scroll strategy is a no-op. */\n    disable() { }\n    /** Does nothing, as this scroll strategy is a no-op. */\n    attach() { }\n}\n\n/**\n * Gets whether an element is scrolled outside of view by any of its parent scrolling containers.\n * @param element Dimensions of the element (from getBoundingClientRect)\n * @param scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @returns Whether the element is scrolled out of view\n * @docs-private\n */\nfunction isElementScrolledOutsideView(element, scrollContainers) {\n    return scrollContainers.some(containerBounds => {\n        const outsideAbove = element.bottom < containerBounds.top;\n        const outsideBelow = element.top > containerBounds.bottom;\n        const outsideLeft = element.right < containerBounds.left;\n        const outsideRight = element.left > containerBounds.right;\n        return outsideAbove || outsideBelow || outsideLeft || outsideRight;\n    });\n}\n/**\n * Gets whether an element is clipped by any of its scrolling containers.\n * @param element Dimensions of the element (from getBoundingClientRect)\n * @param scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @returns Whether the element is clipped\n * @docs-private\n */\nfunction isElementClippedByScrolling(element, scrollContainers) {\n    return scrollContainers.some(scrollContainerRect => {\n        const clippedAbove = element.top < scrollContainerRect.top;\n        const clippedBelow = element.bottom > scrollContainerRect.bottom;\n        const clippedLeft = element.left < scrollContainerRect.left;\n        const clippedRight = element.right > scrollContainerRect.right;\n        return clippedAbove || clippedBelow || clippedLeft || clippedRight;\n    });\n}\n\n/**\n * Strategy that will update the element position as the user is scrolling.\n */\nclass RepositionScrollStrategy {\n    constructor(_scrollDispatcher, _viewportRuler, _ngZone, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        this._config = _config;\n        this._scrollSubscription = null;\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    attach(overlayRef) {\n        if (this._overlayRef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    }\n    /** Enables repositioning of the attached overlay on scroll. */\n    enable() {\n        if (!this._scrollSubscription) {\n            const throttle = this._config ? this._config.scrollThrottle : 0;\n            this._scrollSubscription = this._scrollDispatcher.scrolled(throttle).subscribe(() => {\n                this._overlayRef.updatePosition();\n                // TODO(crisbeto): make `close` on by default once all components can handle it.\n                if (this._config && this._config.autoClose) {\n                    const overlayRect = this._overlayRef.overlayElement.getBoundingClientRect();\n                    const { width, height } = this._viewportRuler.getViewportSize();\n                    // TODO(crisbeto): include all ancestor scroll containers here once\n                    // we have a way of exposing the trigger element to the scroll strategy.\n                    const parentRects = [{ width, height, bottom: height, right: width, top: 0, left: 0 }];\n                    if (isElementScrolledOutsideView(overlayRect, parentRects)) {\n                        this.disable();\n                        this._ngZone.run(() => this._overlayRef.detach());\n                    }\n                }\n            });\n        }\n    }\n    /** Disables repositioning of the attached overlay on scroll. */\n    disable() {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    }\n    detach() {\n        this.disable();\n        this._overlayRef = null;\n    }\n}\n\n/**\n * Options for how an overlay will handle scrolling.\n *\n * Users can provide a custom value for `ScrollStrategyOptions` to replace the default\n * behaviors. This class primarily acts as a factory for ScrollStrategy instances.\n */\nclass ScrollStrategyOptions {\n    constructor(_scrollDispatcher, _viewportRuler, _ngZone, document) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        /** Do nothing on scroll. */\n        this.noop = () => new NoopScrollStrategy();\n        /**\n         * Close the overlay as soon as the user scrolls.\n         * @param config Configuration to be used inside the scroll strategy.\n         */\n        this.close = (config) => new CloseScrollStrategy(this._scrollDispatcher, this._ngZone, this._viewportRuler, config);\n        /** Block scrolling. */\n        this.block = () => new BlockScrollStrategy(this._viewportRuler, this._document);\n        /**\n         * Update the overlay's position on scroll.\n         * @param config Configuration to be used inside the scroll strategy.\n         * Allows debouncing the reposition calls.\n         */\n        this.reposition = (config) => new RepositionScrollStrategy(this._scrollDispatcher, this._viewportRuler, this._ngZone, config);\n        this._document = document;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: ScrollStrategyOptions, deps: [{ token: i1.ScrollDispatcher }, { token: i1.ViewportRuler }, { token: i0.NgZone }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: ScrollStrategyOptions, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: ScrollStrategyOptions, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: i1.ScrollDispatcher }, { type: i1.ViewportRuler }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }] });\n\n/** Initial configuration used when creating an overlay. */\nclass OverlayConfig {\n    constructor(config) {\n        /** Strategy to be used when handling scroll events while the overlay is open. */\n        this.scrollStrategy = new NoopScrollStrategy();\n        /** Custom class to add to the overlay pane. */\n        this.panelClass = '';\n        /** Whether the overlay has a backdrop. */\n        this.hasBackdrop = false;\n        /** Custom class to add to the backdrop */\n        this.backdropClass = 'cdk-overlay-dark-backdrop';\n        /**\n         * Whether the overlay should be disposed of when the user goes backwards/forwards in history.\n         * Note that this usually doesn't include clicking on links (unless the user is using\n         * the `HashLocationStrategy`).\n         */\n        this.disposeOnNavigation = false;\n        if (config) {\n            // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n            // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n            // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n            const configKeys = Object.keys(config);\n            for (const key of configKeys) {\n                if (config[key] !== undefined) {\n                    // TypeScript, as of version 3.5, sees the left-hand-side of this expression\n                    // as \"I don't know *which* key this is, so the only valid value is the intersection\n                    // of all the possible values.\" In this case, that happens to be `undefined`. TypeScript\n                    // is not smart enough to see that the right-hand-side is actually an access of the same\n                    // exact type with the same exact key, meaning that the value type must be identical.\n                    // So we use `any` to work around this.\n                    this[key] = config[key];\n                }\n            }\n        }\n    }\n}\n\n/** The points of the origin element and the overlay element to connect. */\nclass ConnectionPositionPair {\n    constructor(origin, overlay, \n    /** Offset along the X axis. */\n    offsetX, \n    /** Offset along the Y axis. */\n    offsetY, \n    /** Class(es) to be applied to the panel while this position is active. */\n    panelClass) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.panelClass = panelClass;\n        this.originX = origin.originX;\n        this.originY = origin.originY;\n        this.overlayX = overlay.overlayX;\n        this.overlayY = overlay.overlayY;\n    }\n}\n/**\n * Set of properties regarding the position of the origin and overlay relative to the viewport\n * with respect to the containing Scrollable elements.\n *\n * The overlay and origin are clipped if any part of their bounding client rectangle exceeds the\n * bounds of any one of the strategy's Scrollable's bounding client rectangle.\n *\n * The overlay and origin are outside view if there is no overlap between their bounding client\n * rectangle and any one of the strategy's Scrollable's bounding client rectangle.\n *\n *       -----------                    -----------\n *       | outside |                    | clipped |\n *       |  view   |              --------------------------\n *       |         |              |     |         |        |\n *       ----------               |     -----------        |\n *  --------------------------    |                        |\n *  |                        |    |      Scrollable        |\n *  |                        |    |                        |\n *  |                        |     --------------------------\n *  |      Scrollable        |\n *  |                        |\n *  --------------------------\n *\n *  @docs-private\n */\nclass ScrollingVisibility {\n}\n/** The change event emitted by the strategy when a fallback position is used. */\nclass ConnectedOverlayPositionChange {\n    constructor(\n    /** The position used as a result of this change. */\n    connectionPair, \n    /** @docs-private */\n    scrollableViewProperties) {\n        this.connectionPair = connectionPair;\n        this.scrollableViewProperties = scrollableViewProperties;\n    }\n}\n/**\n * Validates whether a vertical position property matches the expected values.\n * @param property Name of the property being validated.\n * @param value Value of the property being validated.\n * @docs-private\n */\nfunction validateVerticalPosition(property, value) {\n    if (value !== 'top' && value !== 'bottom' && value !== 'center') {\n        throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n            `Expected \"top\", \"bottom\" or \"center\".`);\n    }\n}\n/**\n * Validates whether a horizontal position property matches the expected values.\n * @param property Name of the property being validated.\n * @param value Value of the property being validated.\n * @docs-private\n */\nfunction validateHorizontalPosition(property, value) {\n    if (value !== 'start' && value !== 'end' && value !== 'center') {\n        throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n            `Expected \"start\", \"end\" or \"center\".`);\n    }\n}\n\n/**\n * Service for dispatching events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass BaseOverlayDispatcher {\n    constructor(document) {\n        /** Currently attached overlays in the order they were attached. */\n        this._attachedOverlays = [];\n        this._document = document;\n    }\n    ngOnDestroy() {\n        this.detach();\n    }\n    /** Add a new overlay to the list of attached overlay refs. */\n    add(overlayRef) {\n        // Ensure that we don't get the same overlay multiple times.\n        this.remove(overlayRef);\n        this._attachedOverlays.push(overlayRef);\n    }\n    /** Remove an overlay from the list of attached overlay refs. */\n    remove(overlayRef) {\n        const index = this._attachedOverlays.indexOf(overlayRef);\n        if (index > -1) {\n            this._attachedOverlays.splice(index, 1);\n        }\n        // Remove the global listener once there are no more overlays.\n        if (this._attachedOverlays.length === 0) {\n            this.detach();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: BaseOverlayDispatcher, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: BaseOverlayDispatcher, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: BaseOverlayDispatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }] });\n\n/**\n * Service for dispatching keyboard events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass OverlayKeyboardDispatcher extends BaseOverlayDispatcher {\n    constructor(document, \n    /** @breaking-change 14.0.0 _ngZone will be required. */\n    _ngZone) {\n        super(document);\n        this._ngZone = _ngZone;\n        /** Keyboard event listener that will be attached to the body. */\n        this._keydownListener = (event) => {\n            const overlays = this._attachedOverlays;\n            for (let i = overlays.length - 1; i > -1; i--) {\n                // Dispatch the keydown event to the top overlay which has subscribers to its keydown events.\n                // We want to target the most recent overlay, rather than trying to match where the event came\n                // from, because some components might open an overlay, but keep focus on a trigger element\n                // (e.g. for select and autocomplete). We skip overlays without keydown event subscriptions,\n                // because we don't want overlays that don't handle keyboard events to block the ones below\n                // them that do.\n                if (overlays[i]._keydownEvents.observers.length > 0) {\n                    const keydownEvents = overlays[i]._keydownEvents;\n                    /** @breaking-change 14.0.0 _ngZone will be required. */\n                    if (this._ngZone) {\n                        this._ngZone.run(() => keydownEvents.next(event));\n                    }\n                    else {\n                        keydownEvents.next(event);\n                    }\n                    break;\n                }\n            }\n        };\n    }\n    /** Add a new overlay to the list of attached overlay refs. */\n    add(overlayRef) {\n        super.add(overlayRef);\n        // Lazily start dispatcher once first overlay is added\n        if (!this._isAttached) {\n            /** @breaking-change 14.0.0 _ngZone will be required. */\n            if (this._ngZone) {\n                this._ngZone.runOutsideAngular(() => this._document.body.addEventListener('keydown', this._keydownListener));\n            }\n            else {\n                this._document.body.addEventListener('keydown', this._keydownListener);\n            }\n            this._isAttached = true;\n        }\n    }\n    /** Detaches the global keyboard event listener. */\n    detach() {\n        if (this._isAttached) {\n            this._document.body.removeEventListener('keydown', this._keydownListener);\n            this._isAttached = false;\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: OverlayKeyboardDispatcher, deps: [{ token: DOCUMENT }, { token: i0.NgZone, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: OverlayKeyboardDispatcher, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: OverlayKeyboardDispatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i0.NgZone, decorators: [{\n                    type: Optional\n                }] }] });\n\n/**\n * Service for dispatching mouse click events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass OverlayOutsideClickDispatcher extends BaseOverlayDispatcher {\n    constructor(document, _platform, \n    /** @breaking-change 14.0.0 _ngZone will be required. */\n    _ngZone) {\n        super(document);\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._cursorStyleIsSet = false;\n        /** Store pointerdown event target to track origin of click. */\n        this._pointerDownListener = (event) => {\n            this._pointerDownEventTarget = _getEventTarget(event);\n        };\n        /** Click event listener that will be attached to the body propagate phase. */\n        this._clickListener = (event) => {\n            const target = _getEventTarget(event);\n            // In case of a click event, we want to check the origin of the click\n            // (e.g. in case where a user starts a click inside the overlay and\n            // releases the click outside of it).\n            // This is done by using the event target of the preceding pointerdown event.\n            // Every click event caused by a pointer device has a preceding pointerdown\n            // event, unless the click was programmatically triggered (e.g. in a unit test).\n            const origin = event.type === 'click' && this._pointerDownEventTarget\n                ? this._pointerDownEventTarget\n                : target;\n            // Reset the stored pointerdown event target, to avoid having it interfere\n            // in subsequent events.\n            this._pointerDownEventTarget = null;\n            // We copy the array because the original may be modified asynchronously if the\n            // outsidePointerEvents listener decides to detach overlays resulting in index errors inside\n            // the for loop.\n            const overlays = this._attachedOverlays.slice();\n            // Dispatch the mouse event to the top overlay which has subscribers to its mouse events.\n            // We want to target all overlays for which the click could be considered as outside click.\n            // As soon as we reach an overlay for which the click is not outside click we break off\n            // the loop.\n            for (let i = overlays.length - 1; i > -1; i--) {\n                const overlayRef = overlays[i];\n                if (overlayRef._outsidePointerEvents.observers.length < 1 || !overlayRef.hasAttached()) {\n                    continue;\n                }\n                // If it's a click inside the overlay, just break - we should do nothing\n                // If it's an outside click (both origin and target of the click) dispatch the mouse event,\n                // and proceed with the next overlay\n                if (containsPierceShadowDom(overlayRef.overlayElement, target) ||\n                    containsPierceShadowDom(overlayRef.overlayElement, origin)) {\n                    break;\n                }\n                const outsidePointerEvents = overlayRef._outsidePointerEvents;\n                /** @breaking-change 14.0.0 _ngZone will be required. */\n                if (this._ngZone) {\n                    this._ngZone.run(() => outsidePointerEvents.next(event));\n                }\n                else {\n                    outsidePointerEvents.next(event);\n                }\n            }\n        };\n    }\n    /** Add a new overlay to the list of attached overlay refs. */\n    add(overlayRef) {\n        super.add(overlayRef);\n        // Safari on iOS does not generate click events for non-interactive\n        // elements. However, we want to receive a click for any element outside\n        // the overlay. We can force a \"clickable\" state by setting\n        // `cursor: pointer` on the document body. See:\n        // https://developer.mozilla.org/en-US/docs/Web/API/Element/click_event#Safari_Mobile\n        // https://developer.apple.com/library/archive/documentation/AppleApplications/Reference/SafariWebContent/HandlingEvents/HandlingEvents.html\n        if (!this._isAttached) {\n            const body = this._document.body;\n            /** @breaking-change 14.0.0 _ngZone will be required. */\n            if (this._ngZone) {\n                this._ngZone.runOutsideAngular(() => this._addEventListeners(body));\n            }\n            else {\n                this._addEventListeners(body);\n            }\n            // click event is not fired on iOS. To make element \"clickable\" we are\n            // setting the cursor to pointer\n            if (this._platform.IOS && !this._cursorStyleIsSet) {\n                this._cursorOriginalValue = body.style.cursor;\n                body.style.cursor = 'pointer';\n                this._cursorStyleIsSet = true;\n            }\n            this._isAttached = true;\n        }\n    }\n    /** Detaches the global keyboard event listener. */\n    detach() {\n        if (this._isAttached) {\n            const body = this._document.body;\n            body.removeEventListener('pointerdown', this._pointerDownListener, true);\n            body.removeEventListener('click', this._clickListener, true);\n            body.removeEventListener('auxclick', this._clickListener, true);\n            body.removeEventListener('contextmenu', this._clickListener, true);\n            if (this._platform.IOS && this._cursorStyleIsSet) {\n                body.style.cursor = this._cursorOriginalValue;\n                this._cursorStyleIsSet = false;\n            }\n            this._isAttached = false;\n        }\n    }\n    _addEventListeners(body) {\n        body.addEventListener('pointerdown', this._pointerDownListener, true);\n        body.addEventListener('click', this._clickListener, true);\n        body.addEventListener('auxclick', this._clickListener, true);\n        body.addEventListener('contextmenu', this._clickListener, true);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: OverlayOutsideClickDispatcher, deps: [{ token: DOCUMENT }, { token: i1$1.Platform }, { token: i0.NgZone, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: OverlayOutsideClickDispatcher, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: OverlayOutsideClickDispatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i1$1.Platform }, { type: i0.NgZone, decorators: [{\n                    type: Optional\n                }] }] });\n/** Version of `Element.contains` that transcends shadow DOM boundaries. */\nfunction containsPierceShadowDom(parent, child) {\n    const supportsShadowRoot = typeof ShadowRoot !== 'undefined' && ShadowRoot;\n    let current = child;\n    while (current) {\n        if (current === parent) {\n            return true;\n        }\n        current =\n            supportsShadowRoot && current instanceof ShadowRoot ? current.host : current.parentNode;\n    }\n    return false;\n}\n\n/** Container inside which all overlays will render. */\nclass OverlayContainer {\n    constructor(document, _platform) {\n        this._platform = _platform;\n        this._document = document;\n    }\n    ngOnDestroy() {\n        this._containerElement?.remove();\n    }\n    /**\n     * This method returns the overlay container element. It will lazily\n     * create the element the first time it is called to facilitate using\n     * the container in non-browser environments.\n     * @returns the container element\n     */\n    getContainerElement() {\n        if (!this._containerElement) {\n            this._createContainer();\n        }\n        return this._containerElement;\n    }\n    /**\n     * Create the overlay container element, which is simply a div\n     * with the 'cdk-overlay-container' class on the document body.\n     */\n    _createContainer() {\n        const containerClass = 'cdk-overlay-container';\n        // TODO(crisbeto): remove the testing check once we have an overlay testing\n        // module or Angular starts tearing down the testing `NgModule`. See:\n        // https://github.com/angular/angular/issues/18831\n        if (this._platform.isBrowser || _isTestEnvironment()) {\n            const oppositePlatformContainers = this._document.querySelectorAll(`.${containerClass}[platform=\"server\"], ` + `.${containerClass}[platform=\"test\"]`);\n            // Remove any old containers from the opposite platform.\n            // This can happen when transitioning from the server to the client.\n            for (let i = 0; i < oppositePlatformContainers.length; i++) {\n                oppositePlatformContainers[i].remove();\n            }\n        }\n        const container = this._document.createElement('div');\n        container.classList.add(containerClass);\n        // A long time ago we kept adding new overlay containers whenever a new app was instantiated,\n        // but at some point we added logic which clears the duplicate ones in order to avoid leaks.\n        // The new logic was a little too aggressive since it was breaking some legitimate use cases.\n        // To mitigate the problem we made it so that only containers from a different platform are\n        // cleared, but the side-effect was that people started depending on the overly-aggressive\n        // logic to clean up their tests for them. Until we can introduce an overlay-specific testing\n        // module which does the cleanup, we try to detect that we're in a test environment and we\n        // always clear the container. See #17006.\n        // TODO(crisbeto): remove the test environment check once we have an overlay testing module.\n        if (_isTestEnvironment()) {\n            container.setAttribute('platform', 'test');\n        }\n        else if (!this._platform.isBrowser) {\n            container.setAttribute('platform', 'server');\n        }\n        this._document.body.appendChild(container);\n        this._containerElement = container;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: OverlayContainer, deps: [{ token: DOCUMENT }, { token: i1$1.Platform }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: OverlayContainer, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: OverlayContainer, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i1$1.Platform }] });\n\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nclass OverlayRef {\n    constructor(_portalOutlet, _host, _pane, _config, _ngZone, _keyboardDispatcher, _document, _location, _outsideClickDispatcher, _animationsDisabled = false, _injector) {\n        this._portalOutlet = _portalOutlet;\n        this._host = _host;\n        this._pane = _pane;\n        this._config = _config;\n        this._ngZone = _ngZone;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._document = _document;\n        this._location = _location;\n        this._outsideClickDispatcher = _outsideClickDispatcher;\n        this._animationsDisabled = _animationsDisabled;\n        this._injector = _injector;\n        this._backdropElement = null;\n        this._backdropClick = new Subject();\n        this._attachments = new Subject();\n        this._detachments = new Subject();\n        this._locationChanges = Subscription.EMPTY;\n        this._backdropClickHandler = (event) => this._backdropClick.next(event);\n        this._backdropTransitionendHandler = (event) => {\n            this._disposeBackdrop(event.target);\n        };\n        /** Stream of keydown events dispatched to this overlay. */\n        this._keydownEvents = new Subject();\n        /** Stream of mouse outside events dispatched to this overlay. */\n        this._outsidePointerEvents = new Subject();\n        this._renders = new Subject();\n        if (_config.scrollStrategy) {\n            this._scrollStrategy = _config.scrollStrategy;\n            this._scrollStrategy.attach(this);\n        }\n        this._positionStrategy = _config.positionStrategy;\n        // Users could open the overlay from an `effect`, in which case we need to\n        // run the `afterRender` as `untracked`. We don't recommend that users do\n        // this, but we also don't want to break users who are doing it.\n        this._afterRenderRef = untracked(() => afterRender(() => {\n            this._renders.next();\n        }, { injector: this._injector }));\n    }\n    /** The overlay's HTML element */\n    get overlayElement() {\n        return this._pane;\n    }\n    /** The overlay's backdrop HTML element. */\n    get backdropElement() {\n        return this._backdropElement;\n    }\n    /**\n     * Wrapper around the panel element. Can be used for advanced\n     * positioning where a wrapper with specific styling is\n     * required around the overlay pane.\n     */\n    get hostElement() {\n        return this._host;\n    }\n    /**\n     * Attaches content, given via a Portal, to the overlay.\n     * If the overlay is configured to have a backdrop, it will be created.\n     *\n     * @param portal Portal instance to which to attach the overlay.\n     * @returns The portal attachment result.\n     */\n    attach(portal) {\n        // Insert the host into the DOM before attaching the portal, otherwise\n        // the animations module will skip animations on repeat attachments.\n        if (!this._host.parentElement && this._previousHostParent) {\n            this._previousHostParent.appendChild(this._host);\n        }\n        const attachResult = this._portalOutlet.attach(portal);\n        if (this._positionStrategy) {\n            this._positionStrategy.attach(this);\n        }\n        this._updateStackingOrder();\n        this._updateElementSize();\n        this._updateElementDirection();\n        if (this._scrollStrategy) {\n            this._scrollStrategy.enable();\n        }\n        // Update the position once the overlay is fully rendered before attempting to position it,\n        // as the position may depend on the size of the rendered content.\n        afterNextRender(() => {\n            // The overlay could've been detached before the callback executed.\n            if (this.hasAttached()) {\n                this.updatePosition();\n            }\n        }, { injector: this._injector });\n        // Enable pointer events for the overlay pane element.\n        this._togglePointerEvents(true);\n        if (this._config.hasBackdrop) {\n            this._attachBackdrop();\n        }\n        if (this._config.panelClass) {\n            this._toggleClasses(this._pane, this._config.panelClass, true);\n        }\n        // Only emit the `attachments` event once all other setup is done.\n        this._attachments.next();\n        // Track this overlay by the keyboard dispatcher\n        this._keyboardDispatcher.add(this);\n        if (this._config.disposeOnNavigation) {\n            this._locationChanges = this._location.subscribe(() => this.dispose());\n        }\n        this._outsideClickDispatcher.add(this);\n        // TODO(crisbeto): the null check is here, because the portal outlet returns `any`.\n        // We should be guaranteed for the result to be `ComponentRef | EmbeddedViewRef`, but\n        // `instanceof EmbeddedViewRef` doesn't appear to work at the moment.\n        if (typeof attachResult?.onDestroy === 'function') {\n            // In most cases we control the portal and we know when it is being detached so that\n            // we can finish the disposal process. The exception is if the user passes in a custom\n            // `ViewContainerRef` that isn't destroyed through the overlay API. Note that we use\n            // `detach` here instead of `dispose`, because we don't know if the user intends to\n            // reattach the overlay at a later point. It also has the advantage of waiting for animations.\n            attachResult.onDestroy(() => {\n                if (this.hasAttached()) {\n                    // We have to delay the `detach` call, because detaching immediately prevents\n                    // other destroy hooks from running. This is likely a framework bug similar to\n                    // https://github.com/angular/angular/issues/46119\n                    this._ngZone.runOutsideAngular(() => Promise.resolve().then(() => this.detach()));\n                }\n            });\n        }\n        return attachResult;\n    }\n    /**\n     * Detaches an overlay from a portal.\n     * @returns The portal detachment result.\n     */\n    detach() {\n        if (!this.hasAttached()) {\n            return;\n        }\n        this.detachBackdrop();\n        // When the overlay is detached, the pane element should disable pointer events.\n        // This is necessary because otherwise the pane element will cover the page and disable\n        // pointer events therefore. Depends on the position strategy and the applied pane boundaries.\n        this._togglePointerEvents(false);\n        if (this._positionStrategy && this._positionStrategy.detach) {\n            this._positionStrategy.detach();\n        }\n        if (this._scrollStrategy) {\n            this._scrollStrategy.disable();\n        }\n        const detachmentResult = this._portalOutlet.detach();\n        // Only emit after everything is detached.\n        this._detachments.next();\n        // Remove this overlay from keyboard dispatcher tracking.\n        this._keyboardDispatcher.remove(this);\n        // Keeping the host element in the DOM can cause scroll jank, because it still gets\n        // rendered, even though it's transparent and unclickable which is why we remove it.\n        this._detachContentWhenEmpty();\n        this._locationChanges.unsubscribe();\n        this._outsideClickDispatcher.remove(this);\n        return detachmentResult;\n    }\n    /** Cleans up the overlay from the DOM. */\n    dispose() {\n        const isAttached = this.hasAttached();\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._disposeScrollStrategy();\n        this._disposeBackdrop(this._backdropElement);\n        this._locationChanges.unsubscribe();\n        this._keyboardDispatcher.remove(this);\n        this._portalOutlet.dispose();\n        this._attachments.complete();\n        this._backdropClick.complete();\n        this._keydownEvents.complete();\n        this._outsidePointerEvents.complete();\n        this._outsideClickDispatcher.remove(this);\n        this._host?.remove();\n        this._previousHostParent = this._pane = this._host = null;\n        if (isAttached) {\n            this._detachments.next();\n        }\n        this._detachments.complete();\n        this._afterRenderRef.destroy();\n        this._renders.complete();\n    }\n    /** Whether the overlay has attached content. */\n    hasAttached() {\n        return this._portalOutlet.hasAttached();\n    }\n    /** Gets an observable that emits when the backdrop has been clicked. */\n    backdropClick() {\n        return this._backdropClick;\n    }\n    /** Gets an observable that emits when the overlay has been attached. */\n    attachments() {\n        return this._attachments;\n    }\n    /** Gets an observable that emits when the overlay has been detached. */\n    detachments() {\n        return this._detachments;\n    }\n    /** Gets an observable of keydown events targeted to this overlay. */\n    keydownEvents() {\n        return this._keydownEvents;\n    }\n    /** Gets an observable of pointer events targeted outside this overlay. */\n    outsidePointerEvents() {\n        return this._outsidePointerEvents;\n    }\n    /** Gets the current overlay configuration, which is immutable. */\n    getConfig() {\n        return this._config;\n    }\n    /** Updates the position of the overlay based on the position strategy. */\n    updatePosition() {\n        if (this._positionStrategy) {\n            this._positionStrategy.apply();\n        }\n    }\n    /** Switches to a new position strategy and updates the overlay position. */\n    updatePositionStrategy(strategy) {\n        if (strategy === this._positionStrategy) {\n            return;\n        }\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._positionStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            this.updatePosition();\n        }\n    }\n    /** Update the size properties of the overlay. */\n    updateSize(sizeConfig) {\n        this._config = { ...this._config, ...sizeConfig };\n        this._updateElementSize();\n    }\n    /** Sets the LTR/RTL direction for the overlay. */\n    setDirection(dir) {\n        this._config = { ...this._config, direction: dir };\n        this._updateElementDirection();\n    }\n    /** Add a CSS class or an array of classes to the overlay pane. */\n    addPanelClass(classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, true);\n        }\n    }\n    /** Remove a CSS class or an array of classes from the overlay pane. */\n    removePanelClass(classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, false);\n        }\n    }\n    /**\n     * Returns the layout direction of the overlay panel.\n     */\n    getDirection() {\n        const direction = this._config.direction;\n        if (!direction) {\n            return 'ltr';\n        }\n        return typeof direction === 'string' ? direction : direction.value;\n    }\n    /** Switches to a new scroll strategy. */\n    updateScrollStrategy(strategy) {\n        if (strategy === this._scrollStrategy) {\n            return;\n        }\n        this._disposeScrollStrategy();\n        this._scrollStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            strategy.enable();\n        }\n    }\n    /** Updates the text direction of the overlay panel. */\n    _updateElementDirection() {\n        this._host.setAttribute('dir', this.getDirection());\n    }\n    /** Updates the size of the overlay element based on the overlay config. */\n    _updateElementSize() {\n        if (!this._pane) {\n            return;\n        }\n        const style = this._pane.style;\n        style.width = coerceCssPixelValue(this._config.width);\n        style.height = coerceCssPixelValue(this._config.height);\n        style.minWidth = coerceCssPixelValue(this._config.minWidth);\n        style.minHeight = coerceCssPixelValue(this._config.minHeight);\n        style.maxWidth = coerceCssPixelValue(this._config.maxWidth);\n        style.maxHeight = coerceCssPixelValue(this._config.maxHeight);\n    }\n    /** Toggles the pointer events for the overlay pane element. */\n    _togglePointerEvents(enablePointer) {\n        this._pane.style.pointerEvents = enablePointer ? '' : 'none';\n    }\n    /** Attaches a backdrop for this overlay. */\n    _attachBackdrop() {\n        const showingClass = 'cdk-overlay-backdrop-showing';\n        this._backdropElement = this._document.createElement('div');\n        this._backdropElement.classList.add('cdk-overlay-backdrop');\n        if (this._animationsDisabled) {\n            this._backdropElement.classList.add('cdk-overlay-backdrop-noop-animation');\n        }\n        if (this._config.backdropClass) {\n            this._toggleClasses(this._backdropElement, this._config.backdropClass, true);\n        }\n        // Insert the backdrop before the pane in the DOM order,\n        // in order to handle stacked overlays properly.\n        this._host.parentElement.insertBefore(this._backdropElement, this._host);\n        // Forward backdrop clicks such that the consumer of the overlay can perform whatever\n        // action desired when such a click occurs (usually closing the overlay).\n        this._backdropElement.addEventListener('click', this._backdropClickHandler);\n        // Add class to fade-in the backdrop after one frame.\n        if (!this._animationsDisabled && typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular(() => {\n                requestAnimationFrame(() => {\n                    if (this._backdropElement) {\n                        this._backdropElement.classList.add(showingClass);\n                    }\n                });\n            });\n        }\n        else {\n            this._backdropElement.classList.add(showingClass);\n        }\n    }\n    /**\n     * Updates the stacking order of the element, moving it to the top if necessary.\n     * This is required in cases where one overlay was detached, while another one,\n     * that should be behind it, was destroyed. The next time both of them are opened,\n     * the stacking will be wrong, because the detached element's pane will still be\n     * in its original DOM position.\n     */\n    _updateStackingOrder() {\n        if (this._host.nextSibling) {\n            this._host.parentNode.appendChild(this._host);\n        }\n    }\n    /** Detaches the backdrop (if any) associated with the overlay. */\n    detachBackdrop() {\n        const backdropToDetach = this._backdropElement;\n        if (!backdropToDetach) {\n            return;\n        }\n        if (this._animationsDisabled) {\n            this._disposeBackdrop(backdropToDetach);\n            return;\n        }\n        backdropToDetach.classList.remove('cdk-overlay-backdrop-showing');\n        this._ngZone.runOutsideAngular(() => {\n            backdropToDetach.addEventListener('transitionend', this._backdropTransitionendHandler);\n        });\n        // If the backdrop doesn't have a transition, the `transitionend` event won't fire.\n        // In this case we make it unclickable and we try to remove it after a delay.\n        backdropToDetach.style.pointerEvents = 'none';\n        // Run this outside the Angular zone because there's nothing that Angular cares about.\n        // If it were to run inside the Angular zone, every test that used Overlay would have to be\n        // either async or fakeAsync.\n        this._backdropTimeout = this._ngZone.runOutsideAngular(() => setTimeout(() => {\n            this._disposeBackdrop(backdropToDetach);\n        }, 500));\n    }\n    /** Toggles a single CSS class or an array of classes on an element. */\n    _toggleClasses(element, cssClasses, isAdd) {\n        const classes = coerceArray(cssClasses || []).filter(c => !!c);\n        if (classes.length) {\n            isAdd ? element.classList.add(...classes) : element.classList.remove(...classes);\n        }\n    }\n    /** Detaches the overlay content next time the zone stabilizes. */\n    _detachContentWhenEmpty() {\n        // Normally we wouldn't have to explicitly run this outside the `NgZone`, however\n        // if the consumer is using `zone-patch-rxjs`, the `Subscription.unsubscribe` call will\n        // be patched to run inside the zone, which will throw us into an infinite loop.\n        this._ngZone.runOutsideAngular(() => {\n            // We can't remove the host here immediately, because the overlay pane's content\n            // might still be animating. This stream helps us avoid interrupting the animation\n            // by waiting for the pane to become empty.\n            const subscription = this._renders\n                .pipe(takeUntil(merge(this._attachments, this._detachments)))\n                .subscribe(() => {\n                // Needs a couple of checks for the pane and host, because\n                // they may have been removed by the time the zone stabilizes.\n                if (!this._pane || !this._host || this._pane.children.length === 0) {\n                    if (this._pane && this._config.panelClass) {\n                        this._toggleClasses(this._pane, this._config.panelClass, false);\n                    }\n                    if (this._host && this._host.parentElement) {\n                        this._previousHostParent = this._host.parentElement;\n                        this._host.remove();\n                    }\n                    subscription.unsubscribe();\n                }\n            });\n        });\n    }\n    /** Disposes of a scroll strategy. */\n    _disposeScrollStrategy() {\n        const scrollStrategy = this._scrollStrategy;\n        if (scrollStrategy) {\n            scrollStrategy.disable();\n            if (scrollStrategy.detach) {\n                scrollStrategy.detach();\n            }\n        }\n    }\n    /** Removes a backdrop element from the DOM. */\n    _disposeBackdrop(backdrop) {\n        if (backdrop) {\n            backdrop.removeEventListener('click', this._backdropClickHandler);\n            backdrop.removeEventListener('transitionend', this._backdropTransitionendHandler);\n            backdrop.remove();\n            // It is possible that a new portal has been attached to this overlay since we started\n            // removing the backdrop. If that is the case, only clear the backdrop reference if it\n            // is still the same instance that we started to remove.\n            if (this._backdropElement === backdrop) {\n                this._backdropElement = null;\n            }\n        }\n        if (this._backdropTimeout) {\n            clearTimeout(this._backdropTimeout);\n            this._backdropTimeout = undefined;\n        }\n    }\n}\n\n// TODO: refactor clipping detection into a separate thing (part of scrolling module)\n// TODO: doesn't handle both flexible width and height when it has to scroll along both axis.\n/** Class to be added to the overlay bounding box. */\nconst boundingBoxClass = 'cdk-overlay-connected-position-bounding-box';\n/** Regex used to split a string on its CSS units. */\nconst cssUnitPattern = /([A-Za-z%]+)$/;\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n */\nclass FlexibleConnectedPositionStrategy {\n    /** Ordered list of preferred positions, from most to least desirable. */\n    get positions() {\n        return this._preferredPositions;\n    }\n    constructor(connectedTo, _viewportRuler, _document, _platform, _overlayContainer) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        this._overlayContainer = _overlayContainer;\n        /** Last size used for the bounding box. Used to avoid resizing the overlay after open. */\n        this._lastBoundingBoxSize = { width: 0, height: 0 };\n        /** Whether the overlay was pushed in a previous positioning. */\n        this._isPushed = false;\n        /** Whether the overlay can be pushed on-screen on the initial open. */\n        this._canPush = true;\n        /** Whether the overlay can grow via flexible width/height after the initial open. */\n        this._growAfterOpen = false;\n        /** Whether the overlay's width and height can be constrained to fit within the viewport. */\n        this._hasFlexibleDimensions = true;\n        /** Whether the overlay position is locked. */\n        this._positionLocked = false;\n        /** Amount of space that must be maintained between the overlay and the edge of the viewport. */\n        this._viewportMargin = 0;\n        /** The Scrollable containers used to check scrollable view properties on position change. */\n        this._scrollables = [];\n        /** Ordered list of preferred positions, from most to least desirable. */\n        this._preferredPositions = [];\n        /** Subject that emits whenever the position changes. */\n        this._positionChanges = new Subject();\n        /** Subscription to viewport size changes. */\n        this._resizeSubscription = Subscription.EMPTY;\n        /** Default offset for the overlay along the x axis. */\n        this._offsetX = 0;\n        /** Default offset for the overlay along the y axis. */\n        this._offsetY = 0;\n        /** Keeps track of the CSS classes that the position strategy has applied on the overlay panel. */\n        this._appliedPanelClasses = [];\n        /** Observable sequence of position changes. */\n        this.positionChanges = this._positionChanges;\n        this.setOrigin(connectedTo);\n    }\n    /** Attaches this position strategy to an overlay. */\n    attach(overlayRef) {\n        if (this._overlayRef &&\n            overlayRef !== this._overlayRef &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('This position strategy is already attached to an overlay');\n        }\n        this._validatePositions();\n        overlayRef.hostElement.classList.add(boundingBoxClass);\n        this._overlayRef = overlayRef;\n        this._boundingBox = overlayRef.hostElement;\n        this._pane = overlayRef.overlayElement;\n        this._isDisposed = false;\n        this._isInitialRender = true;\n        this._lastPosition = null;\n        this._resizeSubscription.unsubscribe();\n        this._resizeSubscription = this._viewportRuler.change().subscribe(() => {\n            // When the window is resized, we want to trigger the next reposition as if it\n            // was an initial render, in order for the strategy to pick a new optimal position,\n            // otherwise position locking will cause it to stay at the old one.\n            this._isInitialRender = true;\n            this.apply();\n        });\n    }\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin best fits on-screen.\n     *\n     * The selection of a position goes as follows:\n     *  - If any positions fit completely within the viewport as-is,\n     *      choose the first position that does so.\n     *  - If flexible dimensions are enabled and at least one satisfies the given minimum width/height,\n     *      choose the position with the greatest available size modified by the positions' weight.\n     *  - If pushing is enabled, take the position that went off-screen the least and push it\n     *      on-screen.\n     *  - If none of the previous criteria were met, use the position that goes off-screen the least.\n     * @docs-private\n     */\n    apply() {\n        // We shouldn't do anything if the strategy was disposed or we're on the server.\n        if (this._isDisposed || !this._platform.isBrowser) {\n            return;\n        }\n        // If the position has been applied already (e.g. when the overlay was opened) and the\n        // consumer opted into locking in the position, re-use the old position, in order to\n        // prevent the overlay from jumping around.\n        if (!this._isInitialRender && this._positionLocked && this._lastPosition) {\n            this.reapplyLastPosition();\n            return;\n        }\n        this._clearPanelClasses();\n        this._resetOverlayElementStyles();\n        this._resetBoundingBoxStyles();\n        // We need the bounding rects for the origin, the overlay and the container to determine how to position\n        // the overlay relative to the origin.\n        // We use the viewport rect to determine whether a position would go off-screen.\n        this._viewportRect = this._getNarrowedViewportRect();\n        this._originRect = this._getOriginRect();\n        this._overlayRect = this._pane.getBoundingClientRect();\n        this._containerRect = this._overlayContainer.getContainerElement().getBoundingClientRect();\n        const originRect = this._originRect;\n        const overlayRect = this._overlayRect;\n        const viewportRect = this._viewportRect;\n        const containerRect = this._containerRect;\n        // Positions where the overlay will fit with flexible dimensions.\n        const flexibleFits = [];\n        // Fallback if none of the preferred positions fit within the viewport.\n        let fallback;\n        // Go through each of the preferred positions looking for a good fit.\n        // If a good fit is found, it will be applied immediately.\n        for (let pos of this._preferredPositions) {\n            // Get the exact (x, y) coordinate for the point-of-origin on the origin element.\n            let originPoint = this._getOriginPoint(originRect, containerRect, pos);\n            // From that point-of-origin, get the exact (x, y) coordinate for the top-left corner of the\n            // overlay in this position. We use the top-left corner for calculations and later translate\n            // this into an appropriate (top, left, bottom, right) style.\n            let overlayPoint = this._getOverlayPoint(originPoint, overlayRect, pos);\n            // Calculate how well the overlay would fit into the viewport with this point.\n            let overlayFit = this._getOverlayFit(overlayPoint, overlayRect, viewportRect, pos);\n            // If the overlay, without any further work, fits into the viewport, use this position.\n            if (overlayFit.isCompletelyWithinViewport) {\n                this._isPushed = false;\n                this._applyPosition(pos, originPoint);\n                return;\n            }\n            // If the overlay has flexible dimensions, we can use this position\n            // so long as there's enough space for the minimum dimensions.\n            if (this._canFitWithFlexibleDimensions(overlayFit, overlayPoint, viewportRect)) {\n                // Save positions where the overlay will fit with flexible dimensions. We will use these\n                // if none of the positions fit *without* flexible dimensions.\n                flexibleFits.push({\n                    position: pos,\n                    origin: originPoint,\n                    overlayRect,\n                    boundingBoxRect: this._calculateBoundingBoxRect(originPoint, pos),\n                });\n                continue;\n            }\n            // If the current preferred position does not fit on the screen, remember the position\n            // if it has more visible area on-screen than we've seen and move onto the next preferred\n            // position.\n            if (!fallback || fallback.overlayFit.visibleArea < overlayFit.visibleArea) {\n                fallback = { overlayFit, overlayPoint, originPoint, position: pos, overlayRect };\n            }\n        }\n        // If there are any positions where the overlay would fit with flexible dimensions, choose the\n        // one that has the greatest area available modified by the position's weight\n        if (flexibleFits.length) {\n            let bestFit = null;\n            let bestScore = -1;\n            for (const fit of flexibleFits) {\n                const score = fit.boundingBoxRect.width * fit.boundingBoxRect.height * (fit.position.weight || 1);\n                if (score > bestScore) {\n                    bestScore = score;\n                    bestFit = fit;\n                }\n            }\n            this._isPushed = false;\n            this._applyPosition(bestFit.position, bestFit.origin);\n            return;\n        }\n        // When none of the preferred positions fit within the viewport, take the position\n        // that went off-screen the least and attempt to push it on-screen.\n        if (this._canPush) {\n            // TODO(jelbourn): after pushing, the opening \"direction\" of the overlay might not make sense.\n            this._isPushed = true;\n            this._applyPosition(fallback.position, fallback.originPoint);\n            return;\n        }\n        // All options for getting the overlay within the viewport have been exhausted, so go with the\n        // position that went off-screen the least.\n        this._applyPosition(fallback.position, fallback.originPoint);\n    }\n    detach() {\n        this._clearPanelClasses();\n        this._lastPosition = null;\n        this._previousPushAmount = null;\n        this._resizeSubscription.unsubscribe();\n    }\n    /** Cleanup after the element gets destroyed. */\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        // We can't use `_resetBoundingBoxStyles` here, because it resets\n        // some properties to zero, rather than removing them.\n        if (this._boundingBox) {\n            extendStyles(this._boundingBox.style, {\n                top: '',\n                left: '',\n                right: '',\n                bottom: '',\n                height: '',\n                width: '',\n                alignItems: '',\n                justifyContent: '',\n            });\n        }\n        if (this._pane) {\n            this._resetOverlayElementStyles();\n        }\n        if (this._overlayRef) {\n            this._overlayRef.hostElement.classList.remove(boundingBoxClass);\n        }\n        this.detach();\n        this._positionChanges.complete();\n        this._overlayRef = this._boundingBox = null;\n        this._isDisposed = true;\n    }\n    /**\n     * This re-aligns the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     */\n    reapplyLastPosition() {\n        if (this._isDisposed || !this._platform.isBrowser) {\n            return;\n        }\n        const lastPosition = this._lastPosition;\n        if (lastPosition) {\n            this._originRect = this._getOriginRect();\n            this._overlayRect = this._pane.getBoundingClientRect();\n            this._viewportRect = this._getNarrowedViewportRect();\n            this._containerRect = this._overlayContainer.getContainerElement().getBoundingClientRect();\n            const originPoint = this._getOriginPoint(this._originRect, this._containerRect, lastPosition);\n            this._applyPosition(lastPosition, originPoint);\n        }\n        else {\n            this.apply();\n        }\n    }\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     */\n    withScrollableContainers(scrollables) {\n        this._scrollables = scrollables;\n        return this;\n    }\n    /**\n     * Adds new preferred positions.\n     * @param positions List of positions options for this overlay.\n     */\n    withPositions(positions) {\n        this._preferredPositions = positions;\n        // If the last calculated position object isn't part of the positions anymore, clear\n        // it in order to avoid it being picked up if the consumer tries to re-apply.\n        if (positions.indexOf(this._lastPosition) === -1) {\n            this._lastPosition = null;\n        }\n        this._validatePositions();\n        return this;\n    }\n    /**\n     * Sets a minimum distance the overlay may be positioned to the edge of the viewport.\n     * @param margin Required margin between the overlay and the viewport edge in pixels.\n     */\n    withViewportMargin(margin) {\n        this._viewportMargin = margin;\n        return this;\n    }\n    /** Sets whether the overlay's width and height can be constrained to fit within the viewport. */\n    withFlexibleDimensions(flexibleDimensions = true) {\n        this._hasFlexibleDimensions = flexibleDimensions;\n        return this;\n    }\n    /** Sets whether the overlay can grow after the initial open via flexible width/height. */\n    withGrowAfterOpen(growAfterOpen = true) {\n        this._growAfterOpen = growAfterOpen;\n        return this;\n    }\n    /** Sets whether the overlay can be pushed on-screen if none of the provided positions fit. */\n    withPush(canPush = true) {\n        this._canPush = canPush;\n        return this;\n    }\n    /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @param isLocked Whether the overlay should locked in.\n     */\n    withLockedPosition(isLocked = true) {\n        this._positionLocked = isLocked;\n        return this;\n    }\n    /**\n     * Sets the origin, relative to which to position the overlay.\n     * Using an element origin is useful for building components that need to be positioned\n     * relatively to a trigger (e.g. dropdown menus or tooltips), whereas using a point can be\n     * used for cases like contextual menus which open relative to the user's pointer.\n     * @param origin Reference to the new origin.\n     */\n    setOrigin(origin) {\n        this._origin = origin;\n        return this;\n    }\n    /**\n     * Sets the default offset for the overlay's connection point on the x-axis.\n     * @param offset New offset in the X axis.\n     */\n    withDefaultOffsetX(offset) {\n        this._offsetX = offset;\n        return this;\n    }\n    /**\n     * Sets the default offset for the overlay's connection point on the y-axis.\n     * @param offset New offset in the Y axis.\n     */\n    withDefaultOffsetY(offset) {\n        this._offsetY = offset;\n        return this;\n    }\n    /**\n     * Configures that the position strategy should set a `transform-origin` on some elements\n     * inside the overlay, depending on the current position that is being applied. This is\n     * useful for the cases where the origin of an animation can change depending on the\n     * alignment of the overlay.\n     * @param selector CSS selector that will be used to find the target\n     *    elements onto which to set the transform origin.\n     */\n    withTransformOriginOn(selector) {\n        this._transformOriginSelector = selector;\n        return this;\n    }\n    /**\n     * Gets the (x, y) coordinate of a connection point on the origin based on a relative position.\n     */\n    _getOriginPoint(originRect, containerRect, pos) {\n        let x;\n        if (pos.originX == 'center') {\n            // Note: when centering we should always use the `left`\n            // offset, otherwise the position will be wrong in RTL.\n            x = originRect.left + originRect.width / 2;\n        }\n        else {\n            const startX = this._isRtl() ? originRect.right : originRect.left;\n            const endX = this._isRtl() ? originRect.left : originRect.right;\n            x = pos.originX == 'start' ? startX : endX;\n        }\n        // When zooming in Safari the container rectangle contains negative values for the position\n        // and we need to re-add them to the calculated coordinates.\n        if (containerRect.left < 0) {\n            x -= containerRect.left;\n        }\n        let y;\n        if (pos.originY == 'center') {\n            y = originRect.top + originRect.height / 2;\n        }\n        else {\n            y = pos.originY == 'top' ? originRect.top : originRect.bottom;\n        }\n        // Normally the containerRect's top value would be zero, however when the overlay is attached to an input\n        // (e.g. in an autocomplete), mobile browsers will shift everything in order to put the input in the middle\n        // of the screen and to make space for the virtual keyboard. We need to account for this offset,\n        // otherwise our positioning will be thrown off.\n        // Additionally, when zooming in Safari this fixes the vertical position.\n        if (containerRect.top < 0) {\n            y -= containerRect.top;\n        }\n        return { x, y };\n    }\n    /**\n     * Gets the (x, y) coordinate of the top-left corner of the overlay given a given position and\n     * origin point to which the overlay should be connected.\n     */\n    _getOverlayPoint(originPoint, overlayRect, pos) {\n        // Calculate the (overlayStartX, overlayStartY), the start of the\n        // potential overlay position relative to the origin point.\n        let overlayStartX;\n        if (pos.overlayX == 'center') {\n            overlayStartX = -overlayRect.width / 2;\n        }\n        else if (pos.overlayX === 'start') {\n            overlayStartX = this._isRtl() ? -overlayRect.width : 0;\n        }\n        else {\n            overlayStartX = this._isRtl() ? 0 : -overlayRect.width;\n        }\n        let overlayStartY;\n        if (pos.overlayY == 'center') {\n            overlayStartY = -overlayRect.height / 2;\n        }\n        else {\n            overlayStartY = pos.overlayY == 'top' ? 0 : -overlayRect.height;\n        }\n        // The (x, y) coordinates of the overlay.\n        return {\n            x: originPoint.x + overlayStartX,\n            y: originPoint.y + overlayStartY,\n        };\n    }\n    /** Gets how well an overlay at the given point will fit within the viewport. */\n    _getOverlayFit(point, rawOverlayRect, viewport, position) {\n        // Round the overlay rect when comparing against the\n        // viewport, because the viewport is always rounded.\n        const overlay = getRoundedBoundingClientRect(rawOverlayRect);\n        let { x, y } = point;\n        let offsetX = this._getOffset(position, 'x');\n        let offsetY = this._getOffset(position, 'y');\n        // Account for the offsets since they could push the overlay out of the viewport.\n        if (offsetX) {\n            x += offsetX;\n        }\n        if (offsetY) {\n            y += offsetY;\n        }\n        // How much the overlay would overflow at this position, on each side.\n        let leftOverflow = 0 - x;\n        let rightOverflow = x + overlay.width - viewport.width;\n        let topOverflow = 0 - y;\n        let bottomOverflow = y + overlay.height - viewport.height;\n        // Visible parts of the element on each axis.\n        let visibleWidth = this._subtractOverflows(overlay.width, leftOverflow, rightOverflow);\n        let visibleHeight = this._subtractOverflows(overlay.height, topOverflow, bottomOverflow);\n        let visibleArea = visibleWidth * visibleHeight;\n        return {\n            visibleArea,\n            isCompletelyWithinViewport: overlay.width * overlay.height === visibleArea,\n            fitsInViewportVertically: visibleHeight === overlay.height,\n            fitsInViewportHorizontally: visibleWidth == overlay.width,\n        };\n    }\n    /**\n     * Whether the overlay can fit within the viewport when it may resize either its width or height.\n     * @param fit How well the overlay fits in the viewport at some position.\n     * @param point The (x, y) coordinates of the overlay at some position.\n     * @param viewport The geometry of the viewport.\n     */\n    _canFitWithFlexibleDimensions(fit, point, viewport) {\n        if (this._hasFlexibleDimensions) {\n            const availableHeight = viewport.bottom - point.y;\n            const availableWidth = viewport.right - point.x;\n            const minHeight = getPixelValue(this._overlayRef.getConfig().minHeight);\n            const minWidth = getPixelValue(this._overlayRef.getConfig().minWidth);\n            const verticalFit = fit.fitsInViewportVertically || (minHeight != null && minHeight <= availableHeight);\n            const horizontalFit = fit.fitsInViewportHorizontally || (minWidth != null && minWidth <= availableWidth);\n            return verticalFit && horizontalFit;\n        }\n        return false;\n    }\n    /**\n     * Gets the point at which the overlay can be \"pushed\" on-screen. If the overlay is larger than\n     * the viewport, the top-left corner will be pushed on-screen (with overflow occurring on the\n     * right and bottom).\n     *\n     * @param start Starting point from which the overlay is pushed.\n     * @param rawOverlayRect Dimensions of the overlay.\n     * @param scrollPosition Current viewport scroll position.\n     * @returns The point at which to position the overlay after pushing. This is effectively a new\n     *     originPoint.\n     */\n    _pushOverlayOnScreen(start, rawOverlayRect, scrollPosition) {\n        // If the position is locked and we've pushed the overlay already, reuse the previous push\n        // amount, rather than pushing it again. If we were to continue pushing, the element would\n        // remain in the viewport, which goes against the expectations when position locking is enabled.\n        if (this._previousPushAmount && this._positionLocked) {\n            return {\n                x: start.x + this._previousPushAmount.x,\n                y: start.y + this._previousPushAmount.y,\n            };\n        }\n        // Round the overlay rect when comparing against the\n        // viewport, because the viewport is always rounded.\n        const overlay = getRoundedBoundingClientRect(rawOverlayRect);\n        const viewport = this._viewportRect;\n        // Determine how much the overlay goes outside the viewport on each\n        // side, which we'll use to decide which direction to push it.\n        const overflowRight = Math.max(start.x + overlay.width - viewport.width, 0);\n        const overflowBottom = Math.max(start.y + overlay.height - viewport.height, 0);\n        const overflowTop = Math.max(viewport.top - scrollPosition.top - start.y, 0);\n        const overflowLeft = Math.max(viewport.left - scrollPosition.left - start.x, 0);\n        // Amount by which to push the overlay in each axis such that it remains on-screen.\n        let pushX = 0;\n        let pushY = 0;\n        // If the overlay fits completely within the bounds of the viewport, push it from whichever\n        // direction is goes off-screen. Otherwise, push the top-left corner such that its in the\n        // viewport and allow for the trailing end of the overlay to go out of bounds.\n        if (overlay.width <= viewport.width) {\n            pushX = overflowLeft || -overflowRight;\n        }\n        else {\n            pushX = start.x < this._viewportMargin ? viewport.left - scrollPosition.left - start.x : 0;\n        }\n        if (overlay.height <= viewport.height) {\n            pushY = overflowTop || -overflowBottom;\n        }\n        else {\n            pushY = start.y < this._viewportMargin ? viewport.top - scrollPosition.top - start.y : 0;\n        }\n        this._previousPushAmount = { x: pushX, y: pushY };\n        return {\n            x: start.x + pushX,\n            y: start.y + pushY,\n        };\n    }\n    /**\n     * Applies a computed position to the overlay and emits a position change.\n     * @param position The position preference\n     * @param originPoint The point on the origin element where the overlay is connected.\n     */\n    _applyPosition(position, originPoint) {\n        this._setTransformOrigin(position);\n        this._setOverlayElementStyles(originPoint, position);\n        this._setBoundingBoxStyles(originPoint, position);\n        if (position.panelClass) {\n            this._addPanelClasses(position.panelClass);\n        }\n        // Notify that the position has been changed along with its change properties.\n        // We only emit if we've got any subscriptions, because the scroll visibility\n        // calculations can be somewhat expensive.\n        if (this._positionChanges.observers.length) {\n            const scrollVisibility = this._getScrollVisibility();\n            // We're recalculating on scroll, but we only want to emit if anything\n            // changed since downstream code might be hitting the `NgZone`.\n            if (position !== this._lastPosition ||\n                !this._lastScrollVisibility ||\n                !compareScrollVisibility(this._lastScrollVisibility, scrollVisibility)) {\n                const changeEvent = new ConnectedOverlayPositionChange(position, scrollVisibility);\n                this._positionChanges.next(changeEvent);\n            }\n            this._lastScrollVisibility = scrollVisibility;\n        }\n        // Save the last connected position in case the position needs to be re-calculated.\n        this._lastPosition = position;\n        this._isInitialRender = false;\n    }\n    /** Sets the transform origin based on the configured selector and the passed-in position.  */\n    _setTransformOrigin(position) {\n        if (!this._transformOriginSelector) {\n            return;\n        }\n        const elements = this._boundingBox.querySelectorAll(this._transformOriginSelector);\n        let xOrigin;\n        let yOrigin = position.overlayY;\n        if (position.overlayX === 'center') {\n            xOrigin = 'center';\n        }\n        else if (this._isRtl()) {\n            xOrigin = position.overlayX === 'start' ? 'right' : 'left';\n        }\n        else {\n            xOrigin = position.overlayX === 'start' ? 'left' : 'right';\n        }\n        for (let i = 0; i < elements.length; i++) {\n            elements[i].style.transformOrigin = `${xOrigin} ${yOrigin}`;\n        }\n    }\n    /**\n     * Gets the position and size of the overlay's sizing container.\n     *\n     * This method does no measuring and applies no styles so that we can cheaply compute the\n     * bounds for all positions and choose the best fit based on these results.\n     */\n    _calculateBoundingBoxRect(origin, position) {\n        const viewport = this._viewportRect;\n        const isRtl = this._isRtl();\n        let height, top, bottom;\n        if (position.overlayY === 'top') {\n            // Overlay is opening \"downward\" and thus is bound by the bottom viewport edge.\n            top = origin.y;\n            height = viewport.height - top + this._viewportMargin;\n        }\n        else if (position.overlayY === 'bottom') {\n            // Overlay is opening \"upward\" and thus is bound by the top viewport edge. We need to add\n            // the viewport margin back in, because the viewport rect is narrowed down to remove the\n            // margin, whereas the `origin` position is calculated based on its `DOMRect`.\n            bottom = viewport.height - origin.y + this._viewportMargin * 2;\n            height = viewport.height - bottom + this._viewportMargin;\n        }\n        else {\n            // If neither top nor bottom, it means that the overlay is vertically centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.bottom - origin.y` and\n            // `origin.y - viewport.top`.\n            const smallestDistanceToViewportEdge = Math.min(viewport.bottom - origin.y + viewport.top, origin.y);\n            const previousHeight = this._lastBoundingBoxSize.height;\n            height = smallestDistanceToViewportEdge * 2;\n            top = origin.y - smallestDistanceToViewportEdge;\n            if (height > previousHeight && !this._isInitialRender && !this._growAfterOpen) {\n                top = origin.y - previousHeight / 2;\n            }\n        }\n        // The overlay is opening 'right-ward' (the content flows to the right).\n        const isBoundedByRightViewportEdge = (position.overlayX === 'start' && !isRtl) || (position.overlayX === 'end' && isRtl);\n        // The overlay is opening 'left-ward' (the content flows to the left).\n        const isBoundedByLeftViewportEdge = (position.overlayX === 'end' && !isRtl) || (position.overlayX === 'start' && isRtl);\n        let width, left, right;\n        if (isBoundedByLeftViewportEdge) {\n            right = viewport.width - origin.x + this._viewportMargin * 2;\n            width = origin.x - this._viewportMargin;\n        }\n        else if (isBoundedByRightViewportEdge) {\n            left = origin.x;\n            width = viewport.right - origin.x;\n        }\n        else {\n            // If neither start nor end, it means that the overlay is horizontally centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.right - origin.x` and\n            // `origin.x - viewport.left`.\n            const smallestDistanceToViewportEdge = Math.min(viewport.right - origin.x + viewport.left, origin.x);\n            const previousWidth = this._lastBoundingBoxSize.width;\n            width = smallestDistanceToViewportEdge * 2;\n            left = origin.x - smallestDistanceToViewportEdge;\n            if (width > previousWidth && !this._isInitialRender && !this._growAfterOpen) {\n                left = origin.x - previousWidth / 2;\n            }\n        }\n        return { top: top, left: left, bottom: bottom, right: right, width, height };\n    }\n    /**\n     * Sets the position and size of the overlay's sizing wrapper. The wrapper is positioned on the\n     * origin's connection point and stretches to the bounds of the viewport.\n     *\n     * @param origin The point on the origin element where the overlay is connected.\n     * @param position The position preference\n     */\n    _setBoundingBoxStyles(origin, position) {\n        const boundingBoxRect = this._calculateBoundingBoxRect(origin, position);\n        // It's weird if the overlay *grows* while scrolling, so we take the last size into account\n        // when applying a new size.\n        if (!this._isInitialRender && !this._growAfterOpen) {\n            boundingBoxRect.height = Math.min(boundingBoxRect.height, this._lastBoundingBoxSize.height);\n            boundingBoxRect.width = Math.min(boundingBoxRect.width, this._lastBoundingBoxSize.width);\n        }\n        const styles = {};\n        if (this._hasExactPosition()) {\n            styles.top = styles.left = '0';\n            styles.bottom = styles.right = styles.maxHeight = styles.maxWidth = '';\n            styles.width = styles.height = '100%';\n        }\n        else {\n            const maxHeight = this._overlayRef.getConfig().maxHeight;\n            const maxWidth = this._overlayRef.getConfig().maxWidth;\n            styles.height = coerceCssPixelValue(boundingBoxRect.height);\n            styles.top = coerceCssPixelValue(boundingBoxRect.top);\n            styles.bottom = coerceCssPixelValue(boundingBoxRect.bottom);\n            styles.width = coerceCssPixelValue(boundingBoxRect.width);\n            styles.left = coerceCssPixelValue(boundingBoxRect.left);\n            styles.right = coerceCssPixelValue(boundingBoxRect.right);\n            // Push the pane content towards the proper direction.\n            if (position.overlayX === 'center') {\n                styles.alignItems = 'center';\n            }\n            else {\n                styles.alignItems = position.overlayX === 'end' ? 'flex-end' : 'flex-start';\n            }\n            if (position.overlayY === 'center') {\n                styles.justifyContent = 'center';\n            }\n            else {\n                styles.justifyContent = position.overlayY === 'bottom' ? 'flex-end' : 'flex-start';\n            }\n            if (maxHeight) {\n                styles.maxHeight = coerceCssPixelValue(maxHeight);\n            }\n            if (maxWidth) {\n                styles.maxWidth = coerceCssPixelValue(maxWidth);\n            }\n        }\n        this._lastBoundingBoxSize = boundingBoxRect;\n        extendStyles(this._boundingBox.style, styles);\n    }\n    /** Resets the styles for the bounding box so that a new positioning can be computed. */\n    _resetBoundingBoxStyles() {\n        extendStyles(this._boundingBox.style, {\n            top: '0',\n            left: '0',\n            right: '0',\n            bottom: '0',\n            height: '',\n            width: '',\n            alignItems: '',\n            justifyContent: '',\n        });\n    }\n    /** Resets the styles for the overlay pane so that a new positioning can be computed. */\n    _resetOverlayElementStyles() {\n        extendStyles(this._pane.style, {\n            top: '',\n            left: '',\n            bottom: '',\n            right: '',\n            position: '',\n            transform: '',\n        });\n    }\n    /** Sets positioning styles to the overlay element. */\n    _setOverlayElementStyles(originPoint, position) {\n        const styles = {};\n        const hasExactPosition = this._hasExactPosition();\n        const hasFlexibleDimensions = this._hasFlexibleDimensions;\n        const config = this._overlayRef.getConfig();\n        if (hasExactPosition) {\n            const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n            extendStyles(styles, this._getExactOverlayY(position, originPoint, scrollPosition));\n            extendStyles(styles, this._getExactOverlayX(position, originPoint, scrollPosition));\n        }\n        else {\n            styles.position = 'static';\n        }\n        // Use a transform to apply the offsets. We do this because the `center` positions rely on\n        // being in the normal flex flow and setting a `top` / `left` at all will completely throw\n        // off the position. We also can't use margins, because they won't have an effect in some\n        // cases where the element doesn't have anything to \"push off of\". Finally, this works\n        // better both with flexible and non-flexible positioning.\n        let transformString = '';\n        let offsetX = this._getOffset(position, 'x');\n        let offsetY = this._getOffset(position, 'y');\n        if (offsetX) {\n            transformString += `translateX(${offsetX}px) `;\n        }\n        if (offsetY) {\n            transformString += `translateY(${offsetY}px)`;\n        }\n        styles.transform = transformString.trim();\n        // If a maxWidth or maxHeight is specified on the overlay, we remove them. We do this because\n        // we need these values to both be set to \"100%\" for the automatic flexible sizing to work.\n        // The maxHeight and maxWidth are set on the boundingBox in order to enforce the constraint.\n        // Note that this doesn't apply when we have an exact position, in which case we do want to\n        // apply them because they'll be cleared from the bounding box.\n        if (config.maxHeight) {\n            if (hasExactPosition) {\n                styles.maxHeight = coerceCssPixelValue(config.maxHeight);\n            }\n            else if (hasFlexibleDimensions) {\n                styles.maxHeight = '';\n            }\n        }\n        if (config.maxWidth) {\n            if (hasExactPosition) {\n                styles.maxWidth = coerceCssPixelValue(config.maxWidth);\n            }\n            else if (hasFlexibleDimensions) {\n                styles.maxWidth = '';\n            }\n        }\n        extendStyles(this._pane.style, styles);\n    }\n    /** Gets the exact top/bottom for the overlay when not using flexible sizing or when pushing. */\n    _getExactOverlayY(position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the\n        // preferred position has changed since the last `apply`.\n        let styles = { top: '', bottom: '' };\n        let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        // We want to set either `top` or `bottom` based on whether the overlay wants to appear\n        // above or below the origin and the direction in which the element will expand.\n        if (position.overlayY === 'bottom') {\n            // When using `bottom`, we adjust the y position such that it is the distance\n            // from the bottom of the viewport rather than the top.\n            const documentHeight = this._document.documentElement.clientHeight;\n            styles.bottom = `${documentHeight - (overlayPoint.y + this._overlayRect.height)}px`;\n        }\n        else {\n            styles.top = coerceCssPixelValue(overlayPoint.y);\n        }\n        return styles;\n    }\n    /** Gets the exact left/right for the overlay when not using flexible sizing or when pushing. */\n    _getExactOverlayX(position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the preferred position has\n        // changed since the last `apply`.\n        let styles = { left: '', right: '' };\n        let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        // We want to set either `left` or `right` based on whether the overlay wants to appear \"before\"\n        // or \"after\" the origin, which determines the direction in which the element will expand.\n        // For the horizontal axis, the meaning of \"before\" and \"after\" change based on whether the\n        // page is in RTL or LTR.\n        let horizontalStyleProperty;\n        if (this._isRtl()) {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'left' : 'right';\n        }\n        else {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'right' : 'left';\n        }\n        // When we're setting `right`, we adjust the x position such that it is the distance\n        // from the right edge of the viewport rather than the left edge.\n        if (horizontalStyleProperty === 'right') {\n            const documentWidth = this._document.documentElement.clientWidth;\n            styles.right = `${documentWidth - (overlayPoint.x + this._overlayRect.width)}px`;\n        }\n        else {\n            styles.left = coerceCssPixelValue(overlayPoint.x);\n        }\n        return styles;\n    }\n    /**\n     * Gets the view properties of the trigger and overlay, including whether they are clipped\n     * or completely outside the view of any of the strategy's scrollables.\n     */\n    _getScrollVisibility() {\n        // Note: needs fresh rects since the position could've changed.\n        const originBounds = this._getOriginRect();\n        const overlayBounds = this._pane.getBoundingClientRect();\n        // TODO(jelbourn): instead of needing all of the client rects for these scrolling containers\n        // every time, we should be able to use the scrollTop of the containers if the size of those\n        // containers hasn't changed.\n        const scrollContainerBounds = this._scrollables.map(scrollable => {\n            return scrollable.getElementRef().nativeElement.getBoundingClientRect();\n        });\n        return {\n            isOriginClipped: isElementClippedByScrolling(originBounds, scrollContainerBounds),\n            isOriginOutsideView: isElementScrolledOutsideView(originBounds, scrollContainerBounds),\n            isOverlayClipped: isElementClippedByScrolling(overlayBounds, scrollContainerBounds),\n            isOverlayOutsideView: isElementScrolledOutsideView(overlayBounds, scrollContainerBounds),\n        };\n    }\n    /** Subtracts the amount that an element is overflowing on an axis from its length. */\n    _subtractOverflows(length, ...overflows) {\n        return overflows.reduce((currentValue, currentOverflow) => {\n            return currentValue - Math.max(currentOverflow, 0);\n        }, length);\n    }\n    /** Narrows the given viewport rect by the current _viewportMargin. */\n    _getNarrowedViewportRect() {\n        // We recalculate the viewport rect here ourselves, rather than using the ViewportRuler,\n        // because we want to use the `clientWidth` and `clientHeight` as the base. The difference\n        // being that the client properties don't include the scrollbar, as opposed to `innerWidth`\n        // and `innerHeight` that do. This is necessary, because the overlay container uses\n        // 100% `width` and `height` which don't include the scrollbar either.\n        const width = this._document.documentElement.clientWidth;\n        const height = this._document.documentElement.clientHeight;\n        const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n        return {\n            top: scrollPosition.top + this._viewportMargin,\n            left: scrollPosition.left + this._viewportMargin,\n            right: scrollPosition.left + width - this._viewportMargin,\n            bottom: scrollPosition.top + height - this._viewportMargin,\n            width: width - 2 * this._viewportMargin,\n            height: height - 2 * this._viewportMargin,\n        };\n    }\n    /** Whether the we're dealing with an RTL context */\n    _isRtl() {\n        return this._overlayRef.getDirection() === 'rtl';\n    }\n    /** Determines whether the overlay uses exact or flexible positioning. */\n    _hasExactPosition() {\n        return !this._hasFlexibleDimensions || this._isPushed;\n    }\n    /** Retrieves the offset of a position along the x or y axis. */\n    _getOffset(position, axis) {\n        if (axis === 'x') {\n            // We don't do something like `position['offset' + axis]` in\n            // order to avoid breaking minifiers that rename properties.\n            return position.offsetX == null ? this._offsetX : position.offsetX;\n        }\n        return position.offsetY == null ? this._offsetY : position.offsetY;\n    }\n    /** Validates that the current position match the expected values. */\n    _validatePositions() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._preferredPositions.length) {\n                throw Error('FlexibleConnectedPositionStrategy: At least one position is required.');\n            }\n            // TODO(crisbeto): remove these once Angular's template type\n            // checking is advanced enough to catch these cases.\n            this._preferredPositions.forEach(pair => {\n                validateHorizontalPosition('originX', pair.originX);\n                validateVerticalPosition('originY', pair.originY);\n                validateHorizontalPosition('overlayX', pair.overlayX);\n                validateVerticalPosition('overlayY', pair.overlayY);\n            });\n        }\n    }\n    /** Adds a single CSS class or an array of classes on the overlay panel. */\n    _addPanelClasses(cssClasses) {\n        if (this._pane) {\n            coerceArray(cssClasses).forEach(cssClass => {\n                if (cssClass !== '' && this._appliedPanelClasses.indexOf(cssClass) === -1) {\n                    this._appliedPanelClasses.push(cssClass);\n                    this._pane.classList.add(cssClass);\n                }\n            });\n        }\n    }\n    /** Clears the classes that the position strategy has applied from the overlay panel. */\n    _clearPanelClasses() {\n        if (this._pane) {\n            this._appliedPanelClasses.forEach(cssClass => {\n                this._pane.classList.remove(cssClass);\n            });\n            this._appliedPanelClasses = [];\n        }\n    }\n    /** Returns the DOMRect of the current origin. */\n    _getOriginRect() {\n        const origin = this._origin;\n        if (origin instanceof ElementRef) {\n            return origin.nativeElement.getBoundingClientRect();\n        }\n        // Check for Element so SVG elements are also supported.\n        if (origin instanceof Element) {\n            return origin.getBoundingClientRect();\n        }\n        const width = origin.width || 0;\n        const height = origin.height || 0;\n        // If the origin is a point, return a client rect as if it was a 0x0 element at the point.\n        return {\n            top: origin.y,\n            bottom: origin.y + height,\n            left: origin.x,\n            right: origin.x + width,\n            height,\n            width,\n        };\n    }\n}\n/** Shallow-extends a stylesheet object with another stylesheet object. */\nfunction extendStyles(destination, source) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            destination[key] = source[key];\n        }\n    }\n    return destination;\n}\n/**\n * Extracts the pixel value as a number from a value, if it's a number\n * or a CSS pixel string (e.g. `1337px`). Otherwise returns null.\n */\nfunction getPixelValue(input) {\n    if (typeof input !== 'number' && input != null) {\n        const [value, units] = input.split(cssUnitPattern);\n        return !units || units === 'px' ? parseFloat(value) : null;\n    }\n    return input || null;\n}\n/**\n * Gets a version of an element's bounding `DOMRect` where all the values are rounded down to\n * the nearest pixel. This allows us to account for the cases where there may be sub-pixel\n * deviations in the `DOMRect` returned by the browser (e.g. when zoomed in with a percentage\n * size, see #21350).\n */\nfunction getRoundedBoundingClientRect(clientRect) {\n    return {\n        top: Math.floor(clientRect.top),\n        right: Math.floor(clientRect.right),\n        bottom: Math.floor(clientRect.bottom),\n        left: Math.floor(clientRect.left),\n        width: Math.floor(clientRect.width),\n        height: Math.floor(clientRect.height),\n    };\n}\n/** Returns whether two `ScrollingVisibility` objects are identical. */\nfunction compareScrollVisibility(a, b) {\n    if (a === b) {\n        return true;\n    }\n    return (a.isOriginClipped === b.isOriginClipped &&\n        a.isOriginOutsideView === b.isOriginOutsideView &&\n        a.isOverlayClipped === b.isOverlayClipped &&\n        a.isOverlayOutsideView === b.isOverlayOutsideView);\n}\nconst STANDARD_DROPDOWN_BELOW_POSITIONS = [\n    { originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top' },\n    { originX: 'start', originY: 'top', overlayX: 'start', overlayY: 'bottom' },\n    { originX: 'end', originY: 'bottom', overlayX: 'end', overlayY: 'top' },\n    { originX: 'end', originY: 'top', overlayX: 'end', overlayY: 'bottom' },\n];\nconst STANDARD_DROPDOWN_ADJACENT_POSITIONS = [\n    { originX: 'end', originY: 'top', overlayX: 'start', overlayY: 'top' },\n    { originX: 'end', originY: 'bottom', overlayX: 'start', overlayY: 'bottom' },\n    { originX: 'start', originY: 'top', overlayX: 'end', overlayY: 'top' },\n    { originX: 'start', originY: 'bottom', overlayX: 'end', overlayY: 'bottom' },\n];\n\n/** Class to be added to the overlay pane wrapper. */\nconst wrapperClass = 'cdk-global-overlay-wrapper';\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * explicit position relative to the browser's viewport. We use flexbox, instead of\n * transforms, in order to avoid issues with subpixel rendering which can cause the\n * element to become blurry.\n */\nclass GlobalPositionStrategy {\n    constructor() {\n        this._cssPosition = 'static';\n        this._topOffset = '';\n        this._bottomOffset = '';\n        this._alignItems = '';\n        this._xPosition = '';\n        this._xOffset = '';\n        this._width = '';\n        this._height = '';\n        this._isDisposed = false;\n    }\n    attach(overlayRef) {\n        const config = overlayRef.getConfig();\n        this._overlayRef = overlayRef;\n        if (this._width && !config.width) {\n            overlayRef.updateSize({ width: this._width });\n        }\n        if (this._height && !config.height) {\n            overlayRef.updateSize({ height: this._height });\n        }\n        overlayRef.hostElement.classList.add(wrapperClass);\n        this._isDisposed = false;\n    }\n    /**\n     * Sets the top position of the overlay. Clears any previously set vertical position.\n     * @param value New top offset.\n     */\n    top(value = '') {\n        this._bottomOffset = '';\n        this._topOffset = value;\n        this._alignItems = 'flex-start';\n        return this;\n    }\n    /**\n     * Sets the left position of the overlay. Clears any previously set horizontal position.\n     * @param value New left offset.\n     */\n    left(value = '') {\n        this._xOffset = value;\n        this._xPosition = 'left';\n        return this;\n    }\n    /**\n     * Sets the bottom position of the overlay. Clears any previously set vertical position.\n     * @param value New bottom offset.\n     */\n    bottom(value = '') {\n        this._topOffset = '';\n        this._bottomOffset = value;\n        this._alignItems = 'flex-end';\n        return this;\n    }\n    /**\n     * Sets the right position of the overlay. Clears any previously set horizontal position.\n     * @param value New right offset.\n     */\n    right(value = '') {\n        this._xOffset = value;\n        this._xPosition = 'right';\n        return this;\n    }\n    /**\n     * Sets the overlay to the start of the viewport, depending on the overlay direction.\n     * This will be to the left in LTR layouts and to the right in RTL.\n     * @param offset Offset from the edge of the screen.\n     */\n    start(value = '') {\n        this._xOffset = value;\n        this._xPosition = 'start';\n        return this;\n    }\n    /**\n     * Sets the overlay to the end of the viewport, depending on the overlay direction.\n     * This will be to the right in LTR layouts and to the left in RTL.\n     * @param offset Offset from the edge of the screen.\n     */\n    end(value = '') {\n        this._xOffset = value;\n        this._xPosition = 'end';\n        return this;\n    }\n    /**\n     * Sets the overlay width and clears any previously set width.\n     * @param value New width for the overlay\n     * @deprecated Pass the `width` through the `OverlayConfig`.\n     * @breaking-change 8.0.0\n     */\n    width(value = '') {\n        if (this._overlayRef) {\n            this._overlayRef.updateSize({ width: value });\n        }\n        else {\n            this._width = value;\n        }\n        return this;\n    }\n    /**\n     * Sets the overlay height and clears any previously set height.\n     * @param value New height for the overlay\n     * @deprecated Pass the `height` through the `OverlayConfig`.\n     * @breaking-change 8.0.0\n     */\n    height(value = '') {\n        if (this._overlayRef) {\n            this._overlayRef.updateSize({ height: value });\n        }\n        else {\n            this._height = value;\n        }\n        return this;\n    }\n    /**\n     * Centers the overlay horizontally with an optional offset.\n     * Clears any previously set horizontal position.\n     *\n     * @param offset Overlay offset from the horizontal center.\n     */\n    centerHorizontally(offset = '') {\n        this.left(offset);\n        this._xPosition = 'center';\n        return this;\n    }\n    /**\n     * Centers the overlay vertically with an optional offset.\n     * Clears any previously set vertical position.\n     *\n     * @param offset Overlay offset from the vertical center.\n     */\n    centerVertically(offset = '') {\n        this.top(offset);\n        this._alignItems = 'center';\n        return this;\n    }\n    /**\n     * Apply the position to the element.\n     * @docs-private\n     */\n    apply() {\n        // Since the overlay ref applies the strategy asynchronously, it could\n        // have been disposed before it ends up being applied. If that is the\n        // case, we shouldn't do anything.\n        if (!this._overlayRef || !this._overlayRef.hasAttached()) {\n            return;\n        }\n        const styles = this._overlayRef.overlayElement.style;\n        const parentStyles = this._overlayRef.hostElement.style;\n        const config = this._overlayRef.getConfig();\n        const { width, height, maxWidth, maxHeight } = config;\n        const shouldBeFlushHorizontally = (width === '100%' || width === '100vw') &&\n            (!maxWidth || maxWidth === '100%' || maxWidth === '100vw');\n        const shouldBeFlushVertically = (height === '100%' || height === '100vh') &&\n            (!maxHeight || maxHeight === '100%' || maxHeight === '100vh');\n        const xPosition = this._xPosition;\n        const xOffset = this._xOffset;\n        const isRtl = this._overlayRef.getConfig().direction === 'rtl';\n        let marginLeft = '';\n        let marginRight = '';\n        let justifyContent = '';\n        if (shouldBeFlushHorizontally) {\n            justifyContent = 'flex-start';\n        }\n        else if (xPosition === 'center') {\n            justifyContent = 'center';\n            if (isRtl) {\n                marginRight = xOffset;\n            }\n            else {\n                marginLeft = xOffset;\n            }\n        }\n        else if (isRtl) {\n            if (xPosition === 'left' || xPosition === 'end') {\n                justifyContent = 'flex-end';\n                marginLeft = xOffset;\n            }\n            else if (xPosition === 'right' || xPosition === 'start') {\n                justifyContent = 'flex-start';\n                marginRight = xOffset;\n            }\n        }\n        else if (xPosition === 'left' || xPosition === 'start') {\n            justifyContent = 'flex-start';\n            marginLeft = xOffset;\n        }\n        else if (xPosition === 'right' || xPosition === 'end') {\n            justifyContent = 'flex-end';\n            marginRight = xOffset;\n        }\n        styles.position = this._cssPosition;\n        styles.marginLeft = shouldBeFlushHorizontally ? '0' : marginLeft;\n        styles.marginTop = shouldBeFlushVertically ? '0' : this._topOffset;\n        styles.marginBottom = this._bottomOffset;\n        styles.marginRight = shouldBeFlushHorizontally ? '0' : marginRight;\n        parentStyles.justifyContent = justifyContent;\n        parentStyles.alignItems = shouldBeFlushVertically ? 'flex-start' : this._alignItems;\n    }\n    /**\n     * Cleans up the DOM changes from the position strategy.\n     * @docs-private\n     */\n    dispose() {\n        if (this._isDisposed || !this._overlayRef) {\n            return;\n        }\n        const styles = this._overlayRef.overlayElement.style;\n        const parent = this._overlayRef.hostElement;\n        const parentStyles = parent.style;\n        parent.classList.remove(wrapperClass);\n        parentStyles.justifyContent =\n            parentStyles.alignItems =\n                styles.marginTop =\n                    styles.marginBottom =\n                        styles.marginLeft =\n                            styles.marginRight =\n                                styles.position =\n                                    '';\n        this._overlayRef = null;\n        this._isDisposed = true;\n    }\n}\n\n/** Builder for overlay position strategy. */\nclass OverlayPositionBuilder {\n    constructor(_viewportRuler, _document, _platform, _overlayContainer) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        this._overlayContainer = _overlayContainer;\n    }\n    /**\n     * Creates a global position strategy.\n     */\n    global() {\n        return new GlobalPositionStrategy();\n    }\n    /**\n     * Creates a flexible position strategy.\n     * @param origin Origin relative to which to position the overlay.\n     */\n    flexibleConnectedTo(origin) {\n        return new FlexibleConnectedPositionStrategy(origin, this._viewportRuler, this._document, this._platform, this._overlayContainer);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: OverlayPositionBuilder, deps: [{ token: i1.ViewportRuler }, { token: DOCUMENT }, { token: i1$1.Platform }, { token: OverlayContainer }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: OverlayPositionBuilder, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: OverlayPositionBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: i1.ViewportRuler }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i1$1.Platform }, { type: OverlayContainer }] });\n\n/** Next overlay unique ID. */\nlet nextUniqueId = 0;\n// Note that Overlay is *not* scoped to the app root because of the ComponentFactoryResolver\n// which needs to be different depending on where OverlayModule is imported.\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalOutlet, so any kind of Portal can be loaded into one.\n */\nclass Overlay {\n    constructor(\n    /** Scrolling strategies that can be used when creating an overlay. */\n    scrollStrategies, _overlayContainer, _componentFactoryResolver, _positionBuilder, _keyboardDispatcher, _injector, _ngZone, _document, _directionality, _location, _outsideClickDispatcher, _animationsModuleType) {\n        this.scrollStrategies = scrollStrategies;\n        this._overlayContainer = _overlayContainer;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._positionBuilder = _positionBuilder;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._injector = _injector;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._directionality = _directionality;\n        this._location = _location;\n        this._outsideClickDispatcher = _outsideClickDispatcher;\n        this._animationsModuleType = _animationsModuleType;\n    }\n    /**\n     * Creates an overlay.\n     * @param config Configuration applied to the overlay.\n     * @returns Reference to the created overlay.\n     */\n    create(config) {\n        const host = this._createHostElement();\n        const pane = this._createPaneElement(host);\n        const portalOutlet = this._createPortalOutlet(pane);\n        const overlayConfig = new OverlayConfig(config);\n        overlayConfig.direction = overlayConfig.direction || this._directionality.value;\n        return new OverlayRef(portalOutlet, host, pane, overlayConfig, this._ngZone, this._keyboardDispatcher, this._document, this._location, this._outsideClickDispatcher, this._animationsModuleType === 'NoopAnimations', this._injector.get(EnvironmentInjector));\n    }\n    /**\n     * Gets a position builder that can be used, via fluent API,\n     * to construct and configure a position strategy.\n     * @returns An overlay position builder.\n     */\n    position() {\n        return this._positionBuilder;\n    }\n    /**\n     * Creates the DOM element for an overlay and appends it to the overlay container.\n     * @returns Newly-created pane element\n     */\n    _createPaneElement(host) {\n        const pane = this._document.createElement('div');\n        pane.id = `cdk-overlay-${nextUniqueId++}`;\n        pane.classList.add('cdk-overlay-pane');\n        host.appendChild(pane);\n        return pane;\n    }\n    /**\n     * Creates the host element that wraps around an overlay\n     * and can be used for advanced positioning.\n     * @returns Newly-create host element.\n     */\n    _createHostElement() {\n        const host = this._document.createElement('div');\n        this._overlayContainer.getContainerElement().appendChild(host);\n        return host;\n    }\n    /**\n     * Create a DomPortalOutlet into which the overlay content can be loaded.\n     * @param pane The DOM element to turn into a portal outlet.\n     * @returns A portal outlet for the given DOM element.\n     */\n    _createPortalOutlet(pane) {\n        // We have to resolve the ApplicationRef later in order to allow people\n        // to use overlay-based providers during app initialization.\n        if (!this._appRef) {\n            this._appRef = this._injector.get(ApplicationRef);\n        }\n        return new DomPortalOutlet(pane, this._componentFactoryResolver, this._appRef, this._injector, this._document);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: Overlay, deps: [{ token: ScrollStrategyOptions }, { token: OverlayContainer }, { token: i0.ComponentFactoryResolver }, { token: OverlayPositionBuilder }, { token: OverlayKeyboardDispatcher }, { token: i0.Injector }, { token: i0.NgZone }, { token: DOCUMENT }, { token: i5.Directionality }, { token: i6.Location }, { token: OverlayOutsideClickDispatcher }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: Overlay, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: Overlay, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: ScrollStrategyOptions }, { type: OverlayContainer }, { type: i0.ComponentFactoryResolver }, { type: OverlayPositionBuilder }, { type: OverlayKeyboardDispatcher }, { type: i0.Injector }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i5.Directionality }, { type: i6.Location }, { type: OverlayOutsideClickDispatcher }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }, {\n                    type: Optional\n                }] }] });\n\n/** Default set of positions for the overlay. Follows the behavior of a dropdown. */\nconst defaultPositionList = [\n    {\n        originX: 'start',\n        originY: 'bottom',\n        overlayX: 'start',\n        overlayY: 'top',\n    },\n    {\n        originX: 'start',\n        originY: 'top',\n        overlayX: 'start',\n        overlayY: 'bottom',\n    },\n    {\n        originX: 'end',\n        originY: 'top',\n        overlayX: 'end',\n        overlayY: 'bottom',\n    },\n    {\n        originX: 'end',\n        originY: 'bottom',\n        overlayX: 'end',\n        overlayY: 'top',\n    },\n];\n/** Injection token that determines the scroll handling while the connected overlay is open. */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY = new InjectionToken('cdk-connected-overlay-scroll-strategy', {\n    providedIn: 'root',\n    factory: () => {\n        const overlay = inject(Overlay);\n        return () => overlay.scrollStrategies.reposition();\n    },\n});\n/**\n * Directive applied to an element to make it usable as an origin for an Overlay using a\n * ConnectedPositionStrategy.\n */\nclass CdkOverlayOrigin {\n    constructor(\n    /** Reference to the element on which the directive is applied. */\n    elementRef) {\n        this.elementRef = elementRef;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: CdkOverlayOrigin, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.1.0-next.3\", type: CdkOverlayOrigin, isStandalone: true, selector: \"[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]\", exportAs: [\"cdkOverlayOrigin\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: CdkOverlayOrigin, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]',\n                    exportAs: 'cdkOverlayOrigin',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }] });\n/**\n * Directive to facilitate declarative creation of an\n * Overlay using a FlexibleConnectedPositionStrategy.\n */\nclass CdkConnectedOverlay {\n    /** The offset in pixels for the overlay connection point on the x-axis */\n    get offsetX() {\n        return this._offsetX;\n    }\n    set offsetX(offsetX) {\n        this._offsetX = offsetX;\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n        }\n    }\n    /** The offset in pixels for the overlay connection point on the y-axis */\n    get offsetY() {\n        return this._offsetY;\n    }\n    set offsetY(offsetY) {\n        this._offsetY = offsetY;\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n        }\n    }\n    /** Whether the overlay should be disposed of when the user goes backwards/forwards in history. */\n    get disposeOnNavigation() {\n        return this._disposeOnNavigation;\n    }\n    set disposeOnNavigation(value) {\n        this._disposeOnNavigation = value;\n    }\n    // TODO(jelbourn): inputs for size, scroll behavior, animation, etc.\n    constructor(_overlay, templateRef, viewContainerRef, scrollStrategyFactory, _dir) {\n        this._overlay = _overlay;\n        this._dir = _dir;\n        this._backdropSubscription = Subscription.EMPTY;\n        this._attachSubscription = Subscription.EMPTY;\n        this._detachSubscription = Subscription.EMPTY;\n        this._positionSubscription = Subscription.EMPTY;\n        this._disposeOnNavigation = false;\n        this._ngZone = inject(NgZone);\n        /** Margin between the overlay and the viewport edges. */\n        this.viewportMargin = 0;\n        /** Whether the overlay is open. */\n        this.open = false;\n        /** Whether the overlay can be closed by user interaction. */\n        this.disableClose = false;\n        /** Whether or not the overlay should attach a backdrop. */\n        this.hasBackdrop = false;\n        /** Whether or not the overlay should be locked when scrolling. */\n        this.lockPosition = false;\n        /** Whether the overlay's width and height can be constrained to fit within the viewport. */\n        this.flexibleDimensions = false;\n        /** Whether the overlay can grow after the initial open when flexible positioning is turned on. */\n        this.growAfterOpen = false;\n        /** Whether the overlay can be pushed on-screen if none of the provided positions fit. */\n        this.push = false;\n        /** Event emitted when the backdrop is clicked. */\n        this.backdropClick = new EventEmitter();\n        /** Event emitted when the position has changed. */\n        this.positionChange = new EventEmitter();\n        /** Event emitted when the overlay has been attached. */\n        this.attach = new EventEmitter();\n        /** Event emitted when the overlay has been detached. */\n        this.detach = new EventEmitter();\n        /** Emits when there are keyboard events that are targeted at the overlay. */\n        this.overlayKeydown = new EventEmitter();\n        /** Emits when there are mouse outside click events that are targeted at the overlay. */\n        this.overlayOutsideClick = new EventEmitter();\n        this._templatePortal = new TemplatePortal(templateRef, viewContainerRef);\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this.scrollStrategy = this._scrollStrategyFactory();\n    }\n    /** The associated overlay reference. */\n    get overlayRef() {\n        return this._overlayRef;\n    }\n    /** The element's layout direction. */\n    get dir() {\n        return this._dir ? this._dir.value : 'ltr';\n    }\n    ngOnDestroy() {\n        this._attachSubscription.unsubscribe();\n        this._detachSubscription.unsubscribe();\n        this._backdropSubscription.unsubscribe();\n        this._positionSubscription.unsubscribe();\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n        }\n    }\n    ngOnChanges(changes) {\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n            this._overlayRef.updateSize({\n                width: this.width,\n                minWidth: this.minWidth,\n                height: this.height,\n                minHeight: this.minHeight,\n            });\n            if (changes['origin'] && this.open) {\n                this._position.apply();\n            }\n        }\n        if (changes['open']) {\n            this.open ? this._attachOverlay() : this._detachOverlay();\n        }\n    }\n    /** Creates an overlay */\n    _createOverlay() {\n        if (!this.positions || !this.positions.length) {\n            this.positions = defaultPositionList;\n        }\n        const overlayRef = (this._overlayRef = this._overlay.create(this._buildConfig()));\n        this._attachSubscription = overlayRef.attachments().subscribe(() => this.attach.emit());\n        this._detachSubscription = overlayRef.detachments().subscribe(() => this.detach.emit());\n        overlayRef.keydownEvents().subscribe((event) => {\n            this.overlayKeydown.next(event);\n            if (event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event)) {\n                event.preventDefault();\n                this._detachOverlay();\n            }\n        });\n        this._overlayRef.outsidePointerEvents().subscribe((event) => {\n            const origin = this._getOriginElement();\n            const target = _getEventTarget(event);\n            if (!origin || (origin !== target && !origin.contains(target))) {\n                this.overlayOutsideClick.next(event);\n            }\n        });\n    }\n    /** Builds the overlay config based on the directive's inputs */\n    _buildConfig() {\n        const positionStrategy = (this._position =\n            this.positionStrategy || this._createPositionStrategy());\n        const overlayConfig = new OverlayConfig({\n            direction: this._dir,\n            positionStrategy,\n            scrollStrategy: this.scrollStrategy,\n            hasBackdrop: this.hasBackdrop,\n            disposeOnNavigation: this.disposeOnNavigation,\n        });\n        if (this.width || this.width === 0) {\n            overlayConfig.width = this.width;\n        }\n        if (this.height || this.height === 0) {\n            overlayConfig.height = this.height;\n        }\n        if (this.minWidth || this.minWidth === 0) {\n            overlayConfig.minWidth = this.minWidth;\n        }\n        if (this.minHeight || this.minHeight === 0) {\n            overlayConfig.minHeight = this.minHeight;\n        }\n        if (this.backdropClass) {\n            overlayConfig.backdropClass = this.backdropClass;\n        }\n        if (this.panelClass) {\n            overlayConfig.panelClass = this.panelClass;\n        }\n        return overlayConfig;\n    }\n    /** Updates the state of a position strategy, based on the values of the directive inputs. */\n    _updatePositionStrategy(positionStrategy) {\n        const positions = this.positions.map(currentPosition => ({\n            originX: currentPosition.originX,\n            originY: currentPosition.originY,\n            overlayX: currentPosition.overlayX,\n            overlayY: currentPosition.overlayY,\n            offsetX: currentPosition.offsetX || this.offsetX,\n            offsetY: currentPosition.offsetY || this.offsetY,\n            panelClass: currentPosition.panelClass || undefined,\n        }));\n        return positionStrategy\n            .setOrigin(this._getOrigin())\n            .withPositions(positions)\n            .withFlexibleDimensions(this.flexibleDimensions)\n            .withPush(this.push)\n            .withGrowAfterOpen(this.growAfterOpen)\n            .withViewportMargin(this.viewportMargin)\n            .withLockedPosition(this.lockPosition)\n            .withTransformOriginOn(this.transformOriginSelector);\n    }\n    /** Returns the position strategy of the overlay to be set on the overlay config */\n    _createPositionStrategy() {\n        const strategy = this._overlay.position().flexibleConnectedTo(this._getOrigin());\n        this._updatePositionStrategy(strategy);\n        return strategy;\n    }\n    _getOrigin() {\n        if (this.origin instanceof CdkOverlayOrigin) {\n            return this.origin.elementRef;\n        }\n        else {\n            return this.origin;\n        }\n    }\n    _getOriginElement() {\n        if (this.origin instanceof CdkOverlayOrigin) {\n            return this.origin.elementRef.nativeElement;\n        }\n        if (this.origin instanceof ElementRef) {\n            return this.origin.nativeElement;\n        }\n        if (typeof Element !== 'undefined' && this.origin instanceof Element) {\n            return this.origin;\n        }\n        return null;\n    }\n    /** Attaches the overlay and subscribes to backdrop clicks if backdrop exists */\n    _attachOverlay() {\n        if (!this._overlayRef) {\n            this._createOverlay();\n        }\n        else {\n            // Update the overlay size, in case the directive's inputs have changed\n            this._overlayRef.getConfig().hasBackdrop = this.hasBackdrop;\n        }\n        if (!this._overlayRef.hasAttached()) {\n            this._overlayRef.attach(this._templatePortal);\n        }\n        if (this.hasBackdrop) {\n            this._backdropSubscription = this._overlayRef.backdropClick().subscribe(event => {\n                this.backdropClick.emit(event);\n            });\n        }\n        else {\n            this._backdropSubscription.unsubscribe();\n        }\n        this._positionSubscription.unsubscribe();\n        // Only subscribe to `positionChanges` if requested, because putting\n        // together all the information for it can be expensive.\n        if (this.positionChange.observers.length > 0) {\n            this._positionSubscription = this._position.positionChanges\n                .pipe(takeWhile(() => this.positionChange.observers.length > 0))\n                .subscribe(position => {\n                this._ngZone.run(() => this.positionChange.emit(position));\n                if (this.positionChange.observers.length === 0) {\n                    this._positionSubscription.unsubscribe();\n                }\n            });\n        }\n    }\n    /** Detaches the overlay and unsubscribes to backdrop clicks if backdrop exists */\n    _detachOverlay() {\n        if (this._overlayRef) {\n            this._overlayRef.detach();\n        }\n        this._backdropSubscription.unsubscribe();\n        this._positionSubscription.unsubscribe();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: CdkConnectedOverlay, deps: [{ token: Overlay }, { token: i0.TemplateRef }, { token: i0.ViewContainerRef }, { token: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY }, { token: i5.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"18.1.0-next.3\", type: CdkConnectedOverlay, isStandalone: true, selector: \"[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]\", inputs: { origin: [\"cdkConnectedOverlayOrigin\", \"origin\"], positions: [\"cdkConnectedOverlayPositions\", \"positions\"], positionStrategy: [\"cdkConnectedOverlayPositionStrategy\", \"positionStrategy\"], offsetX: [\"cdkConnectedOverlayOffsetX\", \"offsetX\"], offsetY: [\"cdkConnectedOverlayOffsetY\", \"offsetY\"], width: [\"cdkConnectedOverlayWidth\", \"width\"], height: [\"cdkConnectedOverlayHeight\", \"height\"], minWidth: [\"cdkConnectedOverlayMinWidth\", \"minWidth\"], minHeight: [\"cdkConnectedOverlayMinHeight\", \"minHeight\"], backdropClass: [\"cdkConnectedOverlayBackdropClass\", \"backdropClass\"], panelClass: [\"cdkConnectedOverlayPanelClass\", \"panelClass\"], viewportMargin: [\"cdkConnectedOverlayViewportMargin\", \"viewportMargin\"], scrollStrategy: [\"cdkConnectedOverlayScrollStrategy\", \"scrollStrategy\"], open: [\"cdkConnectedOverlayOpen\", \"open\"], disableClose: [\"cdkConnectedOverlayDisableClose\", \"disableClose\"], transformOriginSelector: [\"cdkConnectedOverlayTransformOriginOn\", \"transformOriginSelector\"], hasBackdrop: [\"cdkConnectedOverlayHasBackdrop\", \"hasBackdrop\", booleanAttribute], lockPosition: [\"cdkConnectedOverlayLockPosition\", \"lockPosition\", booleanAttribute], flexibleDimensions: [\"cdkConnectedOverlayFlexibleDimensions\", \"flexibleDimensions\", booleanAttribute], growAfterOpen: [\"cdkConnectedOverlayGrowAfterOpen\", \"growAfterOpen\", booleanAttribute], push: [\"cdkConnectedOverlayPush\", \"push\", booleanAttribute], disposeOnNavigation: [\"cdkConnectedOverlayDisposeOnNavigation\", \"disposeOnNavigation\", booleanAttribute] }, outputs: { backdropClick: \"backdropClick\", positionChange: \"positionChange\", attach: \"attach\", detach: \"detach\", overlayKeydown: \"overlayKeydown\", overlayOutsideClick: \"overlayOutsideClick\" }, exportAs: [\"cdkConnectedOverlay\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: CdkConnectedOverlay, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]',\n                    exportAs: 'cdkConnectedOverlay',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: Overlay }, { type: i0.TemplateRef }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY]\n                }] }, { type: i5.Directionality, decorators: [{\n                    type: Optional\n                }] }], propDecorators: { origin: [{\n                type: Input,\n                args: ['cdkConnectedOverlayOrigin']\n            }], positions: [{\n                type: Input,\n                args: ['cdkConnectedOverlayPositions']\n            }], positionStrategy: [{\n                type: Input,\n                args: ['cdkConnectedOverlayPositionStrategy']\n            }], offsetX: [{\n                type: Input,\n                args: ['cdkConnectedOverlayOffsetX']\n            }], offsetY: [{\n                type: Input,\n                args: ['cdkConnectedOverlayOffsetY']\n            }], width: [{\n                type: Input,\n                args: ['cdkConnectedOverlayWidth']\n            }], height: [{\n                type: Input,\n                args: ['cdkConnectedOverlayHeight']\n            }], minWidth: [{\n                type: Input,\n                args: ['cdkConnectedOverlayMinWidth']\n            }], minHeight: [{\n                type: Input,\n                args: ['cdkConnectedOverlayMinHeight']\n            }], backdropClass: [{\n                type: Input,\n                args: ['cdkConnectedOverlayBackdropClass']\n            }], panelClass: [{\n                type: Input,\n                args: ['cdkConnectedOverlayPanelClass']\n            }], viewportMargin: [{\n                type: Input,\n                args: ['cdkConnectedOverlayViewportMargin']\n            }], scrollStrategy: [{\n                type: Input,\n                args: ['cdkConnectedOverlayScrollStrategy']\n            }], open: [{\n                type: Input,\n                args: ['cdkConnectedOverlayOpen']\n            }], disableClose: [{\n                type: Input,\n                args: ['cdkConnectedOverlayDisableClose']\n            }], transformOriginSelector: [{\n                type: Input,\n                args: ['cdkConnectedOverlayTransformOriginOn']\n            }], hasBackdrop: [{\n                type: Input,\n                args: [{ alias: 'cdkConnectedOverlayHasBackdrop', transform: booleanAttribute }]\n            }], lockPosition: [{\n                type: Input,\n                args: [{ alias: 'cdkConnectedOverlayLockPosition', transform: booleanAttribute }]\n            }], flexibleDimensions: [{\n                type: Input,\n                args: [{ alias: 'cdkConnectedOverlayFlexibleDimensions', transform: booleanAttribute }]\n            }], growAfterOpen: [{\n                type: Input,\n                args: [{ alias: 'cdkConnectedOverlayGrowAfterOpen', transform: booleanAttribute }]\n            }], push: [{\n                type: Input,\n                args: [{ alias: 'cdkConnectedOverlayPush', transform: booleanAttribute }]\n            }], disposeOnNavigation: [{\n                type: Input,\n                args: [{ alias: 'cdkConnectedOverlayDisposeOnNavigation', transform: booleanAttribute }]\n            }], backdropClick: [{\n                type: Output\n            }], positionChange: [{\n                type: Output\n            }], attach: [{\n                type: Output\n            }], detach: [{\n                type: Output\n            }], overlayKeydown: [{\n                type: Output\n            }], overlayOutsideClick: [{\n                type: Output\n            }] } });\n/** @docs-private */\nfunction CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER = {\n    provide: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n\nclass OverlayModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: OverlayModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: OverlayModule, imports: [BidiModule, PortalModule, ScrollingModule, CdkConnectedOverlay, CdkOverlayOrigin], exports: [CdkConnectedOverlay, CdkOverlayOrigin, ScrollingModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: OverlayModule, providers: [Overlay, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER], imports: [BidiModule, PortalModule, ScrollingModule, ScrollingModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: OverlayModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [BidiModule, PortalModule, ScrollingModule, CdkConnectedOverlay, CdkOverlayOrigin],\n                    exports: [CdkConnectedOverlay, CdkOverlayOrigin, ScrollingModule],\n                    providers: [Overlay, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER],\n                }]\n        }] });\n\n/**\n * Alternative to OverlayContainer that supports correct displaying of overlay elements in\n * Fullscreen mode\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullScreen\n *\n * Should be provided in the root component.\n */\nclass FullscreenOverlayContainer extends OverlayContainer {\n    constructor(_document, platform) {\n        super(_document, platform);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        if (this._fullScreenEventName && this._fullScreenListener) {\n            this._document.removeEventListener(this._fullScreenEventName, this._fullScreenListener);\n        }\n    }\n    _createContainer() {\n        super._createContainer();\n        this._adjustParentForFullscreenChange();\n        this._addFullscreenChangeListener(() => this._adjustParentForFullscreenChange());\n    }\n    _adjustParentForFullscreenChange() {\n        if (!this._containerElement) {\n            return;\n        }\n        const fullscreenElement = this.getFullscreenElement();\n        const parent = fullscreenElement || this._document.body;\n        parent.appendChild(this._containerElement);\n    }\n    _addFullscreenChangeListener(fn) {\n        const eventName = this._getEventName();\n        if (eventName) {\n            if (this._fullScreenListener) {\n                this._document.removeEventListener(eventName, this._fullScreenListener);\n            }\n            this._document.addEventListener(eventName, fn);\n            this._fullScreenListener = fn;\n        }\n    }\n    _getEventName() {\n        if (!this._fullScreenEventName) {\n            const _document = this._document;\n            if (_document.fullscreenEnabled) {\n                this._fullScreenEventName = 'fullscreenchange';\n            }\n            else if (_document.webkitFullscreenEnabled) {\n                this._fullScreenEventName = 'webkitfullscreenchange';\n            }\n            else if (_document.mozFullScreenEnabled) {\n                this._fullScreenEventName = 'mozfullscreenchange';\n            }\n            else if (_document.msFullscreenEnabled) {\n                this._fullScreenEventName = 'MSFullscreenChange';\n            }\n        }\n        return this._fullScreenEventName;\n    }\n    /**\n     * When the page is put into fullscreen mode, a specific element is specified.\n     * Only that element and its children are visible when in fullscreen mode.\n     */\n    getFullscreenElement() {\n        const _document = this._document;\n        return (_document.fullscreenElement ||\n            _document.webkitFullscreenElement ||\n            _document.mozFullScreenElement ||\n            _document.msFullscreenElement ||\n            null);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: FullscreenOverlayContainer, deps: [{ token: DOCUMENT }, { token: i1$1.Platform }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: FullscreenOverlayContainer, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: FullscreenOverlayContainer, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i1$1.Platform }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BlockScrollStrategy, CdkConnectedOverlay, CdkOverlayOrigin, CloseScrollStrategy, ConnectedOverlayPositionChange, ConnectionPositionPair, FlexibleConnectedPositionStrategy, FullscreenOverlayContainer, GlobalPositionStrategy, NoopScrollStrategy, Overlay, OverlayConfig, OverlayContainer, OverlayKeyboardDispatcher, OverlayModule, OverlayOutsideClickDispatcher, OverlayPositionBuilder, OverlayRef, RepositionScrollStrategy, STANDARD_DROPDOWN_ADJACENT_POSITIONS, STANDARD_DROPDOWN_BELOW_POSITIONS, ScrollStrategyOptions, ScrollingVisibility, validateHorizontalPosition, validateVerticalPosition };\n","import * as i1 from '@angular/cdk/a11y';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport * as i1$1 from '@angular/cdk/overlay';\nimport { Overlay, OverlayConfig, OverlayRef, OverlayModule } from '@angular/cdk/overlay';\nimport { Platform, _getFocusedElementPierceShadowDom } from '@angular/cdk/platform';\nimport { BasePortalOutlet, CdkPortalOutlet, ComponentPortal, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, ChangeDetectorRef, Injector, afterNextRender, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, ViewChild, InjectionToken, TemplateRef, Injectable, SkipSelf, NgModule } from '@angular/core';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Subject, defer, of } from 'rxjs';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { startWith } from 'rxjs/operators';\n\n/** Configuration for opening a modal dialog. */\nclass DialogConfig {\n    constructor() {\n        /** The ARIA role of the dialog element. */\n        this.role = 'dialog';\n        /** Optional CSS class or classes applied to the overlay panel. */\n        this.panelClass = '';\n        /** Whether the dialog has a backdrop. */\n        this.hasBackdrop = true;\n        /** Optional CSS class or classes applied to the overlay backdrop. */\n        this.backdropClass = '';\n        /** Whether the dialog closes with the escape key or pointer events outside the panel element. */\n        this.disableClose = false;\n        /** Width of the dialog. */\n        this.width = '';\n        /** Height of the dialog. */\n        this.height = '';\n        /** Data being injected into the child component. */\n        this.data = null;\n        /** ID of the element that describes the dialog. */\n        this.ariaDescribedBy = null;\n        /** ID of the element that labels the dialog. */\n        this.ariaLabelledBy = null;\n        /** Dialog label applied via `aria-label` */\n        this.ariaLabel = null;\n        /** Whether this is a modal dialog. Used to set the `aria-modal` attribute. */\n        this.ariaModal = true;\n        /**\n         * Where the dialog should focus on open.\n         * @breaking-change 14.0.0 Remove boolean option from autoFocus. Use string or\n         * AutoFocusTarget instead.\n         */\n        this.autoFocus = 'first-tabbable';\n        /**\n         * Whether the dialog should restore focus to the previously-focused element upon closing.\n         * Has the following behavior based on the type that is passed in:\n         * - `boolean` - when true, will return focus to the element that was focused before the dialog\n         *    was opened, otherwise won't restore focus at all.\n         * - `string` - focus will be restored to the first element that matches the CSS selector.\n         * - `HTMLElement` - focus will be restored to the specific element.\n         */\n        this.restoreFocus = true;\n        /**\n         * Whether the dialog should close when the user navigates backwards or forwards through browser\n         * history. This does not apply to navigation via anchor element unless using URL-hash based\n         * routing (`HashLocationStrategy` in the Angular router).\n         */\n        this.closeOnNavigation = true;\n        /**\n         * Whether the dialog should close when the dialog service is destroyed. This is useful if\n         * another service is wrapping the dialog and is managing the destruction instead.\n         */\n        this.closeOnDestroy = true;\n        /**\n         * Whether the dialog should close when the underlying overlay is detached. This is useful if\n         * another service is wrapping the dialog and is managing the destruction instead. E.g. an\n         * external detachment can happen as a result of a scroll strategy triggering it or when the\n         * browser location changes.\n         */\n        this.closeOnOverlayDetachments = true;\n    }\n}\n\nfunction throwDialogContentAlreadyAttachedError() {\n    throw Error('Attempting to attach dialog content after content is already attached');\n}\n/**\n * Internal component that wraps user-provided dialog content.\n * @docs-private\n */\nclass CdkDialogContainer extends BasePortalOutlet {\n    constructor(_elementRef, _focusTrapFactory, _document, _config, _interactivityChecker, _ngZone, _overlayRef, _focusMonitor) {\n        super();\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._config = _config;\n        this._interactivityChecker = _interactivityChecker;\n        this._ngZone = _ngZone;\n        this._overlayRef = _overlayRef;\n        this._focusMonitor = _focusMonitor;\n        this._platform = inject(Platform);\n        /** The class that traps and manages focus within the dialog. */\n        this._focusTrap = null;\n        /** Element that was focused before the dialog was opened. Save this to restore upon close. */\n        this._elementFocusedBeforeDialogWasOpened = null;\n        /**\n         * Type of interaction that led to the dialog being closed. This is used to determine\n         * whether the focus style will be applied when returning focus to its original location\n         * after the dialog is closed.\n         */\n        this._closeInteractionType = null;\n        /**\n         * Queue of the IDs of the dialog's label element, based on their definition order. The first\n         * ID will be used as the `aria-labelledby` value. We use a queue here to handle the case\n         * where there are two or more titles in the DOM at a time and the first one is destroyed while\n         * the rest are present.\n         */\n        this._ariaLabelledByQueue = [];\n        this._changeDetectorRef = inject(ChangeDetectorRef);\n        this._injector = inject(Injector);\n        this._isDestroyed = false;\n        /**\n         * Attaches a DOM portal to the dialog container.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * @breaking-change 10.0.0\n         */\n        this.attachDomPortal = (portal) => {\n            if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throwDialogContentAlreadyAttachedError();\n            }\n            const result = this._portalOutlet.attachDomPortal(portal);\n            this._contentAttached();\n            return result;\n        };\n        this._document = _document;\n        if (this._config.ariaLabelledBy) {\n            this._ariaLabelledByQueue.push(this._config.ariaLabelledBy);\n        }\n    }\n    _addAriaLabelledBy(id) {\n        this._ariaLabelledByQueue.push(id);\n        this._changeDetectorRef.markForCheck();\n    }\n    _removeAriaLabelledBy(id) {\n        const index = this._ariaLabelledByQueue.indexOf(id);\n        if (index > -1) {\n            this._ariaLabelledByQueue.splice(index, 1);\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    _contentAttached() {\n        this._initializeFocusTrap();\n        this._handleBackdropClicks();\n        this._captureInitialFocus();\n    }\n    /**\n     * Can be used by child classes to customize the initial focus\n     * capturing behavior (e.g. if it's tied to an animation).\n     */\n    _captureInitialFocus() {\n        this._trapFocus();\n    }\n    ngOnDestroy() {\n        this._isDestroyed = true;\n        this._restoreFocus();\n    }\n    /**\n     * Attach a ComponentPortal as content to this dialog container.\n     * @param portal Portal to be attached as the dialog content.\n     */\n    attachComponentPortal(portal) {\n        if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwDialogContentAlreadyAttachedError();\n        }\n        const result = this._portalOutlet.attachComponentPortal(portal);\n        this._contentAttached();\n        return result;\n    }\n    /**\n     * Attach a TemplatePortal as content to this dialog container.\n     * @param portal Portal to be attached as the dialog content.\n     */\n    attachTemplatePortal(portal) {\n        if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwDialogContentAlreadyAttachedError();\n        }\n        const result = this._portalOutlet.attachTemplatePortal(portal);\n        this._contentAttached();\n        return result;\n    }\n    // TODO(crisbeto): this shouldn't be exposed, but there are internal references to it.\n    /** Captures focus if it isn't already inside the dialog. */\n    _recaptureFocus() {\n        if (!this._containsFocus()) {\n            this._trapFocus();\n        }\n    }\n    /**\n     * Focuses the provided element. If the element is not focusable, it will add a tabIndex\n     * attribute to forcefully focus it. The attribute is removed after focus is moved.\n     * @param element The element to focus.\n     */\n    _forceFocus(element, options) {\n        if (!this._interactivityChecker.isFocusable(element)) {\n            element.tabIndex = -1;\n            // The tabindex attribute should be removed to avoid navigating to that element again\n            this._ngZone.runOutsideAngular(() => {\n                const callback = () => {\n                    element.removeEventListener('blur', callback);\n                    element.removeEventListener('mousedown', callback);\n                    element.removeAttribute('tabindex');\n                };\n                element.addEventListener('blur', callback);\n                element.addEventListener('mousedown', callback);\n            });\n        }\n        element.focus(options);\n    }\n    /**\n     * Focuses the first element that matches the given selector within the focus trap.\n     * @param selector The CSS selector for the element to set focus to.\n     */\n    _focusByCssSelector(selector, options) {\n        let elementToFocus = this._elementRef.nativeElement.querySelector(selector);\n        if (elementToFocus) {\n            this._forceFocus(elementToFocus, options);\n        }\n    }\n    /**\n     * Moves the focus inside the focus trap. When autoFocus is not set to 'dialog', if focus\n     * cannot be moved then focus will go to the dialog container.\n     */\n    _trapFocus() {\n        if (this._isDestroyed) {\n            return;\n        }\n        // If were to attempt to focus immediately, then the content of the dialog would not yet be\n        // ready in instances where change detection has to run first. To deal with this, we simply\n        // wait until after the next render.\n        afterNextRender(() => {\n            const element = this._elementRef.nativeElement;\n            switch (this._config.autoFocus) {\n                case false:\n                case 'dialog':\n                    // Ensure that focus is on the dialog container. It's possible that a different\n                    // component tried to move focus while the open animation was running. See:\n                    // https://github.com/angular/components/issues/16215. Note that we only want to do this\n                    // if the focus isn't inside the dialog already, because it's possible that the consumer\n                    // turned off `autoFocus` in order to move focus themselves.\n                    if (!this._containsFocus()) {\n                        element.focus();\n                    }\n                    break;\n                case true:\n                case 'first-tabbable':\n                    const focusedSuccessfully = this._focusTrap?.focusInitialElement();\n                    // If we weren't able to find a focusable element in the dialog, then focus the dialog\n                    // container instead.\n                    if (!focusedSuccessfully) {\n                        this._focusDialogContainer();\n                    }\n                    break;\n                case 'first-heading':\n                    this._focusByCssSelector('h1, h2, h3, h4, h5, h6, [role=\"heading\"]');\n                    break;\n                default:\n                    this._focusByCssSelector(this._config.autoFocus);\n                    break;\n            }\n        }, { injector: this._injector });\n    }\n    /** Restores focus to the element that was focused before the dialog opened. */\n    _restoreFocus() {\n        const focusConfig = this._config.restoreFocus;\n        let focusTargetElement = null;\n        if (typeof focusConfig === 'string') {\n            focusTargetElement = this._document.querySelector(focusConfig);\n        }\n        else if (typeof focusConfig === 'boolean') {\n            focusTargetElement = focusConfig ? this._elementFocusedBeforeDialogWasOpened : null;\n        }\n        else if (focusConfig) {\n            focusTargetElement = focusConfig;\n        }\n        // We need the extra check, because IE can set the `activeElement` to null in some cases.\n        if (this._config.restoreFocus &&\n            focusTargetElement &&\n            typeof focusTargetElement.focus === 'function') {\n            const activeElement = _getFocusedElementPierceShadowDom();\n            const element = this._elementRef.nativeElement;\n            // Make sure that focus is still inside the dialog or is on the body (usually because a\n            // non-focusable element like the backdrop was clicked) before moving it. It's possible that\n            // the consumer moved it themselves before the animation was done, in which case we shouldn't\n            // do anything.\n            if (!activeElement ||\n                activeElement === this._document.body ||\n                activeElement === element ||\n                element.contains(activeElement)) {\n                if (this._focusMonitor) {\n                    this._focusMonitor.focusVia(focusTargetElement, this._closeInteractionType);\n                    this._closeInteractionType = null;\n                }\n                else {\n                    focusTargetElement.focus();\n                }\n            }\n        }\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n    }\n    /** Focuses the dialog container. */\n    _focusDialogContainer() {\n        // Note that there is no focus method when rendering on the server.\n        if (this._elementRef.nativeElement.focus) {\n            this._elementRef.nativeElement.focus();\n        }\n    }\n    /** Returns whether focus is inside the dialog. */\n    _containsFocus() {\n        const element = this._elementRef.nativeElement;\n        const activeElement = _getFocusedElementPierceShadowDom();\n        return element === activeElement || element.contains(activeElement);\n    }\n    /** Sets up the focus trap. */\n    _initializeFocusTrap() {\n        if (this._platform.isBrowser) {\n            this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n            // Save the previously focused element. This element will be re-focused\n            // when the dialog closes.\n            if (this._document) {\n                this._elementFocusedBeforeDialogWasOpened = _getFocusedElementPierceShadowDom();\n            }\n        }\n    }\n    /** Sets up the listener that handles clicks on the dialog backdrop. */\n    _handleBackdropClicks() {\n        // Clicking on the backdrop will move focus out of dialog.\n        // Recapture it if closing via the backdrop is disabled.\n        this._overlayRef.backdropClick().subscribe(() => {\n            if (this._config.disableClose) {\n                this._recaptureFocus();\n            }\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: CdkDialogContainer, deps: [{ token: i0.ElementRef }, { token: i1.FocusTrapFactory }, { token: DOCUMENT, optional: true }, { token: DialogConfig }, { token: i1.InteractivityChecker }, { token: i0.NgZone }, { token: i1$1.OverlayRef }, { token: i1.FocusMonitor }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.1.0-next.3\", type: CdkDialogContainer, isStandalone: true, selector: \"cdk-dialog-container\", host: { attributes: { \"tabindex\": \"-1\" }, properties: { \"attr.id\": \"_config.id || null\", \"attr.role\": \"_config.role\", \"attr.aria-modal\": \"_config.ariaModal\", \"attr.aria-labelledby\": \"_config.ariaLabel ? null : _ariaLabelledByQueue[0]\", \"attr.aria-label\": \"_config.ariaLabel\", \"attr.aria-describedby\": \"_config.ariaDescribedBy || null\" }, classAttribute: \"cdk-dialog-container\" }, viewQueries: [{ propertyName: \"_portalOutlet\", first: true, predicate: CdkPortalOutlet, descendants: true, static: true }], usesInheritance: true, ngImport: i0, template: \"<ng-template cdkPortalOutlet />\\n\", styles: [\".cdk-dialog-container{display:block;width:100%;height:100%;min-height:inherit;max-height:inherit}\"], dependencies: [{ kind: \"directive\", type: CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: CdkDialogContainer, decorators: [{\n            type: Component,\n            args: [{ selector: 'cdk-dialog-container', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, standalone: true, imports: [CdkPortalOutlet], host: {\n                        'class': 'cdk-dialog-container',\n                        'tabindex': '-1',\n                        '[attr.id]': '_config.id || null',\n                        '[attr.role]': '_config.role',\n                        '[attr.aria-modal]': '_config.ariaModal',\n                        '[attr.aria-labelledby]': '_config.ariaLabel ? null : _ariaLabelledByQueue[0]',\n                        '[attr.aria-label]': '_config.ariaLabel',\n                        '[attr.aria-describedby]': '_config.ariaDescribedBy || null',\n                    }, template: \"<ng-template cdkPortalOutlet />\\n\", styles: [\".cdk-dialog-container{display:block;width:100%;height:100%;min-height:inherit;max-height:inherit}\"] }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i1.FocusTrapFactory }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DialogConfig]\n                }] }, { type: i1.InteractivityChecker }, { type: i0.NgZone }, { type: i1$1.OverlayRef }, { type: i1.FocusMonitor }], propDecorators: { _portalOutlet: [{\n                type: ViewChild,\n                args: [CdkPortalOutlet, { static: true }]\n            }] } });\n\n/**\n * Reference to a dialog opened via the Dialog service.\n */\nclass DialogRef {\n    constructor(overlayRef, config) {\n        this.overlayRef = overlayRef;\n        this.config = config;\n        /** Emits when the dialog has been closed. */\n        this.closed = new Subject();\n        this.disableClose = config.disableClose;\n        this.backdropClick = overlayRef.backdropClick();\n        this.keydownEvents = overlayRef.keydownEvents();\n        this.outsidePointerEvents = overlayRef.outsidePointerEvents();\n        this.id = config.id; // By the time the dialog is created we are guaranteed to have an ID.\n        this.keydownEvents.subscribe(event => {\n            if (event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event)) {\n                event.preventDefault();\n                this.close(undefined, { focusOrigin: 'keyboard' });\n            }\n        });\n        this.backdropClick.subscribe(() => {\n            if (!this.disableClose) {\n                this.close(undefined, { focusOrigin: 'mouse' });\n            }\n        });\n        this._detachSubscription = overlayRef.detachments().subscribe(() => {\n            // Check specifically for `false`, because we want `undefined` to be treated like `true`.\n            if (config.closeOnOverlayDetachments !== false) {\n                this.close();\n            }\n        });\n    }\n    /**\n     * Close the dialog.\n     * @param result Optional result to return to the dialog opener.\n     * @param options Additional options to customize the closing behavior.\n     */\n    close(result, options) {\n        if (this.containerInstance) {\n            const closedSubject = this.closed;\n            this.containerInstance._closeInteractionType = options?.focusOrigin || 'program';\n            // Drop the detach subscription first since it can be triggered by the\n            // `dispose` call and override the result of this closing sequence.\n            this._detachSubscription.unsubscribe();\n            this.overlayRef.dispose();\n            closedSubject.next(result);\n            closedSubject.complete();\n            this.componentInstance = this.containerInstance = null;\n        }\n    }\n    /** Updates the position of the dialog based on the current position strategy. */\n    updatePosition() {\n        this.overlayRef.updatePosition();\n        return this;\n    }\n    /**\n     * Updates the dialog's width and height.\n     * @param width New width of the dialog.\n     * @param height New height of the dialog.\n     */\n    updateSize(width = '', height = '') {\n        this.overlayRef.updateSize({ width, height });\n        return this;\n    }\n    /** Add a CSS class or an array of classes to the overlay pane. */\n    addPanelClass(classes) {\n        this.overlayRef.addPanelClass(classes);\n        return this;\n    }\n    /** Remove a CSS class or an array of classes from the overlay pane. */\n    removePanelClass(classes) {\n        this.overlayRef.removePanelClass(classes);\n        return this;\n    }\n}\n\n/** Injection token for the Dialog's ScrollStrategy. */\nconst DIALOG_SCROLL_STRATEGY = new InjectionToken('DialogScrollStrategy', {\n    providedIn: 'root',\n    factory: () => {\n        const overlay = inject(Overlay);\n        return () => overlay.scrollStrategies.block();\n    },\n});\n/** Injection token for the Dialog's Data. */\nconst DIALOG_DATA = new InjectionToken('DialogData');\n/** Injection token that can be used to provide default options for the dialog module. */\nconst DEFAULT_DIALOG_CONFIG = new InjectionToken('DefaultDialogConfig');\n/**\n * @docs-private\n * @deprecated No longer used. To be removed.\n * @breaking-change 19.0.0\n */\nfunction DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.block();\n}\n/**\n * @docs-private\n * @deprecated No longer used. To be removed.\n * @breaking-change 19.0.0\n */\nconst DIALOG_SCROLL_STRATEGY_PROVIDER = {\n    provide: DIALOG_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n\n/** Unique id for the created dialog. */\nlet uniqueId = 0;\nclass Dialog {\n    /** Keeps track of the currently-open dialogs. */\n    get openDialogs() {\n        return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel;\n    }\n    /** Stream that emits when a dialog has been opened. */\n    get afterOpened() {\n        return this._parentDialog ? this._parentDialog.afterOpened : this._afterOpenedAtThisLevel;\n    }\n    constructor(_overlay, _injector, _defaultOptions, _parentDialog, _overlayContainer, scrollStrategy) {\n        this._overlay = _overlay;\n        this._injector = _injector;\n        this._defaultOptions = _defaultOptions;\n        this._parentDialog = _parentDialog;\n        this._overlayContainer = _overlayContainer;\n        this._openDialogsAtThisLevel = [];\n        this._afterAllClosedAtThisLevel = new Subject();\n        this._afterOpenedAtThisLevel = new Subject();\n        this._ariaHiddenElements = new Map();\n        /**\n         * Stream that emits when all open dialog have finished closing.\n         * Will emit on subscribe if there are no open dialogs to begin with.\n         */\n        this.afterAllClosed = defer(() => this.openDialogs.length\n            ? this._getAfterAllClosed()\n            : this._getAfterAllClosed().pipe(startWith(undefined)));\n        this._scrollStrategy = scrollStrategy;\n    }\n    open(componentOrTemplateRef, config) {\n        const defaults = (this._defaultOptions || new DialogConfig());\n        config = { ...defaults, ...config };\n        config.id = config.id || `cdk-dialog-${uniqueId++}`;\n        if (config.id &&\n            this.getDialogById(config.id) &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`Dialog with id \"${config.id}\" exists already. The dialog id must be unique.`);\n        }\n        const overlayConfig = this._getOverlayConfig(config);\n        const overlayRef = this._overlay.create(overlayConfig);\n        const dialogRef = new DialogRef(overlayRef, config);\n        const dialogContainer = this._attachContainer(overlayRef, dialogRef, config);\n        dialogRef.containerInstance = dialogContainer;\n        this._attachDialogContent(componentOrTemplateRef, dialogRef, dialogContainer, config);\n        // If this is the first dialog that we're opening, hide all the non-overlay content.\n        if (!this.openDialogs.length) {\n            this._hideNonDialogContentFromAssistiveTechnology();\n        }\n        this.openDialogs.push(dialogRef);\n        dialogRef.closed.subscribe(() => this._removeOpenDialog(dialogRef, true));\n        this.afterOpened.next(dialogRef);\n        return dialogRef;\n    }\n    /**\n     * Closes all of the currently-open dialogs.\n     */\n    closeAll() {\n        reverseForEach(this.openDialogs, dialog => dialog.close());\n    }\n    /**\n     * Finds an open dialog by its id.\n     * @param id ID to use when looking up the dialog.\n     */\n    getDialogById(id) {\n        return this.openDialogs.find(dialog => dialog.id === id);\n    }\n    ngOnDestroy() {\n        // Make one pass over all the dialogs that need to be untracked, but should not be closed. We\n        // want to stop tracking the open dialog even if it hasn't been closed, because the tracking\n        // determines when `aria-hidden` is removed from elements outside the dialog.\n        reverseForEach(this._openDialogsAtThisLevel, dialog => {\n            // Check for `false` specifically since we want `undefined` to be interpreted as `true`.\n            if (dialog.config.closeOnDestroy === false) {\n                this._removeOpenDialog(dialog, false);\n            }\n        });\n        // Make a second pass and close the remaining dialogs. We do this second pass in order to\n        // correctly dispatch the `afterAllClosed` event in case we have a mixed array of dialogs\n        // that should be closed and dialogs that should not.\n        reverseForEach(this._openDialogsAtThisLevel, dialog => dialog.close());\n        this._afterAllClosedAtThisLevel.complete();\n        this._afterOpenedAtThisLevel.complete();\n        this._openDialogsAtThisLevel = [];\n    }\n    /**\n     * Creates an overlay config from a dialog config.\n     * @param config The dialog configuration.\n     * @returns The overlay configuration.\n     */\n    _getOverlayConfig(config) {\n        const state = new OverlayConfig({\n            positionStrategy: config.positionStrategy ||\n                this._overlay.position().global().centerHorizontally().centerVertically(),\n            scrollStrategy: config.scrollStrategy || this._scrollStrategy(),\n            panelClass: config.panelClass,\n            hasBackdrop: config.hasBackdrop,\n            direction: config.direction,\n            minWidth: config.minWidth,\n            minHeight: config.minHeight,\n            maxWidth: config.maxWidth,\n            maxHeight: config.maxHeight,\n            width: config.width,\n            height: config.height,\n            disposeOnNavigation: config.closeOnNavigation,\n        });\n        if (config.backdropClass) {\n            state.backdropClass = config.backdropClass;\n        }\n        return state;\n    }\n    /**\n     * Attaches a dialog container to a dialog's already-created overlay.\n     * @param overlay Reference to the dialog's underlying overlay.\n     * @param config The dialog configuration.\n     * @returns A promise resolving to a ComponentRef for the attached container.\n     */\n    _attachContainer(overlay, dialogRef, config) {\n        const userInjector = config.injector || config.viewContainerRef?.injector;\n        const providers = [\n            { provide: DialogConfig, useValue: config },\n            { provide: DialogRef, useValue: dialogRef },\n            { provide: OverlayRef, useValue: overlay },\n        ];\n        let containerType;\n        if (config.container) {\n            if (typeof config.container === 'function') {\n                containerType = config.container;\n            }\n            else {\n                containerType = config.container.type;\n                providers.push(...config.container.providers(config));\n            }\n        }\n        else {\n            containerType = CdkDialogContainer;\n        }\n        const containerPortal = new ComponentPortal(containerType, config.viewContainerRef, Injector.create({ parent: userInjector || this._injector, providers }), config.componentFactoryResolver);\n        const containerRef = overlay.attach(containerPortal);\n        return containerRef.instance;\n    }\n    /**\n     * Attaches the user-provided component to the already-created dialog container.\n     * @param componentOrTemplateRef The type of component being loaded into the dialog,\n     *     or a TemplateRef to instantiate as the content.\n     * @param dialogRef Reference to the dialog being opened.\n     * @param dialogContainer Component that is going to wrap the dialog content.\n     * @param config Configuration used to open the dialog.\n     */\n    _attachDialogContent(componentOrTemplateRef, dialogRef, dialogContainer, config) {\n        if (componentOrTemplateRef instanceof TemplateRef) {\n            const injector = this._createInjector(config, dialogRef, dialogContainer, undefined);\n            let context = { $implicit: config.data, dialogRef };\n            if (config.templateContext) {\n                context = {\n                    ...context,\n                    ...(typeof config.templateContext === 'function'\n                        ? config.templateContext()\n                        : config.templateContext),\n                };\n            }\n            dialogContainer.attachTemplatePortal(new TemplatePortal(componentOrTemplateRef, null, context, injector));\n        }\n        else {\n            const injector = this._createInjector(config, dialogRef, dialogContainer, this._injector);\n            const contentRef = dialogContainer.attachComponentPortal(new ComponentPortal(componentOrTemplateRef, config.viewContainerRef, injector, config.componentFactoryResolver));\n            dialogRef.componentRef = contentRef;\n            dialogRef.componentInstance = contentRef.instance;\n        }\n    }\n    /**\n     * Creates a custom injector to be used inside the dialog. This allows a component loaded inside\n     * of a dialog to close itself and, optionally, to return a value.\n     * @param config Config object that is used to construct the dialog.\n     * @param dialogRef Reference to the dialog being opened.\n     * @param dialogContainer Component that is going to wrap the dialog content.\n     * @param fallbackInjector Injector to use as a fallback when a lookup fails in the custom\n     * dialog injector, if the user didn't provide a custom one.\n     * @returns The custom injector that can be used inside the dialog.\n     */\n    _createInjector(config, dialogRef, dialogContainer, fallbackInjector) {\n        const userInjector = config.injector || config.viewContainerRef?.injector;\n        const providers = [\n            { provide: DIALOG_DATA, useValue: config.data },\n            { provide: DialogRef, useValue: dialogRef },\n        ];\n        if (config.providers) {\n            if (typeof config.providers === 'function') {\n                providers.push(...config.providers(dialogRef, config, dialogContainer));\n            }\n            else {\n                providers.push(...config.providers);\n            }\n        }\n        if (config.direction &&\n            (!userInjector ||\n                !userInjector.get(Directionality, null, { optional: true }))) {\n            providers.push({\n                provide: Directionality,\n                useValue: { value: config.direction, change: of() },\n            });\n        }\n        return Injector.create({ parent: userInjector || fallbackInjector, providers });\n    }\n    /**\n     * Removes a dialog from the array of open dialogs.\n     * @param dialogRef Dialog to be removed.\n     * @param emitEvent Whether to emit an event if this is the last dialog.\n     */\n    _removeOpenDialog(dialogRef, emitEvent) {\n        const index = this.openDialogs.indexOf(dialogRef);\n        if (index > -1) {\n            this.openDialogs.splice(index, 1);\n            // If all the dialogs were closed, remove/restore the `aria-hidden`\n            // to a the siblings and emit to the `afterAllClosed` stream.\n            if (!this.openDialogs.length) {\n                this._ariaHiddenElements.forEach((previousValue, element) => {\n                    if (previousValue) {\n                        element.setAttribute('aria-hidden', previousValue);\n                    }\n                    else {\n                        element.removeAttribute('aria-hidden');\n                    }\n                });\n                this._ariaHiddenElements.clear();\n                if (emitEvent) {\n                    this._getAfterAllClosed().next();\n                }\n            }\n        }\n    }\n    /** Hides all of the content that isn't an overlay from assistive technology. */\n    _hideNonDialogContentFromAssistiveTechnology() {\n        const overlayContainer = this._overlayContainer.getContainerElement();\n        // Ensure that the overlay container is attached to the DOM.\n        if (overlayContainer.parentElement) {\n            const siblings = overlayContainer.parentElement.children;\n            for (let i = siblings.length - 1; i > -1; i--) {\n                const sibling = siblings[i];\n                if (sibling !== overlayContainer &&\n                    sibling.nodeName !== 'SCRIPT' &&\n                    sibling.nodeName !== 'STYLE' &&\n                    !sibling.hasAttribute('aria-live')) {\n                    this._ariaHiddenElements.set(sibling, sibling.getAttribute('aria-hidden'));\n                    sibling.setAttribute('aria-hidden', 'true');\n                }\n            }\n        }\n    }\n    _getAfterAllClosed() {\n        const parent = this._parentDialog;\n        return parent ? parent._getAfterAllClosed() : this._afterAllClosedAtThisLevel;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: Dialog, deps: [{ token: i1$1.Overlay }, { token: i0.Injector }, { token: DEFAULT_DIALOG_CONFIG, optional: true }, { token: Dialog, optional: true, skipSelf: true }, { token: i1$1.OverlayContainer }, { token: DIALOG_SCROLL_STRATEGY }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: Dialog, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: Dialog, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: i1$1.Overlay }, { type: i0.Injector }, { type: DialogConfig, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DEFAULT_DIALOG_CONFIG]\n                }] }, { type: Dialog, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }, { type: i1$1.OverlayContainer }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DIALOG_SCROLL_STRATEGY]\n                }] }] });\n/**\n * Executes a callback against all elements in an array while iterating in reverse.\n * Useful if the array is being modified as it is being iterated.\n */\nfunction reverseForEach(items, callback) {\n    let i = items.length;\n    while (i--) {\n        callback(items[i]);\n    }\n}\n\nclass DialogModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: DialogModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: DialogModule, imports: [OverlayModule, PortalModule, A11yModule, CdkDialogContainer], exports: [\n            // Re-export the PortalModule so that people extending the `CdkDialogContainer`\n            // don't have to remember to import it or be faced with an unhelpful error.\n            PortalModule,\n            CdkDialogContainer] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: DialogModule, providers: [Dialog], imports: [OverlayModule, PortalModule, A11yModule, \n            // Re-export the PortalModule so that people extending the `CdkDialogContainer`\n            // don't have to remember to import it or be faced with an unhelpful error.\n            PortalModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: DialogModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [OverlayModule, PortalModule, A11yModule, CdkDialogContainer],\n                    exports: [\n                        // Re-export the PortalModule so that people extending the `CdkDialogContainer`\n                        // don't have to remember to import it or be faced with an unhelpful error.\n                        PortalModule,\n                        CdkDialogContainer,\n                    ],\n                    providers: [Dialog],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkDialogContainer, DEFAULT_DIALOG_CONFIG, DIALOG_DATA, DIALOG_SCROLL_STRATEGY, DIALOG_SCROLL_STRATEGY_PROVIDER, DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY, Dialog, DialogConfig, DialogModule, DialogRef, throwDialogContentAlreadyAttachedError };\n","import * as i1$1 from '@angular/cdk/overlay';\nimport { Overlay, OverlayModule } from '@angular/cdk/overlay';\nimport * as i2 from '@angular/common';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, ANIMATION_MODULE_TYPE, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, InjectionToken, inject, Injectable, SkipSelf, Directive, Input, NgModule } from '@angular/core';\nimport * as i1 from '@angular/cdk/a11y';\nimport { CdkDialogContainer, Dialog, DialogConfig, DialogModule } from '@angular/cdk/dialog';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { CdkPortalOutlet, PortalModule } from '@angular/cdk/portal';\nimport { Subject, merge, defer } from 'rxjs';\nimport { filter, take, startWith } from 'rxjs/operators';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport * as i3 from '@angular/cdk/scrolling';\nimport { CdkScrollable } from '@angular/cdk/scrolling';\nimport { MatCommonModule } from '@angular/material/core';\nimport { trigger, state, style, transition, group, animate, query, animateChild } from '@angular/animations';\n\n/**\n * Configuration for opening a modal dialog with the MatDialog service.\n */\nclass MatDialogConfig {\n    constructor() {\n        /** The ARIA role of the dialog element. */\n        this.role = 'dialog';\n        /** Custom class for the overlay pane. */\n        this.panelClass = '';\n        /** Whether the dialog has a backdrop. */\n        this.hasBackdrop = true;\n        /** Custom class for the backdrop. */\n        this.backdropClass = '';\n        /** Whether the user can use escape or clicking on the backdrop to close the modal. */\n        this.disableClose = false;\n        /** Width of the dialog. */\n        this.width = '';\n        /** Height of the dialog. */\n        this.height = '';\n        /** Data being injected into the child component. */\n        this.data = null;\n        /** ID of the element that describes the dialog. */\n        this.ariaDescribedBy = null;\n        /** ID of the element that labels the dialog. */\n        this.ariaLabelledBy = null;\n        /** Aria label to assign to the dialog element. */\n        this.ariaLabel = null;\n        /** Whether this is a modal dialog. Used to set the `aria-modal` attribute. */\n        this.ariaModal = true;\n        /**\n         * Where the dialog should focus on open.\n         * @breaking-change 14.0.0 Remove boolean option from autoFocus. Use string or\n         * AutoFocusTarget instead.\n         */\n        this.autoFocus = 'first-tabbable';\n        /**\n         * Whether the dialog should restore focus to the\n         * previously-focused element, after it's closed.\n         */\n        this.restoreFocus = true;\n        /** Whether to wait for the opening animation to finish before trapping focus. */\n        this.delayFocusTrap = true;\n        /**\n         * Whether the dialog should close when the user goes backwards/forwards in history.\n         * Note that this usually doesn't include clicking on links (unless the user is using\n         * the `HashLocationStrategy`).\n         */\n        this.closeOnNavigation = true;\n        // TODO(jelbourn): add configuration for lifecycle hooks, ARIA labelling.\n    }\n}\n\n/** Class added when the dialog is open. */\nconst OPEN_CLASS = 'mdc-dialog--open';\n/** Class added while the dialog is opening. */\nconst OPENING_CLASS = 'mdc-dialog--opening';\n/** Class added while the dialog is closing. */\nconst CLOSING_CLASS = 'mdc-dialog--closing';\n/** Duration of the opening animation in milliseconds. */\nconst OPEN_ANIMATION_DURATION = 150;\n/** Duration of the closing animation in milliseconds. */\nconst CLOSE_ANIMATION_DURATION = 75;\nclass MatDialogContainer extends CdkDialogContainer {\n    constructor(elementRef, focusTrapFactory, _document, dialogConfig, interactivityChecker, ngZone, overlayRef, _animationMode, focusMonitor) {\n        super(elementRef, focusTrapFactory, _document, dialogConfig, interactivityChecker, ngZone, overlayRef, focusMonitor);\n        this._animationMode = _animationMode;\n        /** Emits when an animation state changes. */\n        this._animationStateChanged = new EventEmitter();\n        /** Whether animations are enabled. */\n        this._animationsEnabled = this._animationMode !== 'NoopAnimations';\n        /** Number of actions projected in the dialog. */\n        this._actionSectionCount = 0;\n        /** Host element of the dialog container component. */\n        this._hostElement = this._elementRef.nativeElement;\n        /** Duration of the dialog open animation. */\n        this._enterAnimationDuration = this._animationsEnabled\n            ? parseCssTime(this._config.enterAnimationDuration) ?? OPEN_ANIMATION_DURATION\n            : 0;\n        /** Duration of the dialog close animation. */\n        this._exitAnimationDuration = this._animationsEnabled\n            ? parseCssTime(this._config.exitAnimationDuration) ?? CLOSE_ANIMATION_DURATION\n            : 0;\n        /** Current timer for dialog animations. */\n        this._animationTimer = null;\n        /**\n         * Completes the dialog open by clearing potential animation classes, trapping\n         * focus and emitting an opened event.\n         */\n        this._finishDialogOpen = () => {\n            this._clearAnimationClasses();\n            this._openAnimationDone(this._enterAnimationDuration);\n        };\n        /**\n         * Completes the dialog close by clearing potential animation classes, restoring\n         * focus and emitting a closed event.\n         */\n        this._finishDialogClose = () => {\n            this._clearAnimationClasses();\n            this._animationStateChanged.emit({ state: 'closed', totalTime: this._exitAnimationDuration });\n        };\n    }\n    _contentAttached() {\n        // Delegate to the original dialog-container initialization (i.e. saving the\n        // previous element, setting up the focus trap and moving focus to the container).\n        super._contentAttached();\n        // Note: Usually we would be able to use the MDC dialog foundation here to handle\n        // the dialog animation for us, but there are a few reasons why we just leverage\n        // their styles and not use the runtime foundation code:\n        //   1. Foundation does not allow us to disable animations.\n        //   2. Foundation contains unnecessary features we don't need and aren't\n        //      tree-shakeable. e.g. background scrim, keyboard event handlers for ESC button.\n        //   3. Foundation uses unnecessary timers for animations to work around limitations\n        //      in React's `setState` mechanism.\n        //      https://github.com/material-components/material-components-web/pull/3682.\n        this._startOpenAnimation();\n    }\n    /** Starts the dialog open animation if enabled. */\n    _startOpenAnimation() {\n        this._animationStateChanged.emit({ state: 'opening', totalTime: this._enterAnimationDuration });\n        if (this._animationsEnabled) {\n            this._hostElement.style.setProperty(TRANSITION_DURATION_PROPERTY, `${this._enterAnimationDuration}ms`);\n            // We need to give the `setProperty` call from above some time to be applied.\n            // One would expect that the open class is added once the animation finished, but MDC\n            // uses the open class in combination with the opening class to start the animation.\n            this._requestAnimationFrame(() => this._hostElement.classList.add(OPENING_CLASS, OPEN_CLASS));\n            this._waitForAnimationToComplete(this._enterAnimationDuration, this._finishDialogOpen);\n        }\n        else {\n            this._hostElement.classList.add(OPEN_CLASS);\n            // Note: We could immediately finish the dialog opening here with noop animations,\n            // but we defer until next tick so that consumers can subscribe to `afterOpened`.\n            // Executing this immediately would mean that `afterOpened` emits synchronously\n            // on `dialog.open` before the consumer had a change to subscribe to `afterOpened`.\n            Promise.resolve().then(() => this._finishDialogOpen());\n        }\n    }\n    /**\n     * Starts the exit animation of the dialog if enabled. This method is\n     * called by the dialog ref.\n     */\n    _startExitAnimation() {\n        this._animationStateChanged.emit({ state: 'closing', totalTime: this._exitAnimationDuration });\n        this._hostElement.classList.remove(OPEN_CLASS);\n        if (this._animationsEnabled) {\n            this._hostElement.style.setProperty(TRANSITION_DURATION_PROPERTY, `${this._exitAnimationDuration}ms`);\n            // We need to give the `setProperty` call from above some time to be applied.\n            this._requestAnimationFrame(() => this._hostElement.classList.add(CLOSING_CLASS));\n            this._waitForAnimationToComplete(this._exitAnimationDuration, this._finishDialogClose);\n        }\n        else {\n            // This subscription to the `OverlayRef#backdropClick` observable in the `DialogRef` is\n            // set up before any user can subscribe to the backdrop click. The subscription triggers\n            // the dialog close and this method synchronously. If we'd synchronously emit the `CLOSED`\n            // animation state event if animations are disabled, the overlay would be disposed\n            // immediately and all other subscriptions to `DialogRef#backdropClick` would be silently\n            // skipped. We work around this by waiting with the dialog close until the next tick when\n            // all subscriptions have been fired as expected. This is not an ideal solution, but\n            // there doesn't seem to be any other good way. Alternatives that have been considered:\n            //   1. Deferring `DialogRef.close`. This could be a breaking change due to a new microtask.\n            //      Also this issue is specific to the MDC implementation where the dialog could\n            //      technically be closed synchronously. In the non-MDC one, Angular animations are used\n            //      and closing always takes at least a tick.\n            //   2. Ensuring that user subscriptions to `backdropClick`, `keydownEvents` in the dialog\n            //      ref are first. This would solve the issue, but has the risk of memory leaks and also\n            //      doesn't solve the case where consumers call `DialogRef.close` in their subscriptions.\n            // Based on the fact that this is specific to the MDC-based implementation of the dialog\n            // animations, the defer is applied here.\n            Promise.resolve().then(() => this._finishDialogClose());\n        }\n    }\n    /**\n     * Updates the number action sections.\n     * @param delta Increase/decrease in the number of sections.\n     */\n    _updateActionSectionCount(delta) {\n        this._actionSectionCount += delta;\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Clears all dialog animation classes. */\n    _clearAnimationClasses() {\n        this._hostElement.classList.remove(OPENING_CLASS, CLOSING_CLASS);\n    }\n    _waitForAnimationToComplete(duration, callback) {\n        if (this._animationTimer !== null) {\n            clearTimeout(this._animationTimer);\n        }\n        // Note that we want this timer to run inside the NgZone, because we want\n        // the related events like `afterClosed` to be inside the zone as well.\n        this._animationTimer = setTimeout(callback, duration);\n    }\n    /** Runs a callback in `requestAnimationFrame`, if available. */\n    _requestAnimationFrame(callback) {\n        this._ngZone.runOutsideAngular(() => {\n            if (typeof requestAnimationFrame === 'function') {\n                requestAnimationFrame(callback);\n            }\n            else {\n                callback();\n            }\n        });\n    }\n    _captureInitialFocus() {\n        if (!this._config.delayFocusTrap) {\n            this._trapFocus();\n        }\n    }\n    /**\n     * Callback for when the open dialog animation has finished. Intended to\n     * be called by sub-classes that use different animation implementations.\n     */\n    _openAnimationDone(totalTime) {\n        if (this._config.delayFocusTrap) {\n            this._trapFocus();\n        }\n        this._animationStateChanged.next({ state: 'opened', totalTime });\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        if (this._animationTimer !== null) {\n            clearTimeout(this._animationTimer);\n        }\n    }\n    attachComponentPortal(portal) {\n        // When a component is passed into the dialog, the host element interrupts\n        // the `display:flex` from affecting the dialog title, content, and\n        // actions. To fix this, we make the component host `display: contents` by\n        // marking its host with the `mat-mdc-dialog-component-host` class.\n        //\n        // Note that this problem does not exist when a template ref is used since\n        // the title, contents, and actions are then nested directly under the\n        // dialog surface.\n        const ref = super.attachComponentPortal(portal);\n        ref.location.nativeElement.classList.add('mat-mdc-dialog-component-host');\n        return ref;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatDialogContainer, deps: [{ token: i0.ElementRef }, { token: i1.FocusTrapFactory }, { token: DOCUMENT, optional: true }, { token: MatDialogConfig }, { token: i1.InteractivityChecker }, { token: i0.NgZone }, { token: i1$1.OverlayRef }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: i1.FocusMonitor }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.1.0-next.3\", type: MatDialogContainer, isStandalone: true, selector: \"mat-dialog-container\", host: { attributes: { \"tabindex\": \"-1\" }, properties: { \"attr.aria-modal\": \"_config.ariaModal\", \"id\": \"_config.id\", \"attr.role\": \"_config.role\", \"attr.aria-labelledby\": \"_config.ariaLabel ? null : _ariaLabelledByQueue[0]\", \"attr.aria-label\": \"_config.ariaLabel\", \"attr.aria-describedby\": \"_config.ariaDescribedBy || null\", \"class._mat-animation-noopable\": \"!_animationsEnabled\", \"class.mat-mdc-dialog-container-with-actions\": \"_actionSectionCount > 0\" }, classAttribute: \"mat-mdc-dialog-container mdc-dialog\" }, usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-mdc-dialog-inner-container mdc-dialog__container\\\">\\n  <div class=\\\"mat-mdc-dialog-surface mdc-dialog__surface\\\">\\n    <ng-template cdkPortalOutlet />\\n  </div>\\n</div>\\n\", styles: [\".mat-mdc-dialog-container{width:100%;height:100%;display:block;box-sizing:border-box;max-height:inherit;min-height:inherit;min-width:inherit;max-width:inherit;outline:0}.cdk-overlay-pane.mat-mdc-dialog-panel{max-width:var(--mat-dialog-container-max-width, 80vw);min-width:var(--mat-dialog-container-min-width, 0)}@media(max-width: 599px){.cdk-overlay-pane.mat-mdc-dialog-panel{max-width:var(--mat-dialog-container-small-max-width, 80vw)}}.mat-mdc-dialog-inner-container{display:flex;flex-direction:row;align-items:center;justify-content:space-around;box-sizing:border-box;height:100%;opacity:0;transition:opacity linear var(--mat-dialog-transition-duration, 0ms);max-height:inherit;min-height:inherit;min-width:inherit;max-width:inherit}.mdc-dialog--closing .mat-mdc-dialog-inner-container{transition:opacity 75ms linear;transform:none}.mdc-dialog--open .mat-mdc-dialog-inner-container{opacity:1}._mat-animation-noopable .mat-mdc-dialog-inner-container{transition:none}.mat-mdc-dialog-surface{display:flex;flex-direction:column;flex-grow:0;flex-shrink:0;box-sizing:border-box;width:100%;height:100%;position:relative;overflow-y:auto;outline:0;transform:scale(0.8);transition:transform var(--mat-dialog-transition-duration, 0ms) cubic-bezier(0, 0, 0.2, 1);max-height:inherit;min-height:inherit;min-width:inherit;max-width:inherit;box-shadow:var(--mat-dialog-container-elevation-shadow, 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12));border-radius:var(--mdc-dialog-container-shape, 4px);background-color:var(--mdc-dialog-container-color, white)}[dir=rtl] .mat-mdc-dialog-surface{text-align:right}.mdc-dialog--open .mat-mdc-dialog-surface,.mdc-dialog--closing .mat-mdc-dialog-surface{transform:none}._mat-animation-noopable .mat-mdc-dialog-surface{transition:none}.mat-mdc-dialog-surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:2px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.mat-mdc-dialog-title{display:block;position:relative;flex-shrink:0;box-sizing:border-box;margin:0 0 1px;padding:var(--mat-dialog-headline-padding, 0 24px 9px)}.mat-mdc-dialog-title::before{display:inline-block;width:0;height:40px;content:\\\"\\\";vertical-align:0}[dir=rtl] .mat-mdc-dialog-title{text-align:right}.mat-mdc-dialog-container .mat-mdc-dialog-title{color:var(--mdc-dialog-subhead-color, rgba(0, 0, 0, 0.87));font-family:var(--mdc-dialog-subhead-font, Roboto, sans-serif);line-height:var(--mdc-dialog-subhead-line-height, 1.5rem);font-size:var(--mdc-dialog-subhead-size, 1rem);font-weight:var(--mdc-dialog-subhead-weight, 400);letter-spacing:var(--mdc-dialog-subhead-tracking, 0.03125em)}.mat-mdc-dialog-content{display:block;flex-grow:1;box-sizing:border-box;margin:0;overflow:auto;max-height:65vh}.mat-mdc-dialog-content>:first-child{margin-top:0}.mat-mdc-dialog-content>:last-child{margin-bottom:0}.mat-mdc-dialog-container .mat-mdc-dialog-content{color:var(--mdc-dialog-supporting-text-color, rgba(0, 0, 0, 0.6));font-family:var(--mdc-dialog-supporting-text-font, Roboto, sans-serif);line-height:var(--mdc-dialog-supporting-text-line-height, 1.5rem);font-size:var(--mdc-dialog-supporting-text-size, 1rem);font-weight:var(--mdc-dialog-supporting-text-weight, 400);letter-spacing:var(--mdc-dialog-supporting-text-tracking, 0.03125em)}.mat-mdc-dialog-container .mat-mdc-dialog-content{padding:var(--mat-dialog-content-padding, 20px 24px)}.mat-mdc-dialog-container-with-actions .mat-mdc-dialog-content{padding:var(--mat-dialog-with-actions-content-padding, 20px 24px)}.mat-mdc-dialog-container .mat-mdc-dialog-title+.mat-mdc-dialog-content{padding-top:0}.mat-mdc-dialog-actions{display:flex;position:relative;flex-shrink:0;flex-wrap:wrap;align-items:center;justify-content:flex-end;box-sizing:border-box;min-height:52px;margin:0;padding:8px;border-top:1px solid rgba(0,0,0,0);padding:var(--mat-dialog-actions-padding, 8px);justify-content:var(--mat-dialog-actions-alignment, start)}.cdk-high-contrast-active .mat-mdc-dialog-actions{border-top-color:CanvasText}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-start,.mat-mdc-dialog-actions[align=start]{justify-content:start}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-center,.mat-mdc-dialog-actions[align=center]{justify-content:center}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-end,.mat-mdc-dialog-actions[align=end]{justify-content:flex-end}.mat-mdc-dialog-actions .mat-button-base+.mat-button-base,.mat-mdc-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-mdc-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-mdc-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}.mat-mdc-dialog-component-host{display:contents}\"], dependencies: [{ kind: \"directive\", type: CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatDialogContainer, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-dialog-container', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, standalone: true, imports: [CdkPortalOutlet], host: {\n                        'class': 'mat-mdc-dialog-container mdc-dialog',\n                        'tabindex': '-1',\n                        '[attr.aria-modal]': '_config.ariaModal',\n                        '[id]': '_config.id',\n                        '[attr.role]': '_config.role',\n                        '[attr.aria-labelledby]': '_config.ariaLabel ? null : _ariaLabelledByQueue[0]',\n                        '[attr.aria-label]': '_config.ariaLabel',\n                        '[attr.aria-describedby]': '_config.ariaDescribedBy || null',\n                        '[class._mat-animation-noopable]': '!_animationsEnabled',\n                        '[class.mat-mdc-dialog-container-with-actions]': '_actionSectionCount > 0',\n                    }, template: \"<div class=\\\"mat-mdc-dialog-inner-container mdc-dialog__container\\\">\\n  <div class=\\\"mat-mdc-dialog-surface mdc-dialog__surface\\\">\\n    <ng-template cdkPortalOutlet />\\n  </div>\\n</div>\\n\", styles: [\".mat-mdc-dialog-container{width:100%;height:100%;display:block;box-sizing:border-box;max-height:inherit;min-height:inherit;min-width:inherit;max-width:inherit;outline:0}.cdk-overlay-pane.mat-mdc-dialog-panel{max-width:var(--mat-dialog-container-max-width, 80vw);min-width:var(--mat-dialog-container-min-width, 0)}@media(max-width: 599px){.cdk-overlay-pane.mat-mdc-dialog-panel{max-width:var(--mat-dialog-container-small-max-width, 80vw)}}.mat-mdc-dialog-inner-container{display:flex;flex-direction:row;align-items:center;justify-content:space-around;box-sizing:border-box;height:100%;opacity:0;transition:opacity linear var(--mat-dialog-transition-duration, 0ms);max-height:inherit;min-height:inherit;min-width:inherit;max-width:inherit}.mdc-dialog--closing .mat-mdc-dialog-inner-container{transition:opacity 75ms linear;transform:none}.mdc-dialog--open .mat-mdc-dialog-inner-container{opacity:1}._mat-animation-noopable .mat-mdc-dialog-inner-container{transition:none}.mat-mdc-dialog-surface{display:flex;flex-direction:column;flex-grow:0;flex-shrink:0;box-sizing:border-box;width:100%;height:100%;position:relative;overflow-y:auto;outline:0;transform:scale(0.8);transition:transform var(--mat-dialog-transition-duration, 0ms) cubic-bezier(0, 0, 0.2, 1);max-height:inherit;min-height:inherit;min-width:inherit;max-width:inherit;box-shadow:var(--mat-dialog-container-elevation-shadow, 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12));border-radius:var(--mdc-dialog-container-shape, 4px);background-color:var(--mdc-dialog-container-color, white)}[dir=rtl] .mat-mdc-dialog-surface{text-align:right}.mdc-dialog--open .mat-mdc-dialog-surface,.mdc-dialog--closing .mat-mdc-dialog-surface{transform:none}._mat-animation-noopable .mat-mdc-dialog-surface{transition:none}.mat-mdc-dialog-surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:2px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.mat-mdc-dialog-title{display:block;position:relative;flex-shrink:0;box-sizing:border-box;margin:0 0 1px;padding:var(--mat-dialog-headline-padding, 0 24px 9px)}.mat-mdc-dialog-title::before{display:inline-block;width:0;height:40px;content:\\\"\\\";vertical-align:0}[dir=rtl] .mat-mdc-dialog-title{text-align:right}.mat-mdc-dialog-container .mat-mdc-dialog-title{color:var(--mdc-dialog-subhead-color, rgba(0, 0, 0, 0.87));font-family:var(--mdc-dialog-subhead-font, Roboto, sans-serif);line-height:var(--mdc-dialog-subhead-line-height, 1.5rem);font-size:var(--mdc-dialog-subhead-size, 1rem);font-weight:var(--mdc-dialog-subhead-weight, 400);letter-spacing:var(--mdc-dialog-subhead-tracking, 0.03125em)}.mat-mdc-dialog-content{display:block;flex-grow:1;box-sizing:border-box;margin:0;overflow:auto;max-height:65vh}.mat-mdc-dialog-content>:first-child{margin-top:0}.mat-mdc-dialog-content>:last-child{margin-bottom:0}.mat-mdc-dialog-container .mat-mdc-dialog-content{color:var(--mdc-dialog-supporting-text-color, rgba(0, 0, 0, 0.6));font-family:var(--mdc-dialog-supporting-text-font, Roboto, sans-serif);line-height:var(--mdc-dialog-supporting-text-line-height, 1.5rem);font-size:var(--mdc-dialog-supporting-text-size, 1rem);font-weight:var(--mdc-dialog-supporting-text-weight, 400);letter-spacing:var(--mdc-dialog-supporting-text-tracking, 0.03125em)}.mat-mdc-dialog-container .mat-mdc-dialog-content{padding:var(--mat-dialog-content-padding, 20px 24px)}.mat-mdc-dialog-container-with-actions .mat-mdc-dialog-content{padding:var(--mat-dialog-with-actions-content-padding, 20px 24px)}.mat-mdc-dialog-container .mat-mdc-dialog-title+.mat-mdc-dialog-content{padding-top:0}.mat-mdc-dialog-actions{display:flex;position:relative;flex-shrink:0;flex-wrap:wrap;align-items:center;justify-content:flex-end;box-sizing:border-box;min-height:52px;margin:0;padding:8px;border-top:1px solid rgba(0,0,0,0);padding:var(--mat-dialog-actions-padding, 8px);justify-content:var(--mat-dialog-actions-alignment, start)}.cdk-high-contrast-active .mat-mdc-dialog-actions{border-top-color:CanvasText}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-start,.mat-mdc-dialog-actions[align=start]{justify-content:start}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-center,.mat-mdc-dialog-actions[align=center]{justify-content:center}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-end,.mat-mdc-dialog-actions[align=end]{justify-content:flex-end}.mat-mdc-dialog-actions .mat-button-base+.mat-button-base,.mat-mdc-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-mdc-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-mdc-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}.mat-mdc-dialog-component-host{display:contents}\"] }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i1.FocusTrapFactory }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: MatDialogConfig }, { type: i1.InteractivityChecker }, { type: i0.NgZone }, { type: i1$1.OverlayRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }, { type: i1.FocusMonitor }] });\nconst TRANSITION_DURATION_PROPERTY = '--mat-dialog-transition-duration';\n// TODO(mmalerba): Remove this function after animation durations are required\n//  to be numbers.\n/**\n * Converts a CSS time string to a number in ms. If the given time is already a\n * number, it is assumed to be in ms.\n */\nfunction parseCssTime(time) {\n    if (time == null) {\n        return null;\n    }\n    if (typeof time === 'number') {\n        return time;\n    }\n    if (time.endsWith('ms')) {\n        return coerceNumberProperty(time.substring(0, time.length - 2));\n    }\n    if (time.endsWith('s')) {\n        return coerceNumberProperty(time.substring(0, time.length - 1)) * 1000;\n    }\n    if (time === '0') {\n        return 0;\n    }\n    return null; // anything else is invalid.\n}\n\nvar MatDialogState;\n(function (MatDialogState) {\n    MatDialogState[MatDialogState[\"OPEN\"] = 0] = \"OPEN\";\n    MatDialogState[MatDialogState[\"CLOSING\"] = 1] = \"CLOSING\";\n    MatDialogState[MatDialogState[\"CLOSED\"] = 2] = \"CLOSED\";\n})(MatDialogState || (MatDialogState = {}));\n/**\n * Reference to a dialog opened via the MatDialog service.\n */\nclass MatDialogRef {\n    constructor(_ref, config, _containerInstance) {\n        this._ref = _ref;\n        this._containerInstance = _containerInstance;\n        /** Subject for notifying the user that the dialog has finished opening. */\n        this._afterOpened = new Subject();\n        /** Subject for notifying the user that the dialog has started closing. */\n        this._beforeClosed = new Subject();\n        /** Current state of the dialog. */\n        this._state = MatDialogState.OPEN;\n        this.disableClose = config.disableClose;\n        this.id = _ref.id;\n        // Used to target panels specifically tied to dialogs.\n        _ref.addPanelClass('mat-mdc-dialog-panel');\n        // Emit when opening animation completes\n        _containerInstance._animationStateChanged\n            .pipe(filter(event => event.state === 'opened'), take(1))\n            .subscribe(() => {\n            this._afterOpened.next();\n            this._afterOpened.complete();\n        });\n        // Dispose overlay when closing animation is complete\n        _containerInstance._animationStateChanged\n            .pipe(filter(event => event.state === 'closed'), take(1))\n            .subscribe(() => {\n            clearTimeout(this._closeFallbackTimeout);\n            this._finishDialogClose();\n        });\n        _ref.overlayRef.detachments().subscribe(() => {\n            this._beforeClosed.next(this._result);\n            this._beforeClosed.complete();\n            this._finishDialogClose();\n        });\n        merge(this.backdropClick(), this.keydownEvents().pipe(filter(event => event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event)))).subscribe(event => {\n            if (!this.disableClose) {\n                event.preventDefault();\n                _closeDialogVia(this, event.type === 'keydown' ? 'keyboard' : 'mouse');\n            }\n        });\n    }\n    /**\n     * Close the dialog.\n     * @param dialogResult Optional result to return to the dialog opener.\n     */\n    close(dialogResult) {\n        this._result = dialogResult;\n        // Transition the backdrop in parallel to the dialog.\n        this._containerInstance._animationStateChanged\n            .pipe(filter(event => event.state === 'closing'), take(1))\n            .subscribe(event => {\n            this._beforeClosed.next(dialogResult);\n            this._beforeClosed.complete();\n            this._ref.overlayRef.detachBackdrop();\n            // The logic that disposes of the overlay depends on the exit animation completing, however\n            // it isn't guaranteed if the parent view is destroyed while it's running. Add a fallback\n            // timeout which will clean everything up if the animation hasn't fired within the specified\n            // amount of time plus 100ms. We don't need to run this outside the NgZone, because for the\n            // vast majority of cases the timeout will have been cleared before it has the chance to fire.\n            this._closeFallbackTimeout = setTimeout(() => this._finishDialogClose(), event.totalTime + 100);\n        });\n        this._state = MatDialogState.CLOSING;\n        this._containerInstance._startExitAnimation();\n    }\n    /**\n     * Gets an observable that is notified when the dialog is finished opening.\n     */\n    afterOpened() {\n        return this._afterOpened;\n    }\n    /**\n     * Gets an observable that is notified when the dialog is finished closing.\n     */\n    afterClosed() {\n        return this._ref.closed;\n    }\n    /**\n     * Gets an observable that is notified when the dialog has started closing.\n     */\n    beforeClosed() {\n        return this._beforeClosed;\n    }\n    /**\n     * Gets an observable that emits when the overlay's backdrop has been clicked.\n     */\n    backdropClick() {\n        return this._ref.backdropClick;\n    }\n    /**\n     * Gets an observable that emits when keydown events are targeted on the overlay.\n     */\n    keydownEvents() {\n        return this._ref.keydownEvents;\n    }\n    /**\n     * Updates the dialog's position.\n     * @param position New dialog position.\n     */\n    updatePosition(position) {\n        let strategy = this._ref.config.positionStrategy;\n        if (position && (position.left || position.right)) {\n            position.left ? strategy.left(position.left) : strategy.right(position.right);\n        }\n        else {\n            strategy.centerHorizontally();\n        }\n        if (position && (position.top || position.bottom)) {\n            position.top ? strategy.top(position.top) : strategy.bottom(position.bottom);\n        }\n        else {\n            strategy.centerVertically();\n        }\n        this._ref.updatePosition();\n        return this;\n    }\n    /**\n     * Updates the dialog's width and height.\n     * @param width New width of the dialog.\n     * @param height New height of the dialog.\n     */\n    updateSize(width = '', height = '') {\n        this._ref.updateSize(width, height);\n        return this;\n    }\n    /** Add a CSS class or an array of classes to the overlay pane. */\n    addPanelClass(classes) {\n        this._ref.addPanelClass(classes);\n        return this;\n    }\n    /** Remove a CSS class or an array of classes from the overlay pane. */\n    removePanelClass(classes) {\n        this._ref.removePanelClass(classes);\n        return this;\n    }\n    /** Gets the current state of the dialog's lifecycle. */\n    getState() {\n        return this._state;\n    }\n    /**\n     * Finishes the dialog close by updating the state of the dialog\n     * and disposing the overlay.\n     */\n    _finishDialogClose() {\n        this._state = MatDialogState.CLOSED;\n        this._ref.close(this._result, { focusOrigin: this._closeInteractionType });\n        this.componentInstance = null;\n    }\n}\n/**\n * Closes the dialog with the specified interaction type. This is currently not part of\n * `MatDialogRef` as that would conflict with custom dialog ref mocks provided in tests.\n * More details. See: https://github.com/angular/components/pull/9257#issuecomment-651342226.\n */\n// TODO: Move this back into `MatDialogRef` when we provide an official mock dialog ref.\nfunction _closeDialogVia(ref, interactionType, result) {\n    ref._closeInteractionType = interactionType;\n    return ref.close(result);\n}\n\n/** Injection token that can be used to access the data that was passed in to a dialog. */\nconst MAT_DIALOG_DATA = new InjectionToken('MatMdcDialogData');\n/** Injection token that can be used to specify default dialog options. */\nconst MAT_DIALOG_DEFAULT_OPTIONS = new InjectionToken('mat-mdc-dialog-default-options');\n/** Injection token that determines the scroll handling while the dialog is open. */\nconst MAT_DIALOG_SCROLL_STRATEGY = new InjectionToken('mat-mdc-dialog-scroll-strategy', {\n    providedIn: 'root',\n    factory: () => {\n        const overlay = inject(Overlay);\n        return () => overlay.scrollStrategies.block();\n    },\n});\n/**\n * @docs-private\n * @deprecated No longer used. To be removed.\n * @breaking-change 19.0.0\n */\nfunction MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.block();\n}\n/**\n * @docs-private\n * @deprecated No longer used. To be removed.\n * @breaking-change 19.0.0\n */\nconst MAT_DIALOG_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_DIALOG_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n// Counter for unique dialog ids.\nlet uniqueId = 0;\n/**\n * Service to open Material Design modal dialogs.\n */\nclass MatDialog {\n    /** Keeps track of the currently-open dialogs. */\n    get openDialogs() {\n        return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel;\n    }\n    /** Stream that emits when a dialog has been opened. */\n    get afterOpened() {\n        return this._parentDialog ? this._parentDialog.afterOpened : this._afterOpenedAtThisLevel;\n    }\n    _getAfterAllClosed() {\n        const parent = this._parentDialog;\n        return parent ? parent._getAfterAllClosed() : this._afterAllClosedAtThisLevel;\n    }\n    constructor(_overlay, injector, \n    /**\n     * @deprecated `_location` parameter to be removed.\n     * @breaking-change 10.0.0\n     */\n    location, _defaultOptions, _scrollStrategy, _parentDialog, \n    /**\n     * @deprecated No longer used. To be removed.\n     * @breaking-change 15.0.0\n     */\n    _overlayContainer, \n    /**\n     * @deprecated No longer used. To be removed.\n     * @breaking-change 14.0.0\n     */\n    _animationMode) {\n        this._overlay = _overlay;\n        this._defaultOptions = _defaultOptions;\n        this._scrollStrategy = _scrollStrategy;\n        this._parentDialog = _parentDialog;\n        this._openDialogsAtThisLevel = [];\n        this._afterAllClosedAtThisLevel = new Subject();\n        this._afterOpenedAtThisLevel = new Subject();\n        this.dialogConfigClass = MatDialogConfig;\n        /**\n         * Stream that emits when all open dialog have finished closing.\n         * Will emit on subscribe if there are no open dialogs to begin with.\n         */\n        this.afterAllClosed = defer(() => this.openDialogs.length\n            ? this._getAfterAllClosed()\n            : this._getAfterAllClosed().pipe(startWith(undefined)));\n        this._dialog = injector.get(Dialog);\n        this._dialogRefConstructor = MatDialogRef;\n        this._dialogContainerType = MatDialogContainer;\n        this._dialogDataToken = MAT_DIALOG_DATA;\n    }\n    open(componentOrTemplateRef, config) {\n        let dialogRef;\n        config = { ...(this._defaultOptions || new MatDialogConfig()), ...config };\n        config.id = config.id || `mat-mdc-dialog-${uniqueId++}`;\n        config.scrollStrategy = config.scrollStrategy || this._scrollStrategy();\n        const cdkRef = this._dialog.open(componentOrTemplateRef, {\n            ...config,\n            positionStrategy: this._overlay.position().global().centerHorizontally().centerVertically(),\n            // Disable closing since we need to sync it up to the animation ourselves.\n            disableClose: true,\n            // Disable closing on destroy, because this service cleans up its open dialogs as well.\n            // We want to do the cleanup here, rather than the CDK service, because the CDK destroys\n            // the dialogs immediately whereas we want it to wait for the animations to finish.\n            closeOnDestroy: false,\n            // Disable closing on detachments so that we can sync up the animation.\n            // The Material dialog ref handles this manually.\n            closeOnOverlayDetachments: false,\n            container: {\n                type: this._dialogContainerType,\n                providers: () => [\n                    // Provide our config as the CDK config as well since it has the same interface as the\n                    // CDK one, but it contains the actual values passed in by the user for things like\n                    // `disableClose` which we disable for the CDK dialog since we handle it ourselves.\n                    { provide: this.dialogConfigClass, useValue: config },\n                    { provide: DialogConfig, useValue: config },\n                ],\n            },\n            templateContext: () => ({ dialogRef }),\n            providers: (ref, cdkConfig, dialogContainer) => {\n                dialogRef = new this._dialogRefConstructor(ref, config, dialogContainer);\n                dialogRef.updatePosition(config?.position);\n                return [\n                    { provide: this._dialogContainerType, useValue: dialogContainer },\n                    { provide: this._dialogDataToken, useValue: cdkConfig.data },\n                    { provide: this._dialogRefConstructor, useValue: dialogRef },\n                ];\n            },\n        });\n        // This can't be assigned in the `providers` callback, because\n        // the instance hasn't been assigned to the CDK ref yet.\n        dialogRef.componentRef = cdkRef.componentRef;\n        dialogRef.componentInstance = cdkRef.componentInstance;\n        this.openDialogs.push(dialogRef);\n        this.afterOpened.next(dialogRef);\n        dialogRef.afterClosed().subscribe(() => {\n            const index = this.openDialogs.indexOf(dialogRef);\n            if (index > -1) {\n                this.openDialogs.splice(index, 1);\n                if (!this.openDialogs.length) {\n                    this._getAfterAllClosed().next();\n                }\n            }\n        });\n        return dialogRef;\n    }\n    /**\n     * Closes all of the currently-open dialogs.\n     */\n    closeAll() {\n        this._closeDialogs(this.openDialogs);\n    }\n    /**\n     * Finds an open dialog by its id.\n     * @param id ID to use when looking up the dialog.\n     */\n    getDialogById(id) {\n        return this.openDialogs.find(dialog => dialog.id === id);\n    }\n    ngOnDestroy() {\n        // Only close the dialogs at this level on destroy\n        // since the parent service may still be active.\n        this._closeDialogs(this._openDialogsAtThisLevel);\n        this._afterAllClosedAtThisLevel.complete();\n        this._afterOpenedAtThisLevel.complete();\n    }\n    _closeDialogs(dialogs) {\n        let i = dialogs.length;\n        while (i--) {\n            dialogs[i].close();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatDialog, deps: [{ token: i1$1.Overlay }, { token: i0.Injector }, { token: i2.Location, optional: true }, { token: MAT_DIALOG_DEFAULT_OPTIONS, optional: true }, { token: MAT_DIALOG_SCROLL_STRATEGY }, { token: MatDialog, optional: true, skipSelf: true }, { token: i1$1.OverlayContainer }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatDialog, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatDialog, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: i1$1.Overlay }, { type: i0.Injector }, { type: i2.Location, decorators: [{\n                    type: Optional\n                }] }, { type: MatDialogConfig, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_DIALOG_DEFAULT_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_DIALOG_SCROLL_STRATEGY]\n                }] }, { type: MatDialog, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }, { type: i1$1.OverlayContainer }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }] });\n\n/** Counter used to generate unique IDs for dialog elements. */\nlet dialogElementUid = 0;\n/**\n * Button that will close the current dialog.\n */\nclass MatDialogClose {\n    constructor(\n    // The dialog title directive is always used in combination with a `MatDialogRef`.\n    // tslint:disable-next-line: lightweight-tokens\n    dialogRef, _elementRef, _dialog) {\n        this.dialogRef = dialogRef;\n        this._elementRef = _elementRef;\n        this._dialog = _dialog;\n        /** Default to \"button\" to prevents accidental form submits. */\n        this.type = 'button';\n    }\n    ngOnInit() {\n        if (!this.dialogRef) {\n            // When this directive is included in a dialog via TemplateRef (rather than being\n            // in a Component), the DialogRef isn't available via injection because embedded\n            // views cannot be given a custom injector. Instead, we look up the DialogRef by\n            // ID. This must occur in `onInit`, as the ID binding for the dialog container won't\n            // be resolved at constructor time.\n            this.dialogRef = getClosestDialog(this._elementRef, this._dialog.openDialogs);\n        }\n    }\n    ngOnChanges(changes) {\n        const proxiedChange = changes['_matDialogClose'] || changes['_matDialogCloseResult'];\n        if (proxiedChange) {\n            this.dialogResult = proxiedChange.currentValue;\n        }\n    }\n    _onButtonClick(event) {\n        // Determinate the focus origin using the click event, because using the FocusMonitor will\n        // result in incorrect origins. Most of the time, close buttons will be auto focused in the\n        // dialog, and therefore clicking the button won't result in a focus change. This means that\n        // the FocusMonitor won't detect any origin change, and will always output `program`.\n        _closeDialogVia(this.dialogRef, event.screenX === 0 && event.screenY === 0 ? 'keyboard' : 'mouse', this.dialogResult);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatDialogClose, deps: [{ token: MatDialogRef, optional: true }, { token: i0.ElementRef }, { token: MatDialog }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.1.0-next.3\", type: MatDialogClose, isStandalone: true, selector: \"[mat-dialog-close], [matDialogClose]\", inputs: { ariaLabel: [\"aria-label\", \"ariaLabel\"], type: \"type\", dialogResult: [\"mat-dialog-close\", \"dialogResult\"], _matDialogClose: [\"matDialogClose\", \"_matDialogClose\"] }, host: { listeners: { \"click\": \"_onButtonClick($event)\" }, properties: { \"attr.aria-label\": \"ariaLabel || null\", \"attr.type\": \"type\" } }, exportAs: [\"matDialogClose\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatDialogClose, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-dialog-close], [matDialogClose]',\n                    exportAs: 'matDialogClose',\n                    standalone: true,\n                    host: {\n                        '(click)': '_onButtonClick($event)',\n                        '[attr.aria-label]': 'ariaLabel || null',\n                        '[attr.type]': 'type',\n                    },\n                }]\n        }], ctorParameters: () => [{ type: MatDialogRef, decorators: [{\n                    type: Optional\n                }] }, { type: i0.ElementRef }, { type: MatDialog }], propDecorators: { ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], type: [{\n                type: Input\n            }], dialogResult: [{\n                type: Input,\n                args: ['mat-dialog-close']\n            }], _matDialogClose: [{\n                type: Input,\n                args: ['matDialogClose']\n            }] } });\nclass MatDialogLayoutSection {\n    constructor(\n    // The dialog title directive is always used in combination with a `MatDialogRef`.\n    // tslint:disable-next-line: lightweight-tokens\n    _dialogRef, _elementRef, _dialog) {\n        this._dialogRef = _dialogRef;\n        this._elementRef = _elementRef;\n        this._dialog = _dialog;\n    }\n    ngOnInit() {\n        if (!this._dialogRef) {\n            this._dialogRef = getClosestDialog(this._elementRef, this._dialog.openDialogs);\n        }\n        if (this._dialogRef) {\n            Promise.resolve().then(() => {\n                this._onAdd();\n            });\n        }\n    }\n    ngOnDestroy() {\n        // Note: we null check because there are some internal\n        // tests that are mocking out `MatDialogRef` incorrectly.\n        const instance = this._dialogRef?._containerInstance;\n        if (instance) {\n            Promise.resolve().then(() => {\n                this._onRemove();\n            });\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatDialogLayoutSection, deps: [{ token: MatDialogRef, optional: true }, { token: i0.ElementRef }, { token: MatDialog }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.1.0-next.3\", type: MatDialogLayoutSection, isStandalone: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatDialogLayoutSection, decorators: [{\n            type: Directive,\n            args: [{ standalone: true }]\n        }], ctorParameters: () => [{ type: MatDialogRef, decorators: [{\n                    type: Optional\n                }] }, { type: i0.ElementRef }, { type: MatDialog }] });\n/**\n * Title of a dialog element. Stays fixed to the top of the dialog when scrolling.\n */\nclass MatDialogTitle extends MatDialogLayoutSection {\n    constructor() {\n        super(...arguments);\n        this.id = `mat-mdc-dialog-title-${dialogElementUid++}`;\n    }\n    _onAdd() {\n        // Note: we null check the queue, because there are some internal\n        // tests that are mocking out `MatDialogRef` incorrectly.\n        this._dialogRef._containerInstance?._addAriaLabelledBy?.(this.id);\n    }\n    _onRemove() {\n        this._dialogRef?._containerInstance?._removeAriaLabelledBy?.(this.id);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatDialogTitle, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.1.0-next.3\", type: MatDialogTitle, isStandalone: true, selector: \"[mat-dialog-title], [matDialogTitle]\", inputs: { id: \"id\" }, host: { properties: { \"id\": \"id\" }, classAttribute: \"mat-mdc-dialog-title mdc-dialog__title\" }, exportAs: [\"matDialogTitle\"], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatDialogTitle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-dialog-title], [matDialogTitle]',\n                    exportAs: 'matDialogTitle',\n                    standalone: true,\n                    host: {\n                        'class': 'mat-mdc-dialog-title mdc-dialog__title',\n                        '[id]': 'id',\n                    },\n                }]\n        }], propDecorators: { id: [{\n                type: Input\n            }] } });\n/**\n * Scrollable content container of a dialog.\n */\nclass MatDialogContent {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatDialogContent, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.1.0-next.3\", type: MatDialogContent, isStandalone: true, selector: \"[mat-dialog-content], mat-dialog-content, [matDialogContent]\", host: { classAttribute: \"mat-mdc-dialog-content mdc-dialog__content\" }, hostDirectives: [{ directive: i3.CdkScrollable }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatDialogContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `[mat-dialog-content], mat-dialog-content, [matDialogContent]`,\n                    host: { 'class': 'mat-mdc-dialog-content mdc-dialog__content' },\n                    standalone: true,\n                    hostDirectives: [CdkScrollable],\n                }]\n        }] });\n/**\n * Container for the bottom action buttons in a dialog.\n * Stays fixed to the bottom when scrolling.\n */\nclass MatDialogActions extends MatDialogLayoutSection {\n    _onAdd() {\n        this._dialogRef._containerInstance?._updateActionSectionCount?.(1);\n    }\n    _onRemove() {\n        this._dialogRef._containerInstance?._updateActionSectionCount?.(-1);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatDialogActions, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.1.0-next.3\", type: MatDialogActions, isStandalone: true, selector: \"[mat-dialog-actions], mat-dialog-actions, [matDialogActions]\", inputs: { align: \"align\" }, host: { properties: { \"class.mat-mdc-dialog-actions-align-start\": \"align === \\\"start\\\"\", \"class.mat-mdc-dialog-actions-align-center\": \"align === \\\"center\\\"\", \"class.mat-mdc-dialog-actions-align-end\": \"align === \\\"end\\\"\" }, classAttribute: \"mat-mdc-dialog-actions mdc-dialog__actions\" }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatDialogActions, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `[mat-dialog-actions], mat-dialog-actions, [matDialogActions]`,\n                    standalone: true,\n                    host: {\n                        'class': 'mat-mdc-dialog-actions mdc-dialog__actions',\n                        '[class.mat-mdc-dialog-actions-align-start]': 'align === \"start\"',\n                        '[class.mat-mdc-dialog-actions-align-center]': 'align === \"center\"',\n                        '[class.mat-mdc-dialog-actions-align-end]': 'align === \"end\"',\n                    },\n                }]\n        }], propDecorators: { align: [{\n                type: Input\n            }] } });\n/**\n * Finds the closest MatDialogRef to an element by looking at the DOM.\n * @param element Element relative to which to look for a dialog.\n * @param openDialogs References to the currently-open dialogs.\n */\nfunction getClosestDialog(element, openDialogs) {\n    let parent = element.nativeElement.parentElement;\n    while (parent && !parent.classList.contains('mat-mdc-dialog-container')) {\n        parent = parent.parentElement;\n    }\n    return parent ? openDialogs.find(dialog => dialog.id === parent.id) : null;\n}\n\nconst DIRECTIVES = [\n    MatDialogContainer,\n    MatDialogClose,\n    MatDialogTitle,\n    MatDialogActions,\n    MatDialogContent,\n];\nclass MatDialogModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatDialogModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatDialogModule, imports: [DialogModule, OverlayModule, PortalModule, MatCommonModule, MatDialogContainer,\n            MatDialogClose,\n            MatDialogTitle,\n            MatDialogActions,\n            MatDialogContent], exports: [MatCommonModule, MatDialogContainer,\n            MatDialogClose,\n            MatDialogTitle,\n            MatDialogActions,\n            MatDialogContent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatDialogModule, providers: [MatDialog], imports: [DialogModule, OverlayModule, PortalModule, MatCommonModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatDialogModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [DialogModule, OverlayModule, PortalModule, MatCommonModule, ...DIRECTIVES],\n                    exports: [MatCommonModule, ...DIRECTIVES],\n                    providers: [MatDialog],\n                }]\n        }] });\n\n/**\n * Default parameters for the animation for backwards compatibility.\n * @docs-private\n */\nconst _defaultParams = {\n    params: { enterAnimationDuration: '150ms', exitAnimationDuration: '75ms' },\n};\n/**\n * Animations used by MatDialog.\n * @docs-private\n */\nconst matDialogAnimations = {\n    /** Animation that is applied on the dialog container by default. */\n    dialogContainer: trigger('dialogContainer', [\n        // Note: The `enter` animation transitions to `transform: none`, because for some reason\n        // specifying the transform explicitly, causes IE both to blur the dialog content and\n        // decimate the animation performance. Leaving it as `none` solves both issues.\n        state('void, exit', style({ opacity: 0, transform: 'scale(0.7)' })),\n        state('enter', style({ transform: 'none' })),\n        transition('* => enter', group([\n            animate('{{enterAnimationDuration}} cubic-bezier(0, 0, 0.2, 1)', style({ transform: 'none', opacity: 1 })),\n            query('@*', animateChild(), { optional: true }),\n        ]), _defaultParams),\n        transition('* => void, * => exit', group([\n            animate('{{exitAnimationDuration}} cubic-bezier(0.4, 0.0, 0.2, 1)', style({ opacity: 0 })),\n            query('@*', animateChild(), { optional: true }),\n        ]), _defaultParams),\n    ]),\n};\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DIALOG_DATA, MAT_DIALOG_DEFAULT_OPTIONS, MAT_DIALOG_SCROLL_STRATEGY, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY, MatDialog, MatDialogActions, MatDialogClose, MatDialogConfig, MatDialogContainer, MatDialogContent, MatDialogModule, MatDialogRef, MatDialogState, MatDialogTitle, _closeDialogVia, _defaultParams, matDialogAnimations };\n","import * as i1 from '@angular/cdk/platform';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, booleanAttribute, Directive, Input, numberAttribute, ANIMATION_MODULE_TYPE, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, NgModule } from '@angular/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { MatRippleLoader, MatCommonModule, MatRippleModule } from '@angular/material/core';\n\n/** Injection token that can be used to provide the default options the button component. */\nconst MAT_BUTTON_CONFIG = new InjectionToken('MAT_BUTTON_CONFIG');\n/** Shared host configuration for all buttons */\nconst MAT_BUTTON_HOST = {\n    '[attr.disabled]': '_getDisabledAttribute()',\n    '[attr.aria-disabled]': '_getAriaDisabled()',\n    '[class.mat-mdc-button-disabled]': 'disabled',\n    '[class.mat-mdc-button-disabled-interactive]': 'disabledInteractive',\n    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n    // MDC automatically applies the primary theme color to the button, but we want to support\n    // an unthemed version. If color is undefined, apply a CSS class that makes it easy to\n    // select and style this \"theme\".\n    '[class.mat-unthemed]': '!color',\n    // Add a class that applies to all buttons. This makes it easier to target if somebody\n    // wants to target all Material buttons.\n    '[class.mat-mdc-button-base]': 'true',\n    '[class]': 'color ? \"mat-\" + color : \"\"',\n};\n/** List of classes to add to buttons instances based on host attribute selector. */\nconst HOST_SELECTOR_MDC_CLASS_PAIR = [\n    {\n        attribute: 'mat-button',\n        mdcClasses: ['mdc-button', 'mat-mdc-button'],\n    },\n    {\n        attribute: 'mat-flat-button',\n        mdcClasses: ['mdc-button', 'mdc-button--unelevated', 'mat-mdc-unelevated-button'],\n    },\n    {\n        attribute: 'mat-raised-button',\n        mdcClasses: ['mdc-button', 'mdc-button--raised', 'mat-mdc-raised-button'],\n    },\n    {\n        attribute: 'mat-stroked-button',\n        mdcClasses: ['mdc-button', 'mdc-button--outlined', 'mat-mdc-outlined-button'],\n    },\n    {\n        attribute: 'mat-fab',\n        mdcClasses: ['mdc-fab', 'mat-mdc-fab-base', 'mat-mdc-fab'],\n    },\n    {\n        attribute: 'mat-mini-fab',\n        mdcClasses: ['mdc-fab', 'mat-mdc-fab-base', 'mdc-fab--mini', 'mat-mdc-mini-fab'],\n    },\n    {\n        attribute: 'mat-icon-button',\n        mdcClasses: ['mdc-icon-button', 'mat-mdc-icon-button'],\n    },\n];\n/** Base class for all buttons.  */\nclass MatButtonBase {\n    /**\n     * Reference to the MatRipple instance of the button.\n     * @deprecated Considered an implementation detail. To be removed.\n     * @breaking-change 17.0.0\n     */\n    get ripple() {\n        return this._rippleLoader?.getRipple(this._elementRef.nativeElement);\n    }\n    set ripple(v) {\n        this._rippleLoader?.attachRipple(this._elementRef.nativeElement, v);\n    }\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() {\n        return this._disableRipple;\n    }\n    set disableRipple(value) {\n        this._disableRipple = value;\n        this._updateRippleDisabled();\n    }\n    /** Whether the button is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        this._updateRippleDisabled();\n    }\n    constructor(_elementRef, _platform, _ngZone, _animationMode) {\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._animationMode = _animationMode;\n        this._focusMonitor = inject(FocusMonitor);\n        /**\n         * Handles the lazy creation of the MatButton ripple.\n         * Used to improve initial load time of large applications.\n         */\n        this._rippleLoader = inject(MatRippleLoader);\n        /** Whether this button is a FAB. Used to apply the correct class on the ripple. */\n        this._isFab = false;\n        this._disableRipple = false;\n        this._disabled = false;\n        const config = inject(MAT_BUTTON_CONFIG, { optional: true });\n        const element = _elementRef.nativeElement;\n        const classList = element.classList;\n        this.disabledInteractive = config?.disabledInteractive ?? false;\n        this.color = config?.color ?? null;\n        this._rippleLoader?.configureRipple(element, { className: 'mat-mdc-button-ripple' });\n        // For each of the variant selectors that is present in the button's host\n        // attributes, add the correct corresponding MDC classes.\n        for (const { attribute, mdcClasses } of HOST_SELECTOR_MDC_CLASS_PAIR) {\n            if (element.hasAttribute(attribute)) {\n                classList.add(...mdcClasses);\n            }\n        }\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._elementRef, true);\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._rippleLoader?.destroyRipple(this._elementRef.nativeElement);\n    }\n    /** Focuses the button. */\n    focus(origin = 'program', options) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._elementRef.nativeElement, origin, options);\n        }\n        else {\n            this._elementRef.nativeElement.focus(options);\n        }\n    }\n    _getAriaDisabled() {\n        if (this.ariaDisabled != null) {\n            return this.ariaDisabled;\n        }\n        return this.disabled && this.disabledInteractive ? true : null;\n    }\n    _getDisabledAttribute() {\n        return this.disabledInteractive || !this.disabled ? null : true;\n    }\n    _updateRippleDisabled() {\n        this._rippleLoader?.setDisabled(this._elementRef.nativeElement, this.disableRipple || this.disabled);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatButtonBase, deps: \"invalid\", target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"18.1.0-next.3\", type: MatButtonBase, inputs: { color: \"color\", disableRipple: [\"disableRipple\", \"disableRipple\", booleanAttribute], disabled: [\"disabled\", \"disabled\", booleanAttribute], ariaDisabled: [\"aria-disabled\", \"ariaDisabled\", booleanAttribute], disabledInteractive: [\"disabledInteractive\", \"disabledInteractive\", booleanAttribute] }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatButtonBase, decorators: [{\n            type: Directive\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i1.Platform }, { type: i0.NgZone }, { type: undefined }], propDecorators: { color: [{\n                type: Input\n            }], disableRipple: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], ariaDisabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute, alias: 'aria-disabled' }]\n            }], disabledInteractive: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }] } });\n/** Shared host configuration for buttons using the `<a>` tag. */\nconst MAT_ANCHOR_HOST = {\n    '[attr.disabled]': '_getDisabledAttribute()',\n    '[class.mat-mdc-button-disabled]': 'disabled',\n    '[class.mat-mdc-button-disabled-interactive]': 'disabledInteractive',\n    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n    // Note that we ignore the user-specified tabindex when it's disabled for\n    // consistency with the `mat-button` applied on native buttons where even\n    // though they have an index, they're not tabbable.\n    '[attr.tabindex]': 'disabled && !disabledInteractive ? -1 : tabIndex',\n    '[attr.aria-disabled]': '_getDisabledAttribute()',\n    // MDC automatically applies the primary theme color to the button, but we want to support\n    // an unthemed version. If color is undefined, apply a CSS class that makes it easy to\n    // select and style this \"theme\".\n    '[class.mat-unthemed]': '!color',\n    // Add a class that applies to all buttons. This makes it easier to target if somebody\n    // wants to target all Material buttons.\n    '[class.mat-mdc-button-base]': 'true',\n    '[class]': 'color ? \"mat-\" + color : \"\"',\n};\n/**\n * Anchor button base.\n */\nclass MatAnchorBase extends MatButtonBase {\n    constructor(elementRef, platform, ngZone, animationMode) {\n        super(elementRef, platform, ngZone, animationMode);\n        this._haltDisabledEvents = (event) => {\n            // A disabled button shouldn't apply any actions\n            if (this.disabled) {\n                event.preventDefault();\n                event.stopImmediatePropagation();\n            }\n        };\n    }\n    ngOnInit() {\n        this._ngZone.runOutsideAngular(() => {\n            this._elementRef.nativeElement.addEventListener('click', this._haltDisabledEvents);\n        });\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._elementRef.nativeElement.removeEventListener('click', this._haltDisabledEvents);\n    }\n    _getAriaDisabled() {\n        return this.ariaDisabled == null ? this.disabled : this.ariaDisabled;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatAnchorBase, deps: \"invalid\", target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"18.1.0-next.3\", type: MatAnchorBase, inputs: { tabIndex: [\"tabIndex\", \"tabIndex\", (value) => {\n                    return value == null ? undefined : numberAttribute(value);\n                }] }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatAnchorBase, decorators: [{\n            type: Directive\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i1.Platform }, { type: i0.NgZone }, { type: undefined }], propDecorators: { tabIndex: [{\n                type: Input,\n                args: [{\n                        transform: (value) => {\n                            return value == null ? undefined : numberAttribute(value);\n                        },\n                    }]\n            }] } });\n\n/**\n * Material Design button component. Users interact with a button to perform an action.\n * See https://material.io/components/buttons\n *\n * The `MatButton` class applies to native button elements and captures the appearances for\n * \"text button\", \"outlined button\", and \"contained button\" per the Material Design\n * specification. `MatButton` additionally captures an additional \"flat\" appearance, which matches\n * \"contained\" but without elevation.\n */\nclass MatButton extends MatButtonBase {\n    constructor(elementRef, platform, ngZone, animationMode) {\n        super(elementRef, platform, ngZone, animationMode);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatButton, deps: [{ token: i0.ElementRef }, { token: i1.Platform }, { token: i0.NgZone }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.1.0-next.3\", type: MatButton, isStandalone: true, selector: \"\\n    button[mat-button], button[mat-raised-button], button[mat-flat-button],\\n    button[mat-stroked-button]\\n  \", host: { properties: { \"attr.disabled\": \"_getDisabledAttribute()\", \"attr.aria-disabled\": \"_getAriaDisabled()\", \"class.mat-mdc-button-disabled\": \"disabled\", \"class.mat-mdc-button-disabled-interactive\": \"disabledInteractive\", \"class._mat-animation-noopable\": \"_animationMode === \\\"NoopAnimations\\\"\", \"class.mat-unthemed\": \"!color\", \"class.mat-mdc-button-base\": \"true\", \"class\": \"color ? \\\"mat-\\\" + color : \\\"\\\"\" } }, exportAs: [\"matButton\"], usesInheritance: true, ngImport: i0, template: \"<span\\n    class=\\\"mat-mdc-button-persistent-ripple\\\"\\n    [class.mdc-button__ripple]=\\\"!_isFab\\\"\\n    [class.mdc-fab__ripple]=\\\"_isFab\\\"></span>\\n\\n<ng-content select=\\\".material-icons:not([iconPositionEnd]), mat-icon:not([iconPositionEnd]), [matButtonIcon]:not([iconPositionEnd])\\\">\\n</ng-content>\\n\\n<span class=\\\"mdc-button__label\\\"><ng-content></ng-content></span>\\n\\n<ng-content select=\\\".material-icons[iconPositionEnd], mat-icon[iconPositionEnd], [matButtonIcon][iconPositionEnd]\\\">\\n</ng-content>\\n\\n<!--\\n  The indicator can't be directly on the button, because MDC uses ::before for high contrast\\n  indication and it can't be on the ripple, because it has a border radius and overflow: hidden.\\n-->\\n<span class=\\\"mat-mdc-focus-indicator\\\"></span>\\n\\n<span class=\\\"mat-mdc-button-touch-target\\\"></span>\\n\", styles: [\".mat-mdc-button-base{text-decoration:none}.mdc-button{-webkit-user-select:none;user-select:none;position:relative;display:inline-flex;align-items:center;justify-content:center;box-sizing:border-box;min-width:64px;border:none;outline:none;line-height:inherit;-webkit-appearance:none;overflow:visible;vertical-align:middle;background:rgba(0,0,0,0);padding:0 8px}.mdc-button::-moz-focus-inner{padding:0;border:0}.mdc-button:active{outline:none}.mdc-button:hover{cursor:pointer}.mdc-button:disabled{cursor:default;pointer-events:none}.mdc-button[hidden]{display:none}.mdc-button .mdc-button__label{position:relative}.mat-mdc-button{padding:0 var(--mat-text-button-horizontal-padding, 8px);height:var(--mdc-text-button-container-height);font-family:var(--mdc-text-button-label-text-font);font-size:var(--mdc-text-button-label-text-size);letter-spacing:var(--mdc-text-button-label-text-tracking);text-transform:var(--mdc-text-button-label-text-transform);font-weight:var(--mdc-text-button-label-text-weight)}.mat-mdc-button:has(.material-icons,mat-icon,[matButtonIcon]){padding:0 var(--mat-text-button-with-icon-horizontal-padding, 8px)}.mat-mdc-button>.mat-icon{margin-right:var(--mat-text-button-icon-spacing, 8px);margin-left:var(--mat-text-button-icon-offset, 0)}[dir=rtl] .mat-mdc-button>.mat-icon{margin-right:var(--mat-text-button-icon-offset, 0);margin-left:var(--mat-text-button-icon-spacing, 8px)}.mat-mdc-button .mdc-button__label+.mat-icon{margin-right:var(--mat-text-button-icon-offset, 0);margin-left:var(--mat-text-button-icon-spacing, 8px)}[dir=rtl] .mat-mdc-button .mdc-button__label+.mat-icon{margin-right:var(--mat-text-button-icon-spacing, 8px);margin-left:var(--mat-text-button-icon-offset, 0)}.mat-mdc-button .mat-ripple-element{background-color:var(--mat-text-button-ripple-color)}.mat-mdc-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-text-button-state-layer-color)}.mat-mdc-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-text-button-disabled-state-layer-color)}.mat-mdc-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-text-button-hover-state-layer-opacity)}.mat-mdc-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-text-button-focus-state-layer-opacity)}.mat-mdc-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-text-button-pressed-state-layer-opacity)}.mat-mdc-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%);display:var(--mat-text-button-touch-target-display)}.mat-mdc-button,.mat-mdc-button .mdc-button__ripple{border-radius:var(--mdc-text-button-container-shape)}.mat-mdc-button:not(:disabled){color:var(--mdc-text-button-label-text-color)}.mat-mdc-button[disabled],.mat-mdc-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-text-button-disabled-label-text-color)}.mat-mdc-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-unelevated-button{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 var(--mat-filled-button-horizontal-padding, 16px);height:var(--mdc-filled-button-container-height);font-family:var(--mdc-filled-button-label-text-font);font-size:var(--mdc-filled-button-label-text-size);letter-spacing:var(--mdc-filled-button-label-text-tracking);text-transform:var(--mdc-filled-button-label-text-transform);font-weight:var(--mdc-filled-button-label-text-weight)}.mat-mdc-unelevated-button>.mat-icon{margin-right:var(--mat-filled-button-icon-spacing, 8px);margin-left:var(--mat-filled-button-icon-offset, -4px)}[dir=rtl] .mat-mdc-unelevated-button>.mat-icon{margin-right:var(--mat-filled-button-icon-offset, -4px);margin-left:var(--mat-filled-button-icon-spacing, 8px)}.mat-mdc-unelevated-button .mdc-button__label+.mat-icon{margin-right:var(--mat-filled-button-icon-offset, -4px);margin-left:var(--mat-filled-button-icon-spacing, 8px)}[dir=rtl] .mat-mdc-unelevated-button .mdc-button__label+.mat-icon{margin-right:var(--mat-filled-button-icon-spacing, 8px);margin-left:var(--mat-filled-button-icon-offset, -4px)}.mat-mdc-unelevated-button .mat-ripple-element{background-color:var(--mat-filled-button-ripple-color)}.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-filled-button-state-layer-color)}.mat-mdc-unelevated-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-filled-button-disabled-state-layer-color)}.mat-mdc-unelevated-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-filled-button-hover-state-layer-opacity)}.mat-mdc-unelevated-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-filled-button-focus-state-layer-opacity)}.mat-mdc-unelevated-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-filled-button-pressed-state-layer-opacity)}.mat-mdc-unelevated-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%);display:var(--mat-filled-button-touch-target-display)}.mat-mdc-unelevated-button:not(:disabled){color:var(--mdc-filled-button-label-text-color);background-color:var(--mdc-filled-button-container-color)}.mat-mdc-unelevated-button,.mat-mdc-unelevated-button .mdc-button__ripple{border-radius:var(--mdc-filled-button-container-shape)}.mat-mdc-unelevated-button[disabled],.mat-mdc-unelevated-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-filled-button-disabled-label-text-color);background-color:var(--mdc-filled-button-disabled-container-color)}.mat-mdc-unelevated-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-raised-button{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 var(--mat-protected-button-horizontal-padding, 16px);box-shadow:var(--mdc-protected-button-container-elevation-shadow);height:var(--mdc-protected-button-container-height);font-family:var(--mdc-protected-button-label-text-font);font-size:var(--mdc-protected-button-label-text-size);letter-spacing:var(--mdc-protected-button-label-text-tracking);text-transform:var(--mdc-protected-button-label-text-transform);font-weight:var(--mdc-protected-button-label-text-weight)}.mat-mdc-raised-button>.mat-icon{margin-right:var(--mat-protected-button-icon-spacing, 8px);margin-left:var(--mat-protected-button-icon-offset, -4px)}[dir=rtl] .mat-mdc-raised-button>.mat-icon{margin-right:var(--mat-protected-button-icon-offset, -4px);margin-left:var(--mat-protected-button-icon-spacing, 8px)}.mat-mdc-raised-button .mdc-button__label+.mat-icon{margin-right:var(--mat-protected-button-icon-offset, -4px);margin-left:var(--mat-protected-button-icon-spacing, 8px)}[dir=rtl] .mat-mdc-raised-button .mdc-button__label+.mat-icon{margin-right:var(--mat-protected-button-icon-spacing, 8px);margin-left:var(--mat-protected-button-icon-offset, -4px)}.mat-mdc-raised-button .mat-ripple-element{background-color:var(--mat-protected-button-ripple-color)}.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-protected-button-state-layer-color)}.mat-mdc-raised-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-protected-button-disabled-state-layer-color)}.mat-mdc-raised-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-protected-button-hover-state-layer-opacity)}.mat-mdc-raised-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-protected-button-focus-state-layer-opacity)}.mat-mdc-raised-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-protected-button-pressed-state-layer-opacity)}.mat-mdc-raised-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%);display:var(--mat-protected-button-touch-target-display)}.mat-mdc-raised-button:not(:disabled){color:var(--mdc-protected-button-label-text-color);background-color:var(--mdc-protected-button-container-color)}.mat-mdc-raised-button,.mat-mdc-raised-button .mdc-button__ripple{border-radius:var(--mdc-protected-button-container-shape)}.mat-mdc-raised-button:hover{box-shadow:var(--mdc-protected-button-hover-container-elevation-shadow)}.mat-mdc-raised-button:focus{box-shadow:var(--mdc-protected-button-focus-container-elevation-shadow)}.mat-mdc-raised-button:active,.mat-mdc-raised-button:focus:active{box-shadow:var(--mdc-protected-button-pressed-container-elevation-shadow)}.mat-mdc-raised-button[disabled],.mat-mdc-raised-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-protected-button-disabled-label-text-color);background-color:var(--mdc-protected-button-disabled-container-color)}.mat-mdc-raised-button[disabled].mat-mdc-button-disabled,.mat-mdc-raised-button.mat-mdc-button-disabled.mat-mdc-button-disabled{box-shadow:var(--mdc-protected-button-disabled-container-elevation-shadow)}.mat-mdc-raised-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-outlined-button{border-style:solid;transition:border 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 var(--mat-outlined-button-horizontal-padding, 15px);height:var(--mdc-outlined-button-container-height);font-family:var(--mdc-outlined-button-label-text-font);font-size:var(--mdc-outlined-button-label-text-size);letter-spacing:var(--mdc-outlined-button-label-text-tracking);text-transform:var(--mdc-outlined-button-label-text-transform);font-weight:var(--mdc-outlined-button-label-text-weight);border-radius:var(--mdc-outlined-button-container-shape);border-width:var(--mdc-outlined-button-outline-width)}.mat-mdc-outlined-button>.mat-icon{margin-right:var(--mat-outlined-button-icon-spacing, 8px);margin-left:var(--mat-outlined-button-icon-offset, -4px)}[dir=rtl] .mat-mdc-outlined-button>.mat-icon{margin-right:var(--mat-outlined-button-icon-offset, -4px);margin-left:var(--mat-outlined-button-icon-spacing, 8px)}.mat-mdc-outlined-button .mdc-button__label+.mat-icon{margin-right:var(--mat-outlined-button-icon-offset, -4px);margin-left:var(--mat-outlined-button-icon-spacing, 8px)}[dir=rtl] .mat-mdc-outlined-button .mdc-button__label+.mat-icon{margin-right:var(--mat-outlined-button-icon-spacing, 8px);margin-left:var(--mat-outlined-button-icon-offset, -4px)}.mat-mdc-outlined-button .mat-ripple-element{background-color:var(--mat-outlined-button-ripple-color)}.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-outlined-button-state-layer-color)}.mat-mdc-outlined-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-outlined-button-disabled-state-layer-color)}.mat-mdc-outlined-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-outlined-button-hover-state-layer-opacity)}.mat-mdc-outlined-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-outlined-button-focus-state-layer-opacity)}.mat-mdc-outlined-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-outlined-button-pressed-state-layer-opacity)}.mat-mdc-outlined-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%);display:var(--mat-outlined-button-touch-target-display)}.mat-mdc-outlined-button:not(:disabled){color:var(--mdc-outlined-button-label-text-color);border-color:var(--mdc-outlined-button-outline-color)}.mat-mdc-outlined-button[disabled],.mat-mdc-outlined-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-outlined-button-disabled-label-text-color);border-color:var(--mdc-outlined-button-disabled-outline-color)}.mat-mdc-outlined-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-outlined-button .mdc-button__ripple{border-width:var(--mdc-outlined-button-outline-width);border-style:solid;border-color:rgba(0,0,0,0)}.mat-mdc-button,.mat-mdc-unelevated-button,.mat-mdc-raised-button,.mat-mdc-outlined-button{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-button .mat-mdc-button-ripple,.mat-mdc-button .mat-mdc-button-persistent-ripple,.mat-mdc-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button .mat-mdc-button-ripple,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button .mat-mdc-button-ripple,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-button .mat-mdc-button-ripple,.mat-mdc-unelevated-button .mat-mdc-button-ripple,.mat-mdc-raised-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{content:\\\"\\\";opacity:0}.mat-mdc-button .mdc-button__label,.mat-mdc-button .mat-icon,.mat-mdc-unelevated-button .mdc-button__label,.mat-mdc-unelevated-button .mat-icon,.mat-mdc-raised-button .mdc-button__label,.mat-mdc-raised-button .mat-icon,.mat-mdc-outlined-button .mdc-button__label,.mat-mdc-outlined-button .mat-icon{z-index:1;position:relative}.mat-mdc-button .mat-mdc-focus-indicator,.mat-mdc-unelevated-button .mat-mdc-focus-indicator,.mat-mdc-raised-button .mat-mdc-focus-indicator,.mat-mdc-outlined-button .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-unelevated-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-raised-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-outlined-button:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-button._mat-animation-noopable,.mat-mdc-unelevated-button._mat-animation-noopable,.mat-mdc-raised-button._mat-animation-noopable,.mat-mdc-outlined-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-button>.mat-icon,.mat-mdc-unelevated-button>.mat-icon,.mat-mdc-raised-button>.mat-icon,.mat-mdc-outlined-button>.mat-icon{display:inline-block;position:relative;vertical-align:top;font-size:1.125rem;height:1.125rem;width:1.125rem}.mat-mdc-outlined-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mdc-button__ripple{top:-1px;left:-1px;bottom:-1px;right:-1px}.mat-mdc-unelevated-button .mat-mdc-focus-indicator::before,.mat-mdc-raised-button .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-outlined-button .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 3px)*-1)}\", \".cdk-high-contrast-active .mat-mdc-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-unelevated-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-raised-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-outlined-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-icon-button{outline:solid 1px}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatButton, decorators: [{\n            type: Component,\n            args: [{ selector: `\n    button[mat-button], button[mat-raised-button], button[mat-flat-button],\n    button[mat-stroked-button]\n  `, host: MAT_BUTTON_HOST, exportAs: 'matButton', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, template: \"<span\\n    class=\\\"mat-mdc-button-persistent-ripple\\\"\\n    [class.mdc-button__ripple]=\\\"!_isFab\\\"\\n    [class.mdc-fab__ripple]=\\\"_isFab\\\"></span>\\n\\n<ng-content select=\\\".material-icons:not([iconPositionEnd]), mat-icon:not([iconPositionEnd]), [matButtonIcon]:not([iconPositionEnd])\\\">\\n</ng-content>\\n\\n<span class=\\\"mdc-button__label\\\"><ng-content></ng-content></span>\\n\\n<ng-content select=\\\".material-icons[iconPositionEnd], mat-icon[iconPositionEnd], [matButtonIcon][iconPositionEnd]\\\">\\n</ng-content>\\n\\n<!--\\n  The indicator can't be directly on the button, because MDC uses ::before for high contrast\\n  indication and it can't be on the ripple, because it has a border radius and overflow: hidden.\\n-->\\n<span class=\\\"mat-mdc-focus-indicator\\\"></span>\\n\\n<span class=\\\"mat-mdc-button-touch-target\\\"></span>\\n\", styles: [\".mat-mdc-button-base{text-decoration:none}.mdc-button{-webkit-user-select:none;user-select:none;position:relative;display:inline-flex;align-items:center;justify-content:center;box-sizing:border-box;min-width:64px;border:none;outline:none;line-height:inherit;-webkit-appearance:none;overflow:visible;vertical-align:middle;background:rgba(0,0,0,0);padding:0 8px}.mdc-button::-moz-focus-inner{padding:0;border:0}.mdc-button:active{outline:none}.mdc-button:hover{cursor:pointer}.mdc-button:disabled{cursor:default;pointer-events:none}.mdc-button[hidden]{display:none}.mdc-button .mdc-button__label{position:relative}.mat-mdc-button{padding:0 var(--mat-text-button-horizontal-padding, 8px);height:var(--mdc-text-button-container-height);font-family:var(--mdc-text-button-label-text-font);font-size:var(--mdc-text-button-label-text-size);letter-spacing:var(--mdc-text-button-label-text-tracking);text-transform:var(--mdc-text-button-label-text-transform);font-weight:var(--mdc-text-button-label-text-weight)}.mat-mdc-button:has(.material-icons,mat-icon,[matButtonIcon]){padding:0 var(--mat-text-button-with-icon-horizontal-padding, 8px)}.mat-mdc-button>.mat-icon{margin-right:var(--mat-text-button-icon-spacing, 8px);margin-left:var(--mat-text-button-icon-offset, 0)}[dir=rtl] .mat-mdc-button>.mat-icon{margin-right:var(--mat-text-button-icon-offset, 0);margin-left:var(--mat-text-button-icon-spacing, 8px)}.mat-mdc-button .mdc-button__label+.mat-icon{margin-right:var(--mat-text-button-icon-offset, 0);margin-left:var(--mat-text-button-icon-spacing, 8px)}[dir=rtl] .mat-mdc-button .mdc-button__label+.mat-icon{margin-right:var(--mat-text-button-icon-spacing, 8px);margin-left:var(--mat-text-button-icon-offset, 0)}.mat-mdc-button .mat-ripple-element{background-color:var(--mat-text-button-ripple-color)}.mat-mdc-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-text-button-state-layer-color)}.mat-mdc-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-text-button-disabled-state-layer-color)}.mat-mdc-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-text-button-hover-state-layer-opacity)}.mat-mdc-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-text-button-focus-state-layer-opacity)}.mat-mdc-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-text-button-pressed-state-layer-opacity)}.mat-mdc-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%);display:var(--mat-text-button-touch-target-display)}.mat-mdc-button,.mat-mdc-button .mdc-button__ripple{border-radius:var(--mdc-text-button-container-shape)}.mat-mdc-button:not(:disabled){color:var(--mdc-text-button-label-text-color)}.mat-mdc-button[disabled],.mat-mdc-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-text-button-disabled-label-text-color)}.mat-mdc-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-unelevated-button{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 var(--mat-filled-button-horizontal-padding, 16px);height:var(--mdc-filled-button-container-height);font-family:var(--mdc-filled-button-label-text-font);font-size:var(--mdc-filled-button-label-text-size);letter-spacing:var(--mdc-filled-button-label-text-tracking);text-transform:var(--mdc-filled-button-label-text-transform);font-weight:var(--mdc-filled-button-label-text-weight)}.mat-mdc-unelevated-button>.mat-icon{margin-right:var(--mat-filled-button-icon-spacing, 8px);margin-left:var(--mat-filled-button-icon-offset, -4px)}[dir=rtl] .mat-mdc-unelevated-button>.mat-icon{margin-right:var(--mat-filled-button-icon-offset, -4px);margin-left:var(--mat-filled-button-icon-spacing, 8px)}.mat-mdc-unelevated-button .mdc-button__label+.mat-icon{margin-right:var(--mat-filled-button-icon-offset, -4px);margin-left:var(--mat-filled-button-icon-spacing, 8px)}[dir=rtl] .mat-mdc-unelevated-button .mdc-button__label+.mat-icon{margin-right:var(--mat-filled-button-icon-spacing, 8px);margin-left:var(--mat-filled-button-icon-offset, -4px)}.mat-mdc-unelevated-button .mat-ripple-element{background-color:var(--mat-filled-button-ripple-color)}.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-filled-button-state-layer-color)}.mat-mdc-unelevated-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-filled-button-disabled-state-layer-color)}.mat-mdc-unelevated-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-filled-button-hover-state-layer-opacity)}.mat-mdc-unelevated-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-filled-button-focus-state-layer-opacity)}.mat-mdc-unelevated-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-filled-button-pressed-state-layer-opacity)}.mat-mdc-unelevated-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%);display:var(--mat-filled-button-touch-target-display)}.mat-mdc-unelevated-button:not(:disabled){color:var(--mdc-filled-button-label-text-color);background-color:var(--mdc-filled-button-container-color)}.mat-mdc-unelevated-button,.mat-mdc-unelevated-button .mdc-button__ripple{border-radius:var(--mdc-filled-button-container-shape)}.mat-mdc-unelevated-button[disabled],.mat-mdc-unelevated-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-filled-button-disabled-label-text-color);background-color:var(--mdc-filled-button-disabled-container-color)}.mat-mdc-unelevated-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-raised-button{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 var(--mat-protected-button-horizontal-padding, 16px);box-shadow:var(--mdc-protected-button-container-elevation-shadow);height:var(--mdc-protected-button-container-height);font-family:var(--mdc-protected-button-label-text-font);font-size:var(--mdc-protected-button-label-text-size);letter-spacing:var(--mdc-protected-button-label-text-tracking);text-transform:var(--mdc-protected-button-label-text-transform);font-weight:var(--mdc-protected-button-label-text-weight)}.mat-mdc-raised-button>.mat-icon{margin-right:var(--mat-protected-button-icon-spacing, 8px);margin-left:var(--mat-protected-button-icon-offset, -4px)}[dir=rtl] .mat-mdc-raised-button>.mat-icon{margin-right:var(--mat-protected-button-icon-offset, -4px);margin-left:var(--mat-protected-button-icon-spacing, 8px)}.mat-mdc-raised-button .mdc-button__label+.mat-icon{margin-right:var(--mat-protected-button-icon-offset, -4px);margin-left:var(--mat-protected-button-icon-spacing, 8px)}[dir=rtl] .mat-mdc-raised-button .mdc-button__label+.mat-icon{margin-right:var(--mat-protected-button-icon-spacing, 8px);margin-left:var(--mat-protected-button-icon-offset, -4px)}.mat-mdc-raised-button .mat-ripple-element{background-color:var(--mat-protected-button-ripple-color)}.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-protected-button-state-layer-color)}.mat-mdc-raised-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-protected-button-disabled-state-layer-color)}.mat-mdc-raised-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-protected-button-hover-state-layer-opacity)}.mat-mdc-raised-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-protected-button-focus-state-layer-opacity)}.mat-mdc-raised-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-protected-button-pressed-state-layer-opacity)}.mat-mdc-raised-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%);display:var(--mat-protected-button-touch-target-display)}.mat-mdc-raised-button:not(:disabled){color:var(--mdc-protected-button-label-text-color);background-color:var(--mdc-protected-button-container-color)}.mat-mdc-raised-button,.mat-mdc-raised-button .mdc-button__ripple{border-radius:var(--mdc-protected-button-container-shape)}.mat-mdc-raised-button:hover{box-shadow:var(--mdc-protected-button-hover-container-elevation-shadow)}.mat-mdc-raised-button:focus{box-shadow:var(--mdc-protected-button-focus-container-elevation-shadow)}.mat-mdc-raised-button:active,.mat-mdc-raised-button:focus:active{box-shadow:var(--mdc-protected-button-pressed-container-elevation-shadow)}.mat-mdc-raised-button[disabled],.mat-mdc-raised-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-protected-button-disabled-label-text-color);background-color:var(--mdc-protected-button-disabled-container-color)}.mat-mdc-raised-button[disabled].mat-mdc-button-disabled,.mat-mdc-raised-button.mat-mdc-button-disabled.mat-mdc-button-disabled{box-shadow:var(--mdc-protected-button-disabled-container-elevation-shadow)}.mat-mdc-raised-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-outlined-button{border-style:solid;transition:border 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 var(--mat-outlined-button-horizontal-padding, 15px);height:var(--mdc-outlined-button-container-height);font-family:var(--mdc-outlined-button-label-text-font);font-size:var(--mdc-outlined-button-label-text-size);letter-spacing:var(--mdc-outlined-button-label-text-tracking);text-transform:var(--mdc-outlined-button-label-text-transform);font-weight:var(--mdc-outlined-button-label-text-weight);border-radius:var(--mdc-outlined-button-container-shape);border-width:var(--mdc-outlined-button-outline-width)}.mat-mdc-outlined-button>.mat-icon{margin-right:var(--mat-outlined-button-icon-spacing, 8px);margin-left:var(--mat-outlined-button-icon-offset, -4px)}[dir=rtl] .mat-mdc-outlined-button>.mat-icon{margin-right:var(--mat-outlined-button-icon-offset, -4px);margin-left:var(--mat-outlined-button-icon-spacing, 8px)}.mat-mdc-outlined-button .mdc-button__label+.mat-icon{margin-right:var(--mat-outlined-button-icon-offset, -4px);margin-left:var(--mat-outlined-button-icon-spacing, 8px)}[dir=rtl] .mat-mdc-outlined-button .mdc-button__label+.mat-icon{margin-right:var(--mat-outlined-button-icon-spacing, 8px);margin-left:var(--mat-outlined-button-icon-offset, -4px)}.mat-mdc-outlined-button .mat-ripple-element{background-color:var(--mat-outlined-button-ripple-color)}.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-outlined-button-state-layer-color)}.mat-mdc-outlined-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-outlined-button-disabled-state-layer-color)}.mat-mdc-outlined-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-outlined-button-hover-state-layer-opacity)}.mat-mdc-outlined-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-outlined-button-focus-state-layer-opacity)}.mat-mdc-outlined-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-outlined-button-pressed-state-layer-opacity)}.mat-mdc-outlined-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%);display:var(--mat-outlined-button-touch-target-display)}.mat-mdc-outlined-button:not(:disabled){color:var(--mdc-outlined-button-label-text-color);border-color:var(--mdc-outlined-button-outline-color)}.mat-mdc-outlined-button[disabled],.mat-mdc-outlined-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-outlined-button-disabled-label-text-color);border-color:var(--mdc-outlined-button-disabled-outline-color)}.mat-mdc-outlined-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-outlined-button .mdc-button__ripple{border-width:var(--mdc-outlined-button-outline-width);border-style:solid;border-color:rgba(0,0,0,0)}.mat-mdc-button,.mat-mdc-unelevated-button,.mat-mdc-raised-button,.mat-mdc-outlined-button{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-button .mat-mdc-button-ripple,.mat-mdc-button .mat-mdc-button-persistent-ripple,.mat-mdc-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button .mat-mdc-button-ripple,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button .mat-mdc-button-ripple,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-button .mat-mdc-button-ripple,.mat-mdc-unelevated-button .mat-mdc-button-ripple,.mat-mdc-raised-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{content:\\\"\\\";opacity:0}.mat-mdc-button .mdc-button__label,.mat-mdc-button .mat-icon,.mat-mdc-unelevated-button .mdc-button__label,.mat-mdc-unelevated-button .mat-icon,.mat-mdc-raised-button .mdc-button__label,.mat-mdc-raised-button .mat-icon,.mat-mdc-outlined-button .mdc-button__label,.mat-mdc-outlined-button .mat-icon{z-index:1;position:relative}.mat-mdc-button .mat-mdc-focus-indicator,.mat-mdc-unelevated-button .mat-mdc-focus-indicator,.mat-mdc-raised-button .mat-mdc-focus-indicator,.mat-mdc-outlined-button .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-unelevated-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-raised-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-outlined-button:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-button._mat-animation-noopable,.mat-mdc-unelevated-button._mat-animation-noopable,.mat-mdc-raised-button._mat-animation-noopable,.mat-mdc-outlined-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-button>.mat-icon,.mat-mdc-unelevated-button>.mat-icon,.mat-mdc-raised-button>.mat-icon,.mat-mdc-outlined-button>.mat-icon{display:inline-block;position:relative;vertical-align:top;font-size:1.125rem;height:1.125rem;width:1.125rem}.mat-mdc-outlined-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mdc-button__ripple{top:-1px;left:-1px;bottom:-1px;right:-1px}.mat-mdc-unelevated-button .mat-mdc-focus-indicator::before,.mat-mdc-raised-button .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-outlined-button .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 3px)*-1)}\", \".cdk-high-contrast-active .mat-mdc-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-unelevated-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-raised-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-outlined-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-icon-button{outline:solid 1px}\"] }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i1.Platform }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }] });\n/**\n * Material Design button component for anchor elements. Anchor elements are used to provide\n * links for the user to navigate across different routes or pages.\n * See https://material.io/components/buttons\n *\n * The `MatAnchor` class applies to native anchor elements and captures the appearances for\n * \"text button\", \"outlined button\", and \"contained button\" per the Material Design\n * specification. `MatAnchor` additionally captures an additional \"flat\" appearance, which matches\n * \"contained\" but without elevation.\n */\nclass MatAnchor extends MatAnchorBase {\n    constructor(elementRef, platform, ngZone, animationMode) {\n        super(elementRef, platform, ngZone, animationMode);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatAnchor, deps: [{ token: i0.ElementRef }, { token: i1.Platform }, { token: i0.NgZone }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.1.0-next.3\", type: MatAnchor, isStandalone: true, selector: \"a[mat-button], a[mat-raised-button], a[mat-flat-button], a[mat-stroked-button]\", host: { properties: { \"attr.disabled\": \"_getDisabledAttribute()\", \"class.mat-mdc-button-disabled\": \"disabled\", \"class.mat-mdc-button-disabled-interactive\": \"disabledInteractive\", \"class._mat-animation-noopable\": \"_animationMode === \\\"NoopAnimations\\\"\", \"attr.tabindex\": \"disabled && !disabledInteractive ? -1 : tabIndex\", \"attr.aria-disabled\": \"_getDisabledAttribute()\", \"class.mat-unthemed\": \"!color\", \"class.mat-mdc-button-base\": \"true\", \"class\": \"color ? \\\"mat-\\\" + color : \\\"\\\"\" } }, exportAs: [\"matButton\", \"matAnchor\"], usesInheritance: true, ngImport: i0, template: \"<span\\n    class=\\\"mat-mdc-button-persistent-ripple\\\"\\n    [class.mdc-button__ripple]=\\\"!_isFab\\\"\\n    [class.mdc-fab__ripple]=\\\"_isFab\\\"></span>\\n\\n<ng-content select=\\\".material-icons:not([iconPositionEnd]), mat-icon:not([iconPositionEnd]), [matButtonIcon]:not([iconPositionEnd])\\\">\\n</ng-content>\\n\\n<span class=\\\"mdc-button__label\\\"><ng-content></ng-content></span>\\n\\n<ng-content select=\\\".material-icons[iconPositionEnd], mat-icon[iconPositionEnd], [matButtonIcon][iconPositionEnd]\\\">\\n</ng-content>\\n\\n<!--\\n  The indicator can't be directly on the button, because MDC uses ::before for high contrast\\n  indication and it can't be on the ripple, because it has a border radius and overflow: hidden.\\n-->\\n<span class=\\\"mat-mdc-focus-indicator\\\"></span>\\n\\n<span class=\\\"mat-mdc-button-touch-target\\\"></span>\\n\", styles: [\".mat-mdc-button-base{text-decoration:none}.mdc-button{-webkit-user-select:none;user-select:none;position:relative;display:inline-flex;align-items:center;justify-content:center;box-sizing:border-box;min-width:64px;border:none;outline:none;line-height:inherit;-webkit-appearance:none;overflow:visible;vertical-align:middle;background:rgba(0,0,0,0);padding:0 8px}.mdc-button::-moz-focus-inner{padding:0;border:0}.mdc-button:active{outline:none}.mdc-button:hover{cursor:pointer}.mdc-button:disabled{cursor:default;pointer-events:none}.mdc-button[hidden]{display:none}.mdc-button .mdc-button__label{position:relative}.mat-mdc-button{padding:0 var(--mat-text-button-horizontal-padding, 8px);height:var(--mdc-text-button-container-height);font-family:var(--mdc-text-button-label-text-font);font-size:var(--mdc-text-button-label-text-size);letter-spacing:var(--mdc-text-button-label-text-tracking);text-transform:var(--mdc-text-button-label-text-transform);font-weight:var(--mdc-text-button-label-text-weight)}.mat-mdc-button:has(.material-icons,mat-icon,[matButtonIcon]){padding:0 var(--mat-text-button-with-icon-horizontal-padding, 8px)}.mat-mdc-button>.mat-icon{margin-right:var(--mat-text-button-icon-spacing, 8px);margin-left:var(--mat-text-button-icon-offset, 0)}[dir=rtl] .mat-mdc-button>.mat-icon{margin-right:var(--mat-text-button-icon-offset, 0);margin-left:var(--mat-text-button-icon-spacing, 8px)}.mat-mdc-button .mdc-button__label+.mat-icon{margin-right:var(--mat-text-button-icon-offset, 0);margin-left:var(--mat-text-button-icon-spacing, 8px)}[dir=rtl] .mat-mdc-button .mdc-button__label+.mat-icon{margin-right:var(--mat-text-button-icon-spacing, 8px);margin-left:var(--mat-text-button-icon-offset, 0)}.mat-mdc-button .mat-ripple-element{background-color:var(--mat-text-button-ripple-color)}.mat-mdc-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-text-button-state-layer-color)}.mat-mdc-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-text-button-disabled-state-layer-color)}.mat-mdc-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-text-button-hover-state-layer-opacity)}.mat-mdc-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-text-button-focus-state-layer-opacity)}.mat-mdc-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-text-button-pressed-state-layer-opacity)}.mat-mdc-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%);display:var(--mat-text-button-touch-target-display)}.mat-mdc-button,.mat-mdc-button .mdc-button__ripple{border-radius:var(--mdc-text-button-container-shape)}.mat-mdc-button:not(:disabled){color:var(--mdc-text-button-label-text-color)}.mat-mdc-button[disabled],.mat-mdc-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-text-button-disabled-label-text-color)}.mat-mdc-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-unelevated-button{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 var(--mat-filled-button-horizontal-padding, 16px);height:var(--mdc-filled-button-container-height);font-family:var(--mdc-filled-button-label-text-font);font-size:var(--mdc-filled-button-label-text-size);letter-spacing:var(--mdc-filled-button-label-text-tracking);text-transform:var(--mdc-filled-button-label-text-transform);font-weight:var(--mdc-filled-button-label-text-weight)}.mat-mdc-unelevated-button>.mat-icon{margin-right:var(--mat-filled-button-icon-spacing, 8px);margin-left:var(--mat-filled-button-icon-offset, -4px)}[dir=rtl] .mat-mdc-unelevated-button>.mat-icon{margin-right:var(--mat-filled-button-icon-offset, -4px);margin-left:var(--mat-filled-button-icon-spacing, 8px)}.mat-mdc-unelevated-button .mdc-button__label+.mat-icon{margin-right:var(--mat-filled-button-icon-offset, -4px);margin-left:var(--mat-filled-button-icon-spacing, 8px)}[dir=rtl] .mat-mdc-unelevated-button .mdc-button__label+.mat-icon{margin-right:var(--mat-filled-button-icon-spacing, 8px);margin-left:var(--mat-filled-button-icon-offset, -4px)}.mat-mdc-unelevated-button .mat-ripple-element{background-color:var(--mat-filled-button-ripple-color)}.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-filled-button-state-layer-color)}.mat-mdc-unelevated-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-filled-button-disabled-state-layer-color)}.mat-mdc-unelevated-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-filled-button-hover-state-layer-opacity)}.mat-mdc-unelevated-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-filled-button-focus-state-layer-opacity)}.mat-mdc-unelevated-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-filled-button-pressed-state-layer-opacity)}.mat-mdc-unelevated-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%);display:var(--mat-filled-button-touch-target-display)}.mat-mdc-unelevated-button:not(:disabled){color:var(--mdc-filled-button-label-text-color);background-color:var(--mdc-filled-button-container-color)}.mat-mdc-unelevated-button,.mat-mdc-unelevated-button .mdc-button__ripple{border-radius:var(--mdc-filled-button-container-shape)}.mat-mdc-unelevated-button[disabled],.mat-mdc-unelevated-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-filled-button-disabled-label-text-color);background-color:var(--mdc-filled-button-disabled-container-color)}.mat-mdc-unelevated-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-raised-button{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 var(--mat-protected-button-horizontal-padding, 16px);box-shadow:var(--mdc-protected-button-container-elevation-shadow);height:var(--mdc-protected-button-container-height);font-family:var(--mdc-protected-button-label-text-font);font-size:var(--mdc-protected-button-label-text-size);letter-spacing:var(--mdc-protected-button-label-text-tracking);text-transform:var(--mdc-protected-button-label-text-transform);font-weight:var(--mdc-protected-button-label-text-weight)}.mat-mdc-raised-button>.mat-icon{margin-right:var(--mat-protected-button-icon-spacing, 8px);margin-left:var(--mat-protected-button-icon-offset, -4px)}[dir=rtl] .mat-mdc-raised-button>.mat-icon{margin-right:var(--mat-protected-button-icon-offset, -4px);margin-left:var(--mat-protected-button-icon-spacing, 8px)}.mat-mdc-raised-button .mdc-button__label+.mat-icon{margin-right:var(--mat-protected-button-icon-offset, -4px);margin-left:var(--mat-protected-button-icon-spacing, 8px)}[dir=rtl] .mat-mdc-raised-button .mdc-button__label+.mat-icon{margin-right:var(--mat-protected-button-icon-spacing, 8px);margin-left:var(--mat-protected-button-icon-offset, -4px)}.mat-mdc-raised-button .mat-ripple-element{background-color:var(--mat-protected-button-ripple-color)}.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-protected-button-state-layer-color)}.mat-mdc-raised-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-protected-button-disabled-state-layer-color)}.mat-mdc-raised-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-protected-button-hover-state-layer-opacity)}.mat-mdc-raised-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-protected-button-focus-state-layer-opacity)}.mat-mdc-raised-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-protected-button-pressed-state-layer-opacity)}.mat-mdc-raised-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%);display:var(--mat-protected-button-touch-target-display)}.mat-mdc-raised-button:not(:disabled){color:var(--mdc-protected-button-label-text-color);background-color:var(--mdc-protected-button-container-color)}.mat-mdc-raised-button,.mat-mdc-raised-button .mdc-button__ripple{border-radius:var(--mdc-protected-button-container-shape)}.mat-mdc-raised-button:hover{box-shadow:var(--mdc-protected-button-hover-container-elevation-shadow)}.mat-mdc-raised-button:focus{box-shadow:var(--mdc-protected-button-focus-container-elevation-shadow)}.mat-mdc-raised-button:active,.mat-mdc-raised-button:focus:active{box-shadow:var(--mdc-protected-button-pressed-container-elevation-shadow)}.mat-mdc-raised-button[disabled],.mat-mdc-raised-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-protected-button-disabled-label-text-color);background-color:var(--mdc-protected-button-disabled-container-color)}.mat-mdc-raised-button[disabled].mat-mdc-button-disabled,.mat-mdc-raised-button.mat-mdc-button-disabled.mat-mdc-button-disabled{box-shadow:var(--mdc-protected-button-disabled-container-elevation-shadow)}.mat-mdc-raised-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-outlined-button{border-style:solid;transition:border 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 var(--mat-outlined-button-horizontal-padding, 15px);height:var(--mdc-outlined-button-container-height);font-family:var(--mdc-outlined-button-label-text-font);font-size:var(--mdc-outlined-button-label-text-size);letter-spacing:var(--mdc-outlined-button-label-text-tracking);text-transform:var(--mdc-outlined-button-label-text-transform);font-weight:var(--mdc-outlined-button-label-text-weight);border-radius:var(--mdc-outlined-button-container-shape);border-width:var(--mdc-outlined-button-outline-width)}.mat-mdc-outlined-button>.mat-icon{margin-right:var(--mat-outlined-button-icon-spacing, 8px);margin-left:var(--mat-outlined-button-icon-offset, -4px)}[dir=rtl] .mat-mdc-outlined-button>.mat-icon{margin-right:var(--mat-outlined-button-icon-offset, -4px);margin-left:var(--mat-outlined-button-icon-spacing, 8px)}.mat-mdc-outlined-button .mdc-button__label+.mat-icon{margin-right:var(--mat-outlined-button-icon-offset, -4px);margin-left:var(--mat-outlined-button-icon-spacing, 8px)}[dir=rtl] .mat-mdc-outlined-button .mdc-button__label+.mat-icon{margin-right:var(--mat-outlined-button-icon-spacing, 8px);margin-left:var(--mat-outlined-button-icon-offset, -4px)}.mat-mdc-outlined-button .mat-ripple-element{background-color:var(--mat-outlined-button-ripple-color)}.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-outlined-button-state-layer-color)}.mat-mdc-outlined-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-outlined-button-disabled-state-layer-color)}.mat-mdc-outlined-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-outlined-button-hover-state-layer-opacity)}.mat-mdc-outlined-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-outlined-button-focus-state-layer-opacity)}.mat-mdc-outlined-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-outlined-button-pressed-state-layer-opacity)}.mat-mdc-outlined-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%);display:var(--mat-outlined-button-touch-target-display)}.mat-mdc-outlined-button:not(:disabled){color:var(--mdc-outlined-button-label-text-color);border-color:var(--mdc-outlined-button-outline-color)}.mat-mdc-outlined-button[disabled],.mat-mdc-outlined-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-outlined-button-disabled-label-text-color);border-color:var(--mdc-outlined-button-disabled-outline-color)}.mat-mdc-outlined-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-outlined-button .mdc-button__ripple{border-width:var(--mdc-outlined-button-outline-width);border-style:solid;border-color:rgba(0,0,0,0)}.mat-mdc-button,.mat-mdc-unelevated-button,.mat-mdc-raised-button,.mat-mdc-outlined-button{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-button .mat-mdc-button-ripple,.mat-mdc-button .mat-mdc-button-persistent-ripple,.mat-mdc-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button .mat-mdc-button-ripple,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button .mat-mdc-button-ripple,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-button .mat-mdc-button-ripple,.mat-mdc-unelevated-button .mat-mdc-button-ripple,.mat-mdc-raised-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{content:\\\"\\\";opacity:0}.mat-mdc-button .mdc-button__label,.mat-mdc-button .mat-icon,.mat-mdc-unelevated-button .mdc-button__label,.mat-mdc-unelevated-button .mat-icon,.mat-mdc-raised-button .mdc-button__label,.mat-mdc-raised-button .mat-icon,.mat-mdc-outlined-button .mdc-button__label,.mat-mdc-outlined-button .mat-icon{z-index:1;position:relative}.mat-mdc-button .mat-mdc-focus-indicator,.mat-mdc-unelevated-button .mat-mdc-focus-indicator,.mat-mdc-raised-button .mat-mdc-focus-indicator,.mat-mdc-outlined-button .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-unelevated-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-raised-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-outlined-button:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-button._mat-animation-noopable,.mat-mdc-unelevated-button._mat-animation-noopable,.mat-mdc-raised-button._mat-animation-noopable,.mat-mdc-outlined-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-button>.mat-icon,.mat-mdc-unelevated-button>.mat-icon,.mat-mdc-raised-button>.mat-icon,.mat-mdc-outlined-button>.mat-icon{display:inline-block;position:relative;vertical-align:top;font-size:1.125rem;height:1.125rem;width:1.125rem}.mat-mdc-outlined-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mdc-button__ripple{top:-1px;left:-1px;bottom:-1px;right:-1px}.mat-mdc-unelevated-button .mat-mdc-focus-indicator::before,.mat-mdc-raised-button .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-outlined-button .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 3px)*-1)}\", \".cdk-high-contrast-active .mat-mdc-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-unelevated-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-raised-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-outlined-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-icon-button{outline:solid 1px}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatAnchor, decorators: [{\n            type: Component,\n            args: [{ selector: `a[mat-button], a[mat-raised-button], a[mat-flat-button], a[mat-stroked-button]`, exportAs: 'matButton, matAnchor', host: MAT_ANCHOR_HOST, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, template: \"<span\\n    class=\\\"mat-mdc-button-persistent-ripple\\\"\\n    [class.mdc-button__ripple]=\\\"!_isFab\\\"\\n    [class.mdc-fab__ripple]=\\\"_isFab\\\"></span>\\n\\n<ng-content select=\\\".material-icons:not([iconPositionEnd]), mat-icon:not([iconPositionEnd]), [matButtonIcon]:not([iconPositionEnd])\\\">\\n</ng-content>\\n\\n<span class=\\\"mdc-button__label\\\"><ng-content></ng-content></span>\\n\\n<ng-content select=\\\".material-icons[iconPositionEnd], mat-icon[iconPositionEnd], [matButtonIcon][iconPositionEnd]\\\">\\n</ng-content>\\n\\n<!--\\n  The indicator can't be directly on the button, because MDC uses ::before for high contrast\\n  indication and it can't be on the ripple, because it has a border radius and overflow: hidden.\\n-->\\n<span class=\\\"mat-mdc-focus-indicator\\\"></span>\\n\\n<span class=\\\"mat-mdc-button-touch-target\\\"></span>\\n\", styles: [\".mat-mdc-button-base{text-decoration:none}.mdc-button{-webkit-user-select:none;user-select:none;position:relative;display:inline-flex;align-items:center;justify-content:center;box-sizing:border-box;min-width:64px;border:none;outline:none;line-height:inherit;-webkit-appearance:none;overflow:visible;vertical-align:middle;background:rgba(0,0,0,0);padding:0 8px}.mdc-button::-moz-focus-inner{padding:0;border:0}.mdc-button:active{outline:none}.mdc-button:hover{cursor:pointer}.mdc-button:disabled{cursor:default;pointer-events:none}.mdc-button[hidden]{display:none}.mdc-button .mdc-button__label{position:relative}.mat-mdc-button{padding:0 var(--mat-text-button-horizontal-padding, 8px);height:var(--mdc-text-button-container-height);font-family:var(--mdc-text-button-label-text-font);font-size:var(--mdc-text-button-label-text-size);letter-spacing:var(--mdc-text-button-label-text-tracking);text-transform:var(--mdc-text-button-label-text-transform);font-weight:var(--mdc-text-button-label-text-weight)}.mat-mdc-button:has(.material-icons,mat-icon,[matButtonIcon]){padding:0 var(--mat-text-button-with-icon-horizontal-padding, 8px)}.mat-mdc-button>.mat-icon{margin-right:var(--mat-text-button-icon-spacing, 8px);margin-left:var(--mat-text-button-icon-offset, 0)}[dir=rtl] .mat-mdc-button>.mat-icon{margin-right:var(--mat-text-button-icon-offset, 0);margin-left:var(--mat-text-button-icon-spacing, 8px)}.mat-mdc-button .mdc-button__label+.mat-icon{margin-right:var(--mat-text-button-icon-offset, 0);margin-left:var(--mat-text-button-icon-spacing, 8px)}[dir=rtl] .mat-mdc-button .mdc-button__label+.mat-icon{margin-right:var(--mat-text-button-icon-spacing, 8px);margin-left:var(--mat-text-button-icon-offset, 0)}.mat-mdc-button .mat-ripple-element{background-color:var(--mat-text-button-ripple-color)}.mat-mdc-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-text-button-state-layer-color)}.mat-mdc-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-text-button-disabled-state-layer-color)}.mat-mdc-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-text-button-hover-state-layer-opacity)}.mat-mdc-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-text-button-focus-state-layer-opacity)}.mat-mdc-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-text-button-pressed-state-layer-opacity)}.mat-mdc-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%);display:var(--mat-text-button-touch-target-display)}.mat-mdc-button,.mat-mdc-button .mdc-button__ripple{border-radius:var(--mdc-text-button-container-shape)}.mat-mdc-button:not(:disabled){color:var(--mdc-text-button-label-text-color)}.mat-mdc-button[disabled],.mat-mdc-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-text-button-disabled-label-text-color)}.mat-mdc-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-unelevated-button{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 var(--mat-filled-button-horizontal-padding, 16px);height:var(--mdc-filled-button-container-height);font-family:var(--mdc-filled-button-label-text-font);font-size:var(--mdc-filled-button-label-text-size);letter-spacing:var(--mdc-filled-button-label-text-tracking);text-transform:var(--mdc-filled-button-label-text-transform);font-weight:var(--mdc-filled-button-label-text-weight)}.mat-mdc-unelevated-button>.mat-icon{margin-right:var(--mat-filled-button-icon-spacing, 8px);margin-left:var(--mat-filled-button-icon-offset, -4px)}[dir=rtl] .mat-mdc-unelevated-button>.mat-icon{margin-right:var(--mat-filled-button-icon-offset, -4px);margin-left:var(--mat-filled-button-icon-spacing, 8px)}.mat-mdc-unelevated-button .mdc-button__label+.mat-icon{margin-right:var(--mat-filled-button-icon-offset, -4px);margin-left:var(--mat-filled-button-icon-spacing, 8px)}[dir=rtl] .mat-mdc-unelevated-button .mdc-button__label+.mat-icon{margin-right:var(--mat-filled-button-icon-spacing, 8px);margin-left:var(--mat-filled-button-icon-offset, -4px)}.mat-mdc-unelevated-button .mat-ripple-element{background-color:var(--mat-filled-button-ripple-color)}.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-filled-button-state-layer-color)}.mat-mdc-unelevated-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-filled-button-disabled-state-layer-color)}.mat-mdc-unelevated-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-filled-button-hover-state-layer-opacity)}.mat-mdc-unelevated-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-filled-button-focus-state-layer-opacity)}.mat-mdc-unelevated-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-filled-button-pressed-state-layer-opacity)}.mat-mdc-unelevated-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%);display:var(--mat-filled-button-touch-target-display)}.mat-mdc-unelevated-button:not(:disabled){color:var(--mdc-filled-button-label-text-color);background-color:var(--mdc-filled-button-container-color)}.mat-mdc-unelevated-button,.mat-mdc-unelevated-button .mdc-button__ripple{border-radius:var(--mdc-filled-button-container-shape)}.mat-mdc-unelevated-button[disabled],.mat-mdc-unelevated-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-filled-button-disabled-label-text-color);background-color:var(--mdc-filled-button-disabled-container-color)}.mat-mdc-unelevated-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-raised-button{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 var(--mat-protected-button-horizontal-padding, 16px);box-shadow:var(--mdc-protected-button-container-elevation-shadow);height:var(--mdc-protected-button-container-height);font-family:var(--mdc-protected-button-label-text-font);font-size:var(--mdc-protected-button-label-text-size);letter-spacing:var(--mdc-protected-button-label-text-tracking);text-transform:var(--mdc-protected-button-label-text-transform);font-weight:var(--mdc-protected-button-label-text-weight)}.mat-mdc-raised-button>.mat-icon{margin-right:var(--mat-protected-button-icon-spacing, 8px);margin-left:var(--mat-protected-button-icon-offset, -4px)}[dir=rtl] .mat-mdc-raised-button>.mat-icon{margin-right:var(--mat-protected-button-icon-offset, -4px);margin-left:var(--mat-protected-button-icon-spacing, 8px)}.mat-mdc-raised-button .mdc-button__label+.mat-icon{margin-right:var(--mat-protected-button-icon-offset, -4px);margin-left:var(--mat-protected-button-icon-spacing, 8px)}[dir=rtl] .mat-mdc-raised-button .mdc-button__label+.mat-icon{margin-right:var(--mat-protected-button-icon-spacing, 8px);margin-left:var(--mat-protected-button-icon-offset, -4px)}.mat-mdc-raised-button .mat-ripple-element{background-color:var(--mat-protected-button-ripple-color)}.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-protected-button-state-layer-color)}.mat-mdc-raised-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-protected-button-disabled-state-layer-color)}.mat-mdc-raised-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-protected-button-hover-state-layer-opacity)}.mat-mdc-raised-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-protected-button-focus-state-layer-opacity)}.mat-mdc-raised-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-protected-button-pressed-state-layer-opacity)}.mat-mdc-raised-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%);display:var(--mat-protected-button-touch-target-display)}.mat-mdc-raised-button:not(:disabled){color:var(--mdc-protected-button-label-text-color);background-color:var(--mdc-protected-button-container-color)}.mat-mdc-raised-button,.mat-mdc-raised-button .mdc-button__ripple{border-radius:var(--mdc-protected-button-container-shape)}.mat-mdc-raised-button:hover{box-shadow:var(--mdc-protected-button-hover-container-elevation-shadow)}.mat-mdc-raised-button:focus{box-shadow:var(--mdc-protected-button-focus-container-elevation-shadow)}.mat-mdc-raised-button:active,.mat-mdc-raised-button:focus:active{box-shadow:var(--mdc-protected-button-pressed-container-elevation-shadow)}.mat-mdc-raised-button[disabled],.mat-mdc-raised-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-protected-button-disabled-label-text-color);background-color:var(--mdc-protected-button-disabled-container-color)}.mat-mdc-raised-button[disabled].mat-mdc-button-disabled,.mat-mdc-raised-button.mat-mdc-button-disabled.mat-mdc-button-disabled{box-shadow:var(--mdc-protected-button-disabled-container-elevation-shadow)}.mat-mdc-raised-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-outlined-button{border-style:solid;transition:border 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 var(--mat-outlined-button-horizontal-padding, 15px);height:var(--mdc-outlined-button-container-height);font-family:var(--mdc-outlined-button-label-text-font);font-size:var(--mdc-outlined-button-label-text-size);letter-spacing:var(--mdc-outlined-button-label-text-tracking);text-transform:var(--mdc-outlined-button-label-text-transform);font-weight:var(--mdc-outlined-button-label-text-weight);border-radius:var(--mdc-outlined-button-container-shape);border-width:var(--mdc-outlined-button-outline-width)}.mat-mdc-outlined-button>.mat-icon{margin-right:var(--mat-outlined-button-icon-spacing, 8px);margin-left:var(--mat-outlined-button-icon-offset, -4px)}[dir=rtl] .mat-mdc-outlined-button>.mat-icon{margin-right:var(--mat-outlined-button-icon-offset, -4px);margin-left:var(--mat-outlined-button-icon-spacing, 8px)}.mat-mdc-outlined-button .mdc-button__label+.mat-icon{margin-right:var(--mat-outlined-button-icon-offset, -4px);margin-left:var(--mat-outlined-button-icon-spacing, 8px)}[dir=rtl] .mat-mdc-outlined-button .mdc-button__label+.mat-icon{margin-right:var(--mat-outlined-button-icon-spacing, 8px);margin-left:var(--mat-outlined-button-icon-offset, -4px)}.mat-mdc-outlined-button .mat-ripple-element{background-color:var(--mat-outlined-button-ripple-color)}.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-outlined-button-state-layer-color)}.mat-mdc-outlined-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-outlined-button-disabled-state-layer-color)}.mat-mdc-outlined-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-outlined-button-hover-state-layer-opacity)}.mat-mdc-outlined-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-outlined-button-focus-state-layer-opacity)}.mat-mdc-outlined-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-outlined-button-pressed-state-layer-opacity)}.mat-mdc-outlined-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%);display:var(--mat-outlined-button-touch-target-display)}.mat-mdc-outlined-button:not(:disabled){color:var(--mdc-outlined-button-label-text-color);border-color:var(--mdc-outlined-button-outline-color)}.mat-mdc-outlined-button[disabled],.mat-mdc-outlined-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-outlined-button-disabled-label-text-color);border-color:var(--mdc-outlined-button-disabled-outline-color)}.mat-mdc-outlined-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-outlined-button .mdc-button__ripple{border-width:var(--mdc-outlined-button-outline-width);border-style:solid;border-color:rgba(0,0,0,0)}.mat-mdc-button,.mat-mdc-unelevated-button,.mat-mdc-raised-button,.mat-mdc-outlined-button{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-button .mat-mdc-button-ripple,.mat-mdc-button .mat-mdc-button-persistent-ripple,.mat-mdc-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button .mat-mdc-button-ripple,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button .mat-mdc-button-ripple,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-button .mat-mdc-button-ripple,.mat-mdc-unelevated-button .mat-mdc-button-ripple,.mat-mdc-raised-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{content:\\\"\\\";opacity:0}.mat-mdc-button .mdc-button__label,.mat-mdc-button .mat-icon,.mat-mdc-unelevated-button .mdc-button__label,.mat-mdc-unelevated-button .mat-icon,.mat-mdc-raised-button .mdc-button__label,.mat-mdc-raised-button .mat-icon,.mat-mdc-outlined-button .mdc-button__label,.mat-mdc-outlined-button .mat-icon{z-index:1;position:relative}.mat-mdc-button .mat-mdc-focus-indicator,.mat-mdc-unelevated-button .mat-mdc-focus-indicator,.mat-mdc-raised-button .mat-mdc-focus-indicator,.mat-mdc-outlined-button .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-unelevated-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-raised-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-outlined-button:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-button._mat-animation-noopable,.mat-mdc-unelevated-button._mat-animation-noopable,.mat-mdc-raised-button._mat-animation-noopable,.mat-mdc-outlined-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-button>.mat-icon,.mat-mdc-unelevated-button>.mat-icon,.mat-mdc-raised-button>.mat-icon,.mat-mdc-outlined-button>.mat-icon{display:inline-block;position:relative;vertical-align:top;font-size:1.125rem;height:1.125rem;width:1.125rem}.mat-mdc-outlined-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mdc-button__ripple{top:-1px;left:-1px;bottom:-1px;right:-1px}.mat-mdc-unelevated-button .mat-mdc-focus-indicator::before,.mat-mdc-raised-button .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-outlined-button .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 3px)*-1)}\", \".cdk-high-contrast-active .mat-mdc-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-unelevated-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-raised-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-outlined-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-icon-button{outline:solid 1px}\"] }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i1.Platform }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }] });\n\n/** Injection token to be used to override the default options for FAB. */\nconst MAT_FAB_DEFAULT_OPTIONS = new InjectionToken('mat-mdc-fab-default-options', {\n    providedIn: 'root',\n    factory: MAT_FAB_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_FAB_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        // The FAB by default has its color set to accent.\n        color: 'accent',\n    };\n}\n// Default FAB configuration.\nconst defaults = MAT_FAB_DEFAULT_OPTIONS_FACTORY();\n/**\n * Material Design floating action button (FAB) component. These buttons represent the primary\n * or most common action for users to interact with.\n * See https://material.io/components/buttons-floating-action-button/\n *\n * The `MatFabButton` class has two appearances: normal and extended.\n */\nclass MatFabButton extends MatButtonBase {\n    constructor(elementRef, platform, ngZone, animationMode, _options) {\n        super(elementRef, platform, ngZone, animationMode);\n        this._options = _options;\n        this._isFab = true;\n        this._options = this._options || defaults;\n        this.color = this._options.color || defaults.color;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatFabButton, deps: [{ token: i0.ElementRef }, { token: i1.Platform }, { token: i0.NgZone }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: MAT_FAB_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"18.1.0-next.3\", type: MatFabButton, isStandalone: true, selector: \"button[mat-fab]\", inputs: { extended: [\"extended\", \"extended\", booleanAttribute] }, host: { properties: { \"attr.disabled\": \"_getDisabledAttribute()\", \"attr.aria-disabled\": \"_getAriaDisabled()\", \"class.mat-mdc-button-disabled\": \"disabled\", \"class.mat-mdc-button-disabled-interactive\": \"disabledInteractive\", \"class._mat-animation-noopable\": \"_animationMode === \\\"NoopAnimations\\\"\", \"class.mat-unthemed\": \"!color\", \"class.mat-mdc-button-base\": \"true\", \"class\": \"color ? \\\"mat-\\\" + color : \\\"\\\"\", \"class.mdc-fab--extended\": \"extended\", \"class.mat-mdc-extended-fab\": \"extended\" } }, exportAs: [\"matButton\"], usesInheritance: true, ngImport: i0, template: \"<span\\n    class=\\\"mat-mdc-button-persistent-ripple\\\"\\n    [class.mdc-button__ripple]=\\\"!_isFab\\\"\\n    [class.mdc-fab__ripple]=\\\"_isFab\\\"></span>\\n\\n<ng-content select=\\\".material-icons:not([iconPositionEnd]), mat-icon:not([iconPositionEnd]), [matButtonIcon]:not([iconPositionEnd])\\\">\\n</ng-content>\\n\\n<span class=\\\"mdc-button__label\\\"><ng-content></ng-content></span>\\n\\n<ng-content select=\\\".material-icons[iconPositionEnd], mat-icon[iconPositionEnd], [matButtonIcon][iconPositionEnd]\\\">\\n</ng-content>\\n\\n<!--\\n  The indicator can't be directly on the button, because MDC uses ::before for high contrast\\n  indication and it can't be on the ripple, because it has a border radius and overflow: hidden.\\n-->\\n<span class=\\\"mat-mdc-focus-indicator\\\"></span>\\n\\n<span class=\\\"mat-mdc-button-touch-target\\\"></span>\\n\", styles: [\".mat-mdc-fab-base{-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-user-select:none;user-select:none;position:relative;display:inline-flex;align-items:center;justify-content:center;box-sizing:border-box;width:56px;height:56px;padding:0;border:none;fill:currentColor;text-decoration:none;cursor:pointer;-moz-appearance:none;-webkit-appearance:none;overflow:visible;transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1),opacity 15ms linear 30ms,transform 270ms 0ms cubic-bezier(0, 0, 0.2, 1);flex-shrink:0}.mat-mdc-fab-base .mat-mdc-button-ripple,.mat-mdc-fab-base .mat-mdc-button-persistent-ripple,.mat-mdc-fab-base .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-fab-base .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-fab-base .mat-mdc-button-persistent-ripple::before{content:\\\"\\\";opacity:0}.mat-mdc-fab-base .mdc-button__label,.mat-mdc-fab-base .mat-icon{z-index:1;position:relative}.mat-mdc-fab-base .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-fab-base:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-fab-base._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-fab-base::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.mat-mdc-fab-base[hidden]{display:none}.mat-mdc-fab-base::-moz-focus-inner{padding:0;border:0}.mat-mdc-fab-base:active,.mat-mdc-fab-base:focus{outline:none}.mat-mdc-fab-base:hover{cursor:pointer}.mat-mdc-fab-base>svg{width:100%}.mat-mdc-fab-base .mat-icon,.mat-mdc-fab-base .material-icons{transition:transform 180ms 90ms cubic-bezier(0, 0, 0.2, 1);fill:currentColor;will-change:transform}.mat-mdc-fab-base .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-fab-base[disabled],.mat-mdc-fab-base.mat-mdc-button-disabled{cursor:default;pointer-events:none}.mat-mdc-fab-base[disabled],.mat-mdc-fab-base[disabled]:focus,.mat-mdc-fab-base.mat-mdc-button-disabled,.mat-mdc-fab-base.mat-mdc-button-disabled:focus{box-shadow:none}.mat-mdc-fab-base.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-fab{background-color:var(--mdc-fab-container-color);border-radius:var(--mdc-fab-container-shape);color:inherit;color:var(--mat-fab-foreground-color, inherit);box-shadow:var(--mdc-fab-container-elevation-shadow)}.mat-mdc-fab .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%);display:var(--mat-fab-touch-target-display)}.mat-mdc-fab .mat-ripple-element{background-color:var(--mat-fab-ripple-color)}.mat-mdc-fab .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-state-layer-color)}.mat-mdc-fab.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-disabled-state-layer-color)}.mat-mdc-fab:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-hover-state-layer-opacity)}.mat-mdc-fab.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-fab.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-fab.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-focus-state-layer-opacity)}.mat-mdc-fab:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-pressed-state-layer-opacity)}.mat-mdc-fab:hover{box-shadow:var(--mdc-fab-hover-container-elevation-shadow)}.mat-mdc-fab:focus{box-shadow:var(--mdc-fab-focus-container-elevation-shadow)}.mat-mdc-fab:active,.mat-mdc-fab:focus:active{box-shadow:var(--mdc-fab-pressed-container-elevation-shadow)}.mat-mdc-fab[disabled],.mat-mdc-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-fab-disabled-state-foreground-color);background-color:var(--mat-fab-disabled-state-container-color)}.mat-mdc-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-mini-fab{width:40px;height:40px;background-color:var(--mdc-fab-small-container-color);border-radius:var(--mdc-fab-small-container-shape);color:inherit;color:var(--mat-fab-small-foreground-color, inherit);box-shadow:var(--mdc-fab-small-container-elevation-shadow)}.mat-mdc-mini-fab .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%);display:var(--mat-fab-small-touch-target-display)}.mat-mdc-mini-fab .mat-ripple-element{background-color:var(--mat-fab-small-ripple-color)}.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-small-state-layer-color)}.mat-mdc-mini-fab.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-small-disabled-state-layer-color)}.mat-mdc-mini-fab:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-hover-state-layer-opacity)}.mat-mdc-mini-fab.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-focus-state-layer-opacity)}.mat-mdc-mini-fab:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-pressed-state-layer-opacity)}.mat-mdc-mini-fab:hover{box-shadow:var(--mdc-fab-small-hover-container-elevation-shadow)}.mat-mdc-mini-fab:focus{box-shadow:var(--mdc-fab-small-focus-container-elevation-shadow)}.mat-mdc-mini-fab:active,.mat-mdc-mini-fab:focus:active{box-shadow:var(--mdc-fab-small-pressed-container-elevation-shadow)}.mat-mdc-mini-fab[disabled],.mat-mdc-mini-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-fab-small-disabled-state-foreground-color);background-color:var(--mat-fab-small-disabled-state-container-color)}.mat-mdc-mini-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-extended-fab{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;border-radius:24px;padding-left:20px;padding-right:20px;width:auto;max-width:100%;line-height:normal;box-shadow:var(--mdc-extended-fab-container-elevation-shadow);height:var(--mdc-extended-fab-container-height);border-radius:var(--mdc-extended-fab-container-shape);font-family:var(--mdc-extended-fab-label-text-font);font-size:var(--mdc-extended-fab-label-text-size);font-weight:var(--mdc-extended-fab-label-text-weight);letter-spacing:var(--mdc-extended-fab-label-text-tracking)}.mat-mdc-extended-fab:hover{box-shadow:var(--mdc-extended-fab-hover-container-elevation-shadow)}.mat-mdc-extended-fab:focus{box-shadow:var(--mdc-extended-fab-focus-container-elevation-shadow)}.mat-mdc-extended-fab:active,.mat-mdc-extended-fab:focus:active{box-shadow:var(--mdc-extended-fab-pressed-container-elevation-shadow)}.mat-mdc-extended-fab[disabled],.mat-mdc-extended-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none}.mat-mdc-extended-fab[disabled],.mat-mdc-extended-fab[disabled]:focus,.mat-mdc-extended-fab.mat-mdc-button-disabled,.mat-mdc-extended-fab.mat-mdc-button-disabled:focus{box-shadow:none}.mat-mdc-extended-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.mat-icon,[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.material-icons,.mat-mdc-extended-fab>.mat-icon,.mat-mdc-extended-fab>.material-icons{margin-left:-8px;margin-right:12px}.mat-mdc-extended-fab .mdc-button__label+.mat-icon,.mat-mdc-extended-fab .mdc-button__label+.material-icons,[dir=rtl] .mat-mdc-extended-fab>.mat-icon,[dir=rtl] .mat-mdc-extended-fab>.material-icons{margin-left:12px;margin-right:-8px}.mat-mdc-extended-fab .mat-mdc-button-touch-target{width:100%}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatFabButton, decorators: [{\n            type: Component,\n            args: [{ selector: `button[mat-fab]`, host: {\n                        ...MAT_BUTTON_HOST,\n                        '[class.mdc-fab--extended]': 'extended',\n                        '[class.mat-mdc-extended-fab]': 'extended',\n                    }, exportAs: 'matButton', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, template: \"<span\\n    class=\\\"mat-mdc-button-persistent-ripple\\\"\\n    [class.mdc-button__ripple]=\\\"!_isFab\\\"\\n    [class.mdc-fab__ripple]=\\\"_isFab\\\"></span>\\n\\n<ng-content select=\\\".material-icons:not([iconPositionEnd]), mat-icon:not([iconPositionEnd]), [matButtonIcon]:not([iconPositionEnd])\\\">\\n</ng-content>\\n\\n<span class=\\\"mdc-button__label\\\"><ng-content></ng-content></span>\\n\\n<ng-content select=\\\".material-icons[iconPositionEnd], mat-icon[iconPositionEnd], [matButtonIcon][iconPositionEnd]\\\">\\n</ng-content>\\n\\n<!--\\n  The indicator can't be directly on the button, because MDC uses ::before for high contrast\\n  indication and it can't be on the ripple, because it has a border radius and overflow: hidden.\\n-->\\n<span class=\\\"mat-mdc-focus-indicator\\\"></span>\\n\\n<span class=\\\"mat-mdc-button-touch-target\\\"></span>\\n\", styles: [\".mat-mdc-fab-base{-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-user-select:none;user-select:none;position:relative;display:inline-flex;align-items:center;justify-content:center;box-sizing:border-box;width:56px;height:56px;padding:0;border:none;fill:currentColor;text-decoration:none;cursor:pointer;-moz-appearance:none;-webkit-appearance:none;overflow:visible;transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1),opacity 15ms linear 30ms,transform 270ms 0ms cubic-bezier(0, 0, 0.2, 1);flex-shrink:0}.mat-mdc-fab-base .mat-mdc-button-ripple,.mat-mdc-fab-base .mat-mdc-button-persistent-ripple,.mat-mdc-fab-base .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-fab-base .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-fab-base .mat-mdc-button-persistent-ripple::before{content:\\\"\\\";opacity:0}.mat-mdc-fab-base .mdc-button__label,.mat-mdc-fab-base .mat-icon{z-index:1;position:relative}.mat-mdc-fab-base .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-fab-base:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-fab-base._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-fab-base::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.mat-mdc-fab-base[hidden]{display:none}.mat-mdc-fab-base::-moz-focus-inner{padding:0;border:0}.mat-mdc-fab-base:active,.mat-mdc-fab-base:focus{outline:none}.mat-mdc-fab-base:hover{cursor:pointer}.mat-mdc-fab-base>svg{width:100%}.mat-mdc-fab-base .mat-icon,.mat-mdc-fab-base .material-icons{transition:transform 180ms 90ms cubic-bezier(0, 0, 0.2, 1);fill:currentColor;will-change:transform}.mat-mdc-fab-base .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-fab-base[disabled],.mat-mdc-fab-base.mat-mdc-button-disabled{cursor:default;pointer-events:none}.mat-mdc-fab-base[disabled],.mat-mdc-fab-base[disabled]:focus,.mat-mdc-fab-base.mat-mdc-button-disabled,.mat-mdc-fab-base.mat-mdc-button-disabled:focus{box-shadow:none}.mat-mdc-fab-base.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-fab{background-color:var(--mdc-fab-container-color);border-radius:var(--mdc-fab-container-shape);color:inherit;color:var(--mat-fab-foreground-color, inherit);box-shadow:var(--mdc-fab-container-elevation-shadow)}.mat-mdc-fab .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%);display:var(--mat-fab-touch-target-display)}.mat-mdc-fab .mat-ripple-element{background-color:var(--mat-fab-ripple-color)}.mat-mdc-fab .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-state-layer-color)}.mat-mdc-fab.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-disabled-state-layer-color)}.mat-mdc-fab:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-hover-state-layer-opacity)}.mat-mdc-fab.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-fab.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-fab.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-focus-state-layer-opacity)}.mat-mdc-fab:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-pressed-state-layer-opacity)}.mat-mdc-fab:hover{box-shadow:var(--mdc-fab-hover-container-elevation-shadow)}.mat-mdc-fab:focus{box-shadow:var(--mdc-fab-focus-container-elevation-shadow)}.mat-mdc-fab:active,.mat-mdc-fab:focus:active{box-shadow:var(--mdc-fab-pressed-container-elevation-shadow)}.mat-mdc-fab[disabled],.mat-mdc-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-fab-disabled-state-foreground-color);background-color:var(--mat-fab-disabled-state-container-color)}.mat-mdc-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-mini-fab{width:40px;height:40px;background-color:var(--mdc-fab-small-container-color);border-radius:var(--mdc-fab-small-container-shape);color:inherit;color:var(--mat-fab-small-foreground-color, inherit);box-shadow:var(--mdc-fab-small-container-elevation-shadow)}.mat-mdc-mini-fab .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%);display:var(--mat-fab-small-touch-target-display)}.mat-mdc-mini-fab .mat-ripple-element{background-color:var(--mat-fab-small-ripple-color)}.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-small-state-layer-color)}.mat-mdc-mini-fab.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-small-disabled-state-layer-color)}.mat-mdc-mini-fab:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-hover-state-layer-opacity)}.mat-mdc-mini-fab.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-focus-state-layer-opacity)}.mat-mdc-mini-fab:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-pressed-state-layer-opacity)}.mat-mdc-mini-fab:hover{box-shadow:var(--mdc-fab-small-hover-container-elevation-shadow)}.mat-mdc-mini-fab:focus{box-shadow:var(--mdc-fab-small-focus-container-elevation-shadow)}.mat-mdc-mini-fab:active,.mat-mdc-mini-fab:focus:active{box-shadow:var(--mdc-fab-small-pressed-container-elevation-shadow)}.mat-mdc-mini-fab[disabled],.mat-mdc-mini-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-fab-small-disabled-state-foreground-color);background-color:var(--mat-fab-small-disabled-state-container-color)}.mat-mdc-mini-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-extended-fab{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;border-radius:24px;padding-left:20px;padding-right:20px;width:auto;max-width:100%;line-height:normal;box-shadow:var(--mdc-extended-fab-container-elevation-shadow);height:var(--mdc-extended-fab-container-height);border-radius:var(--mdc-extended-fab-container-shape);font-family:var(--mdc-extended-fab-label-text-font);font-size:var(--mdc-extended-fab-label-text-size);font-weight:var(--mdc-extended-fab-label-text-weight);letter-spacing:var(--mdc-extended-fab-label-text-tracking)}.mat-mdc-extended-fab:hover{box-shadow:var(--mdc-extended-fab-hover-container-elevation-shadow)}.mat-mdc-extended-fab:focus{box-shadow:var(--mdc-extended-fab-focus-container-elevation-shadow)}.mat-mdc-extended-fab:active,.mat-mdc-extended-fab:focus:active{box-shadow:var(--mdc-extended-fab-pressed-container-elevation-shadow)}.mat-mdc-extended-fab[disabled],.mat-mdc-extended-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none}.mat-mdc-extended-fab[disabled],.mat-mdc-extended-fab[disabled]:focus,.mat-mdc-extended-fab.mat-mdc-button-disabled,.mat-mdc-extended-fab.mat-mdc-button-disabled:focus{box-shadow:none}.mat-mdc-extended-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.mat-icon,[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.material-icons,.mat-mdc-extended-fab>.mat-icon,.mat-mdc-extended-fab>.material-icons{margin-left:-8px;margin-right:12px}.mat-mdc-extended-fab .mdc-button__label+.mat-icon,.mat-mdc-extended-fab .mdc-button__label+.material-icons,[dir=rtl] .mat-mdc-extended-fab>.mat-icon,[dir=rtl] .mat-mdc-extended-fab>.material-icons{margin-left:12px;margin-right:-8px}.mat-mdc-extended-fab .mat-mdc-button-touch-target{width:100%}\"] }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i1.Platform }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_FAB_DEFAULT_OPTIONS]\n                }] }], propDecorators: { extended: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }] } });\n/**\n * Material Design mini floating action button (FAB) component. These buttons represent the primary\n * or most common action for users to interact with.\n * See https://material.io/components/buttons-floating-action-button/\n */\nclass MatMiniFabButton extends MatButtonBase {\n    constructor(elementRef, platform, ngZone, animationMode, _options) {\n        super(elementRef, platform, ngZone, animationMode);\n        this._options = _options;\n        this._isFab = true;\n        this._options = this._options || defaults;\n        this.color = this._options.color || defaults.color;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatMiniFabButton, deps: [{ token: i0.ElementRef }, { token: i1.Platform }, { token: i0.NgZone }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: MAT_FAB_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.1.0-next.3\", type: MatMiniFabButton, isStandalone: true, selector: \"button[mat-mini-fab]\", host: { properties: { \"attr.disabled\": \"_getDisabledAttribute()\", \"attr.aria-disabled\": \"_getAriaDisabled()\", \"class.mat-mdc-button-disabled\": \"disabled\", \"class.mat-mdc-button-disabled-interactive\": \"disabledInteractive\", \"class._mat-animation-noopable\": \"_animationMode === \\\"NoopAnimations\\\"\", \"class.mat-unthemed\": \"!color\", \"class.mat-mdc-button-base\": \"true\", \"class\": \"color ? \\\"mat-\\\" + color : \\\"\\\"\" } }, exportAs: [\"matButton\"], usesInheritance: true, ngImport: i0, template: \"<span\\n    class=\\\"mat-mdc-button-persistent-ripple\\\"\\n    [class.mdc-button__ripple]=\\\"!_isFab\\\"\\n    [class.mdc-fab__ripple]=\\\"_isFab\\\"></span>\\n\\n<ng-content select=\\\".material-icons:not([iconPositionEnd]), mat-icon:not([iconPositionEnd]), [matButtonIcon]:not([iconPositionEnd])\\\">\\n</ng-content>\\n\\n<span class=\\\"mdc-button__label\\\"><ng-content></ng-content></span>\\n\\n<ng-content select=\\\".material-icons[iconPositionEnd], mat-icon[iconPositionEnd], [matButtonIcon][iconPositionEnd]\\\">\\n</ng-content>\\n\\n<!--\\n  The indicator can't be directly on the button, because MDC uses ::before for high contrast\\n  indication and it can't be on the ripple, because it has a border radius and overflow: hidden.\\n-->\\n<span class=\\\"mat-mdc-focus-indicator\\\"></span>\\n\\n<span class=\\\"mat-mdc-button-touch-target\\\"></span>\\n\", styles: [\".mat-mdc-fab-base{-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-user-select:none;user-select:none;position:relative;display:inline-flex;align-items:center;justify-content:center;box-sizing:border-box;width:56px;height:56px;padding:0;border:none;fill:currentColor;text-decoration:none;cursor:pointer;-moz-appearance:none;-webkit-appearance:none;overflow:visible;transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1),opacity 15ms linear 30ms,transform 270ms 0ms cubic-bezier(0, 0, 0.2, 1);flex-shrink:0}.mat-mdc-fab-base .mat-mdc-button-ripple,.mat-mdc-fab-base .mat-mdc-button-persistent-ripple,.mat-mdc-fab-base .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-fab-base .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-fab-base .mat-mdc-button-persistent-ripple::before{content:\\\"\\\";opacity:0}.mat-mdc-fab-base .mdc-button__label,.mat-mdc-fab-base .mat-icon{z-index:1;position:relative}.mat-mdc-fab-base .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-fab-base:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-fab-base._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-fab-base::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.mat-mdc-fab-base[hidden]{display:none}.mat-mdc-fab-base::-moz-focus-inner{padding:0;border:0}.mat-mdc-fab-base:active,.mat-mdc-fab-base:focus{outline:none}.mat-mdc-fab-base:hover{cursor:pointer}.mat-mdc-fab-base>svg{width:100%}.mat-mdc-fab-base .mat-icon,.mat-mdc-fab-base .material-icons{transition:transform 180ms 90ms cubic-bezier(0, 0, 0.2, 1);fill:currentColor;will-change:transform}.mat-mdc-fab-base .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-fab-base[disabled],.mat-mdc-fab-base.mat-mdc-button-disabled{cursor:default;pointer-events:none}.mat-mdc-fab-base[disabled],.mat-mdc-fab-base[disabled]:focus,.mat-mdc-fab-base.mat-mdc-button-disabled,.mat-mdc-fab-base.mat-mdc-button-disabled:focus{box-shadow:none}.mat-mdc-fab-base.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-fab{background-color:var(--mdc-fab-container-color);border-radius:var(--mdc-fab-container-shape);color:inherit;color:var(--mat-fab-foreground-color, inherit);box-shadow:var(--mdc-fab-container-elevation-shadow)}.mat-mdc-fab .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%);display:var(--mat-fab-touch-target-display)}.mat-mdc-fab .mat-ripple-element{background-color:var(--mat-fab-ripple-color)}.mat-mdc-fab .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-state-layer-color)}.mat-mdc-fab.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-disabled-state-layer-color)}.mat-mdc-fab:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-hover-state-layer-opacity)}.mat-mdc-fab.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-fab.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-fab.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-focus-state-layer-opacity)}.mat-mdc-fab:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-pressed-state-layer-opacity)}.mat-mdc-fab:hover{box-shadow:var(--mdc-fab-hover-container-elevation-shadow)}.mat-mdc-fab:focus{box-shadow:var(--mdc-fab-focus-container-elevation-shadow)}.mat-mdc-fab:active,.mat-mdc-fab:focus:active{box-shadow:var(--mdc-fab-pressed-container-elevation-shadow)}.mat-mdc-fab[disabled],.mat-mdc-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-fab-disabled-state-foreground-color);background-color:var(--mat-fab-disabled-state-container-color)}.mat-mdc-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-mini-fab{width:40px;height:40px;background-color:var(--mdc-fab-small-container-color);border-radius:var(--mdc-fab-small-container-shape);color:inherit;color:var(--mat-fab-small-foreground-color, inherit);box-shadow:var(--mdc-fab-small-container-elevation-shadow)}.mat-mdc-mini-fab .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%);display:var(--mat-fab-small-touch-target-display)}.mat-mdc-mini-fab .mat-ripple-element{background-color:var(--mat-fab-small-ripple-color)}.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-small-state-layer-color)}.mat-mdc-mini-fab.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-small-disabled-state-layer-color)}.mat-mdc-mini-fab:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-hover-state-layer-opacity)}.mat-mdc-mini-fab.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-focus-state-layer-opacity)}.mat-mdc-mini-fab:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-pressed-state-layer-opacity)}.mat-mdc-mini-fab:hover{box-shadow:var(--mdc-fab-small-hover-container-elevation-shadow)}.mat-mdc-mini-fab:focus{box-shadow:var(--mdc-fab-small-focus-container-elevation-shadow)}.mat-mdc-mini-fab:active,.mat-mdc-mini-fab:focus:active{box-shadow:var(--mdc-fab-small-pressed-container-elevation-shadow)}.mat-mdc-mini-fab[disabled],.mat-mdc-mini-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-fab-small-disabled-state-foreground-color);background-color:var(--mat-fab-small-disabled-state-container-color)}.mat-mdc-mini-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-extended-fab{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;border-radius:24px;padding-left:20px;padding-right:20px;width:auto;max-width:100%;line-height:normal;box-shadow:var(--mdc-extended-fab-container-elevation-shadow);height:var(--mdc-extended-fab-container-height);border-radius:var(--mdc-extended-fab-container-shape);font-family:var(--mdc-extended-fab-label-text-font);font-size:var(--mdc-extended-fab-label-text-size);font-weight:var(--mdc-extended-fab-label-text-weight);letter-spacing:var(--mdc-extended-fab-label-text-tracking)}.mat-mdc-extended-fab:hover{box-shadow:var(--mdc-extended-fab-hover-container-elevation-shadow)}.mat-mdc-extended-fab:focus{box-shadow:var(--mdc-extended-fab-focus-container-elevation-shadow)}.mat-mdc-extended-fab:active,.mat-mdc-extended-fab:focus:active{box-shadow:var(--mdc-extended-fab-pressed-container-elevation-shadow)}.mat-mdc-extended-fab[disabled],.mat-mdc-extended-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none}.mat-mdc-extended-fab[disabled],.mat-mdc-extended-fab[disabled]:focus,.mat-mdc-extended-fab.mat-mdc-button-disabled,.mat-mdc-extended-fab.mat-mdc-button-disabled:focus{box-shadow:none}.mat-mdc-extended-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.mat-icon,[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.material-icons,.mat-mdc-extended-fab>.mat-icon,.mat-mdc-extended-fab>.material-icons{margin-left:-8px;margin-right:12px}.mat-mdc-extended-fab .mdc-button__label+.mat-icon,.mat-mdc-extended-fab .mdc-button__label+.material-icons,[dir=rtl] .mat-mdc-extended-fab>.mat-icon,[dir=rtl] .mat-mdc-extended-fab>.material-icons{margin-left:12px;margin-right:-8px}.mat-mdc-extended-fab .mat-mdc-button-touch-target{width:100%}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatMiniFabButton, decorators: [{\n            type: Component,\n            args: [{ selector: `button[mat-mini-fab]`, host: MAT_BUTTON_HOST, exportAs: 'matButton', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, template: \"<span\\n    class=\\\"mat-mdc-button-persistent-ripple\\\"\\n    [class.mdc-button__ripple]=\\\"!_isFab\\\"\\n    [class.mdc-fab__ripple]=\\\"_isFab\\\"></span>\\n\\n<ng-content select=\\\".material-icons:not([iconPositionEnd]), mat-icon:not([iconPositionEnd]), [matButtonIcon]:not([iconPositionEnd])\\\">\\n</ng-content>\\n\\n<span class=\\\"mdc-button__label\\\"><ng-content></ng-content></span>\\n\\n<ng-content select=\\\".material-icons[iconPositionEnd], mat-icon[iconPositionEnd], [matButtonIcon][iconPositionEnd]\\\">\\n</ng-content>\\n\\n<!--\\n  The indicator can't be directly on the button, because MDC uses ::before for high contrast\\n  indication and it can't be on the ripple, because it has a border radius and overflow: hidden.\\n-->\\n<span class=\\\"mat-mdc-focus-indicator\\\"></span>\\n\\n<span class=\\\"mat-mdc-button-touch-target\\\"></span>\\n\", styles: [\".mat-mdc-fab-base{-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-user-select:none;user-select:none;position:relative;display:inline-flex;align-items:center;justify-content:center;box-sizing:border-box;width:56px;height:56px;padding:0;border:none;fill:currentColor;text-decoration:none;cursor:pointer;-moz-appearance:none;-webkit-appearance:none;overflow:visible;transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1),opacity 15ms linear 30ms,transform 270ms 0ms cubic-bezier(0, 0, 0.2, 1);flex-shrink:0}.mat-mdc-fab-base .mat-mdc-button-ripple,.mat-mdc-fab-base .mat-mdc-button-persistent-ripple,.mat-mdc-fab-base .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-fab-base .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-fab-base .mat-mdc-button-persistent-ripple::before{content:\\\"\\\";opacity:0}.mat-mdc-fab-base .mdc-button__label,.mat-mdc-fab-base .mat-icon{z-index:1;position:relative}.mat-mdc-fab-base .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-fab-base:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-fab-base._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-fab-base::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.mat-mdc-fab-base[hidden]{display:none}.mat-mdc-fab-base::-moz-focus-inner{padding:0;border:0}.mat-mdc-fab-base:active,.mat-mdc-fab-base:focus{outline:none}.mat-mdc-fab-base:hover{cursor:pointer}.mat-mdc-fab-base>svg{width:100%}.mat-mdc-fab-base .mat-icon,.mat-mdc-fab-base .material-icons{transition:transform 180ms 90ms cubic-bezier(0, 0, 0.2, 1);fill:currentColor;will-change:transform}.mat-mdc-fab-base .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-fab-base[disabled],.mat-mdc-fab-base.mat-mdc-button-disabled{cursor:default;pointer-events:none}.mat-mdc-fab-base[disabled],.mat-mdc-fab-base[disabled]:focus,.mat-mdc-fab-base.mat-mdc-button-disabled,.mat-mdc-fab-base.mat-mdc-button-disabled:focus{box-shadow:none}.mat-mdc-fab-base.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-fab{background-color:var(--mdc-fab-container-color);border-radius:var(--mdc-fab-container-shape);color:inherit;color:var(--mat-fab-foreground-color, inherit);box-shadow:var(--mdc-fab-container-elevation-shadow)}.mat-mdc-fab .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%);display:var(--mat-fab-touch-target-display)}.mat-mdc-fab .mat-ripple-element{background-color:var(--mat-fab-ripple-color)}.mat-mdc-fab .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-state-layer-color)}.mat-mdc-fab.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-disabled-state-layer-color)}.mat-mdc-fab:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-hover-state-layer-opacity)}.mat-mdc-fab.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-fab.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-fab.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-focus-state-layer-opacity)}.mat-mdc-fab:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-pressed-state-layer-opacity)}.mat-mdc-fab:hover{box-shadow:var(--mdc-fab-hover-container-elevation-shadow)}.mat-mdc-fab:focus{box-shadow:var(--mdc-fab-focus-container-elevation-shadow)}.mat-mdc-fab:active,.mat-mdc-fab:focus:active{box-shadow:var(--mdc-fab-pressed-container-elevation-shadow)}.mat-mdc-fab[disabled],.mat-mdc-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-fab-disabled-state-foreground-color);background-color:var(--mat-fab-disabled-state-container-color)}.mat-mdc-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-mini-fab{width:40px;height:40px;background-color:var(--mdc-fab-small-container-color);border-radius:var(--mdc-fab-small-container-shape);color:inherit;color:var(--mat-fab-small-foreground-color, inherit);box-shadow:var(--mdc-fab-small-container-elevation-shadow)}.mat-mdc-mini-fab .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%);display:var(--mat-fab-small-touch-target-display)}.mat-mdc-mini-fab .mat-ripple-element{background-color:var(--mat-fab-small-ripple-color)}.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-small-state-layer-color)}.mat-mdc-mini-fab.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-small-disabled-state-layer-color)}.mat-mdc-mini-fab:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-hover-state-layer-opacity)}.mat-mdc-mini-fab.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-focus-state-layer-opacity)}.mat-mdc-mini-fab:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-pressed-state-layer-opacity)}.mat-mdc-mini-fab:hover{box-shadow:var(--mdc-fab-small-hover-container-elevation-shadow)}.mat-mdc-mini-fab:focus{box-shadow:var(--mdc-fab-small-focus-container-elevation-shadow)}.mat-mdc-mini-fab:active,.mat-mdc-mini-fab:focus:active{box-shadow:var(--mdc-fab-small-pressed-container-elevation-shadow)}.mat-mdc-mini-fab[disabled],.mat-mdc-mini-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-fab-small-disabled-state-foreground-color);background-color:var(--mat-fab-small-disabled-state-container-color)}.mat-mdc-mini-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-extended-fab{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;border-radius:24px;padding-left:20px;padding-right:20px;width:auto;max-width:100%;line-height:normal;box-shadow:var(--mdc-extended-fab-container-elevation-shadow);height:var(--mdc-extended-fab-container-height);border-radius:var(--mdc-extended-fab-container-shape);font-family:var(--mdc-extended-fab-label-text-font);font-size:var(--mdc-extended-fab-label-text-size);font-weight:var(--mdc-extended-fab-label-text-weight);letter-spacing:var(--mdc-extended-fab-label-text-tracking)}.mat-mdc-extended-fab:hover{box-shadow:var(--mdc-extended-fab-hover-container-elevation-shadow)}.mat-mdc-extended-fab:focus{box-shadow:var(--mdc-extended-fab-focus-container-elevation-shadow)}.mat-mdc-extended-fab:active,.mat-mdc-extended-fab:focus:active{box-shadow:var(--mdc-extended-fab-pressed-container-elevation-shadow)}.mat-mdc-extended-fab[disabled],.mat-mdc-extended-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none}.mat-mdc-extended-fab[disabled],.mat-mdc-extended-fab[disabled]:focus,.mat-mdc-extended-fab.mat-mdc-button-disabled,.mat-mdc-extended-fab.mat-mdc-button-disabled:focus{box-shadow:none}.mat-mdc-extended-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.mat-icon,[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.material-icons,.mat-mdc-extended-fab>.mat-icon,.mat-mdc-extended-fab>.material-icons{margin-left:-8px;margin-right:12px}.mat-mdc-extended-fab .mdc-button__label+.mat-icon,.mat-mdc-extended-fab .mdc-button__label+.material-icons,[dir=rtl] .mat-mdc-extended-fab>.mat-icon,[dir=rtl] .mat-mdc-extended-fab>.material-icons{margin-left:12px;margin-right:-8px}.mat-mdc-extended-fab .mat-mdc-button-touch-target{width:100%}\"] }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i1.Platform }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_FAB_DEFAULT_OPTIONS]\n                }] }] });\n/**\n * Material Design floating action button (FAB) component for anchor elements. Anchor elements\n * are used to provide links for the user to navigate across different routes or pages.\n * See https://material.io/components/buttons-floating-action-button/\n *\n * The `MatFabAnchor` class has two appearances: normal and extended.\n */\nclass MatFabAnchor extends MatAnchor {\n    constructor(elementRef, platform, ngZone, animationMode, _options) {\n        super(elementRef, platform, ngZone, animationMode);\n        this._options = _options;\n        this._isFab = true;\n        this._options = this._options || defaults;\n        this.color = this._options.color || defaults.color;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatFabAnchor, deps: [{ token: i0.ElementRef }, { token: i1.Platform }, { token: i0.NgZone }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: MAT_FAB_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"18.1.0-next.3\", type: MatFabAnchor, isStandalone: true, selector: \"a[mat-fab]\", inputs: { extended: [\"extended\", \"extended\", booleanAttribute] }, host: { properties: { \"attr.disabled\": \"_getDisabledAttribute()\", \"class.mat-mdc-button-disabled\": \"disabled\", \"class.mat-mdc-button-disabled-interactive\": \"disabledInteractive\", \"class._mat-animation-noopable\": \"_animationMode === \\\"NoopAnimations\\\"\", \"attr.tabindex\": \"disabled && !disabledInteractive ? -1 : tabIndex\", \"attr.aria-disabled\": \"_getDisabledAttribute()\", \"class.mat-unthemed\": \"!color\", \"class.mat-mdc-button-base\": \"true\", \"class\": \"color ? \\\"mat-\\\" + color : \\\"\\\"\", \"class.mdc-fab--extended\": \"extended\", \"class.mat-mdc-extended-fab\": \"extended\" } }, exportAs: [\"matButton\", \"matAnchor\"], usesInheritance: true, ngImport: i0, template: \"<span\\n    class=\\\"mat-mdc-button-persistent-ripple\\\"\\n    [class.mdc-button__ripple]=\\\"!_isFab\\\"\\n    [class.mdc-fab__ripple]=\\\"_isFab\\\"></span>\\n\\n<ng-content select=\\\".material-icons:not([iconPositionEnd]), mat-icon:not([iconPositionEnd]), [matButtonIcon]:not([iconPositionEnd])\\\">\\n</ng-content>\\n\\n<span class=\\\"mdc-button__label\\\"><ng-content></ng-content></span>\\n\\n<ng-content select=\\\".material-icons[iconPositionEnd], mat-icon[iconPositionEnd], [matButtonIcon][iconPositionEnd]\\\">\\n</ng-content>\\n\\n<!--\\n  The indicator can't be directly on the button, because MDC uses ::before for high contrast\\n  indication and it can't be on the ripple, because it has a border radius and overflow: hidden.\\n-->\\n<span class=\\\"mat-mdc-focus-indicator\\\"></span>\\n\\n<span class=\\\"mat-mdc-button-touch-target\\\"></span>\\n\", styles: [\".mat-mdc-fab-base{-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-user-select:none;user-select:none;position:relative;display:inline-flex;align-items:center;justify-content:center;box-sizing:border-box;width:56px;height:56px;padding:0;border:none;fill:currentColor;text-decoration:none;cursor:pointer;-moz-appearance:none;-webkit-appearance:none;overflow:visible;transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1),opacity 15ms linear 30ms,transform 270ms 0ms cubic-bezier(0, 0, 0.2, 1);flex-shrink:0}.mat-mdc-fab-base .mat-mdc-button-ripple,.mat-mdc-fab-base .mat-mdc-button-persistent-ripple,.mat-mdc-fab-base .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-fab-base .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-fab-base .mat-mdc-button-persistent-ripple::before{content:\\\"\\\";opacity:0}.mat-mdc-fab-base .mdc-button__label,.mat-mdc-fab-base .mat-icon{z-index:1;position:relative}.mat-mdc-fab-base .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-fab-base:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-fab-base._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-fab-base::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.mat-mdc-fab-base[hidden]{display:none}.mat-mdc-fab-base::-moz-focus-inner{padding:0;border:0}.mat-mdc-fab-base:active,.mat-mdc-fab-base:focus{outline:none}.mat-mdc-fab-base:hover{cursor:pointer}.mat-mdc-fab-base>svg{width:100%}.mat-mdc-fab-base .mat-icon,.mat-mdc-fab-base .material-icons{transition:transform 180ms 90ms cubic-bezier(0, 0, 0.2, 1);fill:currentColor;will-change:transform}.mat-mdc-fab-base .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-fab-base[disabled],.mat-mdc-fab-base.mat-mdc-button-disabled{cursor:default;pointer-events:none}.mat-mdc-fab-base[disabled],.mat-mdc-fab-base[disabled]:focus,.mat-mdc-fab-base.mat-mdc-button-disabled,.mat-mdc-fab-base.mat-mdc-button-disabled:focus{box-shadow:none}.mat-mdc-fab-base.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-fab{background-color:var(--mdc-fab-container-color);border-radius:var(--mdc-fab-container-shape);color:inherit;color:var(--mat-fab-foreground-color, inherit);box-shadow:var(--mdc-fab-container-elevation-shadow)}.mat-mdc-fab .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%);display:var(--mat-fab-touch-target-display)}.mat-mdc-fab .mat-ripple-element{background-color:var(--mat-fab-ripple-color)}.mat-mdc-fab .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-state-layer-color)}.mat-mdc-fab.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-disabled-state-layer-color)}.mat-mdc-fab:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-hover-state-layer-opacity)}.mat-mdc-fab.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-fab.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-fab.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-focus-state-layer-opacity)}.mat-mdc-fab:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-pressed-state-layer-opacity)}.mat-mdc-fab:hover{box-shadow:var(--mdc-fab-hover-container-elevation-shadow)}.mat-mdc-fab:focus{box-shadow:var(--mdc-fab-focus-container-elevation-shadow)}.mat-mdc-fab:active,.mat-mdc-fab:focus:active{box-shadow:var(--mdc-fab-pressed-container-elevation-shadow)}.mat-mdc-fab[disabled],.mat-mdc-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-fab-disabled-state-foreground-color);background-color:var(--mat-fab-disabled-state-container-color)}.mat-mdc-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-mini-fab{width:40px;height:40px;background-color:var(--mdc-fab-small-container-color);border-radius:var(--mdc-fab-small-container-shape);color:inherit;color:var(--mat-fab-small-foreground-color, inherit);box-shadow:var(--mdc-fab-small-container-elevation-shadow)}.mat-mdc-mini-fab .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%);display:var(--mat-fab-small-touch-target-display)}.mat-mdc-mini-fab .mat-ripple-element{background-color:var(--mat-fab-small-ripple-color)}.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-small-state-layer-color)}.mat-mdc-mini-fab.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-small-disabled-state-layer-color)}.mat-mdc-mini-fab:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-hover-state-layer-opacity)}.mat-mdc-mini-fab.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-focus-state-layer-opacity)}.mat-mdc-mini-fab:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-pressed-state-layer-opacity)}.mat-mdc-mini-fab:hover{box-shadow:var(--mdc-fab-small-hover-container-elevation-shadow)}.mat-mdc-mini-fab:focus{box-shadow:var(--mdc-fab-small-focus-container-elevation-shadow)}.mat-mdc-mini-fab:active,.mat-mdc-mini-fab:focus:active{box-shadow:var(--mdc-fab-small-pressed-container-elevation-shadow)}.mat-mdc-mini-fab[disabled],.mat-mdc-mini-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-fab-small-disabled-state-foreground-color);background-color:var(--mat-fab-small-disabled-state-container-color)}.mat-mdc-mini-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-extended-fab{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;border-radius:24px;padding-left:20px;padding-right:20px;width:auto;max-width:100%;line-height:normal;box-shadow:var(--mdc-extended-fab-container-elevation-shadow);height:var(--mdc-extended-fab-container-height);border-radius:var(--mdc-extended-fab-container-shape);font-family:var(--mdc-extended-fab-label-text-font);font-size:var(--mdc-extended-fab-label-text-size);font-weight:var(--mdc-extended-fab-label-text-weight);letter-spacing:var(--mdc-extended-fab-label-text-tracking)}.mat-mdc-extended-fab:hover{box-shadow:var(--mdc-extended-fab-hover-container-elevation-shadow)}.mat-mdc-extended-fab:focus{box-shadow:var(--mdc-extended-fab-focus-container-elevation-shadow)}.mat-mdc-extended-fab:active,.mat-mdc-extended-fab:focus:active{box-shadow:var(--mdc-extended-fab-pressed-container-elevation-shadow)}.mat-mdc-extended-fab[disabled],.mat-mdc-extended-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none}.mat-mdc-extended-fab[disabled],.mat-mdc-extended-fab[disabled]:focus,.mat-mdc-extended-fab.mat-mdc-button-disabled,.mat-mdc-extended-fab.mat-mdc-button-disabled:focus{box-shadow:none}.mat-mdc-extended-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.mat-icon,[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.material-icons,.mat-mdc-extended-fab>.mat-icon,.mat-mdc-extended-fab>.material-icons{margin-left:-8px;margin-right:12px}.mat-mdc-extended-fab .mdc-button__label+.mat-icon,.mat-mdc-extended-fab .mdc-button__label+.material-icons,[dir=rtl] .mat-mdc-extended-fab>.mat-icon,[dir=rtl] .mat-mdc-extended-fab>.material-icons{margin-left:12px;margin-right:-8px}.mat-mdc-extended-fab .mat-mdc-button-touch-target{width:100%}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatFabAnchor, decorators: [{\n            type: Component,\n            args: [{ selector: `a[mat-fab]`, host: {\n                        ...MAT_ANCHOR_HOST,\n                        '[class.mdc-fab--extended]': 'extended',\n                        '[class.mat-mdc-extended-fab]': 'extended',\n                    }, exportAs: 'matButton, matAnchor', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, template: \"<span\\n    class=\\\"mat-mdc-button-persistent-ripple\\\"\\n    [class.mdc-button__ripple]=\\\"!_isFab\\\"\\n    [class.mdc-fab__ripple]=\\\"_isFab\\\"></span>\\n\\n<ng-content select=\\\".material-icons:not([iconPositionEnd]), mat-icon:not([iconPositionEnd]), [matButtonIcon]:not([iconPositionEnd])\\\">\\n</ng-content>\\n\\n<span class=\\\"mdc-button__label\\\"><ng-content></ng-content></span>\\n\\n<ng-content select=\\\".material-icons[iconPositionEnd], mat-icon[iconPositionEnd], [matButtonIcon][iconPositionEnd]\\\">\\n</ng-content>\\n\\n<!--\\n  The indicator can't be directly on the button, because MDC uses ::before for high contrast\\n  indication and it can't be on the ripple, because it has a border radius and overflow: hidden.\\n-->\\n<span class=\\\"mat-mdc-focus-indicator\\\"></span>\\n\\n<span class=\\\"mat-mdc-button-touch-target\\\"></span>\\n\", styles: [\".mat-mdc-fab-base{-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-user-select:none;user-select:none;position:relative;display:inline-flex;align-items:center;justify-content:center;box-sizing:border-box;width:56px;height:56px;padding:0;border:none;fill:currentColor;text-decoration:none;cursor:pointer;-moz-appearance:none;-webkit-appearance:none;overflow:visible;transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1),opacity 15ms linear 30ms,transform 270ms 0ms cubic-bezier(0, 0, 0.2, 1);flex-shrink:0}.mat-mdc-fab-base .mat-mdc-button-ripple,.mat-mdc-fab-base .mat-mdc-button-persistent-ripple,.mat-mdc-fab-base .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-fab-base .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-fab-base .mat-mdc-button-persistent-ripple::before{content:\\\"\\\";opacity:0}.mat-mdc-fab-base .mdc-button__label,.mat-mdc-fab-base .mat-icon{z-index:1;position:relative}.mat-mdc-fab-base .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-fab-base:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-fab-base._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-fab-base::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.mat-mdc-fab-base[hidden]{display:none}.mat-mdc-fab-base::-moz-focus-inner{padding:0;border:0}.mat-mdc-fab-base:active,.mat-mdc-fab-base:focus{outline:none}.mat-mdc-fab-base:hover{cursor:pointer}.mat-mdc-fab-base>svg{width:100%}.mat-mdc-fab-base .mat-icon,.mat-mdc-fab-base .material-icons{transition:transform 180ms 90ms cubic-bezier(0, 0, 0.2, 1);fill:currentColor;will-change:transform}.mat-mdc-fab-base .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-fab-base[disabled],.mat-mdc-fab-base.mat-mdc-button-disabled{cursor:default;pointer-events:none}.mat-mdc-fab-base[disabled],.mat-mdc-fab-base[disabled]:focus,.mat-mdc-fab-base.mat-mdc-button-disabled,.mat-mdc-fab-base.mat-mdc-button-disabled:focus{box-shadow:none}.mat-mdc-fab-base.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-fab{background-color:var(--mdc-fab-container-color);border-radius:var(--mdc-fab-container-shape);color:inherit;color:var(--mat-fab-foreground-color, inherit);box-shadow:var(--mdc-fab-container-elevation-shadow)}.mat-mdc-fab .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%);display:var(--mat-fab-touch-target-display)}.mat-mdc-fab .mat-ripple-element{background-color:var(--mat-fab-ripple-color)}.mat-mdc-fab .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-state-layer-color)}.mat-mdc-fab.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-disabled-state-layer-color)}.mat-mdc-fab:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-hover-state-layer-opacity)}.mat-mdc-fab.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-fab.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-fab.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-focus-state-layer-opacity)}.mat-mdc-fab:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-pressed-state-layer-opacity)}.mat-mdc-fab:hover{box-shadow:var(--mdc-fab-hover-container-elevation-shadow)}.mat-mdc-fab:focus{box-shadow:var(--mdc-fab-focus-container-elevation-shadow)}.mat-mdc-fab:active,.mat-mdc-fab:focus:active{box-shadow:var(--mdc-fab-pressed-container-elevation-shadow)}.mat-mdc-fab[disabled],.mat-mdc-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-fab-disabled-state-foreground-color);background-color:var(--mat-fab-disabled-state-container-color)}.mat-mdc-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-mini-fab{width:40px;height:40px;background-color:var(--mdc-fab-small-container-color);border-radius:var(--mdc-fab-small-container-shape);color:inherit;color:var(--mat-fab-small-foreground-color, inherit);box-shadow:var(--mdc-fab-small-container-elevation-shadow)}.mat-mdc-mini-fab .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%);display:var(--mat-fab-small-touch-target-display)}.mat-mdc-mini-fab .mat-ripple-element{background-color:var(--mat-fab-small-ripple-color)}.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-small-state-layer-color)}.mat-mdc-mini-fab.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-small-disabled-state-layer-color)}.mat-mdc-mini-fab:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-hover-state-layer-opacity)}.mat-mdc-mini-fab.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-focus-state-layer-opacity)}.mat-mdc-mini-fab:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-pressed-state-layer-opacity)}.mat-mdc-mini-fab:hover{box-shadow:var(--mdc-fab-small-hover-container-elevation-shadow)}.mat-mdc-mini-fab:focus{box-shadow:var(--mdc-fab-small-focus-container-elevation-shadow)}.mat-mdc-mini-fab:active,.mat-mdc-mini-fab:focus:active{box-shadow:var(--mdc-fab-small-pressed-container-elevation-shadow)}.mat-mdc-mini-fab[disabled],.mat-mdc-mini-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-fab-small-disabled-state-foreground-color);background-color:var(--mat-fab-small-disabled-state-container-color)}.mat-mdc-mini-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-extended-fab{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;border-radius:24px;padding-left:20px;padding-right:20px;width:auto;max-width:100%;line-height:normal;box-shadow:var(--mdc-extended-fab-container-elevation-shadow);height:var(--mdc-extended-fab-container-height);border-radius:var(--mdc-extended-fab-container-shape);font-family:var(--mdc-extended-fab-label-text-font);font-size:var(--mdc-extended-fab-label-text-size);font-weight:var(--mdc-extended-fab-label-text-weight);letter-spacing:var(--mdc-extended-fab-label-text-tracking)}.mat-mdc-extended-fab:hover{box-shadow:var(--mdc-extended-fab-hover-container-elevation-shadow)}.mat-mdc-extended-fab:focus{box-shadow:var(--mdc-extended-fab-focus-container-elevation-shadow)}.mat-mdc-extended-fab:active,.mat-mdc-extended-fab:focus:active{box-shadow:var(--mdc-extended-fab-pressed-container-elevation-shadow)}.mat-mdc-extended-fab[disabled],.mat-mdc-extended-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none}.mat-mdc-extended-fab[disabled],.mat-mdc-extended-fab[disabled]:focus,.mat-mdc-extended-fab.mat-mdc-button-disabled,.mat-mdc-extended-fab.mat-mdc-button-disabled:focus{box-shadow:none}.mat-mdc-extended-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.mat-icon,[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.material-icons,.mat-mdc-extended-fab>.mat-icon,.mat-mdc-extended-fab>.material-icons{margin-left:-8px;margin-right:12px}.mat-mdc-extended-fab .mdc-button__label+.mat-icon,.mat-mdc-extended-fab .mdc-button__label+.material-icons,[dir=rtl] .mat-mdc-extended-fab>.mat-icon,[dir=rtl] .mat-mdc-extended-fab>.material-icons{margin-left:12px;margin-right:-8px}.mat-mdc-extended-fab .mat-mdc-button-touch-target{width:100%}\"] }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i1.Platform }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_FAB_DEFAULT_OPTIONS]\n                }] }], propDecorators: { extended: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }] } });\n/**\n * Material Design mini floating action button (FAB) component for anchor elements. Anchor elements\n * are used to provide links for the user to navigate across different routes or pages.\n * See https://material.io/components/buttons-floating-action-button/\n */\nclass MatMiniFabAnchor extends MatAnchor {\n    constructor(elementRef, platform, ngZone, animationMode, _options) {\n        super(elementRef, platform, ngZone, animationMode);\n        this._options = _options;\n        this._isFab = true;\n        this._options = this._options || defaults;\n        this.color = this._options.color || defaults.color;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatMiniFabAnchor, deps: [{ token: i0.ElementRef }, { token: i1.Platform }, { token: i0.NgZone }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: MAT_FAB_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.1.0-next.3\", type: MatMiniFabAnchor, isStandalone: true, selector: \"a[mat-mini-fab]\", host: { properties: { \"attr.disabled\": \"_getDisabledAttribute()\", \"class.mat-mdc-button-disabled\": \"disabled\", \"class.mat-mdc-button-disabled-interactive\": \"disabledInteractive\", \"class._mat-animation-noopable\": \"_animationMode === \\\"NoopAnimations\\\"\", \"attr.tabindex\": \"disabled && !disabledInteractive ? -1 : tabIndex\", \"attr.aria-disabled\": \"_getDisabledAttribute()\", \"class.mat-unthemed\": \"!color\", \"class.mat-mdc-button-base\": \"true\", \"class\": \"color ? \\\"mat-\\\" + color : \\\"\\\"\" } }, exportAs: [\"matButton\", \"matAnchor\"], usesInheritance: true, ngImport: i0, template: \"<span\\n    class=\\\"mat-mdc-button-persistent-ripple\\\"\\n    [class.mdc-button__ripple]=\\\"!_isFab\\\"\\n    [class.mdc-fab__ripple]=\\\"_isFab\\\"></span>\\n\\n<ng-content select=\\\".material-icons:not([iconPositionEnd]), mat-icon:not([iconPositionEnd]), [matButtonIcon]:not([iconPositionEnd])\\\">\\n</ng-content>\\n\\n<span class=\\\"mdc-button__label\\\"><ng-content></ng-content></span>\\n\\n<ng-content select=\\\".material-icons[iconPositionEnd], mat-icon[iconPositionEnd], [matButtonIcon][iconPositionEnd]\\\">\\n</ng-content>\\n\\n<!--\\n  The indicator can't be directly on the button, because MDC uses ::before for high contrast\\n  indication and it can't be on the ripple, because it has a border radius and overflow: hidden.\\n-->\\n<span class=\\\"mat-mdc-focus-indicator\\\"></span>\\n\\n<span class=\\\"mat-mdc-button-touch-target\\\"></span>\\n\", styles: [\".mat-mdc-fab-base{-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-user-select:none;user-select:none;position:relative;display:inline-flex;align-items:center;justify-content:center;box-sizing:border-box;width:56px;height:56px;padding:0;border:none;fill:currentColor;text-decoration:none;cursor:pointer;-moz-appearance:none;-webkit-appearance:none;overflow:visible;transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1),opacity 15ms linear 30ms,transform 270ms 0ms cubic-bezier(0, 0, 0.2, 1);flex-shrink:0}.mat-mdc-fab-base .mat-mdc-button-ripple,.mat-mdc-fab-base .mat-mdc-button-persistent-ripple,.mat-mdc-fab-base .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-fab-base .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-fab-base .mat-mdc-button-persistent-ripple::before{content:\\\"\\\";opacity:0}.mat-mdc-fab-base .mdc-button__label,.mat-mdc-fab-base .mat-icon{z-index:1;position:relative}.mat-mdc-fab-base .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-fab-base:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-fab-base._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-fab-base::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.mat-mdc-fab-base[hidden]{display:none}.mat-mdc-fab-base::-moz-focus-inner{padding:0;border:0}.mat-mdc-fab-base:active,.mat-mdc-fab-base:focus{outline:none}.mat-mdc-fab-base:hover{cursor:pointer}.mat-mdc-fab-base>svg{width:100%}.mat-mdc-fab-base .mat-icon,.mat-mdc-fab-base .material-icons{transition:transform 180ms 90ms cubic-bezier(0, 0, 0.2, 1);fill:currentColor;will-change:transform}.mat-mdc-fab-base .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-fab-base[disabled],.mat-mdc-fab-base.mat-mdc-button-disabled{cursor:default;pointer-events:none}.mat-mdc-fab-base[disabled],.mat-mdc-fab-base[disabled]:focus,.mat-mdc-fab-base.mat-mdc-button-disabled,.mat-mdc-fab-base.mat-mdc-button-disabled:focus{box-shadow:none}.mat-mdc-fab-base.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-fab{background-color:var(--mdc-fab-container-color);border-radius:var(--mdc-fab-container-shape);color:inherit;color:var(--mat-fab-foreground-color, inherit);box-shadow:var(--mdc-fab-container-elevation-shadow)}.mat-mdc-fab .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%);display:var(--mat-fab-touch-target-display)}.mat-mdc-fab .mat-ripple-element{background-color:var(--mat-fab-ripple-color)}.mat-mdc-fab .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-state-layer-color)}.mat-mdc-fab.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-disabled-state-layer-color)}.mat-mdc-fab:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-hover-state-layer-opacity)}.mat-mdc-fab.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-fab.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-fab.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-focus-state-layer-opacity)}.mat-mdc-fab:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-pressed-state-layer-opacity)}.mat-mdc-fab:hover{box-shadow:var(--mdc-fab-hover-container-elevation-shadow)}.mat-mdc-fab:focus{box-shadow:var(--mdc-fab-focus-container-elevation-shadow)}.mat-mdc-fab:active,.mat-mdc-fab:focus:active{box-shadow:var(--mdc-fab-pressed-container-elevation-shadow)}.mat-mdc-fab[disabled],.mat-mdc-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-fab-disabled-state-foreground-color);background-color:var(--mat-fab-disabled-state-container-color)}.mat-mdc-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-mini-fab{width:40px;height:40px;background-color:var(--mdc-fab-small-container-color);border-radius:var(--mdc-fab-small-container-shape);color:inherit;color:var(--mat-fab-small-foreground-color, inherit);box-shadow:var(--mdc-fab-small-container-elevation-shadow)}.mat-mdc-mini-fab .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%);display:var(--mat-fab-small-touch-target-display)}.mat-mdc-mini-fab .mat-ripple-element{background-color:var(--mat-fab-small-ripple-color)}.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-small-state-layer-color)}.mat-mdc-mini-fab.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-small-disabled-state-layer-color)}.mat-mdc-mini-fab:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-hover-state-layer-opacity)}.mat-mdc-mini-fab.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-focus-state-layer-opacity)}.mat-mdc-mini-fab:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-pressed-state-layer-opacity)}.mat-mdc-mini-fab:hover{box-shadow:var(--mdc-fab-small-hover-container-elevation-shadow)}.mat-mdc-mini-fab:focus{box-shadow:var(--mdc-fab-small-focus-container-elevation-shadow)}.mat-mdc-mini-fab:active,.mat-mdc-mini-fab:focus:active{box-shadow:var(--mdc-fab-small-pressed-container-elevation-shadow)}.mat-mdc-mini-fab[disabled],.mat-mdc-mini-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-fab-small-disabled-state-foreground-color);background-color:var(--mat-fab-small-disabled-state-container-color)}.mat-mdc-mini-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-extended-fab{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;border-radius:24px;padding-left:20px;padding-right:20px;width:auto;max-width:100%;line-height:normal;box-shadow:var(--mdc-extended-fab-container-elevation-shadow);height:var(--mdc-extended-fab-container-height);border-radius:var(--mdc-extended-fab-container-shape);font-family:var(--mdc-extended-fab-label-text-font);font-size:var(--mdc-extended-fab-label-text-size);font-weight:var(--mdc-extended-fab-label-text-weight);letter-spacing:var(--mdc-extended-fab-label-text-tracking)}.mat-mdc-extended-fab:hover{box-shadow:var(--mdc-extended-fab-hover-container-elevation-shadow)}.mat-mdc-extended-fab:focus{box-shadow:var(--mdc-extended-fab-focus-container-elevation-shadow)}.mat-mdc-extended-fab:active,.mat-mdc-extended-fab:focus:active{box-shadow:var(--mdc-extended-fab-pressed-container-elevation-shadow)}.mat-mdc-extended-fab[disabled],.mat-mdc-extended-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none}.mat-mdc-extended-fab[disabled],.mat-mdc-extended-fab[disabled]:focus,.mat-mdc-extended-fab.mat-mdc-button-disabled,.mat-mdc-extended-fab.mat-mdc-button-disabled:focus{box-shadow:none}.mat-mdc-extended-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.mat-icon,[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.material-icons,.mat-mdc-extended-fab>.mat-icon,.mat-mdc-extended-fab>.material-icons{margin-left:-8px;margin-right:12px}.mat-mdc-extended-fab .mdc-button__label+.mat-icon,.mat-mdc-extended-fab .mdc-button__label+.material-icons,[dir=rtl] .mat-mdc-extended-fab>.mat-icon,[dir=rtl] .mat-mdc-extended-fab>.material-icons{margin-left:12px;margin-right:-8px}.mat-mdc-extended-fab .mat-mdc-button-touch-target{width:100%}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatMiniFabAnchor, decorators: [{\n            type: Component,\n            args: [{ selector: `a[mat-mini-fab]`, host: MAT_ANCHOR_HOST, exportAs: 'matButton, matAnchor', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, template: \"<span\\n    class=\\\"mat-mdc-button-persistent-ripple\\\"\\n    [class.mdc-button__ripple]=\\\"!_isFab\\\"\\n    [class.mdc-fab__ripple]=\\\"_isFab\\\"></span>\\n\\n<ng-content select=\\\".material-icons:not([iconPositionEnd]), mat-icon:not([iconPositionEnd]), [matButtonIcon]:not([iconPositionEnd])\\\">\\n</ng-content>\\n\\n<span class=\\\"mdc-button__label\\\"><ng-content></ng-content></span>\\n\\n<ng-content select=\\\".material-icons[iconPositionEnd], mat-icon[iconPositionEnd], [matButtonIcon][iconPositionEnd]\\\">\\n</ng-content>\\n\\n<!--\\n  The indicator can't be directly on the button, because MDC uses ::before for high contrast\\n  indication and it can't be on the ripple, because it has a border radius and overflow: hidden.\\n-->\\n<span class=\\\"mat-mdc-focus-indicator\\\"></span>\\n\\n<span class=\\\"mat-mdc-button-touch-target\\\"></span>\\n\", styles: [\".mat-mdc-fab-base{-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-user-select:none;user-select:none;position:relative;display:inline-flex;align-items:center;justify-content:center;box-sizing:border-box;width:56px;height:56px;padding:0;border:none;fill:currentColor;text-decoration:none;cursor:pointer;-moz-appearance:none;-webkit-appearance:none;overflow:visible;transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1),opacity 15ms linear 30ms,transform 270ms 0ms cubic-bezier(0, 0, 0.2, 1);flex-shrink:0}.mat-mdc-fab-base .mat-mdc-button-ripple,.mat-mdc-fab-base .mat-mdc-button-persistent-ripple,.mat-mdc-fab-base .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-fab-base .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-fab-base .mat-mdc-button-persistent-ripple::before{content:\\\"\\\";opacity:0}.mat-mdc-fab-base .mdc-button__label,.mat-mdc-fab-base .mat-icon{z-index:1;position:relative}.mat-mdc-fab-base .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-fab-base:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-fab-base._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-fab-base::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.mat-mdc-fab-base[hidden]{display:none}.mat-mdc-fab-base::-moz-focus-inner{padding:0;border:0}.mat-mdc-fab-base:active,.mat-mdc-fab-base:focus{outline:none}.mat-mdc-fab-base:hover{cursor:pointer}.mat-mdc-fab-base>svg{width:100%}.mat-mdc-fab-base .mat-icon,.mat-mdc-fab-base .material-icons{transition:transform 180ms 90ms cubic-bezier(0, 0, 0.2, 1);fill:currentColor;will-change:transform}.mat-mdc-fab-base .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-fab-base[disabled],.mat-mdc-fab-base.mat-mdc-button-disabled{cursor:default;pointer-events:none}.mat-mdc-fab-base[disabled],.mat-mdc-fab-base[disabled]:focus,.mat-mdc-fab-base.mat-mdc-button-disabled,.mat-mdc-fab-base.mat-mdc-button-disabled:focus{box-shadow:none}.mat-mdc-fab-base.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-fab{background-color:var(--mdc-fab-container-color);border-radius:var(--mdc-fab-container-shape);color:inherit;color:var(--mat-fab-foreground-color, inherit);box-shadow:var(--mdc-fab-container-elevation-shadow)}.mat-mdc-fab .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%);display:var(--mat-fab-touch-target-display)}.mat-mdc-fab .mat-ripple-element{background-color:var(--mat-fab-ripple-color)}.mat-mdc-fab .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-state-layer-color)}.mat-mdc-fab.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-disabled-state-layer-color)}.mat-mdc-fab:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-hover-state-layer-opacity)}.mat-mdc-fab.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-fab.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-fab.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-focus-state-layer-opacity)}.mat-mdc-fab:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-pressed-state-layer-opacity)}.mat-mdc-fab:hover{box-shadow:var(--mdc-fab-hover-container-elevation-shadow)}.mat-mdc-fab:focus{box-shadow:var(--mdc-fab-focus-container-elevation-shadow)}.mat-mdc-fab:active,.mat-mdc-fab:focus:active{box-shadow:var(--mdc-fab-pressed-container-elevation-shadow)}.mat-mdc-fab[disabled],.mat-mdc-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-fab-disabled-state-foreground-color);background-color:var(--mat-fab-disabled-state-container-color)}.mat-mdc-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-mini-fab{width:40px;height:40px;background-color:var(--mdc-fab-small-container-color);border-radius:var(--mdc-fab-small-container-shape);color:inherit;color:var(--mat-fab-small-foreground-color, inherit);box-shadow:var(--mdc-fab-small-container-elevation-shadow)}.mat-mdc-mini-fab .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%);display:var(--mat-fab-small-touch-target-display)}.mat-mdc-mini-fab .mat-ripple-element{background-color:var(--mat-fab-small-ripple-color)}.mat-mdc-mini-fab .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-small-state-layer-color)}.mat-mdc-mini-fab.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-fab-small-disabled-state-layer-color)}.mat-mdc-mini-fab:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-hover-state-layer-opacity)}.mat-mdc-mini-fab.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-focus-state-layer-opacity)}.mat-mdc-mini-fab:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-fab-small-pressed-state-layer-opacity)}.mat-mdc-mini-fab:hover{box-shadow:var(--mdc-fab-small-hover-container-elevation-shadow)}.mat-mdc-mini-fab:focus{box-shadow:var(--mdc-fab-small-focus-container-elevation-shadow)}.mat-mdc-mini-fab:active,.mat-mdc-mini-fab:focus:active{box-shadow:var(--mdc-fab-small-pressed-container-elevation-shadow)}.mat-mdc-mini-fab[disabled],.mat-mdc-mini-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mat-fab-small-disabled-state-foreground-color);background-color:var(--mat-fab-small-disabled-state-container-color)}.mat-mdc-mini-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-extended-fab{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;border-radius:24px;padding-left:20px;padding-right:20px;width:auto;max-width:100%;line-height:normal;box-shadow:var(--mdc-extended-fab-container-elevation-shadow);height:var(--mdc-extended-fab-container-height);border-radius:var(--mdc-extended-fab-container-shape);font-family:var(--mdc-extended-fab-label-text-font);font-size:var(--mdc-extended-fab-label-text-size);font-weight:var(--mdc-extended-fab-label-text-weight);letter-spacing:var(--mdc-extended-fab-label-text-tracking)}.mat-mdc-extended-fab:hover{box-shadow:var(--mdc-extended-fab-hover-container-elevation-shadow)}.mat-mdc-extended-fab:focus{box-shadow:var(--mdc-extended-fab-focus-container-elevation-shadow)}.mat-mdc-extended-fab:active,.mat-mdc-extended-fab:focus:active{box-shadow:var(--mdc-extended-fab-pressed-container-elevation-shadow)}.mat-mdc-extended-fab[disabled],.mat-mdc-extended-fab.mat-mdc-button-disabled{cursor:default;pointer-events:none}.mat-mdc-extended-fab[disabled],.mat-mdc-extended-fab[disabled]:focus,.mat-mdc-extended-fab.mat-mdc-button-disabled,.mat-mdc-extended-fab.mat-mdc-button-disabled:focus{box-shadow:none}.mat-mdc-extended-fab.mat-mdc-button-disabled-interactive{pointer-events:auto}[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.mat-icon,[dir=rtl] .mat-mdc-extended-fab .mdc-button__label+.material-icons,.mat-mdc-extended-fab>.mat-icon,.mat-mdc-extended-fab>.material-icons{margin-left:-8px;margin-right:12px}.mat-mdc-extended-fab .mdc-button__label+.mat-icon,.mat-mdc-extended-fab .mdc-button__label+.material-icons,[dir=rtl] .mat-mdc-extended-fab>.mat-icon,[dir=rtl] .mat-mdc-extended-fab>.material-icons{margin-left:12px;margin-right:-8px}.mat-mdc-extended-fab .mat-mdc-button-touch-target{width:100%}\"] }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i1.Platform }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_FAB_DEFAULT_OPTIONS]\n                }] }] });\n\n/**\n * Material Design icon button component. This type of button displays a single interactive icon for\n * users to perform an action.\n * See https://material.io/develop/web/components/buttons/icon-buttons/\n */\nclass MatIconButton extends MatButtonBase {\n    constructor(elementRef, platform, ngZone, animationMode) {\n        super(elementRef, platform, ngZone, animationMode);\n        this._rippleLoader.configureRipple(this._elementRef.nativeElement, { centered: true });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatIconButton, deps: [{ token: i0.ElementRef }, { token: i1.Platform }, { token: i0.NgZone }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.1.0-next.3\", type: MatIconButton, isStandalone: true, selector: \"button[mat-icon-button]\", host: { properties: { \"attr.disabled\": \"_getDisabledAttribute()\", \"attr.aria-disabled\": \"_getAriaDisabled()\", \"class.mat-mdc-button-disabled\": \"disabled\", \"class.mat-mdc-button-disabled-interactive\": \"disabledInteractive\", \"class._mat-animation-noopable\": \"_animationMode === \\\"NoopAnimations\\\"\", \"class.mat-unthemed\": \"!color\", \"class.mat-mdc-button-base\": \"true\", \"class\": \"color ? \\\"mat-\\\" + color : \\\"\\\"\" } }, exportAs: [\"matButton\"], usesInheritance: true, ngImport: i0, template: \"<span class=\\\"mat-mdc-button-persistent-ripple mdc-icon-button__ripple\\\"></span>\\n\\n<ng-content></ng-content>\\n\\n<!--\\n  The indicator can't be directly on the button, because MDC uses ::before for high contrast\\n  indication and it can't be on the ripple, because it has a border radius and overflow: hidden.\\n-->\\n<span class=\\\"mat-mdc-focus-indicator\\\"></span>\\n\\n<span class=\\\"mat-mdc-button-touch-target\\\"></span>\\n\", styles: [\".mat-mdc-icon-button{-webkit-user-select:none;user-select:none;display:inline-block;position:relative;box-sizing:border-box;border:none;outline:none;background-color:rgba(0,0,0,0);fill:currentColor;color:inherit;text-decoration:none;cursor:pointer;z-index:0;overflow:visible;border-radius:50%;flex-shrink:0;text-align:center;width:var(--mdc-icon-button-state-layer-size, 48px);height:var(--mdc-icon-button-state-layer-size, 48px);padding:calc(calc(var(--mdc-icon-button-state-layer-size, 48px) - var(--mdc-icon-button-icon-size, 24px)) / 2);font-size:var(--mdc-icon-button-icon-size);color:var(--mdc-icon-button-icon-color);-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-icon-button[disabled],.mat-mdc-icon-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-icon-button-disabled-icon-color)}.mat-mdc-icon-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-icon-button img,.mat-mdc-icon-button svg{width:var(--mdc-icon-button-icon-size);height:var(--mdc-icon-button-icon-size);vertical-align:baseline}.mat-mdc-icon-button .mat-mdc-button-ripple,.mat-mdc-icon-button .mat-mdc-button-persistent-ripple,.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-icon-button .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{content:\\\"\\\";opacity:0}.mat-mdc-icon-button .mdc-button__label,.mat-mdc-icon-button .mat-icon{z-index:1;position:relative}.mat-mdc-icon-button .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-icon-button:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-icon-button .mat-ripple-element{background-color:var(--mat-icon-button-ripple-color)}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-icon-button-state-layer-color)}.mat-mdc-icon-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-icon-button-disabled-state-layer-color)}.mat-mdc-icon-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-icon-button-hover-state-layer-opacity)}.mat-mdc-icon-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-icon-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-icon-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-icon-button-focus-state-layer-opacity)}.mat-mdc-icon-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-icon-button-pressed-state-layer-opacity)}.mat-mdc-icon-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%);display:var(--mat-icon-button-touch-target-display)}.mat-mdc-icon-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple{border-radius:50%}.mat-mdc-icon-button[hidden]{display:none}.mat-mdc-icon-button.mat-unthemed:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-primary:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-accent:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-warn:not(.mdc-ripple-upgraded):focus::before{background:rgba(0,0,0,0);opacity:1}\", \".cdk-high-contrast-active .mat-mdc-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-unelevated-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-raised-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-outlined-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-icon-button{outline:solid 1px}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatIconButton, decorators: [{\n            type: Component,\n            args: [{ selector: `button[mat-icon-button]`, host: MAT_BUTTON_HOST, exportAs: 'matButton', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, template: \"<span class=\\\"mat-mdc-button-persistent-ripple mdc-icon-button__ripple\\\"></span>\\n\\n<ng-content></ng-content>\\n\\n<!--\\n  The indicator can't be directly on the button, because MDC uses ::before for high contrast\\n  indication and it can't be on the ripple, because it has a border radius and overflow: hidden.\\n-->\\n<span class=\\\"mat-mdc-focus-indicator\\\"></span>\\n\\n<span class=\\\"mat-mdc-button-touch-target\\\"></span>\\n\", styles: [\".mat-mdc-icon-button{-webkit-user-select:none;user-select:none;display:inline-block;position:relative;box-sizing:border-box;border:none;outline:none;background-color:rgba(0,0,0,0);fill:currentColor;color:inherit;text-decoration:none;cursor:pointer;z-index:0;overflow:visible;border-radius:50%;flex-shrink:0;text-align:center;width:var(--mdc-icon-button-state-layer-size, 48px);height:var(--mdc-icon-button-state-layer-size, 48px);padding:calc(calc(var(--mdc-icon-button-state-layer-size, 48px) - var(--mdc-icon-button-icon-size, 24px)) / 2);font-size:var(--mdc-icon-button-icon-size);color:var(--mdc-icon-button-icon-color);-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-icon-button[disabled],.mat-mdc-icon-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-icon-button-disabled-icon-color)}.mat-mdc-icon-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-icon-button img,.mat-mdc-icon-button svg{width:var(--mdc-icon-button-icon-size);height:var(--mdc-icon-button-icon-size);vertical-align:baseline}.mat-mdc-icon-button .mat-mdc-button-ripple,.mat-mdc-icon-button .mat-mdc-button-persistent-ripple,.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-icon-button .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{content:\\\"\\\";opacity:0}.mat-mdc-icon-button .mdc-button__label,.mat-mdc-icon-button .mat-icon{z-index:1;position:relative}.mat-mdc-icon-button .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-icon-button:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-icon-button .mat-ripple-element{background-color:var(--mat-icon-button-ripple-color)}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-icon-button-state-layer-color)}.mat-mdc-icon-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-icon-button-disabled-state-layer-color)}.mat-mdc-icon-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-icon-button-hover-state-layer-opacity)}.mat-mdc-icon-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-icon-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-icon-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-icon-button-focus-state-layer-opacity)}.mat-mdc-icon-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-icon-button-pressed-state-layer-opacity)}.mat-mdc-icon-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%);display:var(--mat-icon-button-touch-target-display)}.mat-mdc-icon-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple{border-radius:50%}.mat-mdc-icon-button[hidden]{display:none}.mat-mdc-icon-button.mat-unthemed:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-primary:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-accent:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-warn:not(.mdc-ripple-upgraded):focus::before{background:rgba(0,0,0,0);opacity:1}\", \".cdk-high-contrast-active .mat-mdc-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-unelevated-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-raised-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-outlined-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-icon-button{outline:solid 1px}\"] }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i1.Platform }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }] });\n/**\n * Material Design icon button component for anchor elements. This button displays a single\n * interaction icon that allows users to navigate across different routes or pages.\n * See https://material.io/develop/web/components/buttons/icon-buttons/\n */\nclass MatIconAnchor extends MatAnchorBase {\n    constructor(elementRef, platform, ngZone, animationMode) {\n        super(elementRef, platform, ngZone, animationMode);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatIconAnchor, deps: [{ token: i0.ElementRef }, { token: i1.Platform }, { token: i0.NgZone }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.1.0-next.3\", type: MatIconAnchor, isStandalone: true, selector: \"a[mat-icon-button]\", host: { properties: { \"attr.disabled\": \"_getDisabledAttribute()\", \"class.mat-mdc-button-disabled\": \"disabled\", \"class.mat-mdc-button-disabled-interactive\": \"disabledInteractive\", \"class._mat-animation-noopable\": \"_animationMode === \\\"NoopAnimations\\\"\", \"attr.tabindex\": \"disabled && !disabledInteractive ? -1 : tabIndex\", \"attr.aria-disabled\": \"_getDisabledAttribute()\", \"class.mat-unthemed\": \"!color\", \"class.mat-mdc-button-base\": \"true\", \"class\": \"color ? \\\"mat-\\\" + color : \\\"\\\"\" } }, exportAs: [\"matButton\", \"matAnchor\"], usesInheritance: true, ngImport: i0, template: \"<span class=\\\"mat-mdc-button-persistent-ripple mdc-icon-button__ripple\\\"></span>\\n\\n<ng-content></ng-content>\\n\\n<!--\\n  The indicator can't be directly on the button, because MDC uses ::before for high contrast\\n  indication and it can't be on the ripple, because it has a border radius and overflow: hidden.\\n-->\\n<span class=\\\"mat-mdc-focus-indicator\\\"></span>\\n\\n<span class=\\\"mat-mdc-button-touch-target\\\"></span>\\n\", styles: [\".mat-mdc-icon-button{-webkit-user-select:none;user-select:none;display:inline-block;position:relative;box-sizing:border-box;border:none;outline:none;background-color:rgba(0,0,0,0);fill:currentColor;color:inherit;text-decoration:none;cursor:pointer;z-index:0;overflow:visible;border-radius:50%;flex-shrink:0;text-align:center;width:var(--mdc-icon-button-state-layer-size, 48px);height:var(--mdc-icon-button-state-layer-size, 48px);padding:calc(calc(var(--mdc-icon-button-state-layer-size, 48px) - var(--mdc-icon-button-icon-size, 24px)) / 2);font-size:var(--mdc-icon-button-icon-size);color:var(--mdc-icon-button-icon-color);-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-icon-button[disabled],.mat-mdc-icon-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-icon-button-disabled-icon-color)}.mat-mdc-icon-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-icon-button img,.mat-mdc-icon-button svg{width:var(--mdc-icon-button-icon-size);height:var(--mdc-icon-button-icon-size);vertical-align:baseline}.mat-mdc-icon-button .mat-mdc-button-ripple,.mat-mdc-icon-button .mat-mdc-button-persistent-ripple,.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-icon-button .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{content:\\\"\\\";opacity:0}.mat-mdc-icon-button .mdc-button__label,.mat-mdc-icon-button .mat-icon{z-index:1;position:relative}.mat-mdc-icon-button .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-icon-button:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-icon-button .mat-ripple-element{background-color:var(--mat-icon-button-ripple-color)}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-icon-button-state-layer-color)}.mat-mdc-icon-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-icon-button-disabled-state-layer-color)}.mat-mdc-icon-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-icon-button-hover-state-layer-opacity)}.mat-mdc-icon-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-icon-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-icon-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-icon-button-focus-state-layer-opacity)}.mat-mdc-icon-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-icon-button-pressed-state-layer-opacity)}.mat-mdc-icon-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%);display:var(--mat-icon-button-touch-target-display)}.mat-mdc-icon-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple{border-radius:50%}.mat-mdc-icon-button[hidden]{display:none}.mat-mdc-icon-button.mat-unthemed:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-primary:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-accent:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-warn:not(.mdc-ripple-upgraded):focus::before{background:rgba(0,0,0,0);opacity:1}\", \".cdk-high-contrast-active .mat-mdc-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-unelevated-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-raised-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-outlined-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-icon-button{outline:solid 1px}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatIconAnchor, decorators: [{\n            type: Component,\n            args: [{ selector: `a[mat-icon-button]`, host: MAT_ANCHOR_HOST, exportAs: 'matButton, matAnchor', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, template: \"<span class=\\\"mat-mdc-button-persistent-ripple mdc-icon-button__ripple\\\"></span>\\n\\n<ng-content></ng-content>\\n\\n<!--\\n  The indicator can't be directly on the button, because MDC uses ::before for high contrast\\n  indication and it can't be on the ripple, because it has a border radius and overflow: hidden.\\n-->\\n<span class=\\\"mat-mdc-focus-indicator\\\"></span>\\n\\n<span class=\\\"mat-mdc-button-touch-target\\\"></span>\\n\", styles: [\".mat-mdc-icon-button{-webkit-user-select:none;user-select:none;display:inline-block;position:relative;box-sizing:border-box;border:none;outline:none;background-color:rgba(0,0,0,0);fill:currentColor;color:inherit;text-decoration:none;cursor:pointer;z-index:0;overflow:visible;border-radius:50%;flex-shrink:0;text-align:center;width:var(--mdc-icon-button-state-layer-size, 48px);height:var(--mdc-icon-button-state-layer-size, 48px);padding:calc(calc(var(--mdc-icon-button-state-layer-size, 48px) - var(--mdc-icon-button-icon-size, 24px)) / 2);font-size:var(--mdc-icon-button-icon-size);color:var(--mdc-icon-button-icon-color);-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-icon-button[disabled],.mat-mdc-icon-button.mat-mdc-button-disabled{cursor:default;pointer-events:none;color:var(--mdc-icon-button-disabled-icon-color)}.mat-mdc-icon-button.mat-mdc-button-disabled-interactive{pointer-events:auto}.mat-mdc-icon-button img,.mat-mdc-icon-button svg{width:var(--mdc-icon-button-icon-size);height:var(--mdc-icon-button-icon-size);vertical-align:baseline}.mat-mdc-icon-button .mat-mdc-button-ripple,.mat-mdc-icon-button .mat-mdc-button-persistent-ripple,.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-icon-button .mat-mdc-button-ripple{overflow:hidden}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{content:\\\"\\\";opacity:0}.mat-mdc-icon-button .mdc-button__label,.mat-mdc-icon-button .mat-icon{z-index:1;position:relative}.mat-mdc-icon-button .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-icon-button:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-icon-button .mat-ripple-element{background-color:var(--mat-icon-button-ripple-color)}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-icon-button-state-layer-color)}.mat-mdc-icon-button.mat-mdc-button-disabled .mat-mdc-button-persistent-ripple::before{background-color:var(--mat-icon-button-disabled-state-layer-color)}.mat-mdc-icon-button:hover .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-icon-button-hover-state-layer-opacity)}.mat-mdc-icon-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-icon-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-icon-button.mat-mdc-button-disabled-interactive:focus .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-icon-button-focus-state-layer-opacity)}.mat-mdc-icon-button:active .mat-mdc-button-persistent-ripple::before{opacity:var(--mat-icon-button-pressed-state-layer-opacity)}.mat-mdc-icon-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%);display:var(--mat-icon-button-touch-target-display)}.mat-mdc-icon-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-icon-button .mat-mdc-button-persistent-ripple{border-radius:50%}.mat-mdc-icon-button[hidden]{display:none}.mat-mdc-icon-button.mat-unthemed:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-primary:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-accent:not(.mdc-ripple-upgraded):focus::before,.mat-mdc-icon-button.mat-warn:not(.mdc-ripple-upgraded):focus::before{background:rgba(0,0,0,0);opacity:1}\", \".cdk-high-contrast-active .mat-mdc-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-unelevated-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-raised-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-outlined-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-icon-button{outline:solid 1px}\"] }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i1.Platform }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }] });\n\nclass MatButtonModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatButtonModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatButtonModule, imports: [MatCommonModule,\n            MatRippleModule,\n            MatAnchor,\n            MatButton,\n            MatIconAnchor,\n            MatMiniFabAnchor,\n            MatMiniFabButton,\n            MatIconButton,\n            MatFabAnchor,\n            MatFabButton], exports: [MatAnchor,\n            MatButton,\n            MatIconAnchor,\n            MatIconButton,\n            MatMiniFabAnchor,\n            MatMiniFabButton,\n            MatFabAnchor,\n            MatFabButton,\n            MatCommonModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatButtonModule, imports: [MatCommonModule,\n            MatRippleModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.1.0-next.3\", ngImport: i0, type: MatButtonModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        MatCommonModule,\n                        MatRippleModule,\n                        MatAnchor,\n                        MatButton,\n                        MatIconAnchor,\n                        MatMiniFabAnchor,\n                        MatMiniFabButton,\n                        MatIconButton,\n                        MatFabAnchor,\n                        MatFabButton,\n                    ],\n                    exports: [\n                        MatAnchor,\n                        MatButton,\n                        MatIconAnchor,\n                        MatIconButton,\n                        MatMiniFabAnchor,\n                        MatMiniFabButton,\n                        MatFabAnchor,\n                        MatFabButton,\n                        MatCommonModule,\n                    ],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_BUTTON_CONFIG, MAT_FAB_DEFAULT_OPTIONS, MAT_FAB_DEFAULT_OPTIONS_FACTORY, MatAnchor, MatButton, MatButtonModule, MatFabAnchor, MatFabButton, MatIconAnchor, MatIconButton, MatMiniFabAnchor, MatMiniFabButton };\n","\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ChatService {\n\n  // 取得自訂指令\n  getInstructionCache(): string {\n    const cache = localStorage.getItem('myAICusInstruction');\n    return cache ? JSON.parse(cache) : \"\";\n  }\n}\n","import { Component, inject, OnInit } from '@angular/core';\nimport { MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { FormControl } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ChatService } from '../../../../services/chat.service';\n\n@Component({\n  selector: 'app-chat-instruction-dialog',\n  standalone: true,\n  imports: [\n    MatDialogModule, ReactiveFormsModule, MatButtonModule\n  ],\n  templateUrl: './chat-instruction-dialog.component.html',\n  styleUrls: ['./chat-instruction-dialog.component.scss']\n})\nexport class ChatInstructionDialogComponent implements OnInit {\n  // ====優化部分====\n  // 1. 優化指令與格式化 https://chatgpt.com/c/67839cad-0338-800c-952a-6058cdbe5b04\n  // 2. 調整彈窗樣式（border-radius）\n\n  instructionText = new FormControl('');\n\n  /* Service */\n  private dialogRef = inject(MatDialogRef<ChatInstructionDialogComponent>);\n  private _chatService = inject(ChatService);\n\n  ngOnInit(): void {\n    // 從 localStorage 讀取已存在的自訂指令\n    this.instructionText.setValue(this._chatService.getInstructionCache());\n  }\n\n\n\n  // 儲存自訂指令\n  saveInstruction(): void {\n    // 儲存到 localStorage\n    localStorage.setItem('myAICusInstruction', JSON.stringify(this.instructionText.value));\n    this.dialogRef.close(this.instructionText.value);\n  }\n}\n","<div class=\"cus-intruction-wrapper\">\n  <h2 mat-dialog-title>自訂指令（Custom Instruction）</h2>\n  <div mat-dialog-content>\n    <p class=\"notice-text\">設定與AI對話時的固定指令，這些指令會在每次對話時自動加入。</p>\n    <div class=\"input-area\">\n      <textarea\n                placeholder=\"輸入您的訊息...\"\n                rows=\"4\"\n                id=\"user-input\"\n                [formControl]=\"instructionText\"></textarea>\n    </div>\n  </div>\n  <div mat-dialog-actions>\n    <button mat-button mat-dialog-close>取消</button>\n    <button mat-raised-button color=\"primary\" (click)=\"saveInstruction()\">儲存</button>\n  </div>\n</div>","const bundledLanguagesInfo = [\n  {\n    \"id\": \"abap\",\n    \"name\": \"ABAP\",\n    \"import\": () => import('./langs/abap.mjs')\n  },\n  {\n    \"id\": \"actionscript-3\",\n    \"name\": \"ActionScript\",\n    \"import\": () => import('./langs/actionscript-3.mjs')\n  },\n  {\n    \"id\": \"ada\",\n    \"name\": \"Ada\",\n    \"import\": () => import('./langs/ada.mjs')\n  },\n  {\n    \"id\": \"angular-html\",\n    \"name\": \"Angular HTML\",\n    \"import\": () => import('./langs/angular-html.mjs')\n  },\n  {\n    \"id\": \"angular-ts\",\n    \"name\": \"Angular TypeScript\",\n    \"import\": () => import('./langs/angular-ts.mjs')\n  },\n  {\n    \"id\": \"apache\",\n    \"name\": \"Apache Conf\",\n    \"import\": () => import('./langs/apache.mjs')\n  },\n  {\n    \"id\": \"apex\",\n    \"name\": \"Apex\",\n    \"import\": () => import('./langs/apex.mjs')\n  },\n  {\n    \"id\": \"apl\",\n    \"name\": \"APL\",\n    \"import\": () => import('./langs/apl.mjs')\n  },\n  {\n    \"id\": \"applescript\",\n    \"name\": \"AppleScript\",\n    \"import\": () => import('./langs/applescript.mjs')\n  },\n  {\n    \"id\": \"ara\",\n    \"name\": \"Ara\",\n    \"import\": () => import('./langs/ara.mjs')\n  },\n  {\n    \"id\": \"asciidoc\",\n    \"name\": \"AsciiDoc\",\n    \"aliases\": [\n      \"adoc\"\n    ],\n    \"import\": () => import('./langs/asciidoc.mjs')\n  },\n  {\n    \"id\": \"asm\",\n    \"name\": \"Assembly\",\n    \"import\": () => import('./langs/asm.mjs')\n  },\n  {\n    \"id\": \"astro\",\n    \"name\": \"Astro\",\n    \"import\": () => import('./langs/astro.mjs')\n  },\n  {\n    \"id\": \"awk\",\n    \"name\": \"AWK\",\n    \"import\": () => import('./langs/awk.mjs')\n  },\n  {\n    \"id\": \"ballerina\",\n    \"name\": \"Ballerina\",\n    \"import\": () => import('./langs/ballerina.mjs')\n  },\n  {\n    \"id\": \"bat\",\n    \"name\": \"Batch File\",\n    \"aliases\": [\n      \"batch\"\n    ],\n    \"import\": () => import('./langs/bat.mjs')\n  },\n  {\n    \"id\": \"beancount\",\n    \"name\": \"Beancount\",\n    \"import\": () => import('./langs/beancount.mjs')\n  },\n  {\n    \"id\": \"berry\",\n    \"name\": \"Berry\",\n    \"aliases\": [\n      \"be\"\n    ],\n    \"import\": () => import('./langs/berry.mjs')\n  },\n  {\n    \"id\": \"bibtex\",\n    \"name\": \"BibTeX\",\n    \"import\": () => import('./langs/bibtex.mjs')\n  },\n  {\n    \"id\": \"bicep\",\n    \"name\": \"Bicep\",\n    \"import\": () => import('./langs/bicep.mjs')\n  },\n  {\n    \"id\": \"blade\",\n    \"name\": \"Blade\",\n    \"import\": () => import('./langs/blade.mjs')\n  },\n  {\n    \"id\": \"c\",\n    \"name\": \"C\",\n    \"import\": () => import('./langs/c.mjs')\n  },\n  {\n    \"id\": \"cadence\",\n    \"name\": \"Cadence\",\n    \"aliases\": [\n      \"cdc\"\n    ],\n    \"import\": () => import('./langs/cadence.mjs')\n  },\n  {\n    \"id\": \"clarity\",\n    \"name\": \"Clarity\",\n    \"import\": () => import('./langs/clarity.mjs')\n  },\n  {\n    \"id\": \"clojure\",\n    \"name\": \"Clojure\",\n    \"aliases\": [\n      \"clj\"\n    ],\n    \"import\": () => import('./langs/clojure.mjs')\n  },\n  {\n    \"id\": \"cmake\",\n    \"name\": \"CMake\",\n    \"import\": () => import('./langs/cmake.mjs')\n  },\n  {\n    \"id\": \"cobol\",\n    \"name\": \"COBOL\",\n    \"import\": () => import('./langs/cobol.mjs')\n  },\n  {\n    \"id\": \"codeowners\",\n    \"name\": \"CODEOWNERS\",\n    \"import\": () => import('./langs/codeowners.mjs')\n  },\n  {\n    \"id\": \"codeql\",\n    \"name\": \"CodeQL\",\n    \"aliases\": [\n      \"ql\"\n    ],\n    \"import\": () => import('./langs/codeql.mjs')\n  },\n  {\n    \"id\": \"coffee\",\n    \"name\": \"CoffeeScript\",\n    \"aliases\": [\n      \"coffeescript\"\n    ],\n    \"import\": () => import('./langs/coffee.mjs')\n  },\n  {\n    \"id\": \"common-lisp\",\n    \"name\": \"Common Lisp\",\n    \"aliases\": [\n      \"lisp\"\n    ],\n    \"import\": () => import('./langs/common-lisp.mjs')\n  },\n  {\n    \"id\": \"cpp\",\n    \"name\": \"C++\",\n    \"aliases\": [\n      \"c++\"\n    ],\n    \"import\": () => import('./langs/cpp.mjs')\n  },\n  {\n    \"id\": \"crystal\",\n    \"name\": \"Crystal\",\n    \"import\": () => import('./langs/crystal.mjs')\n  },\n  {\n    \"id\": \"csharp\",\n    \"name\": \"C#\",\n    \"aliases\": [\n      \"c#\",\n      \"cs\"\n    ],\n    \"import\": () => import('./langs/csharp.mjs')\n  },\n  {\n    \"id\": \"css\",\n    \"name\": \"CSS\",\n    \"import\": () => import('./langs/css.mjs')\n  },\n  {\n    \"id\": \"csv\",\n    \"name\": \"CSV\",\n    \"import\": () => import('./langs/csv.mjs')\n  },\n  {\n    \"id\": \"cue\",\n    \"name\": \"CUE\",\n    \"import\": () => import('./langs/cue.mjs')\n  },\n  {\n    \"id\": \"cypher\",\n    \"name\": \"Cypher\",\n    \"aliases\": [\n      \"cql\"\n    ],\n    \"import\": () => import('./langs/cypher.mjs')\n  },\n  {\n    \"id\": \"d\",\n    \"name\": \"D\",\n    \"import\": () => import('./langs/d.mjs')\n  },\n  {\n    \"id\": \"dart\",\n    \"name\": \"Dart\",\n    \"import\": () => import('./langs/dart.mjs')\n  },\n  {\n    \"id\": \"dax\",\n    \"name\": \"DAX\",\n    \"import\": () => import('./langs/dax.mjs')\n  },\n  {\n    \"id\": \"desktop\",\n    \"name\": \"Desktop\",\n    \"import\": () => import('./langs/desktop.mjs')\n  },\n  {\n    \"id\": \"diff\",\n    \"name\": \"Diff\",\n    \"import\": () => import('./langs/diff.mjs')\n  },\n  {\n    \"id\": \"docker\",\n    \"name\": \"Dockerfile\",\n    \"aliases\": [\n      \"dockerfile\"\n    ],\n    \"import\": () => import('./langs/docker.mjs')\n  },\n  {\n    \"id\": \"dream-maker\",\n    \"name\": \"Dream Maker\",\n    \"import\": () => import('./langs/dream-maker.mjs')\n  },\n  {\n    \"id\": \"edge\",\n    \"name\": \"Edge\",\n    \"import\": () => import('./langs/edge.mjs')\n  },\n  {\n    \"id\": \"elixir\",\n    \"name\": \"Elixir\",\n    \"import\": () => import('./langs/elixir.mjs')\n  },\n  {\n    \"id\": \"elm\",\n    \"name\": \"Elm\",\n    \"import\": () => import('./langs/elm.mjs')\n  },\n  {\n    \"id\": \"emacs-lisp\",\n    \"name\": \"Emacs Lisp\",\n    \"aliases\": [\n      \"elisp\"\n    ],\n    \"import\": () => import('./langs/emacs-lisp.mjs')\n  },\n  {\n    \"id\": \"erb\",\n    \"name\": \"ERB\",\n    \"import\": () => import('./langs/erb.mjs')\n  },\n  {\n    \"id\": \"erlang\",\n    \"name\": \"Erlang\",\n    \"aliases\": [\n      \"erl\"\n    ],\n    \"import\": () => import('./langs/erlang.mjs')\n  },\n  {\n    \"id\": \"fennel\",\n    \"name\": \"Fennel\",\n    \"import\": () => import('./langs/fennel.mjs')\n  },\n  {\n    \"id\": \"fish\",\n    \"name\": \"Fish\",\n    \"import\": () => import('./langs/fish.mjs')\n  },\n  {\n    \"id\": \"fluent\",\n    \"name\": \"Fluent\",\n    \"aliases\": [\n      \"ftl\"\n    ],\n    \"import\": () => import('./langs/fluent.mjs')\n  },\n  {\n    \"id\": \"fortran-fixed-form\",\n    \"name\": \"Fortran (Fixed Form)\",\n    \"aliases\": [\n      \"f\",\n      \"for\",\n      \"f77\"\n    ],\n    \"import\": () => import('./langs/fortran-fixed-form.mjs')\n  },\n  {\n    \"id\": \"fortran-free-form\",\n    \"name\": \"Fortran (Free Form)\",\n    \"aliases\": [\n      \"f90\",\n      \"f95\",\n      \"f03\",\n      \"f08\",\n      \"f18\"\n    ],\n    \"import\": () => import('./langs/fortran-free-form.mjs')\n  },\n  {\n    \"id\": \"fsharp\",\n    \"name\": \"F#\",\n    \"aliases\": [\n      \"f#\",\n      \"fs\"\n    ],\n    \"import\": () => import('./langs/fsharp.mjs')\n  },\n  {\n    \"id\": \"gdresource\",\n    \"name\": \"GDResource\",\n    \"import\": () => import('./langs/gdresource.mjs')\n  },\n  {\n    \"id\": \"gdscript\",\n    \"name\": \"GDScript\",\n    \"import\": () => import('./langs/gdscript.mjs')\n  },\n  {\n    \"id\": \"gdshader\",\n    \"name\": \"GDShader\",\n    \"import\": () => import('./langs/gdshader.mjs')\n  },\n  {\n    \"id\": \"genie\",\n    \"name\": \"Genie\",\n    \"import\": () => import('./langs/genie.mjs')\n  },\n  {\n    \"id\": \"gherkin\",\n    \"name\": \"Gherkin\",\n    \"import\": () => import('./langs/gherkin.mjs')\n  },\n  {\n    \"id\": \"git-commit\",\n    \"name\": \"Git Commit Message\",\n    \"import\": () => import('./langs/git-commit.mjs')\n  },\n  {\n    \"id\": \"git-rebase\",\n    \"name\": \"Git Rebase Message\",\n    \"import\": () => import('./langs/git-rebase.mjs')\n  },\n  {\n    \"id\": \"gleam\",\n    \"name\": \"Gleam\",\n    \"import\": () => import('./langs/gleam.mjs')\n  },\n  {\n    \"id\": \"glimmer-js\",\n    \"name\": \"Glimmer JS\",\n    \"aliases\": [\n      \"gjs\"\n    ],\n    \"import\": () => import('./langs/glimmer-js.mjs')\n  },\n  {\n    \"id\": \"glimmer-ts\",\n    \"name\": \"Glimmer TS\",\n    \"aliases\": [\n      \"gts\"\n    ],\n    \"import\": () => import('./langs/glimmer-ts.mjs')\n  },\n  {\n    \"id\": \"glsl\",\n    \"name\": \"GLSL\",\n    \"import\": () => import('./langs/glsl.mjs')\n  },\n  {\n    \"id\": \"gnuplot\",\n    \"name\": \"Gnuplot\",\n    \"import\": () => import('./langs/gnuplot.mjs')\n  },\n  {\n    \"id\": \"go\",\n    \"name\": \"Go\",\n    \"import\": () => import('./langs/go.mjs')\n  },\n  {\n    \"id\": \"graphql\",\n    \"name\": \"GraphQL\",\n    \"aliases\": [\n      \"gql\"\n    ],\n    \"import\": () => import('./langs/graphql.mjs')\n  },\n  {\n    \"id\": \"groovy\",\n    \"name\": \"Groovy\",\n    \"import\": () => import('./langs/groovy.mjs')\n  },\n  {\n    \"id\": \"hack\",\n    \"name\": \"Hack\",\n    \"import\": () => import('./langs/hack.mjs')\n  },\n  {\n    \"id\": \"haml\",\n    \"name\": \"Ruby Haml\",\n    \"import\": () => import('./langs/haml.mjs')\n  },\n  {\n    \"id\": \"handlebars\",\n    \"name\": \"Handlebars\",\n    \"aliases\": [\n      \"hbs\"\n    ],\n    \"import\": () => import('./langs/handlebars.mjs')\n  },\n  {\n    \"id\": \"haskell\",\n    \"name\": \"Haskell\",\n    \"aliases\": [\n      \"hs\"\n    ],\n    \"import\": () => import('./langs/haskell.mjs')\n  },\n  {\n    \"id\": \"haxe\",\n    \"name\": \"Haxe\",\n    \"import\": () => import('./langs/haxe.mjs')\n  },\n  {\n    \"id\": \"hcl\",\n    \"name\": \"HashiCorp HCL\",\n    \"import\": () => import('./langs/hcl.mjs')\n  },\n  {\n    \"id\": \"hjson\",\n    \"name\": \"Hjson\",\n    \"import\": () => import('./langs/hjson.mjs')\n  },\n  {\n    \"id\": \"hlsl\",\n    \"name\": \"HLSL\",\n    \"import\": () => import('./langs/hlsl.mjs')\n  },\n  {\n    \"id\": \"html\",\n    \"name\": \"HTML\",\n    \"import\": () => import('./langs/html.mjs')\n  },\n  {\n    \"id\": \"html-derivative\",\n    \"name\": \"HTML (Derivative)\",\n    \"import\": () => import('./langs/html-derivative.mjs')\n  },\n  {\n    \"id\": \"http\",\n    \"name\": \"HTTP\",\n    \"import\": () => import('./langs/http.mjs')\n  },\n  {\n    \"id\": \"hxml\",\n    \"name\": \"HXML\",\n    \"import\": () => import('./langs/hxml.mjs')\n  },\n  {\n    \"id\": \"hy\",\n    \"name\": \"Hy\",\n    \"import\": () => import('./langs/hy.mjs')\n  },\n  {\n    \"id\": \"imba\",\n    \"name\": \"Imba\",\n    \"import\": () => import('./langs/imba.mjs')\n  },\n  {\n    \"id\": \"ini\",\n    \"name\": \"INI\",\n    \"aliases\": [\n      \"properties\"\n    ],\n    \"import\": () => import('./langs/ini.mjs')\n  },\n  {\n    \"id\": \"java\",\n    \"name\": \"Java\",\n    \"import\": () => import('./langs/java.mjs')\n  },\n  {\n    \"id\": \"javascript\",\n    \"name\": \"JavaScript\",\n    \"aliases\": [\n      \"js\"\n    ],\n    \"import\": () => import('./langs/javascript.mjs')\n  },\n  {\n    \"id\": \"jinja\",\n    \"name\": \"Jinja\",\n    \"import\": () => import('./langs/jinja.mjs')\n  },\n  {\n    \"id\": \"jison\",\n    \"name\": \"Jison\",\n    \"import\": () => import('./langs/jison.mjs')\n  },\n  {\n    \"id\": \"json\",\n    \"name\": \"JSON\",\n    \"import\": () => import('./langs/json.mjs')\n  },\n  {\n    \"id\": \"json5\",\n    \"name\": \"JSON5\",\n    \"import\": () => import('./langs/json5.mjs')\n  },\n  {\n    \"id\": \"jsonc\",\n    \"name\": \"JSON with Comments\",\n    \"import\": () => import('./langs/jsonc.mjs')\n  },\n  {\n    \"id\": \"jsonl\",\n    \"name\": \"JSON Lines\",\n    \"import\": () => import('./langs/jsonl.mjs')\n  },\n  {\n    \"id\": \"jsonnet\",\n    \"name\": \"Jsonnet\",\n    \"import\": () => import('./langs/jsonnet.mjs')\n  },\n  {\n    \"id\": \"jssm\",\n    \"name\": \"JSSM\",\n    \"aliases\": [\n      \"fsl\"\n    ],\n    \"import\": () => import('./langs/jssm.mjs')\n  },\n  {\n    \"id\": \"jsx\",\n    \"name\": \"JSX\",\n    \"import\": () => import('./langs/jsx.mjs')\n  },\n  {\n    \"id\": \"julia\",\n    \"name\": \"Julia\",\n    \"aliases\": [\n      \"jl\"\n    ],\n    \"import\": () => import('./langs/julia.mjs')\n  },\n  {\n    \"id\": \"kotlin\",\n    \"name\": \"Kotlin\",\n    \"aliases\": [\n      \"kt\",\n      \"kts\"\n    ],\n    \"import\": () => import('./langs/kotlin.mjs')\n  },\n  {\n    \"id\": \"kusto\",\n    \"name\": \"Kusto\",\n    \"aliases\": [\n      \"kql\"\n    ],\n    \"import\": () => import('./langs/kusto.mjs')\n  },\n  {\n    \"id\": \"latex\",\n    \"name\": \"LaTeX\",\n    \"import\": () => import('./langs/latex.mjs')\n  },\n  {\n    \"id\": \"lean\",\n    \"name\": \"Lean 4\",\n    \"aliases\": [\n      \"lean4\"\n    ],\n    \"import\": () => import('./langs/lean.mjs')\n  },\n  {\n    \"id\": \"less\",\n    \"name\": \"Less\",\n    \"import\": () => import('./langs/less.mjs')\n  },\n  {\n    \"id\": \"liquid\",\n    \"name\": \"Liquid\",\n    \"import\": () => import('./langs/liquid.mjs')\n  },\n  {\n    \"id\": \"log\",\n    \"name\": \"Log file\",\n    \"import\": () => import('./langs/log.mjs')\n  },\n  {\n    \"id\": \"logo\",\n    \"name\": \"Logo\",\n    \"import\": () => import('./langs/logo.mjs')\n  },\n  {\n    \"id\": \"lua\",\n    \"name\": \"Lua\",\n    \"import\": () => import('./langs/lua.mjs')\n  },\n  {\n    \"id\": \"luau\",\n    \"name\": \"Luau\",\n    \"import\": () => import('./langs/luau.mjs')\n  },\n  {\n    \"id\": \"make\",\n    \"name\": \"Makefile\",\n    \"aliases\": [\n      \"makefile\"\n    ],\n    \"import\": () => import('./langs/make.mjs')\n  },\n  {\n    \"id\": \"markdown\",\n    \"name\": \"Markdown\",\n    \"aliases\": [\n      \"md\"\n    ],\n    \"import\": () => import('./langs/markdown.mjs')\n  },\n  {\n    \"id\": \"marko\",\n    \"name\": \"Marko\",\n    \"import\": () => import('./langs/marko.mjs')\n  },\n  {\n    \"id\": \"matlab\",\n    \"name\": \"MATLAB\",\n    \"import\": () => import('./langs/matlab.mjs')\n  },\n  {\n    \"id\": \"mdc\",\n    \"name\": \"MDC\",\n    \"import\": () => import('./langs/mdc.mjs')\n  },\n  {\n    \"id\": \"mdx\",\n    \"name\": \"MDX\",\n    \"import\": () => import('./langs/mdx.mjs')\n  },\n  {\n    \"id\": \"mermaid\",\n    \"name\": \"Mermaid\",\n    \"import\": () => import('./langs/mermaid.mjs')\n  },\n  {\n    \"id\": \"mojo\",\n    \"name\": \"Mojo\",\n    \"import\": () => import('./langs/mojo.mjs')\n  },\n  {\n    \"id\": \"move\",\n    \"name\": \"Move\",\n    \"import\": () => import('./langs/move.mjs')\n  },\n  {\n    \"id\": \"narrat\",\n    \"name\": \"Narrat Language\",\n    \"aliases\": [\n      \"nar\"\n    ],\n    \"import\": () => import('./langs/narrat.mjs')\n  },\n  {\n    \"id\": \"nextflow\",\n    \"name\": \"Nextflow\",\n    \"aliases\": [\n      \"nf\"\n    ],\n    \"import\": () => import('./langs/nextflow.mjs')\n  },\n  {\n    \"id\": \"nginx\",\n    \"name\": \"Nginx\",\n    \"import\": () => import('./langs/nginx.mjs')\n  },\n  {\n    \"id\": \"nim\",\n    \"name\": \"Nim\",\n    \"import\": () => import('./langs/nim.mjs')\n  },\n  {\n    \"id\": \"nix\",\n    \"name\": \"Nix\",\n    \"import\": () => import('./langs/nix.mjs')\n  },\n  {\n    \"id\": \"nushell\",\n    \"name\": \"nushell\",\n    \"aliases\": [\n      \"nu\"\n    ],\n    \"import\": () => import('./langs/nushell.mjs')\n  },\n  {\n    \"id\": \"objective-c\",\n    \"name\": \"Objective-C\",\n    \"aliases\": [\n      \"objc\"\n    ],\n    \"import\": () => import('./langs/objective-c.mjs')\n  },\n  {\n    \"id\": \"objective-cpp\",\n    \"name\": \"Objective-C++\",\n    \"import\": () => import('./langs/objective-cpp.mjs')\n  },\n  {\n    \"id\": \"ocaml\",\n    \"name\": \"OCaml\",\n    \"import\": () => import('./langs/ocaml.mjs')\n  },\n  {\n    \"id\": \"pascal\",\n    \"name\": \"Pascal\",\n    \"import\": () => import('./langs/pascal.mjs')\n  },\n  {\n    \"id\": \"perl\",\n    \"name\": \"Perl\",\n    \"import\": () => import('./langs/perl.mjs')\n  },\n  {\n    \"id\": \"php\",\n    \"name\": \"PHP\",\n    \"import\": () => import('./langs/php.mjs')\n  },\n  {\n    \"id\": \"plsql\",\n    \"name\": \"PL/SQL\",\n    \"import\": () => import('./langs/plsql.mjs')\n  },\n  {\n    \"id\": \"po\",\n    \"name\": \"Gettext PO\",\n    \"aliases\": [\n      \"pot\",\n      \"potx\"\n    ],\n    \"import\": () => import('./langs/po.mjs')\n  },\n  {\n    \"id\": \"postcss\",\n    \"name\": \"PostCSS\",\n    \"import\": () => import('./langs/postcss.mjs')\n  },\n  {\n    \"id\": \"powerquery\",\n    \"name\": \"PowerQuery\",\n    \"import\": () => import('./langs/powerquery.mjs')\n  },\n  {\n    \"id\": \"powershell\",\n    \"name\": \"PowerShell\",\n    \"aliases\": [\n      \"ps\",\n      \"ps1\"\n    ],\n    \"import\": () => import('./langs/powershell.mjs')\n  },\n  {\n    \"id\": \"prisma\",\n    \"name\": \"Prisma\",\n    \"import\": () => import('./langs/prisma.mjs')\n  },\n  {\n    \"id\": \"prolog\",\n    \"name\": \"Prolog\",\n    \"import\": () => import('./langs/prolog.mjs')\n  },\n  {\n    \"id\": \"proto\",\n    \"name\": \"Protocol Buffer 3\",\n    \"import\": () => import('./langs/proto.mjs')\n  },\n  {\n    \"id\": \"pug\",\n    \"name\": \"Pug\",\n    \"aliases\": [\n      \"jade\"\n    ],\n    \"import\": () => import('./langs/pug.mjs')\n  },\n  {\n    \"id\": \"puppet\",\n    \"name\": \"Puppet\",\n    \"import\": () => import('./langs/puppet.mjs')\n  },\n  {\n    \"id\": \"purescript\",\n    \"name\": \"PureScript\",\n    \"import\": () => import('./langs/purescript.mjs')\n  },\n  {\n    \"id\": \"python\",\n    \"name\": \"Python\",\n    \"aliases\": [\n      \"py\"\n    ],\n    \"import\": () => import('./langs/python.mjs')\n  },\n  {\n    \"id\": \"qml\",\n    \"name\": \"QML\",\n    \"import\": () => import('./langs/qml.mjs')\n  },\n  {\n    \"id\": \"qmldir\",\n    \"name\": \"QML Directory\",\n    \"import\": () => import('./langs/qmldir.mjs')\n  },\n  {\n    \"id\": \"qss\",\n    \"name\": \"Qt Style Sheets\",\n    \"import\": () => import('./langs/qss.mjs')\n  },\n  {\n    \"id\": \"r\",\n    \"name\": \"R\",\n    \"import\": () => import('./langs/r.mjs')\n  },\n  {\n    \"id\": \"racket\",\n    \"name\": \"Racket\",\n    \"import\": () => import('./langs/racket.mjs')\n  },\n  {\n    \"id\": \"raku\",\n    \"name\": \"Raku\",\n    \"aliases\": [\n      \"perl6\"\n    ],\n    \"import\": () => import('./langs/raku.mjs')\n  },\n  {\n    \"id\": \"razor\",\n    \"name\": \"ASP.NET Razor\",\n    \"import\": () => import('./langs/razor.mjs')\n  },\n  {\n    \"id\": \"reg\",\n    \"name\": \"Windows Registry Script\",\n    \"import\": () => import('./langs/reg.mjs')\n  },\n  {\n    \"id\": \"regexp\",\n    \"name\": \"RegExp\",\n    \"aliases\": [\n      \"regex\"\n    ],\n    \"import\": () => import('./langs/regexp.mjs')\n  },\n  {\n    \"id\": \"rel\",\n    \"name\": \"Rel\",\n    \"import\": () => import('./langs/rel.mjs')\n  },\n  {\n    \"id\": \"riscv\",\n    \"name\": \"RISC-V\",\n    \"import\": () => import('./langs/riscv.mjs')\n  },\n  {\n    \"id\": \"rst\",\n    \"name\": \"reStructuredText\",\n    \"import\": () => import('./langs/rst.mjs')\n  },\n  {\n    \"id\": \"ruby\",\n    \"name\": \"Ruby\",\n    \"aliases\": [\n      \"rb\"\n    ],\n    \"import\": () => import('./langs/ruby.mjs')\n  },\n  {\n    \"id\": \"rust\",\n    \"name\": \"Rust\",\n    \"aliases\": [\n      \"rs\"\n    ],\n    \"import\": () => import('./langs/rust.mjs')\n  },\n  {\n    \"id\": \"sas\",\n    \"name\": \"SAS\",\n    \"import\": () => import('./langs/sas.mjs')\n  },\n  {\n    \"id\": \"sass\",\n    \"name\": \"Sass\",\n    \"import\": () => import('./langs/sass.mjs')\n  },\n  {\n    \"id\": \"scala\",\n    \"name\": \"Scala\",\n    \"import\": () => import('./langs/scala.mjs')\n  },\n  {\n    \"id\": \"scheme\",\n    \"name\": \"Scheme\",\n    \"import\": () => import('./langs/scheme.mjs')\n  },\n  {\n    \"id\": \"scss\",\n    \"name\": \"SCSS\",\n    \"import\": () => import('./langs/scss.mjs')\n  },\n  {\n    \"id\": \"shaderlab\",\n    \"name\": \"ShaderLab\",\n    \"aliases\": [\n      \"shader\"\n    ],\n    \"import\": () => import('./langs/shaderlab.mjs')\n  },\n  {\n    \"id\": \"shellscript\",\n    \"name\": \"Shell\",\n    \"aliases\": [\n      \"bash\",\n      \"sh\",\n      \"shell\",\n      \"zsh\"\n    ],\n    \"import\": () => import('./langs/shellscript.mjs')\n  },\n  {\n    \"id\": \"shellsession\",\n    \"name\": \"Shell Session\",\n    \"aliases\": [\n      \"console\"\n    ],\n    \"import\": () => import('./langs/shellsession.mjs')\n  },\n  {\n    \"id\": \"smalltalk\",\n    \"name\": \"Smalltalk\",\n    \"import\": () => import('./langs/smalltalk.mjs')\n  },\n  {\n    \"id\": \"solidity\",\n    \"name\": \"Solidity\",\n    \"import\": () => import('./langs/solidity.mjs')\n  },\n  {\n    \"id\": \"soy\",\n    \"name\": \"Closure Templates\",\n    \"aliases\": [\n      \"closure-templates\"\n    ],\n    \"import\": () => import('./langs/soy.mjs')\n  },\n  {\n    \"id\": \"sparql\",\n    \"name\": \"SPARQL\",\n    \"import\": () => import('./langs/sparql.mjs')\n  },\n  {\n    \"id\": \"splunk\",\n    \"name\": \"Splunk Query Language\",\n    \"aliases\": [\n      \"spl\"\n    ],\n    \"import\": () => import('./langs/splunk.mjs')\n  },\n  {\n    \"id\": \"sql\",\n    \"name\": \"SQL\",\n    \"import\": () => import('./langs/sql.mjs')\n  },\n  {\n    \"id\": \"ssh-config\",\n    \"name\": \"SSH Config\",\n    \"import\": () => import('./langs/ssh-config.mjs')\n  },\n  {\n    \"id\": \"stata\",\n    \"name\": \"Stata\",\n    \"import\": () => import('./langs/stata.mjs')\n  },\n  {\n    \"id\": \"stylus\",\n    \"name\": \"Stylus\",\n    \"aliases\": [\n      \"styl\"\n    ],\n    \"import\": () => import('./langs/stylus.mjs')\n  },\n  {\n    \"id\": \"svelte\",\n    \"name\": \"Svelte\",\n    \"import\": () => import('./langs/svelte.mjs')\n  },\n  {\n    \"id\": \"swift\",\n    \"name\": \"Swift\",\n    \"import\": () => import('./langs/swift.mjs')\n  },\n  {\n    \"id\": \"system-verilog\",\n    \"name\": \"SystemVerilog\",\n    \"import\": () => import('./langs/system-verilog.mjs')\n  },\n  {\n    \"id\": \"systemd\",\n    \"name\": \"Systemd Units\",\n    \"import\": () => import('./langs/systemd.mjs')\n  },\n  {\n    \"id\": \"tasl\",\n    \"name\": \"Tasl\",\n    \"import\": () => import('./langs/tasl.mjs')\n  },\n  {\n    \"id\": \"tcl\",\n    \"name\": \"Tcl\",\n    \"import\": () => import('./langs/tcl.mjs')\n  },\n  {\n    \"id\": \"templ\",\n    \"name\": \"Templ\",\n    \"import\": () => import('./langs/templ.mjs')\n  },\n  {\n    \"id\": \"terraform\",\n    \"name\": \"Terraform\",\n    \"aliases\": [\n      \"tf\",\n      \"tfvars\"\n    ],\n    \"import\": () => import('./langs/terraform.mjs')\n  },\n  {\n    \"id\": \"tex\",\n    \"name\": \"TeX\",\n    \"import\": () => import('./langs/tex.mjs')\n  },\n  {\n    \"id\": \"toml\",\n    \"name\": \"TOML\",\n    \"import\": () => import('./langs/toml.mjs')\n  },\n  {\n    \"id\": \"tsv\",\n    \"name\": \"TSV\",\n    \"import\": () => import('./langs/tsv.mjs')\n  },\n  {\n    \"id\": \"tsx\",\n    \"name\": \"TSX\",\n    \"import\": () => import('./langs/tsx.mjs')\n  },\n  {\n    \"id\": \"turtle\",\n    \"name\": \"Turtle\",\n    \"import\": () => import('./langs/turtle.mjs')\n  },\n  {\n    \"id\": \"twig\",\n    \"name\": \"Twig\",\n    \"import\": () => import('./langs/twig.mjs')\n  },\n  {\n    \"id\": \"typescript\",\n    \"name\": \"TypeScript\",\n    \"aliases\": [\n      \"ts\"\n    ],\n    \"import\": () => import('./langs/typescript.mjs')\n  },\n  {\n    \"id\": \"typespec\",\n    \"name\": \"TypeSpec\",\n    \"aliases\": [\n      \"tsp\"\n    ],\n    \"import\": () => import('./langs/typespec.mjs')\n  },\n  {\n    \"id\": \"typst\",\n    \"name\": \"Typst\",\n    \"aliases\": [\n      \"typ\"\n    ],\n    \"import\": () => import('./langs/typst.mjs')\n  },\n  {\n    \"id\": \"v\",\n    \"name\": \"V\",\n    \"import\": () => import('./langs/v.mjs')\n  },\n  {\n    \"id\": \"vala\",\n    \"name\": \"Vala\",\n    \"import\": () => import('./langs/vala.mjs')\n  },\n  {\n    \"id\": \"vb\",\n    \"name\": \"Visual Basic\",\n    \"aliases\": [\n      \"cmd\"\n    ],\n    \"import\": () => import('./langs/vb.mjs')\n  },\n  {\n    \"id\": \"verilog\",\n    \"name\": \"Verilog\",\n    \"import\": () => import('./langs/verilog.mjs')\n  },\n  {\n    \"id\": \"vhdl\",\n    \"name\": \"VHDL\",\n    \"import\": () => import('./langs/vhdl.mjs')\n  },\n  {\n    \"id\": \"viml\",\n    \"name\": \"Vim Script\",\n    \"aliases\": [\n      \"vim\",\n      \"vimscript\"\n    ],\n    \"import\": () => import('./langs/viml.mjs')\n  },\n  {\n    \"id\": \"vue\",\n    \"name\": \"Vue\",\n    \"import\": () => import('./langs/vue.mjs')\n  },\n  {\n    \"id\": \"vue-html\",\n    \"name\": \"Vue HTML\",\n    \"import\": () => import('./langs/vue-html.mjs')\n  },\n  {\n    \"id\": \"vyper\",\n    \"name\": \"Vyper\",\n    \"aliases\": [\n      \"vy\"\n    ],\n    \"import\": () => import('./langs/vyper.mjs')\n  },\n  {\n    \"id\": \"wasm\",\n    \"name\": \"WebAssembly\",\n    \"import\": () => import('./langs/wasm.mjs')\n  },\n  {\n    \"id\": \"wenyan\",\n    \"name\": \"Wenyan\",\n    \"aliases\": [\n      \"\\u6587\\u8A00\"\n    ],\n    \"import\": () => import('./langs/wenyan.mjs')\n  },\n  {\n    \"id\": \"wgsl\",\n    \"name\": \"WGSL\",\n    \"import\": () => import('./langs/wgsl.mjs')\n  },\n  {\n    \"id\": \"wikitext\",\n    \"name\": \"Wikitext\",\n    \"aliases\": [\n      \"mediawiki\",\n      \"wiki\"\n    ],\n    \"import\": () => import('./langs/wikitext.mjs')\n  },\n  {\n    \"id\": \"wolfram\",\n    \"name\": \"Wolfram\",\n    \"aliases\": [\n      \"wl\"\n    ],\n    \"import\": () => import('./langs/wolfram.mjs')\n  },\n  {\n    \"id\": \"xml\",\n    \"name\": \"XML\",\n    \"import\": () => import('./langs/xml.mjs')\n  },\n  {\n    \"id\": \"xsl\",\n    \"name\": \"XSL\",\n    \"import\": () => import('./langs/xsl.mjs')\n  },\n  {\n    \"id\": \"yaml\",\n    \"name\": \"YAML\",\n    \"aliases\": [\n      \"yml\"\n    ],\n    \"import\": () => import('./langs/yaml.mjs')\n  },\n  {\n    \"id\": \"zenscript\",\n    \"name\": \"ZenScript\",\n    \"import\": () => import('./langs/zenscript.mjs')\n  },\n  {\n    \"id\": \"zig\",\n    \"name\": \"Zig\",\n    \"import\": () => import('./langs/zig.mjs')\n  }\n];\nconst bundledLanguagesBase = Object.fromEntries(bundledLanguagesInfo.map((i) => [i.id, i.import]));\nconst bundledLanguagesAlias = Object.fromEntries(bundledLanguagesInfo.flatMap((i) => i.aliases?.map((a) => [a, i.import]) || []));\nconst bundledLanguages = {\n  ...bundledLanguagesBase,\n  ...bundledLanguagesAlias\n};\n\nexport { bundledLanguages, bundledLanguagesAlias, bundledLanguagesBase, bundledLanguagesInfo };\n","const getWasmInlined = async (info) => {\n  return import('shiki/wasm').then((wasm) => wasm.default(info));\n};\n\nexport { getWasmInlined as g };\n","const bundledThemesInfo = [\n  {\n    \"id\": \"andromeeda\",\n    \"displayName\": \"Andromeeda\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/andromeeda.mjs')\n  },\n  {\n    \"id\": \"aurora-x\",\n    \"displayName\": \"Aurora X\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/aurora-x.mjs')\n  },\n  {\n    \"id\": \"ayu-dark\",\n    \"displayName\": \"Ayu Dark\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/ayu-dark.mjs')\n  },\n  {\n    \"id\": \"catppuccin-frappe\",\n    \"displayName\": \"Catppuccin Frapp\\xE9\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/catppuccin-frappe.mjs')\n  },\n  {\n    \"id\": \"catppuccin-latte\",\n    \"displayName\": \"Catppuccin Latte\",\n    \"type\": \"light\",\n    \"import\": () => import('./themes/catppuccin-latte.mjs')\n  },\n  {\n    \"id\": \"catppuccin-macchiato\",\n    \"displayName\": \"Catppuccin Macchiato\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/catppuccin-macchiato.mjs')\n  },\n  {\n    \"id\": \"catppuccin-mocha\",\n    \"displayName\": \"Catppuccin Mocha\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/catppuccin-mocha.mjs')\n  },\n  {\n    \"id\": \"dark-plus\",\n    \"displayName\": \"Dark Plus\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/dark-plus.mjs')\n  },\n  {\n    \"id\": \"dracula\",\n    \"displayName\": \"Dracula Theme\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/dracula.mjs')\n  },\n  {\n    \"id\": \"dracula-soft\",\n    \"displayName\": \"Dracula Theme Soft\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/dracula-soft.mjs')\n  },\n  {\n    \"id\": \"github-dark\",\n    \"displayName\": \"GitHub Dark\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/github-dark.mjs')\n  },\n  {\n    \"id\": \"github-dark-default\",\n    \"displayName\": \"GitHub Dark Default\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/github-dark-default.mjs')\n  },\n  {\n    \"id\": \"github-dark-dimmed\",\n    \"displayName\": \"GitHub Dark Dimmed\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/github-dark-dimmed.mjs')\n  },\n  {\n    \"id\": \"github-light\",\n    \"displayName\": \"GitHub Light\",\n    \"type\": \"light\",\n    \"import\": () => import('./themes/github-light.mjs')\n  },\n  {\n    \"id\": \"github-light-default\",\n    \"displayName\": \"GitHub Light Default\",\n    \"type\": \"light\",\n    \"import\": () => import('./themes/github-light-default.mjs')\n  },\n  {\n    \"id\": \"houston\",\n    \"displayName\": \"Houston\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/houston.mjs')\n  },\n  {\n    \"id\": \"laserwave\",\n    \"displayName\": \"LaserWave\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/laserwave.mjs')\n  },\n  {\n    \"id\": \"light-plus\",\n    \"displayName\": \"Light Plus\",\n    \"type\": \"light\",\n    \"import\": () => import('./themes/light-plus.mjs')\n  },\n  {\n    \"id\": \"material-theme\",\n    \"displayName\": \"Material Theme\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/material-theme.mjs')\n  },\n  {\n    \"id\": \"material-theme-darker\",\n    \"displayName\": \"Material Theme Darker\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/material-theme-darker.mjs')\n  },\n  {\n    \"id\": \"material-theme-lighter\",\n    \"displayName\": \"Material Theme Lighter\",\n    \"type\": \"light\",\n    \"import\": () => import('./themes/material-theme-lighter.mjs')\n  },\n  {\n    \"id\": \"material-theme-ocean\",\n    \"displayName\": \"Material Theme Ocean\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/material-theme-ocean.mjs')\n  },\n  {\n    \"id\": \"material-theme-palenight\",\n    \"displayName\": \"Material Theme Palenight\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/material-theme-palenight.mjs')\n  },\n  {\n    \"id\": \"min-dark\",\n    \"displayName\": \"Min Dark\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/min-dark.mjs')\n  },\n  {\n    \"id\": \"min-light\",\n    \"displayName\": \"Min Light\",\n    \"type\": \"light\",\n    \"import\": () => import('./themes/min-light.mjs')\n  },\n  {\n    \"id\": \"monokai\",\n    \"displayName\": \"Monokai\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/monokai.mjs')\n  },\n  {\n    \"id\": \"night-owl\",\n    \"displayName\": \"Night Owl\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/night-owl.mjs')\n  },\n  {\n    \"id\": \"nord\",\n    \"displayName\": \"Nord\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/nord.mjs')\n  },\n  {\n    \"id\": \"one-dark-pro\",\n    \"displayName\": \"One Dark Pro\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/one-dark-pro.mjs')\n  },\n  {\n    \"id\": \"one-light\",\n    \"displayName\": \"One Light\",\n    \"type\": \"light\",\n    \"import\": () => import('./themes/one-light.mjs')\n  },\n  {\n    \"id\": \"poimandres\",\n    \"displayName\": \"Poimandres\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/poimandres.mjs')\n  },\n  {\n    \"id\": \"red\",\n    \"displayName\": \"Red\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/red.mjs')\n  },\n  {\n    \"id\": \"rose-pine\",\n    \"displayName\": \"Ros\\xE9 Pine\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/rose-pine.mjs')\n  },\n  {\n    \"id\": \"rose-pine-dawn\",\n    \"displayName\": \"Ros\\xE9 Pine Dawn\",\n    \"type\": \"light\",\n    \"import\": () => import('./themes/rose-pine-dawn.mjs')\n  },\n  {\n    \"id\": \"rose-pine-moon\",\n    \"displayName\": \"Ros\\xE9 Pine Moon\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/rose-pine-moon.mjs')\n  },\n  {\n    \"id\": \"slack-dark\",\n    \"displayName\": \"Slack Dark\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/slack-dark.mjs')\n  },\n  {\n    \"id\": \"slack-ochin\",\n    \"displayName\": \"Slack Ochin\",\n    \"type\": \"light\",\n    \"import\": () => import('./themes/slack-ochin.mjs')\n  },\n  {\n    \"id\": \"snazzy-light\",\n    \"displayName\": \"Snazzy Light\",\n    \"type\": \"light\",\n    \"import\": () => import('./themes/snazzy-light.mjs')\n  },\n  {\n    \"id\": \"solarized-dark\",\n    \"displayName\": \"Solarized Dark\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/solarized-dark.mjs')\n  },\n  {\n    \"id\": \"solarized-light\",\n    \"displayName\": \"Solarized Light\",\n    \"type\": \"light\",\n    \"import\": () => import('./themes/solarized-light.mjs')\n  },\n  {\n    \"id\": \"synthwave-84\",\n    \"displayName\": \"Synthwave '84\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/synthwave-84.mjs')\n  },\n  {\n    \"id\": \"tokyo-night\",\n    \"displayName\": \"Tokyo Night\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/tokyo-night.mjs')\n  },\n  {\n    \"id\": \"vesper\",\n    \"displayName\": \"Vesper\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/vesper.mjs')\n  },\n  {\n    \"id\": \"vitesse-black\",\n    \"displayName\": \"Vitesse Black\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/vitesse-black.mjs')\n  },\n  {\n    \"id\": \"vitesse-dark\",\n    \"displayName\": \"Vitesse Dark\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/vitesse-dark.mjs')\n  },\n  {\n    \"id\": \"vitesse-light\",\n    \"displayName\": \"Vitesse Light\",\n    \"type\": \"light\",\n    \"import\": () => import('./themes/vitesse-light.mjs')\n  }\n];\nconst bundledThemes = Object.fromEntries(bundledThemesInfo.map((i) => [i.id, i.import]));\n\nexport { bundledThemes, bundledThemesInfo };\n","var FontStyle;\n(function (FontStyle) {\n    FontStyle[FontStyle[\"NotSet\"] = -1] = \"NotSet\";\n    FontStyle[FontStyle[\"None\"] = 0] = \"None\";\n    FontStyle[FontStyle[\"Italic\"] = 1] = \"Italic\";\n    FontStyle[FontStyle[\"Bold\"] = 2] = \"Bold\";\n    FontStyle[FontStyle[\"Underline\"] = 4] = \"Underline\";\n})(FontStyle || (FontStyle = {}));\n\nexport { FontStyle };\n","import { FontStyle } from './types.mjs';\n\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\n({\n    InDebugMode: (typeof process !== 'undefined' && !!process.env['VSCODE_TEXTMATE_DEBUG'])\n});\n\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nvar EncodedTokenAttributes;\n(function (EncodedTokenAttributes) {\n    function toBinaryStr(encodedTokenAttributes) {\n        return encodedTokenAttributes.toString(2).padStart(32, \"0\");\n    }\n    EncodedTokenAttributes.toBinaryStr = toBinaryStr;\n    function print(encodedTokenAttributes) {\n        const languageId = EncodedTokenAttributes.getLanguageId(encodedTokenAttributes);\n        const tokenType = EncodedTokenAttributes.getTokenType(encodedTokenAttributes);\n        const fontStyle = EncodedTokenAttributes.getFontStyle(encodedTokenAttributes);\n        const foreground = EncodedTokenAttributes.getForeground(encodedTokenAttributes);\n        const background = EncodedTokenAttributes.getBackground(encodedTokenAttributes);\n        console.log({\n            languageId: languageId,\n            tokenType: tokenType,\n            fontStyle: fontStyle,\n            foreground: foreground,\n            background: background,\n        });\n    }\n    EncodedTokenAttributes.print = print;\n    function getLanguageId(encodedTokenAttributes) {\n        return ((encodedTokenAttributes & 255 /* EncodedTokenDataConsts.LANGUAGEID_MASK */) >>>\n            0 /* EncodedTokenDataConsts.LANGUAGEID_OFFSET */);\n    }\n    EncodedTokenAttributes.getLanguageId = getLanguageId;\n    function getTokenType(encodedTokenAttributes) {\n        return ((encodedTokenAttributes & 768 /* EncodedTokenDataConsts.TOKEN_TYPE_MASK */) >>>\n            8 /* EncodedTokenDataConsts.TOKEN_TYPE_OFFSET */);\n    }\n    EncodedTokenAttributes.getTokenType = getTokenType;\n    function containsBalancedBrackets(encodedTokenAttributes) {\n        return (encodedTokenAttributes & 1024 /* EncodedTokenDataConsts.BALANCED_BRACKETS_MASK */) !== 0;\n    }\n    EncodedTokenAttributes.containsBalancedBrackets = containsBalancedBrackets;\n    function getFontStyle(encodedTokenAttributes) {\n        return ((encodedTokenAttributes & 30720 /* EncodedTokenDataConsts.FONT_STYLE_MASK */) >>>\n            11 /* EncodedTokenDataConsts.FONT_STYLE_OFFSET */);\n    }\n    EncodedTokenAttributes.getFontStyle = getFontStyle;\n    function getForeground(encodedTokenAttributes) {\n        return ((encodedTokenAttributes & 16744448 /* EncodedTokenDataConsts.FOREGROUND_MASK */) >>>\n            15 /* EncodedTokenDataConsts.FOREGROUND_OFFSET */);\n    }\n    EncodedTokenAttributes.getForeground = getForeground;\n    function getBackground(encodedTokenAttributes) {\n        return ((encodedTokenAttributes & 4278190080 /* EncodedTokenDataConsts.BACKGROUND_MASK */) >>>\n            24 /* EncodedTokenDataConsts.BACKGROUND_OFFSET */);\n    }\n    EncodedTokenAttributes.getBackground = getBackground;\n    /**\n     * Updates the fields in `metadata`.\n     * A value of `0`, `NotSet` or `null` indicates that the corresponding field should be left as is.\n     */\n    function set(encodedTokenAttributes, languageId, tokenType, containsBalancedBrackets, fontStyle, foreground, background) {\n        let _languageId = EncodedTokenAttributes.getLanguageId(encodedTokenAttributes);\n        let _tokenType = EncodedTokenAttributes.getTokenType(encodedTokenAttributes);\n        let _containsBalancedBracketsBit = EncodedTokenAttributes.containsBalancedBrackets(encodedTokenAttributes) ? 1 : 0;\n        let _fontStyle = EncodedTokenAttributes.getFontStyle(encodedTokenAttributes);\n        let _foreground = EncodedTokenAttributes.getForeground(encodedTokenAttributes);\n        let _background = EncodedTokenAttributes.getBackground(encodedTokenAttributes);\n        if (languageId !== 0) {\n            _languageId = languageId;\n        }\n        if (tokenType !== 8 /* OptionalStandardTokenType.NotSet */) {\n            _tokenType = fromOptionalTokenType(tokenType);\n        }\n        if (containsBalancedBrackets !== null) {\n            _containsBalancedBracketsBit = containsBalancedBrackets ? 1 : 0;\n        }\n        if (fontStyle !== -1 /* FontStyle.NotSet */) {\n            _fontStyle = fontStyle;\n        }\n        if (foreground !== 0) {\n            _foreground = foreground;\n        }\n        if (background !== 0) {\n            _background = background;\n        }\n        return (((_languageId << 0 /* EncodedTokenDataConsts.LANGUAGEID_OFFSET */) |\n            (_tokenType << 8 /* EncodedTokenDataConsts.TOKEN_TYPE_OFFSET */) |\n            (_containsBalancedBracketsBit <<\n                10 /* EncodedTokenDataConsts.BALANCED_BRACKETS_OFFSET */) |\n            (_fontStyle << 11 /* EncodedTokenDataConsts.FONT_STYLE_OFFSET */) |\n            (_foreground << 15 /* EncodedTokenDataConsts.FOREGROUND_OFFSET */) |\n            (_background << 24 /* EncodedTokenDataConsts.BACKGROUND_OFFSET */)) >>>\n            0);\n    }\n    EncodedTokenAttributes.set = set;\n})(EncodedTokenAttributes || (EncodedTokenAttributes = {}));\nfunction toOptionalTokenType(standardType) {\n    return standardType;\n}\nfunction fromOptionalTokenType(standardType) {\n    return standardType;\n}\n\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nfunction createMatchers(selector, matchesName) {\n    const results = [];\n    const tokenizer = newTokenizer(selector);\n    let token = tokenizer.next();\n    while (token !== null) {\n        let priority = 0;\n        if (token.length === 2 && token.charAt(1) === ':') {\n            switch (token.charAt(0)) {\n                case 'R':\n                    priority = 1;\n                    break;\n                case 'L':\n                    priority = -1;\n                    break;\n                default:\n                    console.log(`Unknown priority ${token} in scope selector`);\n            }\n            token = tokenizer.next();\n        }\n        let matcher = parseConjunction();\n        results.push({ matcher, priority });\n        if (token !== ',') {\n            break;\n        }\n        token = tokenizer.next();\n    }\n    return results;\n    function parseOperand() {\n        if (token === '-') {\n            token = tokenizer.next();\n            const expressionToNegate = parseOperand();\n            return matcherInput => !!expressionToNegate && !expressionToNegate(matcherInput);\n        }\n        if (token === '(') {\n            token = tokenizer.next();\n            const expressionInParents = parseInnerExpression();\n            if (token === ')') {\n                token = tokenizer.next();\n            }\n            return expressionInParents;\n        }\n        if (isIdentifier(token)) {\n            const identifiers = [];\n            do {\n                identifiers.push(token);\n                token = tokenizer.next();\n            } while (isIdentifier(token));\n            return matcherInput => matchesName(identifiers, matcherInput);\n        }\n        return null;\n    }\n    function parseConjunction() {\n        const matchers = [];\n        let matcher = parseOperand();\n        while (matcher) {\n            matchers.push(matcher);\n            matcher = parseOperand();\n        }\n        return matcherInput => matchers.every(matcher => matcher(matcherInput)); // and\n    }\n    function parseInnerExpression() {\n        const matchers = [];\n        let matcher = parseConjunction();\n        while (matcher) {\n            matchers.push(matcher);\n            if (token === '|' || token === ',') {\n                do {\n                    token = tokenizer.next();\n                } while (token === '|' || token === ','); // ignore subsequent commas\n            }\n            else {\n                break;\n            }\n            matcher = parseConjunction();\n        }\n        return matcherInput => matchers.some(matcher => matcher(matcherInput)); // or\n    }\n}\nfunction isIdentifier(token) {\n    return !!token && !!token.match(/[\\w\\.:]+/);\n}\nfunction newTokenizer(input) {\n    let regex = /([LR]:|[\\w\\.:][\\w\\.:\\-]*|[\\,\\|\\-\\(\\)])/g;\n    let match = regex.exec(input);\n    return {\n        next: () => {\n            if (!match) {\n                return null;\n            }\n            const res = match[0];\n            match = regex.exec(input);\n            return res;\n        }\n    };\n}\n\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nfunction disposeOnigString(str) {\n    if (typeof str.dispose === 'function') {\n        str.dispose();\n    }\n}\n\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nfunction clone(something) {\n    return doClone(something);\n}\nfunction doClone(something) {\n    if (Array.isArray(something)) {\n        return cloneArray(something);\n    }\n    if (typeof something === 'object') {\n        return cloneObj(something);\n    }\n    return something;\n}\nfunction cloneArray(arr) {\n    let r = [];\n    for (let i = 0, len = arr.length; i < len; i++) {\n        r[i] = doClone(arr[i]);\n    }\n    return r;\n}\nfunction cloneObj(obj) {\n    let r = {};\n    for (let key in obj) {\n        r[key] = doClone(obj[key]);\n    }\n    return r;\n}\nfunction mergeObjects(target, ...sources) {\n    sources.forEach(source => {\n        for (let key in source) {\n            target[key] = source[key];\n        }\n    });\n    return target;\n}\nfunction basename(path) {\n    const idx = ~path.lastIndexOf('/') || ~path.lastIndexOf('\\\\');\n    if (idx === 0) {\n        return path;\n    }\n    else if (~idx === path.length - 1) {\n        return basename(path.substring(0, path.length - 1));\n    }\n    else {\n        return path.substr(~idx + 1);\n    }\n}\nlet CAPTURING_REGEX_SOURCE = /\\$(\\d+)|\\${(\\d+):\\/(downcase|upcase)}/g;\nclass RegexSource {\n    static hasCaptures(regexSource) {\n        if (regexSource === null) {\n            return false;\n        }\n        CAPTURING_REGEX_SOURCE.lastIndex = 0;\n        return CAPTURING_REGEX_SOURCE.test(regexSource);\n    }\n    static replaceCaptures(regexSource, captureSource, captureIndices) {\n        return regexSource.replace(CAPTURING_REGEX_SOURCE, (match, index, commandIndex, command) => {\n            let capture = captureIndices[parseInt(index || commandIndex, 10)];\n            if (capture) {\n                let result = captureSource.substring(capture.start, capture.end);\n                // Remove leading dots that would make the selector invalid\n                while (result[0] === '.') {\n                    result = result.substring(1);\n                }\n                switch (command) {\n                    case 'downcase':\n                        return result.toLowerCase();\n                    case 'upcase':\n                        return result.toUpperCase();\n                    default:\n                        return result;\n                }\n            }\n            else {\n                return match;\n            }\n        });\n    }\n}\nfunction strcmp(a, b) {\n    if (a < b) {\n        return -1;\n    }\n    if (a > b) {\n        return 1;\n    }\n    return 0;\n}\nfunction strArrCmp(a, b) {\n    if (a === null && b === null) {\n        return 0;\n    }\n    if (!a) {\n        return -1;\n    }\n    if (!b) {\n        return 1;\n    }\n    let len1 = a.length;\n    let len2 = b.length;\n    if (len1 === len2) {\n        for (let i = 0; i < len1; i++) {\n            let res = strcmp(a[i], b[i]);\n            if (res !== 0) {\n                return res;\n            }\n        }\n        return 0;\n    }\n    return len1 - len2;\n}\nfunction isValidHexColor(hex) {\n    if (/^#[0-9a-f]{6}$/i.test(hex)) {\n        // #rrggbb\n        return true;\n    }\n    if (/^#[0-9a-f]{8}$/i.test(hex)) {\n        // #rrggbbaa\n        return true;\n    }\n    if (/^#[0-9a-f]{3}$/i.test(hex)) {\n        // #rgb\n        return true;\n    }\n    if (/^#[0-9a-f]{4}$/i.test(hex)) {\n        // #rgba\n        return true;\n    }\n    return false;\n}\n/**\n * Escapes regular expression characters in a given string\n */\nfunction escapeRegExpCharacters(value) {\n    return value.replace(/[\\-\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&');\n}\nclass CachedFn {\n    fn;\n    cache = new Map();\n    constructor(fn) {\n        this.fn = fn;\n    }\n    get(key) {\n        if (this.cache.has(key)) {\n            return this.cache.get(key);\n        }\n        const value = this.fn(key);\n        this.cache.set(key, value);\n        return value;\n    }\n}\n\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\n/**\n * References the top level rule of a grammar with the given scope name.\n*/\nclass TopLevelRuleReference {\n    scopeName;\n    constructor(scopeName) {\n        this.scopeName = scopeName;\n    }\n    toKey() {\n        return this.scopeName;\n    }\n}\n/**\n * References a rule of a grammar in the top level repository section with the given name.\n*/\nclass TopLevelRepositoryRuleReference {\n    scopeName;\n    ruleName;\n    constructor(scopeName, ruleName) {\n        this.scopeName = scopeName;\n        this.ruleName = ruleName;\n    }\n    toKey() {\n        return `${this.scopeName}#${this.ruleName}`;\n    }\n}\nclass ExternalReferenceCollector {\n    _references = [];\n    _seenReferenceKeys = new Set();\n    get references() {\n        return this._references;\n    }\n    visitedRule = new Set();\n    add(reference) {\n        const key = reference.toKey();\n        if (this._seenReferenceKeys.has(key)) {\n            return;\n        }\n        this._seenReferenceKeys.add(key);\n        this._references.push(reference);\n    }\n}\nclass ScopeDependencyProcessor {\n    repo;\n    initialScopeName;\n    seenFullScopeRequests = new Set();\n    seenPartialScopeRequests = new Set();\n    Q;\n    constructor(repo, initialScopeName) {\n        this.repo = repo;\n        this.initialScopeName = initialScopeName;\n        this.seenFullScopeRequests.add(this.initialScopeName);\n        this.Q = [new TopLevelRuleReference(this.initialScopeName)];\n    }\n    processQueue() {\n        const q = this.Q;\n        this.Q = [];\n        const deps = new ExternalReferenceCollector();\n        for (const dep of q) {\n            collectReferencesOfReference(dep, this.initialScopeName, this.repo, deps);\n        }\n        for (const dep of deps.references) {\n            if (dep instanceof TopLevelRuleReference) {\n                if (this.seenFullScopeRequests.has(dep.scopeName)) {\n                    // already processed\n                    continue;\n                }\n                this.seenFullScopeRequests.add(dep.scopeName);\n                this.Q.push(dep);\n            }\n            else {\n                if (this.seenFullScopeRequests.has(dep.scopeName)) {\n                    // already processed in full\n                    continue;\n                }\n                if (this.seenPartialScopeRequests.has(dep.toKey())) {\n                    // already processed\n                    continue;\n                }\n                this.seenPartialScopeRequests.add(dep.toKey());\n                this.Q.push(dep);\n            }\n        }\n    }\n}\nfunction collectReferencesOfReference(reference, baseGrammarScopeName, repo, result) {\n    const selfGrammar = repo.lookup(reference.scopeName);\n    if (!selfGrammar) {\n        if (reference.scopeName === baseGrammarScopeName) {\n            throw new Error(`No grammar provided for <${baseGrammarScopeName}>`);\n        }\n        return;\n    }\n    const baseGrammar = repo.lookup(baseGrammarScopeName);\n    if (reference instanceof TopLevelRuleReference) {\n        collectExternalReferencesInTopLevelRule({ baseGrammar, selfGrammar }, result);\n    }\n    else {\n        collectExternalReferencesInTopLevelRepositoryRule(reference.ruleName, { baseGrammar, selfGrammar, repository: selfGrammar.repository }, result);\n    }\n    const injections = repo.injections(reference.scopeName);\n    if (injections) {\n        for (const injection of injections) {\n            result.add(new TopLevelRuleReference(injection));\n        }\n    }\n}\nfunction collectExternalReferencesInTopLevelRepositoryRule(ruleName, context, result) {\n    if (context.repository && context.repository[ruleName]) {\n        const rule = context.repository[ruleName];\n        collectExternalReferencesInRules([rule], context, result);\n    }\n}\nfunction collectExternalReferencesInTopLevelRule(context, result) {\n    if (context.selfGrammar.patterns && Array.isArray(context.selfGrammar.patterns)) {\n        collectExternalReferencesInRules(context.selfGrammar.patterns, { ...context, repository: context.selfGrammar.repository }, result);\n    }\n    if (context.selfGrammar.injections) {\n        collectExternalReferencesInRules(Object.values(context.selfGrammar.injections), { ...context, repository: context.selfGrammar.repository }, result);\n    }\n}\nfunction collectExternalReferencesInRules(rules, context, result) {\n    for (const rule of rules) {\n        if (result.visitedRule.has(rule)) {\n            continue;\n        }\n        result.visitedRule.add(rule);\n        const patternRepository = rule.repository ? mergeObjects({}, context.repository, rule.repository) : context.repository;\n        if (Array.isArray(rule.patterns)) {\n            collectExternalReferencesInRules(rule.patterns, { ...context, repository: patternRepository }, result);\n        }\n        const include = rule.include;\n        if (!include) {\n            continue;\n        }\n        const reference = parseInclude(include);\n        switch (reference.kind) {\n            case 0 /* IncludeReferenceKind.Base */:\n                collectExternalReferencesInTopLevelRule({ ...context, selfGrammar: context.baseGrammar }, result);\n                break;\n            case 1 /* IncludeReferenceKind.Self */:\n                collectExternalReferencesInTopLevelRule(context, result);\n                break;\n            case 2 /* IncludeReferenceKind.RelativeReference */:\n                collectExternalReferencesInTopLevelRepositoryRule(reference.ruleName, { ...context, repository: patternRepository }, result);\n                break;\n            case 3 /* IncludeReferenceKind.TopLevelReference */:\n            case 4 /* IncludeReferenceKind.TopLevelRepositoryReference */:\n                const selfGrammar = reference.scopeName === context.selfGrammar.scopeName\n                    ? context.selfGrammar\n                    : reference.scopeName === context.baseGrammar.scopeName\n                        ? context.baseGrammar\n                        : undefined;\n                if (selfGrammar) {\n                    const newContext = { baseGrammar: context.baseGrammar, selfGrammar, repository: patternRepository };\n                    if (reference.kind === 4 /* IncludeReferenceKind.TopLevelRepositoryReference */) {\n                        collectExternalReferencesInTopLevelRepositoryRule(reference.ruleName, newContext, result);\n                    }\n                    else {\n                        collectExternalReferencesInTopLevelRule(newContext, result);\n                    }\n                }\n                else {\n                    if (reference.kind === 4 /* IncludeReferenceKind.TopLevelRepositoryReference */) {\n                        result.add(new TopLevelRepositoryRuleReference(reference.scopeName, reference.ruleName));\n                    }\n                    else {\n                        result.add(new TopLevelRuleReference(reference.scopeName));\n                    }\n                }\n                break;\n        }\n    }\n}\nclass BaseReference {\n    kind = 0 /* IncludeReferenceKind.Base */;\n}\nclass SelfReference {\n    kind = 1 /* IncludeReferenceKind.Self */;\n}\nclass RelativeReference {\n    ruleName;\n    kind = 2 /* IncludeReferenceKind.RelativeReference */;\n    constructor(ruleName) {\n        this.ruleName = ruleName;\n    }\n}\nclass TopLevelReference {\n    scopeName;\n    kind = 3 /* IncludeReferenceKind.TopLevelReference */;\n    constructor(scopeName) {\n        this.scopeName = scopeName;\n    }\n}\nclass TopLevelRepositoryReference {\n    scopeName;\n    ruleName;\n    kind = 4 /* IncludeReferenceKind.TopLevelRepositoryReference */;\n    constructor(scopeName, ruleName) {\n        this.scopeName = scopeName;\n        this.ruleName = ruleName;\n    }\n}\nfunction parseInclude(include) {\n    if (include === '$base') {\n        return new BaseReference();\n    }\n    else if (include === '$self') {\n        return new SelfReference();\n    }\n    const indexOfSharp = include.indexOf(\"#\");\n    if (indexOfSharp === -1) {\n        return new TopLevelReference(include);\n    }\n    else if (indexOfSharp === 0) {\n        return new RelativeReference(include.substring(1));\n    }\n    else {\n        const scopeName = include.substring(0, indexOfSharp);\n        const ruleName = include.substring(indexOfSharp + 1);\n        return new TopLevelRepositoryReference(scopeName, ruleName);\n    }\n}\n\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nconst HAS_BACK_REFERENCES = /\\\\(\\d+)/;\nconst BACK_REFERENCING_END = /\\\\(\\d+)/g;\n// This is a special constant to indicate that the end regexp matched.\nconst endRuleId = -1;\n// This is a special constant to indicate that the while regexp matched.\nconst whileRuleId = -2;\nfunction ruleIdFromNumber(id) {\n    return id;\n}\nfunction ruleIdToNumber(id) {\n    return id;\n}\nclass Rule {\n    $location;\n    id;\n    _nameIsCapturing;\n    _name;\n    _contentNameIsCapturing;\n    _contentName;\n    constructor($location, id, name, contentName) {\n        this.$location = $location;\n        this.id = id;\n        this._name = name || null;\n        this._nameIsCapturing = RegexSource.hasCaptures(this._name);\n        this._contentName = contentName || null;\n        this._contentNameIsCapturing = RegexSource.hasCaptures(this._contentName);\n    }\n    get debugName() {\n        const location = this.$location ? `${basename(this.$location.filename)}:${this.$location.line}` : 'unknown';\n        return `${this.constructor.name}#${this.id} @ ${location}`;\n    }\n    getName(lineText, captureIndices) {\n        if (!this._nameIsCapturing || this._name === null || lineText === null || captureIndices === null) {\n            return this._name;\n        }\n        return RegexSource.replaceCaptures(this._name, lineText, captureIndices);\n    }\n    getContentName(lineText, captureIndices) {\n        if (!this._contentNameIsCapturing || this._contentName === null) {\n            return this._contentName;\n        }\n        return RegexSource.replaceCaptures(this._contentName, lineText, captureIndices);\n    }\n}\nclass CaptureRule extends Rule {\n    retokenizeCapturedWithRuleId;\n    constructor($location, id, name, contentName, retokenizeCapturedWithRuleId) {\n        super($location, id, name, contentName);\n        this.retokenizeCapturedWithRuleId = retokenizeCapturedWithRuleId;\n    }\n    dispose() {\n        // nothing to dispose\n    }\n    collectPatterns(grammar, out) {\n        throw new Error('Not supported!');\n    }\n    compile(grammar, endRegexSource) {\n        throw new Error('Not supported!');\n    }\n    compileAG(grammar, endRegexSource, allowA, allowG) {\n        throw new Error('Not supported!');\n    }\n}\nclass MatchRule extends Rule {\n    _match;\n    captures;\n    _cachedCompiledPatterns;\n    constructor($location, id, name, match, captures) {\n        super($location, id, name, null);\n        this._match = new RegExpSource(match, this.id);\n        this.captures = captures;\n        this._cachedCompiledPatterns = null;\n    }\n    dispose() {\n        if (this._cachedCompiledPatterns) {\n            this._cachedCompiledPatterns.dispose();\n            this._cachedCompiledPatterns = null;\n        }\n    }\n    get debugMatchRegExp() {\n        return `${this._match.source}`;\n    }\n    collectPatterns(grammar, out) {\n        out.push(this._match);\n    }\n    compile(grammar, endRegexSource) {\n        return this._getCachedCompiledPatterns(grammar).compile(grammar);\n    }\n    compileAG(grammar, endRegexSource, allowA, allowG) {\n        return this._getCachedCompiledPatterns(grammar).compileAG(grammar, allowA, allowG);\n    }\n    _getCachedCompiledPatterns(grammar) {\n        if (!this._cachedCompiledPatterns) {\n            this._cachedCompiledPatterns = new RegExpSourceList();\n            this.collectPatterns(grammar, this._cachedCompiledPatterns);\n        }\n        return this._cachedCompiledPatterns;\n    }\n}\nclass IncludeOnlyRule extends Rule {\n    hasMissingPatterns;\n    patterns;\n    _cachedCompiledPatterns;\n    constructor($location, id, name, contentName, patterns) {\n        super($location, id, name, contentName);\n        this.patterns = patterns.patterns;\n        this.hasMissingPatterns = patterns.hasMissingPatterns;\n        this._cachedCompiledPatterns = null;\n    }\n    dispose() {\n        if (this._cachedCompiledPatterns) {\n            this._cachedCompiledPatterns.dispose();\n            this._cachedCompiledPatterns = null;\n        }\n    }\n    collectPatterns(grammar, out) {\n        for (const pattern of this.patterns) {\n            const rule = grammar.getRule(pattern);\n            rule.collectPatterns(grammar, out);\n        }\n    }\n    compile(grammar, endRegexSource) {\n        return this._getCachedCompiledPatterns(grammar).compile(grammar);\n    }\n    compileAG(grammar, endRegexSource, allowA, allowG) {\n        return this._getCachedCompiledPatterns(grammar).compileAG(grammar, allowA, allowG);\n    }\n    _getCachedCompiledPatterns(grammar) {\n        if (!this._cachedCompiledPatterns) {\n            this._cachedCompiledPatterns = new RegExpSourceList();\n            this.collectPatterns(grammar, this._cachedCompiledPatterns);\n        }\n        return this._cachedCompiledPatterns;\n    }\n}\nclass BeginEndRule extends Rule {\n    _begin;\n    beginCaptures;\n    _end;\n    endHasBackReferences;\n    endCaptures;\n    applyEndPatternLast;\n    hasMissingPatterns;\n    patterns;\n    _cachedCompiledPatterns;\n    constructor($location, id, name, contentName, begin, beginCaptures, end, endCaptures, applyEndPatternLast, patterns) {\n        super($location, id, name, contentName);\n        this._begin = new RegExpSource(begin, this.id);\n        this.beginCaptures = beginCaptures;\n        this._end = new RegExpSource(end ? end : '\\uFFFF', -1);\n        this.endHasBackReferences = this._end.hasBackReferences;\n        this.endCaptures = endCaptures;\n        this.applyEndPatternLast = applyEndPatternLast || false;\n        this.patterns = patterns.patterns;\n        this.hasMissingPatterns = patterns.hasMissingPatterns;\n        this._cachedCompiledPatterns = null;\n    }\n    dispose() {\n        if (this._cachedCompiledPatterns) {\n            this._cachedCompiledPatterns.dispose();\n            this._cachedCompiledPatterns = null;\n        }\n    }\n    get debugBeginRegExp() {\n        return `${this._begin.source}`;\n    }\n    get debugEndRegExp() {\n        return `${this._end.source}`;\n    }\n    getEndWithResolvedBackReferences(lineText, captureIndices) {\n        return this._end.resolveBackReferences(lineText, captureIndices);\n    }\n    collectPatterns(grammar, out) {\n        out.push(this._begin);\n    }\n    compile(grammar, endRegexSource) {\n        return this._getCachedCompiledPatterns(grammar, endRegexSource).compile(grammar);\n    }\n    compileAG(grammar, endRegexSource, allowA, allowG) {\n        return this._getCachedCompiledPatterns(grammar, endRegexSource).compileAG(grammar, allowA, allowG);\n    }\n    _getCachedCompiledPatterns(grammar, endRegexSource) {\n        if (!this._cachedCompiledPatterns) {\n            this._cachedCompiledPatterns = new RegExpSourceList();\n            for (const pattern of this.patterns) {\n                const rule = grammar.getRule(pattern);\n                rule.collectPatterns(grammar, this._cachedCompiledPatterns);\n            }\n            if (this.applyEndPatternLast) {\n                this._cachedCompiledPatterns.push(this._end.hasBackReferences ? this._end.clone() : this._end);\n            }\n            else {\n                this._cachedCompiledPatterns.unshift(this._end.hasBackReferences ? this._end.clone() : this._end);\n            }\n        }\n        if (this._end.hasBackReferences) {\n            if (this.applyEndPatternLast) {\n                this._cachedCompiledPatterns.setSource(this._cachedCompiledPatterns.length() - 1, endRegexSource);\n            }\n            else {\n                this._cachedCompiledPatterns.setSource(0, endRegexSource);\n            }\n        }\n        return this._cachedCompiledPatterns;\n    }\n}\nclass BeginWhileRule extends Rule {\n    _begin;\n    beginCaptures;\n    whileCaptures;\n    _while;\n    whileHasBackReferences;\n    hasMissingPatterns;\n    patterns;\n    _cachedCompiledPatterns;\n    _cachedCompiledWhilePatterns;\n    constructor($location, id, name, contentName, begin, beginCaptures, _while, whileCaptures, patterns) {\n        super($location, id, name, contentName);\n        this._begin = new RegExpSource(begin, this.id);\n        this.beginCaptures = beginCaptures;\n        this.whileCaptures = whileCaptures;\n        this._while = new RegExpSource(_while, whileRuleId);\n        this.whileHasBackReferences = this._while.hasBackReferences;\n        this.patterns = patterns.patterns;\n        this.hasMissingPatterns = patterns.hasMissingPatterns;\n        this._cachedCompiledPatterns = null;\n        this._cachedCompiledWhilePatterns = null;\n    }\n    dispose() {\n        if (this._cachedCompiledPatterns) {\n            this._cachedCompiledPatterns.dispose();\n            this._cachedCompiledPatterns = null;\n        }\n        if (this._cachedCompiledWhilePatterns) {\n            this._cachedCompiledWhilePatterns.dispose();\n            this._cachedCompiledWhilePatterns = null;\n        }\n    }\n    get debugBeginRegExp() {\n        return `${this._begin.source}`;\n    }\n    get debugWhileRegExp() {\n        return `${this._while.source}`;\n    }\n    getWhileWithResolvedBackReferences(lineText, captureIndices) {\n        return this._while.resolveBackReferences(lineText, captureIndices);\n    }\n    collectPatterns(grammar, out) {\n        out.push(this._begin);\n    }\n    compile(grammar, endRegexSource) {\n        return this._getCachedCompiledPatterns(grammar).compile(grammar);\n    }\n    compileAG(grammar, endRegexSource, allowA, allowG) {\n        return this._getCachedCompiledPatterns(grammar).compileAG(grammar, allowA, allowG);\n    }\n    _getCachedCompiledPatterns(grammar) {\n        if (!this._cachedCompiledPatterns) {\n            this._cachedCompiledPatterns = new RegExpSourceList();\n            for (const pattern of this.patterns) {\n                const rule = grammar.getRule(pattern);\n                rule.collectPatterns(grammar, this._cachedCompiledPatterns);\n            }\n        }\n        return this._cachedCompiledPatterns;\n    }\n    compileWhile(grammar, endRegexSource) {\n        return this._getCachedCompiledWhilePatterns(grammar, endRegexSource).compile(grammar);\n    }\n    compileWhileAG(grammar, endRegexSource, allowA, allowG) {\n        return this._getCachedCompiledWhilePatterns(grammar, endRegexSource).compileAG(grammar, allowA, allowG);\n    }\n    _getCachedCompiledWhilePatterns(grammar, endRegexSource) {\n        if (!this._cachedCompiledWhilePatterns) {\n            this._cachedCompiledWhilePatterns = new RegExpSourceList();\n            this._cachedCompiledWhilePatterns.push(this._while.hasBackReferences ? this._while.clone() : this._while);\n        }\n        if (this._while.hasBackReferences) {\n            this._cachedCompiledWhilePatterns.setSource(0, endRegexSource ? endRegexSource : '\\uFFFF');\n        }\n        return this._cachedCompiledWhilePatterns;\n    }\n}\nclass RuleFactory {\n    static createCaptureRule(helper, $location, name, contentName, retokenizeCapturedWithRuleId) {\n        return helper.registerRule((id) => {\n            return new CaptureRule($location, id, name, contentName, retokenizeCapturedWithRuleId);\n        });\n    }\n    static getCompiledRuleId(desc, helper, repository) {\n        if (!desc.id) {\n            helper.registerRule((id) => {\n                desc.id = id;\n                if (desc.match) {\n                    return new MatchRule(desc.$vscodeTextmateLocation, desc.id, desc.name, desc.match, RuleFactory._compileCaptures(desc.captures, helper, repository));\n                }\n                if (typeof desc.begin === 'undefined') {\n                    if (desc.repository) {\n                        repository = mergeObjects({}, repository, desc.repository);\n                    }\n                    let patterns = desc.patterns;\n                    if (typeof patterns === 'undefined' && desc.include) {\n                        patterns = [{ include: desc.include }];\n                    }\n                    return new IncludeOnlyRule(desc.$vscodeTextmateLocation, desc.id, desc.name, desc.contentName, RuleFactory._compilePatterns(patterns, helper, repository));\n                }\n                if (desc.while) {\n                    return new BeginWhileRule(desc.$vscodeTextmateLocation, desc.id, desc.name, desc.contentName, desc.begin, RuleFactory._compileCaptures(desc.beginCaptures || desc.captures, helper, repository), desc.while, RuleFactory._compileCaptures(desc.whileCaptures || desc.captures, helper, repository), RuleFactory._compilePatterns(desc.patterns, helper, repository));\n                }\n                return new BeginEndRule(desc.$vscodeTextmateLocation, desc.id, desc.name, desc.contentName, desc.begin, RuleFactory._compileCaptures(desc.beginCaptures || desc.captures, helper, repository), desc.end, RuleFactory._compileCaptures(desc.endCaptures || desc.captures, helper, repository), desc.applyEndPatternLast, RuleFactory._compilePatterns(desc.patterns, helper, repository));\n            });\n        }\n        return desc.id;\n    }\n    static _compileCaptures(captures, helper, repository) {\n        let r = [];\n        if (captures) {\n            // Find the maximum capture id\n            let maximumCaptureId = 0;\n            for (const captureId in captures) {\n                if (captureId === '$vscodeTextmateLocation') {\n                    continue;\n                }\n                const numericCaptureId = parseInt(captureId, 10);\n                if (numericCaptureId > maximumCaptureId) {\n                    maximumCaptureId = numericCaptureId;\n                }\n            }\n            // Initialize result\n            for (let i = 0; i <= maximumCaptureId; i++) {\n                r[i] = null;\n            }\n            // Fill out result\n            for (const captureId in captures) {\n                if (captureId === '$vscodeTextmateLocation') {\n                    continue;\n                }\n                const numericCaptureId = parseInt(captureId, 10);\n                let retokenizeCapturedWithRuleId = 0;\n                if (captures[captureId].patterns) {\n                    retokenizeCapturedWithRuleId = RuleFactory.getCompiledRuleId(captures[captureId], helper, repository);\n                }\n                r[numericCaptureId] = RuleFactory.createCaptureRule(helper, captures[captureId].$vscodeTextmateLocation, captures[captureId].name, captures[captureId].contentName, retokenizeCapturedWithRuleId);\n            }\n        }\n        return r;\n    }\n    static _compilePatterns(patterns, helper, repository) {\n        let r = [];\n        if (patterns) {\n            for (let i = 0, len = patterns.length; i < len; i++) {\n                const pattern = patterns[i];\n                let ruleId = -1;\n                if (pattern.include) {\n                    const reference = parseInclude(pattern.include);\n                    switch (reference.kind) {\n                        case 0 /* IncludeReferenceKind.Base */:\n                        case 1 /* IncludeReferenceKind.Self */:\n                            ruleId = RuleFactory.getCompiledRuleId(repository[pattern.include], helper, repository);\n                            break;\n                        case 2 /* IncludeReferenceKind.RelativeReference */:\n                            // Local include found in `repository`\n                            let localIncludedRule = repository[reference.ruleName];\n                            if (localIncludedRule) {\n                                ruleId = RuleFactory.getCompiledRuleId(localIncludedRule, helper, repository);\n                            }\n                            break;\n                        case 3 /* IncludeReferenceKind.TopLevelReference */:\n                        case 4 /* IncludeReferenceKind.TopLevelRepositoryReference */:\n                            const externalGrammarName = reference.scopeName;\n                            const externalGrammarInclude = reference.kind === 4 /* IncludeReferenceKind.TopLevelRepositoryReference */\n                                ? reference.ruleName\n                                : null;\n                            // External include\n                            const externalGrammar = helper.getExternalGrammar(externalGrammarName, repository);\n                            if (externalGrammar) {\n                                if (externalGrammarInclude) {\n                                    let externalIncludedRule = externalGrammar.repository[externalGrammarInclude];\n                                    if (externalIncludedRule) {\n                                        ruleId = RuleFactory.getCompiledRuleId(externalIncludedRule, helper, externalGrammar.repository);\n                                    }\n                                }\n                                else {\n                                    ruleId = RuleFactory.getCompiledRuleId(externalGrammar.repository.$self, helper, externalGrammar.repository);\n                                }\n                            }\n                            break;\n                    }\n                }\n                else {\n                    ruleId = RuleFactory.getCompiledRuleId(pattern, helper, repository);\n                }\n                if (ruleId !== -1) {\n                    const rule = helper.getRule(ruleId);\n                    let skipRule = false;\n                    if (rule instanceof IncludeOnlyRule || rule instanceof BeginEndRule || rule instanceof BeginWhileRule) {\n                        if (rule.hasMissingPatterns && rule.patterns.length === 0) {\n                            skipRule = true;\n                        }\n                    }\n                    if (skipRule) {\n                        // console.log('REMOVING RULE ENTIRELY DUE TO EMPTY PATTERNS THAT ARE MISSING');\n                        continue;\n                    }\n                    r.push(ruleId);\n                }\n            }\n        }\n        return {\n            patterns: r,\n            hasMissingPatterns: ((patterns ? patterns.length : 0) !== r.length)\n        };\n    }\n}\nclass RegExpSource {\n    source;\n    ruleId;\n    hasAnchor;\n    hasBackReferences;\n    _anchorCache;\n    constructor(regExpSource, ruleId) {\n        if (regExpSource) {\n            const len = regExpSource.length;\n            let lastPushedPos = 0;\n            let output = [];\n            let hasAnchor = false;\n            for (let pos = 0; pos < len; pos++) {\n                const ch = regExpSource.charAt(pos);\n                if (ch === '\\\\') {\n                    if (pos + 1 < len) {\n                        const nextCh = regExpSource.charAt(pos + 1);\n                        if (nextCh === 'z') {\n                            output.push(regExpSource.substring(lastPushedPos, pos));\n                            output.push('$(?!\\\\n)(?<!\\\\n)');\n                            lastPushedPos = pos + 2;\n                        }\n                        else if (nextCh === 'A' || nextCh === 'G') {\n                            hasAnchor = true;\n                        }\n                        pos++;\n                    }\n                }\n            }\n            this.hasAnchor = hasAnchor;\n            if (lastPushedPos === 0) {\n                // No \\z hit\n                this.source = regExpSource;\n            }\n            else {\n                output.push(regExpSource.substring(lastPushedPos, len));\n                this.source = output.join('');\n            }\n        }\n        else {\n            this.hasAnchor = false;\n            this.source = regExpSource;\n        }\n        if (this.hasAnchor) {\n            this._anchorCache = this._buildAnchorCache();\n        }\n        else {\n            this._anchorCache = null;\n        }\n        this.ruleId = ruleId;\n        this.hasBackReferences = HAS_BACK_REFERENCES.test(this.source);\n        // console.log('input: ' + regExpSource + ' => ' + this.source + ', ' + this.hasAnchor);\n    }\n    clone() {\n        return new RegExpSource(this.source, this.ruleId);\n    }\n    setSource(newSource) {\n        if (this.source === newSource) {\n            return;\n        }\n        this.source = newSource;\n        if (this.hasAnchor) {\n            this._anchorCache = this._buildAnchorCache();\n        }\n    }\n    resolveBackReferences(lineText, captureIndices) {\n        let capturedValues = captureIndices.map((capture) => {\n            return lineText.substring(capture.start, capture.end);\n        });\n        BACK_REFERENCING_END.lastIndex = 0;\n        return this.source.replace(BACK_REFERENCING_END, (match, g1) => {\n            return escapeRegExpCharacters(capturedValues[parseInt(g1, 10)] || '');\n        });\n    }\n    _buildAnchorCache() {\n        let A0_G0_result = [];\n        let A0_G1_result = [];\n        let A1_G0_result = [];\n        let A1_G1_result = [];\n        let pos, len, ch, nextCh;\n        for (pos = 0, len = this.source.length; pos < len; pos++) {\n            ch = this.source.charAt(pos);\n            A0_G0_result[pos] = ch;\n            A0_G1_result[pos] = ch;\n            A1_G0_result[pos] = ch;\n            A1_G1_result[pos] = ch;\n            if (ch === '\\\\') {\n                if (pos + 1 < len) {\n                    nextCh = this.source.charAt(pos + 1);\n                    if (nextCh === 'A') {\n                        A0_G0_result[pos + 1] = '\\uFFFF';\n                        A0_G1_result[pos + 1] = '\\uFFFF';\n                        A1_G0_result[pos + 1] = 'A';\n                        A1_G1_result[pos + 1] = 'A';\n                    }\n                    else if (nextCh === 'G') {\n                        A0_G0_result[pos + 1] = '\\uFFFF';\n                        A0_G1_result[pos + 1] = 'G';\n                        A1_G0_result[pos + 1] = '\\uFFFF';\n                        A1_G1_result[pos + 1] = 'G';\n                    }\n                    else {\n                        A0_G0_result[pos + 1] = nextCh;\n                        A0_G1_result[pos + 1] = nextCh;\n                        A1_G0_result[pos + 1] = nextCh;\n                        A1_G1_result[pos + 1] = nextCh;\n                    }\n                    pos++;\n                }\n            }\n        }\n        return {\n            A0_G0: A0_G0_result.join(''),\n            A0_G1: A0_G1_result.join(''),\n            A1_G0: A1_G0_result.join(''),\n            A1_G1: A1_G1_result.join('')\n        };\n    }\n    resolveAnchors(allowA, allowG) {\n        if (!this.hasAnchor || !this._anchorCache) {\n            return this.source;\n        }\n        if (allowA) {\n            if (allowG) {\n                return this._anchorCache.A1_G1;\n            }\n            else {\n                return this._anchorCache.A1_G0;\n            }\n        }\n        else {\n            if (allowG) {\n                return this._anchorCache.A0_G1;\n            }\n            else {\n                return this._anchorCache.A0_G0;\n            }\n        }\n    }\n}\nclass RegExpSourceList {\n    _items;\n    _hasAnchors;\n    _cached;\n    _anchorCache;\n    constructor() {\n        this._items = [];\n        this._hasAnchors = false;\n        this._cached = null;\n        this._anchorCache = {\n            A0_G0: null,\n            A0_G1: null,\n            A1_G0: null,\n            A1_G1: null\n        };\n    }\n    dispose() {\n        this._disposeCaches();\n    }\n    _disposeCaches() {\n        if (this._cached) {\n            this._cached.dispose();\n            this._cached = null;\n        }\n        if (this._anchorCache.A0_G0) {\n            this._anchorCache.A0_G0.dispose();\n            this._anchorCache.A0_G0 = null;\n        }\n        if (this._anchorCache.A0_G1) {\n            this._anchorCache.A0_G1.dispose();\n            this._anchorCache.A0_G1 = null;\n        }\n        if (this._anchorCache.A1_G0) {\n            this._anchorCache.A1_G0.dispose();\n            this._anchorCache.A1_G0 = null;\n        }\n        if (this._anchorCache.A1_G1) {\n            this._anchorCache.A1_G1.dispose();\n            this._anchorCache.A1_G1 = null;\n        }\n    }\n    push(item) {\n        this._items.push(item);\n        this._hasAnchors = this._hasAnchors || item.hasAnchor;\n    }\n    unshift(item) {\n        this._items.unshift(item);\n        this._hasAnchors = this._hasAnchors || item.hasAnchor;\n    }\n    length() {\n        return this._items.length;\n    }\n    setSource(index, newSource) {\n        if (this._items[index].source !== newSource) {\n            // bust the cache\n            this._disposeCaches();\n            this._items[index].setSource(newSource);\n        }\n    }\n    compile(onigLib) {\n        if (!this._cached) {\n            let regExps = this._items.map(e => e.source);\n            this._cached = new CompiledRule(onigLib, regExps, this._items.map(e => e.ruleId));\n        }\n        return this._cached;\n    }\n    compileAG(onigLib, allowA, allowG) {\n        if (!this._hasAnchors) {\n            return this.compile(onigLib);\n        }\n        else {\n            if (allowA) {\n                if (allowG) {\n                    if (!this._anchorCache.A1_G1) {\n                        this._anchorCache.A1_G1 = this._resolveAnchors(onigLib, allowA, allowG);\n                    }\n                    return this._anchorCache.A1_G1;\n                }\n                else {\n                    if (!this._anchorCache.A1_G0) {\n                        this._anchorCache.A1_G0 = this._resolveAnchors(onigLib, allowA, allowG);\n                    }\n                    return this._anchorCache.A1_G0;\n                }\n            }\n            else {\n                if (allowG) {\n                    if (!this._anchorCache.A0_G1) {\n                        this._anchorCache.A0_G1 = this._resolveAnchors(onigLib, allowA, allowG);\n                    }\n                    return this._anchorCache.A0_G1;\n                }\n                else {\n                    if (!this._anchorCache.A0_G0) {\n                        this._anchorCache.A0_G0 = this._resolveAnchors(onigLib, allowA, allowG);\n                    }\n                    return this._anchorCache.A0_G0;\n                }\n            }\n        }\n    }\n    _resolveAnchors(onigLib, allowA, allowG) {\n        let regExps = this._items.map(e => e.resolveAnchors(allowA, allowG));\n        return new CompiledRule(onigLib, regExps, this._items.map(e => e.ruleId));\n    }\n}\nclass CompiledRule {\n    regExps;\n    rules;\n    scanner;\n    constructor(onigLib, regExps, rules) {\n        this.regExps = regExps;\n        this.rules = rules;\n        this.scanner = onigLib.createOnigScanner(regExps);\n    }\n    dispose() {\n        if (typeof this.scanner.dispose === \"function\") {\n            this.scanner.dispose();\n        }\n    }\n    toString() {\n        const r = [];\n        for (let i = 0, len = this.rules.length; i < len; i++) {\n            r.push(\"   - \" + this.rules[i] + \": \" + this.regExps[i]);\n        }\n        return r.join(\"\\n\");\n    }\n    findNextMatchSync(string, startPosition, options) {\n        const result = this.scanner.findNextMatchSync(string, startPosition, options);\n        if (!result) {\n            return null;\n        }\n        return {\n            ruleId: this.rules[result.index],\n            captureIndices: result.captureIndices,\n        };\n    }\n}\n\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nclass Theme {\n    _colorMap;\n    _defaults;\n    _root;\n    static createFromRawTheme(source, colorMap) {\n        return this.createFromParsedTheme(parseTheme(source), colorMap);\n    }\n    static createFromParsedTheme(source, colorMap) {\n        return resolveParsedThemeRules(source, colorMap);\n    }\n    _cachedMatchRoot = new CachedFn((scopeName) => this._root.match(scopeName));\n    constructor(_colorMap, _defaults, _root) {\n        this._colorMap = _colorMap;\n        this._defaults = _defaults;\n        this._root = _root;\n    }\n    getColorMap() {\n        return this._colorMap.getColorMap();\n    }\n    getDefaults() {\n        return this._defaults;\n    }\n    match(scopePath) {\n        if (scopePath === null) {\n            return this._defaults;\n        }\n        const scopeName = scopePath.scopeName;\n        const matchingTrieElements = this._cachedMatchRoot.get(scopeName);\n        const effectiveRule = matchingTrieElements.find((v) => _scopePathMatchesParentScopes(scopePath.parent, v.parentScopes));\n        if (!effectiveRule) {\n            return null;\n        }\n        return new StyleAttributes(effectiveRule.fontStyle, effectiveRule.foreground, effectiveRule.background);\n    }\n}\nclass ScopeStack {\n    parent;\n    scopeName;\n    static push(path, scopeNames) {\n        for (const name of scopeNames) {\n            path = new ScopeStack(path, name);\n        }\n        return path;\n    }\n    static from(...segments) {\n        let result = null;\n        for (let i = 0; i < segments.length; i++) {\n            result = new ScopeStack(result, segments[i]);\n        }\n        return result;\n    }\n    constructor(parent, scopeName) {\n        this.parent = parent;\n        this.scopeName = scopeName;\n    }\n    push(scopeName) {\n        return new ScopeStack(this, scopeName);\n    }\n    getSegments() {\n        let item = this;\n        const result = [];\n        while (item) {\n            result.push(item.scopeName);\n            item = item.parent;\n        }\n        result.reverse();\n        return result;\n    }\n    toString() {\n        return this.getSegments().join(' ');\n    }\n    extends(other) {\n        if (this === other) {\n            return true;\n        }\n        if (this.parent === null) {\n            return false;\n        }\n        return this.parent.extends(other);\n    }\n    getExtensionIfDefined(base) {\n        const result = [];\n        let item = this;\n        while (item && item !== base) {\n            result.push(item.scopeName);\n            item = item.parent;\n        }\n        return item === base ? result.reverse() : undefined;\n    }\n}\nfunction _scopePathMatchesParentScopes(scopePath, parentScopes) {\n    if (parentScopes === null) {\n        return true;\n    }\n    let index = 0;\n    let scopePattern = parentScopes[index];\n    while (scopePath) {\n        if (_matchesScope(scopePath.scopeName, scopePattern)) {\n            index++;\n            if (index === parentScopes.length) {\n                return true;\n            }\n            scopePattern = parentScopes[index];\n        }\n        scopePath = scopePath.parent;\n    }\n    return false;\n}\nfunction _matchesScope(scopeName, scopePattern) {\n    return scopePattern === scopeName || (scopeName.startsWith(scopePattern) && scopeName[scopePattern.length] === '.');\n}\nclass StyleAttributes {\n    fontStyle;\n    foregroundId;\n    backgroundId;\n    constructor(fontStyle, foregroundId, backgroundId) {\n        this.fontStyle = fontStyle;\n        this.foregroundId = foregroundId;\n        this.backgroundId = backgroundId;\n    }\n}\n/**\n * Parse a raw theme into rules.\n */\nfunction parseTheme(source) {\n    if (!source) {\n        return [];\n    }\n    if (!source.settings || !Array.isArray(source.settings)) {\n        return [];\n    }\n    let settings = source.settings;\n    let result = [], resultLen = 0;\n    for (let i = 0, len = settings.length; i < len; i++) {\n        let entry = settings[i];\n        if (!entry.settings) {\n            continue;\n        }\n        let scopes;\n        if (typeof entry.scope === 'string') {\n            let _scope = entry.scope;\n            // remove leading commas\n            _scope = _scope.replace(/^[,]+/, '');\n            // remove trailing commans\n            _scope = _scope.replace(/[,]+$/, '');\n            scopes = _scope.split(',');\n        }\n        else if (Array.isArray(entry.scope)) {\n            scopes = entry.scope;\n        }\n        else {\n            scopes = [''];\n        }\n        let fontStyle = -1 /* FontStyle.NotSet */;\n        if (typeof entry.settings.fontStyle === 'string') {\n            fontStyle = 0 /* FontStyle.None */;\n            let segments = entry.settings.fontStyle.split(' ');\n            for (let j = 0, lenJ = segments.length; j < lenJ; j++) {\n                let segment = segments[j];\n                switch (segment) {\n                    case 'italic':\n                        fontStyle = fontStyle | 1 /* FontStyle.Italic */;\n                        break;\n                    case 'bold':\n                        fontStyle = fontStyle | 2 /* FontStyle.Bold */;\n                        break;\n                    case 'underline':\n                        fontStyle = fontStyle | 4 /* FontStyle.Underline */;\n                        break;\n                    case 'strikethrough':\n                        fontStyle = fontStyle | 8 /* FontStyle.Strikethrough */;\n                        break;\n                }\n            }\n        }\n        let foreground = null;\n        if (typeof entry.settings.foreground === 'string' && isValidHexColor(entry.settings.foreground)) {\n            foreground = entry.settings.foreground;\n        }\n        let background = null;\n        if (typeof entry.settings.background === 'string' && isValidHexColor(entry.settings.background)) {\n            background = entry.settings.background;\n        }\n        for (let j = 0, lenJ = scopes.length; j < lenJ; j++) {\n            let _scope = scopes[j].trim();\n            let segments = _scope.split(' ');\n            let scope = segments[segments.length - 1];\n            let parentScopes = null;\n            if (segments.length > 1) {\n                parentScopes = segments.slice(0, segments.length - 1);\n                parentScopes.reverse();\n            }\n            result[resultLen++] = new ParsedThemeRule(scope, parentScopes, i, fontStyle, foreground, background);\n        }\n    }\n    return result;\n}\nclass ParsedThemeRule {\n    scope;\n    parentScopes;\n    index;\n    fontStyle;\n    foreground;\n    background;\n    constructor(scope, parentScopes, index, fontStyle, foreground, background) {\n        this.scope = scope;\n        this.parentScopes = parentScopes;\n        this.index = index;\n        this.fontStyle = fontStyle;\n        this.foreground = foreground;\n        this.background = background;\n    }\n}\n/**\n * Resolve rules (i.e. inheritance).\n */\nfunction resolveParsedThemeRules(parsedThemeRules, _colorMap) {\n    // Sort rules lexicographically, and then by index if necessary\n    parsedThemeRules.sort((a, b) => {\n        let r = strcmp(a.scope, b.scope);\n        if (r !== 0) {\n            return r;\n        }\n        r = strArrCmp(a.parentScopes, b.parentScopes);\n        if (r !== 0) {\n            return r;\n        }\n        return a.index - b.index;\n    });\n    // Determine defaults\n    let defaultFontStyle = 0 /* FontStyle.None */;\n    let defaultForeground = '#000000';\n    let defaultBackground = '#ffffff';\n    while (parsedThemeRules.length >= 1 && parsedThemeRules[0].scope === '') {\n        let incomingDefaults = parsedThemeRules.shift();\n        if (incomingDefaults.fontStyle !== -1 /* FontStyle.NotSet */) {\n            defaultFontStyle = incomingDefaults.fontStyle;\n        }\n        if (incomingDefaults.foreground !== null) {\n            defaultForeground = incomingDefaults.foreground;\n        }\n        if (incomingDefaults.background !== null) {\n            defaultBackground = incomingDefaults.background;\n        }\n    }\n    let colorMap = new ColorMap(_colorMap);\n    let defaults = new StyleAttributes(defaultFontStyle, colorMap.getId(defaultForeground), colorMap.getId(defaultBackground));\n    let root = new ThemeTrieElement(new ThemeTrieElementRule(0, null, -1 /* FontStyle.NotSet */, 0, 0), []);\n    for (let i = 0, len = parsedThemeRules.length; i < len; i++) {\n        let rule = parsedThemeRules[i];\n        root.insert(0, rule.scope, rule.parentScopes, rule.fontStyle, colorMap.getId(rule.foreground), colorMap.getId(rule.background));\n    }\n    return new Theme(colorMap, defaults, root);\n}\nclass ColorMap {\n    _isFrozen;\n    _lastColorId;\n    _id2color;\n    _color2id;\n    constructor(_colorMap) {\n        this._lastColorId = 0;\n        this._id2color = [];\n        this._color2id = Object.create(null);\n        if (Array.isArray(_colorMap)) {\n            this._isFrozen = true;\n            for (let i = 0, len = _colorMap.length; i < len; i++) {\n                this._color2id[_colorMap[i]] = i;\n                this._id2color[i] = _colorMap[i];\n            }\n        }\n        else {\n            this._isFrozen = false;\n        }\n    }\n    getId(color) {\n        if (color === null) {\n            return 0;\n        }\n        color = color.toUpperCase();\n        let value = this._color2id[color];\n        if (value) {\n            return value;\n        }\n        if (this._isFrozen) {\n            throw new Error(`Missing color in color map - ${color}`);\n        }\n        value = ++this._lastColorId;\n        this._color2id[color] = value;\n        this._id2color[value] = color;\n        return value;\n    }\n    getColorMap() {\n        return this._id2color.slice(0);\n    }\n}\nclass ThemeTrieElementRule {\n    scopeDepth;\n    parentScopes;\n    fontStyle;\n    foreground;\n    background;\n    constructor(scopeDepth, parentScopes, fontStyle, foreground, background) {\n        this.scopeDepth = scopeDepth;\n        this.parentScopes = parentScopes;\n        this.fontStyle = fontStyle;\n        this.foreground = foreground;\n        this.background = background;\n    }\n    clone() {\n        return new ThemeTrieElementRule(this.scopeDepth, this.parentScopes, this.fontStyle, this.foreground, this.background);\n    }\n    static cloneArr(arr) {\n        let r = [];\n        for (let i = 0, len = arr.length; i < len; i++) {\n            r[i] = arr[i].clone();\n        }\n        return r;\n    }\n    acceptOverwrite(scopeDepth, fontStyle, foreground, background) {\n        if (this.scopeDepth > scopeDepth) {\n            console.log('how did this happen?');\n        }\n        else {\n            this.scopeDepth = scopeDepth;\n        }\n        // console.log('TODO -> my depth: ' + this.scopeDepth + ', overwriting depth: ' + scopeDepth);\n        if (fontStyle !== -1 /* FontStyle.NotSet */) {\n            this.fontStyle = fontStyle;\n        }\n        if (foreground !== 0) {\n            this.foreground = foreground;\n        }\n        if (background !== 0) {\n            this.background = background;\n        }\n    }\n}\nclass ThemeTrieElement {\n    _mainRule;\n    _children;\n    _rulesWithParentScopes;\n    constructor(_mainRule, rulesWithParentScopes = [], _children = {}) {\n        this._mainRule = _mainRule;\n        this._children = _children;\n        this._rulesWithParentScopes = rulesWithParentScopes;\n    }\n    static _sortBySpecificity(arr) {\n        if (arr.length === 1) {\n            return arr;\n        }\n        arr.sort(this._cmpBySpecificity);\n        return arr;\n    }\n    static _cmpBySpecificity(a, b) {\n        if (a.scopeDepth === b.scopeDepth) {\n            const aParentScopes = a.parentScopes;\n            const bParentScopes = b.parentScopes;\n            let aParentScopesLen = aParentScopes === null ? 0 : aParentScopes.length;\n            let bParentScopesLen = bParentScopes === null ? 0 : bParentScopes.length;\n            if (aParentScopesLen === bParentScopesLen) {\n                for (let i = 0; i < aParentScopesLen; i++) {\n                    const aLen = aParentScopes[i].length;\n                    const bLen = bParentScopes[i].length;\n                    if (aLen !== bLen) {\n                        return bLen - aLen;\n                    }\n                }\n            }\n            return bParentScopesLen - aParentScopesLen;\n        }\n        return b.scopeDepth - a.scopeDepth;\n    }\n    match(scope) {\n        if (scope === '') {\n            return ThemeTrieElement._sortBySpecificity([].concat(this._mainRule).concat(this._rulesWithParentScopes));\n        }\n        let dotIndex = scope.indexOf('.');\n        let head;\n        let tail;\n        if (dotIndex === -1) {\n            head = scope;\n            tail = '';\n        }\n        else {\n            head = scope.substring(0, dotIndex);\n            tail = scope.substring(dotIndex + 1);\n        }\n        if (this._children.hasOwnProperty(head)) {\n            return this._children[head].match(tail);\n        }\n        return ThemeTrieElement._sortBySpecificity([].concat(this._mainRule).concat(this._rulesWithParentScopes));\n    }\n    insert(scopeDepth, scope, parentScopes, fontStyle, foreground, background) {\n        if (scope === '') {\n            this._doInsertHere(scopeDepth, parentScopes, fontStyle, foreground, background);\n            return;\n        }\n        let dotIndex = scope.indexOf('.');\n        let head;\n        let tail;\n        if (dotIndex === -1) {\n            head = scope;\n            tail = '';\n        }\n        else {\n            head = scope.substring(0, dotIndex);\n            tail = scope.substring(dotIndex + 1);\n        }\n        let child;\n        if (this._children.hasOwnProperty(head)) {\n            child = this._children[head];\n        }\n        else {\n            child = new ThemeTrieElement(this._mainRule.clone(), ThemeTrieElementRule.cloneArr(this._rulesWithParentScopes));\n            this._children[head] = child;\n        }\n        child.insert(scopeDepth + 1, tail, parentScopes, fontStyle, foreground, background);\n    }\n    _doInsertHere(scopeDepth, parentScopes, fontStyle, foreground, background) {\n        if (parentScopes === null) {\n            // Merge into the main rule\n            this._mainRule.acceptOverwrite(scopeDepth, fontStyle, foreground, background);\n            return;\n        }\n        // Try to merge into existing rule\n        for (let i = 0, len = this._rulesWithParentScopes.length; i < len; i++) {\n            let rule = this._rulesWithParentScopes[i];\n            if (strArrCmp(rule.parentScopes, parentScopes) === 0) {\n                // bingo! => we get to merge this into an existing one\n                rule.acceptOverwrite(scopeDepth, fontStyle, foreground, background);\n                return;\n            }\n        }\n        // Must add a new rule\n        // Inherit from main rule\n        if (fontStyle === -1 /* FontStyle.NotSet */) {\n            fontStyle = this._mainRule.fontStyle;\n        }\n        if (foreground === 0) {\n            foreground = this._mainRule.foreground;\n        }\n        if (background === 0) {\n            background = this._mainRule.background;\n        }\n        this._rulesWithParentScopes.push(new ThemeTrieElementRule(scopeDepth, parentScopes, fontStyle, foreground, background));\n    }\n}\n\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nclass BasicScopeAttributes {\n    languageId;\n    tokenType;\n    constructor(languageId, tokenType) {\n        this.languageId = languageId;\n        this.tokenType = tokenType;\n    }\n}\nclass BasicScopeAttributesProvider {\n    _defaultAttributes;\n    _embeddedLanguagesMatcher;\n    constructor(initialLanguageId, embeddedLanguages) {\n        this._defaultAttributes = new BasicScopeAttributes(initialLanguageId, 8 /* OptionalStandardTokenType.NotSet */);\n        this._embeddedLanguagesMatcher = new ScopeMatcher(Object.entries(embeddedLanguages || {}));\n    }\n    getDefaultAttributes() {\n        return this._defaultAttributes;\n    }\n    getBasicScopeAttributes(scopeName) {\n        if (scopeName === null) {\n            return BasicScopeAttributesProvider._NULL_SCOPE_METADATA;\n        }\n        return this._getBasicScopeAttributes.get(scopeName);\n    }\n    static _NULL_SCOPE_METADATA = new BasicScopeAttributes(0, 0);\n    _getBasicScopeAttributes = new CachedFn((scopeName) => {\n        const languageId = this._scopeToLanguage(scopeName);\n        const standardTokenType = this._toStandardTokenType(scopeName);\n        return new BasicScopeAttributes(languageId, standardTokenType);\n    });\n    /**\n     * Given a produced TM scope, return the language that token describes or null if unknown.\n     * e.g. source.html => html, source.css.embedded.html => css, punctuation.definition.tag.html => null\n     */\n    _scopeToLanguage(scope) {\n        return this._embeddedLanguagesMatcher.match(scope) || 0;\n    }\n    _toStandardTokenType(scopeName) {\n        const m = scopeName.match(BasicScopeAttributesProvider.STANDARD_TOKEN_TYPE_REGEXP);\n        if (!m) {\n            return 8 /* OptionalStandardTokenType.NotSet */;\n        }\n        switch (m[1]) {\n            case \"comment\":\n                return 1 /* OptionalStandardTokenType.Comment */;\n            case \"string\":\n                return 2 /* OptionalStandardTokenType.String */;\n            case \"regex\":\n                return 3 /* OptionalStandardTokenType.RegEx */;\n            case \"meta.embedded\":\n                return 0 /* OptionalStandardTokenType.Other */;\n        }\n        throw new Error(\"Unexpected match for standard token type!\");\n    }\n    static STANDARD_TOKEN_TYPE_REGEXP = /\\b(comment|string|regex|meta\\.embedded)\\b/;\n}\nclass ScopeMatcher {\n    values;\n    scopesRegExp;\n    constructor(values) {\n        if (values.length === 0) {\n            this.values = null;\n            this.scopesRegExp = null;\n        }\n        else {\n            this.values = new Map(values);\n            // create the regex\n            const escapedScopes = values.map(([scopeName, value]) => escapeRegExpCharacters(scopeName));\n            escapedScopes.sort();\n            escapedScopes.reverse(); // Longest scope first\n            this.scopesRegExp = new RegExp(`^((${escapedScopes.join(\")|(\")}))($|\\\\.)`, \"\");\n        }\n    }\n    match(scope) {\n        if (!this.scopesRegExp) {\n            return undefined;\n        }\n        const m = scope.match(this.scopesRegExp);\n        if (!m) {\n            // no scopes matched\n            return undefined;\n        }\n        return this.values.get(m[1]);\n    }\n}\n\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nclass TokenizeStringResult {\n    stack;\n    stoppedEarly;\n    constructor(stack, stoppedEarly) {\n        this.stack = stack;\n        this.stoppedEarly = stoppedEarly;\n    }\n}\n/**\n * Tokenize a string\n * @param grammar\n * @param lineText\n * @param isFirstLine\n * @param linePos\n * @param stack\n * @param lineTokens\n * @param checkWhileConditions\n * @param timeLimit Use `0` to indicate no time limit\n * @returns the StackElement or StackElement.TIME_LIMIT_REACHED if the time limit has been reached\n */\nfunction _tokenizeString(grammar, lineText, isFirstLine, linePos, stack, lineTokens, checkWhileConditions, timeLimit) {\n    const lineLength = lineText.content.length;\n    let STOP = false;\n    let anchorPosition = -1;\n    if (checkWhileConditions) {\n        const whileCheckResult = _checkWhileConditions(grammar, lineText, isFirstLine, linePos, stack, lineTokens);\n        stack = whileCheckResult.stack;\n        linePos = whileCheckResult.linePos;\n        isFirstLine = whileCheckResult.isFirstLine;\n        anchorPosition = whileCheckResult.anchorPosition;\n    }\n    const startTime = Date.now();\n    while (!STOP) {\n        if (timeLimit !== 0) {\n            const elapsedTime = Date.now() - startTime;\n            if (elapsedTime > timeLimit) {\n                return new TokenizeStringResult(stack, true);\n            }\n        }\n        scanNext(); // potentially modifies linePos && anchorPosition\n    }\n    return new TokenizeStringResult(stack, false);\n    function scanNext() {\n        const r = matchRuleOrInjections(grammar, lineText, isFirstLine, linePos, stack, anchorPosition);\n        if (!r) {\n            // No match\n            lineTokens.produce(stack, lineLength);\n            STOP = true;\n            return;\n        }\n        const captureIndices = r.captureIndices;\n        const matchedRuleId = r.matchedRuleId;\n        const hasAdvanced = captureIndices && captureIndices.length > 0\n            ? captureIndices[0].end > linePos\n            : false;\n        if (matchedRuleId === endRuleId) {\n            // We matched the `end` for this rule => pop it\n            const poppedRule = stack.getRule(grammar);\n            lineTokens.produce(stack, captureIndices[0].start);\n            stack = stack.withContentNameScopesList(stack.nameScopesList);\n            handleCaptures(grammar, lineText, isFirstLine, stack, lineTokens, poppedRule.endCaptures, captureIndices);\n            lineTokens.produce(stack, captureIndices[0].end);\n            // pop\n            const popped = stack;\n            stack = stack.parent;\n            anchorPosition = popped.getAnchorPos();\n            if (!hasAdvanced && popped.getEnterPos() === linePos) {\n                // See https://github.com/Microsoft/vscode-textmate/issues/12\n                // Let's assume this was a mistake by the grammar author and the intent was to continue in this state\n                stack = popped;\n                lineTokens.produce(stack, lineLength);\n                STOP = true;\n                return;\n            }\n        }\n        else {\n            // We matched a rule!\n            const _rule = grammar.getRule(matchedRuleId);\n            lineTokens.produce(stack, captureIndices[0].start);\n            const beforePush = stack;\n            // push it on the stack rule\n            const scopeName = _rule.getName(lineText.content, captureIndices);\n            const nameScopesList = stack.contentNameScopesList.pushAttributed(scopeName, grammar);\n            stack = stack.push(matchedRuleId, linePos, anchorPosition, captureIndices[0].end === lineLength, null, nameScopesList, nameScopesList);\n            if (_rule instanceof BeginEndRule) {\n                const pushedRule = _rule;\n                handleCaptures(grammar, lineText, isFirstLine, stack, lineTokens, pushedRule.beginCaptures, captureIndices);\n                lineTokens.produce(stack, captureIndices[0].end);\n                anchorPosition = captureIndices[0].end;\n                const contentName = pushedRule.getContentName(lineText.content, captureIndices);\n                const contentNameScopesList = nameScopesList.pushAttributed(contentName, grammar);\n                stack = stack.withContentNameScopesList(contentNameScopesList);\n                if (pushedRule.endHasBackReferences) {\n                    stack = stack.withEndRule(pushedRule.getEndWithResolvedBackReferences(lineText.content, captureIndices));\n                }\n                if (!hasAdvanced && beforePush.hasSameRuleAs(stack)) {\n                    stack = stack.pop();\n                    lineTokens.produce(stack, lineLength);\n                    STOP = true;\n                    return;\n                }\n            }\n            else if (_rule instanceof BeginWhileRule) {\n                const pushedRule = _rule;\n                handleCaptures(grammar, lineText, isFirstLine, stack, lineTokens, pushedRule.beginCaptures, captureIndices);\n                lineTokens.produce(stack, captureIndices[0].end);\n                anchorPosition = captureIndices[0].end;\n                const contentName = pushedRule.getContentName(lineText.content, captureIndices);\n                const contentNameScopesList = nameScopesList.pushAttributed(contentName, grammar);\n                stack = stack.withContentNameScopesList(contentNameScopesList);\n                if (pushedRule.whileHasBackReferences) {\n                    stack = stack.withEndRule(pushedRule.getWhileWithResolvedBackReferences(lineText.content, captureIndices));\n                }\n                if (!hasAdvanced && beforePush.hasSameRuleAs(stack)) {\n                    stack = stack.pop();\n                    lineTokens.produce(stack, lineLength);\n                    STOP = true;\n                    return;\n                }\n            }\n            else {\n                const matchingRule = _rule;\n                handleCaptures(grammar, lineText, isFirstLine, stack, lineTokens, matchingRule.captures, captureIndices);\n                lineTokens.produce(stack, captureIndices[0].end);\n                // pop rule immediately since it is a MatchRule\n                stack = stack.pop();\n                if (!hasAdvanced) {\n                    stack = stack.safePop();\n                    lineTokens.produce(stack, lineLength);\n                    STOP = true;\n                    return;\n                }\n            }\n        }\n        if (captureIndices[0].end > linePos) {\n            // Advance stream\n            linePos = captureIndices[0].end;\n            isFirstLine = false;\n        }\n    }\n}\n/**\n * Walk the stack from bottom to top, and check each while condition in this order.\n * If any fails, cut off the entire stack above the failed while condition. While conditions\n * may also advance the linePosition.\n */\nfunction _checkWhileConditions(grammar, lineText, isFirstLine, linePos, stack, lineTokens) {\n    let anchorPosition = (stack.beginRuleCapturedEOL ? 0 : -1);\n    const whileRules = [];\n    for (let node = stack; node; node = node.pop()) {\n        const nodeRule = node.getRule(grammar);\n        if (nodeRule instanceof BeginWhileRule) {\n            whileRules.push({\n                rule: nodeRule,\n                stack: node\n            });\n        }\n    }\n    for (let whileRule = whileRules.pop(); whileRule; whileRule = whileRules.pop()) {\n        const { ruleScanner, findOptions } = prepareRuleWhileSearch(whileRule.rule, grammar, whileRule.stack.endRule, isFirstLine, linePos === anchorPosition);\n        const r = ruleScanner.findNextMatchSync(lineText, linePos, findOptions);\n        if (r) {\n            const matchedRuleId = r.ruleId;\n            if (matchedRuleId !== whileRuleId) {\n                // we shouldn't end up here\n                stack = whileRule.stack.pop();\n                break;\n            }\n            if (r.captureIndices && r.captureIndices.length) {\n                lineTokens.produce(whileRule.stack, r.captureIndices[0].start);\n                handleCaptures(grammar, lineText, isFirstLine, whileRule.stack, lineTokens, whileRule.rule.whileCaptures, r.captureIndices);\n                lineTokens.produce(whileRule.stack, r.captureIndices[0].end);\n                anchorPosition = r.captureIndices[0].end;\n                if (r.captureIndices[0].end > linePos) {\n                    linePos = r.captureIndices[0].end;\n                    isFirstLine = false;\n                }\n            }\n        }\n        else {\n            stack = whileRule.stack.pop();\n            break;\n        }\n    }\n    return { stack: stack, linePos: linePos, anchorPosition: anchorPosition, isFirstLine: isFirstLine };\n}\nfunction matchRuleOrInjections(grammar, lineText, isFirstLine, linePos, stack, anchorPosition) {\n    // Look for normal grammar rule\n    const matchResult = matchRule(grammar, lineText, isFirstLine, linePos, stack, anchorPosition);\n    // Look for injected rules\n    const injections = grammar.getInjections();\n    if (injections.length === 0) {\n        // No injections whatsoever => early return\n        return matchResult;\n    }\n    const injectionResult = matchInjections(injections, grammar, lineText, isFirstLine, linePos, stack, anchorPosition);\n    if (!injectionResult) {\n        // No injections matched => early return\n        return matchResult;\n    }\n    if (!matchResult) {\n        // Only injections matched => early return\n        return injectionResult;\n    }\n    // Decide if `matchResult` or `injectionResult` should win\n    const matchResultScore = matchResult.captureIndices[0].start;\n    const injectionResultScore = injectionResult.captureIndices[0].start;\n    if (injectionResultScore < matchResultScore || (injectionResult.priorityMatch && injectionResultScore === matchResultScore)) {\n        // injection won!\n        return injectionResult;\n    }\n    return matchResult;\n}\nfunction matchRule(grammar, lineText, isFirstLine, linePos, stack, anchorPosition) {\n    const rule = stack.getRule(grammar);\n    const { ruleScanner, findOptions } = prepareRuleSearch(rule, grammar, stack.endRule, isFirstLine, linePos === anchorPosition);\n    const r = ruleScanner.findNextMatchSync(lineText, linePos, findOptions);\n    if (r) {\n        return {\n            captureIndices: r.captureIndices,\n            matchedRuleId: r.ruleId\n        };\n    }\n    return null;\n}\nfunction matchInjections(injections, grammar, lineText, isFirstLine, linePos, stack, anchorPosition) {\n    // The lower the better\n    let bestMatchRating = Number.MAX_VALUE;\n    let bestMatchCaptureIndices = null;\n    let bestMatchRuleId;\n    let bestMatchResultPriority = 0;\n    const scopes = stack.contentNameScopesList.getScopeNames();\n    for (let i = 0, len = injections.length; i < len; i++) {\n        const injection = injections[i];\n        if (!injection.matcher(scopes)) {\n            // injection selector doesn't match stack\n            continue;\n        }\n        const rule = grammar.getRule(injection.ruleId);\n        const { ruleScanner, findOptions } = prepareRuleSearch(rule, grammar, null, isFirstLine, linePos === anchorPosition);\n        const matchResult = ruleScanner.findNextMatchSync(lineText, linePos, findOptions);\n        if (!matchResult) {\n            continue;\n        }\n        const matchRating = matchResult.captureIndices[0].start;\n        if (matchRating >= bestMatchRating) {\n            // Injections are sorted by priority, so the previous injection had a better or equal priority\n            continue;\n        }\n        bestMatchRating = matchRating;\n        bestMatchCaptureIndices = matchResult.captureIndices;\n        bestMatchRuleId = matchResult.ruleId;\n        bestMatchResultPriority = injection.priority;\n        if (bestMatchRating === linePos) {\n            // No more need to look at the rest of the injections.\n            break;\n        }\n    }\n    if (bestMatchCaptureIndices) {\n        return {\n            priorityMatch: bestMatchResultPriority === -1,\n            captureIndices: bestMatchCaptureIndices,\n            matchedRuleId: bestMatchRuleId\n        };\n    }\n    return null;\n}\nfunction prepareRuleSearch(rule, grammar, endRegexSource, allowA, allowG) {\n    const ruleScanner = rule.compileAG(grammar, endRegexSource, allowA, allowG);\n    return { ruleScanner, findOptions: 0 /* FindOption.None */ };\n}\nfunction prepareRuleWhileSearch(rule, grammar, endRegexSource, allowA, allowG) {\n    const ruleScanner = rule.compileWhileAG(grammar, endRegexSource, allowA, allowG);\n    return { ruleScanner, findOptions: 0 /* FindOption.None */ };\n}\nfunction handleCaptures(grammar, lineText, isFirstLine, stack, lineTokens, captures, captureIndices) {\n    if (captures.length === 0) {\n        return;\n    }\n    const lineTextContent = lineText.content;\n    const len = Math.min(captures.length, captureIndices.length);\n    const localStack = [];\n    const maxEnd = captureIndices[0].end;\n    for (let i = 0; i < len; i++) {\n        const captureRule = captures[i];\n        if (captureRule === null) {\n            // Not interested\n            continue;\n        }\n        const captureIndex = captureIndices[i];\n        if (captureIndex.length === 0) {\n            // Nothing really captured\n            continue;\n        }\n        if (captureIndex.start > maxEnd) {\n            // Capture going beyond consumed string\n            break;\n        }\n        // pop captures while needed\n        while (localStack.length > 0 && localStack[localStack.length - 1].endPos <= captureIndex.start) {\n            // pop!\n            lineTokens.produceFromScopes(localStack[localStack.length - 1].scopes, localStack[localStack.length - 1].endPos);\n            localStack.pop();\n        }\n        if (localStack.length > 0) {\n            lineTokens.produceFromScopes(localStack[localStack.length - 1].scopes, captureIndex.start);\n        }\n        else {\n            lineTokens.produce(stack, captureIndex.start);\n        }\n        if (captureRule.retokenizeCapturedWithRuleId) {\n            // the capture requires additional matching\n            const scopeName = captureRule.getName(lineTextContent, captureIndices);\n            const nameScopesList = stack.contentNameScopesList.pushAttributed(scopeName, grammar);\n            const contentName = captureRule.getContentName(lineTextContent, captureIndices);\n            const contentNameScopesList = nameScopesList.pushAttributed(contentName, grammar);\n            const stackClone = stack.push(captureRule.retokenizeCapturedWithRuleId, captureIndex.start, -1, false, null, nameScopesList, contentNameScopesList);\n            const onigSubStr = grammar.createOnigString(lineTextContent.substring(0, captureIndex.end));\n            _tokenizeString(grammar, onigSubStr, (isFirstLine && captureIndex.start === 0), captureIndex.start, stackClone, lineTokens, false, /* no time limit */ 0);\n            disposeOnigString(onigSubStr);\n            continue;\n        }\n        const captureRuleScopeName = captureRule.getName(lineTextContent, captureIndices);\n        if (captureRuleScopeName !== null) {\n            // push\n            const base = localStack.length > 0 ? localStack[localStack.length - 1].scopes : stack.contentNameScopesList;\n            const captureRuleScopesList = base.pushAttributed(captureRuleScopeName, grammar);\n            localStack.push(new LocalStackElement(captureRuleScopesList, captureIndex.end));\n        }\n    }\n    while (localStack.length > 0) {\n        // pop!\n        lineTokens.produceFromScopes(localStack[localStack.length - 1].scopes, localStack[localStack.length - 1].endPos);\n        localStack.pop();\n    }\n}\nclass LocalStackElement {\n    scopes;\n    endPos;\n    constructor(scopes, endPos) {\n        this.scopes = scopes;\n        this.endPos = endPos;\n    }\n}\n\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nfunction createGrammar(scopeName, grammar, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors, grammarRepository, onigLib) {\n    return new Grammar(scopeName, grammar, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors, grammarRepository, onigLib); //TODO\n}\nfunction collectInjections(result, selector, rule, ruleFactoryHelper, grammar) {\n    const matchers = createMatchers(selector, nameMatcher);\n    const ruleId = RuleFactory.getCompiledRuleId(rule, ruleFactoryHelper, grammar.repository);\n    for (const matcher of matchers) {\n        result.push({\n            debugSelector: selector,\n            matcher: matcher.matcher,\n            ruleId: ruleId,\n            grammar: grammar,\n            priority: matcher.priority\n        });\n    }\n}\nfunction nameMatcher(identifers, scopes) {\n    if (scopes.length < identifers.length) {\n        return false;\n    }\n    let lastIndex = 0;\n    return identifers.every(identifier => {\n        for (let i = lastIndex; i < scopes.length; i++) {\n            if (scopesAreMatching(scopes[i], identifier)) {\n                lastIndex = i + 1;\n                return true;\n            }\n        }\n        return false;\n    });\n}\nfunction scopesAreMatching(thisScopeName, scopeName) {\n    if (!thisScopeName) {\n        return false;\n    }\n    if (thisScopeName === scopeName) {\n        return true;\n    }\n    const len = scopeName.length;\n    return thisScopeName.length > len && thisScopeName.substr(0, len) === scopeName && thisScopeName[len] === '.';\n}\nclass Grammar {\n    _rootScopeName;\n    balancedBracketSelectors;\n    _onigLib;\n    _rootId;\n    _lastRuleId;\n    _ruleId2desc;\n    _includedGrammars;\n    _grammarRepository;\n    _grammar;\n    _injections;\n    _basicScopeAttributesProvider;\n    _tokenTypeMatchers;\n    get themeProvider() { return this._grammarRepository; }\n    constructor(_rootScopeName, grammar, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors, grammarRepository, _onigLib) {\n        this._rootScopeName = _rootScopeName;\n        this.balancedBracketSelectors = balancedBracketSelectors;\n        this._onigLib = _onigLib;\n        this._basicScopeAttributesProvider = new BasicScopeAttributesProvider(initialLanguage, embeddedLanguages);\n        this._rootId = -1;\n        this._lastRuleId = 0;\n        this._ruleId2desc = [null];\n        this._includedGrammars = {};\n        this._grammarRepository = grammarRepository;\n        this._grammar = initGrammar(grammar, null);\n        this._injections = null;\n        this._tokenTypeMatchers = [];\n        if (tokenTypes) {\n            for (const selector of Object.keys(tokenTypes)) {\n                const matchers = createMatchers(selector, nameMatcher);\n                for (const matcher of matchers) {\n                    this._tokenTypeMatchers.push({\n                        matcher: matcher.matcher,\n                        type: tokenTypes[selector],\n                    });\n                }\n            }\n        }\n    }\n    dispose() {\n        for (const rule of this._ruleId2desc) {\n            if (rule) {\n                rule.dispose();\n            }\n        }\n    }\n    createOnigScanner(sources) {\n        return this._onigLib.createOnigScanner(sources);\n    }\n    createOnigString(sources) {\n        return this._onigLib.createOnigString(sources);\n    }\n    getMetadataForScope(scope) {\n        return this._basicScopeAttributesProvider.getBasicScopeAttributes(scope);\n    }\n    _collectInjections() {\n        const grammarRepository = {\n            lookup: (scopeName) => {\n                if (scopeName === this._rootScopeName) {\n                    return this._grammar;\n                }\n                return this.getExternalGrammar(scopeName);\n            },\n            injections: (scopeName) => {\n                return this._grammarRepository.injections(scopeName);\n            },\n        };\n        const result = [];\n        const scopeName = this._rootScopeName;\n        const grammar = grammarRepository.lookup(scopeName);\n        if (grammar) {\n            // add injections from the current grammar\n            const rawInjections = grammar.injections;\n            if (rawInjections) {\n                for (let expression in rawInjections) {\n                    collectInjections(result, expression, rawInjections[expression], this, grammar);\n                }\n            }\n            // add injection grammars contributed for the current scope\n            const injectionScopeNames = this._grammarRepository.injections(scopeName);\n            if (injectionScopeNames) {\n                injectionScopeNames.forEach((injectionScopeName) => {\n                    const injectionGrammar = this.getExternalGrammar(injectionScopeName);\n                    if (injectionGrammar) {\n                        const selector = injectionGrammar.injectionSelector;\n                        if (selector) {\n                            collectInjections(result, selector, injectionGrammar, this, injectionGrammar);\n                        }\n                    }\n                });\n            }\n        }\n        result.sort((i1, i2) => i1.priority - i2.priority); // sort by priority\n        return result;\n    }\n    getInjections() {\n        if (this._injections === null) {\n            this._injections = this._collectInjections();\n        }\n        return this._injections;\n    }\n    registerRule(factory) {\n        const id = ++this._lastRuleId;\n        const result = factory(ruleIdFromNumber(id));\n        this._ruleId2desc[id] = result;\n        return result;\n    }\n    getRule(ruleId) {\n        return this._ruleId2desc[ruleIdToNumber(ruleId)];\n    }\n    getExternalGrammar(scopeName, repository) {\n        if (this._includedGrammars[scopeName]) {\n            return this._includedGrammars[scopeName];\n        }\n        else if (this._grammarRepository) {\n            const rawIncludedGrammar = this._grammarRepository.lookup(scopeName);\n            if (rawIncludedGrammar) {\n                // console.log('LOADED GRAMMAR ' + pattern.include);\n                this._includedGrammars[scopeName] = initGrammar(rawIncludedGrammar, repository && repository.$base);\n                return this._includedGrammars[scopeName];\n            }\n        }\n        return undefined;\n    }\n    tokenizeLine(lineText, prevState, timeLimit = 0) {\n        const r = this._tokenize(lineText, prevState, false, timeLimit);\n        return {\n            tokens: r.lineTokens.getResult(r.ruleStack, r.lineLength),\n            ruleStack: r.ruleStack,\n            stoppedEarly: r.stoppedEarly,\n        };\n    }\n    tokenizeLine2(lineText, prevState, timeLimit = 0) {\n        const r = this._tokenize(lineText, prevState, true, timeLimit);\n        return {\n            tokens: r.lineTokens.getBinaryResult(r.ruleStack, r.lineLength),\n            ruleStack: r.ruleStack,\n            stoppedEarly: r.stoppedEarly,\n        };\n    }\n    _tokenize(lineText, prevState, emitBinaryTokens, timeLimit) {\n        if (this._rootId === -1) {\n            this._rootId = RuleFactory.getCompiledRuleId(this._grammar.repository.$self, this, this._grammar.repository);\n            // This ensures ids are deterministic, and thus equal in renderer and webworker.\n            this.getInjections();\n        }\n        let isFirstLine;\n        if (!prevState || prevState === StateStackImpl.NULL) {\n            isFirstLine = true;\n            const rawDefaultMetadata = this._basicScopeAttributesProvider.getDefaultAttributes();\n            const defaultStyle = this.themeProvider.getDefaults();\n            const defaultMetadata = EncodedTokenAttributes.set(0, rawDefaultMetadata.languageId, rawDefaultMetadata.tokenType, null, defaultStyle.fontStyle, defaultStyle.foregroundId, defaultStyle.backgroundId);\n            const rootScopeName = this.getRule(this._rootId).getName(null, null);\n            let scopeList;\n            if (rootScopeName) {\n                scopeList = AttributedScopeStack.createRootAndLookUpScopeName(rootScopeName, defaultMetadata, this);\n            }\n            else {\n                scopeList = AttributedScopeStack.createRoot(\"unknown\", defaultMetadata);\n            }\n            prevState = new StateStackImpl(null, this._rootId, -1, -1, false, null, scopeList, scopeList);\n        }\n        else {\n            isFirstLine = false;\n            prevState.reset();\n        }\n        lineText = lineText + \"\\n\";\n        const onigLineText = this.createOnigString(lineText);\n        const lineLength = onigLineText.content.length;\n        const lineTokens = new LineTokens(emitBinaryTokens, lineText, this._tokenTypeMatchers, this.balancedBracketSelectors);\n        const r = _tokenizeString(this, onigLineText, isFirstLine, 0, prevState, lineTokens, true, timeLimit);\n        disposeOnigString(onigLineText);\n        return {\n            lineLength: lineLength,\n            lineTokens: lineTokens,\n            ruleStack: r.stack,\n            stoppedEarly: r.stoppedEarly,\n        };\n    }\n}\nfunction initGrammar(grammar, base) {\n    grammar = clone(grammar);\n    grammar.repository = grammar.repository || {};\n    grammar.repository.$self = {\n        $vscodeTextmateLocation: grammar.$vscodeTextmateLocation,\n        patterns: grammar.patterns,\n        name: grammar.scopeName\n    };\n    grammar.repository.$base = base || grammar.repository.$self;\n    return grammar;\n}\nclass AttributedScopeStack {\n    parent;\n    scopePath;\n    tokenAttributes;\n    static fromExtension(namesScopeList, contentNameScopesList) {\n        let current = namesScopeList;\n        let scopeNames = namesScopeList?.scopePath ?? null;\n        for (const frame of contentNameScopesList) {\n            scopeNames = ScopeStack.push(scopeNames, frame.scopeNames);\n            current = new AttributedScopeStack(current, scopeNames, frame.encodedTokenAttributes);\n        }\n        return current;\n    }\n    static createRoot(scopeName, tokenAttributes) {\n        return new AttributedScopeStack(null, new ScopeStack(null, scopeName), tokenAttributes);\n    }\n    static createRootAndLookUpScopeName(scopeName, tokenAttributes, grammar) {\n        const rawRootMetadata = grammar.getMetadataForScope(scopeName);\n        const scopePath = new ScopeStack(null, scopeName);\n        const rootStyle = grammar.themeProvider.themeMatch(scopePath);\n        const resolvedTokenAttributes = AttributedScopeStack.mergeAttributes(tokenAttributes, rawRootMetadata, rootStyle);\n        return new AttributedScopeStack(null, scopePath, resolvedTokenAttributes);\n    }\n    get scopeName() { return this.scopePath.scopeName; }\n    /**\n     * Invariant:\n     * ```\n     * if (parent && !scopePath.extends(parent.scopePath)) {\n     * \tthrow new Error();\n     * }\n     * ```\n     */\n    constructor(parent, scopePath, tokenAttributes) {\n        this.parent = parent;\n        this.scopePath = scopePath;\n        this.tokenAttributes = tokenAttributes;\n    }\n    toString() {\n        return this.getScopeNames().join(' ');\n    }\n    equals(other) {\n        return AttributedScopeStack.equals(this, other);\n    }\n    static equals(a, b) {\n        do {\n            if (a === b) {\n                return true;\n            }\n            if (!a && !b) {\n                // End of list reached for both\n                return true;\n            }\n            if (!a || !b) {\n                // End of list reached only for one\n                return false;\n            }\n            if (a.scopeName !== b.scopeName || a.tokenAttributes !== b.tokenAttributes) {\n                return false;\n            }\n            // Go to previous pair\n            a = a.parent;\n            b = b.parent;\n        } while (true);\n    }\n    static mergeAttributes(existingTokenAttributes, basicScopeAttributes, styleAttributes) {\n        let fontStyle = -1 /* FontStyle.NotSet */;\n        let foreground = 0;\n        let background = 0;\n        if (styleAttributes !== null) {\n            fontStyle = styleAttributes.fontStyle;\n            foreground = styleAttributes.foregroundId;\n            background = styleAttributes.backgroundId;\n        }\n        return EncodedTokenAttributes.set(existingTokenAttributes, basicScopeAttributes.languageId, basicScopeAttributes.tokenType, null, fontStyle, foreground, background);\n    }\n    pushAttributed(scopePath, grammar) {\n        if (scopePath === null) {\n            return this;\n        }\n        if (scopePath.indexOf(' ') === -1) {\n            // This is the common case and much faster\n            return AttributedScopeStack._pushAttributed(this, scopePath, grammar);\n        }\n        const scopes = scopePath.split(/ /g);\n        let result = this;\n        for (const scope of scopes) {\n            result = AttributedScopeStack._pushAttributed(result, scope, grammar);\n        }\n        return result;\n    }\n    static _pushAttributed(target, scopeName, grammar) {\n        const rawMetadata = grammar.getMetadataForScope(scopeName);\n        const newPath = target.scopePath.push(scopeName);\n        const scopeThemeMatchResult = grammar.themeProvider.themeMatch(newPath);\n        const metadata = AttributedScopeStack.mergeAttributes(target.tokenAttributes, rawMetadata, scopeThemeMatchResult);\n        return new AttributedScopeStack(target, newPath, metadata);\n    }\n    getScopeNames() {\n        return this.scopePath.getSegments();\n    }\n    getExtensionIfDefined(base) {\n        const result = [];\n        let self = this;\n        while (self && self !== base) {\n            result.push({\n                encodedTokenAttributes: self.tokenAttributes,\n                scopeNames: self.scopePath.getExtensionIfDefined(self.parent?.scopePath ?? null),\n            });\n            self = self.parent;\n        }\n        return self === base ? result.reverse() : undefined;\n    }\n}\n/**\n * Represents a \"pushed\" state on the stack (as a linked list element).\n */\nclass StateStackImpl {\n    parent;\n    ruleId;\n    beginRuleCapturedEOL;\n    endRule;\n    nameScopesList;\n    contentNameScopesList;\n    _stackElementBrand = undefined;\n    // TODO remove me\n    static NULL = new StateStackImpl(null, 0, 0, 0, false, null, null, null);\n    /**\n     * The position on the current line where this state was pushed.\n     * This is relevant only while tokenizing a line, to detect endless loops.\n     * Its value is meaningless across lines.\n     */\n    _enterPos;\n    /**\n     * The captured anchor position when this stack element was pushed.\n     * This is relevant only while tokenizing a line, to restore the anchor position when popping.\n     * Its value is meaningless across lines.\n     */\n    _anchorPos;\n    /**\n     * The depth of the stack.\n     */\n    depth;\n    /**\n     * Invariant:\n     * ```\n     * if (contentNameScopesList !== nameScopesList && contentNameScopesList?.parent !== nameScopesList) {\n     * \tthrow new Error();\n     * }\n     * if (this.parent && !nameScopesList.extends(this.parent.contentNameScopesList)) {\n     * \tthrow new Error();\n     * }\n     * ```\n     */\n    constructor(\n    /**\n     * The previous state on the stack (or null for the root state).\n     */\n    parent, \n    /**\n     * The state (rule) that this element represents.\n     */\n    ruleId, enterPos, anchorPos, \n    /**\n     * The state has entered and captured \\n. This means that the next line should have an anchorPosition of 0.\n     */\n    beginRuleCapturedEOL, \n    /**\n     * The \"pop\" (end) condition for this state in case that it was dynamically generated through captured text.\n     */\n    endRule, \n    /**\n     * The list of scopes containing the \"name\" for this state.\n     */\n    nameScopesList, \n    /**\n     * The list of scopes containing the \"contentName\" (besides \"name\") for this state.\n     * This list **must** contain as an element `scopeName`.\n     */\n    contentNameScopesList) {\n        this.parent = parent;\n        this.ruleId = ruleId;\n        this.beginRuleCapturedEOL = beginRuleCapturedEOL;\n        this.endRule = endRule;\n        this.nameScopesList = nameScopesList;\n        this.contentNameScopesList = contentNameScopesList;\n        this.depth = this.parent ? this.parent.depth + 1 : 1;\n        this._enterPos = enterPos;\n        this._anchorPos = anchorPos;\n    }\n    equals(other) {\n        if (other === null) {\n            return false;\n        }\n        return StateStackImpl._equals(this, other);\n    }\n    static _equals(a, b) {\n        if (a === b) {\n            return true;\n        }\n        if (!this._structuralEquals(a, b)) {\n            return false;\n        }\n        return AttributedScopeStack.equals(a.contentNameScopesList, b.contentNameScopesList);\n    }\n    /**\n     * A structural equals check. Does not take into account `scopes`.\n     */\n    static _structuralEquals(a, b) {\n        do {\n            if (a === b) {\n                return true;\n            }\n            if (!a && !b) {\n                // End of list reached for both\n                return true;\n            }\n            if (!a || !b) {\n                // End of list reached only for one\n                return false;\n            }\n            if (a.depth !== b.depth ||\n                a.ruleId !== b.ruleId ||\n                a.endRule !== b.endRule) {\n                return false;\n            }\n            // Go to previous pair\n            a = a.parent;\n            b = b.parent;\n        } while (true);\n    }\n    clone() {\n        return this;\n    }\n    static _reset(el) {\n        while (el) {\n            el._enterPos = -1;\n            el._anchorPos = -1;\n            el = el.parent;\n        }\n    }\n    reset() {\n        StateStackImpl._reset(this);\n    }\n    pop() {\n        return this.parent;\n    }\n    safePop() {\n        if (this.parent) {\n            return this.parent;\n        }\n        return this;\n    }\n    push(ruleId, enterPos, anchorPos, beginRuleCapturedEOL, endRule, nameScopesList, contentNameScopesList) {\n        return new StateStackImpl(this, ruleId, enterPos, anchorPos, beginRuleCapturedEOL, endRule, nameScopesList, contentNameScopesList);\n    }\n    getEnterPos() {\n        return this._enterPos;\n    }\n    getAnchorPos() {\n        return this._anchorPos;\n    }\n    getRule(grammar) {\n        return grammar.getRule(this.ruleId);\n    }\n    toString() {\n        const r = [];\n        this._writeString(r, 0);\n        return \"[\" + r.join(\",\") + \"]\";\n    }\n    _writeString(res, outIndex) {\n        if (this.parent) {\n            outIndex = this.parent._writeString(res, outIndex);\n        }\n        res[outIndex++] = `(${this.ruleId}, ${this.nameScopesList?.toString()}, ${this.contentNameScopesList?.toString()})`;\n        return outIndex;\n    }\n    withContentNameScopesList(contentNameScopeStack) {\n        if (this.contentNameScopesList === contentNameScopeStack) {\n            return this;\n        }\n        return this.parent.push(this.ruleId, this._enterPos, this._anchorPos, this.beginRuleCapturedEOL, this.endRule, this.nameScopesList, contentNameScopeStack);\n    }\n    withEndRule(endRule) {\n        if (this.endRule === endRule) {\n            return this;\n        }\n        return new StateStackImpl(this.parent, this.ruleId, this._enterPos, this._anchorPos, this.beginRuleCapturedEOL, endRule, this.nameScopesList, this.contentNameScopesList);\n    }\n    // Used to warn of endless loops\n    hasSameRuleAs(other) {\n        let el = this;\n        while (el && el._enterPos === other._enterPos) {\n            if (el.ruleId === other.ruleId) {\n                return true;\n            }\n            el = el.parent;\n        }\n        return false;\n    }\n    toStateStackFrame() {\n        return {\n            ruleId: ruleIdToNumber(this.ruleId),\n            beginRuleCapturedEOL: this.beginRuleCapturedEOL,\n            endRule: this.endRule,\n            nameScopesList: this.nameScopesList?.getExtensionIfDefined(this.parent?.nameScopesList ?? null) ?? [],\n            contentNameScopesList: this.contentNameScopesList?.getExtensionIfDefined(this.nameScopesList) ?? [],\n        };\n    }\n    static pushFrame(self, frame) {\n        const namesScopeList = AttributedScopeStack.fromExtension(self?.nameScopesList ?? null, frame.nameScopesList);\n        return new StateStackImpl(self, ruleIdFromNumber(frame.ruleId), frame.enterPos ?? -1, frame.anchorPos ?? -1, frame.beginRuleCapturedEOL, frame.endRule, namesScopeList, AttributedScopeStack.fromExtension(namesScopeList, frame.contentNameScopesList));\n    }\n}\nclass BalancedBracketSelectors {\n    balancedBracketScopes;\n    unbalancedBracketScopes;\n    allowAny = false;\n    constructor(balancedBracketScopes, unbalancedBracketScopes) {\n        this.balancedBracketScopes = balancedBracketScopes.flatMap((selector) => {\n            if (selector === '*') {\n                this.allowAny = true;\n                return [];\n            }\n            return createMatchers(selector, nameMatcher).map((m) => m.matcher);\n        });\n        this.unbalancedBracketScopes = unbalancedBracketScopes.flatMap((selector) => createMatchers(selector, nameMatcher).map((m) => m.matcher));\n    }\n    get matchesAlways() {\n        return this.allowAny && this.unbalancedBracketScopes.length === 0;\n    }\n    get matchesNever() {\n        return this.balancedBracketScopes.length === 0 && !this.allowAny;\n    }\n    match(scopes) {\n        for (const excluder of this.unbalancedBracketScopes) {\n            if (excluder(scopes)) {\n                return false;\n            }\n        }\n        for (const includer of this.balancedBracketScopes) {\n            if (includer(scopes)) {\n                return true;\n            }\n        }\n        return this.allowAny;\n    }\n}\nclass LineTokens {\n    balancedBracketSelectors;\n    _emitBinaryTokens;\n    /**\n     * defined only if `false`.\n     */\n    _lineText;\n    /**\n     * used only if `_emitBinaryTokens` is false.\n     */\n    _tokens;\n    /**\n     * used only if `_emitBinaryTokens` is true.\n     */\n    _binaryTokens;\n    _lastTokenEndIndex;\n    _tokenTypeOverrides;\n    constructor(emitBinaryTokens, lineText, tokenTypeOverrides, balancedBracketSelectors) {\n        this.balancedBracketSelectors = balancedBracketSelectors;\n        this._emitBinaryTokens = emitBinaryTokens;\n        this._tokenTypeOverrides = tokenTypeOverrides;\n        {\n            this._lineText = null;\n        }\n        this._tokens = [];\n        this._binaryTokens = [];\n        this._lastTokenEndIndex = 0;\n    }\n    produce(stack, endIndex) {\n        this.produceFromScopes(stack.contentNameScopesList, endIndex);\n    }\n    produceFromScopes(scopesList, endIndex) {\n        if (this._lastTokenEndIndex >= endIndex) {\n            return;\n        }\n        if (this._emitBinaryTokens) {\n            let metadata = scopesList?.tokenAttributes ?? 0;\n            let containsBalancedBrackets = false;\n            if (this.balancedBracketSelectors?.matchesAlways) {\n                containsBalancedBrackets = true;\n            }\n            if (this._tokenTypeOverrides.length > 0 || (this.balancedBracketSelectors && !this.balancedBracketSelectors.matchesAlways && !this.balancedBracketSelectors.matchesNever)) {\n                // Only generate scope array when required to improve performance\n                const scopes = scopesList?.getScopeNames() ?? [];\n                for (const tokenType of this._tokenTypeOverrides) {\n                    if (tokenType.matcher(scopes)) {\n                        metadata = EncodedTokenAttributes.set(metadata, 0, toOptionalTokenType(tokenType.type), null, -1 /* FontStyle.NotSet */, 0, 0);\n                    }\n                }\n                if (this.balancedBracketSelectors) {\n                    containsBalancedBrackets = this.balancedBracketSelectors.match(scopes);\n                }\n            }\n            if (containsBalancedBrackets) {\n                metadata = EncodedTokenAttributes.set(metadata, 0, 8 /* OptionalStandardTokenType.NotSet */, containsBalancedBrackets, -1 /* FontStyle.NotSet */, 0, 0);\n            }\n            if (this._binaryTokens.length > 0 && this._binaryTokens[this._binaryTokens.length - 1] === metadata) {\n                // no need to push a token with the same metadata\n                this._lastTokenEndIndex = endIndex;\n                return;\n            }\n            this._binaryTokens.push(this._lastTokenEndIndex);\n            this._binaryTokens.push(metadata);\n            this._lastTokenEndIndex = endIndex;\n            return;\n        }\n        const scopes = scopesList?.getScopeNames() ?? [];\n        this._tokens.push({\n            startIndex: this._lastTokenEndIndex,\n            endIndex: endIndex,\n            // value: lineText.substring(lastTokenEndIndex, endIndex),\n            scopes: scopes\n        });\n        this._lastTokenEndIndex = endIndex;\n    }\n    getResult(stack, lineLength) {\n        if (this._tokens.length > 0 && this._tokens[this._tokens.length - 1].startIndex === lineLength - 1) {\n            // pop produced token for newline\n            this._tokens.pop();\n        }\n        if (this._tokens.length === 0) {\n            this._lastTokenEndIndex = -1;\n            this.produce(stack, lineLength);\n            this._tokens[this._tokens.length - 1].startIndex = 0;\n        }\n        return this._tokens;\n    }\n    getBinaryResult(stack, lineLength) {\n        if (this._binaryTokens.length > 0 && this._binaryTokens[this._binaryTokens.length - 2] === lineLength - 1) {\n            // pop produced token for newline\n            this._binaryTokens.pop();\n            this._binaryTokens.pop();\n        }\n        if (this._binaryTokens.length === 0) {\n            this._lastTokenEndIndex = -1;\n            this.produce(stack, lineLength);\n            this._binaryTokens[this._binaryTokens.length - 2] = 0;\n        }\n        const result = new Uint32Array(this._binaryTokens.length);\n        for (let i = 0, len = this._binaryTokens.length; i < len; i++) {\n            result[i] = this._binaryTokens[i];\n        }\n        return result;\n    }\n}\n\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nclass SyncRegistry {\n    _onigLibPromise;\n    _grammars = new Map();\n    _rawGrammars = new Map();\n    _injectionGrammars = new Map();\n    _theme;\n    constructor(theme, _onigLibPromise) {\n        this._onigLibPromise = _onigLibPromise;\n        this._theme = theme;\n    }\n    dispose() {\n        for (const grammar of this._grammars.values()) {\n            grammar.dispose();\n        }\n    }\n    setTheme(theme) {\n        this._theme = theme;\n    }\n    getColorMap() {\n        return this._theme.getColorMap();\n    }\n    /**\n     * Add `grammar` to registry and return a list of referenced scope names\n     */\n    addGrammar(grammar, injectionScopeNames) {\n        this._rawGrammars.set(grammar.scopeName, grammar);\n        if (injectionScopeNames) {\n            this._injectionGrammars.set(grammar.scopeName, injectionScopeNames);\n        }\n    }\n    /**\n     * Lookup a raw grammar.\n     */\n    lookup(scopeName) {\n        return this._rawGrammars.get(scopeName);\n    }\n    /**\n     * Returns the injections for the given grammar\n     */\n    injections(targetScope) {\n        return this._injectionGrammars.get(targetScope);\n    }\n    /**\n     * Get the default theme settings\n     */\n    getDefaults() {\n        return this._theme.getDefaults();\n    }\n    /**\n     * Match a scope in the theme.\n     */\n    themeMatch(scopePath) {\n        return this._theme.match(scopePath);\n    }\n    /**\n     * Lookup a grammar.\n     */\n    async grammarForScopeName(scopeName, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors) {\n        if (!this._grammars.has(scopeName)) {\n            let rawGrammar = this._rawGrammars.get(scopeName);\n            if (!rawGrammar) {\n                return null;\n            }\n            this._grammars.set(scopeName, createGrammar(scopeName, rawGrammar, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors, this, await this._onigLibPromise));\n        }\n        return this._grammars.get(scopeName);\n    }\n}\n\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\n/**\n * The registry that will hold all grammars.\n */\nlet Registry$1 = class Registry {\n    _options;\n    _syncRegistry;\n    _ensureGrammarCache;\n    constructor(options) {\n        this._options = options;\n        this._syncRegistry = new SyncRegistry(Theme.createFromRawTheme(options.theme, options.colorMap), options.onigLib);\n        this._ensureGrammarCache = new Map();\n    }\n    dispose() {\n        this._syncRegistry.dispose();\n    }\n    /**\n     * Change the theme. Once called, no previous `ruleStack` should be used anymore.\n     */\n    setTheme(theme, colorMap) {\n        this._syncRegistry.setTheme(Theme.createFromRawTheme(theme, colorMap));\n    }\n    /**\n     * Returns a lookup array for color ids.\n     */\n    getColorMap() {\n        return this._syncRegistry.getColorMap();\n    }\n    /**\n     * Load the grammar for `scopeName` and all referenced included grammars asynchronously.\n     * Please do not use language id 0.\n     */\n    loadGrammarWithEmbeddedLanguages(initialScopeName, initialLanguage, embeddedLanguages) {\n        return this.loadGrammarWithConfiguration(initialScopeName, initialLanguage, { embeddedLanguages });\n    }\n    /**\n     * Load the grammar for `scopeName` and all referenced included grammars asynchronously.\n     * Please do not use language id 0.\n     */\n    loadGrammarWithConfiguration(initialScopeName, initialLanguage, configuration) {\n        return this._loadGrammar(initialScopeName, initialLanguage, configuration.embeddedLanguages, configuration.tokenTypes, new BalancedBracketSelectors(configuration.balancedBracketSelectors || [], configuration.unbalancedBracketSelectors || []));\n    }\n    /**\n     * Load the grammar for `scopeName` and all referenced included grammars asynchronously.\n     */\n    loadGrammar(initialScopeName) {\n        return this._loadGrammar(initialScopeName, 0, null, null, null);\n    }\n    async _loadGrammar(initialScopeName, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors) {\n        const dependencyProcessor = new ScopeDependencyProcessor(this._syncRegistry, initialScopeName);\n        while (dependencyProcessor.Q.length > 0) {\n            await Promise.all(dependencyProcessor.Q.map((request) => this._loadSingleGrammar(request.scopeName)));\n            dependencyProcessor.processQueue();\n        }\n        return this._grammarForScopeName(initialScopeName, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors);\n    }\n    async _loadSingleGrammar(scopeName) {\n        if (!this._ensureGrammarCache.has(scopeName)) {\n            this._ensureGrammarCache.set(scopeName, this._doLoadSingleGrammar(scopeName));\n        }\n        return this._ensureGrammarCache.get(scopeName);\n    }\n    async _doLoadSingleGrammar(scopeName) {\n        const grammar = await this._options.loadGrammar(scopeName);\n        if (grammar) {\n            const injections = typeof this._options.getInjections === \"function\" ? this._options.getInjections(scopeName) : undefined;\n            this._syncRegistry.addGrammar(grammar, injections);\n        }\n    }\n    /**\n     * Adds a rawGrammar.\n     */\n    async addGrammar(rawGrammar, injections = [], initialLanguage = 0, embeddedLanguages = null) {\n        this._syncRegistry.addGrammar(rawGrammar, injections);\n        return (await this._grammarForScopeName(rawGrammar.scopeName, initialLanguage, embeddedLanguages));\n    }\n    /**\n     * Get the grammar for `scopeName`. The grammar must first be created via `loadGrammar` or `addGrammar`.\n     */\n    _grammarForScopeName(scopeName, initialLanguage = 0, embeddedLanguages = null, tokenTypes = null, balancedBracketSelectors = null) {\n        return this._syncRegistry.grammarForScopeName(scopeName, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors);\n    }\n};\nconst INITIAL = StateStackImpl.NULL;\n\n/**\n * Helpers to manage the \"collapsed\" metadata of an entire StackElement stack.\n * The following assumptions have been made:\n *  - languageId < 256 => needs 8 bits\n *  - unique color count < 512 => needs 9 bits\n *\n * The binary format is:\n * - -------------------------------------------\n *     3322 2222 2222 1111 1111 1100 0000 0000\n *     1098 7654 3210 9876 5432 1098 7654 3210\n * - -------------------------------------------\n *     xxxx xxxx xxxx xxxx xxxx xxxx xxxx xxxx\n *     bbbb bbbb bfff ffff ffFF FTTT LLLL LLLL\n * - -------------------------------------------\n *  - L = LanguageId (8 bits)\n *  - T = StandardTokenType (3 bits)\n *  - F = FontStyle (3 bits)\n *  - f = foreground color (9 bits)\n *  - b = background color (9 bits)\n */\nconst MetadataConsts = {\n    LANGUAGEID_MASK: 0b00000000000000000000000011111111,\n    TOKEN_TYPE_MASK: 0b00000000000000000000001100000000,\n    BALANCED_BRACKETS_MASK: 0b00000000000000000000010000000000,\n    FONT_STYLE_MASK: 0b00000000000000000011100000000000,\n    FOREGROUND_MASK: 0b00000000011111111100000000000000,\n    BACKGROUND_MASK: 0b11111111100000000000000000000000,\n    LANGUAGEID_OFFSET: 0,\n    TOKEN_TYPE_OFFSET: 8,\n    BALANCED_BRACKETS_OFFSET: 10,\n    FONT_STYLE_OFFSET: 11,\n    FOREGROUND_OFFSET: 15,\n    BACKGROUND_OFFSET: 24,\n};\nclass StackElementMetadata {\n    static toBinaryStr(metadata) {\n        let r = metadata.toString(2);\n        while (r.length < 32)\n            r = `0${r}`;\n        return r;\n    }\n    // public static printMetadata(metadata: number): void {\n    //   const languageId = StackElementMetadata.getLanguageId(metadata)\n    //   const tokenType = StackElementMetadata.getTokenType(metadata)\n    //   const fontStyle = StackElementMetadata.getFontStyle(metadata)\n    //   const foreground = StackElementMetadata.getForeground(metadata)\n    //   const background = StackElementMetadata.getBackground(metadata)\n    //   console.log({\n    //     languageId,\n    //     tokenType,\n    //     fontStyle,\n    //     foreground,\n    //     background,\n    //   })\n    // }\n    static getLanguageId(metadata) {\n        return (metadata & MetadataConsts.LANGUAGEID_MASK) >>> MetadataConsts.LANGUAGEID_OFFSET;\n    }\n    static getTokenType(metadata) {\n        return (metadata & MetadataConsts.TOKEN_TYPE_MASK) >>> MetadataConsts.TOKEN_TYPE_OFFSET;\n    }\n    static getFontStyle(metadata) {\n        return (metadata & MetadataConsts.FONT_STYLE_MASK) >>> MetadataConsts.FONT_STYLE_OFFSET;\n    }\n    static getForeground(metadata) {\n        return (metadata & MetadataConsts.FOREGROUND_MASK) >>> MetadataConsts.FOREGROUND_OFFSET;\n    }\n    static getBackground(metadata) {\n        return (metadata & MetadataConsts.BACKGROUND_MASK) >>> MetadataConsts.BACKGROUND_OFFSET;\n    }\n    static containsBalancedBrackets(metadata) {\n        return (metadata & MetadataConsts.BALANCED_BRACKETS_MASK) !== 0;\n    }\n    static set(metadata, languageId, tokenType, fontStyle, foreground, background) {\n        let _languageId = StackElementMetadata.getLanguageId(metadata);\n        let _tokenType = StackElementMetadata.getTokenType(metadata);\n        let _fontStyle = StackElementMetadata.getFontStyle(metadata);\n        let _foreground = StackElementMetadata.getForeground(metadata);\n        let _background = StackElementMetadata.getBackground(metadata);\n        const _containsBalancedBracketsBit = StackElementMetadata.containsBalancedBrackets(metadata)\n            ? 1\n            : 0;\n        if (languageId !== 0)\n            _languageId = languageId;\n        if (tokenType !== 0 /* TemporaryStandardTokenType.Other */) {\n            _tokenType\n                = tokenType === 8 /* TemporaryStandardTokenType.MetaEmbedded */ ? 0 /* StandardTokenType.Other */ : tokenType;\n        }\n        if (fontStyle !== FontStyle.NotSet)\n            _fontStyle = fontStyle;\n        if (foreground !== 0)\n            _foreground = foreground;\n        if (background !== 0)\n            _background = background;\n        return (((_languageId << MetadataConsts.LANGUAGEID_OFFSET)\n            | (_tokenType << MetadataConsts.TOKEN_TYPE_OFFSET)\n            | (_fontStyle << MetadataConsts.FONT_STYLE_OFFSET)\n            | (_containsBalancedBracketsBit << MetadataConsts.BALANCED_BRACKETS_OFFSET)\n            | (_foreground << MetadataConsts.FOREGROUND_OFFSET)\n            | (_background << MetadataConsts.BACKGROUND_OFFSET))\n            >>> 0);\n    }\n}\n\nexport { INITIAL, Registry$1 as Registry, StackElementMetadata, Theme };\n","import { INITIAL, StackElementMetadata, Registry as Registry$1, Theme } from './textmate.mjs';\nimport { FontStyle } from './types.mjs';\n\nfunction toArray(x) {\n    return Array.isArray(x) ? x : [x];\n}\n/**\n * Slipt a string into lines, each line preserves the line ending.\n */\nfunction splitLines(code, preserveEnding = false) {\n    const parts = code.split(/(\\r?\\n)/g);\n    let index = 0;\n    const lines = [];\n    for (let i = 0; i < parts.length; i += 2) {\n        const line = preserveEnding\n            ? parts[i] + (parts[i + 1] || '')\n            : parts[i];\n        lines.push([line, index]);\n        index += parts[i].length;\n        index += parts[i + 1]?.length || 0;\n    }\n    return lines;\n}\n/**\n * Check if the language is plaintext that is ignored by Shiki.\n *\n * Hard-coded plain text languages: `plaintext`, `txt`, `text`, `plain`.\n */\nfunction isPlainLang(lang) {\n    return !lang || ['plaintext', 'txt', 'text', 'plain'].includes(lang);\n}\n/**\n * Check if the language is specially handled or bypassed by Shiki.\n *\n * Hard-coded languages: `ansi` and plaintexts like `plaintext`, `txt`, `text`, `plain`.\n */\nfunction isSpecialLang(lang) {\n    return lang === 'ansi' || isPlainLang(lang);\n}\n/**\n * Check if the theme is specially handled or bypassed by Shiki.\n *\n * Hard-coded themes: `none`.\n */\nfunction isNoneTheme(theme) {\n    return theme === 'none';\n}\n/**\n * Check if the theme is specially handled or bypassed by Shiki.\n *\n * Hard-coded themes: `none`.\n */\nfunction isSpecialTheme(theme) {\n    return isNoneTheme(theme);\n}\n/**\n * Utility to append class to a hast node\n *\n * If the `property.class` is a string, it will be splitted by space and converted to an array.\n */\nfunction addClassToHast(node, className) {\n    if (!className)\n        return node;\n    node.properties ||= {};\n    node.properties.class ||= [];\n    if (typeof node.properties.class === 'string')\n        node.properties.class = node.properties.class.split(/\\s+/g);\n    if (!Array.isArray(node.properties.class))\n        node.properties.class = [];\n    const targets = Array.isArray(className) ? className : className.split(/\\s+/g);\n    for (const c of targets) {\n        if (c && !node.properties.class.includes(c))\n            node.properties.class.push(c);\n    }\n    return node;\n}\n/**\n * Split a token into multiple tokens by given offsets.\n *\n * The offsets are relative to the token, and should be sorted.\n */\nfunction splitToken(token, offsets) {\n    let lastOffset = 0;\n    const tokens = [];\n    for (const offset of offsets) {\n        if (offset > lastOffset) {\n            tokens.push({\n                ...token,\n                content: token.content.slice(lastOffset, offset),\n                offset: token.offset + lastOffset,\n            });\n        }\n        lastOffset = offset;\n    }\n    if (lastOffset < token.content.length) {\n        tokens.push({\n            ...token,\n            content: token.content.slice(lastOffset),\n            offset: token.offset + lastOffset,\n        });\n    }\n    return tokens;\n}\n/**\n * Split 2D tokens array by given breakpoints.\n */\nfunction splitTokens(tokens, breakpoints) {\n    const sorted = Array.from(breakpoints instanceof Set ? breakpoints : new Set(breakpoints))\n        .sort((a, b) => a - b);\n    if (!sorted.length)\n        return tokens;\n    return tokens.map((line) => {\n        return line.flatMap((token) => {\n            const breakpointsInToken = sorted\n                .filter(i => token.offset < i && i < token.offset + token.content.length)\n                .map(i => i - token.offset)\n                .sort((a, b) => a - b);\n            if (!breakpointsInToken.length)\n                return token;\n            return splitToken(token, breakpointsInToken);\n        });\n    });\n}\nfunction resolveColorReplacements(theme, options) {\n    const replacements = typeof theme === 'string' ? {} : { ...theme.colorReplacements };\n    const themeName = typeof theme === 'string' ? theme : theme.name;\n    for (const [key, value] of Object.entries(options?.colorReplacements || {})) {\n        if (typeof value === 'string')\n            replacements[key] = value;\n        else if (key === themeName)\n            Object.assign(replacements, value);\n    }\n    return replacements;\n}\nfunction applyColorReplacements(color, replacements) {\n    if (!color)\n        return color;\n    return replacements?.[color?.toLowerCase()] || color;\n}\nfunction getTokenStyleObject(token) {\n    const styles = {};\n    if (token.color)\n        styles.color = token.color;\n    if (token.bgColor)\n        styles['background-color'] = token.bgColor;\n    if (token.fontStyle) {\n        if (token.fontStyle & FontStyle.Italic)\n            styles['font-style'] = 'italic';\n        if (token.fontStyle & FontStyle.Bold)\n            styles['font-weight'] = 'bold';\n        if (token.fontStyle & FontStyle.Underline)\n            styles['text-decoration'] = 'underline';\n    }\n    return styles;\n}\nfunction stringifyTokenStyle(token) {\n    return Object.entries(token).map(([key, value]) => `${key}:${value}`).join(';');\n}\n/**\n * Creates a converter between index and position in a code block.\n */\nfunction createPositionConverter(code) {\n    const lines = splitLines(code, true).map(([line]) => line);\n    function indexToPos(index) {\n        let character = index;\n        let line = 0;\n        for (const lineText of lines) {\n            if (character < lineText.length)\n                break;\n            character -= lineText.length;\n            line++;\n        }\n        return { line, character };\n    }\n    function posToIndex(line, character) {\n        let index = 0;\n        for (let i = 0; i < line; i++)\n            index += lines[i].length;\n        index += character;\n        return index;\n    }\n    return {\n        lines,\n        indexToPos,\n        posToIndex,\n    };\n}\n\n// src/colors.ts\nvar namedColors = [\n  \"black\",\n  \"red\",\n  \"green\",\n  \"yellow\",\n  \"blue\",\n  \"magenta\",\n  \"cyan\",\n  \"white\",\n  \"brightBlack\",\n  \"brightRed\",\n  \"brightGreen\",\n  \"brightYellow\",\n  \"brightBlue\",\n  \"brightMagenta\",\n  \"brightCyan\",\n  \"brightWhite\"\n];\n\n// src/decorations.ts\nvar decorations = {\n  1: \"bold\",\n  2: \"dim\",\n  3: \"italic\",\n  4: \"underline\",\n  7: \"reverse\",\n  9: \"strikethrough\"\n};\n\n// src/parser.ts\nfunction findSequence(value, position) {\n  const nextEscape = value.indexOf(\"\\x1B[\", position);\n  if (nextEscape !== -1) {\n    const nextClose = value.indexOf(\"m\", nextEscape);\n    return {\n      sequence: value.substring(nextEscape + 2, nextClose).split(\";\"),\n      startPosition: nextEscape,\n      position: nextClose + 1\n    };\n  }\n  return {\n    position: value.length\n  };\n}\nfunction parseColor(sequence, index) {\n  let offset = 1;\n  const colorMode = sequence[index + offset++];\n  let color;\n  if (colorMode === \"2\") {\n    const rgb = [\n      sequence[index + offset++],\n      sequence[index + offset++],\n      sequence[index + offset]\n    ].map((x) => Number.parseInt(x));\n    if (rgb.length === 3 && !rgb.some((x) => Number.isNaN(x))) {\n      color = {\n        type: \"rgb\",\n        rgb\n      };\n    }\n  } else if (colorMode === \"5\") {\n    const colorIndex = Number.parseInt(sequence[index + offset]);\n    if (!Number.isNaN(colorIndex)) {\n      color = { type: \"table\", index: Number(colorIndex) };\n    }\n  }\n  return [offset, color];\n}\nfunction parseSequence(sequence) {\n  const commands = [];\n  for (let i = 0; i < sequence.length; i++) {\n    const code = sequence[i];\n    const codeInt = Number.parseInt(code);\n    if (Number.isNaN(codeInt))\n      continue;\n    if (codeInt === 0) {\n      commands.push({ type: \"resetAll\" });\n    } else if (codeInt <= 9) {\n      const decoration = decorations[codeInt];\n      if (decoration) {\n        commands.push({\n          type: \"setDecoration\",\n          value: decorations[codeInt]\n        });\n      }\n    } else if (codeInt <= 29) {\n      const decoration = decorations[codeInt - 20];\n      if (decoration) {\n        commands.push({\n          type: \"resetDecoration\",\n          value: decoration\n        });\n      }\n    } else if (codeInt <= 37) {\n      commands.push({\n        type: \"setForegroundColor\",\n        value: { type: \"named\", name: namedColors[codeInt - 30] }\n      });\n    } else if (codeInt === 38) {\n      const [offset, color] = parseColor(sequence, i);\n      if (color) {\n        commands.push({\n          type: \"setForegroundColor\",\n          value: color\n        });\n      }\n      i += offset;\n    } else if (codeInt === 39) {\n      commands.push({\n        type: \"resetForegroundColor\"\n      });\n    } else if (codeInt <= 47) {\n      commands.push({\n        type: \"setBackgroundColor\",\n        value: { type: \"named\", name: namedColors[codeInt - 40] }\n      });\n    } else if (codeInt === 48) {\n      const [offset, color] = parseColor(sequence, i);\n      if (color) {\n        commands.push({\n          type: \"setBackgroundColor\",\n          value: color\n        });\n      }\n      i += offset;\n    } else if (codeInt === 49) {\n      commands.push({\n        type: \"resetBackgroundColor\"\n      });\n    } else if (codeInt >= 90 && codeInt <= 97) {\n      commands.push({\n        type: \"setForegroundColor\",\n        value: { type: \"named\", name: namedColors[codeInt - 90 + 8] }\n      });\n    } else if (codeInt >= 100 && codeInt <= 107) {\n      commands.push({\n        type: \"setBackgroundColor\",\n        value: { type: \"named\", name: namedColors[codeInt - 100 + 8] }\n      });\n    }\n  }\n  return commands;\n}\nfunction createAnsiSequenceParser() {\n  let foreground = null;\n  let background = null;\n  let decorations2 = /* @__PURE__ */ new Set();\n  return {\n    parse(value) {\n      const tokens = [];\n      let position = 0;\n      do {\n        const findResult = findSequence(value, position);\n        const text = findResult.sequence ? value.substring(position, findResult.startPosition) : value.substring(position);\n        if (text.length > 0) {\n          tokens.push({\n            value: text,\n            foreground,\n            background,\n            decorations: new Set(decorations2)\n          });\n        }\n        if (findResult.sequence) {\n          const commands = parseSequence(findResult.sequence);\n          for (const styleToken of commands) {\n            if (styleToken.type === \"resetAll\") {\n              foreground = null;\n              background = null;\n              decorations2.clear();\n            } else if (styleToken.type === \"resetForegroundColor\") {\n              foreground = null;\n            } else if (styleToken.type === \"resetBackgroundColor\") {\n              background = null;\n            } else if (styleToken.type === \"resetDecoration\") {\n              decorations2.delete(styleToken.value);\n            }\n          }\n          for (const styleToken of commands) {\n            if (styleToken.type === \"setForegroundColor\") {\n              foreground = styleToken.value;\n            } else if (styleToken.type === \"setBackgroundColor\") {\n              background = styleToken.value;\n            } else if (styleToken.type === \"setDecoration\") {\n              decorations2.add(styleToken.value);\n            }\n          }\n        }\n        position = findResult.position;\n      } while (position < value.length);\n      return tokens;\n    }\n  };\n}\n\n// src/palette.ts\nvar defaultNamedColorsMap = {\n  black: \"#000000\",\n  red: \"#bb0000\",\n  green: \"#00bb00\",\n  yellow: \"#bbbb00\",\n  blue: \"#0000bb\",\n  magenta: \"#ff00ff\",\n  cyan: \"#00bbbb\",\n  white: \"#eeeeee\",\n  brightBlack: \"#555555\",\n  brightRed: \"#ff5555\",\n  brightGreen: \"#00ff00\",\n  brightYellow: \"#ffff55\",\n  brightBlue: \"#5555ff\",\n  brightMagenta: \"#ff55ff\",\n  brightCyan: \"#55ffff\",\n  brightWhite: \"#ffffff\"\n};\nfunction createColorPalette(namedColorsMap = defaultNamedColorsMap) {\n  function namedColor(name) {\n    return namedColorsMap[name];\n  }\n  function rgbColor(rgb) {\n    return `#${rgb.map((x) => Math.max(0, Math.min(x, 255)).toString(16).padStart(2, \"0\")).join(\"\")}`;\n  }\n  let colorTable;\n  function getColorTable() {\n    if (colorTable) {\n      return colorTable;\n    }\n    colorTable = [];\n    for (let i = 0; i < namedColors.length; i++) {\n      colorTable.push(namedColor(namedColors[i]));\n    }\n    let levels = [0, 95, 135, 175, 215, 255];\n    for (let r = 0; r < 6; r++) {\n      for (let g = 0; g < 6; g++) {\n        for (let b = 0; b < 6; b++) {\n          colorTable.push(rgbColor([levels[r], levels[g], levels[b]]));\n        }\n      }\n    }\n    let level = 8;\n    for (let i = 0; i < 24; i++, level += 10) {\n      colorTable.push(rgbColor([level, level, level]));\n    }\n    return colorTable;\n  }\n  function tableColor(index) {\n    return getColorTable()[index];\n  }\n  function value(color) {\n    switch (color.type) {\n      case \"named\":\n        return namedColor(color.name);\n      case \"rgb\":\n        return rgbColor(color.rgb);\n      case \"table\":\n        return tableColor(color.index);\n    }\n  }\n  return {\n    value\n  };\n}\n\nfunction tokenizeAnsiWithTheme(theme, fileContents, options) {\n    const colorReplacements = resolveColorReplacements(theme, options);\n    const lines = splitLines(fileContents);\n    const colorPalette = createColorPalette(Object.fromEntries(namedColors.map(name => [\n        name,\n        theme.colors?.[`terminal.ansi${name[0].toUpperCase()}${name.substring(1)}`],\n    ])));\n    const parser = createAnsiSequenceParser();\n    return lines.map(line => parser.parse(line[0]).map((token) => {\n        let color;\n        let bgColor;\n        if (token.decorations.has('reverse')) {\n            color = token.background ? colorPalette.value(token.background) : theme.bg;\n            bgColor = token.foreground ? colorPalette.value(token.foreground) : theme.fg;\n        }\n        else {\n            color = token.foreground ? colorPalette.value(token.foreground) : theme.fg;\n            bgColor = token.background ? colorPalette.value(token.background) : undefined;\n        }\n        color = applyColorReplacements(color, colorReplacements);\n        bgColor = applyColorReplacements(bgColor, colorReplacements);\n        if (token.decorations.has('dim'))\n            color = dimColor(color);\n        let fontStyle = FontStyle.None;\n        if (token.decorations.has('bold'))\n            fontStyle |= FontStyle.Bold;\n        if (token.decorations.has('italic'))\n            fontStyle |= FontStyle.Italic;\n        if (token.decorations.has('underline'))\n            fontStyle |= FontStyle.Underline;\n        return {\n            content: token.value,\n            offset: line[1], // TODO: more accurate offset? might need to fork ansi-sequence-parser\n            color,\n            bgColor,\n            fontStyle,\n        };\n    }));\n}\n/**\n * Adds 50% alpha to a hex color string or the \"-dim\" postfix to a CSS variable\n */\nfunction dimColor(color) {\n    const hexMatch = color.match(/#([0-9a-f]{3})([0-9a-f]{3})?([0-9a-f]{2})?/);\n    if (hexMatch) {\n        if (hexMatch[3]) {\n            // convert from #rrggbbaa to #rrggbb(aa/2)\n            const alpha = Math.round(Number.parseInt(hexMatch[3], 16) / 2)\n                .toString(16)\n                .padStart(2, '0');\n            return `#${hexMatch[1]}${hexMatch[2]}${alpha}`;\n        }\n        else if (hexMatch[2]) {\n            // convert from #rrggbb to #rrggbb80\n            return `#${hexMatch[1]}${hexMatch[2]}80`;\n        }\n        else {\n            // convert from #rgb to #rrggbb80\n            return `#${Array.from(hexMatch[1])\n                .map(x => `${x}${x}`)\n                .join('')}80`;\n        }\n    }\n    const cssVarMatch = color.match(/var\\((--[\\w-]+-ansi-[\\w-]+)\\)/);\n    if (cssVarMatch)\n        return `var(${cssVarMatch[1]}-dim)`;\n    return color;\n}\n\nclass ShikiError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = 'ShikiError';\n    }\n}\n\n/**\n * GrammarState is a special reference object that holds the state of a grammar.\n *\n * It's used to highlight code snippets that are part of the target language.\n */\nclass GrammarState {\n    _stack;\n    lang;\n    theme;\n    constructor(_stack, lang, theme) {\n        this._stack = _stack;\n        this.lang = lang;\n        this.theme = theme;\n    }\n    get scopes() {\n        return getScopes(this._stack);\n    }\n    toJSON() {\n        return {\n            lang: this.lang,\n            theme: this.theme,\n            scopes: this.scopes,\n        };\n    }\n}\nfunction getScopes(stack) {\n    const scopes = [];\n    const visited = new Set();\n    function pushScope(stack) {\n        if (visited.has(stack))\n            return;\n        visited.add(stack);\n        const name = stack?.nameScopesList?.scopeName;\n        if (name)\n            scopes.push(name);\n        if (stack.parent)\n            pushScope(stack.parent);\n    }\n    pushScope(stack);\n    return scopes;\n}\nfunction getGrammarStack(state) {\n    if (!(state instanceof GrammarState))\n        throw new ShikiError('Invalid grammar state');\n    // @ts-expect-error _stack is private\n    return state._stack;\n}\n\n/**\n * Code to tokens, with a simple theme.\n */\nfunction codeToTokensBase(internal, code, options = {}) {\n    const { lang = 'text', theme: themeName = internal.getLoadedThemes()[0], } = options;\n    if (isPlainLang(lang) || isNoneTheme(themeName))\n        return splitLines(code).map(line => [{ content: line[0], offset: line[1] }]);\n    const { theme, colorMap } = internal.setTheme(themeName);\n    if (lang === 'ansi')\n        return tokenizeAnsiWithTheme(theme, code, options);\n    const _grammar = internal.getLanguage(lang);\n    if (options.grammarState) {\n        if (options.grammarState.lang !== _grammar.name) {\n            throw new ShikiError(`Grammar state language \"${options.grammarState.lang}\" does not match highlight language \"${_grammar.name}\"`);\n        }\n        if (options.grammarState.theme !== themeName) {\n            throw new ShikiError(`Grammar state theme \"${options.grammarState.theme}\" does not match highlight theme \"${themeName}\"`);\n        }\n    }\n    return tokenizeWithTheme(code, _grammar, theme, colorMap, options);\n}\nfunction getLastGrammarState(internal, code, options = {}) {\n    const { lang = 'text', theme: themeName = internal.getLoadedThemes()[0], } = options;\n    if (isPlainLang(lang) || isNoneTheme(themeName))\n        throw new ShikiError('Plain language does not have grammar state');\n    if (lang === 'ansi')\n        throw new ShikiError('ANSI language does not have grammar state');\n    const { theme, colorMap } = internal.setTheme(themeName);\n    const _grammar = internal.getLanguage(lang);\n    return new GrammarState(_tokenizeWithTheme(code, _grammar, theme, colorMap, options).stateStack, _grammar.name, theme.name);\n}\nfunction tokenizeWithTheme(code, grammar, theme, colorMap, options) {\n    return _tokenizeWithTheme(code, grammar, theme, colorMap, options).tokens;\n}\nfunction _tokenizeWithTheme(code, grammar, theme, colorMap, options) {\n    const colorReplacements = resolveColorReplacements(theme, options);\n    const { tokenizeMaxLineLength = 0, tokenizeTimeLimit = 500, } = options;\n    const lines = splitLines(code);\n    let stateStack = options.grammarState\n        ? getGrammarStack(options.grammarState)\n        : options.grammarContextCode != null\n            ? _tokenizeWithTheme(options.grammarContextCode, grammar, theme, colorMap, {\n                ...options,\n                grammarState: undefined,\n                grammarContextCode: undefined,\n            }).stateStack\n            : INITIAL;\n    let actual = [];\n    const final = [];\n    const themeSettingsSelectors = [];\n    if (options.includeExplanation) {\n        for (const setting of theme.settings) {\n            let selectors;\n            switch (typeof setting.scope) {\n                case 'string':\n                    selectors = setting.scope.split(/,/).map(scope => scope.trim());\n                    break;\n                case 'object':\n                    selectors = setting.scope;\n                    break;\n                default:\n                    continue;\n            }\n            themeSettingsSelectors.push({\n                settings: setting,\n                selectors: selectors.map(selector => selector.split(/ /)),\n            });\n        }\n    }\n    for (let i = 0, len = lines.length; i < len; i++) {\n        const [line, lineOffset] = lines[i];\n        if (line === '') {\n            actual = [];\n            final.push([]);\n            continue;\n        }\n        // Do not attempt to tokenize if the line length is longer than the `tokenizationMaxLineLength`\n        if (tokenizeMaxLineLength > 0 && line.length >= tokenizeMaxLineLength) {\n            actual = [];\n            final.push([{\n                    content: line,\n                    offset: lineOffset,\n                    color: '',\n                    fontStyle: 0,\n                }]);\n            continue;\n        }\n        let resultWithScopes;\n        let tokensWithScopes;\n        let tokensWithScopesIndex;\n        if (options.includeExplanation) {\n            resultWithScopes = grammar.tokenizeLine(line, stateStack);\n            tokensWithScopes = resultWithScopes.tokens;\n            tokensWithScopesIndex = 0;\n        }\n        const result = grammar.tokenizeLine2(line, stateStack, tokenizeTimeLimit);\n        const tokensLength = result.tokens.length / 2;\n        for (let j = 0; j < tokensLength; j++) {\n            const startIndex = result.tokens[2 * j];\n            const nextStartIndex = j + 1 < tokensLength ? result.tokens[2 * j + 2] : line.length;\n            if (startIndex === nextStartIndex)\n                continue;\n            const metadata = result.tokens[2 * j + 1];\n            const color = applyColorReplacements(colorMap[StackElementMetadata.getForeground(metadata)], colorReplacements);\n            const fontStyle = StackElementMetadata.getFontStyle(metadata);\n            const token = {\n                content: line.substring(startIndex, nextStartIndex),\n                offset: lineOffset + startIndex,\n                color,\n                fontStyle,\n            };\n            if (options.includeExplanation) {\n                token.explanation = [];\n                let offset = 0;\n                while (startIndex + offset < nextStartIndex) {\n                    const tokenWithScopes = tokensWithScopes[tokensWithScopesIndex];\n                    const tokenWithScopesText = line.substring(tokenWithScopes.startIndex, tokenWithScopes.endIndex);\n                    offset += tokenWithScopesText.length;\n                    token.explanation.push({\n                        content: tokenWithScopesText,\n                        scopes: explainThemeScopes(themeSettingsSelectors, tokenWithScopes.scopes),\n                    });\n                    tokensWithScopesIndex += 1;\n                }\n            }\n            actual.push(token);\n        }\n        final.push(actual);\n        actual = [];\n        stateStack = result.ruleStack;\n    }\n    return {\n        tokens: final,\n        stateStack,\n    };\n}\nfunction explainThemeScopes(themeSelectors, scopes) {\n    const result = [];\n    for (let i = 0, len = scopes.length; i < len; i++) {\n        const parentScopes = scopes.slice(0, i);\n        const scope = scopes[i];\n        result[i] = {\n            scopeName: scope,\n            themeMatches: explainThemeScope(themeSelectors, scope, parentScopes),\n        };\n    }\n    return result;\n}\nfunction matchesOne(selector, scope) {\n    return selector === scope\n        || (scope.substring(0, selector.length) === selector && scope[selector.length] === '.');\n}\nfunction matches(selectors, scope, parentScopes) {\n    if (!matchesOne(selectors[selectors.length - 1], scope))\n        return false;\n    let selectorParentIndex = selectors.length - 2;\n    let parentIndex = parentScopes.length - 1;\n    while (selectorParentIndex >= 0 && parentIndex >= 0) {\n        if (matchesOne(selectors[selectorParentIndex], parentScopes[parentIndex]))\n            selectorParentIndex -= 1;\n        parentIndex -= 1;\n    }\n    if (selectorParentIndex === -1)\n        return true;\n    return false;\n}\nfunction explainThemeScope(themeSettingsSelectors, scope, parentScopes) {\n    const result = [];\n    for (const { selectors, settings } of themeSettingsSelectors) {\n        for (const selectorPieces of selectors) {\n            if (matches(selectorPieces, scope, parentScopes)) {\n                result.push(settings);\n                break; // continue to the next theme settings\n            }\n        }\n    }\n    return result;\n}\n\n/**\n * Get tokens with multiple themes\n */\nfunction codeToTokensWithThemes(internal, code, options) {\n    const themes = Object.entries(options.themes)\n        .filter(i => i[1])\n        .map(i => ({ color: i[0], theme: i[1] }));\n    const tokens = syncThemesTokenization(...themes.map(t => codeToTokensBase(internal, code, {\n        ...options,\n        theme: t.theme,\n    })));\n    const mergedTokens = tokens[0]\n        .map((line, lineIdx) => line\n        .map((_token, tokenIdx) => {\n        const mergedToken = {\n            content: _token.content,\n            variants: {},\n            offset: _token.offset,\n        };\n        if ('includeExplanation' in options && options.includeExplanation) {\n            mergedToken.explanation = _token.explanation;\n        }\n        tokens.forEach((t, themeIdx) => {\n            const { content: _, explanation: __, offset: ___, ...styles } = t[lineIdx][tokenIdx];\n            mergedToken.variants[themes[themeIdx].color] = styles;\n        });\n        return mergedToken;\n    }));\n    return mergedTokens;\n}\n/**\n * Break tokens from multiple themes into same tokenization.\n *\n * For example, given two themes that tokenize `console.log(\"hello\")` as:\n *\n * - `console . log (\" hello \")` (6 tokens)\n * - `console .log ( \"hello\" )` (5 tokens)\n *\n * This function will return:\n *\n * - `console . log ( \" hello \" )` (8 tokens)\n * - `console . log ( \" hello \" )` (8 tokens)\n */\nfunction syncThemesTokenization(...themes) {\n    const outThemes = themes.map(() => []);\n    const count = themes.length;\n    for (let i = 0; i < themes[0].length; i++) {\n        const lines = themes.map(t => t[i]);\n        const outLines = outThemes.map(() => []);\n        outThemes.forEach((t, i) => t.push(outLines[i]));\n        const indexes = lines.map(() => 0);\n        const current = lines.map(l => l[0]);\n        while (current.every(t => t)) {\n            const minLength = Math.min(...current.map(t => t.content.length));\n            for (let n = 0; n < count; n++) {\n                const token = current[n];\n                if (token.content.length === minLength) {\n                    outLines[n].push(token);\n                    indexes[n] += 1;\n                    current[n] = lines[n][indexes[n]];\n                }\n                else {\n                    outLines[n].push({\n                        ...token,\n                        content: token.content.slice(0, minLength),\n                    });\n                    current[n] = {\n                        ...token,\n                        content: token.content.slice(minLength),\n                        offset: token.offset + minLength,\n                    };\n                }\n            }\n        }\n    }\n    return outThemes;\n}\n\n/**\n * High-level code-to-tokens API.\n *\n * It will use `codeToTokensWithThemes` or `codeToTokensBase` based on the options.\n */\nfunction codeToTokens(internal, code, options) {\n    let bg;\n    let fg;\n    let tokens;\n    let themeName;\n    let rootStyle;\n    if ('themes' in options) {\n        const { defaultColor = 'light', cssVariablePrefix = '--shiki-', } = options;\n        const themes = Object.entries(options.themes)\n            .filter(i => i[1])\n            .map(i => ({ color: i[0], theme: i[1] }))\n            .sort((a, b) => a.color === defaultColor ? -1 : b.color === defaultColor ? 1 : 0);\n        if (themes.length === 0)\n            throw new ShikiError('`themes` option must not be empty');\n        const themeTokens = codeToTokensWithThemes(internal, code, options);\n        if (defaultColor && !themes.find(t => t.color === defaultColor))\n            throw new ShikiError(`\\`themes\\` option must contain the defaultColor key \\`${defaultColor}\\``);\n        const themeRegs = themes.map(t => internal.getTheme(t.theme));\n        const themesOrder = themes.map(t => t.color);\n        tokens = themeTokens\n            .map(line => line.map(token => mergeToken(token, themesOrder, cssVariablePrefix, defaultColor)));\n        const themeColorReplacements = themes.map(t => resolveColorReplacements(t.theme, options));\n        fg = themes.map((t, idx) => (idx === 0 && defaultColor\n            ? ''\n            : `${cssVariablePrefix + t.color}:`) + (applyColorReplacements(themeRegs[idx].fg, themeColorReplacements[idx]) || 'inherit')).join(';');\n        bg = themes.map((t, idx) => (idx === 0 && defaultColor\n            ? ''\n            : `${cssVariablePrefix + t.color}-bg:`) + (applyColorReplacements(themeRegs[idx].bg, themeColorReplacements[idx]) || 'inherit')).join(';');\n        themeName = `shiki-themes ${themeRegs.map(t => t.name).join(' ')}`;\n        rootStyle = defaultColor ? undefined : [fg, bg].join(';');\n    }\n    else if ('theme' in options) {\n        const colorReplacements = resolveColorReplacements(options.theme, options.colorReplacements);\n        tokens = codeToTokensBase(internal, code, options);\n        const _theme = internal.getTheme(options.theme);\n        bg = applyColorReplacements(_theme.bg, colorReplacements);\n        fg = applyColorReplacements(_theme.fg, colorReplacements);\n        themeName = _theme.name;\n    }\n    else {\n        throw new ShikiError('Invalid options, either `theme` or `themes` must be provided');\n    }\n    return {\n        tokens,\n        fg,\n        bg,\n        themeName,\n        rootStyle,\n    };\n}\nfunction mergeToken(merged, variantsOrder, cssVariablePrefix, defaultColor) {\n    const token = {\n        content: merged.content,\n        explanation: merged.explanation,\n        offset: merged.offset,\n    };\n    const styles = variantsOrder.map(t => getTokenStyleObject(merged.variants[t]));\n    // Get all style keys, for themes that missing some style, we put `inherit` to override as needed\n    const styleKeys = new Set(styles.flatMap(t => Object.keys(t)));\n    const mergedStyles = styles.reduce((acc, cur, idx) => {\n        for (const key of styleKeys) {\n            const value = cur[key] || 'inherit';\n            if (idx === 0 && defaultColor) {\n                acc[key] = value;\n            }\n            else {\n                const keyName = key === 'color' ? '' : key === 'background-color' ? '-bg' : `-${key}`;\n                const varKey = cssVariablePrefix + variantsOrder[idx] + (key === 'color' ? '' : keyName);\n                if (acc[key])\n                    acc[key] += `;${varKey}:${value}`;\n                else\n                    acc[key] = `${varKey}:${value}`;\n            }\n        }\n        return acc;\n    }, {});\n    token.htmlStyle = defaultColor\n        ? stringifyTokenStyle(mergedStyles)\n        : Object.values(mergedStyles).join(';');\n    return token;\n}\n\n/**\n * A built-in transformer to add decorations to the highlighted code.\n */\nfunction transformerDecorations() {\n    const map = new WeakMap();\n    function getContext(shiki) {\n        if (!map.has(shiki.meta)) {\n            const converter = createPositionConverter(shiki.source);\n            function normalizePosition(p) {\n                if (typeof p === 'number') {\n                    return {\n                        ...converter.indexToPos(p),\n                        offset: p,\n                    };\n                }\n                else {\n                    return {\n                        ...p,\n                        offset: converter.posToIndex(p.line, p.character),\n                    };\n                }\n            }\n            const decorations = (shiki.options.decorations || [])\n                .map((d) => ({\n                ...d,\n                start: normalizePosition(d.start),\n                end: normalizePosition(d.end),\n            }));\n            verifyIntersections(decorations);\n            map.set(shiki.meta, {\n                decorations,\n                converter,\n                source: shiki.source,\n            });\n        }\n        return map.get(shiki.meta);\n    }\n    function verifyIntersections(items) {\n        for (let i = 0; i < items.length; i++) {\n            const foo = items[i];\n            if (foo.start.offset > foo.end.offset)\n                throw new ShikiError(`Invalid decoration range: ${JSON.stringify(foo.start)} - ${JSON.stringify(foo.end)}`);\n            for (let j = i + 1; j < items.length; j++) {\n                const bar = items[j];\n                const isFooHasBarStart = foo.start.offset < bar.start.offset && bar.start.offset < foo.end.offset;\n                const isFooHasBarEnd = foo.start.offset < bar.end.offset && bar.end.offset < foo.end.offset;\n                const isBarHasFooStart = bar.start.offset < foo.start.offset && foo.start.offset < bar.end.offset;\n                const isBarHasFooEnd = bar.start.offset < foo.end.offset && foo.end.offset < bar.end.offset;\n                if (isFooHasBarStart || isFooHasBarEnd || isBarHasFooStart || isBarHasFooEnd) {\n                    if (isFooHasBarEnd && isFooHasBarEnd)\n                        continue; // nested\n                    if (isBarHasFooStart && isBarHasFooEnd)\n                        continue; // nested\n                    throw new ShikiError(`Decorations ${JSON.stringify(foo.start)} and ${JSON.stringify(bar.start)} intersect.`);\n                }\n            }\n        }\n    }\n    return {\n        name: 'shiki:decorations',\n        tokens(tokens) {\n            if (!this.options.decorations?.length)\n                return;\n            const ctx = getContext(this);\n            const breakpoints = ctx.decorations.flatMap(d => [d.start.offset, d.end.offset]);\n            const splitted = splitTokens(tokens, breakpoints);\n            return splitted;\n        },\n        code(codeEl) {\n            if (!this.options.decorations?.length)\n                return;\n            const ctx = getContext(this);\n            const lines = Array.from(codeEl.children).filter(i => i.type === 'element' && i.tagName === 'span');\n            if (lines.length !== ctx.converter.lines.length)\n                throw new ShikiError(`Number of lines in code element (${lines.length}) does not match the number of lines in the source (${ctx.converter.lines.length}). Failed to apply decorations.`);\n            function applyLineSection(line, start, end, decoration) {\n                const lineEl = lines[line];\n                let text = '';\n                let startIndex = -1;\n                let endIndex = -1;\n                function stringify(el) {\n                    if (el.type === 'text')\n                        return el.value;\n                    if (el.type === 'element')\n                        return el.children.map(stringify).join('');\n                    return '';\n                }\n                if (start === 0)\n                    startIndex = 0;\n                if (end === 0)\n                    endIndex = 0;\n                if (end === Number.POSITIVE_INFINITY)\n                    endIndex = lineEl.children.length;\n                if (startIndex === -1 || endIndex === -1) {\n                    for (let i = 0; i < lineEl.children.length; i++) {\n                        text += stringify(lineEl.children[i]);\n                        if (startIndex === -1 && text.length === start)\n                            startIndex = i + 1;\n                        if (endIndex === -1 && text.length === end)\n                            endIndex = i + 1;\n                    }\n                }\n                if (startIndex === -1)\n                    throw new ShikiError(`Failed to find start index for decoration ${JSON.stringify(decoration.start)}`);\n                if (endIndex === -1)\n                    throw new ShikiError(`Failed to find end index for decoration ${JSON.stringify(decoration.end)}`);\n                const children = lineEl.children.slice(startIndex, endIndex);\n                // Full line decoration\n                if (!decoration.alwaysWrap && children.length === lineEl.children.length) {\n                    applyDecoration(lineEl, decoration, 'line');\n                }\n                // Single token decoration\n                else if (!decoration.alwaysWrap && children.length === 1 && children[0].type === 'element') {\n                    applyDecoration(children[0], decoration, 'token');\n                }\n                // Create a wrapper for the decoration\n                else {\n                    const wrapper = {\n                        type: 'element',\n                        tagName: 'span',\n                        properties: {},\n                        children,\n                    };\n                    applyDecoration(wrapper, decoration, 'wrapper');\n                    lineEl.children.splice(startIndex, children.length, wrapper);\n                }\n            }\n            function applyLine(line, decoration) {\n                lines[line] = applyDecoration(lines[line], decoration, 'line');\n            }\n            function applyDecoration(el, decoration, type) {\n                const properties = decoration.properties || {};\n                const transform = decoration.transform || (i => i);\n                el.tagName = decoration.tagName || 'span';\n                el.properties = {\n                    ...el.properties,\n                    ...properties,\n                    class: el.properties.class,\n                };\n                if (decoration.properties?.class)\n                    addClassToHast(el, decoration.properties.class);\n                el = transform(el, type) || el;\n                return el;\n            }\n            const lineApplies = [];\n            // Apply decorations in reverse order so the nested ones get applied first.\n            const sorted = ctx.decorations.sort((a, b) => b.start.offset - a.start.offset);\n            for (const decoration of sorted) {\n                const { start, end } = decoration;\n                if (start.line === end.line) {\n                    applyLineSection(start.line, start.character, end.character, decoration);\n                }\n                else if (start.line < end.line) {\n                    applyLineSection(start.line, start.character, Number.POSITIVE_INFINITY, decoration);\n                    for (let i = start.line + 1; i < end.line; i++)\n                        lineApplies.unshift(() => applyLine(i, decoration));\n                    applyLineSection(end.line, 0, end.character, decoration);\n                }\n            }\n            lineApplies.forEach(i => i());\n        },\n    };\n}\n\nconst builtInTransformers = [\n    /* @__PURE__ */ transformerDecorations(),\n];\nfunction getTransformers(options) {\n    return [\n        ...options.transformers || [],\n        ...builtInTransformers,\n    ];\n}\n\nfunction codeToHast(internal, code, options, transformerContext = {\n    meta: {},\n    options,\n    codeToHast: (_code, _options) => codeToHast(internal, _code, _options),\n    codeToTokens: (_code, _options) => codeToTokens(internal, _code, _options),\n}) {\n    let input = code;\n    for (const transformer of getTransformers(options))\n        input = transformer.preprocess?.call(transformerContext, input, options) || input;\n    let { tokens, fg, bg, themeName, rootStyle, } = codeToTokens(internal, input, options);\n    const { mergeWhitespaces = true, } = options;\n    if (mergeWhitespaces === true)\n        tokens = mergeWhitespaceTokens(tokens);\n    else if (mergeWhitespaces === 'never')\n        tokens = splitWhitespaceTokens(tokens);\n    const contextSource = {\n        ...transformerContext,\n        get source() {\n            return input;\n        },\n    };\n    for (const transformer of getTransformers(options))\n        tokens = transformer.tokens?.call(contextSource, tokens) || tokens;\n    return tokensToHast(tokens, {\n        ...options,\n        fg,\n        bg,\n        themeName,\n        rootStyle,\n    }, contextSource);\n}\nfunction tokensToHast(tokens, options, transformerContext) {\n    const transformers = getTransformers(options);\n    const lines = [];\n    const root = {\n        type: 'root',\n        children: [],\n    };\n    const { structure = 'classic', } = options;\n    let preNode = {\n        type: 'element',\n        tagName: 'pre',\n        properties: {\n            class: `shiki ${options.themeName || ''}`,\n            style: options.rootStyle || `background-color:${options.bg};color:${options.fg}`,\n            tabindex: '0',\n            ...Object.fromEntries(Array.from(Object.entries(options.meta || {}))\n                .filter(([key]) => !key.startsWith('_'))),\n        },\n        children: [],\n    };\n    let codeNode = {\n        type: 'element',\n        tagName: 'code',\n        properties: {},\n        children: lines,\n    };\n    const lineNodes = [];\n    const context = {\n        ...transformerContext,\n        structure,\n        addClassToHast,\n        get source() {\n            return transformerContext.source;\n        },\n        get tokens() {\n            return tokens;\n        },\n        get options() {\n            return options;\n        },\n        get root() {\n            return root;\n        },\n        get pre() {\n            return preNode;\n        },\n        get code() {\n            return codeNode;\n        },\n        get lines() {\n            return lineNodes;\n        },\n    };\n    tokens.forEach((line, idx) => {\n        if (idx) {\n            if (structure === 'inline')\n                root.children.push({ type: 'element', tagName: 'br', properties: {}, children: [] });\n            else if (structure === 'classic')\n                lines.push({ type: 'text', value: '\\n' });\n        }\n        let lineNode = {\n            type: 'element',\n            tagName: 'span',\n            properties: { class: 'line' },\n            children: [],\n        };\n        let col = 0;\n        for (const token of line) {\n            let tokenNode = {\n                type: 'element',\n                tagName: 'span',\n                properties: {},\n                children: [{ type: 'text', value: token.content }],\n            };\n            const style = token.htmlStyle || stringifyTokenStyle(getTokenStyleObject(token));\n            if (style)\n                tokenNode.properties.style = style;\n            for (const transformer of transformers)\n                tokenNode = transformer?.span?.call(context, tokenNode, idx + 1, col, lineNode) || tokenNode;\n            if (structure === 'inline')\n                root.children.push(tokenNode);\n            else if (structure === 'classic')\n                lineNode.children.push(tokenNode);\n            col += token.content.length;\n        }\n        if (structure === 'classic') {\n            for (const transformer of transformers)\n                lineNode = transformer?.line?.call(context, lineNode, idx + 1) || lineNode;\n            lineNodes.push(lineNode);\n            lines.push(lineNode);\n        }\n    });\n    if (structure === 'classic') {\n        for (const transformer of transformers)\n            codeNode = transformer?.code?.call(context, codeNode) || codeNode;\n        preNode.children.push(codeNode);\n        for (const transformer of transformers)\n            preNode = transformer?.pre?.call(context, preNode) || preNode;\n        root.children.push(preNode);\n    }\n    let result = root;\n    for (const transformer of transformers)\n        result = transformer?.root?.call(context, result) || result;\n    return result;\n}\nfunction mergeWhitespaceTokens(tokens) {\n    return tokens.map((line) => {\n        const newLine = [];\n        let carryOnContent = '';\n        let firstOffset = 0;\n        line.forEach((token, idx) => {\n            const isUnderline = token.fontStyle && token.fontStyle & FontStyle.Underline;\n            const couldMerge = !isUnderline;\n            if (couldMerge && token.content.match(/^\\s+$/) && line[idx + 1]) {\n                if (!firstOffset)\n                    firstOffset = token.offset;\n                carryOnContent += token.content;\n            }\n            else {\n                if (carryOnContent) {\n                    if (couldMerge) {\n                        newLine.push({\n                            ...token,\n                            offset: firstOffset,\n                            content: carryOnContent + token.content,\n                        });\n                    }\n                    else {\n                        newLine.push({\n                            content: carryOnContent,\n                            offset: firstOffset,\n                        }, token);\n                    }\n                    firstOffset = 0;\n                    carryOnContent = '';\n                }\n                else {\n                    newLine.push(token);\n                }\n            }\n        });\n        return newLine;\n    });\n}\nfunction splitWhitespaceTokens(tokens) {\n    return tokens.map((line) => {\n        return line.flatMap((token) => {\n            if (token.content.match(/^\\s+$/))\n                return token;\n            // eslint-disable-next-line regexp/no-super-linear-backtracking\n            const match = token.content.match(/^(\\s*)(.*?)(\\s*)$/);\n            if (!match)\n                return token;\n            const [, leading, content, trailing] = match;\n            if (!leading && !trailing)\n                return token;\n            const expanded = [{\n                    ...token,\n                    offset: token.offset + leading.length,\n                    content,\n                }];\n            if (leading) {\n                expanded.unshift({\n                    content: leading,\n                    offset: token.offset,\n                });\n            }\n            if (trailing) {\n                expanded.push({\n                    content: trailing,\n                    offset: token.offset + leading.length + content.length,\n                });\n            }\n            return expanded;\n        });\n    });\n}\n\n/**\n * List of HTML void tag names.\n *\n * @type {Array<string>}\n */\nconst htmlVoidElements = [\n  'area',\n  'base',\n  'basefont',\n  'bgsound',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'frame',\n  'hr',\n  'image',\n  'img',\n  'input',\n  'keygen',\n  'link',\n  'meta',\n  'param',\n  'source',\n  'track',\n  'wbr'\n];\n\n/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nclass Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property;\n    this.normal = normal;\n    if (space) {\n      this.space = space;\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {};\n/** @type {Normal} */\nSchema.prototype.normal = {};\n/** @type {string|null} */\nSchema.prototype.space = null;\n\n/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nfunction merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {};\n  /** @type {Normal} */\n  const normal = {};\n  let index = -1;\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property);\n    Object.assign(normal, definitions[index].normal);\n  }\n\n  return new Schema(property, normal, space)\n}\n\n/**\n * @param {string} value\n * @returns {string}\n */\nfunction normalize(value) {\n  return value.toLowerCase()\n}\n\nclass Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property;\n    /** @type {string} */\n    this.attribute = attribute;\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null;\nInfo.prototype.boolean = false;\nInfo.prototype.booleanish = false;\nInfo.prototype.overloadedBoolean = false;\nInfo.prototype.number = false;\nInfo.prototype.commaSeparated = false;\nInfo.prototype.spaceSeparated = false;\nInfo.prototype.commaOrSpaceSeparated = false;\nInfo.prototype.mustUseProperty = false;\nInfo.prototype.defined = false;\n\nlet powers = 0;\n\nconst boolean = increment();\nconst booleanish = increment();\nconst overloadedBoolean = increment();\nconst number = increment();\nconst spaceSeparated = increment();\nconst commaSeparated = increment();\nconst commaOrSpaceSeparated = increment();\n\nfunction increment() {\n  return 2 ** ++powers\n}\n\nvar types = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  boolean: boolean,\n  booleanish: booleanish,\n  commaOrSpaceSeparated: commaOrSpaceSeparated,\n  commaSeparated: commaSeparated,\n  number: number,\n  overloadedBoolean: overloadedBoolean,\n  spaceSeparated: spaceSeparated\n});\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types);\n\nclass DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1;\n\n    super(property, attribute);\n\n    mark(this, 'space', space);\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index];\n        mark(this, checks[index], (mask & types[check]) === types[check]);\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true;\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value;\n  }\n}\n\n/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\n\nconst own$3 = {}.hasOwnProperty;\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nfunction create(definition) {\n  /** @type {Properties} */\n  const property = {};\n  /** @type {Normal} */\n  const normal = {};\n  /** @type {string} */\n  let prop;\n\n  for (prop in definition.properties) {\n    if (own$3.call(definition.properties, prop)) {\n      const value = definition.properties[prop];\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      );\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true;\n      }\n\n      property[prop] = info;\n\n      normal[normalize(prop)] = prop;\n      normal[normalize(info.attribute)] = prop;\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n\nconst xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n});\n\nconst xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n});\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nfunction caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nfunction caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n\nconst xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n});\n\nconst aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n});\n\nconst html$3 = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: null,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n});\n\nconst svg$1 = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n});\n\n/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\n\nconst valid = /^data[-\\w.:]+$/i;\nconst dash = /-[a-z]/g;\nconst cap = /[A-Z]/g;\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nfunction find(schema, value) {\n  const normal = normalize(value);\n  let prop = value;\n  let Type = Info;\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase);\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1);\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4);\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab);\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes;\n        }\n\n        value = 'data' + dashes;\n      }\n    }\n\n    Type = DefinedInfo;\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n\n/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nconst html$2 = merge([xml, xlink, xmlns, aria, html$3], 'html');\nconst svg = merge([xml, xlink, xmlns, aria, svg$1], 'svg');\n\n/**\n * @callback Handler\n *   Handle a value, with a certain ID field set to a certain value.\n *   The ID field is passed to `zwitch`, and it’s value is this function’s\n *   place on the `handlers` record.\n * @param {...any} parameters\n *   Arbitrary parameters passed to the zwitch.\n *   The first will be an object with a certain ID field set to a certain value.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback UnknownHandler\n *   Handle values that do have a certain ID field, but it’s set to a value\n *   that is not listed in the `handlers` record.\n * @param {unknown} value\n *   An object with a certain ID field set to an unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback InvalidHandler\n *   Handle values that do not have a certain ID field.\n * @param {unknown} value\n *   Any unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {void|null|undefined|never}\n *   This should crash or return nothing.\n */\n\n/**\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @typedef Options\n *   Configuration (required).\n * @property {Invalid} [invalid]\n *   Handler to use for invalid values.\n * @property {Unknown} [unknown]\n *   Handler to use for unknown values.\n * @property {Handlers} [handlers]\n *   Handlers to use.\n */\n\nconst own$2 = {}.hasOwnProperty;\n\n/**\n * Handle values based on a field.\n *\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @param {string} key\n *   Field to switch on.\n * @param {Options<Invalid, Unknown, Handlers>} [options]\n *   Configuration (required).\n * @returns {{unknown: Unknown, invalid: Invalid, handlers: Handlers, (...parameters: Parameters<Handlers[keyof Handlers]>): ReturnType<Handlers[keyof Handlers]>, (...parameters: Parameters<Unknown>): ReturnType<Unknown>}}\n */\nfunction zwitch(key, options) {\n  const settings = options || {};\n\n  /**\n   * Handle one value.\n   *\n   * Based on the bound `key`, a respective handler will be called.\n   * If `value` is not an object, or doesn’t have a `key` property, the special\n   * “invalid” handler will be called.\n   * If `value` has an unknown `key`, the special “unknown” handler will be\n   * called.\n   *\n   * All arguments, and the context object, are passed through to the handler,\n   * and it’s result is returned.\n   *\n   * @this {unknown}\n   *   Any context object.\n   * @param {unknown} [value]\n   *   Any value.\n   * @param {...unknown} parameters\n   *   Arbitrary parameters passed to the zwitch.\n   * @property {Handler} invalid\n   *   Handle for values that do not have a certain ID field.\n   * @property {Handler} unknown\n   *   Handle values that do have a certain ID field, but it’s set to a value\n   *   that is not listed in the `handlers` record.\n   * @property {Handlers} handlers\n   *   Record of handlers.\n   * @returns {unknown}\n   *   Anything.\n   */\n  function one(value, ...parameters) {\n    /** @type {Handler|undefined} */\n    let fn = one.invalid;\n    const handlers = one.handlers;\n\n    if (value && own$2.call(value, key)) {\n      // @ts-expect-error Indexable.\n      const id = String(value[key]);\n      // @ts-expect-error Indexable.\n      fn = own$2.call(handlers, id) ? handlers[id] : one.unknown;\n    }\n\n    if (fn) {\n      return fn.call(this, value, ...parameters)\n    }\n  }\n\n  one.handlers = settings.handlers || {};\n  one.invalid = settings.invalid;\n  one.unknown = settings.unknown;\n\n  // @ts-expect-error: matches!\n  return one\n}\n\n/**\n * @typedef CoreOptions\n * @property {Array<string>} [subset=[]]\n *   Whether to only escape the given subset of characters.\n * @property {boolean} [escapeOnly=false]\n *   Whether to only escape possibly dangerous characters.\n *   Those characters are `\"`, `&`, `'`, `<`, `>`, and `` ` ``.\n *\n * @typedef FormatOptions\n * @property {(code: number, next: number, options: CoreWithFormatOptions) => string} format\n *   Format strategy.\n *\n * @typedef {CoreOptions & FormatOptions & import('./util/format-smart.js').FormatSmartOptions} CoreWithFormatOptions\n */\n\n/**\n * Encode certain characters in `value`.\n *\n * @param {string} value\n * @param {CoreWithFormatOptions} options\n * @returns {string}\n */\nfunction core(value, options) {\n  value = value.replace(\n    options.subset ? charactersToExpression(options.subset) : /[\"&'<>`]/g,\n    basic\n  );\n\n  if (options.subset || options.escapeOnly) {\n    return value\n  }\n\n  return (\n    value\n      // Surrogate pairs.\n      .replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, surrogate)\n      // BMP control characters (C0 except for LF, CR, SP; DEL; and some more\n      // non-ASCII ones).\n      .replace(\n        // eslint-disable-next-line no-control-regex, unicorn/no-hex-escape\n        /[\\x01-\\t\\v\\f\\x0E-\\x1F\\x7F\\x81\\x8D\\x8F\\x90\\x9D\\xA0-\\uFFFF]/g,\n        basic\n      )\n  )\n\n  /**\n   * @param {string} pair\n   * @param {number} index\n   * @param {string} all\n   */\n  function surrogate(pair, index, all) {\n    return options.format(\n      (pair.charCodeAt(0) - 0xd800) * 0x400 +\n        pair.charCodeAt(1) -\n        0xdc00 +\n        0x10000,\n      all.charCodeAt(index + 2),\n      options\n    )\n  }\n\n  /**\n   * @param {string} character\n   * @param {number} index\n   * @param {string} all\n   */\n  function basic(character, index, all) {\n    return options.format(\n      character.charCodeAt(0),\n      all.charCodeAt(index + 1),\n      options\n    )\n  }\n}\n\n/**\n * @param {Array<string>} subset\n * @returns {RegExp}\n */\nfunction charactersToExpression(subset) {\n  /** @type {Array<string>} */\n  const groups = [];\n  let index = -1;\n\n  while (++index < subset.length) {\n    groups.push(subset[index].replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&'));\n  }\n\n  return new RegExp('(?:' + groups.join('|') + ')', 'g')\n}\n\n/**\n * Configurable ways to encode characters as hexadecimal references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @returns {string}\n */\nfunction toHexadecimal(code, next, omit) {\n  const value = '&#x' + code.toString(16).toUpperCase();\n  return omit && next && !/[\\dA-Fa-f]/.test(String.fromCharCode(next))\n    ? value\n    : value + ';'\n}\n\n/**\n * Configurable ways to encode characters as decimal references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @returns {string}\n */\nfunction toDecimal(code, next, omit) {\n  const value = '&#' + String(code);\n  return omit && next && !/\\d/.test(String.fromCharCode(next))\n    ? value\n    : value + ';'\n}\n\n/**\n * List of legacy HTML named character references that don’t need a trailing semicolon.\n *\n * @type {Array<string>}\n */\nconst characterEntitiesLegacy = [\n  'AElig',\n  'AMP',\n  'Aacute',\n  'Acirc',\n  'Agrave',\n  'Aring',\n  'Atilde',\n  'Auml',\n  'COPY',\n  'Ccedil',\n  'ETH',\n  'Eacute',\n  'Ecirc',\n  'Egrave',\n  'Euml',\n  'GT',\n  'Iacute',\n  'Icirc',\n  'Igrave',\n  'Iuml',\n  'LT',\n  'Ntilde',\n  'Oacute',\n  'Ocirc',\n  'Ograve',\n  'Oslash',\n  'Otilde',\n  'Ouml',\n  'QUOT',\n  'REG',\n  'THORN',\n  'Uacute',\n  'Ucirc',\n  'Ugrave',\n  'Uuml',\n  'Yacute',\n  'aacute',\n  'acirc',\n  'acute',\n  'aelig',\n  'agrave',\n  'amp',\n  'aring',\n  'atilde',\n  'auml',\n  'brvbar',\n  'ccedil',\n  'cedil',\n  'cent',\n  'copy',\n  'curren',\n  'deg',\n  'divide',\n  'eacute',\n  'ecirc',\n  'egrave',\n  'eth',\n  'euml',\n  'frac12',\n  'frac14',\n  'frac34',\n  'gt',\n  'iacute',\n  'icirc',\n  'iexcl',\n  'igrave',\n  'iquest',\n  'iuml',\n  'laquo',\n  'lt',\n  'macr',\n  'micro',\n  'middot',\n  'nbsp',\n  'not',\n  'ntilde',\n  'oacute',\n  'ocirc',\n  'ograve',\n  'ordf',\n  'ordm',\n  'oslash',\n  'otilde',\n  'ouml',\n  'para',\n  'plusmn',\n  'pound',\n  'quot',\n  'raquo',\n  'reg',\n  'sect',\n  'shy',\n  'sup1',\n  'sup2',\n  'sup3',\n  'szlig',\n  'thorn',\n  'times',\n  'uacute',\n  'ucirc',\n  'ugrave',\n  'uml',\n  'uuml',\n  'yacute',\n  'yen',\n  'yuml'\n];\n\n/**\n * Map of named character references from HTML 4.\n *\n * @type {Record<string, string>}\n */\nconst characterEntitiesHtml4 = {\n  nbsp: ' ',\n  iexcl: '¡',\n  cent: '¢',\n  pound: '£',\n  curren: '¤',\n  yen: '¥',\n  brvbar: '¦',\n  sect: '§',\n  uml: '¨',\n  copy: '©',\n  ordf: 'ª',\n  laquo: '«',\n  not: '¬',\n  shy: '­',\n  reg: '®',\n  macr: '¯',\n  deg: '°',\n  plusmn: '±',\n  sup2: '²',\n  sup3: '³',\n  acute: '´',\n  micro: 'µ',\n  para: '¶',\n  middot: '·',\n  cedil: '¸',\n  sup1: '¹',\n  ordm: 'º',\n  raquo: '»',\n  frac14: '¼',\n  frac12: '½',\n  frac34: '¾',\n  iquest: '¿',\n  Agrave: 'À',\n  Aacute: 'Á',\n  Acirc: 'Â',\n  Atilde: 'Ã',\n  Auml: 'Ä',\n  Aring: 'Å',\n  AElig: 'Æ',\n  Ccedil: 'Ç',\n  Egrave: 'È',\n  Eacute: 'É',\n  Ecirc: 'Ê',\n  Euml: 'Ë',\n  Igrave: 'Ì',\n  Iacute: 'Í',\n  Icirc: 'Î',\n  Iuml: 'Ï',\n  ETH: 'Ð',\n  Ntilde: 'Ñ',\n  Ograve: 'Ò',\n  Oacute: 'Ó',\n  Ocirc: 'Ô',\n  Otilde: 'Õ',\n  Ouml: 'Ö',\n  times: '×',\n  Oslash: 'Ø',\n  Ugrave: 'Ù',\n  Uacute: 'Ú',\n  Ucirc: 'Û',\n  Uuml: 'Ü',\n  Yacute: 'Ý',\n  THORN: 'Þ',\n  szlig: 'ß',\n  agrave: 'à',\n  aacute: 'á',\n  acirc: 'â',\n  atilde: 'ã',\n  auml: 'ä',\n  aring: 'å',\n  aelig: 'æ',\n  ccedil: 'ç',\n  egrave: 'è',\n  eacute: 'é',\n  ecirc: 'ê',\n  euml: 'ë',\n  igrave: 'ì',\n  iacute: 'í',\n  icirc: 'î',\n  iuml: 'ï',\n  eth: 'ð',\n  ntilde: 'ñ',\n  ograve: 'ò',\n  oacute: 'ó',\n  ocirc: 'ô',\n  otilde: 'õ',\n  ouml: 'ö',\n  divide: '÷',\n  oslash: 'ø',\n  ugrave: 'ù',\n  uacute: 'ú',\n  ucirc: 'û',\n  uuml: 'ü',\n  yacute: 'ý',\n  thorn: 'þ',\n  yuml: 'ÿ',\n  fnof: 'ƒ',\n  Alpha: 'Α',\n  Beta: 'Β',\n  Gamma: 'Γ',\n  Delta: 'Δ',\n  Epsilon: 'Ε',\n  Zeta: 'Ζ',\n  Eta: 'Η',\n  Theta: 'Θ',\n  Iota: 'Ι',\n  Kappa: 'Κ',\n  Lambda: 'Λ',\n  Mu: 'Μ',\n  Nu: 'Ν',\n  Xi: 'Ξ',\n  Omicron: 'Ο',\n  Pi: 'Π',\n  Rho: 'Ρ',\n  Sigma: 'Σ',\n  Tau: 'Τ',\n  Upsilon: 'Υ',\n  Phi: 'Φ',\n  Chi: 'Χ',\n  Psi: 'Ψ',\n  Omega: 'Ω',\n  alpha: 'α',\n  beta: 'β',\n  gamma: 'γ',\n  delta: 'δ',\n  epsilon: 'ε',\n  zeta: 'ζ',\n  eta: 'η',\n  theta: 'θ',\n  iota: 'ι',\n  kappa: 'κ',\n  lambda: 'λ',\n  mu: 'μ',\n  nu: 'ν',\n  xi: 'ξ',\n  omicron: 'ο',\n  pi: 'π',\n  rho: 'ρ',\n  sigmaf: 'ς',\n  sigma: 'σ',\n  tau: 'τ',\n  upsilon: 'υ',\n  phi: 'φ',\n  chi: 'χ',\n  psi: 'ψ',\n  omega: 'ω',\n  thetasym: 'ϑ',\n  upsih: 'ϒ',\n  piv: 'ϖ',\n  bull: '•',\n  hellip: '…',\n  prime: '′',\n  Prime: '″',\n  oline: '‾',\n  frasl: '⁄',\n  weierp: '℘',\n  image: 'ℑ',\n  real: 'ℜ',\n  trade: '™',\n  alefsym: 'ℵ',\n  larr: '←',\n  uarr: '↑',\n  rarr: '→',\n  darr: '↓',\n  harr: '↔',\n  crarr: '↵',\n  lArr: '⇐',\n  uArr: '⇑',\n  rArr: '⇒',\n  dArr: '⇓',\n  hArr: '⇔',\n  forall: '∀',\n  part: '∂',\n  exist: '∃',\n  empty: '∅',\n  nabla: '∇',\n  isin: '∈',\n  notin: '∉',\n  ni: '∋',\n  prod: '∏',\n  sum: '∑',\n  minus: '−',\n  lowast: '∗',\n  radic: '√',\n  prop: '∝',\n  infin: '∞',\n  ang: '∠',\n  and: '∧',\n  or: '∨',\n  cap: '∩',\n  cup: '∪',\n  int: '∫',\n  there4: '∴',\n  sim: '∼',\n  cong: '≅',\n  asymp: '≈',\n  ne: '≠',\n  equiv: '≡',\n  le: '≤',\n  ge: '≥',\n  sub: '⊂',\n  sup: '⊃',\n  nsub: '⊄',\n  sube: '⊆',\n  supe: '⊇',\n  oplus: '⊕',\n  otimes: '⊗',\n  perp: '⊥',\n  sdot: '⋅',\n  lceil: '⌈',\n  rceil: '⌉',\n  lfloor: '⌊',\n  rfloor: '⌋',\n  lang: '〈',\n  rang: '〉',\n  loz: '◊',\n  spades: '♠',\n  clubs: '♣',\n  hearts: '♥',\n  diams: '♦',\n  quot: '\"',\n  amp: '&',\n  lt: '<',\n  gt: '>',\n  OElig: 'Œ',\n  oelig: 'œ',\n  Scaron: 'Š',\n  scaron: 'š',\n  Yuml: 'Ÿ',\n  circ: 'ˆ',\n  tilde: '˜',\n  ensp: ' ',\n  emsp: ' ',\n  thinsp: ' ',\n  zwnj: '‌',\n  zwj: '‍',\n  lrm: '‎',\n  rlm: '‏',\n  ndash: '–',\n  mdash: '—',\n  lsquo: '‘',\n  rsquo: '’',\n  sbquo: '‚',\n  ldquo: '“',\n  rdquo: '”',\n  bdquo: '„',\n  dagger: '†',\n  Dagger: '‡',\n  permil: '‰',\n  lsaquo: '‹',\n  rsaquo: '›',\n  euro: '€'\n};\n\n/**\n * List of legacy (that don’t need a trailing `;`) named references which could,\n * depending on what follows them, turn into a different meaning\n *\n * @type {Array<string>}\n */\nconst dangerous = [\n  'cent',\n  'copy',\n  'divide',\n  'gt',\n  'lt',\n  'not',\n  'para',\n  'times'\n];\n\nconst own$1 = {}.hasOwnProperty;\n\n/**\n * `characterEntitiesHtml4` but inverted.\n *\n * @type {Record<string, string>}\n */\nconst characters = {};\n\n/** @type {string} */\nlet key;\n\nfor (key in characterEntitiesHtml4) {\n  if (own$1.call(characterEntitiesHtml4, key)) {\n    characters[characterEntitiesHtml4[key]] = key;\n  }\n}\n\n/**\n * Configurable ways to encode characters as named references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @param {boolean|undefined} attribute\n * @returns {string}\n */\nfunction toNamed(code, next, omit, attribute) {\n  const character = String.fromCharCode(code);\n\n  if (own$1.call(characters, character)) {\n    const name = characters[character];\n    const value = '&' + name;\n\n    if (\n      omit &&\n      characterEntitiesLegacy.includes(name) &&\n      !dangerous.includes(name) &&\n      (!attribute ||\n        (next &&\n          next !== 61 /* `=` */ &&\n          /[^\\da-z]/i.test(String.fromCharCode(next))))\n    ) {\n      return value\n    }\n\n    return value + ';'\n  }\n\n  return ''\n}\n\n/**\n * @typedef FormatSmartOptions\n * @property {boolean} [useNamedReferences=false]\n *   Prefer named character references (`&amp;`) where possible.\n * @property {boolean} [useShortestReferences=false]\n *   Prefer the shortest possible reference, if that results in less bytes.\n *   **Note**: `useNamedReferences` can be omitted when using `useShortestReferences`.\n * @property {boolean} [omitOptionalSemicolons=false]\n *   Whether to omit semicolons when possible.\n *   **Note**: This creates what HTML calls “parse errors” but is otherwise still valid HTML — don’t use this except when building a minifier.\n *   Omitting semicolons is possible for certain named and numeric references in some cases.\n * @property {boolean} [attribute=false]\n *   Create character references which don’t fail in attributes.\n *   **Note**: `attribute` only applies when operating dangerously with\n *   `omitOptionalSemicolons: true`.\n */\n\n\n/**\n * Configurable ways to encode a character yielding pretty or small results.\n *\n * @param {number} code\n * @param {number} next\n * @param {FormatSmartOptions} options\n * @returns {string}\n */\nfunction formatSmart(code, next, options) {\n  let numeric = toHexadecimal(code, next, options.omitOptionalSemicolons);\n  /** @type {string|undefined} */\n  let named;\n\n  if (options.useNamedReferences || options.useShortestReferences) {\n    named = toNamed(\n      code,\n      next,\n      options.omitOptionalSemicolons,\n      options.attribute\n    );\n  }\n\n  // Use the shortest numeric reference when requested.\n  // A simple algorithm would use decimal for all code points under 100, as\n  // those are shorter than hexadecimal:\n  //\n  // * `&#99;` vs `&#x63;` (decimal shorter)\n  // * `&#100;` vs `&#x64;` (equal)\n  //\n  // However, because we take `next` into consideration when `omit` is used,\n  // And it would be possible that decimals are shorter on bigger values as\n  // well if `next` is hexadecimal but not decimal, we instead compare both.\n  if (\n    (options.useShortestReferences || !named) &&\n    options.useShortestReferences\n  ) {\n    const decimal = toDecimal(code, next, options.omitOptionalSemicolons);\n\n    if (decimal.length < numeric.length) {\n      numeric = decimal;\n    }\n  }\n\n  return named &&\n    (!options.useShortestReferences || named.length < numeric.length)\n    ? named\n    : numeric\n}\n\n/**\n * @typedef {import('./core.js').CoreOptions & import('./util/format-smart.js').FormatSmartOptions} Options\n * @typedef {import('./core.js').CoreOptions} LightOptions\n */\n\n\n/**\n * Encode special characters in `value`.\n *\n * @param {string} value\n *   Value to encode.\n * @param {Options} [options]\n *   Configuration.\n * @returns {string}\n *   Encoded value.\n */\nfunction stringifyEntities(value, options) {\n  return core(value, Object.assign({format: formatSmart}, options))\n}\n\n/**\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Parents} Parents\n *\n * @typedef {import('../index.js').State} State\n */\n\n\nconst htmlCommentRegex = /^>|^->|<!--|-->|--!>|<!-$/g;\n\n// Declare arrays as variables so it can be cached by `stringifyEntities`\nconst bogusCommentEntitySubset = ['>'];\nconst commentEntitySubset = ['<', '>'];\n\n/**\n * Serialize a comment.\n *\n * @param {Comment} node\n *   Node to handle.\n * @param {number | undefined} _1\n *   Index of `node` in `parent.\n * @param {Parents | undefined} _2\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nfunction comment(node, _1, _2, state) {\n  // See: <https://html.spec.whatwg.org/multipage/syntax.html#comments>\n  return state.settings.bogusComments\n    ? '<?' +\n        stringifyEntities(\n          node.value,\n          Object.assign({}, state.settings.characterReferences, {\n            subset: bogusCommentEntitySubset\n          })\n        ) +\n        '>'\n    : '<!--' + node.value.replace(htmlCommentRegex, encode) + '-->'\n\n  /**\n   * @param {string} $0\n   */\n  function encode($0) {\n    return stringifyEntities(\n      $0,\n      Object.assign({}, state.settings.characterReferences, {\n        subset: commentEntitySubset\n      })\n    )\n  }\n}\n\n/**\n * @typedef {import('hast').Doctype} Doctype\n * @typedef {import('hast').Parents} Parents\n *\n * @typedef {import('../index.js').State} State\n */\n\n\n/**\n * Serialize a doctype.\n *\n * @param {Doctype} _1\n *   Node to handle.\n * @param {number | undefined} _2\n *   Index of `node` in `parent.\n * @param {Parents | undefined} _3\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nfunction doctype(_1, _2, _3, state) {\n  return (\n    '<!' +\n    (state.settings.upperDoctype ? 'DOCTYPE' : 'doctype') +\n    (state.settings.tightDoctype ? '' : ' ') +\n    'html>'\n  )\n}\n\n/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nfunction ccount(value, character) {\n  const source = String(value);\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0;\n  let index = source.indexOf(character);\n\n  while (index !== -1) {\n    count++;\n    index = source.indexOf(character, index + character.length);\n  }\n\n  return count\n}\n\n/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nfunction stringify$1(values, options) {\n  const settings = options || {};\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values;\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n\n/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nfunction stringify(values) {\n  return values.join(' ').trim()\n}\n\n/**\n * @typedef {import('hast').Nodes} Nodes\n */\n\n// HTML whitespace expression.\n// See <https://infra.spec.whatwg.org/#ascii-whitespace>.\nconst re = /[ \\t\\n\\f\\r]/g;\n\n/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {Nodes | string} thing\n *   Thing to check (`Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`); if a node is passed it must be a `Text` node,\n *   whose `value` field is checked.\n */\nfunction whitespace(thing) {\n  return typeof thing === 'object'\n    ? thing.type === 'text'\n      ? empty(thing.value)\n      : false\n    : empty(thing)\n}\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction empty(value) {\n  return value.replace(re, '') === ''\n}\n\n/**\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').RootContent} RootContent\n */\n\n\nconst siblingAfter = siblings(1);\nconst siblingBefore = siblings(-1);\n\n/** @type {Array<RootContent>} */\nconst emptyChildren$1 = [];\n\n/**\n * Factory to check siblings in a direction.\n *\n * @param {number} increment\n */\nfunction siblings(increment) {\n  return sibling\n\n  /**\n   * Find applicable siblings in a direction.\n   *\n   * @template {Parents} Parent\n   *   Parent type.\n   * @param {Parent | undefined} parent\n   *   Parent.\n   * @param {number | undefined} index\n   *   Index of child in `parent`.\n   * @param {boolean | undefined} [includeWhitespace=false]\n   *   Whether to include whitespace (default: `false`).\n   * @returns {Parent extends {children: Array<infer Child>} ? Child | undefined : never}\n   *   Child of parent.\n   */\n  function sibling(parent, index, includeWhitespace) {\n    const siblings = parent ? parent.children : emptyChildren$1;\n    let offset = (index || 0) + increment;\n    let next = siblings[offset];\n\n    if (!includeWhitespace) {\n      while (next && whitespace(next)) {\n        offset += increment;\n        next = siblings[offset];\n      }\n    }\n\n    // @ts-expect-error: it’s a correct child.\n    return next\n  }\n}\n\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Parents} Parents\n */\n\n/**\n * @callback OmitHandle\n *   Check if a tag can be omitted.\n * @param {Element} element\n *   Element to check.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether to omit a tag.\n *\n */\n\nconst own = {}.hasOwnProperty;\n\n/**\n * Factory to check if a given node can have a tag omitted.\n *\n * @param {Record<string, OmitHandle>} handlers\n *   Omission handlers, where each key is a tag name, and each value is the\n *   corresponding handler.\n * @returns {OmitHandle}\n *   Whether to omit a tag of an element.\n */\nfunction omission(handlers) {\n  return omit\n\n  /**\n   * Check if a given node can have a tag omitted.\n   *\n   * @type {OmitHandle}\n   */\n  function omit(node, index, parent) {\n    return (\n      own.call(handlers, node.tagName) &&\n      handlers[node.tagName](node, index, parent)\n    )\n  }\n}\n\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Parents} Parents\n */\n\n\nconst closing = omission({\n  body: body$1,\n  caption: headOrColgroupOrCaption,\n  colgroup: headOrColgroupOrCaption,\n  dd,\n  dt,\n  head: headOrColgroupOrCaption,\n  html: html$1,\n  li,\n  optgroup,\n  option,\n  p,\n  rp: rubyElement,\n  rt: rubyElement,\n  tbody: tbody$1,\n  td: cells,\n  tfoot,\n  th: cells,\n  thead,\n  tr\n});\n\n/**\n * Macro for `</head>`, `</colgroup>`, and `</caption>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction headOrColgroupOrCaption(_, index, parent) {\n  const next = siblingAfter(parent, index, true);\n  return (\n    !next ||\n    (next.type !== 'comment' &&\n      !(next.type === 'text' && whitespace(next.value.charAt(0))))\n  )\n}\n\n/**\n * Whether to omit `</html>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction html$1(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return !next || next.type !== 'comment'\n}\n\n/**\n * Whether to omit `</body>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction body$1(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return !next || next.type !== 'comment'\n}\n\n/**\n * Whether to omit `</p>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction p(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return next\n    ? next.type === 'element' &&\n        (next.tagName === 'address' ||\n          next.tagName === 'article' ||\n          next.tagName === 'aside' ||\n          next.tagName === 'blockquote' ||\n          next.tagName === 'details' ||\n          next.tagName === 'div' ||\n          next.tagName === 'dl' ||\n          next.tagName === 'fieldset' ||\n          next.tagName === 'figcaption' ||\n          next.tagName === 'figure' ||\n          next.tagName === 'footer' ||\n          next.tagName === 'form' ||\n          next.tagName === 'h1' ||\n          next.tagName === 'h2' ||\n          next.tagName === 'h3' ||\n          next.tagName === 'h4' ||\n          next.tagName === 'h5' ||\n          next.tagName === 'h6' ||\n          next.tagName === 'header' ||\n          next.tagName === 'hgroup' ||\n          next.tagName === 'hr' ||\n          next.tagName === 'main' ||\n          next.tagName === 'menu' ||\n          next.tagName === 'nav' ||\n          next.tagName === 'ol' ||\n          next.tagName === 'p' ||\n          next.tagName === 'pre' ||\n          next.tagName === 'section' ||\n          next.tagName === 'table' ||\n          next.tagName === 'ul')\n    : !parent ||\n        // Confusing parent.\n        !(\n          parent.type === 'element' &&\n          (parent.tagName === 'a' ||\n            parent.tagName === 'audio' ||\n            parent.tagName === 'del' ||\n            parent.tagName === 'ins' ||\n            parent.tagName === 'map' ||\n            parent.tagName === 'noscript' ||\n            parent.tagName === 'video')\n        )\n}\n\n/**\n * Whether to omit `</li>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction li(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return !next || (next.type === 'element' && next.tagName === 'li')\n}\n\n/**\n * Whether to omit `</dt>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction dt(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return Boolean(\n    next &&\n      next.type === 'element' &&\n      (next.tagName === 'dt' || next.tagName === 'dd')\n  )\n}\n\n/**\n * Whether to omit `</dd>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction dd(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'dt' || next.tagName === 'dd'))\n  )\n}\n\n/**\n * Whether to omit `</rt>` or `</rp>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction rubyElement(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'rp' || next.tagName === 'rt'))\n  )\n}\n\n/**\n * Whether to omit `</optgroup>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction optgroup(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return !next || (next.type === 'element' && next.tagName === 'optgroup')\n}\n\n/**\n * Whether to omit `</option>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction option(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'option' || next.tagName === 'optgroup'))\n  )\n}\n\n/**\n * Whether to omit `</thead>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction thead(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return Boolean(\n    next &&\n      next.type === 'element' &&\n      (next.tagName === 'tbody' || next.tagName === 'tfoot')\n  )\n}\n\n/**\n * Whether to omit `</tbody>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tbody$1(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'tbody' || next.tagName === 'tfoot'))\n  )\n}\n\n/**\n * Whether to omit `</tfoot>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tfoot(_, index, parent) {\n  return !siblingAfter(parent, index)\n}\n\n/**\n * Whether to omit `</tr>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tr(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return !next || (next.type === 'element' && next.tagName === 'tr')\n}\n\n/**\n * Whether to omit `</td>` or `</th>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction cells(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'td' || next.tagName === 'th'))\n  )\n}\n\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Parents} Parents\n */\n\n\nconst opening = omission({\n  body,\n  colgroup,\n  head,\n  html,\n  tbody\n});\n\n/**\n * Whether to omit `<html>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction html(node) {\n  const head = siblingAfter(node, -1);\n  return !head || head.type !== 'comment'\n}\n\n/**\n * Whether to omit `<head>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction head(node) {\n  const children = node.children;\n  /** @type {Array<string>} */\n  const seen = [];\n  let index = -1;\n\n  while (++index < children.length) {\n    const child = children[index];\n    if (\n      child.type === 'element' &&\n      (child.tagName === 'title' || child.tagName === 'base')\n    ) {\n      if (seen.includes(child.tagName)) return false\n      seen.push(child.tagName);\n    }\n  }\n\n  return children.length > 0\n}\n\n/**\n * Whether to omit `<body>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction body(node) {\n  const head = siblingAfter(node, -1, true);\n\n  return (\n    !head ||\n    (head.type !== 'comment' &&\n      !(head.type === 'text' && whitespace(head.value.charAt(0))) &&\n      !(\n        head.type === 'element' &&\n        (head.tagName === 'meta' ||\n          head.tagName === 'link' ||\n          head.tagName === 'script' ||\n          head.tagName === 'style' ||\n          head.tagName === 'template')\n      ))\n  )\n}\n\n/**\n * Whether to omit `<colgroup>`.\n * The spec describes some logic for the opening tag, but it’s easier to\n * implement in the closing tag, to the same effect, so we handle it there\n * instead.\n *\n * @param {Element} node\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction colgroup(node, index, parent) {\n  const previous = siblingBefore(parent, index);\n  const head = siblingAfter(node, -1, true);\n\n  // Previous colgroup was already omitted.\n  if (\n    parent &&\n    previous &&\n    previous.type === 'element' &&\n    previous.tagName === 'colgroup' &&\n    closing(previous, parent.children.indexOf(previous), parent)\n  ) {\n    return false\n  }\n\n  return Boolean(head && head.type === 'element' && head.tagName === 'col')\n}\n\n/**\n * Whether to omit `<tbody>`.\n *\n * @param {Element} node\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction tbody(node, index, parent) {\n  const previous = siblingBefore(parent, index);\n  const head = siblingAfter(node, -1);\n\n  // Previous table section was already omitted.\n  if (\n    parent &&\n    previous &&\n    previous.type === 'element' &&\n    (previous.tagName === 'thead' || previous.tagName === 'tbody') &&\n    closing(previous, parent.children.indexOf(previous), parent)\n  ) {\n    return false\n  }\n\n  return Boolean(head && head.type === 'element' && head.tagName === 'tr')\n}\n\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Properties} Properties\n *\n * @typedef {import('../index.js').State} State\n */\n\n\n/**\n * Maps of subsets.\n *\n * Each value is a matrix of tuples.\n * The value at `0` causes parse errors, the value at `1` is valid.\n * Of both, the value at `0` is unsafe, and the value at `1` is safe.\n *\n * @type {Record<'double' | 'name' | 'single' | 'unquoted', Array<[Array<string>, Array<string>]>>}\n */\nconst constants = {\n  // See: <https://html.spec.whatwg.org/#attribute-name-state>.\n  name: [\n    ['\\t\\n\\f\\r &/=>'.split(''), '\\t\\n\\f\\r \"&\\'/=>`'.split('')],\n    ['\\0\\t\\n\\f\\r \"&\\'/<=>'.split(''), '\\0\\t\\n\\f\\r \"&\\'/<=>`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(unquoted)-state>.\n  unquoted: [\n    ['\\t\\n\\f\\r &>'.split(''), '\\0\\t\\n\\f\\r \"&\\'<=>`'.split('')],\n    ['\\0\\t\\n\\f\\r \"&\\'<=>`'.split(''), '\\0\\t\\n\\f\\r \"&\\'<=>`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(single-quoted)-state>.\n  single: [\n    [\"&'\".split(''), '\"&\\'`'.split('')],\n    [\"\\0&'\".split(''), '\\0\"&\\'`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(double-quoted)-state>.\n  double: [\n    ['\"&'.split(''), '\"&\\'`'.split('')],\n    ['\\0\"&'.split(''), '\\0\"&\\'`'.split('')]\n  ]\n};\n\n/**\n * Serialize an element node.\n *\n * @param {Element} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nfunction element(node, index, parent, state) {\n  const schema = state.schema;\n  const omit = schema.space === 'svg' ? false : state.settings.omitOptionalTags;\n  let selfClosing =\n    schema.space === 'svg'\n      ? state.settings.closeEmptyElements\n      : state.settings.voids.includes(node.tagName.toLowerCase());\n  /** @type {Array<string>} */\n  const parts = [];\n  /** @type {string} */\n  let last;\n\n  if (schema.space === 'html' && node.tagName === 'svg') {\n    state.schema = svg;\n  }\n\n  const attributes = serializeAttributes(state, node.properties);\n\n  const content = state.all(\n    schema.space === 'html' && node.tagName === 'template' ? node.content : node\n  );\n\n  state.schema = schema;\n\n  // If the node is categorised as void, but it has children, remove the\n  // categorisation.\n  // This enables for example `menuitem`s, which are void in W3C HTML but not\n  // void in WHATWG HTML, to be stringified properly.\n  // Note: `menuitem` has since been removed from the HTML spec, and so is no\n  // longer void.\n  if (content) selfClosing = false;\n\n  if (attributes || !omit || !opening(node, index, parent)) {\n    parts.push('<', node.tagName, attributes ? ' ' + attributes : '');\n\n    if (\n      selfClosing &&\n      (schema.space === 'svg' || state.settings.closeSelfClosing)\n    ) {\n      last = attributes.charAt(attributes.length - 1);\n      if (\n        !state.settings.tightSelfClosing ||\n        last === '/' ||\n        (last && last !== '\"' && last !== \"'\")\n      ) {\n        parts.push(' ');\n      }\n\n      parts.push('/');\n    }\n\n    parts.push('>');\n  }\n\n  parts.push(content);\n\n  if (!selfClosing && (!omit || !closing(node, index, parent))) {\n    parts.push('</' + node.tagName + '>');\n  }\n\n  return parts.join('')\n}\n\n/**\n * @param {State} state\n * @param {Properties | null | undefined} properties\n * @returns {string}\n */\nfunction serializeAttributes(state, properties) {\n  /** @type {Array<string>} */\n  const values = [];\n  let index = -1;\n  /** @type {string} */\n  let key;\n\n  if (properties) {\n    for (key in properties) {\n      if (properties[key] !== null && properties[key] !== undefined) {\n        const value = serializeAttribute(state, key, properties[key]);\n        if (value) values.push(value);\n      }\n    }\n  }\n\n  while (++index < values.length) {\n    const last = state.settings.tightAttributes\n      ? values[index].charAt(values[index].length - 1)\n      : undefined;\n\n    // In tight mode, don’t add a space after quoted attributes.\n    if (index !== values.length - 1 && last !== '\"' && last !== \"'\") {\n      values[index] += ' ';\n    }\n  }\n\n  return values.join('')\n}\n\n/**\n * @param {State} state\n * @param {string} key\n * @param {Properties[keyof Properties]} value\n * @returns {string}\n */\nfunction serializeAttribute(state, key, value) {\n  const info = find(state.schema, key);\n  const x =\n    state.settings.allowParseErrors && state.schema.space === 'html' ? 0 : 1;\n  const y = state.settings.allowDangerousCharacters ? 0 : 1;\n  let quote = state.quote;\n  /** @type {string | undefined} */\n  let result;\n\n  if (info.overloadedBoolean && (value === info.attribute || value === '')) {\n    value = true;\n  } else if (\n    info.boolean ||\n    (info.overloadedBoolean && typeof value !== 'string')\n  ) {\n    value = Boolean(value);\n  }\n\n  if (\n    value === null ||\n    value === undefined ||\n    value === false ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return ''\n  }\n\n  const name = stringifyEntities(\n    info.attribute,\n    Object.assign({}, state.settings.characterReferences, {\n      // Always encode without parse errors in non-HTML.\n      subset: constants.name[x][y]\n    })\n  );\n\n  // No value.\n  // There is currently only one boolean property in SVG: `[download]` on\n  // `<a>`.\n  // This property does not seem to work in browsers (Firefox, Safari, Chrome),\n  // so I can’t test if dropping the value works.\n  // But I assume that it should:\n  //\n  // ```html\n  // <!doctype html>\n  // <svg viewBox=\"0 0 100 100\">\n  //   <a href=https://example.com download>\n  //     <circle cx=50 cy=40 r=35 />\n  //   </a>\n  // </svg>\n  // ```\n  //\n  // See: <https://github.com/wooorm/property-information/blob/main/lib/svg.js>\n  if (value === true) return name\n\n  // `spaces` doesn’t accept a second argument, but it’s given here just to\n  // keep the code cleaner.\n  value = Array.isArray(value)\n    ? (info.commaSeparated ? stringify$1 : stringify)(value, {\n        padLeft: !state.settings.tightCommaSeparatedLists\n      })\n    : String(value);\n\n  if (state.settings.collapseEmptyAttributes && !value) return name\n\n  // Check unquoted value.\n  if (state.settings.preferUnquoted) {\n    result = stringifyEntities(\n      value,\n      Object.assign({}, state.settings.characterReferences, {\n        attribute: true,\n        subset: constants.unquoted[x][y]\n      })\n    );\n  }\n\n  // If we don’t want unquoted, or if `value` contains character references when\n  // unquoted…\n  if (result !== value) {\n    // If the alternative is less common than `quote`, switch.\n    if (\n      state.settings.quoteSmart &&\n      ccount(value, quote) > ccount(value, state.alternative)\n    ) {\n      quote = state.alternative;\n    }\n\n    result =\n      quote +\n      stringifyEntities(\n        value,\n        Object.assign({}, state.settings.characterReferences, {\n          // Always encode without parse errors in non-HTML.\n          subset: (quote === \"'\" ? constants.single : constants.double)[x][y],\n          attribute: true\n        })\n      ) +\n      quote;\n  }\n\n  // Don’t add a `=` for unquoted empties.\n  return name + (result ? '=' + result : result)\n}\n\n/**\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('mdast-util-to-hast').Raw} Raw\n *\n * @typedef {import('../index.js').State} State\n */\n\n\n// Declare array as variable so it can be cached by `stringifyEntities`\nconst textEntitySubset = ['<', '&'];\n\n/**\n * Serialize a text node.\n *\n * @param {Raw | Text} node\n *   Node to handle.\n * @param {number | undefined} _\n *   Index of `node` in `parent.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nfunction text(node, _, parent, state) {\n  // Check if content of `node` should be escaped.\n  return parent &&\n    parent.type === 'element' &&\n    (parent.tagName === 'script' || parent.tagName === 'style')\n    ? node.value\n    : stringifyEntities(\n        node.value,\n        Object.assign({}, state.settings.characterReferences, {\n          subset: textEntitySubset\n        })\n      )\n}\n\n/**\n * @typedef {import('hast').Parents} Parents\n *\n * @typedef {import('mdast-util-to-hast').Raw} Raw\n *\n * @typedef {import('../index.js').State} State\n */\n\n\n/**\n * Serialize a raw node.\n *\n * @param {Raw} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nfunction raw(node, index, parent, state) {\n  return state.settings.allowDangerousHtml\n    ? node.value\n    : text(node, index, parent, state)\n}\n\n/**\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Root} Root\n *\n * @typedef {import('../index.js').State} State\n */\n\n\n/**\n * Serialize a root.\n *\n * @param {Root} node\n *   Node to handle.\n * @param {number | undefined} _1\n *   Index of `node` in `parent.\n * @param {Parents | undefined} _2\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nfunction root(node, _1, _2, state) {\n  return state.all(node)\n}\n\n/**\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n *\n * @typedef {import('../index.js').State} State\n */\n\n\n/**\n * @type {(node: Nodes, index: number | undefined, parent: Parents | undefined, state: State) => string}\n */\nconst handle = zwitch('type', {\n  invalid,\n  unknown,\n  handlers: {comment, doctype, element, raw, root, text}\n});\n\n/**\n * Fail when a non-node is found in the tree.\n *\n * @param {unknown} node\n *   Unknown value.\n * @returns {never}\n *   Never.\n */\nfunction invalid(node) {\n  throw new Error('Expected node, not `' + node + '`')\n}\n\n/**\n * Fail when a node with an unknown type is found in the tree.\n *\n * @param {unknown} node_\n *  Unknown node.\n * @returns {never}\n *   Never.\n */\nfunction unknown(node_) {\n  // `type` is guaranteed by runtime JS.\n  const node = /** @type {Nodes} */ (node_);\n  throw new Error('Cannot compile unknown node `' + node.type + '`')\n}\n\n/**\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').RootContent} RootContent\n *\n * @typedef {import('property-information').Schema} Schema\n *\n * @typedef {import('stringify-entities').Options} StringifyEntitiesOptions\n */\n\n\n/** @type {Options} */\nconst emptyOptions = {};\n\n/** @type {CharacterReferences} */\nconst emptyCharacterReferences = {};\n\n/** @type {Array<never>} */\nconst emptyChildren = [];\n\n/**\n * Serialize hast as HTML.\n *\n * @param {Array<RootContent> | Nodes} tree\n *   Tree to serialize.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized HTML.\n */\nfunction toHtml(tree, options) {\n  const options_ = options || emptyOptions;\n  const quote = options_.quote || '\"';\n  const alternative = quote === '\"' ? \"'\" : '\"';\n\n  if (quote !== '\"' && quote !== \"'\") {\n    throw new Error('Invalid quote `' + quote + '`, expected `\\'` or `\"`')\n  }\n\n  /** @type {State} */\n  const state = {\n    one,\n    all,\n    settings: {\n      omitOptionalTags: options_.omitOptionalTags || false,\n      allowParseErrors: options_.allowParseErrors || false,\n      allowDangerousCharacters: options_.allowDangerousCharacters || false,\n      quoteSmart: options_.quoteSmart || false,\n      preferUnquoted: options_.preferUnquoted || false,\n      tightAttributes: options_.tightAttributes || false,\n      upperDoctype: options_.upperDoctype || false,\n      tightDoctype: options_.tightDoctype || false,\n      bogusComments: options_.bogusComments || false,\n      tightCommaSeparatedLists: options_.tightCommaSeparatedLists || false,\n      tightSelfClosing: options_.tightSelfClosing || false,\n      collapseEmptyAttributes: options_.collapseEmptyAttributes || false,\n      allowDangerousHtml: options_.allowDangerousHtml || false,\n      voids: options_.voids || htmlVoidElements,\n      characterReferences:\n        options_.characterReferences || emptyCharacterReferences,\n      closeSelfClosing: options_.closeSelfClosing || false,\n      closeEmptyElements: options_.closeEmptyElements || false\n    },\n    schema: options_.space === 'svg' ? svg : html$2,\n    quote,\n    alternative\n  };\n\n  return state.one(\n    Array.isArray(tree) ? {type: 'root', children: tree} : tree,\n    undefined,\n    undefined\n  )\n}\n\n/**\n * Serialize a node.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {Nodes} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(node, index, parent) {\n  return handle(node, index, parent, this)\n}\n\n/**\n * Serialize all children of `parent`.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {Parents | undefined} parent\n *   Parent whose children to serialize.\n * @returns {string}\n */\nfunction all(parent) {\n  /** @type {Array<string>} */\n  const results = [];\n  const children = (parent && parent.children) || emptyChildren;\n  let index = -1;\n\n  while (++index < children.length) {\n    results[index] = this.one(children[index], index, parent);\n  }\n\n  return results.join('')\n}\n\n/**\n * Get highlighted code in HTML.\n */\nfunction codeToHtml(internal, code, options) {\n    const context = {\n        meta: {},\n        options,\n        codeToHast: (_code, _options) => codeToHast(internal, _code, _options),\n        codeToTokens: (_code, _options) => codeToTokens(internal, _code, _options),\n    };\n    let result = toHtml(codeToHast(internal, code, options, context));\n    for (const transformer of getTransformers(options))\n        result = transformer.postprocess?.call(context, result, options) || result;\n    return result;\n}\n\nasync function main(init) {\n    let wasmMemory;\n    let buffer;\n    const binding = {};\n    function updateGlobalBufferAndViews(buf) {\n        buffer = buf;\n        binding.HEAPU8 = new Uint8Array(buf);\n        binding.HEAPU32 = new Uint32Array(buf);\n    }\n    function _emscripten_get_now() {\n        return typeof performance !== 'undefined' ? performance.now() : Date.now();\n    }\n    function _emscripten_memcpy_big(dest, src, num) {\n        binding.HEAPU8.copyWithin(dest, src, src + num);\n    }\n    function getHeapMax() {\n        return 2147483648;\n    }\n    function emscripten_realloc_buffer(size) {\n        try {\n            wasmMemory.grow((size - buffer.byteLength + 65535) >>> 16);\n            updateGlobalBufferAndViews(wasmMemory.buffer);\n            return 1;\n        }\n        catch { }\n    }\n    function _emscripten_resize_heap(requestedSize) {\n        const oldSize = binding.HEAPU8.length;\n        requestedSize = requestedSize >>> 0;\n        const maxHeapSize = getHeapMax();\n        if (requestedSize > maxHeapSize)\n            return false;\n        const alignUp = (x, multiple) => x + ((multiple - (x % multiple)) % multiple);\n        for (let cutDown = 1; cutDown <= 4; cutDown *= 2) {\n            let overGrownHeapSize = oldSize * (1 + 0.2 / cutDown);\n            overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);\n            const newSize = Math.min(maxHeapSize, alignUp(Math.max(requestedSize, overGrownHeapSize), 65536));\n            const replacement = emscripten_realloc_buffer(newSize);\n            if (replacement)\n                return true;\n        }\n        return false;\n    }\n    const UTF8Decoder = typeof TextDecoder != 'undefined' ? new TextDecoder('utf8') : undefined;\n    function UTF8ArrayToString(heapOrArray, idx, maxBytesToRead = 1024) {\n        const endIdx = idx + maxBytesToRead;\n        let endPtr = idx;\n        while (heapOrArray[endPtr] && !(endPtr >= endIdx))\n            ++endPtr;\n        if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\n            return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\n        }\n        let str = '';\n        while (idx < endPtr) {\n            let u0 = heapOrArray[idx++];\n            if (!(u0 & 128)) {\n                str += String.fromCharCode(u0);\n                continue;\n            }\n            const u1 = heapOrArray[idx++] & 63;\n            if ((u0 & 224) === 192) {\n                str += String.fromCharCode(((u0 & 31) << 6) | u1);\n                continue;\n            }\n            const u2 = heapOrArray[idx++] & 63;\n            if ((u0 & 240) === 224) {\n                u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;\n            }\n            else {\n                u0 = ((u0 & 7) << 18)\n                    | (u1 << 12)\n                    | (u2 << 6)\n                    | (heapOrArray[idx++] & 63);\n            }\n            if (u0 < 65536) {\n                str += String.fromCharCode(u0);\n            }\n            else {\n                const ch = u0 - 65536;\n                str += String.fromCharCode(55296 | (ch >> 10), 56320 | (ch & 1023));\n            }\n        }\n        return str;\n    }\n    function UTF8ToString(ptr, maxBytesToRead) {\n        return ptr ? UTF8ArrayToString(binding.HEAPU8, ptr, maxBytesToRead) : '';\n    }\n    const asmLibraryArg = {\n        emscripten_get_now: _emscripten_get_now,\n        emscripten_memcpy_big: _emscripten_memcpy_big,\n        emscripten_resize_heap: _emscripten_resize_heap,\n        fd_write: () => 0,\n    };\n    async function createWasm() {\n        const info = {\n            env: asmLibraryArg,\n            wasi_snapshot_preview1: asmLibraryArg,\n        };\n        const exports = await init(info);\n        wasmMemory = exports.memory;\n        updateGlobalBufferAndViews(wasmMemory.buffer);\n        Object.assign(binding, exports);\n        binding.UTF8ToString = UTF8ToString;\n    }\n    await createWasm();\n    return binding;\n}\n\n/* ---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *-------------------------------------------------------- */\nlet onigBinding = null;\nlet defaultDebugCall = false;\nfunction throwLastOnigError(onigBinding) {\n    throw new ShikiError(onigBinding.UTF8ToString(onigBinding.getLastOnigError()));\n}\nclass UtfString {\n    static _utf8ByteLength(str) {\n        let result = 0;\n        for (let i = 0, len = str.length; i < len; i++) {\n            const charCode = str.charCodeAt(i);\n            let codepoint = charCode;\n            let wasSurrogatePair = false;\n            if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n                // Hit a high surrogate, try to look for a matching low surrogate\n                if (i + 1 < len) {\n                    const nextCharCode = str.charCodeAt(i + 1);\n                    if (nextCharCode >= 0xDC00 && nextCharCode <= 0xDFFF) {\n                        // Found the matching low surrogate\n                        codepoint = (((charCode - 0xD800) << 10) + 0x10000) | (nextCharCode - 0xDC00);\n                        wasSurrogatePair = true;\n                    }\n                }\n            }\n            if (codepoint <= 0x7F)\n                result += 1;\n            else if (codepoint <= 0x7FF)\n                result += 2;\n            else if (codepoint <= 0xFFFF)\n                result += 3;\n            else\n                result += 4;\n            if (wasSurrogatePair)\n                i++;\n        }\n        return result;\n    }\n    utf16Length;\n    utf8Length;\n    utf16Value;\n    utf8Value;\n    utf16OffsetToUtf8;\n    utf8OffsetToUtf16;\n    constructor(str) {\n        const utf16Length = str.length;\n        const utf8Length = UtfString._utf8ByteLength(str);\n        const computeIndicesMapping = (utf8Length !== utf16Length);\n        const utf16OffsetToUtf8 = computeIndicesMapping ? new Uint32Array(utf16Length + 1) : null;\n        if (computeIndicesMapping)\n            utf16OffsetToUtf8[utf16Length] = utf8Length;\n        const utf8OffsetToUtf16 = computeIndicesMapping ? new Uint32Array(utf8Length + 1) : null;\n        if (computeIndicesMapping)\n            utf8OffsetToUtf16[utf8Length] = utf16Length;\n        const utf8Value = new Uint8Array(utf8Length);\n        let i8 = 0;\n        for (let i16 = 0; i16 < utf16Length; i16++) {\n            const charCode = str.charCodeAt(i16);\n            let codePoint = charCode;\n            let wasSurrogatePair = false;\n            if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n                // Hit a high surrogate, try to look for a matching low surrogate\n                if (i16 + 1 < utf16Length) {\n                    const nextCharCode = str.charCodeAt(i16 + 1);\n                    if (nextCharCode >= 0xDC00 && nextCharCode <= 0xDFFF) {\n                        // Found the matching low surrogate\n                        codePoint = (((charCode - 0xD800) << 10) + 0x10000) | (nextCharCode - 0xDC00);\n                        wasSurrogatePair = true;\n                    }\n                }\n            }\n            if (computeIndicesMapping) {\n                utf16OffsetToUtf8[i16] = i8;\n                if (wasSurrogatePair)\n                    utf16OffsetToUtf8[i16 + 1] = i8;\n                if (codePoint <= 0x7F) {\n                    utf8OffsetToUtf16[i8 + 0] = i16;\n                }\n                else if (codePoint <= 0x7FF) {\n                    utf8OffsetToUtf16[i8 + 0] = i16;\n                    utf8OffsetToUtf16[i8 + 1] = i16;\n                }\n                else if (codePoint <= 0xFFFF) {\n                    utf8OffsetToUtf16[i8 + 0] = i16;\n                    utf8OffsetToUtf16[i8 + 1] = i16;\n                    utf8OffsetToUtf16[i8 + 2] = i16;\n                }\n                else {\n                    utf8OffsetToUtf16[i8 + 0] = i16;\n                    utf8OffsetToUtf16[i8 + 1] = i16;\n                    utf8OffsetToUtf16[i8 + 2] = i16;\n                    utf8OffsetToUtf16[i8 + 3] = i16;\n                }\n            }\n            if (codePoint <= 0x7F) {\n                utf8Value[i8++] = codePoint;\n            }\n            else if (codePoint <= 0x7FF) {\n                utf8Value[i8++] = 0b11000000 | ((codePoint & 0b00000000000000000000011111000000) >>> 6);\n                utf8Value[i8++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n            }\n            else if (codePoint <= 0xFFFF) {\n                utf8Value[i8++] = 0b11100000 | ((codePoint & 0b00000000000000001111000000000000) >>> 12);\n                utf8Value[i8++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n                utf8Value[i8++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n            }\n            else {\n                utf8Value[i8++] = 0b11110000 | ((codePoint & 0b00000000000111000000000000000000) >>> 18);\n                utf8Value[i8++] = 0b10000000 | ((codePoint & 0b00000000000000111111000000000000) >>> 12);\n                utf8Value[i8++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n                utf8Value[i8++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n            }\n            if (wasSurrogatePair)\n                i16++;\n        }\n        this.utf16Length = utf16Length;\n        this.utf8Length = utf8Length;\n        this.utf16Value = str;\n        this.utf8Value = utf8Value;\n        this.utf16OffsetToUtf8 = utf16OffsetToUtf8;\n        this.utf8OffsetToUtf16 = utf8OffsetToUtf16;\n    }\n    createString(onigBinding) {\n        const result = onigBinding.omalloc(this.utf8Length);\n        onigBinding.HEAPU8.set(this.utf8Value, result);\n        return result;\n    }\n}\nclass OnigString {\n    static LAST_ID = 0;\n    static _sharedPtr = 0; // a pointer to a string of 10000 bytes\n    static _sharedPtrInUse = false;\n    id = (++OnigString.LAST_ID);\n    _onigBinding;\n    content;\n    utf16Length;\n    utf8Length;\n    utf16OffsetToUtf8;\n    utf8OffsetToUtf16;\n    ptr;\n    constructor(str) {\n        if (!onigBinding)\n            throw new ShikiError('Must invoke loadWasm first.');\n        this._onigBinding = onigBinding;\n        this.content = str;\n        const utfString = new UtfString(str);\n        this.utf16Length = utfString.utf16Length;\n        this.utf8Length = utfString.utf8Length;\n        this.utf16OffsetToUtf8 = utfString.utf16OffsetToUtf8;\n        this.utf8OffsetToUtf16 = utfString.utf8OffsetToUtf16;\n        if (this.utf8Length < 10000 && !OnigString._sharedPtrInUse) {\n            if (!OnigString._sharedPtr)\n                OnigString._sharedPtr = onigBinding.omalloc(10000);\n            OnigString._sharedPtrInUse = true;\n            onigBinding.HEAPU8.set(utfString.utf8Value, OnigString._sharedPtr);\n            this.ptr = OnigString._sharedPtr;\n        }\n        else {\n            this.ptr = utfString.createString(onigBinding);\n        }\n    }\n    convertUtf8OffsetToUtf16(utf8Offset) {\n        if (this.utf8OffsetToUtf16) {\n            if (utf8Offset < 0)\n                return 0;\n            if (utf8Offset > this.utf8Length)\n                return this.utf16Length;\n            return this.utf8OffsetToUtf16[utf8Offset];\n        }\n        return utf8Offset;\n    }\n    convertUtf16OffsetToUtf8(utf16Offset) {\n        if (this.utf16OffsetToUtf8) {\n            if (utf16Offset < 0)\n                return 0;\n            if (utf16Offset > this.utf16Length)\n                return this.utf8Length;\n            return this.utf16OffsetToUtf8[utf16Offset];\n        }\n        return utf16Offset;\n    }\n    dispose() {\n        if (this.ptr === OnigString._sharedPtr)\n            OnigString._sharedPtrInUse = false;\n        else\n            this._onigBinding.ofree(this.ptr);\n    }\n}\nclass OnigScanner {\n    _onigBinding;\n    _ptr;\n    constructor(patterns) {\n        if (!onigBinding)\n            throw new ShikiError('Must invoke loadWasm first.');\n        const strPtrsArr = [];\n        const strLenArr = [];\n        for (let i = 0, len = patterns.length; i < len; i++) {\n            const utfString = new UtfString(patterns[i]);\n            strPtrsArr[i] = utfString.createString(onigBinding);\n            strLenArr[i] = utfString.utf8Length;\n        }\n        const strPtrsPtr = onigBinding.omalloc(4 * patterns.length);\n        onigBinding.HEAPU32.set(strPtrsArr, strPtrsPtr / 4);\n        const strLenPtr = onigBinding.omalloc(4 * patterns.length);\n        onigBinding.HEAPU32.set(strLenArr, strLenPtr / 4);\n        const scannerPtr = onigBinding.createOnigScanner(strPtrsPtr, strLenPtr, patterns.length);\n        for (let i = 0, len = patterns.length; i < len; i++)\n            onigBinding.ofree(strPtrsArr[i]);\n        onigBinding.ofree(strLenPtr);\n        onigBinding.ofree(strPtrsPtr);\n        if (scannerPtr === 0)\n            throwLastOnigError(onigBinding);\n        this._onigBinding = onigBinding;\n        this._ptr = scannerPtr;\n    }\n    dispose() {\n        this._onigBinding.freeOnigScanner(this._ptr);\n    }\n    findNextMatchSync(string, startPosition, arg) {\n        let debugCall = defaultDebugCall;\n        let options = 0 /* FindOption.None */;\n        if (typeof arg === 'number') {\n            if (arg & 8 /* FindOption.DebugCall */)\n                debugCall = true;\n            options = arg;\n        }\n        else if (typeof arg === 'boolean') {\n            debugCall = arg;\n        }\n        if (typeof string === 'string') {\n            string = new OnigString(string);\n            const result = this._findNextMatchSync(string, startPosition, debugCall, options);\n            string.dispose();\n            return result;\n        }\n        return this._findNextMatchSync(string, startPosition, debugCall, options);\n    }\n    _findNextMatchSync(string, startPosition, debugCall, options) {\n        const onigBinding = this._onigBinding;\n        let resultPtr;\n        if (debugCall)\n            resultPtr = onigBinding.findNextOnigScannerMatchDbg(this._ptr, string.id, string.ptr, string.utf8Length, string.convertUtf16OffsetToUtf8(startPosition), options);\n        else\n            resultPtr = onigBinding.findNextOnigScannerMatch(this._ptr, string.id, string.ptr, string.utf8Length, string.convertUtf16OffsetToUtf8(startPosition), options);\n        if (resultPtr === 0) {\n            // no match\n            return null;\n        }\n        const HEAPU32 = onigBinding.HEAPU32;\n        let offset = resultPtr / 4; // byte offset -> uint32 offset\n        const index = HEAPU32[offset++];\n        const count = HEAPU32[offset++];\n        const captureIndices = [];\n        for (let i = 0; i < count; i++) {\n            const beg = string.convertUtf8OffsetToUtf16(HEAPU32[offset++]);\n            const end = string.convertUtf8OffsetToUtf16(HEAPU32[offset++]);\n            captureIndices[i] = {\n                start: beg,\n                end,\n                length: end - beg,\n            };\n        }\n        return {\n            index,\n            captureIndices,\n        };\n    }\n}\nfunction isInstantiatorOptionsObject(dataOrOptions) {\n    return (typeof dataOrOptions.instantiator === 'function');\n}\nfunction isInstantiatorModule(dataOrOptions) {\n    return (typeof dataOrOptions.default === 'function');\n}\nfunction isDataOptionsObject(dataOrOptions) {\n    return (typeof dataOrOptions.data !== 'undefined');\n}\nfunction isResponse(dataOrOptions) {\n    return (typeof Response !== 'undefined' && dataOrOptions instanceof Response);\n}\nfunction isArrayBuffer(data) {\n    return (typeof ArrayBuffer !== 'undefined' && (data instanceof ArrayBuffer || ArrayBuffer.isView(data)))\n        // eslint-disable-next-line node/prefer-global/buffer\n        || (typeof Buffer !== 'undefined' && Buffer.isBuffer?.(data))\n        || (typeof SharedArrayBuffer !== 'undefined' && data instanceof SharedArrayBuffer)\n        || (typeof Uint32Array !== 'undefined' && data instanceof Uint32Array);\n}\nlet initPromise;\nfunction loadWasm(options) {\n    if (initPromise)\n        return initPromise;\n    async function _load() {\n        onigBinding = await main(async (info) => {\n            let instance = options;\n            instance = await instance;\n            if (typeof instance === 'function')\n                instance = await instance(info);\n            if (typeof instance === 'function')\n                instance = await instance(info);\n            if (isInstantiatorOptionsObject(instance)) {\n                instance = await instance.instantiator(info);\n            }\n            else if (isInstantiatorModule(instance)) {\n                instance = await instance.default(info);\n            }\n            else {\n                if (isDataOptionsObject(instance))\n                    instance = instance.data;\n                if (isResponse(instance)) {\n                    if (typeof WebAssembly.instantiateStreaming === 'function')\n                        instance = await _makeResponseStreamingLoader(instance)(info);\n                    else\n                        instance = await _makeResponseNonStreamingLoader(instance)(info);\n                }\n                else if (isArrayBuffer(instance)) {\n                    instance = await _makeArrayBufferLoader(instance)(info);\n                }\n                // import(\"shiki/onig.wasm\") returns `{ default: WebAssembly.Module }` on cloudflare workers\n                // https://developers.cloudflare.com/workers/wrangler/bundling/\n                else if (instance instanceof WebAssembly.Module) {\n                    instance = await _makeArrayBufferLoader(instance)(info);\n                }\n                else if ('default' in instance && instance.default instanceof WebAssembly.Module) {\n                    instance = await _makeArrayBufferLoader(instance.default)(info);\n                }\n            }\n            if ('instance' in instance)\n                instance = instance.instance;\n            if ('exports' in instance)\n                instance = instance.exports;\n            return instance;\n        });\n    }\n    initPromise = _load();\n    return initPromise;\n}\nfunction _makeArrayBufferLoader(data) {\n    return importObject => WebAssembly.instantiate(data, importObject);\n}\nfunction _makeResponseStreamingLoader(data) {\n    return importObject => WebAssembly.instantiateStreaming(data, importObject);\n}\nfunction _makeResponseNonStreamingLoader(data) {\n    return async (importObject) => {\n        const arrayBuffer = await data.arrayBuffer();\n        return WebAssembly.instantiate(arrayBuffer, importObject);\n    };\n}\nfunction createOnigString(str) {\n    return new OnigString(str);\n}\nfunction createOnigScanner(patterns) {\n    return new OnigScanner(patterns);\n}\n\n/**\n * https://github.com/microsoft/vscode/blob/f7f05dee53fb33fe023db2e06e30a89d3094488f/src/vs/platform/theme/common/colorRegistry.ts#L258-L268\n */\nconst VSCODE_FALLBACK_EDITOR_FG = { light: '#333333', dark: '#bbbbbb' };\nconst VSCODE_FALLBACK_EDITOR_BG = { light: '#fffffe', dark: '#1e1e1e' };\nconst RESOLVED_KEY = '__shiki_resolved';\n/**\n * Normalize a textmate theme to shiki theme\n */\nfunction normalizeTheme(rawTheme) {\n    // @ts-expect-error private field\n    if (rawTheme?.[RESOLVED_KEY])\n        return rawTheme;\n    const theme = {\n        ...rawTheme,\n    };\n    // Fallback settings\n    if (theme.tokenColors && !theme.settings) {\n        theme.settings = theme.tokenColors;\n        delete theme.tokenColors;\n    }\n    theme.type ||= 'dark';\n    theme.colorReplacements = { ...theme.colorReplacements };\n    theme.settings ||= [];\n    // Guess fg/bg colors\n    let { bg, fg } = theme;\n    if (!bg || !fg) {\n        /**\n         * First try:\n         * Theme might contain a global `tokenColor` without `name` or `scope`\n         * Used as default value for foreground/background\n         */\n        const globalSetting = theme.settings\n            ? theme.settings.find((s) => !s.name && !s.scope)\n            : undefined;\n        if (globalSetting?.settings?.foreground)\n            fg = globalSetting.settings.foreground;\n        if (globalSetting?.settings?.background)\n            bg = globalSetting.settings.background;\n        /**\n         * Second try:\n         * If there's no global `tokenColor` without `name` or `scope`\n         * Use `editor.foreground` and `editor.background`\n         */\n        if (!fg && theme?.colors?.['editor.foreground'])\n            fg = theme.colors['editor.foreground'];\n        if (!bg && theme?.colors?.['editor.background'])\n            bg = theme.colors['editor.background'];\n        /**\n         * Last try:\n         * If there's no fg/bg color specified in theme, use default\n         */\n        if (!fg)\n            fg = theme.type === 'light' ? VSCODE_FALLBACK_EDITOR_FG.light : VSCODE_FALLBACK_EDITOR_FG.dark;\n        if (!bg)\n            bg = theme.type === 'light' ? VSCODE_FALLBACK_EDITOR_BG.light : VSCODE_FALLBACK_EDITOR_BG.dark;\n        theme.fg = fg;\n        theme.bg = bg;\n    }\n    // Push a no-scope setting with fallback colors\n    if (!(theme.settings[0] && theme.settings[0].settings && !theme.settings[0].scope)) {\n        theme.settings.unshift({\n            settings: {\n                foreground: theme.fg,\n                background: theme.bg,\n            },\n        });\n    }\n    // Push non-hex colors to color replacements, as `vscode-textmate` doesn't support them\n    let replacementCount = 0;\n    const replacementMap = new Map();\n    function getReplacementColor(value) {\n        if (replacementMap.has(value))\n            return replacementMap.get(value);\n        replacementCount += 1;\n        const hex = `#${replacementCount.toString(16).padStart(8, '0').toLowerCase()}`;\n        if (theme.colorReplacements?.[`#${hex}`]) // already exists\n            return getReplacementColor(value);\n        replacementMap.set(value, hex);\n        return hex;\n    }\n    theme.settings = theme.settings.map((setting) => {\n        const replaceFg = setting.settings?.foreground && !setting.settings.foreground.startsWith('#');\n        const replaceBg = setting.settings?.background && !setting.settings.background.startsWith('#');\n        if (!replaceFg && !replaceBg)\n            return setting;\n        const clone = {\n            ...setting,\n            settings: {\n                ...setting.settings,\n            },\n        };\n        if (replaceFg) {\n            const replacement = getReplacementColor(setting.settings.foreground);\n            theme.colorReplacements[replacement] = setting.settings.foreground;\n            clone.settings.foreground = replacement;\n        }\n        if (replaceBg) {\n            const replacement = getReplacementColor(setting.settings.background);\n            theme.colorReplacements[replacement] = setting.settings.background;\n            clone.settings.background = replacement;\n        }\n        return clone;\n    });\n    for (const key of Object.keys(theme.colors || {})) {\n        // Only patch for known keys\n        if (key === 'editor.foreground' || key === 'editor.background' || key.startsWith('terminal.ansi')) {\n            if (!theme.colors[key]?.startsWith('#')) {\n                const replacement = getReplacementColor(theme.colors[key]);\n                theme.colorReplacements[replacement] = theme.colors[key];\n                theme.colors[key] = replacement;\n            }\n        }\n    }\n    Object.defineProperty(theme, RESOLVED_KEY, {\n        enumerable: false,\n        writable: false,\n        value: true,\n    });\n    return theme;\n}\n\nclass Registry extends Registry$1 {\n    _resolver;\n    _themes;\n    _langs;\n    _alias;\n    _resolvedThemes = new Map();\n    _resolvedGrammars = new Map();\n    _langMap = new Map();\n    _langGraph = new Map();\n    _textmateThemeCache = new WeakMap();\n    _loadedThemesCache = null;\n    _loadedLanguagesCache = null;\n    constructor(_resolver, _themes, _langs, _alias = {}) {\n        super(_resolver);\n        this._resolver = _resolver;\n        this._themes = _themes;\n        this._langs = _langs;\n        this._alias = _alias;\n        _themes.forEach(t => this.loadTheme(t));\n        _langs.forEach(l => this.loadLanguage(l));\n    }\n    getTheme(theme) {\n        if (typeof theme === 'string')\n            return this._resolvedThemes.get(theme);\n        else\n            return this.loadTheme(theme);\n    }\n    loadTheme(theme) {\n        const _theme = normalizeTheme(theme);\n        if (_theme.name) {\n            this._resolvedThemes.set(_theme.name, _theme);\n            // Reset cache\n            this._loadedThemesCache = null;\n        }\n        return _theme;\n    }\n    getLoadedThemes() {\n        if (!this._loadedThemesCache)\n            this._loadedThemesCache = [...this._resolvedThemes.keys()];\n        return this._loadedThemesCache;\n    }\n    // Override and re-implement this method to cache the textmate themes as `TextMateTheme.createFromRawTheme`\n    // is expensive. Themes can switch often especially for dual-theme support.\n    //\n    // The parent class also accepts `colorMap` as the second parameter, but since we don't use that,\n    // we omit here so it's easier to cache the themes.\n    setTheme(theme) {\n        let textmateTheme = this._textmateThemeCache.get(theme);\n        if (!textmateTheme) {\n            textmateTheme = Theme.createFromRawTheme(theme);\n            this._textmateThemeCache.set(theme, textmateTheme);\n        }\n        // @ts-expect-error Access private `_syncRegistry`, but should work in runtime\n        this._syncRegistry.setTheme(textmateTheme);\n    }\n    getGrammar(name) {\n        if (this._alias[name]) {\n            const resolved = new Set([name]);\n            while (this._alias[name]) {\n                name = this._alias[name];\n                if (resolved.has(name))\n                    throw new ShikiError(`Circular alias \\`${Array.from(resolved).join(' -> ')} -> ${name}\\``);\n                resolved.add(name);\n            }\n        }\n        return this._resolvedGrammars.get(name);\n    }\n    async loadLanguage(lang) {\n        if (this.getGrammar(lang.name))\n            return;\n        const embeddedLazilyBy = new Set([...this._langMap.values()]\n            .filter(i => i.embeddedLangsLazy?.includes(lang.name)));\n        this._resolver.addLanguage(lang);\n        const grammarConfig = {\n            balancedBracketSelectors: lang.balancedBracketSelectors || ['*'],\n            unbalancedBracketSelectors: lang.unbalancedBracketSelectors || [],\n        };\n        // @ts-expect-error Private members, set this to override the previous grammar (that can be a stub)\n        this._syncRegistry._rawGrammars.set(lang.scopeName, lang);\n        const g = await this.loadGrammarWithConfiguration(lang.scopeName, 1, grammarConfig);\n        g.name = lang.name;\n        this._resolvedGrammars.set(lang.name, g);\n        if (lang.aliases) {\n            lang.aliases.forEach((alias) => {\n                this._alias[alias] = lang.name;\n            });\n        }\n        // Reset cache\n        this._loadedLanguagesCache = null;\n        // If there is a language that embeds this language lazily, we need to reload it\n        if (embeddedLazilyBy.size) {\n            for (const e of embeddedLazilyBy) {\n                this._resolvedGrammars.delete(e.name);\n                // Reset cache\n                this._loadedLanguagesCache = null;\n                // @ts-expect-error clear cache\n                this._syncRegistry?._injectionGrammars?.delete(e.scopeName);\n                // @ts-expect-error clear cache\n                this._syncRegistry?._grammars?.delete(e.scopeName);\n                await this.loadLanguage(this._langMap.get(e.name));\n            }\n        }\n    }\n    async init() {\n        this._themes.map(t => this.loadTheme(t));\n        await this.loadLanguages(this._langs);\n    }\n    dispose() {\n        super.dispose();\n        this._resolvedThemes.clear();\n        this._resolvedGrammars.clear();\n        this._langMap.clear();\n        this._langGraph.clear();\n        this._loadedThemesCache = null;\n    }\n    async loadLanguages(langs) {\n        for (const lang of langs)\n            this.resolveEmbeddedLanguages(lang);\n        const langsGraphArray = Array.from(this._langGraph.entries());\n        const missingLangs = langsGraphArray.filter(([_, lang]) => !lang);\n        if (missingLangs.length) {\n            const dependents = langsGraphArray\n                .filter(([_, lang]) => lang && lang.embeddedLangs?.some(l => missingLangs.map(([name]) => name).includes(l)))\n                .filter(lang => !missingLangs.includes(lang));\n            throw new ShikiError(`Missing languages ${missingLangs.map(([name]) => `\\`${name}\\``).join(', ')}, required by ${dependents.map(([name]) => `\\`${name}\\``).join(', ')}`);\n        }\n        for (const [_, lang] of langsGraphArray)\n            this._resolver.addLanguage(lang);\n        for (const [_, lang] of langsGraphArray)\n            await this.loadLanguage(lang);\n    }\n    getLoadedLanguages() {\n        if (!this._loadedLanguagesCache) {\n            this._loadedLanguagesCache = [\n                ...new Set([...this._resolvedGrammars.keys(), ...Object.keys(this._alias)]),\n            ];\n        }\n        return this._loadedLanguagesCache;\n    }\n    resolveEmbeddedLanguages(lang) {\n        this._langMap.set(lang.name, lang);\n        this._langGraph.set(lang.name, lang);\n        if (lang.embeddedLangs) {\n            for (const embeddedLang of lang.embeddedLangs)\n                this._langGraph.set(embeddedLang, this._langMap.get(embeddedLang));\n        }\n    }\n}\n\nclass Resolver {\n    _langs = new Map();\n    _scopeToLang = new Map();\n    _injections = new Map();\n    _onigLibPromise;\n    constructor(onigLibPromise, langs) {\n        this._onigLibPromise = onigLibPromise;\n        langs.forEach(i => this.addLanguage(i));\n    }\n    get onigLib() {\n        return this._onigLibPromise;\n    }\n    getLangRegistration(langIdOrAlias) {\n        return this._langs.get(langIdOrAlias);\n    }\n    async loadGrammar(scopeName) {\n        return this._scopeToLang.get(scopeName);\n    }\n    addLanguage(l) {\n        this._langs.set(l.name, l);\n        if (l.aliases) {\n            l.aliases.forEach((a) => {\n                this._langs.set(a, l);\n            });\n        }\n        this._scopeToLang.set(l.scopeName, l);\n        if (l.injectTo) {\n            l.injectTo.forEach((i) => {\n                if (!this._injections.get(i))\n                    this._injections.set(i, []);\n                this._injections.get(i).push(l.scopeName);\n            });\n        }\n    }\n    getInjections(scopeName) {\n        const scopeParts = scopeName.split('.');\n        let injections = [];\n        for (let i = 1; i <= scopeParts.length; i++) {\n            const subScopeName = scopeParts.slice(0, i).join('.');\n            injections = [...injections, ...(this._injections.get(subScopeName) || [])];\n        }\n        return injections;\n    }\n}\n\nlet _defaultWasmLoader;\n/**\n * Set the default wasm loader for `loadWasm`.\n * @internal\n */\nfunction setDefaultWasmLoader(_loader) {\n    _defaultWasmLoader = _loader;\n}\nlet instancesCount = 0;\n/**\n * Get the minimal shiki context for rendering.\n */\nasync function createShikiInternal(options = {}) {\n    instancesCount += 1;\n    if (options.warnings !== false && instancesCount >= 10 && instancesCount % 10 === 0)\n        console.warn(`[Shiki] ${instancesCount} instances have been created. Shiki is supposed to be used as a singleton, consider refactoring your code to cache your highlighter instance; Or call \\`highlighter.dispose()\\` to release unused instances.`);\n    let isDisposed = false;\n    async function normalizeGetter(p) {\n        return Promise.resolve(typeof p === 'function' ? p() : p).then(r => r.default || r);\n    }\n    async function resolveLangs(langs) {\n        return Array.from(new Set((await Promise.all(langs\n            .filter(l => !isSpecialLang(l))\n            .map(async (lang) => await normalizeGetter(lang).then(r => Array.isArray(r) ? r : [r])))).flat()));\n    }\n    const wasmLoader = options.loadWasm || _defaultWasmLoader;\n    const [themes, langs,] = await Promise.all([\n        Promise.all((options.themes || []).map(normalizeGetter)).then(r => r.map(normalizeTheme)),\n        resolveLangs(options.langs || []),\n        wasmLoader ? loadWasm(wasmLoader) : undefined,\n    ]);\n    const resolver = new Resolver(Promise.resolve({\n        createOnigScanner(patterns) {\n            return createOnigScanner(patterns);\n        },\n        createOnigString(s) {\n            return createOnigString(s);\n        },\n    }), langs);\n    const _registry = new Registry(resolver, themes, langs, options.langAlias);\n    await _registry.init();\n    let _lastTheme;\n    function getLanguage(name) {\n        ensureNotDisposed();\n        const _lang = _registry.getGrammar(typeof name === 'string' ? name : name.name);\n        if (!_lang)\n            throw new ShikiError(`Language \\`${name}\\` not found, you may need to load it first`);\n        return _lang;\n    }\n    function getTheme(name) {\n        if (name === 'none')\n            return { bg: '', fg: '', name: 'none', settings: [], type: 'dark' };\n        ensureNotDisposed();\n        const _theme = _registry.getTheme(name);\n        if (!_theme)\n            throw new ShikiError(`Theme \\`${name}\\` not found, you may need to load it first`);\n        return _theme;\n    }\n    function setTheme(name) {\n        ensureNotDisposed();\n        const theme = getTheme(name);\n        if (_lastTheme !== name) {\n            _registry.setTheme(theme);\n            _lastTheme = name;\n        }\n        const colorMap = _registry.getColorMap();\n        return {\n            theme,\n            colorMap,\n        };\n    }\n    function getLoadedThemes() {\n        ensureNotDisposed();\n        return _registry.getLoadedThemes();\n    }\n    function getLoadedLanguages() {\n        ensureNotDisposed();\n        return _registry.getLoadedLanguages();\n    }\n    async function loadLanguage(...langs) {\n        ensureNotDisposed();\n        await _registry.loadLanguages(await resolveLangs(langs));\n    }\n    async function loadTheme(...themes) {\n        ensureNotDisposed();\n        await Promise.all(themes.map(async (theme) => isSpecialTheme(theme)\n            ? null\n            : _registry.loadTheme(await normalizeGetter(theme))));\n    }\n    function ensureNotDisposed() {\n        if (isDisposed)\n            throw new ShikiError('Shiki instance has been disposed');\n    }\n    function dispose() {\n        if (isDisposed)\n            return;\n        isDisposed = true;\n        _registry.dispose();\n        instancesCount -= 1;\n    }\n    return {\n        setTheme,\n        getTheme,\n        getLanguage,\n        getLoadedThemes,\n        getLoadedLanguages,\n        loadLanguage,\n        loadTheme,\n        dispose,\n        [Symbol.dispose]: dispose,\n    };\n}\n/**\n * @deprecated Use `createShikiInternal` instead.\n */\nfunction getShikiInternal(options = {}) {\n    // TODO: next: console.warn('`getShikiInternal` is deprecated. Use `createShikiInternal` instead.')\n    return createShikiInternal(options);\n}\n\n/**\n * Create a Shiki core highlighter instance, with no languages or themes bundled.\n * Wasm and each language and theme must be loaded manually.\n *\n * @see http://shiki.style/guide/install#fine-grained-bundle\n */\nasync function createHighlighterCore(options = {}) {\n    const internal = await createShikiInternal(options);\n    return {\n        getLastGrammarState: (code, options) => getLastGrammarState(internal, code, options),\n        codeToTokensBase: (code, options) => codeToTokensBase(internal, code, options),\n        codeToTokensWithThemes: (code, options) => codeToTokensWithThemes(internal, code, options),\n        codeToTokens: (code, options) => codeToTokens(internal, code, options),\n        codeToHast: (code, options) => codeToHast(internal, code, options),\n        codeToHtml: (code, options) => codeToHtml(internal, code, options),\n        ...internal,\n        getInternalContext: () => internal,\n    };\n}\nfunction makeSingletonHighlighterCore(createHighlighter) {\n    let _shiki;\n    async function getSingletonHighlighterCore(options = {}) {\n        if (!_shiki) {\n            _shiki = createHighlighter({\n                ...options,\n                themes: options.themes || [],\n                langs: options.langs || [],\n            });\n            return _shiki;\n        }\n        else {\n            const s = await _shiki;\n            await Promise.all([\n                s.loadTheme(...(options.themes || [])),\n                s.loadLanguage(...(options.langs || [])),\n            ]);\n            return s;\n        }\n    }\n    return getSingletonHighlighterCore;\n}\nconst getSingletonHighlighterCore = /* @__PURE__ */ makeSingletonHighlighterCore(createHighlighterCore);\n/**\n * @deprecated Use `createHighlighterCore` or `getSingletonHighlighterCore` instead.\n */\n/* v8 ignore next 5 */\nfunction getHighlighterCore(options = {}) {\n    // TODO: next:  console.warn('`getHighlighterCore` is deprecated. Use `createHighlighterCore` or `getSingletonHighlighterCore` instead.')\n    return createHighlighterCore(options);\n}\n\n/**\n * Create a `createHighlighter` function with bundled themes and languages.\n *\n * @param bundledLanguages\n * @param bundledThemes\n * @param loadWasm\n */\nfunction createdBundledHighlighter(bundledLanguages, bundledThemes, loadWasm) {\n    async function createHighlighter(options) {\n        function resolveLang(lang) {\n            if (typeof lang === 'string') {\n                if (isSpecialLang(lang))\n                    return [];\n                const bundle = bundledLanguages[lang];\n                if (!bundle)\n                    throw new ShikiError(`Language \\`${lang}\\` is not included in this bundle. You may want to load it from external source.`);\n                return bundle;\n            }\n            return lang;\n        }\n        function resolveTheme(theme) {\n            if (isSpecialTheme(theme))\n                return 'none';\n            if (typeof theme === 'string') {\n                const bundle = bundledThemes[theme];\n                if (!bundle)\n                    throw new ShikiError(`Theme \\`${theme}\\` is not included in this bundle. You may want to load it from external source.`);\n                return bundle;\n            }\n            return theme;\n        }\n        const _themes = (options.themes ?? []).map(i => resolveTheme(i));\n        const langs = (options.langs ?? [])\n            .map(i => resolveLang(i));\n        const core = await createHighlighterCore({\n            ...options,\n            themes: _themes,\n            langs,\n            loadWasm,\n        });\n        return {\n            ...core,\n            loadLanguage(...langs) {\n                return core.loadLanguage(...langs.map(resolveLang));\n            },\n            loadTheme(...themes) {\n                return core.loadTheme(...themes.map(resolveTheme));\n            },\n        };\n    }\n    return createHighlighter;\n}\nfunction makeSingletonHighlighter(createHighlighter) {\n    let _shiki;\n    async function getSingletonHighlighter(options = {}) {\n        if (!_shiki) {\n            _shiki = createHighlighter({\n                ...options,\n                themes: options.themes || [],\n                langs: options.langs || [],\n            });\n            return _shiki;\n        }\n        else {\n            const s = await _shiki;\n            await Promise.all([\n                s.loadTheme(...(options.themes || [])),\n                s.loadLanguage(...(options.langs || [])),\n            ]);\n            return s;\n        }\n    }\n    return getSingletonHighlighter;\n}\nfunction createSingletonShorthands(createHighlighter) {\n    const getSingletonHighlighter = makeSingletonHighlighter(createHighlighter);\n    return {\n        getSingletonHighlighter(options) {\n            return getSingletonHighlighter(options);\n        },\n        async codeToHtml(code, options) {\n            const shiki = await getSingletonHighlighter({\n                langs: [options.lang],\n                themes: ('theme' in options ? [options.theme] : Object.values(options.themes)),\n            });\n            return shiki.codeToHtml(code, options);\n        },\n        async codeToHast(code, options) {\n            const shiki = await getSingletonHighlighter({\n                langs: [options.lang],\n                themes: ('theme' in options ? [options.theme] : Object.values(options.themes)),\n            });\n            return shiki.codeToHast(code, options);\n        },\n        async codeToTokens(code, options) {\n            const shiki = await getSingletonHighlighter({\n                langs: [options.lang],\n                themes: ('theme' in options ? [options.theme] : Object.values(options.themes)),\n            });\n            return shiki.codeToTokens(code, options);\n        },\n        async codeToTokensBase(code, options) {\n            const shiki = await getSingletonHighlighter({\n                langs: [options.lang],\n                themes: [options.theme],\n            });\n            return shiki.codeToTokensBase(code, options);\n        },\n        async codeToTokensWithThemes(code, options) {\n            const shiki = await getSingletonHighlighter({\n                langs: [options.lang],\n                themes: Object.values(options.themes).filter(Boolean),\n            });\n            return shiki.codeToTokensWithThemes(code, options);\n        },\n        async getLastGrammarState(code, options) {\n            const shiki = await getSingletonHighlighter({\n                langs: [options.lang],\n                themes: [options.theme],\n            });\n            return shiki.getLastGrammarState(code, options);\n        },\n    };\n}\n\nexport { FontStyle, ShikiError, addClassToHast, applyColorReplacements, codeToHast, codeToHtml, codeToTokens, codeToTokensBase, codeToTokensWithThemes, createHighlighterCore, createPositionConverter, createShikiInternal, createSingletonShorthands, createdBundledHighlighter, getHighlighterCore, getShikiInternal, getSingletonHighlighterCore, getTokenStyleObject, toHtml as hastToHtml, isNoneTheme, isPlainLang, isSpecialLang, isSpecialTheme, loadWasm, makeSingletonHighlighter, makeSingletonHighlighterCore, normalizeTheme, resolveColorReplacements, setDefaultWasmLoader, splitLines, splitToken, splitTokens, stringifyTokenStyle, toArray, tokenizeAnsiWithTheme, tokenizeWithTheme, tokensToHast, transformerDecorations };\n","import { bundledLanguages } from './langs.mjs';\nexport { bundledLanguagesAlias, bundledLanguagesBase, bundledLanguagesInfo } from './langs.mjs';\nimport { g as getWasmInlined } from './chunks/wasm-dynamic.mjs';\nimport { bundledThemes } from './themes.mjs';\nexport { bundledThemesInfo } from './themes.mjs';\nimport { createdBundledHighlighter, createSingletonShorthands } from '@shikijs/core';\nexport * from '@shikijs/core';\nexport { createCssVariablesTheme } from './theme-css-variables.mjs';\n\nconst createHighlighter = /* @__PURE__ */ createdBundledHighlighter(\n  bundledLanguages,\n  bundledThemes,\n  getWasmInlined\n);\nconst {\n  codeToHtml,\n  codeToHast,\n  codeToTokens,\n  codeToTokensBase,\n  codeToTokensWithThemes,\n  getSingletonHighlighter,\n  getLastGrammarState\n} = /* @__PURE__ */ createSingletonShorthands(\n  createHighlighter\n);\nconst getHighlighter = (options) => {\n  return createHighlighter(options);\n};\n\nexport { bundledLanguages, bundledThemes, codeToHast, codeToHtml, codeToTokens, codeToTokensBase, codeToTokensWithThemes, createHighlighter, getHighlighter, getLastGrammarState, getSingletonHighlighter, getWasmInlined };\n","import { Injectable } from '@angular/core';\nimport { createHighlighter, Highlighter } from 'shiki';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ShikiService {\n  private highlighter: Highlighter | undefined;\n\n  constructor() { }\n\n\n  // 初始化 Shiki 設定\n  async initShiki(langs: string[], themes: string[]) {\n    if (!this.highlighter) {\n      this.highlighter = await createHighlighter({\n        langs: langs,  // ['javascript']\n        themes: themes // ['github-dark']\n      });\n    }\n    return this.highlighter;\n  }\n\n  // 將程式段落加上高亮語法\n  async highlightCode(highlighter: Highlighter, code: string, language: string, theme: string) {\n    return highlighter.codeToHtml(code, {\n      lang: language,\n      theme: theme\n    });\n  }\n\n}\n","\n\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { ChatSingleCoversation } from '../interfaces';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GptService {\n  private apiUrl: string = 'https://api.openai.com/v1/chat/completions';\n  private apiKey: string = '';\n\n  constructor(\n    private http: HttpClient\n  ) {\n\n  }\n\n  // 取得 API 金鑰\n  getApiKeyForOpenAI(): string | null {\n    let apiKey: string | null = localStorage.getItem(\"myAI_OpenAI_ApiKey\");\n\n    if (apiKey) {\n      this.apiKey = apiKey;\n    } else {\n      alert(\"請輸入API金鑰！\");\n    };\n\n    return apiKey;\n  }\n\n\n\n  // 取得GPT回覆\n  getModelAnsFromOpenAI(messages: ChatSingleCoversation[]): Observable<any> {\n    //  檢查 API 金鑰\n    this.getApiKeyForOpenAI();\n\n    // 設定 HttpHeaders\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${this.apiKey}`,\n    });\n\n    // 設定傳送參數\n    const body = {\n      model: 'gpt-4o-2024-08-06',\n      messages: messages,\n      // [\n      //   //  預設的角色扮演訊息\n      //   {role: 'system', content: '你是一位專業的軟體工程師'},\n      //   { role: 'user', content: prompt },\n      // ],\n      max_tokens: 3000,\n      temperature: 0,\n    };\n\n    return this.http.post<any>(this.apiUrl, body, { headers });\n  }\n\n\n\n\n}\n\n","import { Component } from '@angular/core';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\n@Component({\n  selector: 'app-block-ui-dialog',\n  standalone: true,\n  imports: [MatProgressSpinnerModule],\n  templateUrl: './block-ui-dialog.component.html',\n  styleUrl: './block-ui-dialog.component.scss',\n})\nexport class BlockUiDialogComponent { }\n","<div class=\"block-ui\">\n  <div class=\"floating-block-ui\">\n    <mat-spinner></mat-spinner>\n    <!-- <p>正在處理，請稍候...</p> -->\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { BlockUiDialogComponent } from '../common-component/bolck-ui/block-ui-dialog.component';\n\n@Injectable({\n  providedIn: 'root' // 確保這個服務可以全局使用\n})\nexport class UiBlockService {\n  private dialogRef: MatDialogRef<BlockUiDialogComponent> | null = null;\n\n  constructor(\n    private dialog: MatDialog\n  ) { }\n\n  // 開啟 UI Block\n  addBlockUI(): void {\n    if (!this.dialogRef) {\n      this.dialogRef = this.dialog.open(BlockUiDialogComponent, {\n        disableClose: true, // 禁止用戶關閉\n        panelClass: 'block-ui-dialog' // 使用自定義樣式\n      });\n    }\n  }\n\n\n  // 關閉 UI Block\n  removeBlockUI(): void {\n    if (this.dialogRef) {\n      this.dialogRef.close();\n      this.dialogRef = null;\n    }\n  }\n}\n","<div class=\"container\">\n  <aside class=\"sidebar\" #sidebar id=\"sidebar\" [class.sidebarOpen]=\"isSidebarOpen\" [class.sidebarClose]=\"!isSidebarOpen\">\n\n    <!--—————————————————————————————— 左側欄 ——————————————————————————————-->\n    <div class=\"toggle-transition-box\" [class.sidebarClose]=\"!isSidebarOpen\">\n      <!-- 切換左側選單開合（目前為開） -->\n      <div class=\"sidebar-header\">\n        <button class=\"sidebar-button\" (click)=\"toggleSidebar()\"><i class=\"fas fa-exchange-alt\"></i></button>\n        <button class=\"sidebar-button\" (click)=\"addNewChat()\"><i class=\"fas fa-plus\"></i></button>\n      </div>\n\n\n      <!--———————————————— 左選單 ————————————————-->\n      <div class=\"chat-list-container\">\n        <div class=\"chat-list\">\n          <div class=\"chat-item\" *ngFor=\"let thread of myAIChatData\">\n            <span class=\"chat-tab\" (click)=\"checkHistoryThread(thread)\">{{ thread.title }}</span>\n            <div>\n              <i class=\"fas fa-trash cursor\" (click)=\"deleteThread(thread)\"></i>\n            </div>\n          </div>\n        </div>\n      </div>\n\n\n      <!--———————————————— 底部選單 ————————————————-->\n      <div class=\"sidebar-footer\">\n        底部區域\n      </div>\n    </div>\n  </aside>\n\n\n\n  <!--—————————————————————————————— 主內容 ——————————————————————————————-->\n  <div class=\"main-content\">\n    <!--———————————————— 置頂橫幅 ————————————————-->\n    <div class=\"top-bar\" [class.sidebarClose]=\"!isSidebarOpen\">\n      <!-- 切換左側選單開合（目前為關）  -->\n      <div class=\"top-bar-buttons\" *ngIf=\"!isSidebarOpen\">\n        <button class=\"sidebar-button\" (click)=\"toggleSidebar()\"><i class=\"fas fa-exchange-alt\"></i></button>\n        <button class=\"sidebar-button\" (click)=\"addNewChat()\"><i class=\"fas fa-plus\"></i></button>\n      </div>\n\n      <!-- 標題 -->\n      <div class=\"thread-title\">\n        <ng-container *ngIf=\"currentThreadData?.title\">\n          <div *ngIf=\"!isOpenRenameTitle\">\n            <span>{{currentThreadData.title}}</span>\n            <i class=\"fas fa-pen cursor m-l-10\" (click)=\"renameTitle()\"></i>\n          </div>\n          <div *ngIf=\"isOpenRenameTitle\">\n            <input class=\"new-title\" type=\"text\" [formControl]=\"newTitle\" placeholder=\"標題建議10字內\">\n            <i class=\"fas fa-check cursor m-l-10\" (click)=\"createNewTitle(newTitle['value']!)\"></i>\n          </div>\n        </ng-container>\n      </div>\n\n      <div class=\"dropdown\" (click)=\"toggleUserMenu()\">\n        <!-- 頭像 -->\n        <div class=\"user-avatar\" #userAvatar id=\"user-avatar\">\n          <i class=\"fas fa-user\"></i>\n        </div>\n\n        <!-- 頭像選單 -->\n        <div class=\"dropdown-content\" #userMenu id=\"user-menu\">\n          <a href=\"#\">首頁</a>\n          <a href=\"javascript:;\" (click)=\"openCusInstructionDialog()\">自訂指令</a>\n          <a href=\"#\">查看用量</a>\n          <a href=\"#\">登入</a>\n        </div>\n      </div>\n    </div>\n\n\n    <!--———————————————— 對話串 ————————————————-->\n    <div class=\"chat-container\" [class.sidebarClose]=\"!isSidebarOpen\">\n      <!-- 過往訊息 -->\n      <div class=\"chat-messages\">\n        @if(currentThreadData?.msgContents?.length){\n        <div class=\"message\" *ngFor=\"let message of currentThreadData!.msgContents\" [ngClass]=\"{'user-message': message.role === 'user', 'system-message': message.role === 'system'}\">\n          <div class=\"message-content\" [innerHTML]=\"getSanitizedHtml(message.content)\"></div>\n        </div>\n        }\n      </div>\n\n      <!-- 輸入框 -->\n      <div class=\"input-area\">\n        <textarea\n                  placeholder=\"輸入您的訊息...\"\n                  rows=\"1\"\n                  id=\"user-input\"\n                  [formControl]=\"userPromptText\"\n                  (compositionstart)=\"onCompositionStart()\"\n                  (compositionend)=\"onCompositionEnd()\"\n                  (keydown)=\"onEnterPress($event)\"></textarea>\n        <button id=\"send-button\" (click)=\"sendMessage()\">發送</button>\n      </div>\n\n    </div>\n  </div>\n</div>","import { CommonModule, isPlatformBrowser } from '@angular/common';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewChild, Inject, PLATFORM_ID } from '@angular/core';\nimport { FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ShikiService } from '../../../services/shiki.service';\nimport { Highlighter } from 'shiki';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { ChatHistoryCahce, ChatSingleCoversation } from '../../../interfaces';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { GptService } from '../../../services/gpt.service';\nimport { UiBlockService } from '../../../services/block-ui.service';\nimport { MarkdownModule, MarkdownService } from 'ngx-markdown';\nimport { MatDialog, MatDialogModule } from '@angular/material/dialog';\nimport { ChatInstructionDialogComponent } from './chatInstructionDialog/chat-instruction-dialog.component';\nimport { ChatService } from '../../../services/chat.service';\n\n@Component({\n  selector: 'app-chat',\n  standalone: true,\n  imports: [\n    CommonModule, ReactiveFormsModule, FormsModule,\n    MatProgressSpinnerModule, MarkdownModule,\n    MatDialogModule\n  ],\n  templateUrl: './chat.component.html',\n  styleUrl: './chat.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ChatComponent {\n  @ViewChild('userMenu') userMenu!: ElementRef;\n  @ViewChild('sidebar') sidebar!: ElementRef;\n\n  myAIChatData: ChatHistoryCahce[] = [];                                      // 資料- 全\n  currentThreadData: ChatHistoryCahce | any = undefined;                      // 資料- 當前頁籤訊息\n  isSidebarOpen: boolean = true;                                              // 左側欄\n  newTitle = new FormControl(\"\");                                             // 置頂橫幅- 標題名\n  isOpenRenameTitle: boolean = false;                                         // 置頂橫幅- 換標題\n  userPromptText: FormControl = new FormControl(\"\");                          // 輸入框\n  isComposing: boolean = false;                                               // 輸入框- 是否正在選字\n  highlighter!: Highlighter;                                                  // 程式碼版- 高亮初始設定\n  defaultCodeBoardLanguaged: string = \"typescript\";                           // 程式碼版- 預設語言\n\n  constructor(\n    private _shikiService: ShikiService,\n    private _gptService: GptService,\n    private _sanitizer: DomSanitizer,\n    private _uiBlockService: UiBlockService,\n    private _changeDetectorRef: ChangeDetectorRef,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    private _markdownService: MarkdownService,\n    private dialog: MatDialog,\n    private _chatService: ChatService\n  ) { }\n\n  async ngOnInit(): Promise<void> {\n    // 程式碼版- 高亮語法的初始設定\n    this.highlighter = await this._shikiService.initShiki(\n      [this.defaultCodeBoardLanguaged, 'bash', 'html', 'css', 'javascript', 'python'],\n      [\"github-dark\"]\n    );\n  }\n\n  ngAfterViewInit(): void {\n    // 延遲至瀏覽器環境初始完後執行\n    if (isPlatformBrowser(this.platformId)) {\n      this.currentThreadData = this.createCurrentThreadDafaultData();   // 資料- 初始化當前頁籤資料\n      this.myAIChatData = this.getMyAIChatDataFromCahce();              // 資料- 取得快取資料\n      this._changeDetectorRef.detectChanges();\n    };\n  }\n\n  ngAfterViewChecked(): void {\n    console.log('ngAfterViewChecked');\n\n    // 程式碼版- 複製事件監聽\n    this.copyCodeBoardEventListener();\n  }\n\n\n\n\n\n  // ———————————————————————————— 左側欄 ————————————————————————————\n  // 左側欄- 新增對話\n  addNewChat(): void {\n    console.log('addNewChat');\n\n    // 清空當前視窗訊息\n    this.currentThreadData = this.createCurrentThreadDafaultData();\n  }\n\n\n\n  // 左側欄- 切換左側欄\n  toggleSidebar(): void {\n    console.log('toggleSidebar');\n    this.isSidebarOpen = !this.isSidebarOpen;\n  }\n\n\n\n  // 左側欄- 檢視單筆頁籤\n  checkHistoryThread(data: ChatHistoryCahce): void {\n    this.currentThreadData = data;\n  }\n\n\n\n  // 左側欄- 刪除單筆頁籤\n  deleteThread(data: ChatHistoryCahce): void {\n    console.log('刪除單筆頁籤');\n\n    // 當前要面是不是要刪的訊息\n    if (data.threadId === this.currentThreadData.threadId) {\n      // 清空當前視窗訊息\n      this.currentThreadData = this.createCurrentThreadDafaultData();\n\n      // 更新資料- 畫面、暫存\n      this.updateDeleteData(data);\n\n    } else {\n      // 更新資料- 畫面、暫存\n      this.updateDeleteData(data);\n    };\n\n    this._changeDetectorRef.detectChanges();\n  }\n\n\n\n  // 左側欄- 刪除單筆頁籤（更新資料）\n  updateDeleteData(targetThreadData: ChatHistoryCahce): void {\n    // 更新畫面資料\n    const targetIdx = this.myAIChatData.findIndex(val => val.threadId === targetThreadData.threadId);\n    this.myAIChatData.splice(targetIdx, 1);\n\n    // 更新暫存資料\n    localStorage.setItem(\"myAIChatData\", JSON.stringify(this.myAIChatData));\n  }\n\n\n\n\n\n  // ———————————————————————————— 置頂橫幅 ————————————————————————————\n  // 置頂橫幅- 顯示選單(右上)\n  toggleUserMenu(): void {\n    console.log('toggleUserMenu');\n    this.userMenu.nativeElement.classList.toggle('show');\n  }\n\n\n\n  // 置頂橫幅- 開啟自訂指令\n  openCusInstructionDialog(): void {\n    const dialogRef = this.dialog.open(ChatInstructionDialogComponent, {\n      width: '600px',\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('彈窗關閉，回傳值:', result);\n    });\n  }\n\n\n\n  // 置頂橫幅- 重新命名頁籤名稱\n  renameTitle(): void {\n    this.isOpenRenameTitle = true;\n    this.newTitle.setValue(this.currentThreadData.title);\n  }\n\n\n\n  // 置頂橫幅- 重新命名頁籤名稱\n  createNewTitle(newTitle: string): void {\n    if (newTitle && (newTitle !== this.currentThreadData.title)) {\n      // 更新當前頁籤\n      this.currentThreadData.title = newTitle;\n\n      // 更新畫面資料\n      const targetIdx = this.myAIChatData.findIndex(val => val.threadId === this.currentThreadData.threadId)\n      this.myAIChatData[targetIdx].title = newTitle;\n\n      // 更新暫存資料\n      localStorage.setItem(\"myAIChatData\", JSON.stringify(this.myAIChatData));\n      this.newTitle.setValue(\"\");\n    };\n\n    this.isOpenRenameTitle = false;\n  }\n\n\n\n\n\n  // ———————————————————————————— 對話串 ————————————————————————————\n  // 排版- 處理文字排版、程式碼高亮語法\n  async formatGptApiRes(ApiRes: string): Promise<string> {\n    const codeBlockRegex = /```(\\w+)?\\n([\\s\\S]*?)```/g;       // 正則：全段內容、所用語言、程式碼段落\n    const allCodeBlockMatch = ApiRes.matchAll(codeBlockRegex);// 程式碼段落- 所有匹配到的程式碼段落\n    let afterFormattedRes = '';                               // 處理後的最終內容\n    let textIndex = 0;                                        // 普通文字的匹配起始位置\n\n    // 遍歷處理每個找到的程式碼段落\n    for (const match of allCodeBlockMatch) {\n      let [fullMatch, language, code] = match;                // 正則匹配到的全段內容、所用語言、程式碼段落\n      language = language || this.defaultCodeBoardLanguaged;  // 無匹配到語言則用預設程式語言(TS)\n\n      // 加入轉譯後的文字\n      afterFormattedRes += this._markdownService.parse(\n        ApiRes.slice(textIndex, match.index)\n      );\n      // NOTE:範圍是上次匹配到的程式碼結束位置，到這次匹配到的程式碼開始位置\n\n      // 加入高亮後的程式碼\n      afterFormattedRes += await this.getHighlightCode(code, language);\n\n      // 更新匹配位置\n      textIndex = match.index! + fullMatch.length;\n      // NOTE: lastIndex 為當前匹配結束的位置，以備下次切割普通文字\n    };\n\n    // 加入最後的轉譯文字\n    afterFormattedRes += this._markdownService.parse(\n      ApiRes.slice(textIndex)\n    );\n    // NOTE:匹配到最後的程式碼段落，其後的普通文字\n\n    return afterFormattedRes;\n  }\n\n\n\n  // 程式版- 取得進行高亮處理後的程式碼段落\n  async getHighlightCode(code: string, language: string): Promise<string> {\n    let managedCode: string = \"\";\n\n    // 使用 Shiki 進行語法高亮\n    const highlightedCode = await this._shikiService.highlightCode(this.highlighter, code, language, \"github-dark\");\n\n    const encodedCode = encodeURIComponent(code); // 編輯程式碼- 編成URL安全的格式\n\n    // 程式碼版的標頭(含所有語言、複製功能）\n    managedCode += `<div class=\"code-block-header\">\n                        <div class=\"code-language-label\">${language}</div>\n                        <span class=\"copy-text\" data-code=\"${encodedCode}\">\n                          <i class=\"fas fa-copy\"></i> 複製程式碼\n                        </span>\n                    </div>`;\n    managedCode += '<pre>\\n';                     // 空白行留空\n    managedCode += highlightedCode;               // 高亮語法主體\n    managedCode += '</pre>';\n\n    return managedCode;\n  }\n\n\n\n  // 程式版- 注入處力過的Html (繞過Angular保護機制)\n  getSanitizedHtml(highlightedCode: string): SafeHtml {\n    return this._sanitizer.bypassSecurityTrustHtml(highlightedCode);\n  }\n\n\n\n  // 程式版- 複製\n  copyCodeBoardEventListener(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      console.log(1, this.platformId, isPlatformBrowser(this.platformId))\n      const chatMessagesContainer = document.querySelector('.chat-messages');\n\n      if (chatMessagesContainer) {\n        console.log('chatMessagesContainer', chatMessagesContainer);\n        // 移除舊的事件監聽器\n        chatMessagesContainer?.removeEventListener('click', this.implementCopyCode);\n\n        // 添加新的事件監聽器\n        chatMessagesContainer?.addEventListener('click', this.implementCopyCode);\n      };\n    };\n  }\n\n\n\n  // 程式版- 複製(實作)\n  implementCopyCode = (event: Event) => {\n    const target = event.target as HTMLElement;\n    console.log('handleCopyClick target ', target);\n\n    if (target && target.closest('.copy-text')) {\n      console.log(33)\n      const encodedCode = target.getAttribute('data-code');\n      if (encodedCode) {\n        console.log(44);\n        const code = decodeURIComponent(encodedCode);\n        this.copySuccess(code);\n      };\n    }\n  };\n\n\n\n  // 程式版- 複製成功\n  copySuccess(code: string) {\n    navigator.clipboard.writeText(code).then(() => {\n      alert('複製成功!');\n    });\n  }\n\n\n\n\n\n  // ———————————————————————————— 輸入框 ————————————————————————————\n  // 輸入框- 送出訊息\n  sendMessage(): void {\n    const message = this.userPromptText.value;\n    let questionMsgContent: ChatSingleCoversation;\n\n    if (message) {\n      questionMsgContent = { role: 'user', content: message }\n\n      // 更新當前視窗畫面、資料\n      this.currentThreadData!.msgContents.push(questionMsgContent);\n      this.userPromptText.setValue(\"\");\n\n      // call API拿訊息\n      this.getOpenAiGptAnswer(this.currentThreadData.msgContents, questionMsgContent);\n    };\n  }\n\n\n\n  // 輸入框- 按下Enter\n  onEnterPress(event: KeyboardEvent) {\n    if (event.key === 'Enter') {\n      const inputElement = event.target as HTMLTextAreaElement;\n      event.preventDefault(); // 阻止預設的 enter 行為\n\n      // 排除正在進行選字\n      if (!this.isComposing) {\n        if (!event.shiftKey) {\n          // 按下enter，但沒有按住 Shift 鍵\n          this.sendMessage();                 // 送出訊息\n\n          // 還原高度\n          inputElement.style.height = \"auto\";\n\n        } else {\n          // 處理 Shift+Enter，僅當輸入框高度小於 250px 時增加高度\n          const currentHeight = inputElement.offsetHeight;\n          const neededHeight = inputElement.scrollHeight;\n\n          if (neededHeight > currentHeight && currentHeight < 250) {\n            // 增加高度，但不超過 250px\n            inputElement.style.height = `${Math.min(neededHeight, 250)}px`;\n          };\n\n          // 在輸入框內容中插入換行符\n          const cursorPosition = inputElement.selectionStart;\n          const textBeforeCursor = inputElement.value.substring(0, cursorPosition);\n          const textAfterCursor = inputElement.value.substring(cursorPosition);\n          inputElement.value = textBeforeCursor + \"\\n\" + textAfterCursor;\n\n          // 更新游標位置以放在插入的換行符後面\n          inputElement.selectionStart = cursorPosition + 1;\n          inputElement.selectionEnd = cursorPosition + 1;\n        };\n      };\n    };\n  }\n\n\n\n  // 輸入框- 捕獲到事件（開始）\n  onCompositionStart() {\n    this.isComposing = true; // 開始選字時設置為 true\n  }\n\n\n\n  // 輸入框- 捕獲到事件（結束）\n  onCompositionEnd() {\n    this.isComposing = false; // 選字結束時設置為 false\n  }\n\n\n\n\n\n  // ———————————————————————————— 資料 ————————————————————————————\n  // 資料- 取得快取資料\n  getMyAIChatDataFromCahce(): ChatHistoryCahce[] | [] {\n    let data: any = localStorage.getItem(\"myAIChatData\");\n\n    if (data) {\n      data = JSON.parse(data);\n\n    } else {\n      data = [];\n    };\n\n    return data;\n  }\n\n\n\n  // 資料- 存到暫存\n  saveToCahce(creatTimestamp: number, queAndAnsMsgContent: ChatSingleCoversation[]) {\n    console.log('saveToCahce 存到暫存');\n    if (this.currentThreadData.threadId) {\n      // ———————————————— 舊對話 ————————————————\n      this.myAIChatData.map((conversation) => {\n        // 找到該筆資料並更新對話紀錄\n        if (conversation.threadId === this.currentThreadData.threadId) {\n          // 更新對話紀錄與時間戳\n          const updataSingleThreadData: ChatHistoryCahce = {\n            ...conversation,\n            msgContents: [...conversation.msgContents, ...queAndAnsMsgContent], // 加入新的訊息\n            lastUpdateTime: this.generateTitleFromTimestamp(creatTimestamp)     // 更新時間戳為當前時間\n          };\n\n          return updataSingleThreadData;\n\n        } else {\n          return conversation;\n        };\n      });\n\n\n    } else {\n      // ———————————————— 新對話 ————————————————\n      let threadData: ChatHistoryCahce = {\n        threadId: this.generateNewUUID(),\n        tabSortIdx: 0,// ====後續再思考怎麼調整\n        title: this.generateTitleFromTimestamp(creatTimestamp),\n        msgContents: queAndAnsMsgContent,\n        createTime: this.generateTitleFromTimestamp(creatTimestamp),\n        lastUpdateTime: this.generateTitleFromTimestamp(creatTimestamp)\n      };\n\n      // 更新畫面資料\n      this.myAIChatData.unshift(threadData);// 放在第一筆\n      this.currentThreadData = threadData;\n      this._changeDetectorRef.detectChanges();\n    };\n\n    // 更新暫存資料\n    localStorage.setItem(\"myAIChatData\", JSON.stringify(this.myAIChatData));\n    console.log('myAIChatData', this.myAIChatData);\n  }\n\n\n\n  // 資料- 建立新頁籤資料結構\n  createCurrentThreadDafaultData(): ChatHistoryCahce {\n    let data: ChatHistoryCahce = {\n      threadId: \"\",\n      tabSortIdx: 0,\n      title: \"\",\n      msgContents: [],\n      createTime: \"\",\n      lastUpdateTime: \"\"\n    };\n\n    return data;\n  }\n\n\n\n  // 資料- 產生新對話流水號\n  generateNewUUID(): string {\n    return crypto.randomUUID();\n  }\n\n\n\n  // 資料- 取得時間戳記\n  generateTitleFromTimestamp(timestamp: number): string {\n    const date = new Date(timestamp * 1000); // UNIX 時間戳是以秒為單位，所以需要乘以 1000\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, '0'); // 月份從 0 開始，所以需要 +1\n    const day = String(date.getDate()).padStart(2, '0');\n    const hours = String(date.getHours()).padStart(2, '0');\n    const minutes = String(date.getMinutes()).padStart(2, '0');\n\n    return `${year}/${month}/${day} ${hours}:${minutes}`;\n  }\n\n\n\n\n\n  // ———————————————————————————— API ————————————————————————————\n  // API- 取得OpenAI回覆\n  getOpenAiGptAnswer(\n    passMsgContent: ChatSingleCoversation[],\n    questionMsgContent: ChatSingleCoversation\n  ): void {\n    const para = [\n      { role: \"system\", content: this._chatService.getInstructionCache() }, // 加入自訂指令\n      ...passMsgContent, questionMsgContent\n    ];\n\n    this._uiBlockService.addBlockUI();\n    this._gptService.getModelAnsFromOpenAI(para).subscribe(async res => {\n      console.log('getGptAnswer', res);\n\n      // 處理文字排版、高亮語法\n      const afterFormat = await this.formatGptApiRes(res.choices[res.choices.length - 1].message.content);\n      console.log('afterFormat ', afterFormat);\n\n      // 更新當前視窗畫面、資料\n      const answerMsgContent: ChatSingleCoversation = {\n        role: 'system',\n        content: afterFormat\n      };\n      this.currentThreadData!.msgContents.push(answerMsgContent);\n\n      // 存到暫存\n      this.saveToCahce(res.created, [questionMsgContent, answerMsgContent]);\n\n      this._changeDetectorRef.detectChanges();\n      this._uiBlockService.removeBlockUI();\n    });\n  }\n\n\n  fakeApiRes = {\n    title: \"假資料標題\",\n    exampleApiResText: \"不用下載程式碼即可使用：[MyAI線上版](https://chiawen81.github.io/MyAI/user/chat/index)\\n\\n#### 測試h4\\n### 測試h3\\n## 測試h2\\n# 測試h1\\n~~非常棒~~\\nMarkdown 是一種輕量級的標記語言，常用於格式化文本。以下是一些常用的 Markdown 語法：\\n\\n1. **標題**：\\n   - 使用 `#` 表示標題，`#` 的數量表示標題的層級。\\n     ```\\n     # 一級標題\\n     ## 二級標題\\n     ### 級標題\\n     ```\\n\\n2. **粗體**：\\n   - 使用 `**` 或 `__` 包圍文字。\\n ~~非常棒~~\\n    ```\\n     **粗體文字**\\n     __粗體文字__\\n     ```\\n\\n#### 測試h4\\n這裡是一段文字\\n### 測試h3\\n這裡是一段文字\\n## 測試h2\\n這裡是一段文字\\n# 測試h1\\n這裡是一段文字\\n\\n3. **斜體**：\\n   - 使用 `*` 或 `_` 包圍文字。\\n     ```\\n     *斜體文字*\\n     _斜體文字_\\n     ```\\n\\n4. **刪除線**：\\n   - 使用 `~~` 包圍文字。\\n     ```\\n     ~~刪除線文字~~\\n     ```\\n\\n5. **清單**：\\n   - 無序清單使用 `*`、`+` 或 `-`。\\n     ```\\n     * 項目一\\n     * 項目二\\n     ```\\n   - 有序清單使用數字加上 `.`。\\n     ```\\n     1. 第一項\\n     2. 第二項\\n     ```\\n\\n6. **連結**：\\n   - 使用 `[顯示文字](網址)`。\\n     ```\\n     [Google](https://www.google.com)\\n     ```\\n\\n7. **圖片**：\\n   - 使用 `![替代文字](圖片網址)`。\\n     ```\\n     ![示例圖片](https://example.com/image.jpg)\\n     ```\\n\\n8. **引用**：\\n   - 使用 `>`。\\n     ```\\n     > 這是一個引用\\n     ```\\n\\n\"\n  };\n\n\n  fakeApiRes2 = {\n    title: \"假資料標題\",\n    exampleApiResText: \"Angular 是一個流行的前端框架，用於構建動態的單頁應用程式（SPA）。在 Angular 中，Component 是構建應用程式的基本單位。每個 Component 都包含了 HTML 模板、CSS 樣式和 TypeScript 類，這些組成部分共同定義了應用程式的視圖和行為。\\n\\n### 如何使用 Angular Component\\n\\n1. **創建 Component**:\\n- 使用 Angular CLI 創建 Component 是最簡單的方法。你可以使用以下命令：\\n ```bash\\nng generate component component-name\\n```\\n- 這將創建一個新的目錄，包含四個文件：`component-name.component.ts`、`component-name.component.html`、`component-name.component.css` 和 `component-name.component.spec.ts`。\\n\\n2. **Component 類**:\\n- 在 `component-name.component.ts` 文件中，Component 類使用 `@Component` 裝飾器來定義。這個裝飾器包含了元數據，用於描述 Component 的行為。\\n- 例如：\\n```typescript\\nimport { Component } from '@angular/core';\\n\\n@Component({\\n  selector: 'app-component-name',\\n  templateUrl: './component-name.component.html',\\n  styleUrls: ['./component-name.component.css']\\n})\\nexport class ComponentNameComponent {\\n  // Component 的邏輯\\n}\\n```\\n\\n3. **模板和樣式**:\\n- `templateUrl` 指定了 HTML 模板的路徑，這是 Component 的視圖。\\n- `styleUrls` 是一個數組，包含了 CSS 樣式的路徑。\\n\\n4. **使用 Component**:\\n- 在其他模板中使用 Component 時，可以使用 `selector` 屬性中定義的選擇器。\\n- 例如，在 `app.component.html` 中使用：\\n```html\\n<app-component-name></app-component-name>\\n```\\n\\n### Component 的屬性\\n\\n1. **selector**:\\n- 定義了 Component 的選擇器，這是用於在模板中插入 Component 的標籤。\\n\\n2. **templateUrl / template**:\\n- `templateUrl` 是指向外部 HTML 文件的路徑。\\n- `template` 是內聯 HTML 字符串。\\n\\n3. **styleUrls / styles**:\\n- `styleUrls` 是一個數組，包含了外部 CSS 文件的路徑。\\n- `styles` 是內聯 CSS 字符串數組。\\n\\n4. **providers**:\\n- 用於定義在這個 Component 中可用的服務。\\n\\n5. **animations**:\\n- 定義了這個 Component 中使用的動畫。\\n\\n6. **changeDetection**:\\n- 設置變更檢測策略，默認是 `ChangeDetectionStrategy.Default`。\\n\\n7. **encapsulation**:\\n- 定義樣式封裝策略，選項包括 `ViewEncapsulation.Emulated`（默認）、`ViewEncapsulation.None` 和 `ViewEncapsulation.ShadowDom`。\\n\\n8. **inputs / outputs**:\\n- `inputs` 定義了可以從父 Component 傳入的屬性。\\n- `outputs` 定義了可以向父 Component 發送的事件。\\n\\n這些屬性和功能使得 Angular Component 成為構建複雜應用程式的強大工具。通過組合和重用 Component，你可以創建結構良好且可維護的應用程式。\"\n  };\n\n\n  fakeApiRes3 = {\n    title: \"假資料標題\",\n    exampleApiResText: \"在Angular中，依賴注入（Dependency Injection，簡稱DI）是一個核心概念，用於提供或\\\"注入\\\"組件和服務之間的依賴關係。Angular的依賴注入系統會為你提供所需的依賴項，例如服務或其他類別。\\n\\n要使用Angular的依賴注入系統，你通常會經歷以下步驟：\\n\\n1. **定義一個服務（Service）**：首先，建立一個服務類別，該類別包含你想要在應用程序中的其他部分使用的方法和屬性。\\n\\n```typescript\\nimport { Injectable } from '@angular/core';\\n\\n@Injectable({\\n  providedIn: 'root' // 這個服務是全域單例\\n})\\nexport class MyService {\\n  constructor() {}\\n\\n  doSomething() {\\n    // 這裡是你的邏輯\\n  }\\n}\\n```\\n\\n2. **注入服務到組件（Component）或其他服務中**：在組件或其他服務的建構函數中，通過參數列表來注入先前定義的服務。\\n\\n```typescript\\nimport { Component } from '@angular/core';\\nimport { MyService } from './my.service';\\n\\n@Component({\\n  selector: 'app-my-component',\\n  templateUrl: './my-component.component.html',\\n  styleUrls: ['./my-component.component.css']\\n})\\nexport class MyComponent {\\n  // MyService 會被Angular DI系統自動注入到這個組件中\\n  constructor(private myService: MyService) {}\\n\\n  useService() {\\n    // 使用注入的服務\\n    this.myService.doSomething();\\n  }\\n}\\n```\\n\\n在上面的程式碼中，`MyService` 是透過 `MyComponent` 的建構函數注入的。Angular會自動創建`MyService`的實例（如果尚未創建），並將其作為參數傳遞給組件的建構函數。\\n\\n這樣，你就可以在組件中使用`myService`實例來調用`doSomething`方法或其他方法。\\n\\n請注意，為了讓服務可以被注入，你必須在Angular模組中註冊它。在上面`@Injectable()`裝飾器中使用`providedIn: 'root'`，表示該服務是全局單例，它會自動註冊到根注入器中，這意味著你不需要在任何NgModule的`providers`陣列中再次註冊它。如果你希望將服務限制在特定模組或組件中使用，則可以在相應的NgModule或@Component的`providers`陣列中註冊該服務。\\n\\n這就是Angular依賴注入系統的基本用法。透過這種方式，Angular幫助我們保持組件和服務之間的解耦，並提高了代碼的可測試性和可維護性。\"\n  };\n\n\n  openInstructionDialog() {\n    const dialogRef = this.dialog.open(ChatInstructionDialogComponent, {\n      width: '500px'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        // 如果需要，可以在這裡處理儲存後的邏輯\n        console.log('Custom instruction saved:', result);\n      }\n    });\n  }\n\n}\n"],"x_google_ignoreList":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,35,36,37,38,39,40,41]}