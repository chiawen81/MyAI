{"version":3,"file":"2378.37fc4693a3c80cce.js","mappings":"0HACA,IAAIA,EAAO,CADEC,OAAOC,OAAO,CAAEC,YAAe,SAAUC,UAAa,GAAIC,KAAQ,OAAQC,SAAY,CAAC,CAAEC,QAAW,aAAe,CAAEC,MAAS,yBAA0BH,KAAQ,sBAAwB,CAAEG,MAAS,mCAAoCH,KAAQ,0BAA4B,CAAEG,MAAS,iBAAkBH,KAAQ,0BAA4B,CAAEG,MAAS,4FAA6FH,KAAQ,0BAA4B,CAAEG,MAAS,2BAA4BH,KAAQ,yBAA2B,CAAEG,MAAS,8CAA+CH,KAAQ,uBAAyB,CAAEG,MAAS,6BAA8BH,KAAQ,+BAAiC,CAAEI,MAAS,2HAA4HC,cAAiB,CAAE,EAAK,CAAEL,KAAQ,0CAA6CM,IAAO,mEAAoEN,KAAQ,+BAAgCC,SAAY,CAAC,CAAEC,QAAW,aAAe,CAAEA,QAAW,mBAAqB,CAAEC,MAAS,OAAU,CAAEA,MAAS,8fAA+fH,KAAQ,uBAAyB,CAAEI,MAAS,OAAQG,YAAe,oBAAqBD,IAAO,QAAU,CAAEF,MAAS,QAASC,cAAiB,CAAE,EAAK,CAAEL,KAAQ,wBAA2BM,IAAO,IAAKN,KAAQ,4BAA6BC,SAAY,CAAC,CAAEG,MAAS,QAASC,cAAiB,CAAE,EAAK,CAAEL,KAAQ,wBAA2BM,IAAO,QAASE,YAAe,CAAE,EAAK,CAAER,KAAQ,wBAA2BC,SAAY,CAAC,CAAEC,QAAW,WAAc,CAAEC,MAAS,mBAAmBH,KAAQ,mCAAqC,CAAEG,MAAS,8BAA+BH,KAAQ,mCAAqC,CAAEG,MAAS,oDAAqDH,KAAQ,qCAAwC,CAAEI,MAAS,IAAKE,IAAO,IAAKN,KAAQ,6BAA8BC,SAAY,CAAC,CAAEE,MAAS,mBAAmBH,KAAQ,mCAAqC,CAAEG,MAAS,8BAA+BH,KAAQ,mCAAqC,CAAEG,MAAS,oDAAqDH,KAAQ,qCAAwC,CAAEG,MAAS,qBAAsBH,KAAQ,2BAA6B,CAAEG,MAAS,aAAcH,KAAQ,8BAAgC,CAAES,SAAY,CAAE,EAAK,CAAET,KAAQ,oCAAuCG,MAAS,oFAAqFH,KAAQ,8BAAgC,CAAEG,MAAS,gBAAiBH,KAAQ,qBAAuB,CAAEG,MAAS,uFAAwFH,KAAQ,2BAA6BU,WAAc,CAAEC,aAAgB,CAAEP,MAAS,KAAME,IAAO,KAAMN,KAAQ,sBAAuBC,SAAY,CAAC,CAAEC,QAAW,yBAA2B,CAAEA,QAAW,mBAAsBU,SAAY,CAAEX,SAAY,CAAC,CAAEC,QAAW,gBAAkB,CAAEA,QAAW,eAAiB,CAAEA,QAAW,gBAAkB,CAAEA,QAAW,kBAAoB,CAAEA,QAAW,mBAAsBW,YAAe,CAAET,MAAS,KAAME,IAAO,IAAKN,KAAQ,iCAAkCC,SAAY,CAAC,CAAEC,QAAW,2BAA8BY,eAAkB,CAAEb,SAAY,CAAC,CAAEE,MAAS,6FAA8FH,KAAQ,8BAAgC,CAAEI,MAAS,OAAQG,YAAe,6BAA8BD,IAAO,UAAaS,WAAc,CAAEX,MAAS,MAAOE,IAAO,KAAMN,KAAQ,oCAAqCC,SAAY,CAAC,CAAEC,QAAW,yBAA2B,CAAEA,QAAW,mBAAsBc,cAAiB,CAAEZ,MAAS,MAAOE,IAAO,KAAMN,KAAQ,oCAAqCC,SAAY,CAAC,CAAEC,QAAW,yBAA2B,CAAEA,QAAW,oBAAwBe,UAAa,eAAgBC,QAAW,CAAC","names":["lean","Object","freeze","displayName","fileTypes","name","patterns","include","match","begin","beginCaptures","end","contentName","endCaptures","captures","repository","blockComment","comments","dashComment","definitionName","docComment","modDocComment","scopeName","aliases"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./node_modules/shiki/dist/langs/lean.mjs"],"sourcesContent":["const lang = Object.freeze({ \"displayName\": \"Lean 4\", \"fileTypes\": [], \"name\": \"lean\", \"patterns\": [{ \"include\": \"#comments\" }, { \"match\": \"\\\\b(Prop|Type|Sort)\\\\b\", \"name\": \"storage.type.lean4\" }, { \"match\": \"\\\\battribute\\\\b\\\\s*\\\\[[^\\\\]]*\\\\]\", \"name\": \"storage.modifier.lean4\" }, { \"match\": \"@\\\\[[^\\\\]]*\\\\]\", \"name\": \"storage.modifier.lean4\" }, { \"match\": \"\\\\b(?<!\\\\.)(global|local|scoped|partial|unsafe|private|protected|noncomputable)(?!\\\\.)\\\\b\", \"name\": \"storage.modifier.lean4\" }, { \"match\": \"\\\\b(sorry|admit|stop)\\\\b\", \"name\": \"invalid.illegal.lean4\" }, { \"match\": \"#(print|eval|reduce|check|check_failure)\\\\b\", \"name\": \"keyword.other.lean4\" }, { \"match\": \"\\\\bderiving\\\\s+instance\\\\b\", \"name\": \"keyword.other.command.lean4\" }, { \"begin\": \"\\\\b(?<!\\\\.)(inductive|coinductive|structure|theorem|axiom|abbrev|lemma|def|instance|class|constant)\\\\b\\\\s+(\\\\{[^}]*\\\\})?\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.other.definitioncommand.lean4\" } }, \"end\": \"(?=\\\\bwith\\\\b|\\\\bextends\\\\b|\\\\bwhere\\\\b|[:\\\\|\\\\(\\\\[\\\\{\\u2983<>])\", \"name\": \"meta.definitioncommand.lean4\", \"patterns\": [{ \"include\": \"#comments\" }, { \"include\": \"#definitionName\" }, { \"match\": \",\" }] }, { \"match\": \"\\\\b(?<!\\\\.)(theorem|show|have|from|suffices|nomatch|def|class|structure|instance|set_option|initialize|builtin_initialize|example|inductive|coinductive|axiom|constant|universe|universes|variable|variables|import|open|export|theory|prelude|renaming|hiding|exposing|do|by|let|extends|mutual|mut|where|rec|syntax|macro_rules|macro|deriving|fun|section|namespace|end|infix|infixl|infixr|postfix|prefix|notation|abbrev|if|then|else|calc|match|with|for|in|unless|try|catch|finally|return|continue|break)(?!\\\\.)\\\\b\", \"name\": \"keyword.other.lean4\" }, { \"begin\": \"\\xAB\", \"contentName\": \"entity.name.lean4\", \"end\": \"\\xBB\" }, { \"begin\": '(s!)\"', \"beginCaptures\": { \"1\": { \"name\": \"keyword.other.lean4\" } }, \"end\": '\"', \"name\": \"string.interpolated.lean4\", \"patterns\": [{ \"begin\": \"(\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.other.lean4\" } }, \"end\": \"(\\\\})\", \"endCaptures\": { \"1\": { \"name\": \"keyword.other.lean4\" } }, \"patterns\": [{ \"include\": \"$self\" }] }, { \"match\": `\\\\\\\\[\\\\\\\\\"ntr']`, \"name\": \"constant.character.escape.lean4\" }, { \"match\": \"\\\\\\\\x[0-9A-Fa-f][0-9A-Fa-f]\", \"name\": \"constant.character.escape.lean4\" }, { \"match\": \"\\\\\\\\u[0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f]\", \"name\": \"constant.character.escape.lean4\" }] }, { \"begin\": '\"', \"end\": '\"', \"name\": \"string.quoted.double.lean4\", \"patterns\": [{ \"match\": `\\\\\\\\[\\\\\\\\\"ntr']`, \"name\": \"constant.character.escape.lean4\" }, { \"match\": \"\\\\\\\\x[0-9A-Fa-f][0-9A-Fa-f]\", \"name\": \"constant.character.escape.lean4\" }, { \"match\": \"\\\\\\\\u[0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f]\", \"name\": \"constant.character.escape.lean4\" }] }, { \"match\": \"\\\\b(true|false)\\\\b\", \"name\": \"constant.language.lean4\" }, { \"match\": \"'[^\\\\\\\\']'\", \"name\": \"string.quoted.single.lean4\" }, { \"captures\": { \"1\": { \"name\": \"constant.character.escape.lean4\" } }, \"match\": \"'(\\\\\\\\(x[0-9A-Fa-f][0-9A-Fa-f]|u[0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f]|.))'\", \"name\": \"string.quoted.single.lean4\" }, { \"match\": \"`+[^\\\\[(]\\\\S+\", \"name\": \"entity.name.lean4\" }, { \"match\": \"\\\\b([0-9]+|0([xX][0-9a-fA-F]+)|[-]?(0|[1-9][0-9]*)(\\\\.[0-9]+)?([eE][+-]?[0-9]+)?)\\\\b\", \"name\": \"constant.numeric.lean4\" }], \"repository\": { \"blockComment\": { \"begin\": \"/-\", \"end\": \"-/\", \"name\": \"comment.block.lean4\", \"patterns\": [{ \"include\": \"source.lean4.markdown\" }, { \"include\": \"#blockComment\" }] }, \"comments\": { \"patterns\": [{ \"include\": \"#dashComment\" }, { \"include\": \"#docComment\" }, { \"include\": \"#stringBlock\" }, { \"include\": \"#modDocComment\" }, { \"include\": \"#blockComment\" }] }, \"dashComment\": { \"begin\": \"--\", \"end\": \"$\", \"name\": \"comment.line.double-dash.lean4\", \"patterns\": [{ \"include\": \"source.lean4.markdown\" }] }, \"definitionName\": { \"patterns\": [{ \"match\": \"\\\\b[^:\\xAB\\xBB\\\\(\\\\)\\\\{\\\\}[:space:]=\\u2192\\u03BB\\u2200?][^:\\xAB\\xBB\\\\(\\\\)\\\\{\\\\}[:space:]]*\", \"name\": \"entity.name.function.lean4\" }, { \"begin\": \"\\xAB\", \"contentName\": \"entity.name.function.lean4\", \"end\": \"\\xBB\" }] }, \"docComment\": { \"begin\": \"/--\", \"end\": \"-/\", \"name\": \"comment.block.documentation.lean4\", \"patterns\": [{ \"include\": \"source.lean4.markdown\" }, { \"include\": \"#blockComment\" }] }, \"modDocComment\": { \"begin\": \"/-!\", \"end\": \"-/\", \"name\": \"comment.block.documentation.lean4\", \"patterns\": [{ \"include\": \"source.lean4.markdown\" }, { \"include\": \"#blockComment\" }] } }, \"scopeName\": \"source.lean4\", \"aliases\": [\"lean4\"] });\nvar lean = [\n  lang\n];\n\nexport { lean as default };\n"],"x_google_ignoreList":[0]}