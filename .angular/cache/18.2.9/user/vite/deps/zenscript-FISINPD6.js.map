{
  "version": 3,
  "sources": ["../../../../../../node_modules/shiki/dist/langs/zenscript.mjs"],
  "sourcesContent": ["const lang = Object.freeze({\n  \"displayName\": \"ZenScript\",\n  \"fileTypes\": [\"zs\"],\n  \"name\": \"zenscript\",\n  \"patterns\": [{\n    \"comment\": \"numbers\",\n    \"match\": \"\\\\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\\\\.?[0-9]*)|(\\\\.[0-9]+))((e|E)(\\\\+|-)?[0-9]+)?)([LlFfUuDd]|UL|ul)?\\\\b\",\n    \"name\": \"constant.numeric.zenscript\"\n  }, {\n    \"comment\": \"prefixedNumbers\",\n    \"match\": \"\\\\b\\\\-?(0b|0x|0o|0B|0X|0O)(0|[1-9a-fA-F][0-9a-fA-F_]*)[a-zA-Z_]*\\\\b\",\n    \"name\": \"constant.numeric.zenscript\"\n  }, {\n    \"include\": \"#code\"\n  }, {\n    \"comment\": \"arrays\",\n    \"match\": \"\\\\b((?:[a-z]\\\\w*\\\\.)*[A-Z]+\\\\w*)(?=\\\\[)\",\n    \"name\": \"storage.type.object.array.zenscript\"\n  }],\n  \"repository\": {\n    \"brackets\": {\n      \"patterns\": [{\n        \"captures\": {\n          \"1\": {\n            \"name\": \"keyword.control.zenscript\"\n          },\n          \"2\": {\n            \"name\": \"keyword.other.zenscript\"\n          },\n          \"3\": {\n            \"name\": \"keyword.control.zenscript\"\n          },\n          \"4\": {\n            \"name\": \"variable.other.zenscript\"\n          },\n          \"5\": {\n            \"name\": \"keyword.control.zenscript\"\n          },\n          \"6\": {\n            \"name\": \"constant.numeric.zenscript\"\n          },\n          \"7\": {\n            \"name\": \"keyword.control.zenscript\"\n          }\n        },\n        \"comment\": \"items and blocks\",\n        \"match\": \"(<)\\\\b(.*?)(:(.*?(:(\\\\*|\\\\d+)?)?)?)(>)\",\n        \"name\": \"keyword.other.zenscript\"\n      }]\n    },\n    \"class\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"storage.type.zenscript\"\n        },\n        \"2\": {\n          \"name\": \"entity.name.type.class.zenscript\"\n        }\n      },\n      \"comment\": \"class\",\n      \"match\": \"(zenClass)\\\\s+(\\\\w+)\",\n      \"name\": \"meta.class.zenscript\"\n    },\n    \"code\": {\n      \"patterns\": [{\n        \"include\": \"#class\"\n      }, {\n        \"include\": \"#functions\"\n      }, {\n        \"include\": \"#dots\"\n      }, {\n        \"include\": \"#quotes\"\n      }, {\n        \"include\": \"#brackets\"\n      }, {\n        \"include\": \"#comments\"\n      }, {\n        \"include\": \"#var\"\n      }, {\n        \"include\": \"#keywords\"\n      }, {\n        \"include\": \"#constants\"\n      }, {\n        \"include\": \"#operators\"\n      }]\n    },\n    \"comments\": {\n      \"patterns\": [{\n        \"comment\": \"inline comments\",\n        \"match\": \"//[^\\n]*\",\n        \"name\": \"comment.line.double=slash\"\n      }, {\n        \"begin\": \"\\\\/\\\\*\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"comment.block\"\n          }\n        },\n        \"comment\": \"block comments\",\n        \"end\": \"\\\\*\\\\/\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"comment.block\"\n          }\n        },\n        \"name\": \"comment.block\"\n      }]\n    },\n    \"dots\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"storage.type.zenscript\"\n        },\n        \"2\": {\n          \"name\": \"keyword.control.zenscript\"\n        },\n        \"5\": {\n          \"name\": \"keyword.control.zenscript\"\n        }\n      },\n      \"comment\": \"dots\",\n      \"match\": \"\\\\b(\\\\w+)(\\\\.)(\\\\w+)((\\\\.)(\\\\w+))*\",\n      \"name\": \"plain.text.zenscript\"\n    },\n    \"functions\": {\n      \"captures\": {\n        \"0\": {\n          \"name\": \"storage.type.function.zenscript\"\n        },\n        \"1\": {\n          \"name\": \"entity.name.function.zenscript\"\n        }\n      },\n      \"comment\": \"functions\",\n      \"match\": \"function\\\\s+([A-Za-z_$][\\\\w$]*)\\\\s*(?=\\\\()\",\n      \"name\": \"meta.function.zenscript\"\n    },\n    \"keywords\": {\n      \"patterns\": [{\n        \"comment\": \"statement keywords\",\n        \"match\": \"\\\\b(instanceof|get|implements|set|import|function|override|const|if|else|do|while|for|throw|panic|lock|try|catch|finally|return|break|continue|switch|case|default|in|is|as|match|throws|super|new)\\\\b\",\n        \"name\": \"keyword.control.zenscript\"\n      }, {\n        \"comment\": \"storage keywords\",\n        \"match\": \"\\\\b(zenClass|zenConstructor|alias|class|interface|enum|struct|expand|variant|set|void|bool|byte|sbyte|short|ushort|int|uint|long|ulong|usize|float|double|char|string)\\\\b\",\n        \"name\": \"storage.type.zenscript\"\n      }, {\n        \"comment\": \"modifier keywords\",\n        \"match\": \"\\\\b(variant|abstract|final|private|public|export|internal|static|protected|implicit|virtual|extern|immutable)\\\\b\",\n        \"name\": \"storage.modifier.zenscript\"\n      }, {\n        \"comment\": \"annotation keywords\",\n        \"match\": \"\\\\b(Native|Precondition)\\\\b\",\n        \"name\": \"entity.other.attribute-name\"\n      }, {\n        \"comment\": \"language keywords\",\n        \"match\": \"\\\\b(null|true|false)\\\\b\",\n        \"name\": \"constant.language\"\n      }]\n    },\n    \"operators\": {\n      \"patterns\": [{\n        \"comment\": \"math operators\",\n        \"match\": \"\\\\b(\\\\.|\\\\.\\\\.|\\\\.\\\\.\\\\.|,|\\\\+|\\\\+=|\\\\+\\\\+|-|-=|--|~|~=|\\\\*|\\\\*=|/|/=|%|%=|\\\\||\\\\|=|\\\\|\\\\||&|&=|&&|\\\\^|\\\\^=|\\\\?|\\\\?\\\\.|\\\\?\\\\?|<|<=|<<|<<=|>|>=|>>|>>=|>>>|>>>=|=>|=|==|===|!|!=|!==|\\\\$|`)\\\\b\",\n        \"name\": \"keyword.control\"\n      }, {\n        \"comment\": \"colons\",\n        \"match\": \"\\\\b(;|:)\\\\b\",\n        \"name\": \"keyword.control\"\n      }]\n    },\n    \"quotes\": {\n      \"patterns\": [{\n        \"begin\": '\"',\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.begin.zenscript\"\n          }\n        },\n        \"end\": '\"',\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.end.zenscript\"\n          }\n        },\n        \"name\": \"string.quoted.double.zenscript\",\n        \"patterns\": [{\n          \"match\": \"\\\\\\\\.\",\n          \"name\": \"constant.character.escape.zenscript\"\n        }]\n      }, {\n        \"begin\": \"'\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.begin.zenscript\"\n          }\n        },\n        \"end\": \"'\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.end.zenscript\"\n          }\n        },\n        \"name\": \"string.quoted.single.zenscript\",\n        \"patterns\": [{\n          \"match\": \"\\\\\\\\.\",\n          \"name\": \"constant.character.escape.zenscript\"\n        }]\n      }]\n    },\n    \"var\": {\n      \"comment\": \"var\",\n      \"match\": \"\\\\b(val|var)\\\\b\",\n      \"name\": \"storage.type\"\n    }\n  },\n  \"scopeName\": \"source.zenscript\"\n});\nvar zenscript = [lang];\nexport { zenscript as default };"],
  "mappings": "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",
  "names": []
}
