{
  "version": 3,
  "sources": ["../../../../../../node_modules/shiki/dist/langs/cypher.mjs"],
  "sourcesContent": ["const lang = Object.freeze({\n  \"displayName\": \"Cypher\",\n  \"fileTypes\": [\"cql\", \"cyp\", \"cypher\"],\n  \"name\": \"cypher\",\n  \"patterns\": [{\n    \"include\": \"#comments\"\n  }, {\n    \"include\": \"#constants\"\n  }, {\n    \"include\": \"#keywords\"\n  }, {\n    \"include\": \"#functions\"\n  }, {\n    \"include\": \"#path-patterns\"\n  }, {\n    \"include\": \"#operators\"\n  }, {\n    \"include\": \"#identifiers\"\n  }, {\n    \"include\": \"#properties_literal\"\n  }, {\n    \"include\": \"#numbers\"\n  }, {\n    \"include\": \"#strings\"\n  }],\n  \"repository\": {\n    \"comments\": {\n      \"patterns\": [{\n        \"match\": \"//.*$\\\\n?\",\n        \"name\": \"comment.line.double-slash.cypher\"\n      }]\n    },\n    \"constants\": {\n      \"patterns\": [{\n        \"match\": \"(?i)\\\\bTRUE|FALSE\\\\b\",\n        \"name\": \"constant.language.bool.cypher\"\n      }, {\n        \"match\": \"(?i)\\\\bNULL\\\\b\",\n        \"name\": \"constant.language.missing.cypher\"\n      }]\n    },\n    \"functions\": {\n      \"patterns\": [{\n        \"comment\": \"List of Cypher built-in functions from http://docs.neo4j.org/chunked/milestone/query-function.html\",\n        \"match\": \"(?i)\\\\b((NOT)(?=\\\\s*\\\\()|IS\\\\s+NULL|IS\\\\s+NOT\\\\s+NULL)\",\n        \"name\": \"keyword.control.function.boolean.cypher\"\n      }, {\n        \"comment\": \"List of Cypher built-in functions from http://docs.neo4j.org/chunked/milestone/query-function.html\",\n        \"match\": \"(?i)\\\\b(ALL|ANY|NONE|SINGLE)(?=\\\\s*\\\\()\",\n        \"name\": \"support.function.predicate.cypher\"\n      }, {\n        \"comment\": \"List of Cypher built-in functions from http://docs.neo4j.org/chunked/milestone/query-function.html\",\n        \"match\": \"(?i)\\\\b(LENGTH|TYPE|ID|COALESCE|HEAD|LAST|TIMESTAMP|STARTNODE|ENDNODE|TOINT|TOFLOAT)(?=\\\\s*\\\\()\",\n        \"name\": \"support.function.scalar.cypher\"\n      }, {\n        \"comment\": \"List of Cypher built-in functions from http://docs.neo4j.org/chunked/milestone/query-function.html\",\n        \"match\": \"(?i)\\\\b(NODES|RELATIONSHIPS|LABELS|EXTRACT|FILTER|TAIL|RANGE|REDUCE)(?=\\\\s*\\\\()\",\n        \"name\": \"support.function.collection.cypher\"\n      }, {\n        \"comment\": \"List of Cypher built-in functions from http://docs.neo4j.org/chunked/milestone/query-function.html\",\n        \"match\": \"(?i)\\\\b(ABS|ACOS|ASIN|ATAN|ATAN2|COS|COT|DEGREES|E|EXP|FLOOR|HAVERSIN|LOG|LOG10|PI|RADIANS|RAND|ROUND|SIGN|SIN|SQRT|TAN)(?=\\\\s*\\\\()\",\n        \"name\": \"support.function.math.cypher\"\n      }, {\n        \"comment\": \"List of Cypher built-in functions from http://docs.neo4j.org/chunked/milestone/query-function.html\",\n        \"match\": \"(?i)\\\\b(COUNT|sum|avg|max|min|stdev|stdevp|percentileDisc|percentileCont|collect)(?=\\\\s*\\\\()\",\n        \"name\": \"support.function.aggregation.cypher\"\n      }, {\n        \"comment\": \"List of Cypher built-in functions from http://docs.neo4j.org/chunked/milestone/query-function.html\",\n        \"match\": \"(?i)\\\\b(STR|REPLACE|SUBSTRING|LEFT|RIGHT|LTRIM|RTRIM|TRIM|LOWER|UPPER|SPLIT)(?=\\\\s*\\\\()\",\n        \"name\": \"support.function.string.cypher\"\n      }]\n    },\n    \"identifiers\": {\n      \"patterns\": [{\n        \"match\": \"`.+?`\",\n        \"name\": \"variable.other.quoted-identifier.cypher\"\n      }, {\n        \"match\": \"[\\\\p{L}_][\\\\p{L}0-9_]*\",\n        \"name\": \"variable.other.identifier.cypher\"\n      }]\n    },\n    \"keywords\": {\n      \"patterns\": [{\n        \"match\": \"(?i)\\\\b(START|MATCH|WHERE|RETURN|UNION|FOREACH|WITH|AS|LIMIT|SKIP|UNWIND|HAS|DISTINCT|OPTIONAL\\\\\\\\s+MATCH|ORDER\\\\s+BY|CALL|YIELD)\\\\b\",\n        \"name\": \"keyword.control.clause.cypher\"\n      }, {\n        \"match\": \"(?i)\\\\b(ELSE|END|THEN|CASE|WHEN)\\\\b\",\n        \"name\": \"keyword.control.case.cypher\"\n      }, {\n        \"match\": \"(?i)\\\\b(FIELDTERMINATOR|USING\\\\s+PERIODIC\\\\s+COMMIT|HEADERS|LOAD\\\\s+CSV|FROM)\\\\b\",\n        \"name\": \"keyword.data.import.cypher\"\n      }, {\n        \"match\": \"(?i)\\\\b(USING\\\\s+INDEX|CREATE\\\\s+INDEX\\\\s+ON|DROP\\\\s+INDEX\\\\s+ON|CREATE\\\\s+CONSTRAINT\\\\s+ON|DROP\\\\s+CONSTRAINT\\\\s+ON)\\\\b\",\n        \"name\": \"keyword.other.indexes.cypher\"\n      }, {\n        \"match\": \"(?i)\\\\b(MERGE|DELETE|SET|REMOVE|ON\\\\s+CREATE|ON\\\\s+MATCH|CREATE\\\\s+UNIQUE|CREATE)\\\\b\",\n        \"name\": \"keyword.data.definition.cypher\"\n      }, {\n        \"match\": \"(?i)\\\\b(DESC|ASC)\\\\b\",\n        \"name\": \"keyword.other.order.cypher\"\n      }, {\n        \"begin\": \"(?i)\\\\b(node|relationship|rel)((:)([\\\\p{L}_-][\\\\p{L}0-9_]*))?(?=\\\\s*\\\\()\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"support.class.starting-functions-point.cypher\"\n          },\n          \"2\": {\n            \"name\": \"keyword.control.index-seperator.cypher\"\n          },\n          \"3\": {\n            \"name\": \"keyword.control.index-seperator.cypher\"\n          },\n          \"4\": {\n            \"name\": \"support.class.index.cypher\"\n          }\n        },\n        \"end\": \"\\\\)\",\n        \"name\": \"source.starting-functions.cypher\",\n        \"patterns\": [{\n          \"match\": \"((?:`.+?`)|(?:[\\\\p{L}_][\\\\p{L}0-9_]*))\",\n          \"name\": \"variable.parameter.relationship-name.cypher\"\n        }, {\n          \"match\": \"(\\\\*)\",\n          \"name\": \"keyword.control.starting-function-params.cypher\"\n        }, {\n          \"include\": \"#comments\"\n        }, {\n          \"include\": \"#numbers\"\n        }, {\n          \"include\": \"#strings\"\n        }]\n      }]\n    },\n    \"numbers\": {\n      \"patterns\": [{\n        \"match\": \"\\\\b\\\\d+(\\\\.\\\\d+)?\\\\b\",\n        \"name\": \"constant.numeric.cypher\"\n      }]\n    },\n    \"operators\": {\n      \"patterns\": [{\n        \"match\": \"(\\\\+|\\\\-|\\\\/|\\\\*|\\\\%|\\\\?|!)\",\n        \"name\": \"keyword.operator.math.cypher\"\n      }, {\n        \"match\": \"(<=|=>|<>|<|>|=~|=)\",\n        \"name\": \"keyword.operator.compare.cypher\"\n      }, {\n        \"match\": \"(?i)\\\\b(OR|AND|XOR|IS)\\\\b\",\n        \"name\": \"keyword.operator.logical.cypher\"\n      }, {\n        \"match\": \"(?i)\\\\b(IN)\\\\b\",\n        \"name\": \"keyword.operator.in.cypher\"\n      }]\n    },\n    \"path-patterns\": {\n      \"patterns\": [{\n        \"match\": \"(<--|-->|--)\",\n        \"name\": \"support.function.relationship-pattern.cypher\"\n      }, {\n        \"begin\": \"(<-|-)(\\\\[)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"support.function.relationship-pattern-start.cypher\"\n          },\n          \"2\": {\n            \"name\": \"keyword.operator.relationship-pattern-start.cypher\"\n          }\n        },\n        \"end\": \"(])(->|-)\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.operator.relationship-pattern-end.cypher\"\n          },\n          \"2\": {\n            \"name\": \"support.function.relationship-pattern-end.cypher\"\n          }\n        },\n        \"name\": \"path-pattern.cypher\",\n        \"patterns\": [{\n          \"include\": \"#identifiers\"\n        }, {\n          \"captures\": {\n            \"1\": {\n              \"name\": \"keyword.operator.relationship-type-start.cypher\"\n            },\n            \"2\": {\n              \"name\": \"entity.name.class.relationship.type.cypher\"\n            }\n          },\n          \"match\": \"(:)((?:`.+?`)|(?:[\\\\p{L}_][\\\\p{L}0-9_]*))\",\n          \"name\": \"entity.name.class.relationship-type.cypher\"\n        }, {\n          \"captures\": {\n            \"1\": {\n              \"name\": \"support.type.operator.relationship-type-or.cypher\"\n            },\n            \"2\": {\n              \"name\": \"entity.name.class.relationship.type-or.cypher\"\n            }\n          },\n          \"match\": \"(\\\\|)(\\\\s*)((?:`.+?`)|(?:[\\\\p{L}_][\\\\p{L}0-9_]*))\",\n          \"name\": \"entity.name.class.relationship-type-ored.cypher\"\n        }, {\n          \"match\": \"(?:\\\\?\\\\*|\\\\?|\\\\*)\\\\s*(?:\\\\d+\\\\s*(?:\\\\.\\\\.\\\\s*\\\\d+)?)?\",\n          \"name\": \"support.function.relationship-pattern.quant.cypher\"\n        }, {\n          \"include\": \"#properties_literal\"\n        }]\n      }]\n    },\n    \"properties_literal\": {\n      \"patterns\": [{\n        \"begin\": \"{\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"keyword.control.properties_literal.cypher\"\n          }\n        },\n        \"end\": \"}\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"keyword.control.properties_literal.cypher\"\n          }\n        },\n        \"name\": \"source.cypher\",\n        \"patterns\": [{\n          \"match\": \":|,\",\n          \"name\": \"keyword.control.properties_literal.seperator.cypher\"\n        }, {\n          \"include\": \"#comments\"\n        }, {\n          \"include\": \"#constants\"\n        }, {\n          \"include\": \"#functions\"\n        }, {\n          \"include\": \"#operators\"\n        }, {\n          \"include\": \"#identifiers\"\n        }, {\n          \"include\": \"#numbers\"\n        }, {\n          \"include\": \"#strings\"\n        }]\n      }]\n    },\n    \"string_escape\": {\n      \"captures\": {\n        \"2\": {\n          \"name\": \"string.quoted.double.cypher\"\n        }\n      },\n      \"match\": `(\\\\\\\\\\\\\\\\|\\\\\\\\[tbnrf])|(\\\\\\\\'|\\\\\\\\\")`,\n      \"name\": \"constant.character.escape.cypher\"\n    },\n    \"strings\": {\n      \"patterns\": [{\n        \"begin\": \"'\",\n        \"end\": \"'\",\n        \"name\": \"string.quoted.single.cypher\",\n        \"patterns\": [{\n          \"include\": \"#string_escape\"\n        }]\n      }, {\n        \"begin\": '\"',\n        \"end\": '\"',\n        \"name\": \"string.quoted.double.cypher\",\n        \"patterns\": [{\n          \"include\": \"#string_escape\"\n        }]\n      }]\n    }\n  },\n  \"scopeName\": \"source.cypher\",\n  \"aliases\": [\"cql\"]\n});\nvar cypher = [lang];\nexport { cypher as default };"],
  "mappings": "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",
  "names": []
}
