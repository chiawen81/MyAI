{
  "version": 3,
  "sources": ["../../../../../../node_modules/shiki/dist/langs/swift.mjs"],
  "sourcesContent": ["const lang = Object.freeze({\n  \"displayName\": \"Swift\",\n  \"name\": \"swift\",\n  \"patterns\": [{\n    \"include\": \"#root\"\n  }],\n  \"repository\": {\n    \"async-throws\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"invalid.illegal.await-must-precede-throws.swift\"\n        },\n        \"2\": {\n          \"name\": \"storage.modifier.exception.swift\"\n        },\n        \"3\": {\n          \"name\": \"storage.modifier.async.swift\"\n        }\n      },\n      \"match\": \"\\\\b(?:(throws\\\\s+async|rethrows\\\\s+async)|(throws|rethrows)|(async))\\\\b\"\n    },\n    \"attributes\": {\n      \"patterns\": [{\n        \"begin\": \"((@)available)(\\\\()\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"storage.modifier.attribute.swift\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.definition.attribute.swift\"\n          },\n          \"3\": {\n            \"name\": \"punctuation.definition.arguments.begin.swift\"\n          }\n        },\n        \"end\": \"\\\\)\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.arguments.end.swift\"\n          }\n        },\n        \"name\": \"meta.attribute.available.swift\",\n        \"patterns\": [{\n          \"captures\": {\n            \"1\": {\n              \"name\": \"keyword.other.platform.os.swift\"\n            },\n            \"2\": {\n              \"name\": \"constant.numeric.swift\"\n            }\n          },\n          \"match\": \"\\\\b(swift|(?:iOS|macOS|OSX|watchOS|tvOS|visionOS|UIKitForMac)(?:ApplicationExtension)?)\\\\b(?:\\\\s+([0-9]+(?:\\\\.[0-9]+)*\\\\b))?\"\n        }, {\n          \"begin\": \"\\\\b(introduced|deprecated|obsoleted)\\\\s*(:)\\\\s*\",\n          \"beginCaptures\": {\n            \"1\": {\n              \"name\": \"keyword.other.swift\"\n            },\n            \"2\": {\n              \"name\": \"punctuation.separator.key-value.swift\"\n            }\n          },\n          \"end\": \"(?!\\\\G)\",\n          \"patterns\": [{\n            \"match\": \"\\\\b[0-9]+(?:\\\\.[0-9]+)*\\\\b\",\n            \"name\": \"constant.numeric.swift\"\n          }]\n        }, {\n          \"begin\": '\\\\b(message|renamed)\\\\s*(:)\\\\s*(?=\")',\n          \"beginCaptures\": {\n            \"1\": {\n              \"name\": \"keyword.other.swift\"\n            },\n            \"2\": {\n              \"name\": \"punctuation.separator.key-value.swift\"\n            }\n          },\n          \"end\": \"(?!\\\\G)\",\n          \"patterns\": [{\n            \"include\": \"#literals\"\n          }]\n        }, {\n          \"captures\": {\n            \"1\": {\n              \"name\": \"keyword.other.platform.all.swift\"\n            },\n            \"2\": {\n              \"name\": \"keyword.other.swift\"\n            },\n            \"3\": {\n              \"name\": \"invalid.illegal.character-not-allowed-here.swift\"\n            }\n          },\n          \"match\": \"(?:(\\\\*)|\\\\b(deprecated|unavailable|noasync)\\\\b)\\\\s*(.*?)(?=[,)])\"\n        }]\n      }, {\n        \"begin\": \"((@)objc)(\\\\()\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"storage.modifier.attribute.swift\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.definition.attribute.swift\"\n          },\n          \"3\": {\n            \"name\": \"punctuation.definition.arguments.begin.swift\"\n          }\n        },\n        \"end\": \"\\\\)\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.arguments.end.swift\"\n          }\n        },\n        \"name\": \"meta.attribute.objc.swift\",\n        \"patterns\": [{\n          \"captures\": {\n            \"1\": {\n              \"name\": \"invalid.illegal.missing-colon-after-selector-piece.swift\"\n            }\n          },\n          \"match\": \"\\\\w*(?::(?:\\\\w*:)*(\\\\w*))?\",\n          \"name\": \"entity.name.function.swift\"\n        }]\n      }, {\n        \"begin\": \"(@)(?<q>`?)[\\\\p{L}_][\\\\p{L}_\\\\p{N}\\\\p{M}]*(\\\\k<q>)\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"storage.modifier.attribute.swift\"\n          },\n          \"1\": {\n            \"name\": \"punctuation.definition.attribute.swift\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.definition.identifier.swift\"\n          },\n          \"3\": {\n            \"name\": \"punctuation.definition.identifier.swift\"\n          }\n        },\n        \"comment\": \"any other attribute\",\n        \"end\": \"(?!\\\\G\\\\()\",\n        \"name\": \"meta.attribute.swift\",\n        \"patterns\": [{\n          \"begin\": \"\\\\(\",\n          \"beginCaptures\": {\n            \"0\": {\n              \"name\": \"punctuation.definition.arguments.begin.swift\"\n            }\n          },\n          \"end\": \"\\\\)\",\n          \"endCaptures\": {\n            \"0\": {\n              \"name\": \"punctuation.definition.arguments.end.swift\"\n            }\n          },\n          \"name\": \"meta.arguments.attribute.swift\",\n          \"patterns\": [{\n            \"include\": \"#expressions\"\n          }]\n        }]\n      }]\n    },\n    \"builtin-functions\": {\n      \"patterns\": [{\n        \"comment\": \"Member functions in the standard library in Swift 3 which may be used with trailing closures and no parentheses\",\n        \"match\": \"(?<=\\\\.)(?:s(?:ort(?:ed)?|plit)|contains|index|partition|f(?:i(?:lter|rst)|orEach|latMap)|with(?:MutableCharacters|CString|U(?:nsafe(?:Mutable(?:BufferPointer|Pointer(?:s|To(?:Header|Elements)))|BufferPointer)|TF8Buffer))|m(?:in|a(?:p|x)))(?=\\\\s*[({])\\\\b\",\n        \"name\": \"support.function.swift\"\n      }, {\n        \"comment\": \"Member functions in the standard library in Swift 3\",\n        \"match\": \"(?<=\\\\.)(?:s(?:ymmetricDifference|t(?:oreBytes|arts|ride)|ortInPlace|u(?:ccessor|ffix|btract(?:ing|InPlace|WithOverflow)?)|quareRoot|amePosition)|h(?:oldsUnique(?:Reference|OrPinnedReference)|as(?:Suffix|Prefix))|ne(?:gate(?:d)?|xt)|c(?:o(?:untByEnumerating|py(?:Bytes)?)|lamp(?:ed)?|reate)|t(?:o(?:IntMax|Opaque|UIntMax)|ake(?:RetainedValue|UnretainedValue)|r(?:uncatingRemainder|a(?:nscodedLength|ilSurrogate)))|i(?:s(?:MutableAndUniquelyReferenced(?:OrPinned)?|S(?:trictSu(?:perset(?:Of)?|bset(?:Of)?)|u(?:perset(?:Of)?|bset(?:Of)?))|Continuation|T(?:otallyOrdered|railSurrogate)|Disjoint(?:With)?|Unique(?:Reference|lyReferenced(?:OrPinned)?)|Equal|Le(?:ss(?:ThanOrEqualTo)?|adSurrogate))|n(?:sert(?:ContentsOf)?|tersect(?:ion|InPlace)?|itialize(?:Memory|From)?|dex(?:Of|ForKey)))|o(?:verlaps|bjectAt)|d(?:i(?:stance(?:To)?|vide(?:d|WithOverflow)?)|e(?:s(?:cendant|troy)|code(?:CString)?|initialize|alloc(?:ate(?:Capacity)?)?)|rop(?:First|Last))|u(?:n(?:ion(?:InPlace)?|derestimateCount|wrappedOrError)|p(?:date(?:Value)?|percased))|join(?:ed|WithSeparator)|p(?:op(?:First|Last)|ass(?:Retained|Unretained)|re(?:decessor|fix))|e(?:scape(?:d)?|n(?:code|umerate(?:d)?)|lementsEqual|xclusiveOr(?:InPlace)?)|f(?:orm(?:Remainder|S(?:ymmetricDifference|quareRoot)|TruncatingRemainder|In(?:tersection|dex)|Union)|latten|rom(?:CString(?:RepairingIllFormedUTF8)?|Opaque))|w(?:i(?:thMemoryRebound|dth)|rite(?:To)?)|l(?:o(?:wercased|ad)|e(?:adSurrogate|xicographical(?:Compare|lyPrecedes)))|a(?:ss(?:ign(?:BackwardFrom|From)?|umingMemoryBound)|d(?:d(?:ing(?:Product)?|Product|WithOverflow)?|vanced(?:By)?)|utorelease|ppend(?:ContentsOf)?|lloc(?:ate)?|bs)|r(?:ound(?:ed)?|e(?:serveCapacity|tain|duce|place(?:Range|Subrange)?|verse(?:d)?|quest(?:NativeBuffer|UniqueMutableBackingBuffer)|lease|m(?:ove(?:Range|Subrange|Value(?:ForKey)?|First|Last|A(?:tIndex|ll))?|ainder(?:WithOverflow)?)))|ge(?:nerate|t(?:Objects|Element))|m(?:in(?:imum(?:Magnitude)?|Element)|ove(?:Initialize(?:Memory|BackwardFrom|From)?|Assign(?:From)?)?|ultipl(?:y(?:WithOverflow)?|ied)|easure|a(?:ke(?:Iterator|Description)|x(?:imum(?:Magnitude)?|Element)))|bindMemory)(?=\\\\s*\\\\()\",\n        \"name\": \"support.function.swift\"\n      }, {\n        \"comment\": \"Member functions in the standard library in Swift 2 only\",\n        \"match\": \"(?<=\\\\.)(?:s(?:uperclassMirror|amePositionIn|tartsWith)|nextObject|c(?:haracterAtIndex|o(?:untByEnumeratingWithState|pyWithZone)|ustom(?:Mirror|PlaygroundQuickLook))|is(?:EmptyInput|ASCII)|object(?:Enumerator|ForKey|AtIndex)|join|put|keyEnumerator|withUnsafeMutablePointerToValue|length|getMirror|m(?:oveInitializeAssignFrom|ember))(?=\\\\s*\\\\()\",\n        \"name\": \"support.function.swift\"\n      }]\n    },\n    \"builtin-global-functions\": {\n      \"patterns\": [{\n        \"begin\": \"\\\\b(type)(\\\\()\\\\s*(of)(:)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"support.function.dynamic-type.swift\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.definition.arguments.begin.swift\"\n          },\n          \"3\": {\n            \"name\": \"support.variable.parameter.swift\"\n          },\n          \"4\": {\n            \"name\": \"punctuation.separator.argument-label.begin.swift\"\n          }\n        },\n        \"end\": \"\\\\)\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.arguments.end.swift\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#expressions\"\n        }]\n      }, {\n        \"comment\": \"Global functions available in Swift 3 which may be used with trailing closures and no parentheses\",\n        \"match\": \"\\\\b(?:anyGenerator|autoreleasepool)(?=\\\\s*[({])\\\\b\",\n        \"name\": \"support.function.swift\"\n      }, {\n        \"comment\": \"Global functions available in Swift 3\",\n        \"match\": \"\\\\b(?:s(?:tride(?:of(?:Value)?)?|izeof(?:Value)?|equence|wap)|numericCast|transcode|is(?:UniquelyReferenced(?:NonObjC)?|KnownUniquelyReferenced)|zip|d(?:ump|ebugPrint)|unsafe(?:BitCast|Downcast|Unwrap|Address(?:Of)?)|pr(?:int|econdition(?:Failure)?)|fatalError|with(?:Unsafe(?:MutablePointer|Pointer)|ExtendedLifetime|VaList)|a(?:ssert(?:ionFailure)?|lignof(?:Value)?|bs)|re(?:peatElement|adLine)|getVaList|m(?:in|ax))(?=\\\\s*\\\\()\",\n        \"name\": \"support.function.swift\"\n      }, {\n        \"comment\": \"Global functions available in Swift 2 only\",\n        \"match\": \"\\\\b(?:s(?:ort|uffix|pli(?:ce|t))|insert|overlaps|d(?:istance|rop(?:First|Last))|join|prefix|extend|withUnsafe(?:MutablePointers|Pointers)|lazy|advance|re(?:flect|move(?:Range|Last|A(?:tIndex|ll))))(?=\\\\s*\\\\()\",\n        \"name\": \"support.function.swift\"\n      }]\n    },\n    \"builtin-properties\": {\n      \"patterns\": [{\n        \"comment\": \"The simpler (?<=\\\\bProcess\\\\.|\\\\bCommandLine\\\\.) breaks VS Code / Atom, see https://github.com/textmate/swift.tmbundle/issues/29\",\n        \"match\": \"(?<=^Process\\\\.|\\\\WProcess\\\\.|^CommandLine\\\\.|\\\\WCommandLine\\\\.)(arguments|argc|unsafeArgv)\",\n        \"name\": \"support.variable.swift\"\n      }, {\n        \"comment\": \"Properties in the standard library in Swift 3\",\n        \"match\": \"(?<=\\\\.)(?:s(?:t(?:artIndex|ri(?:ngValue|de))|i(?:ze|gn(?:BitIndex|ificand(?:Bit(?:Count|Pattern)|Width)?|alingNaN)?)|u(?:perclassMirror|mmary|bscriptBaseAddress))|h(?:eader|as(?:hValue|PointerRepresentation))|n(?:ulTerminatedUTF8|ext(?:Down|Up)|a(?:n|tiveOwner))|c(?:haracters|ount(?:TrailingZeros)?|ustom(?:Mirror|PlaygroundQuickLook)|apacity)|i(?:s(?:S(?:ign(?:Minus|aling(?:NaN)?)|ubnormal)|N(?:ormal|aN)|Canonical|Infinite|Zero|Empty|Finite|ASCII)|n(?:dices|finity)|dentity)|owner|de(?:scription|bugDescription)|u(?:n(?:safelyUnwrapped|icodeScalar(?:s)?|derestimatedCount)|tf(?:16|8(?:Start|C(?:String|odeUnitCount))?)|intValue|ppercaseString|lp(?:OfOne)?)|p(?:i|ointee)|e(?:ndIndex|lements|xponent(?:Bit(?:Count|Pattern))?)|value(?:s)?|keys|quietNaN|f(?:irst(?:ElementAddress(?:IfContiguous)?)?|loatingPointClass)|l(?:ittleEndian|owercaseString|eastNo(?:nzeroMagnitude|rmalMagnitude)|a(?:st|zy))|a(?:l(?:ignment|l(?:ocatedElementCount|Zeros))|rray(?:PropertyIsNativeTypeChecked)?)|ra(?:dix|wValue)|greatestFiniteMagnitude|m(?:in|emory|ax)|b(?:yteS(?:ize|wapped)|i(?:nade|tPattern|gEndian)|uffer|ase(?:Address)?))\\\\b\",\n        \"name\": \"support.variable.swift\"\n      }, {\n        \"comment\": \"Properties in the standard library in Swift 2 only\",\n        \"match\": \"(?<=\\\\.)(?:boolValue|disposition|end|objectIdentifier|quickLookObject|start|valueType)\\\\b\",\n        \"name\": \"support.variable.swift\"\n      }, {\n        \"comment\": \"Enum cases in the standard library - note that there is some overlap between these and the properties\",\n        \"match\": \"(?<=\\\\.)(?:s(?:calarValue|i(?:ze|gnalingNaN)|o(?:und|me)|uppressed|prite|et)|n(?:one|egative(?:Subnormal|Normal|Infinity|Zero))|c(?:ol(?:or|lection)|ustomized)|t(?:o(?:NearestOr(?:Even|AwayFromZero)|wardZero)|uple|ext)|i(?:nt|mage)|optional|d(?:ictionary|o(?:uble|wn))|u(?:Int|p|rl)|p(?:o(?:sitive(?:Subnormal|Normal|Infinity|Zero)|int)|lus)|e(?:rror|mptyInput)|view|quietNaN|float|a(?:ttributedString|wayFromZero)|r(?:ectangle|ange)|generated|minus|b(?:ool|ezierPath))\\\\b\",\n        \"name\": \"support.variable.swift\"\n      }]\n    },\n    \"builtin-types\": {\n      \"comment\": \"Types provided in the standard library\",\n      \"patterns\": [{\n        \"include\": \"#builtin-types-builtin-class-type\"\n      }, {\n        \"include\": \"#builtin-types-builtin-enum-type\"\n      }, {\n        \"include\": \"#builtin-types-builtin-protocol-type\"\n      }, {\n        \"include\": \"#builtin-types-builtin-struct-type\"\n      }, {\n        \"include\": \"#builtin-types-builtin-typealias\"\n      }, {\n        \"match\": \"\\\\bAny\\\\b\",\n        \"name\": \"support.type.any.swift\"\n      }]\n    },\n    \"builtin-types-builtin-class-type\": {\n      \"comment\": \"Builtin class types\",\n      \"match\": \"\\\\b(Managed(Buffer|ProtoBuffer)|NonObjectiveCBase|AnyGenerator)\\\\b\",\n      \"name\": \"support.class.swift\"\n    },\n    \"builtin-types-builtin-enum-type\": {\n      \"patterns\": [{\n        \"comment\": \"CommandLine is an enum, but it acts like a constant\",\n        \"match\": \"\\\\b(?:CommandLine|Process(?=\\\\.))\\\\b\",\n        \"name\": \"support.constant.swift\"\n      }, {\n        \"comment\": \"The return type of a function that never returns\",\n        \"match\": \"\\\\bNever\\\\b\",\n        \"name\": \"support.constant.never.swift\"\n      }, {\n        \"comment\": \"Enum types in the standard library in Swift 3\",\n        \"match\": \"\\\\b(?:ImplicitlyUnwrappedOptional|Representation|MemoryLayout|FloatingPointClassification|SetIndexRepresentation|SetIteratorRepresentation|FloatingPointRoundingRule|UnicodeDecodingResult|Optional|DictionaryIndexRepresentation|AncestorRepresentation|DisplayStyle|PlaygroundQuickLook|Never|FloatingPointSign|Bit|DictionaryIteratorRepresentation)\\\\b\",\n        \"name\": \"support.type.swift\"\n      }, {\n        \"comment\": \"Enum types in the standard library in Swift 2 only\",\n        \"match\": \"\\\\b(?:MirrorDisposition|QuickLookObject)\\\\b\",\n        \"name\": \"support.type.swift\"\n      }]\n    },\n    \"builtin-types-builtin-protocol-type\": {\n      \"patterns\": [{\n        \"comment\": \"Protocols in the standard library in Swift 3\",\n        \"match\": \"\\\\b(?:Ra(?:n(?:domAccess(?:Collection|Indexable)|geReplaceable(?:Collection|Indexable))|wRepresentable)|M(?:irrorPath|utable(?:Collection|Indexable))|Bi(?:naryFloatingPoint|twiseOperations|directional(?:Collection|Indexable))|S(?:tr(?:ideable|eamable)|igned(?:Number|Integer)|e(?:tAlgebra|quence))|Hashable|C(?:o(?:llection|mparable)|ustom(?:Reflectable|StringConvertible|DebugStringConvertible|PlaygroundQuickLookable|LeafReflectable)|VarArg)|TextOutputStream|I(?:n(?:teger(?:Arithmetic)?|dexable(?:Base)?)|teratorProtocol)|OptionSet|Un(?:signedInteger|icodeCodec)|E(?:quatable|rror|xpressibleBy(?:BooleanLiteral|String(?:Interpolation|Literal)|NilLiteral|IntegerLiteral|DictionaryLiteral|UnicodeScalarLiteral|ExtendedGraphemeClusterLiteral|FloatLiteral|ArrayLiteral))|FloatingPoint|L(?:osslessStringConvertible|azy(?:SequenceProtocol|CollectionProtocol))|A(?:nyObject|bsoluteValuable))\\\\b\",\n        \"name\": \"support.type.swift\"\n      }, {\n        \"comment\": \"Protocols in the standard library in Swift 2 only\",\n        \"match\": \"\\\\b(?:Ran(?:domAccessIndexType|geReplaceableCollectionType)|GeneratorType|M(?:irror(?:Type|PathType)|utable(?:Sliceable|CollectionType))|B(?:i(?:twiseOperationsType|directionalIndexType)|oolean(?:Type|LiteralConvertible))|S(?:tring(?:InterpolationConvertible|LiteralConvertible)|i(?:nkType|gned(?:NumberType|IntegerType))|e(?:tAlgebraType|quenceType)|liceable)|NilLiteralConvertible|C(?:ollectionType|VarArgType)|Inte(?:rvalType|ger(?:Type|LiteralConvertible|ArithmeticType))|O(?:utputStreamType|ptionSetType)|DictionaryLiteralConvertible|Un(?:signedIntegerType|icode(?:ScalarLiteralConvertible|CodecType))|E(?:rrorType|xten(?:sibleCollectionType|dedGraphemeClusterLiteralConvertible))|F(?:orwardIndexType|loat(?:ingPointType|LiteralConvertible))|A(?:nyCollectionType|rrayLiteralConvertible))\\\\b\",\n        \"name\": \"support.type.swift\"\n      }]\n    },\n    \"builtin-types-builtin-struct-type\": {\n      \"patterns\": [{\n        \"comment\": \"Structs in the standard library in Swift 3\",\n        \"match\": \"\\\\b(?:R(?:e(?:peat(?:ed)?|versed(?:RandomAccess(?:Collection|Index)|Collection|Index))|an(?:domAccessSlice|ge(?:Replaceable(?:RandomAccessSlice|BidirectionalSlice|Slice)|Generator)?))|Generator(?:Sequence|OfOne)|M(?:irror|utable(?:Ran(?:domAccessSlice|geReplaceable(?:RandomAccessSlice|BidirectionalSlice|Slice))|BidirectionalSlice|Slice)|anagedBufferPointer)|B(?:idirectionalSlice|ool)|S(?:t(?:aticString|ri(?:ng|deT(?:hrough(?:Generator|Iterator)?|o(?:Generator|Iterator)?)))|et(?:I(?:ndex|terator))?|lice)|HalfOpenInterval|C(?:haracter(?:View)?|o(?:ntiguousArray|untable(?:Range|ClosedRange)|llectionOfOne)|OpaquePointer|losed(?:Range(?:I(?:ndex|terator))?|Interval)|VaListPointer)|I(?:n(?:t(?:16|8|32|64)?|d(?:ices|ex(?:ing(?:Generator|Iterator))?))|terator(?:Sequence|OverOne)?)|Zip2(?:Sequence|Iterator)|O(?:paquePointer|bjectIdentifier)|D(?:ictionary(?:I(?:ndex|terator)|Literal)?|ouble|efault(?:RandomAccessIndices|BidirectionalIndices|Indices))|U(?:n(?:safe(?:RawPointer|Mutable(?:RawPointer|BufferPointer|Pointer)|BufferPointer(?:Generator|Iterator)?|Pointer)|icodeScalar(?:View)?|foldSequence|managed)|TF(?:16(?:View)?|8(?:View)?|32)|Int(?:16|8|32|64)?)|Join(?:Generator|ed(?:Sequence|Iterator))|PermutationGenerator|E(?:numerate(?:Generator|Sequence|d(?:Sequence|Iterator))|mpty(?:Generator|Collection|Iterator))|Fl(?:oat(?:80)?|atten(?:Generator|BidirectionalCollection(?:Index)?|Sequence|Collection(?:Index)?|Iterator))|L(?:egacyChildren|azy(?:RandomAccessCollection|Map(?:RandomAccessCollection|Generator|BidirectionalCollection|Sequence|Collection|Iterator)|BidirectionalCollection|Sequence|Collection|Filter(?:Generator|BidirectionalCollection|Sequence|Collection|I(?:ndex|terator))))|A(?:ny(?:RandomAccessCollection|Generator|BidirectionalCollection|Sequence|Hashable|Collection|I(?:ndex|terator))|utoreleasingUnsafeMutablePointer|rray(?:Slice)?))\\\\b\",\n        \"name\": \"support.type.swift\"\n      }, {\n        \"comment\": \"Structs in the standard library in Swift 2 only\",\n        \"match\": \"\\\\b(?:R(?:everse(?:RandomAccess(?:Collection|Index)|Collection|Index)|awByte)|Map(?:Generator|Sequence|Collection)|S(?:inkOf|etGenerator)|Zip2Generator|DictionaryGenerator|Filter(?:Generator|Sequence|Collection(?:Index)?)|LazyForwardCollection|Any(?:RandomAccessIndex|BidirectionalIndex|Forward(?:Collection|Index)))\\\\b\",\n        \"name\": \"support.type.swift\"\n      }]\n    },\n    \"builtin-types-builtin-typealias\": {\n      \"patterns\": [{\n        \"comment\": \"Typealiases in the standard library in Swift 3\",\n        \"match\": \"\\\\b(?:Raw(?:Significand|Exponent|Value)|B(?:ooleanLiteralType|uffer|ase)|S(?:t(?:orage|r(?:i(?:ngLiteralType|de)|eam(?:1|2)))|ubSequence)|NativeBuffer|C(?:hild(?:ren)?|Bool|S(?:hort|ignedChar)|odeUnit|Char(?:16|32)?|Int|Double|Unsigned(?:Short|Char|Int|Long(?:Long)?)|Float|WideChar|Long(?:Long)?)|I(?:n(?:t(?:Max|egerLiteralType)|d(?:ices|ex(?:Distance)?))|terator)|Distance|U(?:n(?:icodeScalar(?:Type|Index|View|LiteralType)|foldFirstSequence)|TF(?:16(?:Index|View)|8Index)|IntMax)|E(?:lement(?:s)?|x(?:tendedGraphemeCluster(?:Type|LiteralType)|ponent))|V(?:oid|alue)|Key|Float(?:32|LiteralType|64)|AnyClass)\\\\b\",\n        \"name\": \"support.type.swift\"\n      }, {\n        \"comment\": \"Typealiases in the standard library in Swift 2 only\",\n        \"match\": \"\\\\b(?:Generator|PlaygroundQuickLook|UWord|Word)\\\\b\",\n        \"name\": \"support.type.swift\"\n      }]\n    },\n    \"code-block\": {\n      \"begin\": \"\\\\{\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.section.scope.begin.swift\"\n        }\n      },\n      \"end\": \"\\\\}\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.section.scope.end.swift\"\n        }\n      },\n      \"patterns\": [{\n        \"include\": \"$self\"\n      }]\n    },\n    \"comments\": {\n      \"patterns\": [{\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.comment.swift\"\n          }\n        },\n        \"match\": \"\\\\A^(#!).*$\\\\n?\",\n        \"name\": \"comment.line.number-sign.swift\"\n      }, {\n        \"begin\": \"/\\\\*\\\\*(?!/)\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.comment.begin.swift\"\n          }\n        },\n        \"end\": \"\\\\*/\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.comment.end.swift\"\n          }\n        },\n        \"name\": \"comment.block.documentation.swift\",\n        \"patterns\": [{\n          \"include\": \"#comments-nested\"\n        }]\n      }, {\n        \"begin\": \"/\\\\*:\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.comment.begin.swift\"\n          }\n        },\n        \"end\": \"\\\\*/\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.comment.end.swift\"\n          }\n        },\n        \"name\": \"comment.block.documentation.playground.swift\",\n        \"patterns\": [{\n          \"include\": \"#comments-nested\"\n        }]\n      }, {\n        \"begin\": \"/\\\\*\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.comment.begin.swift\"\n          }\n        },\n        \"end\": \"\\\\*/\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.comment.end.swift\"\n          }\n        },\n        \"name\": \"comment.block.swift\",\n        \"patterns\": [{\n          \"include\": \"#comments-nested\"\n        }]\n      }, {\n        \"match\": \"\\\\*/\",\n        \"name\": \"invalid.illegal.unexpected-end-of-block-comment.swift\"\n      }, {\n        \"begin\": \"(^[ \\\\t]+)?(?=//)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.whitespace.comment.leading.swift\"\n          }\n        },\n        \"end\": \"(?!\\\\G)\",\n        \"patterns\": [{\n          \"begin\": \"///\",\n          \"beginCaptures\": {\n            \"0\": {\n              \"name\": \"punctuation.definition.comment.swift\"\n            }\n          },\n          \"end\": \"$\",\n          \"name\": \"comment.line.triple-slash.documentation.swift\"\n        }, {\n          \"begin\": \"//:\",\n          \"beginCaptures\": {\n            \"0\": {\n              \"name\": \"punctuation.definition.comment.swift\"\n            }\n          },\n          \"end\": \"$\",\n          \"name\": \"comment.line.double-slash.documentation.swift\"\n        }, {\n          \"begin\": \"//\",\n          \"beginCaptures\": {\n            \"0\": {\n              \"name\": \"punctuation.definition.comment.swift\"\n            }\n          },\n          \"end\": \"$\",\n          \"name\": \"comment.line.double-slash.swift\"\n        }]\n      }]\n    },\n    \"comments-nested\": {\n      \"begin\": \"/\\\\*\",\n      \"end\": \"\\\\*/\",\n      \"patterns\": [{\n        \"include\": \"#comments-nested\"\n      }]\n    },\n    \"compiler-control\": {\n      \"patterns\": [{\n        \"begin\": \"^\\\\s*(#)(if|elseif)\\\\s+(false)\\\\b.*?(?=$|//|/\\\\*)\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"meta.preprocessor.conditional.swift\"\n          },\n          \"1\": {\n            \"name\": \"punctuation.definition.preprocessor.swift\"\n          },\n          \"2\": {\n            \"name\": \"keyword.control.import.preprocessor.conditional.swift\"\n          },\n          \"3\": {\n            \"name\": \"constant.language.boolean.swift\"\n          }\n        },\n        \"contentName\": \"comment.block.preprocessor.swift\",\n        \"end\": \"(?=^\\\\s*(#(elseif|else|endif)\\\\b))\"\n      }, {\n        \"begin\": \"^\\\\s*(#)(if|elseif)\\\\s+\",\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.preprocessor.swift\"\n          },\n          \"2\": {\n            \"name\": \"keyword.control.import.preprocessor.conditional.swift\"\n          }\n        },\n        \"end\": \"(?=\\\\s*(?://|/\\\\*))|$\",\n        \"name\": \"meta.preprocessor.conditional.swift\",\n        \"patterns\": [{\n          \"match\": \"(&&|\\\\|\\\\|)\",\n          \"name\": \"keyword.operator.logical.swift\"\n        }, {\n          \"match\": \"\\\\b(true|false)\\\\b\",\n          \"name\": \"constant.language.boolean.swift\"\n        }, {\n          \"captures\": {\n            \"1\": {\n              \"name\": \"keyword.other.condition.swift\"\n            },\n            \"2\": {\n              \"name\": \"punctuation.definition.parameters.begin.swift\"\n            },\n            \"3\": {\n              \"name\": \"support.constant.platform.architecture.swift\"\n            },\n            \"4\": {\n              \"name\": \"punctuation.definition.parameters.end.swift\"\n            }\n          },\n          \"match\": \"\\\\b(arch)\\\\s*(\\\\()\\\\s*(?:(arm|arm64|powerpc64|powerpc64le|i386|x86_64|s390x)|\\\\w+)\\\\s*(\\\\))\"\n        }, {\n          \"captures\": {\n            \"1\": {\n              \"name\": \"keyword.other.condition.swift\"\n            },\n            \"2\": {\n              \"name\": \"punctuation.definition.parameters.begin.swift\"\n            },\n            \"3\": {\n              \"name\": \"support.constant.platform.os.swift\"\n            },\n            \"4\": {\n              \"name\": \"punctuation.definition.parameters.end.swift\"\n            }\n          },\n          \"match\": \"\\\\b(os)\\\\s*(\\\\()\\\\s*(?:(macOS|OSX|iOS|tvOS|watchOS|visionOS|Android|Linux|FreeBSD|Windows|PS4)|\\\\w+)\\\\s*(\\\\))\"\n        }, {\n          \"captures\": {\n            \"1\": {\n              \"name\": \"keyword.other.condition.swift\"\n            },\n            \"2\": {\n              \"name\": \"punctuation.definition.parameters.begin.swift\"\n            },\n            \"3\": {\n              \"name\": \"entity.name.type.module.swift\"\n            },\n            \"4\": {\n              \"name\": \"punctuation.definition.parameters.end.swift\"\n            }\n          },\n          \"match\": \"\\\\b(canImport)\\\\s*(\\\\()([\\\\p{L}_][\\\\p{L}_\\\\p{N}\\\\p{M}]*)(\\\\))\"\n        }, {\n          \"begin\": \"\\\\b(targetEnvironment)\\\\s*(\\\\()\",\n          \"beginCaptures\": {\n            \"1\": {\n              \"name\": \"keyword.other.condition.swift\"\n            },\n            \"2\": {\n              \"name\": \"punctuation.definition.parameters.begin.swift\"\n            }\n          },\n          \"end\": \"(\\\\))|$\",\n          \"endCaptures\": {\n            \"1\": {\n              \"name\": \"punctuation.definition.parameters.end.swift\"\n            }\n          },\n          \"patterns\": [{\n            \"match\": \"\\\\b(simulator|UIKitForMac)\\\\b\",\n            \"name\": \"support.constant.platform.environment.swift\"\n          }]\n        }, {\n          \"begin\": \"\\\\b(swift|compiler)\\\\s*(\\\\()\",\n          \"beginCaptures\": {\n            \"1\": {\n              \"name\": \"keyword.other.condition.swift\"\n            },\n            \"2\": {\n              \"name\": \"punctuation.definition.parameters.begin.swift\"\n            }\n          },\n          \"end\": \"(\\\\))|$\",\n          \"endCaptures\": {\n            \"1\": {\n              \"name\": \"punctuation.definition.parameters.end.swift\"\n            }\n          },\n          \"patterns\": [{\n            \"match\": \">=|<\",\n            \"name\": \"keyword.operator.comparison.swift\"\n          }, {\n            \"match\": \"\\\\b[0-9]+(?:\\\\.[0-9]+)*\\\\b\",\n            \"name\": \"constant.numeric.swift\"\n          }]\n        }]\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.preprocessor.swift\"\n          },\n          \"2\": {\n            \"name\": \"keyword.control.import.preprocessor.conditional.swift\"\n          },\n          \"3\": {\n            \"patterns\": [{\n              \"match\": \"\\\\S+\",\n              \"name\": \"invalid.illegal.character-not-allowed-here.swift\"\n            }]\n          }\n        },\n        \"match\": \"^\\\\s*(#)(else|endif)(.*?)(?=$|//|/\\\\*)\",\n        \"name\": \"meta.preprocessor.conditional.swift\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.preprocessor.swift\"\n          },\n          \"2\": {\n            \"name\": \"keyword.control.import.preprocessor.sourcelocation.swift\"\n          },\n          \"4\": {\n            \"name\": \"punctuation.definition.parameters.begin.swift\"\n          },\n          \"5\": {\n            \"patterns\": [{\n              \"begin\": '(file)\\\\s*(:)\\\\s*(?=\")',\n              \"beginCaptures\": {\n                \"1\": {\n                  \"name\": \"support.variable.parameter.swift\"\n                },\n                \"2\": {\n                  \"name\": \"punctuation.separator.key-value.swift\"\n                }\n              },\n              \"end\": \"(?!\\\\G)\",\n              \"patterns\": [{\n                \"include\": \"#literals\"\n              }]\n            }, {\n              \"captures\": {\n                \"1\": {\n                  \"name\": \"support.variable.parameter.swift\"\n                },\n                \"2\": {\n                  \"name\": \"punctuation.separator.key-value.swift\"\n                },\n                \"3\": {\n                  \"name\": \"constant.numeric.integer.swift\"\n                }\n              },\n              \"match\": \"(line)\\\\s*(:)\\\\s*([0-9]+)\"\n            }, {\n              \"match\": \",\",\n              \"name\": \"punctuation.separator.parameters.swift\"\n            }, {\n              \"match\": \"\\\\S+\",\n              \"name\": \"invalid.illegal.character-not-allowed-here.swift\"\n            }]\n          },\n          \"6\": {\n            \"name\": \"punctuation.definition.parameters.begin.swift\"\n          },\n          \"7\": {\n            \"patterns\": [{\n              \"match\": \"\\\\S+\",\n              \"name\": \"invalid.illegal.character-not-allowed-here.swift\"\n            }]\n          }\n        },\n        \"match\": \"^\\\\s*(#)(sourceLocation)((\\\\()([^)]*)(\\\\)))(.*?)(?=$|//|/\\\\*)\",\n        \"name\": \"meta.preprocessor.sourcelocation.swift\"\n      }]\n    },\n    \"conditionals\": {\n      \"patterns\": [{\n        \"begin\": \"(?<!\\\\.)\\\\b(if|guard|switch|for)\\\\b\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"patterns\": [{\n              \"include\": \"#keywords\"\n            }]\n          }\n        },\n        \"end\": \"(?=\\\\{)\",\n        \"patterns\": [{\n          \"include\": \"#expressions-without-trailing-closures\"\n        }]\n      }, {\n        \"begin\": \"(?<!\\\\.)\\\\b(while)\\\\b\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"patterns\": [{\n              \"include\": \"#keywords\"\n            }]\n          }\n        },\n        \"comment\": \"while can be the end of a repeat-while statement so doesn't necessarily have braces after it\",\n        \"end\": \"(?=\\\\{)|$\",\n        \"patterns\": [{\n          \"include\": \"#expressions-without-trailing-closures\"\n        }]\n      }]\n    },\n    \"declarations\": {\n      \"patterns\": [{\n        \"include\": \"#declarations-function\"\n      }, {\n        \"include\": \"#declarations-function-initializer\"\n      }, {\n        \"include\": \"#declarations-function-subscript\"\n      }, {\n        \"include\": \"#declarations-typed-variable-declaration\"\n      }, {\n        \"include\": \"#declarations-import\"\n      }, {\n        \"include\": \"#declarations-operator\"\n      }, {\n        \"include\": \"#declarations-precedencegroup\"\n      }, {\n        \"include\": \"#declarations-protocol\"\n      }, {\n        \"include\": \"#declarations-type\"\n      }, {\n        \"include\": \"#declarations-extension\"\n      }, {\n        \"include\": \"#declarations-typealias\"\n      }, {\n        \"include\": \"#declarations-macro\"\n      }]\n    },\n    \"declarations-available-types\": {\n      \"patterns\": [{\n        \"include\": \"#comments\"\n      }, {\n        \"include\": \"#builtin-types\"\n      }, {\n        \"include\": \"#attributes\"\n      }, {\n        \"match\": \"\\\\basync\\\\b\",\n        \"name\": \"storage.modifier.async.swift\"\n      }, {\n        \"match\": \"\\\\b(?:throws|rethrows)\\\\b\",\n        \"name\": \"storage.modifier.exception.swift\"\n      }, {\n        \"match\": \"\\\\bsome\\\\b\",\n        \"name\": \"keyword.other.operator.type.opaque.swift\"\n      }, {\n        \"match\": \"\\\\bany\\\\b\",\n        \"name\": \"keyword.other.operator.type.existential.swift\"\n      }, {\n        \"match\": \"\\\\b(?:repeat|each)\\\\b\",\n        \"name\": \"keyword.control.loop.swift\"\n      }, {\n        \"match\": \"\\\\b(?:inout|isolated|borrowing|consuming)\\\\b\",\n        \"name\": \"storage.modifier.swift\"\n      }, {\n        \"match\": \"\\\\bSelf\\\\b\",\n        \"name\": \"variable.language.swift\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"keyword.operator.type.function.swift\"\n          }\n        },\n        \"match\": \"(?<![/=\\\\-+!*%<>&|\\\\^~.])(->)(?![/=\\\\-+!*%<>&|\\\\^~.])\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"keyword.operator.type.composition.swift\"\n          }\n        },\n        \"comment\": \"Swift 3: A & B\",\n        \"match\": \"(?<![/=\\\\-+!*%<>&|\\\\^~.])(&)(?![/=\\\\-+!*%<>&|\\\\^~.])\"\n      }, {\n        \"match\": \"[?!]\",\n        \"name\": \"keyword.operator.type.optional.swift\"\n      }, {\n        \"match\": \"\\\\.\\\\.\\\\.\",\n        \"name\": \"keyword.operator.function.variadic-parameter.swift\"\n      }, {\n        \"comment\": \"Swift 2: protocol<A, B>\",\n        \"match\": \"\\\\bprotocol\\\\b\",\n        \"name\": \"keyword.other.type.composition.swift\"\n      }, {\n        \"match\": \"(?<=\\\\.)(?:Protocol|Type)\\\\b\",\n        \"name\": \"keyword.other.type.metatype.swift\"\n      }, {\n        \"include\": \"#declarations-available-types-tuple-type\"\n      }, {\n        \"include\": \"#declarations-available-types-collection-type\"\n      }, {\n        \"include\": \"#declarations-generic-argument-clause\"\n      }]\n    },\n    \"declarations-available-types-collection-type\": {\n      \"begin\": \"\\\\[\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.section.collection-type.begin.swift\"\n        }\n      },\n      \"comment\": \"array and dictionary types [Value] and [Key: Value]\",\n      \"end\": \"\\\\]|(?=[>){}])\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.section.collection-type.end.swift\"\n        }\n      },\n      \"patterns\": [{\n        \"include\": \"#declarations-available-types\"\n      }, {\n        \"begin\": \":\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.separator.key-value.swift\"\n          }\n        },\n        \"end\": \"(?=\\\\]|[>){}])\",\n        \"patterns\": [{\n          \"match\": \":\",\n          \"name\": \"invalid.illegal.extra-colon-in-dictionary-type.swift\"\n        }, {\n          \"include\": \"#declarations-available-types\"\n        }]\n      }]\n    },\n    \"declarations-available-types-tuple-type\": {\n      \"begin\": \"\\\\(\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.section.tuple-type.begin.swift\"\n        }\n      },\n      \"end\": \"\\\\)|(?=[>\\\\]{}])\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.section.tuple-type.end.swift\"\n        }\n      },\n      \"patterns\": [{\n        \"include\": \"#declarations-available-types\"\n      }]\n    },\n    \"declarations-extension\": {\n      \"begin\": \"\\\\b(extension)\\\\s+((?<q>`?)[\\\\p{L}_][\\\\p{L}_\\\\p{N}\\\\p{M}]*(\\\\k<q>))\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"storage.type.$1.swift\"\n        },\n        \"2\": {\n          \"name\": \"entity.name.type.swift\",\n          \"patterns\": [{\n            \"include\": \"#declarations-available-types\"\n          }]\n        },\n        \"3\": {\n          \"name\": \"punctuation.definition.identifier.swift\"\n        },\n        \"4\": {\n          \"name\": \"punctuation.definition.identifier.swift\"\n        }\n      },\n      \"end\": \"(?<=\\\\})\",\n      \"name\": \"meta.definition.type.$1.swift\",\n      \"patterns\": [{\n        \"include\": \"#comments\"\n      }, {\n        \"comment\": \"SE-0143: Conditional Conformances\",\n        \"include\": \"#declarations-generic-where-clause\"\n      }, {\n        \"include\": \"#declarations-inheritance-clause\"\n      }, {\n        \"begin\": \"\\\\{\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.type.begin.swift\"\n          }\n        },\n        \"end\": \"\\\\}\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.type.end.swift\"\n          }\n        },\n        \"name\": \"meta.definition.type.body.swift\",\n        \"patterns\": [{\n          \"include\": \"$self\"\n        }]\n      }]\n    },\n    \"declarations-function\": {\n      \"begin\": \"(?x)\\n\\\\b\\n(func)\\n\\\\s+\\n(\\n(?<q>`?)[\\\\p{L}_][\\\\p{L}_\\\\p{N}\\\\p{M}]*(\\\\k<q>)\\n| (?:\\n(\\n(?<oph>\\n[/=\\\\-+!*%<>&|^~?]\\n| [\\\\x{00A1}-\\\\x{00A7}]\\n| [\\\\x{00A9}\\\\x{00AB}]\\n| [\\\\x{00AC}\\\\x{00AE}]\\n| [\\\\x{00B0}-\\\\x{00B1}\\\\x{00B6}\\\\x{00BB}\\\\x{00BF}\\\\x{00D7}\\\\x{00F7}]\\n| [\\\\x{2016}-\\\\x{2017}\\\\x{2020}-\\\\x{2027}]\\n| [\\\\x{2030}-\\\\x{203E}]\\n| [\\\\x{2041}-\\\\x{2053}]\\n| [\\\\x{2055}-\\\\x{205E}]\\n| [\\\\x{2190}-\\\\x{23FF}]\\n| [\\\\x{2500}-\\\\x{2775}]\\n| [\\\\x{2794}-\\\\x{2BFF}]\\n| [\\\\x{2E00}-\\\\x{2E7F}]\\n| [\\\\x{3001}-\\\\x{3003}]\\n| [\\\\x{3008}-\\\\x{3030}]\\n)\\n(\\n\\\\g<oph>\\n| (?<opc>\\n[\\\\x{0300}-\\\\x{036F}]\\n| [\\\\x{1DC0}-\\\\x{1DFF}]\\n| [\\\\x{20D0}-\\\\x{20FF}]\\n| [\\\\x{FE00}-\\\\x{FE0F}]\\n| [\\\\x{FE20}-\\\\x{FE2F}]\\n| [\\\\x{E0100}-\\\\x{E01EF}]\\n)\\n)*\\n)\\n| ( \\\\. ( \\\\g<oph> | \\\\g<opc> | \\\\. )+ )\\n)\\n)\\n\\\\s*\\n(?=\\\\(|<)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"storage.type.function.swift\"\n        },\n        \"2\": {\n          \"name\": \"entity.name.function.swift\"\n        },\n        \"3\": {\n          \"name\": \"punctuation.definition.identifier.swift\"\n        },\n        \"4\": {\n          \"name\": \"punctuation.definition.identifier.swift\"\n        }\n      },\n      \"end\": \"(?<=\\\\})|$(?# functions in protocol declarations or generated interfaces have no body)\",\n      \"name\": \"meta.definition.function.swift\",\n      \"patterns\": [{\n        \"include\": \"#comments\"\n      }, {\n        \"include\": \"#declarations-generic-parameter-clause\"\n      }, {\n        \"include\": \"#declarations-parameter-clause\"\n      }, {\n        \"include\": \"#declarations-function-result\"\n      }, {\n        \"include\": \"#async-throws\"\n      }, {\n        \"comment\": \"Swift 3: generic constraints after the parameters and return type\",\n        \"include\": \"#declarations-generic-where-clause\"\n      }, {\n        \"begin\": \"(\\\\{)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.section.function.begin.swift\"\n          }\n        },\n        \"end\": \"(\\\\})\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.section.function.end.swift\"\n          }\n        },\n        \"name\": \"meta.definition.function.body.swift\",\n        \"patterns\": [{\n          \"include\": \"$self\"\n        }]\n      }]\n    },\n    \"declarations-function-initializer\": {\n      \"begin\": \"(?<!\\\\.)\\\\b(init[?!]*(?# only one is valid, but we want the in\\u21E5 snippet to produce something that looks good))\\\\s*(?=\\\\(|<)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"storage.type.function.swift\",\n          \"patterns\": [{\n            \"match\": \"(?<=[?!])[?!]+\",\n            \"name\": \"invalid.illegal.character-not-allowed-here.swift\"\n          }]\n        }\n      },\n      \"end\": \"(?<=\\\\})|$\",\n      \"name\": \"meta.definition.function.initializer.swift\",\n      \"patterns\": [{\n        \"include\": \"#comments\"\n      }, {\n        \"include\": \"#declarations-generic-parameter-clause\"\n      }, {\n        \"include\": \"#declarations-parameter-clause\"\n      }, {\n        \"include\": \"#async-throws\"\n      }, {\n        \"comment\": \"Swift 3: generic constraints after the parameters and return type\",\n        \"include\": \"#declarations-generic-where-clause\"\n      }, {\n        \"begin\": \"(\\\\{)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.section.function.begin.swift\"\n          }\n        },\n        \"end\": \"(\\\\})\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.section.function.end.swift\"\n          }\n        },\n        \"name\": \"meta.definition.function.body.swift\",\n        \"patterns\": [{\n          \"include\": \"$self\"\n        }]\n      }]\n    },\n    \"declarations-function-result\": {\n      \"begin\": \"(?<![/=\\\\-+!*%<>&|\\\\^~.])(->)(?![/=\\\\-+!*%<>&|\\\\^~.])\\\\s*\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.operator.function-result.swift\"\n        }\n      },\n      \"end\": \"(?!\\\\G)(?=\\\\{|\\\\bwhere\\\\b|;|=)|$\",\n      \"name\": \"meta.function-result.swift\",\n      \"patterns\": [{\n        \"include\": \"#declarations-available-types\"\n      }]\n    },\n    \"declarations-function-subscript\": {\n      \"begin\": \"(?<!\\\\.)\\\\b(subscript)\\\\s*(?=\\\\(|<)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"storage.type.function.swift\"\n        }\n      },\n      \"end\": \"(?<=\\\\})|$\",\n      \"name\": \"meta.definition.function.subscript.swift\",\n      \"patterns\": [{\n        \"include\": \"#comments\"\n      }, {\n        \"include\": \"#declarations-generic-parameter-clause\"\n      }, {\n        \"include\": \"#declarations-parameter-clause\"\n      }, {\n        \"include\": \"#declarations-function-result\"\n      }, {\n        \"include\": \"#async-throws\"\n      }, {\n        \"include\": \"#declarations-generic-where-clause\"\n      }, {\n        \"begin\": \"(\\\\{)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.section.function.begin.swift\"\n          }\n        },\n        \"end\": \"(\\\\})\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.section.function.end.swift\"\n          }\n        },\n        \"name\": \"meta.definition.function.body.swift\",\n        \"patterns\": [{\n          \"include\": \"$self\"\n        }]\n      }]\n    },\n    \"declarations-generic-argument-clause\": {\n      \"begin\": \"<\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.separator.generic-argument-clause.begin.swift\"\n        }\n      },\n      \"end\": \">|(?=[)\\\\]{}])\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.separator.generic-argument-clause.end.swift\"\n        }\n      },\n      \"name\": \"meta.generic-argument-clause.swift\",\n      \"patterns\": [{\n        \"include\": \"#declarations-available-types\"\n      }]\n    },\n    \"declarations-generic-parameter-clause\": {\n      \"begin\": \"<\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.separator.generic-parameter-clause.begin.swift\"\n        }\n      },\n      \"end\": \">|(?=[^\\\\w\\\\d:<>\\\\s,=&`])(?# characters besides these are never valid in a generic param list -- even if it's not really a valid clause, we should stop trying to parse it if we see one of them.)\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.separator.generic-parameter-clause.end.swift\"\n        }\n      },\n      \"name\": \"meta.generic-parameter-clause.swift\",\n      \"patterns\": [{\n        \"include\": \"#comments\"\n      }, {\n        \"comment\": \"Swift 2: constraints inside the generic param list\",\n        \"include\": \"#declarations-generic-where-clause\"\n      }, {\n        \"match\": \"\\\\beach\\\\b\",\n        \"name\": \"keyword.control.loop.swift\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"variable.language.generic-parameter.swift\"\n          }\n        },\n        \"match\": \"\\\\b((?!\\\\d)\\\\w[\\\\w\\\\d]*)\\\\b\"\n      }, {\n        \"match\": \",\",\n        \"name\": \"punctuation.separator.generic-parameters.swift\"\n      }, {\n        \"begin\": \"(:)\\\\s*\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.separator.generic-parameter-constraint.swift\"\n          }\n        },\n        \"end\": \"(?=[,>]|(?!\\\\G)\\\\bwhere\\\\b)\",\n        \"name\": \"meta.generic-parameter-constraint.swift\",\n        \"patterns\": [{\n          \"begin\": \"\\\\G\",\n          \"end\": \"(?=[,>]|(?!\\\\G)\\\\bwhere\\\\b)\",\n          \"name\": \"entity.other.inherited-class.swift\",\n          \"patterns\": [{\n            \"include\": \"#declarations-type-identifier\"\n          }, {\n            \"include\": \"#declarations-type-operators\"\n          }]\n        }]\n      }]\n    },\n    \"declarations-generic-where-clause\": {\n      \"begin\": \"\\\\b(where)\\\\b\\\\s*\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.other.generic-constraint-introducer.swift\"\n        }\n      },\n      \"end\": \"(?!\\\\G)$|(?=[>{};\\\\n]|//|/\\\\*)\",\n      \"name\": \"meta.generic-where-clause.swift\",\n      \"patterns\": [{\n        \"include\": \"#comments\"\n      }, {\n        \"include\": \"#declarations-generic-where-clause-requirement-list\"\n      }]\n    },\n    \"declarations-generic-where-clause-requirement-list\": {\n      \"begin\": \"\\\\G|,\\\\s*\",\n      \"end\": \"(?=[,>{};\\\\n]|//|/\\\\*)\",\n      \"patterns\": [{\n        \"include\": \"#comments\"\n      }, {\n        \"include\": \"#constraint\"\n      }, {\n        \"include\": \"#declarations-available-types\"\n      }, {\n        \"begin\": \"(?<![/=\\\\-+!*%<>&|\\\\^~.])(==)(?![/=\\\\-+!*%<>&|\\\\^~.])\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.operator.generic-constraint.same-type.swift\"\n          }\n        },\n        \"end\": \"(?=\\\\s*[,>{};\\\\n]|//|/\\\\*)\",\n        \"name\": \"meta.generic-where-clause.same-type-requirement.swift\",\n        \"patterns\": [{\n          \"include\": \"#declarations-available-types\"\n        }]\n      }, {\n        \"begin\": \"(?<![/=\\\\-+!*%<>&|\\\\^~.])(:)(?![/=\\\\-+!*%<>&|\\\\^~.])\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.operator.generic-constraint.conforms-to.swift\"\n          }\n        },\n        \"end\": \"(?=\\\\s*[,>{};\\\\n]|//|/\\\\*)\",\n        \"name\": \"meta.generic-where-clause.conformance-requirement.swift\",\n        \"patterns\": [{\n          \"begin\": \"\\\\G\\\\s*\",\n          \"contentName\": \"entity.other.inherited-class.swift\",\n          \"end\": \"(?=\\\\s*[,>{};\\\\n]|//|/\\\\*)\",\n          \"patterns\": [{\n            \"include\": \"#declarations-available-types\"\n          }]\n        }]\n      }]\n    },\n    \"declarations-import\": {\n      \"begin\": \"(?<!\\\\.)\\\\b(import)\\\\s+\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.import.swift\"\n        }\n      },\n      \"end\": \"(;)|$\\\\n?|(?=//|/\\\\*)\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.terminator.statement.swift\"\n        }\n      },\n      \"name\": \"meta.import.swift\",\n      \"patterns\": [{\n        \"begin\": \"\\\\G(?!;|$|//|/\\\\*)(?:(typealias|struct|class|actor|enum|protocol|var|func)\\\\s+)?\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"storage.modifier.swift\"\n          }\n        },\n        \"end\": \"(?=;|$|//|/\\\\*)\",\n        \"patterns\": [{\n          \"captures\": {\n            \"1\": {\n              \"name\": \"punctuation.definition.identifier.swift\"\n            },\n            \"2\": {\n              \"name\": \"punctuation.definition.identifier.swift\"\n            }\n          },\n          \"match\": \"(?x)\\n(?<=\\\\G|\\\\.)\\n(?<q>`?)[\\\\p{L}_][\\\\p{L}_\\\\p{N}\\\\p{M}]*(\\\\k<q>)\",\n          \"name\": \"entity.name.type.swift\"\n        }, {\n          \"match\": \"(?x)\\n(?<=\\\\G|\\\\.)\\n\\\\$[0-9]+\",\n          \"name\": \"entity.name.type.swift\"\n        }, {\n          \"captures\": {\n            \"1\": {\n              \"patterns\": [{\n                \"match\": \"\\\\.\",\n                \"name\": \"invalid.illegal.dot-not-allowed-here.swift\"\n              }]\n            }\n          },\n          \"match\": \"(?x)\\n(?<=\\\\G|\\\\.)\\n(?:\\n(\\n(?<oph>\\n[/=\\\\-+!*%<>&|^~?]\\n| [\\\\x{00A1}-\\\\x{00A7}]\\n| [\\\\x{00A9}\\\\x{00AB}]\\n| [\\\\x{00AC}\\\\x{00AE}]\\n| [\\\\x{00B0}-\\\\x{00B1}\\\\x{00B6}\\\\x{00BB}\\\\x{00BF}\\\\x{00D7}\\\\x{00F7}]\\n| [\\\\x{2016}-\\\\x{2017}\\\\x{2020}-\\\\x{2027}]\\n| [\\\\x{2030}-\\\\x{203E}]\\n| [\\\\x{2041}-\\\\x{2053}]\\n| [\\\\x{2055}-\\\\x{205E}]\\n| [\\\\x{2190}-\\\\x{23FF}]\\n| [\\\\x{2500}-\\\\x{2775}]\\n| [\\\\x{2794}-\\\\x{2BFF}]\\n| [\\\\x{2E00}-\\\\x{2E7F}]\\n| [\\\\x{3001}-\\\\x{3003}]\\n| [\\\\x{3008}-\\\\x{3030}]\\n)\\n(\\n\\\\g<oph>\\n| (?<opc>\\n[\\\\x{0300}-\\\\x{036F}]\\n| [\\\\x{1DC0}-\\\\x{1DFF}]\\n| [\\\\x{20D0}-\\\\x{20FF}]\\n| [\\\\x{FE00}-\\\\x{FE0F}]\\n| [\\\\x{FE20}-\\\\x{FE2F}]\\n| [\\\\x{E0100}-\\\\x{E01EF}]\\n)\\n)*\\n)\\n| ( \\\\. ( \\\\g<oph> | \\\\g<opc> | \\\\. )+ )\\n)\\n(?=\\\\.|;|$|//|/\\\\*|\\\\s)\",\n          \"name\": \"entity.name.type.swift\"\n        }, {\n          \"match\": \"\\\\.\",\n          \"name\": \"punctuation.separator.import.swift\"\n        }, {\n          \"begin\": \"(?!\\\\s*(;|$|//|/\\\\*))\",\n          \"end\": \"(?=\\\\s*(;|$|//|/\\\\*))\",\n          \"name\": \"invalid.illegal.character-not-allowed-here.swift\"\n        }]\n      }]\n    },\n    \"declarations-inheritance-clause\": {\n      \"begin\": \"(:)(?=\\\\s*\\\\{)|(:)\\\\s*\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"invalid.illegal.empty-inheritance-clause.swift\"\n        },\n        \"2\": {\n          \"name\": \"punctuation.separator.inheritance-clause.swift\"\n        }\n      },\n      \"end\": \"(?!\\\\G)$|(?=[={}]|(?!\\\\G)\\\\bwhere\\\\b)\",\n      \"name\": \"meta.inheritance-clause.swift\",\n      \"patterns\": [{\n        \"begin\": \"\\\\bclass\\\\b\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"storage.type.class.swift\"\n          }\n        },\n        \"end\": \"(?=[={}]|(?!\\\\G)\\\\bwhere\\\\b)\",\n        \"patterns\": [{\n          \"include\": \"#comments\"\n        }, {\n          \"include\": \"#declarations-inheritance-clause-more-types\"\n        }]\n      }, {\n        \"begin\": \"\\\\G\",\n        \"end\": \"(?!\\\\G)$|(?=[={}]|(?!\\\\G)\\\\bwhere\\\\b)\",\n        \"patterns\": [{\n          \"include\": \"#comments\"\n        }, {\n          \"include\": \"#declarations-inheritance-clause-inherited-type\"\n        }, {\n          \"include\": \"#declarations-inheritance-clause-more-types\"\n        }, {\n          \"include\": \"#declarations-type-operators\"\n        }]\n      }]\n    },\n    \"declarations-inheritance-clause-inherited-type\": {\n      \"begin\": \"(?=[`\\\\p{L}_])\",\n      \"end\": \"(?!\\\\G)\",\n      \"name\": \"entity.other.inherited-class.swift\",\n      \"patterns\": [{\n        \"include\": \"#declarations-type-identifier\"\n      }]\n    },\n    \"declarations-inheritance-clause-more-types\": {\n      \"begin\": \",\\\\s*\",\n      \"end\": \"(?!\\\\G)(?!//|/\\\\*)|(?=[,={}]|(?!\\\\G)\\\\bwhere\\\\b)\",\n      \"name\": \"meta.inheritance-list.more-types\",\n      \"patterns\": [{\n        \"include\": \"#comments\"\n      }, {\n        \"include\": \"#declarations-inheritance-clause-inherited-type\"\n      }, {\n        \"include\": \"#declarations-inheritance-clause-more-types\"\n      }, {\n        \"include\": \"#declarations-type-operators\"\n      }]\n    },\n    \"declarations-macro\": {\n      \"begin\": \"(?x)\\n\\\\b\\n(macro)\\n\\\\s+\\n((?<q>`?)[\\\\p{L}_][\\\\p{L}_\\\\p{N}\\\\p{M}]*(\\\\k<q>))\\n\\\\s*\\n(?=\\\\(|<|=)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"storage.type.function.swift\"\n        },\n        \"2\": {\n          \"name\": \"entity.name.function.swift\"\n        },\n        \"3\": {\n          \"name\": \"punctuation.definition.identifier.swift\"\n        },\n        \"4\": {\n          \"name\": \"punctuation.definition.identifier.swift\"\n        }\n      },\n      \"end\": \"$|(?=;|//|/\\\\*|\\\\}|=)\",\n      \"name\": \"meta.definition.macro.swift\",\n      \"patterns\": [{\n        \"include\": \"#comments\"\n      }, {\n        \"include\": \"#declarations-generic-parameter-clause\"\n      }, {\n        \"include\": \"#declarations-parameter-clause\"\n      }, {\n        \"include\": \"#declarations-function-result\"\n      }, {\n        \"include\": \"#async-throws\"\n      }, {\n        \"comment\": \"Swift 3: generic constraints after the parameters and return type\",\n        \"include\": \"#declarations-generic-where-clause\"\n      }]\n    },\n    \"declarations-operator\": {\n      \"begin\": \"(?x)\\n(?:\\n\\\\b(prefix|infix|postfix)\\n\\\\s+\\n)?\\n\\\\b\\n(operator)\\n\\\\s+\\n(\\n(\\n(?<oph>\\n[/=\\\\-+!*%<>&|^~?]\\n| [\\\\x{00A1}-\\\\x{00A7}]\\n| [\\\\x{00A9}\\\\x{00AB}]\\n| [\\\\x{00AC}\\\\x{00AE}]\\n| [\\\\x{00B0}-\\\\x{00B1}\\\\x{00B6}\\\\x{00BB}\\\\x{00BF}\\\\x{00D7}\\\\x{00F7}]\\n| [\\\\x{2016}-\\\\x{2017}\\\\x{2020}-\\\\x{2027}]\\n| [\\\\x{2030}-\\\\x{203E}]\\n| [\\\\x{2041}-\\\\x{2053}]\\n| [\\\\x{2055}-\\\\x{205E}]\\n| [\\\\x{2190}-\\\\x{23FF}]\\n| [\\\\x{2500}-\\\\x{2775}]\\n| [\\\\x{2794}-\\\\x{2BFF}]\\n| [\\\\x{2E00}-\\\\x{2E7F}]\\n| [\\\\x{3001}-\\\\x{3003}]\\n| [\\\\x{3008}-\\\\x{3030}]\\n)\\n(\\n\\\\g<oph>\\n| \\\\.\\n| (?<opc>\\n[\\\\x{0300}-\\\\x{036F}]\\n| [\\\\x{1DC0}-\\\\x{1DFF}]\\n| [\\\\x{20D0}-\\\\x{20FF}]\\n| [\\\\x{FE00}-\\\\x{FE0F}]\\n| [\\\\x{FE20}-\\\\x{FE2F}]\\n| [\\\\x{E0100}-\\\\x{E01EF}]\\n)\\n)*+\\n)\\n| ( \\\\. ( \\\\g<oph> | \\\\g<opc> | \\\\. )++ )\\n)\\n\\\\s*\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"storage.modifier.swift\"\n        },\n        \"2\": {\n          \"name\": \"storage.type.function.operator.swift\"\n        },\n        \"3\": {\n          \"name\": \"entity.name.function.operator.swift\"\n        },\n        \"4\": {\n          \"comment\": \"workaround for https://github.com/microsoft/vscode-textmate/issues/140#issuecomment-1793610346\",\n          \"name\": \"entity.name.function.operator.swift\",\n          \"patterns\": [{\n            \"match\": \"\\\\.\",\n            \"name\": \"invalid.illegal.dot-not-allowed-here.swift\"\n          }]\n        }\n      },\n      \"end\": \"(;)|$\\\\n?|(?=//|/\\\\*)\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.terminator.statement.swift\"\n        }\n      },\n      \"name\": \"meta.definition.operator.swift\",\n      \"patterns\": [{\n        \"include\": \"#declarations-operator-swift2\"\n      }, {\n        \"include\": \"#declarations-operator-swift3\"\n      }, {\n        \"match\": \"((?!$|;|//|/\\\\*)\\\\S)+\",\n        \"name\": \"invalid.illegal.character-not-allowed-here.swift\"\n      }]\n    },\n    \"declarations-operator-swift2\": {\n      \"begin\": \"\\\\G(\\\\{)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.definition.operator.begin.swift\"\n        }\n      },\n      \"end\": \"(\\\\})\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.definition.operator.end.swift\"\n        }\n      },\n      \"patterns\": [{\n        \"include\": \"#comments\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"storage.modifier.swift\"\n          },\n          \"2\": {\n            \"name\": \"keyword.other.operator.associativity.swift\"\n          }\n        },\n        \"match\": \"\\\\b(associativity)\\\\s+(left|right)\\\\b\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"storage.modifier.swift\"\n          },\n          \"2\": {\n            \"name\": \"constant.numeric.integer.swift\"\n          }\n        },\n        \"match\": \"\\\\b(precedence)\\\\s+([0-9]+)\\\\b\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"storage.modifier.swift\"\n          }\n        },\n        \"match\": \"\\\\b(assignment)\\\\b\"\n      }]\n    },\n    \"declarations-operator-swift3\": {\n      \"captures\": {\n        \"2\": {\n          \"name\": \"entity.other.inherited-class.swift\",\n          \"patterns\": [{\n            \"include\": \"#declarations-types-precedencegroup\"\n          }]\n        },\n        \"3\": {\n          \"name\": \"punctuation.definition.identifier.swift\"\n        },\n        \"4\": {\n          \"name\": \"punctuation.definition.identifier.swift\"\n        }\n      },\n      \"match\": \"\\\\G(:)\\\\s*((?<q>`?)[\\\\p{L}_][\\\\p{L}_\\\\p{N}\\\\p{M}]*(\\\\k<q>))\"\n    },\n    \"declarations-parameter-clause\": {\n      \"begin\": \"(\\\\()\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.definition.parameters.begin.swift\"\n        }\n      },\n      \"end\": \"(\\\\))(?:\\\\s*(async)\\\\b)?\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.definition.parameters.end.swift\"\n        },\n        \"2\": {\n          \"name\": \"storage.modifier.async.swift\"\n        }\n      },\n      \"name\": \"meta.parameter-clause.swift\",\n      \"patterns\": [{\n        \"include\": \"#declarations-parameter-list\"\n      }]\n    },\n    \"declarations-parameter-list\": {\n      \"patterns\": [{\n        \"captures\": {\n          \"1\": {\n            \"name\": \"entity.name.function.swift\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.definition.identifier.swift\"\n          },\n          \"3\": {\n            \"name\": \"punctuation.definition.identifier.swift\"\n          },\n          \"4\": {\n            \"name\": \"variable.parameter.function.swift\"\n          },\n          \"5\": {\n            \"name\": \"punctuation.definition.identifier.swift\"\n          },\n          \"6\": {\n            \"name\": \"punctuation.definition.identifier.swift\"\n          }\n        },\n        \"comment\": \"External parameter labels are considered part of the function name\",\n        \"match\": \"((?<q1>`?)[\\\\p{L}_][\\\\p{L}_\\\\p{N}\\\\p{M}]*(\\\\k<q1>))\\\\s+((?<q2>`?)[\\\\p{L}_][\\\\p{L}_\\\\p{N}\\\\p{M}]*(\\\\k<q2>))(?=\\\\s*:)\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"variable.parameter.function.swift\"\n          },\n          \"2\": {\n            \"name\": \"entity.name.function.swift\"\n          },\n          \"3\": {\n            \"name\": \"punctuation.definition.identifier.swift\"\n          },\n          \"4\": {\n            \"name\": \"punctuation.definition.identifier.swift\"\n          }\n        },\n        \"comment\": \"If no external label is given, the name is both the external label and the internal variable name\",\n        \"match\": \"(((?<q>`?)[\\\\p{L}_][\\\\p{L}_\\\\p{N}\\\\p{M}]*(\\\\k<q>)))(?=\\\\s*:)\"\n      }, {\n        \"begin\": \":\\\\s*(?!\\\\s)\",\n        \"end\": \"(?=[,)])\",\n        \"patterns\": [{\n          \"include\": \"#declarations-available-types\"\n        }, {\n          \"match\": \":\",\n          \"name\": \"invalid.illegal.extra-colon-in-parameter-list.swift\"\n        }, {\n          \"begin\": \"=\",\n          \"beginCaptures\": {\n            \"0\": {\n              \"name\": \"keyword.operator.assignment.swift\"\n            }\n          },\n          \"comment\": \"a parameter's default value\",\n          \"end\": \"(?=[,)])\",\n          \"patterns\": [{\n            \"include\": \"#expressions\"\n          }]\n        }]\n      }]\n    },\n    \"declarations-precedencegroup\": {\n      \"begin\": \"\\\\b(precedencegroup)\\\\s+((?<q>`?)[\\\\p{L}_][\\\\p{L}_\\\\p{N}\\\\p{M}]*(\\\\k<q>))\\\\s*(?=\\\\{)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"storage.type.precedencegroup.swift\"\n        },\n        \"2\": {\n          \"name\": \"entity.name.type.precedencegroup.swift\"\n        },\n        \"3\": {\n          \"name\": \"punctuation.definition.identifier.swift\"\n        },\n        \"4\": {\n          \"name\": \"punctuation.definition.identifier.swift\"\n        }\n      },\n      \"end\": \"(?!\\\\G)\",\n      \"name\": \"meta.definition.precedencegroup.swift\",\n      \"patterns\": [{\n        \"begin\": \"\\\\{\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.precedencegroup.begin.swift\"\n          }\n        },\n        \"end\": \"\\\\}\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.precedencegroup.end.swift\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#comments\"\n        }, {\n          \"captures\": {\n            \"1\": {\n              \"name\": \"storage.modifier.swift\"\n            },\n            \"2\": {\n              \"name\": \"entity.other.inherited-class.swift\",\n              \"patterns\": [{\n                \"include\": \"#declarations-types-precedencegroup\"\n              }]\n            },\n            \"3\": {\n              \"name\": \"punctuation.definition.identifier.swift\"\n            },\n            \"4\": {\n              \"name\": \"punctuation.definition.identifier.swift\"\n            }\n          },\n          \"match\": \"\\\\b(higherThan|lowerThan)\\\\s*:\\\\s*((?<q>`?)[\\\\p{L}_][\\\\p{L}_\\\\p{N}\\\\p{M}]*(\\\\k<q>))\"\n        }, {\n          \"captures\": {\n            \"1\": {\n              \"name\": \"storage.modifier.swift\"\n            },\n            \"2\": {\n              \"name\": \"keyword.other.operator.associativity.swift\"\n            }\n          },\n          \"match\": \"\\\\b(associativity)\\\\b(?:\\\\s*:\\\\s*(right|left|none)\\\\b)?\"\n        }, {\n          \"captures\": {\n            \"1\": {\n              \"name\": \"storage.modifier.swift\"\n            },\n            \"2\": {\n              \"name\": \"constant.language.boolean.swift\"\n            }\n          },\n          \"match\": \"\\\\b(assignment)\\\\b(?:\\\\s*:\\\\s*(true|false)\\\\b)?\"\n        }]\n      }]\n    },\n    \"declarations-protocol\": {\n      \"begin\": \"\\\\b(protocol)\\\\s+((?<q>`?)[\\\\p{L}_][\\\\p{L}_\\\\p{N}\\\\p{M}]*(\\\\k<q>))\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"storage.type.$1.swift\"\n        },\n        \"2\": {\n          \"name\": \"entity.name.type.$1.swift\"\n        },\n        \"3\": {\n          \"name\": \"punctuation.definition.identifier.swift\"\n        },\n        \"4\": {\n          \"name\": \"punctuation.definition.identifier.swift\"\n        }\n      },\n      \"end\": \"(?<=\\\\})\",\n      \"name\": \"meta.definition.type.protocol.swift\",\n      \"patterns\": [{\n        \"include\": \"#comments\"\n      }, {\n        \"include\": \"#declarations-inheritance-clause\"\n      }, {\n        \"comment\": \"SE-0142: Permit where clauses to constrain associated types\",\n        \"include\": \"#declarations-generic-where-clause\"\n      }, {\n        \"begin\": \"\\\\{\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.type.begin.swift\"\n          }\n        },\n        \"end\": \"\\\\}\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.type.end.swift\"\n          }\n        },\n        \"name\": \"meta.definition.type.body.swift\",\n        \"patterns\": [{\n          \"include\": \"#declarations-protocol-protocol-method\"\n        }, {\n          \"include\": \"#declarations-protocol-protocol-initializer\"\n        }, {\n          \"include\": \"#declarations-protocol-associated-type\"\n        }, {\n          \"include\": \"$self\"\n        }]\n      }]\n    },\n    \"declarations-protocol-associated-type\": {\n      \"begin\": \"\\\\b(associatedtype)\\\\s+((?<q>`?)[\\\\p{L}_][\\\\p{L}_\\\\p{N}\\\\p{M}]*(\\\\k<q>))\\\\s*\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.other.declaration-specifier.swift\"\n        },\n        \"2\": {\n          \"name\": \"variable.language.associatedtype.swift\"\n        },\n        \"3\": {\n          \"name\": \"punctuation.definition.identifier.swift\"\n        },\n        \"4\": {\n          \"name\": \"punctuation.definition.identifier.swift\"\n        }\n      },\n      \"end\": \"(?!\\\\G)$|(?=[;}]|$)\",\n      \"name\": \"meta.definition.associatedtype.swift\",\n      \"patterns\": [{\n        \"include\": \"#declarations-inheritance-clause\"\n      }, {\n        \"comment\": \"SE-0142: Permit where clauses to constrain associated types\",\n        \"include\": \"#declarations-generic-where-clause\"\n      }, {\n        \"include\": \"#declarations-typealias-assignment\"\n      }]\n    },\n    \"declarations-protocol-protocol-initializer\": {\n      \"begin\": \"(?<!\\\\.)\\\\b(init[?!]*(?# only one is valid, but we want the in\\u21E5 snippet to produce something that looks good))\\\\s*(?=\\\\(|<)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"storage.type.function.swift\",\n          \"patterns\": [{\n            \"match\": \"(?<=[?!])[?!]+\",\n            \"name\": \"invalid.illegal.character-not-allowed-here.swift\"\n          }]\n        }\n      },\n      \"end\": \"$|(?=;|//|/\\\\*|\\\\})\",\n      \"name\": \"meta.definition.function.initializer.swift\",\n      \"patterns\": [{\n        \"include\": \"#comments\"\n      }, {\n        \"include\": \"#declarations-generic-parameter-clause\"\n      }, {\n        \"include\": \"#declarations-parameter-clause\"\n      }, {\n        \"include\": \"#async-throws\"\n      }, {\n        \"comment\": \"Swift 3: generic constraints after the parameters and return type\",\n        \"include\": \"#declarations-generic-where-clause\"\n      }, {\n        \"begin\": \"\\\\{\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.section.function.begin.swift\"\n          }\n        },\n        \"end\": \"\\\\}\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.section.function.end.swift\"\n          }\n        },\n        \"name\": \"invalid.illegal.function-body-not-allowed-in-protocol.swift\",\n        \"patterns\": [{\n          \"include\": \"$self\"\n        }]\n      }]\n    },\n    \"declarations-protocol-protocol-method\": {\n      \"begin\": \"(?x)\\n\\\\b\\n(func)\\n\\\\s+\\n(\\n(?<q>`?)[\\\\p{L}_][\\\\p{L}_\\\\p{N}\\\\p{M}]*(\\\\k<q>)\\n| (?:\\n(\\n(?<oph>\\n[/=\\\\-+!*%<>&|^~?]\\n| [\\\\x{00A1}-\\\\x{00A7}]\\n| [\\\\x{00A9}\\\\x{00AB}]\\n| [\\\\x{00AC}\\\\x{00AE}]\\n| [\\\\x{00B0}-\\\\x{00B1}\\\\x{00B6}\\\\x{00BB}\\\\x{00BF}\\\\x{00D7}\\\\x{00F7}]\\n| [\\\\x{2016}-\\\\x{2017}\\\\x{2020}-\\\\x{2027}]\\n| [\\\\x{2030}-\\\\x{203E}]\\n| [\\\\x{2041}-\\\\x{2053}]\\n| [\\\\x{2055}-\\\\x{205E}]\\n| [\\\\x{2190}-\\\\x{23FF}]\\n| [\\\\x{2500}-\\\\x{2775}]\\n| [\\\\x{2794}-\\\\x{2BFF}]\\n| [\\\\x{2E00}-\\\\x{2E7F}]\\n| [\\\\x{3001}-\\\\x{3003}]\\n| [\\\\x{3008}-\\\\x{3030}]\\n)\\n(\\n\\\\g<oph>\\n| (?<opc>\\n[\\\\x{0300}-\\\\x{036F}]\\n| [\\\\x{1DC0}-\\\\x{1DFF}]\\n| [\\\\x{20D0}-\\\\x{20FF}]\\n| [\\\\x{FE00}-\\\\x{FE0F}]\\n| [\\\\x{FE20}-\\\\x{FE2F}]\\n| [\\\\x{E0100}-\\\\x{E01EF}]\\n)\\n)*\\n)\\n| ( \\\\. ( \\\\g<oph> | \\\\g<opc> | \\\\. )+ )\\n)\\n)\\n\\\\s*\\n(?=\\\\(|<)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"storage.type.function.swift\"\n        },\n        \"2\": {\n          \"name\": \"entity.name.function.swift\"\n        },\n        \"3\": {\n          \"name\": \"punctuation.definition.identifier.swift\"\n        },\n        \"4\": {\n          \"name\": \"punctuation.definition.identifier.swift\"\n        }\n      },\n      \"end\": \"$|(?=;|//|/\\\\*|\\\\})\",\n      \"name\": \"meta.definition.function.swift\",\n      \"patterns\": [{\n        \"include\": \"#comments\"\n      }, {\n        \"include\": \"#declarations-generic-parameter-clause\"\n      }, {\n        \"include\": \"#declarations-parameter-clause\"\n      }, {\n        \"include\": \"#declarations-function-result\"\n      }, {\n        \"include\": \"#async-throws\"\n      }, {\n        \"comment\": \"Swift 3: generic constraints after the parameters and return type\",\n        \"include\": \"#declarations-generic-where-clause\"\n      }, {\n        \"begin\": \"\\\\{\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.section.function.begin.swift\"\n          }\n        },\n        \"end\": \"\\\\}\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.section.function.end.swift\"\n          }\n        },\n        \"name\": \"invalid.illegal.function-body-not-allowed-in-protocol.swift\",\n        \"patterns\": [{\n          \"include\": \"$self\"\n        }]\n      }]\n    },\n    \"declarations-type\": {\n      \"patterns\": [{\n        \"begin\": \"\\\\b(class(?!\\\\s+(?:func|var|let)\\\\b)|struct|actor)\\\\b\\\\s*((?<q>`?)[\\\\p{L}_][\\\\p{L}_\\\\p{N}\\\\p{M}]*(\\\\k<q>))\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"storage.type.$1.swift\"\n          },\n          \"2\": {\n            \"name\": \"entity.name.type.$1.swift\"\n          },\n          \"3\": {\n            \"name\": \"punctuation.definition.identifier.swift\"\n          },\n          \"4\": {\n            \"name\": \"punctuation.definition.identifier.swift\"\n          }\n        },\n        \"end\": \"(?<=\\\\})\",\n        \"name\": \"meta.definition.type.$1.swift\",\n        \"patterns\": [{\n          \"include\": \"#comments\"\n        }, {\n          \"include\": \"#declarations-generic-parameter-clause\"\n        }, {\n          \"comment\": \"Swift 3: generic constraints after the generic param list\",\n          \"include\": \"#declarations-generic-where-clause\"\n        }, {\n          \"include\": \"#declarations-inheritance-clause\"\n        }, {\n          \"begin\": \"\\\\{\",\n          \"beginCaptures\": {\n            \"0\": {\n              \"name\": \"punctuation.definition.type.begin.swift\"\n            }\n          },\n          \"end\": \"\\\\}\",\n          \"endCaptures\": {\n            \"0\": {\n              \"name\": \"punctuation.definition.type.end.swift\"\n            }\n          },\n          \"name\": \"meta.definition.type.body.swift\",\n          \"patterns\": [{\n            \"include\": \"$self\"\n          }]\n        }]\n      }, {\n        \"include\": \"#declarations-type-enum\"\n      }]\n    },\n    \"declarations-type-enum\": {\n      \"begin\": \"\\\\b(enum)\\\\s+((?<q>`?)[\\\\p{L}_][\\\\p{L}_\\\\p{N}\\\\p{M}]*(\\\\k<q>))\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"storage.type.$1.swift\"\n        },\n        \"2\": {\n          \"name\": \"entity.name.type.$1.swift\"\n        },\n        \"3\": {\n          \"name\": \"punctuation.definition.identifier.swift\"\n        },\n        \"4\": {\n          \"name\": \"punctuation.definition.identifier.swift\"\n        }\n      },\n      \"end\": \"(?<=\\\\})\",\n      \"name\": \"meta.definition.type.$1.swift\",\n      \"patterns\": [{\n        \"include\": \"#comments\"\n      }, {\n        \"include\": \"#declarations-generic-parameter-clause\"\n      }, {\n        \"comment\": \"Swift 3: generic constraints after the generic param list\",\n        \"include\": \"#declarations-generic-where-clause\"\n      }, {\n        \"include\": \"#declarations-inheritance-clause\"\n      }, {\n        \"begin\": \"\\\\{\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.type.begin.swift\"\n          }\n        },\n        \"end\": \"\\\\}\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.type.end.swift\"\n          }\n        },\n        \"name\": \"meta.definition.type.body.swift\",\n        \"patterns\": [{\n          \"include\": \"#declarations-type-enum-enum-case-clause\"\n        }, {\n          \"include\": \"$self\"\n        }]\n      }]\n    },\n    \"declarations-type-enum-associated-values\": {\n      \"begin\": \"\\\\G\\\\(\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.parameters.begin.swift\"\n        }\n      },\n      \"end\": \"\\\\)\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.parameters.end.swift\"\n        }\n      },\n      \"patterns\": [{\n        \"include\": \"#comments\"\n      }, {\n        \"begin\": \"(?x)\\n(?:(_)|((?<q1>`?)[\\\\p{L}_][\\\\p{L}_\\\\p{N}\\\\p{M}]*\\\\k<q1>))\\n\\\\s+\\n(((?<q2>`?)[\\\\p{L}_][\\\\p{L}_\\\\p{N}\\\\p{M}]*\\\\k<q2>))\\n\\\\s*(:)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"entity.name.function.swift\"\n          },\n          \"2\": {\n            \"name\": \"invalid.illegal.distinct-labels-not-allowed.swift\"\n          },\n          \"5\": {\n            \"name\": \"variable.parameter.function.swift\"\n          },\n          \"7\": {\n            \"name\": \"punctuation.separator.argument-label.swift\"\n          }\n        },\n        \"end\": \"(?=[,)\\\\]])\",\n        \"patterns\": [{\n          \"include\": \"#declarations-available-types\"\n        }]\n      }, {\n        \"begin\": \"(((?<q>`?)[\\\\p{L}_][\\\\p{L}_\\\\p{N}\\\\p{M}]*\\\\k<q>))\\\\s*(:)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"entity.name.function.swift\"\n          },\n          \"2\": {\n            \"name\": \"variable.parameter.function.swift\"\n          },\n          \"4\": {\n            \"name\": \"punctuation.separator.argument-label.swift\"\n          }\n        },\n        \"end\": \"(?=[,)\\\\]])\",\n        \"patterns\": [{\n          \"include\": \"#declarations-available-types\"\n        }]\n      }, {\n        \"begin\": \"(?![,)\\\\]])(?=\\\\S)\",\n        \"comment\": \"an element without a label (i.e. anything else)\",\n        \"end\": \"(?=[,)\\\\]])\",\n        \"patterns\": [{\n          \"include\": \"#declarations-available-types\"\n        }, {\n          \"match\": \":\",\n          \"name\": \"invalid.illegal.extra-colon-in-parameter-list.swift\"\n        }]\n      }]\n    },\n    \"declarations-type-enum-enum-case\": {\n      \"begin\": \"(?x)((?<q>`?)[\\\\p{L}_][\\\\p{L}_\\\\p{N}\\\\p{M}]*(\\\\k<q>))\\\\s*\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"variable.other.enummember.swift\"\n        }\n      },\n      \"end\": \"(?<=\\\\))|(?![=(])\",\n      \"patterns\": [{\n        \"include\": \"#comments\"\n      }, {\n        \"include\": \"#declarations-type-enum-associated-values\"\n      }, {\n        \"include\": \"#declarations-type-enum-raw-value-assignment\"\n      }]\n    },\n    \"declarations-type-enum-enum-case-clause\": {\n      \"begin\": \"\\\\b(case)\\\\b\\\\s*\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"storage.type.enum.case.swift\"\n        }\n      },\n      \"end\": \"(?=[;}])|(?!\\\\G)(?!//|/\\\\*)(?=[^\\\\s,])\",\n      \"patterns\": [{\n        \"include\": \"#comments\"\n      }, {\n        \"include\": \"#declarations-type-enum-enum-case\"\n      }, {\n        \"include\": \"#declarations-type-enum-more-cases\"\n      }]\n    },\n    \"declarations-type-enum-more-cases\": {\n      \"begin\": \",\\\\s*\",\n      \"end\": \"(?!\\\\G)(?!//|/\\\\*)(?=[;}]|[^\\\\s,])\",\n      \"name\": \"meta.enum-case.more-cases\",\n      \"patterns\": [{\n        \"include\": \"#comments\"\n      }, {\n        \"include\": \"#declarations-type-enum-enum-case\"\n      }, {\n        \"include\": \"#declarations-type-enum-more-cases\"\n      }]\n    },\n    \"declarations-type-enum-raw-value-assignment\": {\n      \"begin\": \"(=)\\\\s*\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.operator.assignment.swift\"\n        }\n      },\n      \"end\": \"(?!\\\\G)\",\n      \"patterns\": [{\n        \"include\": \"#comments\"\n      }, {\n        \"include\": \"#literals\"\n      }]\n    },\n    \"declarations-type-identifier\": {\n      \"begin\": \"((?<q>`?)[\\\\p{L}_][\\\\p{L}_\\\\p{N}\\\\p{M}]*(\\\\k<q>))\\\\s*\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"meta.type-name.swift\",\n          \"patterns\": [{\n            \"include\": \"#builtin-types\"\n          }]\n        },\n        \"2\": {\n          \"name\": \"punctuation.definition.identifier.swift\"\n        },\n        \"3\": {\n          \"name\": \"punctuation.definition.identifier.swift\"\n        }\n      },\n      \"end\": \"(?!<)\",\n      \"patterns\": [{\n        \"begin\": \"(?=<)\",\n        \"end\": \"(?!\\\\G)\",\n        \"patterns\": [{\n          \"include\": \"#declarations-generic-argument-clause\"\n        }]\n      }]\n    },\n    \"declarations-type-operators\": {\n      \"patterns\": [{\n        \"captures\": {\n          \"1\": {\n            \"name\": \"keyword.operator.type.composition.swift\"\n          }\n        },\n        \"comment\": \"Swift 3: A & B\",\n        \"match\": \"(?<![/=\\\\-+!*%<>&|\\\\^~.])(&)(?![/=\\\\-+!*%<>&|\\\\^~.])\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"keyword.operator.type.requirement-suppression.swift\"\n          }\n        },\n        \"comment\": \"SE-0390: Noncopyable structs and enums\",\n        \"match\": \"(?<![/=\\\\-+!*%<>&|\\\\^~.])(~)(?![/=\\\\-+!*%<>&|\\\\^~.])\"\n      }]\n    },\n    \"declarations-typealias\": {\n      \"begin\": \"\\\\b(typealias)\\\\s+((?<q>`?)[\\\\p{L}_][\\\\p{L}_\\\\p{N}\\\\p{M}]*(\\\\k<q>))\\\\s*\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.other.declaration-specifier.swift\"\n        },\n        \"2\": {\n          \"name\": \"entity.name.type.typealias.swift\"\n        },\n        \"3\": {\n          \"name\": \"punctuation.definition.identifier.swift\"\n        },\n        \"4\": {\n          \"name\": \"punctuation.definition.identifier.swift\"\n        }\n      },\n      \"end\": \"(?!\\\\G)$|(?=;|//|/\\\\*|$)\",\n      \"name\": \"meta.definition.typealias.swift\",\n      \"patterns\": [{\n        \"begin\": \"\\\\G(?=<)\",\n        \"end\": \"(?!\\\\G)\",\n        \"patterns\": [{\n          \"include\": \"#declarations-generic-parameter-clause\"\n        }]\n      }, {\n        \"include\": \"#declarations-typealias-assignment\"\n      }]\n    },\n    \"declarations-typealias-assignment\": {\n      \"begin\": \"(=)\\\\s*\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.operator.assignment.swift\"\n        }\n      },\n      \"end\": \"(?!\\\\G)$|(?=;|//|/\\\\*|$)\",\n      \"patterns\": [{\n        \"include\": \"#declarations-available-types\"\n      }]\n    },\n    \"declarations-typed-variable-declaration\": {\n      \"begin\": \"(?x)\\n\\\\b(?:(async)\\\\s+)?(let|var)\\\\b\\\\s+\\n(?<q>`?)[\\\\p{L}_][\\\\p{L}_\\\\p{N}\\\\p{M}]*(\\\\k<q>)\\\\s*\\n:\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"storage.modifier.async.swift\"\n        },\n        \"2\": {\n          \"name\": \"keyword.other.declaration-specifier.swift\"\n        }\n      },\n      \"end\": \"(?=$|[={])\",\n      \"patterns\": [{\n        \"include\": \"#declarations-available-types\"\n      }]\n    },\n    \"declarations-types-precedencegroup\": {\n      \"patterns\": [{\n        \"comment\": \"Precedence groups in the standard library\",\n        \"match\": \"\\\\b(?:BitwiseShift|Assignment|RangeFormation|Casting|Addition|NilCoalescing|Comparison|LogicalConjunction|LogicalDisjunction|Default|Ternary|Multiplication|FunctionArrow)Precedence\\\\b\",\n        \"name\": \"support.type.swift\"\n      }]\n    },\n    \"expressions\": {\n      \"comment\": \"trailing closures need to be parsed before other member references\",\n      \"patterns\": [{\n        \"include\": \"#expressions-without-trailing-closures-or-member-references\"\n      }, {\n        \"include\": \"#expressions-trailing-closure\"\n      }, {\n        \"include\": \"#member-reference\"\n      }]\n    },\n    \"expressions-trailing-closure\": {\n      \"patterns\": [{\n        \"captures\": {\n          \"1\": {\n            \"name\": \"support.function.any-method.swift\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.definition.identifier.swift\"\n          },\n          \"3\": {\n            \"name\": \"punctuation.definition.identifier.swift\"\n          }\n        },\n        \"comment\": \"foo { body } -- a call with a trailing closure and no argument clause\",\n        \"match\": \"(#?(?<q>`?)[\\\\p{L}_][\\\\p{L}_\\\\p{N}\\\\p{M}]*(\\\\k<q>))(?=\\\\s*\\\\{)\",\n        \"name\": \"meta.function-call.trailing-closure-only.swift\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"support.function.any-method.trailing-closure-label.swift\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.definition.identifier.swift\"\n          },\n          \"3\": {\n            \"name\": \"punctuation.definition.identifier.swift\"\n          },\n          \"4\": {\n            \"name\": \"punctuation.separator.argument-label.swift\"\n          }\n        },\n        \"comment\": \"foo: { body } -- labeled-trailing-closure (SE-0279)\",\n        \"match\": \"((?<q>`?)[\\\\p{L}_][\\\\p{L}_\\\\p{N}\\\\p{M}]*(\\\\k<q>))\\\\s*(:)(?=\\\\s*\\\\{)\"\n      }]\n    },\n    \"expressions-without-trailing-closures\": {\n      \"patterns\": [{\n        \"include\": \"#expressions-without-trailing-closures-or-member-references\"\n      }, {\n        \"include\": \"#member-references\"\n      }]\n    },\n    \"expressions-without-trailing-closures-or-member-references\": {\n      \"patterns\": [{\n        \"include\": \"#comments\"\n      }, {\n        \"include\": \"#code-block\"\n      }, {\n        \"include\": \"#attributes\"\n      }, {\n        \"include\": \"#expressions-without-trailing-closures-or-member-references-closure-parameter\"\n      }, {\n        \"include\": \"#literals\"\n      }, {\n        \"include\": \"#operators\"\n      }, {\n        \"include\": \"#builtin-types\"\n      }, {\n        \"include\": \"#builtin-functions\"\n      }, {\n        \"include\": \"#builtin-global-functions\"\n      }, {\n        \"include\": \"#builtin-properties\"\n      }, {\n        \"include\": \"#expressions-without-trailing-closures-or-member-references-compound-name\"\n      }, {\n        \"include\": \"#conditionals\"\n      }, {\n        \"include\": \"#keywords\"\n      }, {\n        \"include\": \"#expressions-without-trailing-closures-or-member-references-availability-condition\"\n      }, {\n        \"include\": \"#expressions-without-trailing-closures-or-member-references-function-or-macro-call-expression\"\n      }, {\n        \"include\": \"#expressions-without-trailing-closures-or-member-references-macro-expansion\"\n      }, {\n        \"include\": \"#expressions-without-trailing-closures-or-member-references-subscript-expression\"\n      }, {\n        \"include\": \"#expressions-without-trailing-closures-or-member-references-parenthesized-expression\"\n      }, {\n        \"match\": \"\\\\b_\\\\b\",\n        \"name\": \"support.variable.discard-value.swift\"\n      }]\n    },\n    \"expressions-without-trailing-closures-or-member-references-availability-condition\": {\n      \"begin\": \"\\\\B(#(?:un)?available)(\\\\()\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"support.function.availability-condition.swift\"\n        },\n        \"2\": {\n          \"name\": \"punctuation.definition.arguments.begin.swift\"\n        }\n      },\n      \"end\": \"\\\\)\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.arguments.end.swift\"\n        }\n      },\n      \"patterns\": [{\n        \"captures\": {\n          \"1\": {\n            \"name\": \"keyword.other.platform.os.swift\"\n          },\n          \"2\": {\n            \"name\": \"constant.numeric.swift\"\n          }\n        },\n        \"match\": \"\\\\s*\\\\b((?:iOS|macOS|OSX|watchOS|tvOS|visionOS|UIKitForMac)(?:ApplicationExtension)?)\\\\b(?:\\\\s+([0-9]+(?:\\\\.[0-9]+)*\\\\b))\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"keyword.other.platform.all.swift\"\n          },\n          \"2\": {\n            \"name\": \"invalid.illegal.character-not-allowed-here.swift\"\n          }\n        },\n        \"match\": \"(\\\\*)\\\\s*(.*?)(?=[,)])\"\n      }, {\n        \"match\": \"[^\\\\s,)]+\",\n        \"name\": \"invalid.illegal.character-not-allowed-here.swift\"\n      }]\n    },\n    \"expressions-without-trailing-closures-or-member-references-closure-parameter\": {\n      \"match\": \"\\\\$[0-9]+\",\n      \"name\": \"variable.language.closure-parameter.swift\"\n    },\n    \"expressions-without-trailing-closures-or-member-references-compound-name\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"entity.name.function.compound-name.swift\"\n        },\n        \"2\": {\n          \"name\": \"punctuation.definition.entity.swift\"\n        },\n        \"3\": {\n          \"name\": \"punctuation.definition.entity.swift\"\n        },\n        \"4\": {\n          \"patterns\": [{\n            \"captures\": {\n              \"1\": {\n                \"name\": \"punctuation.definition.entity.swift\"\n              },\n              \"2\": {\n                \"name\": \"punctuation.definition.entity.swift\"\n              }\n            },\n            \"match\": \"(?<q>`?)(?!_:)[\\\\p{L}_][\\\\p{L}_\\\\p{N}\\\\p{M}]*(\\\\k<q>):\",\n            \"name\": \"entity.name.function.compound-name.swift\"\n          }]\n        }\n      },\n      \"comment\": \"a reference to a function with disambiguating argument labels, such as foo(_:), foo(bar:), etc.\",\n      \"match\": \"(?x)\\n((?<q1>`?)[\\\\p{L}_][\\\\p{L}_\\\\p{N}\\\\p{M}]*(\\\\k<q1>))\\n\\\\(\\n(\\n(\\n((?<q2>`?)[\\\\p{L}_][\\\\p{L}_\\\\p{N}\\\\p{M}]*(\\\\k<q2>))\\n:\\n)+\\n)\\n\\\\)\"\n    },\n    \"expressions-without-trailing-closures-or-member-references-expression-element-list\": {\n      \"patterns\": [{\n        \"include\": \"#comments\"\n      }, {\n        \"begin\": \"((?<q>`?)[\\\\p{L}_][\\\\p{L}_\\\\p{N}\\\\p{M}]*(\\\\k<q>))\\\\s*(:)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"support.function.any-method.swift\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.definition.identifier.swift\"\n          },\n          \"3\": {\n            \"name\": \"punctuation.definition.identifier.swift\"\n          },\n          \"4\": {\n            \"name\": \"punctuation.separator.argument-label.swift\"\n          }\n        },\n        \"comment\": \"an element with a label\",\n        \"end\": \"(?=[,)\\\\]])\",\n        \"patterns\": [{\n          \"include\": \"#expressions\"\n        }]\n      }, {\n        \"begin\": \"(?![,)\\\\]])(?=\\\\S)\",\n        \"comment\": \"an element without a label (i.e. anything else)\",\n        \"end\": \"(?=[,)\\\\]])\",\n        \"patterns\": [{\n          \"include\": \"#expressions\"\n        }]\n      }]\n    },\n    \"expressions-without-trailing-closures-or-member-references-function-or-macro-call-expression\": {\n      \"patterns\": [{\n        \"begin\": \"(#?(?<q>`?)[\\\\p{L}_][\\\\p{L}_\\\\p{N}\\\\p{M}]*(\\\\k<q>))\\\\s*(\\\\()\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"support.function.any-method.swift\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.definition.identifier.swift\"\n          },\n          \"3\": {\n            \"name\": \"punctuation.definition.identifier.swift\"\n          },\n          \"4\": {\n            \"name\": \"punctuation.definition.arguments.begin.swift\"\n          }\n        },\n        \"comment\": \"foo(args) -- a call whose callee is a highlightable name\",\n        \"end\": \"\\\\)\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.arguments.end.swift\"\n          }\n        },\n        \"name\": \"meta.function-call.swift\",\n        \"patterns\": [{\n          \"include\": \"#expressions-without-trailing-closures-or-member-references-expression-element-list\"\n        }]\n      }, {\n        \"begin\": \"(?<=[`\\\\])}>\\\\p{L}_\\\\p{N}\\\\p{M}])\\\\s*(\\\\()\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.arguments.begin.swift\"\n          }\n        },\n        \"comment\": \"[Int](args) -- a call whose callee is a more complicated expression\",\n        \"end\": \"\\\\)\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.arguments.end.swift\"\n          }\n        },\n        \"name\": \"meta.function-call.swift\",\n        \"patterns\": [{\n          \"include\": \"#expressions-without-trailing-closures-or-member-references-expression-element-list\"\n        }]\n      }]\n    },\n    \"expressions-without-trailing-closures-or-member-references-macro-expansion\": {\n      \"match\": \"(#(?<q>`?)[\\\\p{L}_][\\\\p{L}_\\\\p{N}\\\\p{M}]*(\\\\k<q>))\",\n      \"name\": \"support.function.any-method.swift\"\n    },\n    \"expressions-without-trailing-closures-or-member-references-parenthesized-expression\": {\n      \"begin\": \"\\\\(\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.section.tuple.begin.swift\"\n        }\n      },\n      \"comment\": 'correctly matching closure expressions is too hard (depends on trailing \"in\") so we just tack on some basics to the end of parenthesized-expression',\n      \"end\": \"(\\\\))\\\\s*((?:\\\\b(?:async|throws|rethrows)\\\\s)*)\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.section.tuple.end.swift\"\n        },\n        \"2\": {\n          \"patterns\": [{\n            \"match\": \"\\\\brethrows\\\\b\",\n            \"name\": \"invalid.illegal.rethrows-only-allowed-on-function-declarations.swift\"\n          }, {\n            \"include\": \"#async-throws\"\n          }]\n        }\n      },\n      \"patterns\": [{\n        \"include\": \"#expressions-without-trailing-closures-or-member-references-expression-element-list\"\n      }]\n    },\n    \"expressions-without-trailing-closures-or-member-references-subscript-expression\": {\n      \"begin\": \"(?<=[`\\\\p{L}_\\\\p{N}\\\\p{M}])\\\\s*(\\\\[)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.definition.arguments.begin.swift\"\n        }\n      },\n      \"end\": \"\\\\]\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.arguments.end.swift\"\n        }\n      },\n      \"name\": \"meta.subscript-expression.swift\",\n      \"patterns\": [{\n        \"include\": \"#expressions-without-trailing-closures-or-member-references-expression-element-list\"\n      }]\n    },\n    \"keywords\": {\n      \"patterns\": [{\n        \"match\": \"(?<!\\\\.)\\\\b(?:if|else|guard|where|switch|case|default|fallthrough)\\\\b\",\n        \"name\": \"keyword.control.branch.swift\"\n      }, {\n        \"match\": \"(?<!\\\\.)\\\\b(?:continue|break|fallthrough|return)\\\\b\",\n        \"name\": \"keyword.control.transfer.swift\"\n      }, {\n        \"match\": \"(?<!\\\\.)\\\\b(?:while|for|in|each)\\\\b\",\n        \"name\": \"keyword.control.loop.swift\"\n      }, {\n        \"match\": \"\\\\bany\\\\b(?=\\\\s*`?[\\\\p{L}_])\",\n        \"name\": \"keyword.other.operator.type.existential.swift\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"keyword.control.loop.swift\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.whitespace.trailing.repeat.swift\"\n          }\n        },\n        \"comment\": \"extra scopes for repeat-while snippet\",\n        \"match\": \"(?<!\\\\.)\\\\b(repeat)\\\\b(\\\\s*)\"\n      }, {\n        \"match\": \"(?<!\\\\.)\\\\bdefer\\\\b\",\n        \"name\": \"keyword.control.defer.swift\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"invalid.illegal.try-must-precede-await.swift\"\n          },\n          \"2\": {\n            \"name\": \"keyword.control.await.swift\"\n          }\n        },\n        \"match\": \"(?<!\\\\.)\\\\b(?:(await\\\\s+try)|(await))\\\\b\"\n      }, {\n        \"match\": \"(?<!\\\\.)\\\\b(?:catch|throw|try)\\\\b|\\\\btry[?!]\\\\B\",\n        \"name\": \"keyword.control.exception.swift\"\n      }, {\n        \"match\": \"(?<!\\\\.)\\\\b(?:throws|rethrows)\\\\b\",\n        \"name\": \"storage.modifier.exception.swift\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"keyword.control.exception.swift\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.whitespace.trailing.do.swift\"\n          }\n        },\n        \"comment\": \"extra scopes for do-catch snippet\",\n        \"match\": \"(?<!\\\\.)\\\\b(do)\\\\b(\\\\s*)\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"storage.modifier.async.swift\"\n          },\n          \"2\": {\n            \"name\": \"keyword.other.declaration-specifier.swift\"\n          }\n        },\n        \"match\": \"(?<!\\\\.)\\\\b(?:(async)\\\\s+)?(let|var)\\\\b\"\n      }, {\n        \"match\": \"(?<!\\\\.)\\\\b(?:associatedtype|operator|typealias)\\\\b\",\n        \"name\": \"keyword.other.declaration-specifier.swift\"\n      }, {\n        \"match\": \"(?<!\\\\.)\\\\b(class|enum|extension|precedencegroup|protocol|struct|actor)\\\\b(?=\\\\s*`?[\\\\p{L}_])\",\n        \"name\": \"storage.type.$1.swift\"\n      }, {\n        \"match\": \"(?<!\\\\.)\\\\b(?:inout|static|final|lazy|mutating|nonmutating|optional|indirect|required|override|dynamic|convenience|infix|prefix|postfix|distributed|nonisolated|borrowing|consuming)\\\\b\",\n        \"name\": \"storage.modifier.swift\"\n      }, {\n        \"match\": \"\\\\binit[?!]|\\\\binit\\\\b|(?<!\\\\.)\\\\b(?:func|deinit|subscript|didSet|get|set|willSet)\\\\b\",\n        \"name\": \"storage.type.function.swift\"\n      }, {\n        \"match\": \"(?<!\\\\.)\\\\b(?:fileprivate|private|internal|public|open|package)\\\\b\",\n        \"name\": \"keyword.other.declaration-specifier.accessibility.swift\"\n      }, {\n        \"comment\": \"matches weak, unowned, unowned(safe), unowned(unsafe)\",\n        \"match\": \"(?<!\\\\.)\\\\bunowned\\\\((?:safe|unsafe)\\\\)|(?<!\\\\.)\\\\b(?:weak|unowned)\\\\b\",\n        \"name\": \"keyword.other.capture-specifier.swift\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"keyword.other.type.swift\"\n          },\n          \"2\": {\n            \"name\": \"keyword.other.type.metatype.swift\"\n          }\n        },\n        \"match\": \"(?<=\\\\.)(?:(dynamicType|self)|(Protocol|Type))\\\\b\"\n      }, {\n        \"match\": \"(?<!\\\\.)\\\\b(?:super|self|Self)\\\\b\",\n        \"name\": \"variable.language.swift\"\n      }, {\n        \"match\": \"\\\\B(?:#file|#filePath|#fileID|#line|#column|#function|#dsohandle)\\\\b|\\\\b(?:__FILE__|__LINE__|__COLUMN__|__FUNCTION__|__DSO_HANDLE__)\\\\b\",\n        \"name\": \"support.variable.swift\"\n      }, {\n        \"match\": \"(?<!\\\\.)\\\\bimport\\\\b\",\n        \"name\": \"keyword.control.import.swift\"\n      }, {\n        \"comment\": 'SE-0366: \"consume behaves as a contextual keyword. In order to avoid interfering with existing code that calls functions named consume, the operand to consume must begin with another identifier, and must consist of an identifier or postfix expression\"',\n        \"match\": \"(?<!\\\\.)\\\\bconsume(?=\\\\s+`?[\\\\p{L}_])\",\n        \"name\": \"keyword.control.consume.swift\"\n      }, {\n        \"comment\": 'SE-0377: \"copy is a contextual keyword, parsed as an operator if it is immediately followed by an identifier on the same line, like the consume x operator before it\"',\n        \"match\": \"(?<!\\\\.)\\\\bcopy(?=\\\\s+`?[\\\\p{L}_])\",\n        \"name\": \"keyword.control.copy.swift\"\n      }]\n    },\n    \"literals\": {\n      \"patterns\": [{\n        \"include\": \"#literals-boolean\"\n      }, {\n        \"include\": \"#literals-numeric\"\n      }, {\n        \"include\": \"#literals-string\"\n      }, {\n        \"match\": \"\\\\bnil\\\\b\",\n        \"name\": \"constant.language.nil.swift\"\n      }, {\n        \"comment\": 'object \"literals\" used in playgrounds',\n        \"match\": \"\\\\B#(colorLiteral|imageLiteral|fileLiteral)\\\\b\",\n        \"name\": \"support.function.object-literal.swift\"\n      }, {\n        \"match\": \"\\\\B#externalMacro\\\\b\",\n        \"name\": \"support.function.builtin-macro.swift\"\n      }, {\n        \"match\": \"\\\\B#keyPath\\\\b\",\n        \"name\": \"support.function.key-path.swift\"\n      }, {\n        \"begin\": \"\\\\B(#selector)(\\\\()(?:\\\\s*(getter|setter)\\\\s*(:))?\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"support.function.selector-reference.swift\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.definition.arguments.begin.swift\"\n          },\n          \"3\": {\n            \"name\": \"support.variable.parameter.swift\"\n          },\n          \"4\": {\n            \"name\": \"punctuation.separator.argument-label.swift\"\n          }\n        },\n        \"end\": \"\\\\)\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.arguments.end.swift\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#expressions\"\n        }]\n      }, {\n        \"include\": \"#literals-regular-expression-literal\"\n      }]\n    },\n    \"literals-boolean\": {\n      \"match\": \"\\\\b(true|false)\\\\b\",\n      \"name\": \"constant.language.boolean.swift\"\n    },\n    \"literals-numeric\": {\n      \"patterns\": [{\n        \"comment\": \"0.1, -4_2.5, 6.022e23, 10E-5\",\n        \"match\": \"(\\\\B\\\\-|\\\\b)(?<![\\\\[\\\\](){}\\\\p{L}_\\\\p{N}\\\\p{M}]\\\\.)[0-9][0-9_]*(?=\\\\.[0-9]|[eE])(?:\\\\.[0-9][0-9_]*)?(?:[eE][-+]?[0-9][0-9_]*)?\\\\b(?!\\\\.[0-9])\",\n        \"name\": \"constant.numeric.float.decimal.swift\"\n      }, {\n        \"comment\": \"-0x1.ap2_3, 0x31p-4\",\n        \"match\": \"(\\\\B\\\\-|\\\\b)(?<![\\\\[\\\\](){}\\\\p{L}_\\\\p{N}\\\\p{M}]\\\\.)(0x[0-9a-fA-F][0-9a-fA-F_]*)(?:\\\\.[0-9a-fA-F][0-9a-fA-F_]*)?[pP][-+]?[0-9][0-9_]*\\\\b(?!\\\\.[0-9])\",\n        \"name\": \"constant.numeric.float.hexadecimal.swift\"\n      }, {\n        \"comment\": \"0x1p, 0x1p_2, 0x1.5pa, 0x1.1p+1f, 0x1pz\",\n        \"match\": \"(\\\\B\\\\-|\\\\b)(?<![\\\\[\\\\](){}\\\\p{L}_\\\\p{N}\\\\p{M}]\\\\.)(0x[0-9a-fA-F][0-9a-fA-F_]*)(?:\\\\.[0-9a-fA-F][0-9a-fA-F_]*)?(?:[pP][-+]?\\\\w*)\\\\b(?!\\\\.[0-9])\",\n        \"name\": \"invalid.illegal.numeric.float.invalid-exponent.swift\"\n      }, {\n        \"comment\": \"0x1.5w (note that 0x1.f may be a valid expression)\",\n        \"match\": \"(\\\\B\\\\-|\\\\b)(?<![\\\\[\\\\](){}\\\\p{L}_\\\\p{N}\\\\p{M}]\\\\.)(0x[0-9a-fA-F][0-9a-fA-F_]*)\\\\.[0-9][\\\\w.]*\",\n        \"name\": \"invalid.illegal.numeric.float.missing-exponent.swift\"\n      }, {\n        \"comment\": \"-.5, .2f (note that 1.-.5 may be a valid expression)\",\n        \"match\": \"(?<=\\\\s|^)\\\\-?\\\\.[0-9][\\\\w.]*\",\n        \"name\": \"invalid.illegal.numeric.float.missing-leading-zero.swift\"\n      }, {\n        \"comment\": \"0b_0_1, 0x_1p+3q\",\n        \"match\": \"(\\\\B\\\\-|\\\\b)0[box]_[0-9a-fA-F_]*(?:[pPeE][+-]?\\\\w+)?[\\\\w.]+\",\n        \"name\": \"invalid.illegal.numeric.leading-underscore.swift\"\n      }, {\n        \"comment\": \"tuple positional member: not really a numeric literal, but not invalid\",\n        \"match\": \"(?<=[\\\\[\\\\](){}\\\\p{L}_\\\\p{N}\\\\p{M}]\\\\.)[0-9]+\\\\b\"\n      }, {\n        \"comment\": \"0b010, 0b1_0\",\n        \"match\": \"(\\\\B\\\\-|\\\\b)(?<![\\\\[\\\\](){}\\\\p{L}_\\\\p{N}\\\\p{M}]\\\\.)0b[01][01_]*\\\\b(?!\\\\.[0-9])\",\n        \"name\": \"constant.numeric.integer.binary.swift\"\n      }, {\n        \"comment\": \"0o1, 0o7_3\",\n        \"match\": \"(\\\\B\\\\-|\\\\b)(?<![\\\\[\\\\](){}\\\\p{L}_\\\\p{N}\\\\p{M}]\\\\.)0o[0-7][0-7_]*\\\\b(?!\\\\.[0-9])\",\n        \"name\": \"constant.numeric.integer.octal.swift\"\n      }, {\n        \"comment\": \"02, 3_456\",\n        \"match\": \"(\\\\B\\\\-|\\\\b)(?<![\\\\[\\\\](){}\\\\p{L}_\\\\p{N}\\\\p{M}]\\\\.)[0-9][0-9_]*\\\\b(?!\\\\.[0-9])\",\n        \"name\": \"constant.numeric.integer.decimal.swift\"\n      }, {\n        \"comment\": \"0x4, 0xF_7\",\n        \"match\": \"(\\\\B\\\\-|\\\\b)(?<![\\\\[\\\\](){}\\\\p{L}_\\\\p{N}\\\\p{M}]\\\\.)0x[0-9a-fA-F][0-9a-fA-F_]*\\\\b(?!\\\\.[0-9])\",\n        \"name\": \"constant.numeric.integer.hexadecimal.swift\"\n      }, {\n        \"match\": \"(\\\\B\\\\-|\\\\b)[0-9][\\\\w.]*\",\n        \"name\": \"invalid.illegal.numeric.other.swift\"\n      }]\n    },\n    \"literals-regular-expression-literal\": {\n      \"comment\": \"SE-0354 & SE-0355\",\n      \"patterns\": [{\n        \"begin\": \"(#+)/\\\\n\",\n        \"end\": \"/\\\\1\",\n        \"name\": \"string.regexp.block.swift\",\n        \"patterns\": [{\n          \"include\": \"#literals-regular-expression-literal-regex-guts\"\n        }, {\n          \"include\": \"#literals-regular-expression-literal-line-comment\"\n        }]\n      }, {\n        \"captures\": {\n          \"0\": {\n            \"patterns\": [{\n              \"include\": \"#literals-regular-expression-literal-regex-guts\"\n            }]\n          },\n          \"1\": {\n            \"name\": \"punctuation.definition.string.begin.regexp.swift\"\n          },\n          \"12\": {\n            \"name\": \"punctuation.definition.string.end.regexp.swift\"\n          },\n          \"13\": {\n            \"name\": \"invalid.illegal.returns-not-allowed.regexp\"\n          }\n        },\n        \"comment\": \"Single-line regular expression literals must be matched all in one go\\n in order to avoid ambiguities with operators, and to adhere to certain\\n parsing rules in SE-0354/SE-0355, such as:\\n - A regex literal will not be parsed if it contains an unbalanced ).\\n - A regex may end with a space only if it began with an escaped space\",\n        \"match\": \"(?x)\\n(((\\\\#+)?)/)\\n(?(3)|(?!/))\\n(?(3)|(?!\\\\s))\\n(\\\\\\\\\\\\s)?\\n(?<guts>\\n(?>\\n(?:\\n\\\\\\\\Q\\n(?:(?!\\\\\\\\E)(?!/\\\\2).)*+\\n(?:\\\\\\\\E\\n\\n| (?(3)|(?<!\\\\s))(?=/\\\\2)\\n)\\n| \\\\\\\\.\\n| \\\\(\\\\?\\\\#[^)]*\\\\)\\n| \\\\(\\\\?\\n\\n\\\\{(?<g1>\\\\{)?+(?<g2>\\\\{)?+(?<g3>\\\\{)?+(?<g4>\\\\{)?+(?<g5>\\\\{)?+\\n.+?\\n\\\\}(?(<g1>)\\\\})(?(<g2>)\\\\})(?(<g3>)\\\\})(?(<g4>)\\\\})(?(<g5>)\\\\})\\n(?:\\\\[(?!\\\\d)\\\\w+\\\\])?\\n[X<>]?\\n\\\\)\\n| (?<class>\\\\[ (?:\\\\\\\\. | [^\\\\[\\\\]] | \\\\g<class>)+ \\\\])\\n| \\\\(\\\\g<guts>?+\\\\)\\n| (?:(?!/\\\\2)[^()\\\\[\\\\\\\\])+\\n)+\\n)\\n)?+\\n# may end with a space only if it is an extended literal or contains only a single escaped space\\n(?(3)|(?(5)(?<!\\\\s)))\\n(/\\\\2)\\n| \\\\#+/.+(\\\\n)\",\n        \"name\": \"string.regexp.line.swift\"\n      }]\n    },\n    \"literals-regular-expression-literal-backreference-or-subpattern\": {\n      \"comment\": \"These patterns are separated to work around issues like https://github.com/microsoft/vscode-textmate/issues/164\",\n      \"patterns\": [{\n        \"captures\": {\n          \"1\": {\n            \"name\": \"constant.character.escape.backslash.regexp\"\n          },\n          \"2\": {\n            \"name\": \"variable.other.group-name.regexp\"\n          },\n          \"3\": {\n            \"name\": \"keyword.operator.recursion-level.regexp\"\n          },\n          \"4\": {\n            \"name\": \"constant.numeric.integer.decimal.regexp\"\n          },\n          \"5\": {\n            \"name\": \"constant.numeric.integer.decimal.regexp\"\n          },\n          \"6\": {\n            \"name\": \"keyword.operator.recursion-level.regexp\"\n          },\n          \"7\": {\n            \"name\": \"constant.numeric.integer.decimal.regexp\"\n          },\n          \"8\": {\n            \"name\": \"constant.character.escape.backslash.regexp\"\n          }\n        },\n        \"comment\": \"'\\\\g{' NamedOrNumberRef '}'\",\n        \"match\": \"(?x)(\\\\\\\\g\\\\{) (?: ((?!\\\\d)\\\\w+) (?:([+-])(\\\\d+))? | ([+-]?\\\\d+) (?:([+-])(\\\\d+))? ) (\\\\})\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"constant.character.escape.backslash.regexp\"\n          },\n          \"2\": {\n            \"name\": \"constant.numeric.integer.decimal.regexp\"\n          },\n          \"3\": {\n            \"name\": \"keyword.operator.recursion-level.regexp\"\n          },\n          \"4\": {\n            \"name\": \"constant.numeric.integer.decimal.regexp\"\n          }\n        },\n        \"comment\": \"'\\\\g' NumberRef\",\n        \"match\": \"(?x)(\\\\\\\\g) ([+-]?\\\\d+) (?:([+-])(\\\\d+))?\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"constant.character.escape.backslash.regexp\"\n          },\n          \"3\": {\n            \"name\": \"variable.other.group-name.regexp\"\n          },\n          \"4\": {\n            \"name\": \"keyword.operator.recursion-level.regexp\"\n          },\n          \"5\": {\n            \"name\": \"constant.numeric.integer.decimal.regexp\"\n          },\n          \"6\": {\n            \"name\": \"constant.numeric.integer.decimal.regexp\"\n          },\n          \"7\": {\n            \"name\": \"keyword.operator.recursion-level.regexp\"\n          },\n          \"8\": {\n            \"name\": \"constant.numeric.integer.decimal.regexp\"\n          },\n          \"9\": {\n            \"name\": \"constant.character.escape.backslash.regexp\"\n          }\n        },\n        \"comment\": `'\\\\k<' NamedOrNumberRef '>'\n \"\\\\k'\" NamedOrNumberRef \"'\"\n '\\\\g<' NamedOrNumberRef '>'\n \"\\\\g'\" NamedOrNumberRef \"'\"`,\n        \"match\": \"(?x)(\\\\\\\\[gk](<)|\\\\\\\\[gk]') (?: ((?!\\\\d)\\\\w+) (?:([+-])(\\\\d+))? | ([+-]?\\\\d+) (?:([+-])(\\\\d+))? ) ((?(2)>|'))\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"constant.character.escape.backslash.regexp\"\n          },\n          \"2\": {\n            \"name\": \"variable.other.group-name.regexp\"\n          },\n          \"3\": {\n            \"name\": \"keyword.operator.recursion-level.regexp\"\n          },\n          \"4\": {\n            \"name\": \"constant.numeric.integer.decimal.regexp\"\n          },\n          \"5\": {\n            \"name\": \"constant.character.escape.backslash.regexp\"\n          }\n        },\n        \"comment\": \"'\\\\k{' NamedRef '}'\",\n        \"match\": \"(?x)(\\\\\\\\k\\\\{) ((?!\\\\d)\\\\w+) (?:([+-])(\\\\d+))? (\\\\})\"\n      }, {\n        \"match\": \"\\\\\\\\[1-9][0-9]+\",\n        \"name\": \"keyword.other.back-reference.regexp\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"keyword.other.back-reference.regexp\"\n          },\n          \"2\": {\n            \"name\": \"variable.other.group-name.regexp\"\n          },\n          \"3\": {\n            \"name\": \"keyword.operator.recursion-level.regexp\"\n          },\n          \"4\": {\n            \"name\": \"constant.numeric.integer.decimal.regexp\"\n          },\n          \"5\": {\n            \"name\": \"keyword.other.back-reference.regexp\"\n          }\n        },\n        \"comment\": \"'(?P=' NamedRef ')'\",\n        \"match\": \"(?x)(\\\\(\\\\?(?:P[=>]|&)) ((?!\\\\d)\\\\w+) (?:([+-])(\\\\d+))? (\\\\))\"\n      }, {\n        \"match\": \"\\\\(\\\\?R\\\\)\",\n        \"name\": \"keyword.other.back-reference.regexp\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"keyword.other.back-reference.regexp\"\n          },\n          \"2\": {\n            \"name\": \"constant.numeric.integer.decimal.regexp\"\n          },\n          \"3\": {\n            \"name\": \"keyword.operator.recursion-level.regexp\"\n          },\n          \"4\": {\n            \"name\": \"constant.numeric.integer.decimal.regexp\"\n          },\n          \"5\": {\n            \"name\": \"keyword.other.back-reference.regexp\"\n          }\n        },\n        \"comment\": \"'(?' NumberRef ')'\",\n        \"match\": \"(?x)(\\\\(\\\\?) ([+-]?\\\\d+) (?:([+-])(\\\\d+))? (\\\\))\"\n      }]\n    },\n    \"literals-regular-expression-literal-backtracking-directive-or-global-matching-option\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"keyword.control.directive.regexp\"\n        },\n        \"2\": {\n          \"name\": \"keyword.control.directive.regexp\"\n        },\n        \"3\": {\n          \"name\": \"keyword.control.directive.regexp\"\n        },\n        \"4\": {\n          \"name\": \"variable.language.tag.regexp\"\n        },\n        \"5\": {\n          \"name\": \"keyword.control.directive.regexp\"\n        },\n        \"6\": {\n          \"name\": \"keyword.operator.assignment.regexp\"\n        },\n        \"7\": {\n          \"name\": \"constant.numeric.integer.decimal.regexp\"\n        },\n        \"8\": {\n          \"name\": \"keyword.control.directive.regexp\"\n        },\n        \"9\": {\n          \"name\": \"keyword.control.directive.regexp\"\n        }\n      },\n      \"match\": \"(?x)\\n(\\\\(\\\\*)\\n(?:\\n(ACCEPT|FAIL|F|MARK(?=:)|(?=:)|COMMIT|PRUNE|SKIP|THEN)\\n(?:(:)([^)]+))?\\n| (?:(LIMIT_(?:DEPTH|HEAP|MATCH))(=)(\\\\d+))\\n| (\\nCRLF | CR | ANYCRLF | ANY | LF | NUL\\n| BSR_ANYCRLF | BSR_UNICODE\\n| NOTEMPTY_ATSTART | NOTEMPTY\\n| NO_AUTO_POSSESS | NO_DOTSTAR_ANCHOR\\n| NO_JIT | NO_START_OPT | UTF | UCP\\n)\\n)\\n(\\\\))\"\n    },\n    \"literals-regular-expression-literal-callout\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"punctuation.definition.group.regexp\"\n        },\n        \"2\": {\n          \"name\": \"keyword.control.callout.regexp\"\n        },\n        \"3\": {\n          \"name\": \"constant.numeric.integer.decimal.regexp\"\n        },\n        \"4\": {\n          \"name\": \"entity.name.function.callout.regexp\"\n        },\n        \"5\": {\n          \"name\": \"entity.name.function.callout.regexp\"\n        },\n        \"6\": {\n          \"name\": \"entity.name.function.callout.regexp\"\n        },\n        \"7\": {\n          \"name\": \"entity.name.function.callout.regexp\"\n        },\n        \"8\": {\n          \"name\": \"entity.name.function.callout.regexp\"\n        },\n        \"9\": {\n          \"name\": \"entity.name.function.callout.regexp\"\n        },\n        \"10\": {\n          \"name\": \"entity.name.function.callout.regexp\"\n        },\n        \"11\": {\n          \"name\": \"entity.name.function.callout.regexp\"\n        },\n        \"12\": {\n          \"name\": \"punctuation.definition.group.regexp\"\n        },\n        \"13\": {\n          \"name\": \"punctuation.definition.group.regexp\"\n        },\n        \"14\": {\n          \"name\": \"keyword.control.callout.regexp\"\n        },\n        \"15\": {\n          \"name\": \"entity.name.function.callout.regexp\"\n        },\n        \"16\": {\n          \"name\": \"variable.language.tag-name.regexp\"\n        },\n        \"17\": {\n          \"name\": \"punctuation.definition.group.regexp\"\n        },\n        \"18\": {\n          \"name\": \"punctuation.definition.group.regexp\"\n        },\n        \"19\": {\n          \"name\": \"keyword.control.callout.regexp\"\n        },\n        \"26\": {\n          \"name\": \"variable.language.tag-name.regexp\"\n        },\n        \"27\": {\n          \"name\": \"keyword.control.callout.regexp\"\n        },\n        \"28\": {\n          \"name\": \"punctuation.definition.group.regexp\"\n        }\n      },\n      \"match\": \"(?x)\\n# PCRECallout\\n(\\\\()(?<keyw>\\\\?C)\\n(?:\\n(?<num>\\\\d+)\\n| `(?<name>(?:[^`]|``)*)`\\n| '(?<name>(?:[^']|'')*)'\\n| \\\"(?<name>(?:[^\\\"]|\\\"\\\")*)\\\"\\n| \\\\^(?<name>(?:[^\\\\^]|\\\\^\\\\^)*)\\\\^\\n| %(?<name>(?:[^%]|%%)*)%\\n| \\\\#(?<name>(?:[^#]|\\\\#\\\\#)*)\\\\#\\n| \\\\$(?<name>(?:[^$]|\\\\$\\\\$)*)\\\\$\\n| \\\\{(?<name>(?:[^}]|\\\\}\\\\})*)\\\\}\\n)?\\n(\\\\))\\n# NamedCallout\\n| (\\\\()(?<keyw>\\\\*)\\n(?<name>(?!\\\\d)\\\\w+)\\n(?:\\\\[(?<tag>(?!\\\\d)\\\\w+)\\\\])?\\n(?:\\\\{ [^,}]+ (?:,[^,}]+)* \\\\})?\\n(\\\\))\\n# InterpolatedCallout\\n| (\\\\()(?<keyw>\\\\?)\\n\\n(\\\\{(?<g1>\\\\{)?+(?<g2>\\\\{)?+(?<g3>\\\\{)?+(?<g4>\\\\{)?+(?<g5>\\\\{)?+) .+? \\\\}(?(<g1>)\\\\})(?(<g2>)\\\\})(?(<g3>)\\\\})(?(<g4>)\\\\})(?(<g5>)\\\\})\\n(?:\\\\[(?<tag>(?!\\\\d)\\\\w+)\\\\])?\\n(?<keyw>[X<>]?)\\n(\\\\))\",\n      \"name\": \"meta.callout.regexp\"\n    },\n    \"literals-regular-expression-literal-character-properties\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"support.variable.character-property.regexp\"\n        },\n        \"2\": {\n          \"name\": \"punctuation.definition.character-class.regexp\"\n        },\n        \"3\": {\n          \"name\": \"support.variable.character-property.regexp\"\n        },\n        \"4\": {\n          \"name\": \"punctuation.definition.character-class.regexp\"\n        }\n      },\n      \"match\": \"(?x)\\n\\\\\\\\[pP]\\\\{ ([\\\\s\\\\w-]+(?:=[\\\\s\\\\w-]+)?) \\\\}\\n| (\\\\[:) ([\\\\s\\\\w-]+(?:=[\\\\s\\\\w-]+)?) (:\\\\])\",\n      \"name\": \"constant.other.character-class.set.regexp\"\n    },\n    \"literals-regular-expression-literal-custom-char-class\": {\n      \"patterns\": [{\n        \"begin\": \"(\\\\[)(\\\\^)?\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.character-class.regexp\"\n          },\n          \"2\": {\n            \"name\": \"keyword.operator.negation.regexp\"\n          }\n        },\n        \"end\": \"\\\\]\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.character-class.regexp\"\n          }\n        },\n        \"name\": \"constant.other.character-class.set.regexp\",\n        \"patterns\": [{\n          \"include\": \"#literals-regular-expression-literal-custom-char-class-members\"\n        }]\n      }]\n    },\n    \"literals-regular-expression-literal-custom-char-class-members\": {\n      \"comment\": \"TODO: should also include atoms?\",\n      \"patterns\": [{\n        \"comment\": \"\\\\b inside a character class represents a backspace\",\n        \"match\": \"\\\\\\\\b\",\n        \"name\": \"constant.character.escape.backslash.regexp\"\n      }, {\n        \"include\": \"#literals-regular-expression-literal-custom-char-class\"\n      }, {\n        \"include\": \"#literals-regular-expression-literal-quote\"\n      }, {\n        \"include\": \"#literals-regular-expression-literal-set-operators\"\n      }, {\n        \"include\": \"#literals-regular-expression-literal-unicode-scalars\"\n      }, {\n        \"include\": \"#literals-regular-expression-literal-character-properties\"\n      }]\n    },\n    \"literals-regular-expression-literal-group-option-toggle\": {\n      \"comment\": 'A matching option sequence may be part of an \"isolated group\" which has an implicit scope that wraps the remaining elements of the current group',\n      \"match\": \"(?x)\\n\\\\(\\\\?\\n(?:\\n\\\\^(?:[iJmnsUxwDPSW]|xx|y\\\\{[gw]\\\\})*\\n| (?:[iJmnsUxwDPSW]|xx|y\\\\{[gw]\\\\})+\\n| (?:[iJmnsUxwDPSW]|xx|y\\\\{[gw]\\\\})* - (?:[iJmnsUxwDPSW]|xx|y\\\\{[gw]\\\\})*\\n)\\n\\\\)\",\n      \"name\": \"keyword.other.option-toggle.regexp\"\n    },\n    \"literals-regular-expression-literal-group-or-conditional\": {\n      \"patterns\": [{\n        \"begin\": \"(\\\\()(\\\\?~)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.group.regexp\"\n          },\n          \"2\": {\n            \"name\": \"keyword.control.conditional.absent.regexp\"\n          }\n        },\n        \"end\": \"\\\\)\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.group.regexp\"\n          }\n        },\n        \"name\": \"meta.group.absent.regexp\",\n        \"patterns\": [{\n          \"include\": \"#literals-regular-expression-literal-regex-guts\"\n        }]\n      }, {\n        \"begin\": \"(?x)\\n# KnownConditionalStart\\n(\\\\() (?<cond>\\\\?\\\\()\\n(?:\\n(?<NumberRef> (?<num>[+-]?\\\\d+)(?:(?<op>[+-])(?<num>\\\\d+))? )\\n| (?<cond>R) \\\\g<NumberRef>?\\n| (?<cond>R&) (?<NamedRef> (?<name>(?!\\\\d)\\\\w+) (?:(?<op>[+-])(?<num>\\\\d+))? )\\n| (?<cond><) (?:\\\\g<NamedRef>|\\\\g<NumberRef>) (?<cond>>)\\n| (?<cond>') (?:\\\\g<NamedRef>|\\\\g<NumberRef>) (?<cond>')\\n| (?<cond>DEFINE)\\n| (?<cond>VERSION)(?<compar>>?=)(?<num>\\\\d+\\\\.\\\\d+)\\n)\\n(?<cond>\\\\))\\n| (\\\\()(?<cond>\\\\?)(?=\\\\()\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.group.regexp\"\n          },\n          \"2\": {\n            \"name\": \"keyword.control.conditional.regexp\"\n          },\n          \"4\": {\n            \"name\": \"constant.numeric.integer.decimal.regexp\"\n          },\n          \"5\": {\n            \"name\": \"keyword.operator.recursion-level.regexp\"\n          },\n          \"6\": {\n            \"name\": \"constant.numeric.integer.decimal.regexp\"\n          },\n          \"7\": {\n            \"name\": \"keyword.control.conditional.regexp\"\n          },\n          \"8\": {\n            \"name\": \"keyword.control.conditional.regexp\"\n          },\n          \"10\": {\n            \"name\": \"variable.other.group-name.regexp\"\n          },\n          \"11\": {\n            \"name\": \"keyword.operator.recursion-level.regexp\"\n          },\n          \"12\": {\n            \"name\": \"constant.numeric.integer.decimal.regexp\"\n          },\n          \"13\": {\n            \"name\": \"keyword.control.conditional.regexp\"\n          },\n          \"14\": {\n            \"name\": \"keyword.control.conditional.regexp\"\n          },\n          \"15\": {\n            \"name\": \"keyword.control.conditional.regexp\"\n          },\n          \"16\": {\n            \"name\": \"keyword.control.conditional.regexp\"\n          },\n          \"17\": {\n            \"name\": \"keyword.control.conditional.regexp\"\n          },\n          \"18\": {\n            \"name\": \"keyword.control.conditional.regexp\"\n          },\n          \"19\": {\n            \"name\": \"keyword.operator.comparison.regexp\"\n          },\n          \"20\": {\n            \"name\": \"constant.numeric.integer.decimal.regexp\"\n          },\n          \"21\": {\n            \"name\": \"keyword.control.conditional.regexp\"\n          },\n          \"22\": {\n            \"name\": \"punctuation.definition.group.regexp\"\n          },\n          \"23\": {\n            \"name\": \"keyword.control.conditional.regexp\"\n          }\n        },\n        \"end\": \"\\\\)\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.group.regexp\"\n          }\n        },\n        \"name\": \"meta.group.conditional.regexp\",\n        \"patterns\": [{\n          \"include\": \"#literals-regular-expression-literal-regex-guts\"\n        }]\n      }, {\n        \"begin\": \"(?x)\\n(\\\\()\\n(\\n\\n(\\\\?)\\n(?:\\n([:|>=!*] | <[=!*])\\n\\n| P?< (?:((?!\\\\d)\\\\w+) (-))? ((?!\\\\d)\\\\w+) >\\n| ' (?:((?!\\\\d)\\\\w+) (-))? ((?!\\\\d)\\\\w+) '\\n\\n| (?:\\n\\\\^(?:[iJmnsUxwDPSW]|xx|y\\\\{[gw]\\\\})*\\n| (?:[iJmnsUxwDPSW]|xx|y\\\\{[gw]\\\\})+\\n| (?:[iJmnsUxwDPSW]|xx|y\\\\{[gw]\\\\})* - (?:[iJmnsUxwDPSW]|xx|y\\\\{[gw]\\\\})*\\n):\\n)\\n\\n| \\\\*(\\natomic\\n|pla|positive_lookahead\\n|nla|negative_lookahead\\n|plb|positive_lookbehind\\n|nlb|negative_lookbehind\\n|napla|non_atomic_positive_lookahead\\n|naplb|non_atomic_positive_lookbehind\\n|sr|script_run\\n|asr|atomic_script_run\\n):\\n)?+\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.group.regexp\"\n          },\n          \"2\": {\n            \"name\": \"keyword.other.group-options.regexp\"\n          },\n          \"3\": {\n            \"name\": \"punctuation.definition.group.regexp\"\n          },\n          \"4\": {\n            \"name\": \"punctuation.definition.group.regexp\"\n          },\n          \"5\": {\n            \"name\": \"variable.other.group-name.regexp\"\n          },\n          \"6\": {\n            \"name\": \"keyword.operator.balancing-group.regexp\"\n          },\n          \"7\": {\n            \"name\": \"variable.other.group-name.regexp\"\n          },\n          \"8\": {\n            \"name\": \"variable.other.group-name.regexp\"\n          },\n          \"9\": {\n            \"name\": \"keyword.operator.balancing-group.regexp\"\n          },\n          \"10\": {\n            \"name\": \"variable.other.group-name.regexp\"\n          }\n        },\n        \"end\": \"\\\\)\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.group.regexp\"\n          }\n        },\n        \"name\": \"meta.group.regexp\",\n        \"patterns\": [{\n          \"include\": \"#literals-regular-expression-literal-regex-guts\"\n        }]\n      }]\n    },\n    \"literals-regular-expression-literal-line-comment\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"punctuation.definition.comment.regexp\"\n        }\n      },\n      \"match\": \"(\\\\#).*$\",\n      \"name\": \"comment.line.regexp\"\n    },\n    \"literals-regular-expression-literal-quote\": {\n      \"begin\": \"\\\\\\\\Q\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"constant.character.escape.backslash.regexp\"\n        }\n      },\n      \"end\": \"\\\\\\\\E|(\\\\n)\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"constant.character.escape.backslash.regexp\"\n        },\n        \"1\": {\n          \"name\": \"invalid.illegal.returns-not-allowed.regexp\"\n        }\n      },\n      \"name\": \"string.quoted.other.regexp.swift\"\n    },\n    \"literals-regular-expression-literal-regex-guts\": {\n      \"patterns\": [{\n        \"include\": \"#literals-regular-expression-literal-quote\"\n      }, {\n        \"begin\": \"\\\\(\\\\?\\\\#\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.comment.begin.regexp\"\n          }\n        },\n        \"end\": \"\\\\)\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.comment.end.regexp\"\n          }\n        },\n        \"name\": \"comment.block.regexp\"\n      }, {\n        \"begin\": \"<\\\\{\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.section.embedded.begin.regexp\"\n          }\n        },\n        \"end\": \"\\\\}>\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.section.embedded.end.regexp\"\n          }\n        },\n        \"name\": \"meta.embedded.expression.regexp\"\n      }, {\n        \"include\": \"#literals-regular-expression-literal-unicode-scalars\"\n      }, {\n        \"include\": \"#literals-regular-expression-literal-character-properties\"\n      }, {\n        \"match\": \"[$^]|\\\\\\\\[AbBGyYzZ]|\\\\\\\\K\",\n        \"name\": \"keyword.control.anchor.regexp\"\n      }, {\n        \"include\": \"#literals-regular-expression-literal-backtracking-directive-or-global-matching-option\"\n      }, {\n        \"include\": \"#literals-regular-expression-literal-callout\"\n      }, {\n        \"include\": \"#literals-regular-expression-literal-backreference-or-subpattern\"\n      }, {\n        \"match\": \"\\\\.|\\\\\\\\[CdDhHNORsSvVwWX]\",\n        \"name\": \"constant.character.character-class.regexp\"\n      }, {\n        \"match\": \"\\\\\\\\c.\",\n        \"name\": \"constant.character.entity.control-character.regexp\"\n      }, {\n        \"match\": \"\\\\\\\\[^c]\",\n        \"name\": \"constant.character.escape.backslash.regexp\"\n      }, {\n        \"match\": \"\\\\|\",\n        \"name\": \"keyword.operator.or.regexp\"\n      }, {\n        \"match\": \"[*+?]\",\n        \"name\": \"keyword.operator.quantifier.regexp\"\n      }, {\n        \"match\": \"\\\\{\\\\s*\\\\d+\\\\s*(?:,\\\\s*\\\\d*\\\\s*)?\\\\}|\\\\{\\\\s*,\\\\s*\\\\d+\\\\s*\\\\}\",\n        \"name\": \"keyword.operator.quantifier.regexp\"\n      }, {\n        \"include\": \"#literals-regular-expression-literal-custom-char-class\"\n      }, {\n        \"include\": \"#literals-regular-expression-literal-group-option-toggle\"\n      }, {\n        \"include\": \"#literals-regular-expression-literal-group-or-conditional\"\n      }]\n    },\n    \"literals-regular-expression-literal-set-operators\": {\n      \"patterns\": [{\n        \"match\": \"&&\",\n        \"name\": \"keyword.operator.intersection.regexp.swift\"\n      }, {\n        \"match\": \"--\",\n        \"name\": \"keyword.operator.subtraction.regexp.swift\"\n      }, {\n        \"match\": \"\\\\~\\\\~\",\n        \"name\": \"keyword.operator.symmetric-difference.regexp.swift\"\n      }]\n    },\n    \"literals-regular-expression-literal-unicode-scalars\": {\n      \"match\": \"(?x)\\n\\\\\\\\u\\\\{\\\\s*(?:[0-9a-fA-F]+\\\\s*)+\\\\}\\n| \\\\\\\\u[0-9a-fA-F]{4}\\n| \\\\\\\\x\\\\{[0-9a-fA-F]+\\\\}\\n| \\\\\\\\x[0-9a-fA-F]{0,2}\\n| \\\\\\\\U[0-9a-fA-F]{8}\\n| \\\\\\\\o\\\\{[0-7]+\\\\}\\n| \\\\\\\\0[0-7]{0,3}\\n| \\\\\\\\N\\\\{(?:U\\\\+[0-9a-fA-F]{1,8} | [\\\\s\\\\w-]+)\\\\}\",\n      \"name\": \"constant.character.numeric.regexp\"\n    },\n    \"literals-string\": {\n      \"patterns\": [{\n        \"begin\": '\"\"\"',\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.begin.swift\"\n          }\n        },\n        \"comment\": \"SE-0168: Multi-Line String Literals\",\n        \"end\": '\"\"\"(#*)',\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.end.swift\"\n          },\n          \"1\": {\n            \"name\": \"invalid.illegal.extra-closing-delimiter.swift\"\n          }\n        },\n        \"name\": \"string.quoted.double.block.swift\",\n        \"patterns\": [{\n          \"match\": '\\\\G.+(?=\"\"\")|\\\\G.+',\n          \"name\": \"invalid.illegal.content-after-opening-delimiter.swift\"\n        }, {\n          \"match\": \"\\\\\\\\\\\\s*\\\\n\",\n          \"name\": \"constant.character.escape.newline.swift\"\n        }, {\n          \"include\": \"#literals-string-string-guts\"\n        }, {\n          \"comment\": 'Allow \\\\(\"\"\"...\"\"\") to appear inside a block string',\n          \"match\": '\\\\S((?!\\\\\\\\\\\\().)*(?=\"\"\")',\n          \"name\": \"invalid.illegal.content-before-closing-delimiter.swift\"\n        }]\n      }, {\n        \"begin\": '#\"\"\"',\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.begin.swift\"\n          }\n        },\n        \"end\": '\"\"\"#(#*)',\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.end.swift\"\n          },\n          \"1\": {\n            \"name\": \"invalid.illegal.extra-closing-delimiter.swift\"\n          }\n        },\n        \"name\": \"string.quoted.double.block.raw.swift\",\n        \"patterns\": [{\n          \"match\": '\\\\G.+(?=\"\"\")|\\\\G.+',\n          \"name\": \"invalid.illegal.content-after-opening-delimiter.swift\"\n        }, {\n          \"match\": \"\\\\\\\\#\\\\s*\\\\n\",\n          \"name\": \"constant.character.escape.newline.swift\"\n        }, {\n          \"include\": \"#literals-string-raw-string-guts\"\n        }, {\n          \"comment\": 'Allow \\\\(\"\"\"...\"\"\") to appear inside a block string',\n          \"match\": '\\\\S((?!\\\\\\\\#\\\\().)*(?=\"\"\")',\n          \"name\": \"invalid.illegal.content-before-closing-delimiter.swift\"\n        }]\n      }, {\n        \"begin\": '(##+)\"\"\"',\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.begin.swift\"\n          }\n        },\n        \"end\": '\"\"\"\\\\1(#*)',\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.end.swift\"\n          },\n          \"1\": {\n            \"name\": \"invalid.illegal.extra-closing-delimiter.swift\"\n          }\n        },\n        \"name\": \"string.quoted.double.block.raw.swift\",\n        \"patterns\": [{\n          \"match\": '\\\\G.+(?=\"\"\")|\\\\G.+',\n          \"name\": \"invalid.illegal.content-after-opening-delimiter.swift\"\n        }]\n      }, {\n        \"begin\": '\"',\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.begin.swift\"\n          }\n        },\n        \"end\": '\"(#*)',\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.end.swift\"\n          },\n          \"1\": {\n            \"name\": \"invalid.illegal.extra-closing-delimiter.swift\"\n          }\n        },\n        \"name\": \"string.quoted.double.single-line.swift\",\n        \"patterns\": [{\n          \"match\": \"\\\\r|\\\\n\",\n          \"name\": \"invalid.illegal.returns-not-allowed.swift\"\n        }, {\n          \"include\": \"#literals-string-string-guts\"\n        }]\n      }, {\n        \"begin\": '(##+)\"',\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.begin.raw.swift\"\n          }\n        },\n        \"comment\": \"SE-0168: raw string literals (more than one #, grammar limitations prevent us from supporting escapes)\",\n        \"end\": '\"\\\\1(#*)',\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.end.raw.swift\"\n          },\n          \"1\": {\n            \"name\": \"invalid.illegal.extra-closing-delimiter.swift\"\n          }\n        },\n        \"name\": \"string.quoted.double.single-line.raw.swift\",\n        \"patterns\": [{\n          \"match\": \"\\\\r|\\\\n\",\n          \"name\": \"invalid.illegal.returns-not-allowed.swift\"\n        }]\n      }, {\n        \"begin\": '#\"',\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.begin.raw.swift\"\n          }\n        },\n        \"comment\": \"SE-0168: raw string literals (one #, escapes supported)\",\n        \"end\": '\"#(#*)',\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.end.raw.swift\"\n          },\n          \"1\": {\n            \"name\": \"invalid.illegal.extra-closing-delimiter.swift\"\n          }\n        },\n        \"name\": \"string.quoted.double.single-line.raw.swift\",\n        \"patterns\": [{\n          \"match\": \"\\\\r|\\\\n\",\n          \"name\": \"invalid.illegal.returns-not-allowed.swift\"\n        }, {\n          \"include\": \"#literals-string-raw-string-guts\"\n        }]\n      }]\n    },\n    \"literals-string-raw-string-guts\": {\n      \"comment\": \"the same as #string-guts but with # in escapes\",\n      \"patterns\": [{\n        \"match\": `\\\\\\\\#[0\\\\\\\\tnr\"']`,\n        \"name\": \"constant.character.escape.swift\"\n      }, {\n        \"match\": \"\\\\\\\\#u\\\\{[0-9a-fA-F]{1,8}\\\\}\",\n        \"name\": \"constant.character.escape.unicode.swift\"\n      }, {\n        \"begin\": \"\\\\\\\\#\\\\(\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.section.embedded.begin.swift\"\n          }\n        },\n        \"contentName\": \"source.swift\",\n        \"end\": \"(\\\\))\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.section.embedded.end.swift\"\n          },\n          \"1\": {\n            \"name\": \"source.swift\"\n          }\n        },\n        \"name\": \"meta.embedded.line.swift\",\n        \"patterns\": [{\n          \"include\": \"$self\"\n        }, {\n          \"begin\": \"\\\\(\",\n          \"comment\": \"Nested parens\",\n          \"end\": \"\\\\)\"\n        }]\n      }, {\n        \"match\": \"\\\\\\\\#.\",\n        \"name\": \"invalid.illegal.escape-not-recognized\"\n      }]\n    },\n    \"literals-string-string-guts\": {\n      \"patterns\": [{\n        \"match\": `\\\\\\\\[0\\\\\\\\tnr\"']`,\n        \"name\": \"constant.character.escape.swift\"\n      }, {\n        \"match\": \"\\\\\\\\u\\\\{[0-9a-fA-F]{1,8}\\\\}\",\n        \"name\": \"constant.character.escape.unicode.swift\"\n      }, {\n        \"begin\": \"\\\\\\\\\\\\(\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.section.embedded.begin.swift\"\n          }\n        },\n        \"contentName\": \"source.swift\",\n        \"end\": \"(\\\\))\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.section.embedded.end.swift\"\n          },\n          \"1\": {\n            \"name\": \"source.swift\"\n          }\n        },\n        \"name\": \"meta.embedded.line.swift\",\n        \"patterns\": [{\n          \"include\": \"$self\"\n        }, {\n          \"begin\": \"\\\\(\",\n          \"comment\": \"Nested parens\",\n          \"end\": \"\\\\)\"\n        }]\n      }, {\n        \"match\": \"\\\\\\\\.\",\n        \"name\": \"invalid.illegal.escape-not-recognized\"\n      }]\n    },\n    \"member-reference\": {\n      \"patterns\": [{\n        \"captures\": {\n          \"1\": {\n            \"name\": \"variable.other.swift\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.definition.identifier.swift\"\n          },\n          \"3\": {\n            \"name\": \"punctuation.definition.identifier.swift\"\n          }\n        },\n        \"match\": \"(?<=\\\\.)((?<q>`?)[\\\\p{L}_][\\\\p{L}_\\\\p{N}\\\\p{M}]*(\\\\k<q>))\"\n      }]\n    },\n    \"operators\": {\n      \"patterns\": [{\n        \"comment\": \"Type casting\",\n        \"match\": \"\\\\b(is\\\\b|as([!?]\\\\B|\\\\b))\",\n        \"name\": \"keyword.operator.type-casting.swift\"\n      }, {\n        \"begin\": \"(?x)\\n(?=\\n(?<oph>\\n[/=\\\\-+!*%<>&|^~?]\\n| [\\\\x{00A1}-\\\\x{00A7}]\\n| [\\\\x{00A9}\\\\x{00AB}]\\n| [\\\\x{00AC}\\\\x{00AE}]\\n| [\\\\x{00B0}-\\\\x{00B1}\\\\x{00B6}\\\\x{00BB}\\\\x{00BF}\\\\x{00D7}\\\\x{00F7}]\\n| [\\\\x{2016}-\\\\x{2017}\\\\x{2020}-\\\\x{2027}]\\n| [\\\\x{2030}-\\\\x{203E}]\\n| [\\\\x{2041}-\\\\x{2053}]\\n| [\\\\x{2055}-\\\\x{205E}]\\n| [\\\\x{2190}-\\\\x{23FF}]\\n| [\\\\x{2500}-\\\\x{2775}]\\n| [\\\\x{2794}-\\\\x{2BFF}]\\n| [\\\\x{2E00}-\\\\x{2E7F}]\\n| [\\\\x{3001}-\\\\x{3003}]\\n| [\\\\x{3008}-\\\\x{3030}]\\n)\\n| \\\\.\\n(\\n\\\\g<oph>\\n| \\\\.\\n| [\\\\x{0300}-\\\\x{036F}]\\n| [\\\\x{1DC0}-\\\\x{1DFF}]\\n| [\\\\x{20D0}-\\\\x{20FF}]\\n| [\\\\x{FE00}-\\\\x{FE0F}]\\n| [\\\\x{FE20}-\\\\x{FE2F}]\\n| [\\\\x{E0100}-\\\\x{E01EF}]\\n)\\n)\",\n        \"comment\": \"This rule helps us speed up the matching.\",\n        \"end\": \"(?!\\\\G)\",\n        \"patterns\": [{\n          \"captures\": {\n            \"0\": {\n              \"patterns\": [{\n                \"match\": \"\\\\G(\\\\+\\\\+|\\\\-\\\\-)$\",\n                \"name\": \"keyword.operator.increment-or-decrement.swift\"\n              }, {\n                \"match\": \"\\\\G(\\\\+|\\\\-)$\",\n                \"name\": \"keyword.operator.arithmetic.unary.swift\"\n              }, {\n                \"match\": \"\\\\G!$\",\n                \"name\": \"keyword.operator.logical.not.swift\"\n              }, {\n                \"match\": \"\\\\G~$\",\n                \"name\": \"keyword.operator.bitwise.not.swift\"\n              }, {\n                \"match\": \".+\",\n                \"name\": \"keyword.operator.custom.prefix.swift\"\n              }]\n            }\n          },\n          \"comment\": \"Prefix unary operator\",\n          \"match\": \"(?x)\\n\\\\G\\n\\n(?<=^|[\\\\s(\\\\[{,;:])\\n(\\n(?!(//|/\\\\*|\\\\*/))\\n(\\n[/=\\\\-+!*%<>&|^~?]\\n| [\\\\x{00A1}-\\\\x{00A7}]\\n| [\\\\x{00A9}\\\\x{00AB}]\\n| [\\\\x{00AC}\\\\x{00AE}]\\n| [\\\\x{00B0}-\\\\x{00B1}\\\\x{00B6}\\\\x{00BB}\\\\x{00BF}\\\\x{00D7}\\\\x{00F7}]\\n| [\\\\x{2016}-\\\\x{2017}\\\\x{2020}-\\\\x{2027}]\\n| [\\\\x{2030}-\\\\x{203E}]\\n| [\\\\x{2041}-\\\\x{2053}]\\n| [\\\\x{2055}-\\\\x{205E}]\\n| [\\\\x{2190}-\\\\x{23FF}]\\n| [\\\\x{2500}-\\\\x{2775}]\\n| [\\\\x{2794}-\\\\x{2BFF}]\\n| [\\\\x{2E00}-\\\\x{2E7F}]\\n| [\\\\x{3001}-\\\\x{3003}]\\n| [\\\\x{3008}-\\\\x{3030}]\\n\\n| [\\\\x{0300}-\\\\x{036F}]\\n| [\\\\x{1DC0}-\\\\x{1DFF}]\\n| [\\\\x{20D0}-\\\\x{20FF}]\\n| [\\\\x{FE00}-\\\\x{FE0F}]\\n| [\\\\x{FE20}-\\\\x{FE2F}]\\n| [\\\\x{E0100}-\\\\x{E01EF}]\\n)\\n)++\\n(?![\\\\s)\\\\]},;:]|\\\\z)\"\n        }, {\n          \"captures\": {\n            \"0\": {\n              \"patterns\": [{\n                \"match\": \"\\\\G(\\\\+\\\\+|\\\\-\\\\-)$\",\n                \"name\": \"keyword.operator.increment-or-decrement.swift\"\n              }, {\n                \"match\": \"\\\\G!$\",\n                \"name\": \"keyword.operator.increment-or-decrement.swift\"\n              }, {\n                \"match\": \".+\",\n                \"name\": \"keyword.operator.custom.postfix.swift\"\n              }]\n            }\n          },\n          \"comment\": \"Postfix unary operator\",\n          \"match\": \"(?x)\\n\\\\G\\n\\n(?<!^|[\\\\s(\\\\[{,;:])\\n(\\n(?!(//|/\\\\*|\\\\*/))\\n(\\n[/=\\\\-+!*%<>&|^~?]\\n| [\\\\x{00A1}-\\\\x{00A7}]\\n| [\\\\x{00A9}\\\\x{00AB}]\\n| [\\\\x{00AC}\\\\x{00AE}]\\n| [\\\\x{00B0}-\\\\x{00B1}\\\\x{00B6}\\\\x{00BB}\\\\x{00BF}\\\\x{00D7}\\\\x{00F7}]\\n| [\\\\x{2016}-\\\\x{2017}\\\\x{2020}-\\\\x{2027}]\\n| [\\\\x{2030}-\\\\x{203E}]\\n| [\\\\x{2041}-\\\\x{2053}]\\n| [\\\\x{2055}-\\\\x{205E}]\\n| [\\\\x{2190}-\\\\x{23FF}]\\n| [\\\\x{2500}-\\\\x{2775}]\\n| [\\\\x{2794}-\\\\x{2BFF}]\\n| [\\\\x{2E00}-\\\\x{2E7F}]\\n| [\\\\x{3001}-\\\\x{3003}]\\n| [\\\\x{3008}-\\\\x{3030}]\\n\\n| [\\\\x{0300}-\\\\x{036F}]\\n| [\\\\x{1DC0}-\\\\x{1DFF}]\\n| [\\\\x{20D0}-\\\\x{20FF}]\\n| [\\\\x{FE00}-\\\\x{FE0F}]\\n| [\\\\x{FE20}-\\\\x{FE2F}]\\n| [\\\\x{E0100}-\\\\x{E01EF}]\\n)\\n)++\\n(?=[\\\\s)\\\\]},;:]|\\\\z)\"\n        }, {\n          \"captures\": {\n            \"0\": {\n              \"patterns\": [{\n                \"match\": \"\\\\G=$\",\n                \"name\": \"keyword.operator.assignment.swift\"\n              }, {\n                \"match\": \"\\\\G(\\\\+|\\\\-|\\\\*|/|%|<<|>>|&|\\\\^|\\\\||&&|\\\\|\\\\|)=$\",\n                \"name\": \"keyword.operator.assignment.compound.swift\"\n              }, {\n                \"match\": \"\\\\G(\\\\+|\\\\-|\\\\*|/)$\",\n                \"name\": \"keyword.operator.arithmetic.swift\"\n              }, {\n                \"match\": \"\\\\G&(\\\\+|\\\\-|\\\\*)$\",\n                \"name\": \"keyword.operator.arithmetic.overflow.swift\"\n              }, {\n                \"match\": \"\\\\G%$\",\n                \"name\": \"keyword.operator.arithmetic.remainder.swift\"\n              }, {\n                \"match\": \"\\\\G(==|!=|>|<|>=|<=|~=)$\",\n                \"name\": \"keyword.operator.comparison.swift\"\n              }, {\n                \"match\": \"\\\\G\\\\?\\\\?$\",\n                \"name\": \"keyword.operator.coalescing.swift\"\n              }, {\n                \"match\": \"\\\\G(&&|\\\\|\\\\|)$\",\n                \"name\": \"keyword.operator.logical.swift\"\n              }, {\n                \"match\": \"\\\\G(&|\\\\||\\\\^|<<|>>)$\",\n                \"name\": \"keyword.operator.bitwise.swift\"\n              }, {\n                \"match\": \"\\\\G(===|!==)$\",\n                \"name\": \"keyword.operator.bitwise.swift\"\n              }, {\n                \"match\": \"\\\\G\\\\?$\",\n                \"name\": \"keyword.operator.ternary.swift\"\n              }, {\n                \"match\": \".+\",\n                \"name\": \"keyword.operator.custom.infix.swift\"\n              }]\n            }\n          },\n          \"comment\": \"Infix operator\",\n          \"match\": \"(?x)\\n\\\\G\\n\\n(\\n(?!(//|/\\\\*|\\\\*/))\\n(\\n[/=\\\\-+!*%<>&|^~?]\\n| [\\\\x{00A1}-\\\\x{00A7}]\\n| [\\\\x{00A9}\\\\x{00AB}]\\n| [\\\\x{00AC}\\\\x{00AE}]\\n| [\\\\x{00B0}-\\\\x{00B1}\\\\x{00B6}\\\\x{00BB}\\\\x{00BF}\\\\x{00D7}\\\\x{00F7}]\\n| [\\\\x{2016}-\\\\x{2017}\\\\x{2020}-\\\\x{2027}]\\n| [\\\\x{2030}-\\\\x{203E}]\\n| [\\\\x{2041}-\\\\x{2053}]\\n| [\\\\x{2055}-\\\\x{205E}]\\n| [\\\\x{2190}-\\\\x{23FF}]\\n| [\\\\x{2500}-\\\\x{2775}]\\n| [\\\\x{2794}-\\\\x{2BFF}]\\n| [\\\\x{2E00}-\\\\x{2E7F}]\\n| [\\\\x{3001}-\\\\x{3003}]\\n| [\\\\x{3008}-\\\\x{3030}]\\n\\n| [\\\\x{0300}-\\\\x{036F}]\\n| [\\\\x{1DC0}-\\\\x{1DFF}]\\n| [\\\\x{20D0}-\\\\x{20FF}]\\n| [\\\\x{FE00}-\\\\x{FE0F}]\\n| [\\\\x{FE20}-\\\\x{FE2F}]\\n| [\\\\x{E0100}-\\\\x{E01EF}]\\n)\\n)++\"\n        }, {\n          \"captures\": {\n            \"0\": {\n              \"patterns\": [{\n                \"match\": \".+\",\n                \"name\": \"keyword.operator.custom.prefix.dot.swift\"\n              }]\n            }\n          },\n          \"comment\": \"Dot prefix unary operator\",\n          \"match\": \"(?x)\\n\\\\G\\n\\n(?<=^|[\\\\s(\\\\[{,;:])\\n\\\\.\\n(\\n(?!(//|/\\\\*|\\\\*/))\\n(\\n\\\\.\\n| [/=\\\\-+!*%<>&|^~?]\\n| [\\\\x{00A1}-\\\\x{00A7}]\\n| [\\\\x{00A9}\\\\x{00AB}]\\n| [\\\\x{00AC}\\\\x{00AE}]\\n| [\\\\x{00B0}-\\\\x{00B1}\\\\x{00B6}\\\\x{00BB}\\\\x{00BF}\\\\x{00D7}\\\\x{00F7}]\\n| [\\\\x{2016}-\\\\x{2017}\\\\x{2020}-\\\\x{2027}]\\n| [\\\\x{2030}-\\\\x{203E}]\\n| [\\\\x{2041}-\\\\x{2053}]\\n| [\\\\x{2055}-\\\\x{205E}]\\n| [\\\\x{2190}-\\\\x{23FF}]\\n| [\\\\x{2500}-\\\\x{2775}]\\n| [\\\\x{2794}-\\\\x{2BFF}]\\n| [\\\\x{2E00}-\\\\x{2E7F}]\\n| [\\\\x{3001}-\\\\x{3003}]\\n| [\\\\x{3008}-\\\\x{3030}]\\n\\n| [\\\\x{0300}-\\\\x{036F}]\\n| [\\\\x{1DC0}-\\\\x{1DFF}]\\n| [\\\\x{20D0}-\\\\x{20FF}]\\n| [\\\\x{FE00}-\\\\x{FE0F}]\\n| [\\\\x{FE20}-\\\\x{FE2F}]\\n| [\\\\x{E0100}-\\\\x{E01EF}]\\n)\\n)++\\n(?![\\\\s)\\\\]},;:]|\\\\z)\"\n        }, {\n          \"captures\": {\n            \"0\": {\n              \"patterns\": [{\n                \"match\": \".+\",\n                \"name\": \"keyword.operator.custom.postfix.dot.swift\"\n              }]\n            }\n          },\n          \"comment\": \"Dot postfix unary operator\",\n          \"match\": \"(?x)\\n\\\\G\\n\\n(?<!^|[\\\\s(\\\\[{,;:])\\n\\\\.\\n(\\n(?!(//|/\\\\*|\\\\*/))\\n(\\n\\\\.\\n| [/=\\\\-+!*%<>&|^~?]\\n| [\\\\x{00A1}-\\\\x{00A7}]\\n| [\\\\x{00A9}\\\\x{00AB}]\\n| [\\\\x{00AC}\\\\x{00AE}]\\n| [\\\\x{00B0}-\\\\x{00B1}\\\\x{00B6}\\\\x{00BB}\\\\x{00BF}\\\\x{00D7}\\\\x{00F7}]\\n| [\\\\x{2016}-\\\\x{2017}\\\\x{2020}-\\\\x{2027}]\\n| [\\\\x{2030}-\\\\x{203E}]\\n| [\\\\x{2041}-\\\\x{2053}]\\n| [\\\\x{2055}-\\\\x{205E}]\\n| [\\\\x{2190}-\\\\x{23FF}]\\n| [\\\\x{2500}-\\\\x{2775}]\\n| [\\\\x{2794}-\\\\x{2BFF}]\\n| [\\\\x{2E00}-\\\\x{2E7F}]\\n| [\\\\x{3001}-\\\\x{3003}]\\n| [\\\\x{3008}-\\\\x{3030}]\\n\\n| [\\\\x{0300}-\\\\x{036F}]\\n| [\\\\x{1DC0}-\\\\x{1DFF}]\\n| [\\\\x{20D0}-\\\\x{20FF}]\\n| [\\\\x{FE00}-\\\\x{FE0F}]\\n| [\\\\x{FE20}-\\\\x{FE2F}]\\n| [\\\\x{E0100}-\\\\x{E01EF}]\\n)\\n)++\\n(?=[\\\\s)\\\\]},;:]|\\\\z)\"\n        }, {\n          \"captures\": {\n            \"0\": {\n              \"patterns\": [{\n                \"match\": \"\\\\G\\\\.\\\\.[.<]$\",\n                \"name\": \"keyword.operator.range.swift\"\n              }, {\n                \"match\": \".+\",\n                \"name\": \"keyword.operator.custom.infix.dot.swift\"\n              }]\n            }\n          },\n          \"comment\": \"Dot infix operator\",\n          \"match\": \"(?x)\\n\\\\G\\n\\n\\\\.\\n(\\n(?!(//|/\\\\*|\\\\*/))\\n(\\n\\\\.\\n| [/=\\\\-+!*%<>&|^~?]\\n| [\\\\x{00A1}-\\\\x{00A7}]\\n| [\\\\x{00A9}\\\\x{00AB}]\\n| [\\\\x{00AC}\\\\x{00AE}]\\n| [\\\\x{00B0}-\\\\x{00B1}\\\\x{00B6}\\\\x{00BB}\\\\x{00BF}\\\\x{00D7}\\\\x{00F7}]\\n| [\\\\x{2016}-\\\\x{2017}\\\\x{2020}-\\\\x{2027}]\\n| [\\\\x{2030}-\\\\x{203E}]\\n| [\\\\x{2041}-\\\\x{2053}]\\n| [\\\\x{2055}-\\\\x{205E}]\\n| [\\\\x{2190}-\\\\x{23FF}]\\n| [\\\\x{2500}-\\\\x{2775}]\\n| [\\\\x{2794}-\\\\x{2BFF}]\\n| [\\\\x{2E00}-\\\\x{2E7F}]\\n| [\\\\x{3001}-\\\\x{3003}]\\n| [\\\\x{3008}-\\\\x{3030}]\\n\\n| [\\\\x{0300}-\\\\x{036F}]\\n| [\\\\x{1DC0}-\\\\x{1DFF}]\\n| [\\\\x{20D0}-\\\\x{20FF}]\\n| [\\\\x{FE00}-\\\\x{FE0F}]\\n| [\\\\x{FE20}-\\\\x{FE2F}]\\n| [\\\\x{E0100}-\\\\x{E01EF}]\\n)\\n)++\"\n        }]\n      }, {\n        \"match\": \":\",\n        \"name\": \"keyword.operator.ternary.swift\"\n      }]\n    },\n    \"root\": {\n      \"patterns\": [{\n        \"include\": \"#compiler-control\"\n      }, {\n        \"include\": \"#declarations\"\n      }, {\n        \"include\": \"#expressions\"\n      }]\n    }\n  },\n  \"scopeName\": \"source.swift\"\n});\nvar swift = [lang];\nexport { swift as default };"],
  "mappings": "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",
  "names": []
}
