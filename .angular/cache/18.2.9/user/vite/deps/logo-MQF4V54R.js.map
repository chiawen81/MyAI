{
  "version": 3,
  "sources": ["../../../../../../node_modules/shiki/dist/langs/logo.mjs"],
  "sourcesContent": ["const lang = Object.freeze({\n  \"displayName\": \"Logo\",\n  \"fileTypes\": [],\n  \"name\": \"logo\",\n  \"patterns\": [{\n    \"match\": \"^to [\\\\w.]+\",\n    \"name\": \"entity.name.function.logo\"\n  }, {\n    \"match\": \"continue|do\\\\.until|do\\\\.while|end|for(each)?|if(else|falsetrue|)|repeat|stop|until\",\n    \"name\": \"keyword.control.logo\"\n  }, {\n    \"match\": \"\\\\b(\\\\.defmacro|\\\\.eq|\\\\.macro|\\\\.maybeoutput|\\\\.setbf|\\\\.setfirst|\\\\.setitem|\\\\.setsegmentsize|allopen|allowgetset|and|apply|arc|arctan|arity|array|arrayp|arraytolist|ascii|ashift|back|background|backslashedp|beforep|bitand|bitnot|bitor|bitxor|buried|buriedp|bury|buryall|buryname|butfirst|butfirsts|butlast|bye|cascade|case|caseignoredp|catch|char|clean|clearscreen|cleartext|close|closeall|combine|cond|contents|copydef|cos|count|crossmap|cursor|define|definedp|dequeue|difference|dribble|edall|edit|editfile|edn|edns|edpl|edpls|edps|emptyp|eofp|epspict|equalp|erall|erase|erasefile|ern|erns|erpl|erpls|erps|erract|error|exp|fence|filep|fill|filter|find|first|firsts|forever|form|forward|fput|fullprintp|fullscreen|fulltext|gc|gensym|global|goto|gprop|greaterp|heading|help|hideturtle|home|ignore|int|invoke|iseq|item|keyp|label|last|left|lessp|list|listp|listtoarray|ln|load|loadnoisily|loadpict|local|localmake|log10|lowercase|lput|lshift|macroexpand|macrop|make|map|map.se|mdarray|mditem|mdsetitem|member|memberp|minus|modulo|name|namelist|namep|names|nodes|nodribble|norefresh|not|numberp|openappend|openread|openupdate|openwrite|or|output|palette|parse|pause|pen|pencolor|pendown|pendownp|penerase|penmode|penpaint|penreverse|pensize|penup|pick|plist|plistp|plists|pllist|po|poall|pon|pons|pop|popl|popls|pops|pos|pot|pots|power|pprop|prefix|primitivep|print|printdepthlimit|printwidthlimit|procedurep|procedures|product|push|queue|quoted|quotient|radarctan|radcos|radsin|random|rawascii|readchar|readchars|reader|readlist|readpos|readrawline|readword|redefp|reduce|refresh|remainder|remdup|remove|remprop|repcount|rerandom|reverse|right|round|rseq|run|runparse|runresult|save|savel|savepict|screenmode|scrunch|sentence|setbackground|setcursor|seteditor|setheading|sethelploc|setitem|setlibloc|setmargins|setpalette|setpen|setpencolor|setpensize|setpos|setprefix|setread|setreadpos|setscrunch|settemploc|settextcolor|setwrite|setwritepos|setx|setxy|sety|shell|show|shownp|showturtle|sin|splitscreen|sqrt|standout|startup|step|stepped|steppedp|substringp|sum|tag|test|text|textscreen|thing|throw|towards|trace|traced|tracedp|transfer|turtlemode|type|unbury|unburyall|unburyname|unburyonedit|unstep|untrace|uppercase|usealternatenam|wait|while|window|word|wordp|wrap|writepos|writer|xcor|ycor)\\\\b\",\n    \"name\": \"keyword.other.logo\"\n  }, {\n    \"captures\": {\n      \"1\": {\n        \"name\": \"punctuation.definition.variable.logo\"\n      }\n    },\n    \"match\": \"(\\\\:)(?:\\\\|[^|]*\\\\||[-\\\\w.]*)+\",\n    \"name\": \"variable.parameter.logo\"\n  }, {\n    \"match\": '\"(?:\\\\|[^|]*\\\\||[-\\\\w.]*)+',\n    \"name\": \"string.other.word.logo\"\n  }, {\n    \"begin\": \"(^[ \\\\t]+)?(?=;)\",\n    \"beginCaptures\": {\n      \"1\": {\n        \"name\": \"punctuation.whitespace.comment.leading.logo\"\n      }\n    },\n    \"end\": \"(?!\\\\G)\",\n    \"patterns\": [{\n      \"begin\": \";\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.comment.logo\"\n        }\n      },\n      \"end\": \"\\\\n\",\n      \"name\": \"comment.line.semicolon.logo\"\n    }]\n  }],\n  \"scopeName\": \"source.logo\"\n});\nvar logo = [lang];\nexport { logo as default };"],
  "mappings": ";;;AAAA,IAAM,OAAO,OAAO,OAAO;AAAA,EACzB,eAAe;AAAA,EACf,aAAa,CAAC;AAAA,EACd,QAAQ;AAAA,EACR,YAAY,CAAC;AAAA,IACX,SAAS;AAAA,IACT,QAAQ;AAAA,EACV,GAAG;AAAA,IACD,SAAS;AAAA,IACT,QAAQ;AAAA,EACV,GAAG;AAAA,IACD,SAAS;AAAA,IACT,QAAQ;AAAA,EACV,GAAG;AAAA,IACD,YAAY;AAAA,MACV,KAAK;AAAA,QACH,QAAQ;AAAA,MACV;AAAA,IACF;AAAA,IACA,SAAS;AAAA,IACT,QAAQ;AAAA,EACV,GAAG;AAAA,IACD,SAAS;AAAA,IACT,QAAQ;AAAA,EACV,GAAG;AAAA,IACD,SAAS;AAAA,IACT,iBAAiB;AAAA,MACf,KAAK;AAAA,QACH,QAAQ;AAAA,MACV;AAAA,IACF;AAAA,IACA,OAAO;AAAA,IACP,YAAY,CAAC;AAAA,MACX,SAAS;AAAA,MACT,iBAAiB;AAAA,QACf,KAAK;AAAA,UACH,QAAQ;AAAA,QACV;AAAA,MACF;AAAA,MACA,OAAO;AAAA,MACP,QAAQ;AAAA,IACV,CAAC;AAAA,EACH,CAAC;AAAA,EACD,aAAa;AACf,CAAC;AACD,IAAI,OAAO,CAAC,IAAI;",
  "names": []
}
