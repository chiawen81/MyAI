{
  "version": 3,
  "sources": ["../../../../../../node_modules/shiki/dist/langs/nushell.mjs"],
  "sourcesContent": ["const lang = Object.freeze({\n  \"displayName\": \"nushell\",\n  \"name\": \"nushell\",\n  \"patterns\": [{\n    \"include\": \"#define-variable\"\n  }, {\n    \"include\": \"#define-alias\"\n  }, {\n    \"include\": \"#function\"\n  }, {\n    \"include\": \"#extern\"\n  }, {\n    \"include\": \"#module\"\n  }, {\n    \"include\": \"#use-module\"\n  }, {\n    \"include\": \"#expression\"\n  }, {\n    \"include\": \"#comment\"\n  }],\n  \"repository\": {\n    \"binary\": {\n      \"begin\": \"\\\\b(0x)(\\\\[)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"constant.numeric.nushell\"\n        },\n        \"2\": {\n          \"name\": \"meta.brace.square.begin.nushell\"\n        }\n      },\n      \"end\": \"\\\\]\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"meta.brace.square.begin.nushell\"\n        }\n      },\n      \"name\": \"constant.binary.nushell\",\n      \"patterns\": [{\n        \"match\": \"[0-9a-fA-F]{2}\",\n        \"name\": \"constant.numeric.nushell\"\n      }]\n    },\n    \"braced-expression\": {\n      \"begin\": \"\\\\{\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.section.block.begin.bracket.curly.nushell\"\n        }\n      },\n      \"end\": \"\\\\}\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.section.block.end.bracket.curly.nushell\"\n        }\n      },\n      \"name\": \"meta.expression.braced.nushell\",\n      \"patterns\": [{\n        \"begin\": \"(?<=\\\\{)\\\\s*\\\\|\",\n        \"end\": \"\\\\|\",\n        \"name\": \"meta.closure.parameters.nushell\",\n        \"patterns\": [{\n          \"include\": \"#function-parameter\"\n        }]\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"variable.other.nushell\"\n          },\n          \"2\": {\n            \"name\": \"keyword.control.nushell\"\n          }\n        },\n        \"match\": \"(\\\\w+)\\\\s*(:)\\\\s*\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"variable.other.nushell\"\n          },\n          \"2\": {\n            \"name\": \"variable.other.nushell\",\n            \"patterns\": [{\n              \"include\": \"#paren-expression\"\n            }]\n          },\n          \"3\": {\n            \"name\": \"keyword.control.nushell\"\n          }\n        },\n        \"match\": '(\\\\$\"((?:[^\"\\\\\\\\]|\\\\\\\\.)*)\")\\\\s*(:)\\\\s*',\n        \"name\": \"meta.record-entry.nushell\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"variable.other.nushell\"\n          },\n          \"2\": {\n            \"name\": \"keyword.control.nushell\"\n          }\n        },\n        \"match\": '(\"(?:[^\"\\\\\\\\]|\\\\\\\\.)*\")\\\\s*(:)\\\\s*',\n        \"name\": \"meta.record-entry.nushell\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"variable.other.nushell\"\n          },\n          \"2\": {\n            \"name\": \"variable.other.nushell\",\n            \"patterns\": [{\n              \"include\": \"#paren-expression\"\n            }]\n          },\n          \"3\": {\n            \"name\": \"keyword.control.nushell\"\n          }\n        },\n        \"match\": \"(\\\\$'([^']*)')\\\\s*(:)\\\\s*\",\n        \"name\": \"meta.record-entry.nushell\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"variable.other.nushell\"\n          },\n          \"2\": {\n            \"name\": \"keyword.control.nushell\"\n          }\n        },\n        \"match\": \"('[^']*')\\\\s*(:)\\\\s*\",\n        \"name\": \"meta.record-entry.nushell\"\n      }, {\n        \"include\": \"#spread\"\n      }, {\n        \"include\": \"source.nushell\"\n      }]\n    },\n    \"command\": {\n      \"begin\": `(?<!\\\\w)(?:(\\\\^)|(?![0-9]|\\\\$))([\\\\w.!]+(?:(?: (?!-)[\\\\w\\\\-.!]+(?:(?= |\\\\))|$)|[\\\\w\\\\-.!]+))*|(?<=\\\\^)\\\\$?(?:\"[^\"]+\"|'[^']+'))`,\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.operator.nushell\"\n        },\n        \"2\": {\n          \"patterns\": [{\n            \"include\": \"#control-keywords\"\n          }, {\n            \"captures\": {\n              \"0\": {\n                \"name\": \"keyword.other.builtin.nushell\"\n              }\n            },\n            \"match\": \"(?:ansi|char) \\\\w+\"\n          }, {\n            \"captures\": {\n              \"1\": {\n                \"name\": \"keyword.other.builtin.nushell\"\n              },\n              \"2\": {\n                \"patterns\": [{\n                  \"include\": \"#value\"\n                }]\n              }\n            },\n            \"comment\": \"Regex generated with list-to-tree (https://github.com/glcraft/list-to-tree)\",\n            \"match\": \"(a(?:l(?:ias|l)|n(?:si(?: (?:gradient|link|strip))?|y)|ppend|st)|b(?:g|its(?: (?:and|not|or|ro(?:l|r)|sh(?:l|r)|xor))?|reak|ytes(?: (?:a(?:dd|t)|build|collect|ends-with|index-of|length|re(?:move|place|verse)|starts-with))?)|c(?:al|d|har|l(?:ear|ipboard (?:copy|paste))|o(?:l(?:lect|umns)|m(?:mandline(?: (?:edit|get-cursor|set-cursor))?|p(?:act|lete))|n(?:fig(?: (?:env|nu|reset))?|st|tinue))|p|ustom-value (?:generate(?:2)?|update(?:-arg)?))|d(?:ate(?: (?:format|humanize|list-timezone|now|to-(?:record|t(?:able|imezone))))?|e(?:bug(?: info)?|code(?: (?:base64|hex))?|f(?:ault)?|scribe|tect columns)|fr(?: (?:a(?:gg(?:-groups)?|ll-(?:false|true)|ppend|rg-(?:m(?:ax|in)|sort|true|unique|where)|s(?:-date(?:time)?)?)|c(?:a(?:che|st)|o(?:l(?:lect|umns)?|n(?:cat(?:-str|enate)|tains)|unt(?:-null)?)|umulative)|d(?:atepart|rop(?:-(?:duplicates|nulls))?|types|ummies)|exp(?:lode|r-not)|f(?:etch|i(?:l(?:l-n(?:an|ull)|ter(?:-with)?)|rst)|latten)|g(?:et(?:-(?:day|hour|m(?:inute|onth)|nanosecond|ordinal|second|week(?:day)?|year))?|roup-by)|i(?:mplode|nto-(?:df|lazy|nu)|s-(?:duplicated|in|n(?:ot-null|ull)|unique))|join|l(?:ast|it|owercase|s)|m(?:ax|e(?:an|dian|lt)|in)|n(?:-unique|ot)|o(?:pen|therwise)|qu(?:antile|ery)|r(?:e(?:name|place(?:-all)?|verse)|olling)|s(?:ample|chema|e(?:lect|t(?:-with-idx)?)|h(?:ape|ift)|lice|ort-by|t(?:d|r(?:-(?:lengths|slice)|ftime))|um(?:mary)?)|t(?:ake|o-(?:a(?:rrow|vro)|csv|jsonl|parquet))|u(?:nique|ppercase)|va(?:lue-counts|r)|w(?:hen|ith-column)))?|o|rop(?: (?:column|nth))?|u)|e(?:ach(?: while)?|cho|moji|n(?:code(?: (?:base64|hex))?|umerate)|rror make|very|x(?:ec|it|p(?:l(?:ain|ore)|ort(?: (?:alias|const|def|extern|module|use)|-env)?)|tern))|f(?:i(?:l(?:e|l|ter)|nd|rst)|latten|mt|or(?:mat(?: (?:d(?:ate|uration)|filesize|pattern))?)?|rom(?: (?:csv|eml|i(?:cs|ni)|json|nuon|ods|p(?:arquet|ng)|ssv|t(?:oml|sv)|url|vcf|x(?:lsx|ml)|y(?:aml|ml)))?)|g(?:e(?:nerate|t)|lob|r(?:id|oup(?:-by)?)|stat)|h(?:ash(?: (?:md5|sha256))?|e(?:aders|lp(?: (?:aliases|commands|e(?:scapes|xterns)|modules|operators))?)|i(?:de(?:-env)?|ghlight|st(?:o(?:gram|ry(?: session)?))?)|ttp(?: (?:delete|get|head|options|p(?:atch|ost|ut)))?)|i(?:f|gnore|n(?:c|put(?: list(?:en)?)?|s(?:ert|pect)|t(?:erleave|o(?: (?:b(?:i(?:nary|ts)|ool)|cell-path|d(?:atetime|uration)|f(?:ilesize|loat)|glob|int|record|s(?:qlite|tring)|value))?))|s-(?:admin|empty|not-empty|terminal)|tems)|j(?:oin|son path|walk)|k(?:eybindings(?: (?:default|list(?:en)?))?|ill)|l(?:a(?:st|zy make)|e(?:ngth|t(?:-env)?)|ines|o(?:ad-env|op)|s)|m(?:at(?:ch|h(?: (?:a(?:bs|rc(?:cos(?:h)?|sin(?:h)?|tan(?:h)?)|vg)|c(?:eil|os(?:h)?)|exp|floor|l(?:n|og)|m(?:ax|edian|in|ode)|product|round|s(?:in(?:h)?|qrt|tddev|um)|tan(?:h)?|variance))?)|e(?:rge|tadata)|k(?:dir|temp)|o(?:dule|ve)|ut|v)|nu-(?:check|example-(?:1|2|3|config)|highlight)|o(?:pen|verlay(?: (?:hide|list|new|use))?)|p(?:a(?:nic|r(?:-each|se)|th(?: (?:basename|dirname|ex(?:ists|pand)|join|parse|relative-to|split|type))?)|eriodic-table|lot|net|ort(?: (?:list|scan))?|r(?:epend|int)|s)|query(?: (?:db|git|json|web|xml))?|r(?:an(?:dom(?: (?:bool|chars|dice|float|int|uuid))?|ge)|e(?:duce|g(?:ex|ist(?:er|ry query))|ject|name|turn|verse)|m|o(?:ll(?: (?:down|left|right|up))?|tate)|un-external)|s(?:ave|c(?:hema|ope(?: (?:aliases|commands|e(?:ngine-stats|xterns)|modules|variables))?)|e(?:lect|q(?: (?:char|date))?)|huffle|kip(?: (?:until|while))?|leep|o(?:rt(?:-by)?|urce(?:-env)?)|plit(?: (?:c(?:hars|olumn)|list|row|words)|-by)?|t(?:art|or(?: (?:create|delete|export|i(?:mport|nsert)|open|reset|update))?|r(?: (?:c(?:a(?:mel-case|pitalize)|ontains)|d(?:istance|owncase)|e(?:nds-with|scape-glob|xpand)|index-of|join|kebab-case|length|pascal-case|re(?:place|verse)|s(?:creaming-snake-case|imilarity|nake-case|ta(?:rts-with|ts)|ubstring)|t(?:itle-case|rim)|upcase)|eam_example(?: (?:collect-external|s(?:eq|um)))?)?)|ys)|t(?:a(?:ble|ke(?: (?:until|while))?)|e(?:e|rm size)|imeit|o(?: (?:csv|html|json|md|nuon|png|qr|t(?:ext|oml|sv)|xml|yaml)|uch)?|r(?:anspose|y)|utor)|u(?:limit|ni(?:q(?:-by)?|ts)|p(?:date(?: cells)?|sert)|rl(?: (?:build-query|decode|encode|join|parse))?|se)|v(?:alues|ersion|iew(?: (?:files|s(?:ource|pan)))?)|w(?:atch|h(?:ere|i(?:ch|le)|oami)|i(?:ndow|th-env)|rap)|xyplot|zip)(?![\\\\w-])( (.*))?\"\n          }, {\n            \"captures\": {\n              \"1\": {\n                \"patterns\": [{\n                  \"include\": \"#paren-expression\"\n                }]\n              }\n            },\n            \"match\": `(?<=\\\\^)(?:\\\\$(\"[^\"]+\"|'[^']+')|\"[^\"]+\"|'[^']+')`,\n            \"name\": \"entity.name.type.external.nushell\"\n          }, {\n            \"captures\": {\n              \"1\": {\n                \"name\": \"entity.name.type.external.nushell\"\n              },\n              \"2\": {\n                \"patterns\": [{\n                  \"include\": \"#value\"\n                }]\n              }\n            },\n            \"match\": \"([\\\\w.]+(?:-[\\\\w.!]+)*)(?: (.*))?\"\n          }, {\n            \"include\": \"#value\"\n          }]\n        }\n      },\n      \"end\": \"(?=\\\\||\\\\)|\\\\}|;)|$\",\n      \"name\": \"meta.command.nushell\",\n      \"patterns\": [{\n        \"include\": \"#parameters\"\n      }, {\n        \"include\": \"#spread\"\n      }, {\n        \"include\": \"#value\"\n      }]\n    },\n    \"comment\": {\n      \"match\": \"(#.*)$\",\n      \"name\": \"comment.nushell\"\n    },\n    \"constant-keywords\": {\n      \"match\": \"\\\\b(?:true|false|null)\\\\b\",\n      \"name\": \"constant.language.nushell\"\n    },\n    \"constant-value\": {\n      \"patterns\": [{\n        \"include\": \"#constant-keywords\"\n      }, {\n        \"include\": \"#datetime\"\n      }, {\n        \"include\": \"#numbers\"\n      }, {\n        \"include\": \"#numbers-hexa\"\n      }, {\n        \"include\": \"#binary\"\n      }]\n    },\n    \"control-keywords\": {\n      \"comment\": \"Regex generated with list-to-tree (https://github.com/glcraft/list-to-tree)\",\n      \"match\": \"(?<![0-9a-zA-Z_\\\\-.\\\\/:\\\\\\\\])(?:break|continue|else(?: if)?|for|if|loop|mut|return|try|while)(?![0-9a-zA-Z_\\\\-.\\\\/:\\\\\\\\])\",\n      \"name\": \"keyword.control.nushell\"\n    },\n    \"datetime\": {\n      \"match\": \"\\\\b\\\\d{4}-\\\\d{2}-\\\\d{2}(?:T\\\\d{2}:\\\\d{2}:\\\\d{2}(?:\\\\.\\\\d+)?(?:\\\\+\\\\d{2}:?\\\\d{2}|Z)?)?\\\\b\",\n      \"name\": \"constant.numeric.nushell\"\n    },\n    \"define-alias\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"entity.name.function.nushell\"\n        },\n        \"2\": {\n          \"name\": \"entity.name.type.nushell\"\n        },\n        \"3\": {\n          \"patterns\": [{\n            \"include\": \"#operators\"\n          }]\n        }\n      },\n      \"match\": \"((?:export )?alias)\\\\s+([\\\\w\\\\-!]+)\\\\s*(=)\"\n    },\n    \"define-variable\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"keyword.other.nushell\"\n        },\n        \"2\": {\n          \"name\": \"variable.other.nushell\"\n        },\n        \"3\": {\n          \"patterns\": [{\n            \"include\": \"#operators\"\n          }]\n        }\n      },\n      \"match\": \"(let|mut|(?:export\\\\s+)?const)\\\\s+(\\\\w+)\\\\s+(=)\"\n    },\n    \"expression\": {\n      \"patterns\": [{\n        \"include\": \"#pre-command\"\n      }, {\n        \"include\": \"#for-loop\"\n      }, {\n        \"include\": \"#operators\"\n      }, {\n        \"match\": \"\\\\|\",\n        \"name\": \"keyword.control.nushell\"\n      }, {\n        \"include\": \"#control-keywords\"\n      }, {\n        \"include\": \"#constant-value\"\n      }, {\n        \"include\": \"#command\"\n      }, {\n        \"include\": \"#value\"\n      }]\n    },\n    \"extern\": {\n      \"begin\": '((?:export\\\\s+)?extern)\\\\s+([\\\\w\\\\-]+|\"[\\\\w\\\\- ]+\")',\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"entity.name.function.nushell\"\n        },\n        \"2\": {\n          \"name\": \"entity.name.type.nushell\"\n        }\n      },\n      \"end\": \"(?<=\\\\])\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.function.end.nushell\"\n        }\n      },\n      \"patterns\": [{\n        \"include\": \"#function-parameters\"\n      }]\n    },\n    \"for-loop\": {\n      \"begin\": \"(for)\\\\s+(\\\\$?\\\\w+)\\\\s+(in)\\\\s+(.+)\\\\s*(\\\\{)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.other.nushell\"\n        },\n        \"2\": {\n          \"name\": \"variable.other.nushell\"\n        },\n        \"3\": {\n          \"name\": \"keyword.other.nushell\"\n        },\n        \"4\": {\n          \"patterns\": [{\n            \"include\": \"#value\"\n          }]\n        },\n        \"5\": {\n          \"name\": \"punctuation.section.block.begin.bracket.curly.nushell\"\n        }\n      },\n      \"end\": \"\\\\}\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.section.block.end.bracket.curly.nushell\"\n        }\n      },\n      \"name\": \"meta.for-loop.nushell\",\n      \"patterns\": [{\n        \"include\": \"source.nushell\"\n      }]\n    },\n    \"function\": {\n      \"begin\": \"((?:export\\\\s+)?def(?:\\\\s+--\\\\w+)*)\\\\s+([\\\\w\\\\-]+|\\\"[\\\\w\\\\- ]+\\\"|'[\\\\w\\\\- ]+'|`[\\\\w\\\\- ]+`)(\\\\s+--\\\\w+)*\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"entity.name.function.nushell\"\n        },\n        \"2\": {\n          \"name\": \"entity.name.type.nushell\"\n        },\n        \"3\": {\n          \"name\": \"entity.name.function.nushell\"\n        }\n      },\n      \"end\": \"(?<=\\\\})\",\n      \"patterns\": [{\n        \"include\": \"#function-parameters\"\n      }, {\n        \"include\": \"#function-body\"\n      }, {\n        \"include\": \"#function-inout\"\n      }]\n    },\n    \"function-body\": {\n      \"begin\": \"\\\\{\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.function.begin.nushell\"\n        }\n      },\n      \"end\": \"\\\\}\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.function.end.nushell\"\n        }\n      },\n      \"name\": \"meta.function.body.nushell\",\n      \"patterns\": [{\n        \"include\": \"source.nushell\"\n      }]\n    },\n    \"function-inout\": {\n      \"patterns\": [{\n        \"include\": \"#types\"\n      }, {\n        \"match\": \"->\",\n        \"name\": \"keyword.operator.nushell\"\n      }, {\n        \"include\": \"#function-multiple-inout\"\n      }]\n    },\n    \"function-multiple-inout\": {\n      \"begin\": \"(?<=]\\\\s*)(:)\\\\s+(\\\\[)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.definition.in-out.nushell\"\n        },\n        \"2\": {\n          \"name\": \"meta.brace.square.begin.nushell\"\n        }\n      },\n      \"end\": \"\\\\]\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"meta.brace.square.end.nushell\"\n        }\n      },\n      \"patterns\": [{\n        \"include\": \"#types\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.separator.nushell\"\n          }\n        },\n        \"match\": \"\\\\s*(,)\\\\s*\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"keyword.operator.nushell\"\n          }\n        },\n        \"match\": \"\\\\s+(->)\\\\s+\"\n      }]\n    },\n    \"function-parameter\": {\n      \"patterns\": [{\n        \"captures\": {\n          \"1\": {\n            \"name\": \"keyword.control.nushell\"\n          }\n        },\n        \"match\": \"(-{0,2}|\\\\.{3})[\\\\w-]+(?:\\\\((-[\\\\w?])\\\\))?\",\n        \"name\": \"variable.parameter.nushell\"\n      }, {\n        \"begin\": \"\\\\??:\\\\s*\",\n        \"end\": \"(?=(?:\\\\s+(?:-{0,2}|\\\\.{3})[\\\\w-]+)|(?:\\\\s*(?:,|\\\\]|\\\\||@|=|#|$)))\",\n        \"patterns\": [{\n          \"include\": \"#types\"\n        }]\n      }, {\n        \"begin\": `@(?=\"|')`,\n        \"end\": `(?<=\"|')`,\n        \"patterns\": [{\n          \"include\": \"#string\"\n        }]\n      }, {\n        \"begin\": \"=\\\\s*\",\n        \"end\": \"(?=(?:\\\\s+-{0,2}[\\\\w-]+)|(?:\\\\s*(?:,|\\\\]|\\\\||#|$)))\",\n        \"name\": \"default.value.nushell\",\n        \"patterns\": [{\n          \"include\": \"#value\"\n        }]\n      }]\n    },\n    \"function-parameters\": {\n      \"begin\": \"\\\\[\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"meta.brace.square.begin.nushell\"\n        }\n      },\n      \"end\": \"\\\\]\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"meta.brace.square.end.nushell\"\n        }\n      },\n      \"name\": \"meta.function.parameters.nushell\",\n      \"patterns\": [{\n        \"include\": \"#function-parameter\"\n      }, {\n        \"include\": \"#comment\"\n      }]\n    },\n    \"internal-variables\": {\n      \"match\": \"\\\\$(?:nu|env)\\\\b\",\n      \"name\": \"variable.language.nushell\"\n    },\n    \"keyword\": {\n      \"match\": \"(?:def(?:-env)?)\",\n      \"name\": \"keyword.other.nushell\"\n    },\n    \"module\": {\n      \"begin\": \"((?:export\\\\s+)?module)\\\\s+([\\\\w\\\\-]+)\\\\s*\\\\{\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"entity.name.function.nushell\"\n        },\n        \"2\": {\n          \"name\": \"entity.name.namespace.nushell\"\n        }\n      },\n      \"end\": \"\\\\}\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.module.end.nushell\"\n        }\n      },\n      \"name\": \"meta.module.nushell\",\n      \"patterns\": [{\n        \"include\": \"source.nushell\"\n      }]\n    },\n    \"numbers\": {\n      \"match\": \"(?<![\\\\w-])[-+]?(?:\\\\d+|\\\\d{1,3}(?:_\\\\d{3})*)(?:\\\\.\\\\d*)?(?i:ns|us|ms|sec|min|hr|day|wk|b|kb|mb|gb|tb|pt|eb|zb|kib|mib|gib|tib|pit|eib|zib)?(?:(?![\\\\w.])|(?=\\\\.\\\\.))\",\n      \"name\": \"constant.numeric.nushell\"\n    },\n    \"numbers-hexa\": {\n      \"match\": \"(?<![\\\\w-])0x[0-9a-fA-F]+(?![\\\\w.])\",\n      \"name\": \"constant.numeric.nushell\"\n    },\n    \"operators\": {\n      \"patterns\": [{\n        \"include\": \"#operators-word\"\n      }, {\n        \"include\": \"#operators-symbols\"\n      }, {\n        \"include\": \"#ranges\"\n      }]\n    },\n    \"operators-symbols\": {\n      \"match\": \"(?<= )(?:(?:\\\\+|\\\\-|\\\\*|\\\\/)=?|\\\\/\\\\/|\\\\*\\\\*|!=|[<>=]=?|[!=]~|\\\\+\\\\+=?)(?= |$)\",\n      \"name\": \"keyword.control.nushell\"\n    },\n    \"operators-word\": {\n      \"match\": \"(?<= |\\\\()(?:mod|in|not-in|not|and|or|xor|bit-or|bit-and|bit-xor|bit-shl|bit-shr|starts-with|ends-with)(?= |\\\\)|$)\",\n      \"name\": \"keyword.control.nushell\"\n    },\n    \"parameters\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"keyword.control.nushell\"\n        }\n      },\n      \"match\": \"(?<=\\\\s)(-{1,2})[\\\\w-]+\",\n      \"name\": \"variable.parameter.nushell\"\n    },\n    \"paren-expression\": {\n      \"begin\": \"\\\\(\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"meta.brace.round.begin.nushell\"\n        }\n      },\n      \"end\": \"\\\\)\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"meta.brace.round.end.nushell\"\n        }\n      },\n      \"name\": \"meta.expression.parenthesis.nushell\",\n      \"patterns\": [{\n        \"include\": \"#expression\"\n      }]\n    },\n    \"pre-command\": {\n      \"begin\": \"(\\\\w+)(=)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"variable.other.nushell\"\n        },\n        \"2\": {\n          \"patterns\": [{\n            \"include\": \"#operators\"\n          }]\n        }\n      },\n      \"end\": \"(?=\\\\s+)\",\n      \"patterns\": [{\n        \"include\": \"#value\"\n      }]\n    },\n    \"ranges\": {\n      \"match\": \"\\\\.\\\\.<?\",\n      \"name\": \"keyword.control.nushell\"\n    },\n    \"spread\": {\n      \"match\": \"\\\\.\\\\.\\\\.(?=[^\\\\s\\\\]}])\",\n      \"name\": \"keyword.control.nushell\"\n    },\n    \"string\": {\n      \"patterns\": [{\n        \"include\": \"#string-single-quote\"\n      }, {\n        \"include\": \"#string-backtick\"\n      }, {\n        \"include\": \"#string-double-quote\"\n      }, {\n        \"include\": \"#string-interpolated-double\"\n      }, {\n        \"include\": \"#string-interpolated-single\"\n      }, {\n        \"include\": \"#string-bare\"\n      }]\n    },\n    \"string-backtick\": {\n      \"begin\": \"`\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.begin.nushell\"\n        }\n      },\n      \"end\": \"`\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.end.nushell\"\n        }\n      },\n      \"name\": \"string.quoted.single.nushell\"\n    },\n    \"string-bare\": {\n      \"match\": `[^$\\\\[{(\"',|#\\\\s|][^\\\\[\\\\]{}()\"'\\\\s#,|]*`,\n      \"name\": \"string.bare.nushell\"\n    },\n    \"string-double-quote\": {\n      \"begin\": '\"',\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.begin.nushell\"\n        }\n      },\n      \"end\": '\"',\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.end.nushell\"\n        }\n      },\n      \"name\": \"string.quoted.double.nushell\",\n      \"patterns\": [{\n        \"match\": \"\\\\w+\"\n      }, {\n        \"include\": \"#string-escape\"\n      }]\n    },\n    \"string-escape\": {\n      \"match\": `\\\\\\\\(?:[bfrnt\\\\\\\\'\"/]|u[0-9a-fA-F]{4})`,\n      \"name\": \"constant.character.escape.nushell\"\n    },\n    \"string-interpolated-double\": {\n      \"begin\": '\\\\$\"',\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.begin.nushell\"\n        }\n      },\n      \"end\": '\"',\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.end.nushell\"\n        }\n      },\n      \"name\": \"string.interpolated.double.nushell\",\n      \"patterns\": [{\n        \"match\": \"\\\\\\\\[()]\",\n        \"name\": \"constant.character.escape.nushell\"\n      }, {\n        \"include\": \"#string-escape\"\n      }, {\n        \"include\": \"#paren-expression\"\n      }]\n    },\n    \"string-interpolated-single\": {\n      \"begin\": \"\\\\$'\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.begin.nushell\"\n        }\n      },\n      \"end\": \"'\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.end.nushell\"\n        }\n      },\n      \"name\": \"string.interpolated.single.nushell\",\n      \"patterns\": [{\n        \"include\": \"#paren-expression\"\n      }]\n    },\n    \"string-single-quote\": {\n      \"begin\": \"'\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.begin.nushell\"\n        }\n      },\n      \"end\": \"'\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.end.nushell\"\n        }\n      },\n      \"name\": \"string.quoted.single.nushell\"\n    },\n    \"table\": {\n      \"begin\": \"\\\\[\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"meta.brace.square.begin.nushell\"\n        }\n      },\n      \"end\": \"\\\\]\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"meta.brace.square.end.nushell\"\n        }\n      },\n      \"name\": \"meta.table.nushell\",\n      \"patterns\": [{\n        \"include\": \"#spread\"\n      }, {\n        \"include\": \"#value\"\n      }, {\n        \"match\": \",\",\n        \"name\": \"punctuation.separator.nushell\"\n      }]\n    },\n    \"types\": {\n      \"patterns\": [{\n        \"begin\": \"\\\\b(list)\\\\s*<\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"entity.name.type.nushell\"\n          }\n        },\n        \"end\": \">\",\n        \"name\": \"meta.list.nushell\",\n        \"patterns\": [{\n          \"include\": \"#types\"\n        }]\n      }, {\n        \"begin\": \"\\\\b(record)\\\\s*<\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"entity.name.type.nushell\"\n          }\n        },\n        \"end\": \">\",\n        \"name\": \"meta.record.nushell\",\n        \"patterns\": [{\n          \"captures\": {\n            \"1\": {\n              \"name\": \"variable.parameter.nushell\"\n            }\n          },\n          \"match\": `([\\\\w\\\\-]+|\"[\\\\w\\\\- ]+\"|'[^']+')\\\\s*:\\\\s*`\n        }, {\n          \"include\": \"#types\"\n        }]\n      }, {\n        \"match\": \"\\\\b(\\\\w+)\\\\b\",\n        \"name\": \"entity.name.type.nushell\"\n      }]\n    },\n    \"use-module\": {\n      \"patterns\": [{\n        \"captures\": {\n          \"1\": {\n            \"name\": \"entity.name.function.nushell\"\n          },\n          \"2\": {\n            \"name\": \"entity.name.namespace.nushell\"\n          },\n          \"3\": {\n            \"name\": \"keyword.other.nushell\"\n          }\n        },\n        \"match\": `^\\\\s*((?:export )?use)\\\\s+([\\\\w\\\\-]+|\"[\\\\w\\\\- ]+\"|'[\\\\w\\\\- ]+')(?:\\\\s+([\\\\w\\\\-]+|\"[\\\\w\\\\- ]+\"|'[\\\\w\\\\- ]+'|\\\\*))?\\\\s*;?$`\n      }, {\n        \"begin\": `^\\\\s*((?:export )?use)\\\\s+([\\\\w\\\\-]+|\"[\\\\w\\\\- ]+\"|'[\\\\w\\\\- ]+')\\\\s*\\\\[`,\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"entity.name.function.nushell\"\n          },\n          \"2\": {\n            \"name\": \"entity.name.namespace.nushell\"\n          }\n        },\n        \"end\": \"(\\\\])\\\\s*;?\\\\s*$\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"meta.brace.square.end.nushell\"\n          }\n        },\n        \"patterns\": [{\n          \"captures\": {\n            \"1\": {\n              \"name\": \"keyword.other.nushell\"\n            }\n          },\n          \"match\": `([\\\\w\\\\-]+|\"[\\\\w\\\\- ]+\"|'[\\\\w\\\\- ]+'|\\\\*),?`\n        }, {\n          \"include\": \"#comment\"\n        }]\n      }, {\n        \"captures\": {\n          \"2\": {\n            \"name\": \"entity.name.function.nushell\"\n          },\n          \"3\": {\n            \"name\": \"string.bare.nushell\",\n            \"patterns\": [{\n              \"captures\": {\n                \"1\": {\n                  \"name\": \"entity.name.namespace.nushell\"\n                }\n              },\n              \"match\": `([\\\\w\\\\- ]+)(?:\\\\.nu)?(?=$|\"|')`\n            }]\n          },\n          \"4\": {\n            \"name\": \"keyword.other.nushell\"\n          }\n        },\n        \"match\": `(?<path>(?:/|\\\\\\\\|~[\\\\/\\\\\\\\]|\\\\.\\\\.?[\\\\/\\\\\\\\])?(?:[^\\\\/\\\\\\\\]+[\\\\/\\\\\\\\])*[\\\\w\\\\- ]+(?:\\\\.nu)?){0}^\\\\s*((?:export )?use)\\\\s+(\"\\\\g<path>\"|'\\\\g<path>\\\\'|(?![\"'])\\\\g<path>)(?:\\\\s+([\\\\w\\\\-]+|\"[\\\\w\\\\- ]+\"|'[^']+'|\\\\*))?\\\\s*;?$`\n      }, {\n        \"begin\": `(?<path>(?:/|\\\\\\\\|~[\\\\/\\\\\\\\]|\\\\.\\\\.?[\\\\/\\\\\\\\])?(?:[^\\\\/\\\\\\\\]+[\\\\/\\\\\\\\])*[\\\\w\\\\- ]+(?:\\\\.nu)?){0}^\\\\s*((?:export )?use)\\\\s+(\"\\\\g<path>\"|'\\\\g<path>\\\\'|(?![\"'])\\\\g<path>)\\\\s+\\\\[`,\n        \"beginCaptures\": {\n          \"2\": {\n            \"name\": \"entity.name.function.nushell\"\n          },\n          \"3\": {\n            \"name\": \"string.bare.nushell\",\n            \"patterns\": [{\n              \"captures\": {\n                \"1\": {\n                  \"name\": \"entity.name.namespace.nushell\"\n                }\n              },\n              \"match\": `([\\\\w\\\\- ]+)(?:\\\\.nu)?(?=$|\"|')`\n            }]\n          }\n        },\n        \"end\": \"(\\\\])\\\\s*;?\\\\s*$\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"meta.brace.square.end.nushell\"\n          }\n        },\n        \"patterns\": [{\n          \"captures\": {\n            \"0\": {\n              \"name\": \"keyword.other.nushell\"\n            }\n          },\n          \"match\": `([\\\\w\\\\-]+|\"[\\\\w\\\\- ]+\"|'[\\\\w\\\\- ]+'|\\\\*),?`\n        }, {\n          \"include\": \"#comment\"\n        }]\n      }, {\n        \"captures\": {\n          \"0\": {\n            \"name\": \"entity.name.function.nushell\"\n          }\n        },\n        \"match\": \"^\\\\s*(?:export )?use\\\\b\"\n      }]\n    },\n    \"value\": {\n      \"patterns\": [{\n        \"include\": \"#variables\"\n      }, {\n        \"include\": \"#variable-fields\"\n      }, {\n        \"include\": \"#control-keywords\"\n      }, {\n        \"include\": \"#constant-value\"\n      }, {\n        \"include\": \"#table\"\n      }, {\n        \"include\": \"#operators\"\n      }, {\n        \"include\": \"#paren-expression\"\n      }, {\n        \"include\": \"#braced-expression\"\n      }, {\n        \"include\": \"#string\"\n      }, {\n        \"include\": \"#comment\"\n      }]\n    },\n    \"variable-fields\": {\n      \"match\": '(?<=\\\\)|\\\\}|\\\\])(?:\\\\.(?:[\\\\w-]+|\"[\\\\w\\\\- ]+\"))+',\n      \"name\": \"variable.other.nushell\"\n    },\n    \"variables\": {\n      \"captures\": {\n        \"1\": {\n          \"patterns\": [{\n            \"include\": \"#internal-variables\"\n          }, {\n            \"match\": \"\\\\$.+\",\n            \"name\": \"variable.other.nushell\"\n          }]\n        },\n        \"2\": {\n          \"name\": \"variable.other.nushell\"\n        }\n      },\n      \"match\": '(\\\\$[a-zA-Z0-9_]+)((?:\\\\.(?:[\\\\w-]+|\"[\\\\w\\\\- ]+\"))*)'\n    }\n  },\n  \"scopeName\": \"source.nushell\",\n  \"aliases\": [\"nu\"]\n});\nvar nushell = [lang];\nexport { nushell as default };"],
  "mappings": "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",
  "names": []
}
