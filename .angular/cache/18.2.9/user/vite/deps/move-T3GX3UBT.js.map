{
  "version": 3,
  "sources": ["../../../../../../node_modules/shiki/dist/langs/move.mjs"],
  "sourcesContent": ["const lang = Object.freeze({\n  \"displayName\": \"Move\",\n  \"name\": \"move\",\n  \"patterns\": [{\n    \"include\": \"#address\"\n  }, {\n    \"include\": \"#comments\"\n  }, {\n    \"include\": \"#module\"\n  }, {\n    \"include\": \"#script\"\n  }, {\n    \"include\": \"#annotation\"\n  }, {\n    \"begin\": \"\\\\b(while)\\\\b\",\n    \"comment\": \"While experiment\",\n    \"name\": \"keyword.control.while.whaaat.move\",\n    \"while\": \"[a-z]\"\n  }, {\n    \"include\": \"#comments\"\n  }, {\n    \"include\": \"#annotation\"\n  }, {\n    \"include\": \"#entry\"\n  }, {\n    \"include\": \"#public-scope\"\n  }, {\n    \"include\": \"#public\"\n  }, {\n    \"include\": \"#native\"\n  }, {\n    \"include\": \"#import\"\n  }, {\n    \"include\": \"#friend\"\n  }, {\n    \"include\": \"#const\"\n  }, {\n    \"include\": \"#struct\"\n  }, {\n    \"include\": \"#has_ability\"\n  }, {\n    \"include\": \"#enum\"\n  }, {\n    \"include\": \"#macro\"\n  }, {\n    \"include\": \"#fun\"\n  }, {\n    \"include\": \"#spec\"\n  }],\n  \"repository\": {\n    \"=== DEPRECATED_BELOW ===\": {},\n    \"abilities\": {\n      \"comment\": \"Ability\",\n      \"match\": \"\\\\b(store|key|drop|copy)\\\\b\",\n      \"name\": \"support.type.ability.move\"\n    },\n    \"address\": {\n      \"begin\": \"\\\\b(address)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"storage.modifier.type.address.keyword.move\"\n        }\n      },\n      \"comment\": \"Address block\",\n      \"end\": \"(?<=})\",\n      \"name\": \"meta.address_block.move\",\n      \"patterns\": [{\n        \"include\": \"#comments\"\n      }, {\n        \"begin\": \"(?<=address)\",\n        \"comment\": \"Address value/const\",\n        \"end\": \"(?=[{])\",\n        \"name\": \"meta.address.definition.move\",\n        \"patterns\": [{\n          \"include\": \"#comments\"\n        }, {\n          \"include\": \"#address_literal\"\n        }, {\n          \"comment\": \"Named Address\",\n          \"match\": \"\\\\b(\\\\w+)\\\\b\",\n          \"name\": \"entity.name.type.move\"\n        }]\n      }, {\n        \"include\": \"#module\"\n      }]\n    },\n    \"annotation\": {\n      \"begin\": \"#\\\\[\",\n      \"end\": \"\\\\]\",\n      \"name\": \"support.constant.annotation.move\",\n      \"patterns\": [{\n        \"comment\": \"Annotation name\",\n        \"match\": \"\\\\b(\\\\w+)\\\\s*(?=\\\\=)\",\n        \"name\": \"meta.annotation.name.move\"\n      }, {\n        \"begin\": \"=\",\n        \"comment\": \"Annotation value\",\n        \"end\": \"(?=[,\\\\]])\",\n        \"name\": \"meta.annotation.value.move\",\n        \"patterns\": [{\n          \"include\": \"#literals\"\n        }]\n      }]\n    },\n    \"as\": {\n      \"comment\": \"Keyword as (highlighted)\",\n      \"match\": \"\\\\b(as)\\\\b\",\n      \"name\": \"keyword.control.as.move\"\n    },\n    \"as-import\": {\n      \"comment\": \"Keyword as in import statement; not highlighted\",\n      \"match\": \"\\\\b(as)\\\\b\",\n      \"name\": \"meta.import.as.move\"\n    },\n    \"block\": {\n      \"begin\": \"{\",\n      \"comment\": \"Block expression or definition\",\n      \"end\": \"}\",\n      \"name\": \"meta.block.move\",\n      \"patterns\": [{\n        \"include\": \"#expr\"\n      }]\n    },\n    \"block-comments\": {\n      \"patterns\": [{\n        \"begin\": \"/\\\\*[\\\\*!](?![\\\\*/])\",\n        \"comment\": \"Block documentation comment\",\n        \"end\": \"\\\\*/\",\n        \"name\": \"comment.block.documentation.move\"\n      }, {\n        \"begin\": \"/\\\\*\",\n        \"comment\": \"Block comment\",\n        \"end\": \"\\\\*/\",\n        \"name\": \"comment.block.move\"\n      }]\n    },\n    \"capitalized\": {\n      \"comment\": \"MyType - capitalized type name\",\n      \"match\": \"\\\\b([A-Z][a-zA-Z_0-9]*)\\\\b\",\n      \"name\": \"entity.name.type.use.move\"\n    },\n    \"comments\": {\n      \"name\": \"meta.comments.move\",\n      \"patterns\": [{\n        \"include\": \"#doc-comments\"\n      }, {\n        \"include\": \"#line-comments\"\n      }, {\n        \"include\": \"#block-comments\"\n      }]\n    },\n    \"const\": {\n      \"begin\": \"\\\\b(const)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"storage.modifier.const.move\"\n        }\n      },\n      \"end\": \";\",\n      \"name\": \"meta.const.move\",\n      \"patterns\": [{\n        \"include\": \"#comments\"\n      }, {\n        \"include\": \"#primitives\"\n      }, {\n        \"include\": \"#literals\"\n      }, {\n        \"match\": \"\\\\b([\\\\w_]+)\\\\b\",\n        \"name\": \"constant.other.move\"\n      }]\n    },\n    \"control\": {\n      \"comment\": \"Control flow\",\n      \"match\": \"\\\\b(return|while|loop|if|else|break|continue|abort)\\\\b\",\n      \"name\": \"keyword.control.move\"\n    },\n    \"doc-comments\": {\n      \"begin\": \"///\",\n      \"comment\": \"Documentation comment\",\n      \"end\": \"$\",\n      \"name\": \"comment.block.documentation.move\",\n      \"patterns\": [{\n        \"captures\": {\n          \"1\": {\n            \"name\": \"markup.underline.link.move\"\n          }\n        },\n        \"comment\": \"Escaped member / link\",\n        \"match\": \"`(\\\\w+)`\"\n      }]\n    },\n    \"entry\": {\n      \"comment\": \"entry\",\n      \"match\": \"\\\\b(entry)\\\\b\",\n      \"name\": \"storage.modifier.visibility.entry.move\"\n    },\n    \"enum\": {\n      \"begin\": \"\\\\b(enum)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.enum.move\"\n        }\n      },\n      \"comment\": \"Enum syntax\",\n      \"end\": \"(?<=})\",\n      \"name\": \"meta.enum.move\",\n      \"patterns\": [{\n        \"include\": \"#comments\"\n      }, {\n        \"include\": \"#escaped_identifier\"\n      }, {\n        \"include\": \"#type_param\"\n      }, {\n        \"comment\": \"Enum name (ident)\",\n        \"match\": \"\\\\b[A-Z][a-zA-Z_0-9]*\\\\b\",\n        \"name\": \"entity.name.type.enum.move\"\n      }, {\n        \"include\": \"#has\"\n      }, {\n        \"include\": \"#abilities\"\n      }, {\n        \"begin\": \"{\",\n        \"end\": \"}\",\n        \"name\": \"meta.enum.definition.move\",\n        \"patterns\": [{\n          \"include\": \"#comments\"\n        }, {\n          \"begin\": \"\\\\(\",\n          \"end\": \"\\\\)\",\n          \"name\": \"meta.enum.tuple.move\",\n          \"patterns\": [{\n            \"include\": \"#comments\"\n          }, {\n            \"include\": \"#types\"\n          }]\n        }, {\n          \"begin\": \"{\",\n          \"end\": \"}\",\n          \"name\": \"meta.enum.struct.move\",\n          \"patterns\": [{\n            \"include\": \"#comments\"\n          }, {\n            \"include\": \"#escaped_identifier\"\n          }, {\n            \"include\": \"#types\"\n          }]\n        }]\n      }]\n    },\n    \"error_const\": {\n      \"match\": \"\\\\b(E[A-Z][A-Za-z_]*)\\\\b\",\n      \"name\": \"variable.language.error.move\"\n    },\n    \"escaped_identifier\": {\n      \"begin\": \"`\",\n      \"comment\": \"Escaped variable\",\n      \"end\": \"`\",\n      \"name\": \"variable.language.escaped.move\"\n    },\n    \"expr\": {\n      \"comment\": \"Aggregate Expression\",\n      \"name\": \"meta.expression.move\",\n      \"patterns\": [{\n        \"include\": \"#comments\"\n      }, {\n        \"include\": \"#escaped_identifier\"\n      }, {\n        \"include\": \"#expr_generic\"\n      }, {\n        \"include\": \"#error_const\"\n      }, {\n        \"include\": \"#packed_field\"\n      }, {\n        \"include\": \"#import\"\n      }, {\n        \"include\": \"#as\"\n      }, {\n        \"include\": \"#mut\"\n      }, {\n        \"include\": \"#let\"\n      }, {\n        \"include\": \"#types\"\n      }, {\n        \"include\": \"#literals\"\n      }, {\n        \"include\": \"#control\"\n      }, {\n        \"include\": \"#move_copy\"\n      }, {\n        \"include\": \"#resource_methods\"\n      }, {\n        \"include\": \"#self_access\"\n      }, {\n        \"include\": \"#module_access\"\n      }, {\n        \"include\": \"#label\"\n      }, {\n        \"include\": \"#macro_call\"\n      }, {\n        \"include\": \"#local_call\"\n      }, {\n        \"include\": \"#method_call\"\n      }, {\n        \"include\": \"#path_access\"\n      }, {\n        \"include\": \"#match_expression\"\n      }, {\n        \"match\": \"\\\\$(?=[a-z])\",\n        \"name\": \"keyword.operator.macro.dollar.move\"\n      }, {\n        \"match\": \"(?<=[$])[a-z][A-Z_0-9a-z]*\",\n        \"name\": \"variable.other.meta.move\"\n      }, {\n        \"comment\": \"ALL_CONST_CAPS\",\n        \"match\": \"\\\\b([A-Z][A-Z_]+)\\\\b\",\n        \"name\": \"constant.other.move\"\n      }, {\n        \"comment\": \"CustomType\",\n        \"match\": \"\\\\b([A-Z][a-zA-Z_0-9]*)\\\\b\",\n        \"name\": \"entity.name.type.move\"\n      }, {\n        \"include\": \"#paren\"\n      }, {\n        \"include\": \"#block\"\n      }]\n    },\n    \"expr_generic\": {\n      \"begin\": \"<(?=([\\\\sa-z_,0-9A-Z<>]+>))\",\n      \"comment\": \"< angle brackets >\",\n      \"end\": \">\",\n      \"name\": \"meta.expression.generic.type.move\",\n      \"patterns\": [{\n        \"include\": \"#comments\"\n      }, {\n        \"include\": \"#types\"\n      }, {\n        \"include\": \"#capitalized\"\n      }, {\n        \"include\": \"#expr_generic\"\n      }]\n    },\n    \"friend\": {\n      \"begin\": \"\\\\b(friend)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"storage.modifier.type.move\"\n        }\n      },\n      \"end\": \";\",\n      \"name\": \"meta.friend.move\",\n      \"patterns\": [{\n        \"include\": \"#comments\"\n      }, {\n        \"include\": \"#address_literal\"\n      }, {\n        \"comment\": \"Name of the imported module\",\n        \"match\": \"\\\\b([a-zA-Z][A-Za-z_0-9]*)\\\\b\",\n        \"name\": \"entity.name.type.module.move\"\n      }]\n    },\n    \"fun\": {\n      \"patterns\": [{\n        \"include\": \"#fun_signature\"\n      }, {\n        \"include\": \"#block\"\n      }]\n    },\n    \"fun_body\": {\n      \"begin\": \"{\",\n      \"comment\": \"Function body\",\n      \"end\": \"(?<=})\",\n      \"name\": \"meta.fun_body.move\",\n      \"patterns\": [{\n        \"include\": \"#expr\"\n      }]\n    },\n    \"fun_call\": {\n      \"begin\": \"\\\\b(\\\\w+)\\\\s*(?:<[\\\\w\\\\s,]+>)?\\\\s*[(]\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"entity.name.function.call.move\"\n        }\n      },\n      \"comment\": \"Function call\",\n      \"end\": \"[)]\",\n      \"name\": \"meta.fun_call.move\",\n      \"patterns\": [{\n        \"include\": \"#comments\"\n      }, {\n        \"include\": \"#resource_methods\"\n      }, {\n        \"include\": \"#self_access\"\n      }, {\n        \"include\": \"#module_access\"\n      }, {\n        \"include\": \"#move_copy\"\n      }, {\n        \"include\": \"#literals\"\n      }, {\n        \"include\": \"#fun_call\"\n      }, {\n        \"include\": \"#block\"\n      }, {\n        \"include\": \"#mut\"\n      }, {\n        \"include\": \"#as\"\n      }]\n    },\n    \"fun_signature\": {\n      \"begin\": \"\\\\b(fun)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"storage.modifier.fun.move\"\n        }\n      },\n      \"comment\": \"Function signature\",\n      \"end\": \"(?=[;{])\",\n      \"name\": \"meta.fun_signature.move\",\n      \"patterns\": [{\n        \"include\": \"#comments\"\n      }, {\n        \"include\": \"#module_access\"\n      }, {\n        \"include\": \"#capitalized\"\n      }, {\n        \"include\": \"#types\"\n      }, {\n        \"include\": \"#mut\"\n      }, {\n        \"begin\": \"(?<=\\\\bfun)\",\n        \"comment\": \"Function name\",\n        \"end\": \"(?=[<(])\",\n        \"name\": \"meta.function_name.move\",\n        \"patterns\": [{\n          \"include\": \"#comments\"\n        }, {\n          \"include\": \"#escaped_identifier\"\n        }, {\n          \"match\": \"\\\\b(\\\\w+)\\\\b\",\n          \"name\": \"entity.name.function.move\"\n        }]\n      }, {\n        \"include\": \"#type_param\"\n      }, {\n        \"begin\": \"[(]\",\n        \"comment\": \"Parentheses\",\n        \"end\": \"[)]\",\n        \"name\": \"meta.parentheses.move\",\n        \"patterns\": [{\n          \"include\": \"#comments\"\n        }, {\n          \"include\": \"#self_access\"\n        }, {\n          \"include\": \"#expr_generic\"\n        }, {\n          \"include\": \"#escaped_identifier\"\n        }, {\n          \"include\": \"#module_access\"\n        }, {\n          \"include\": \"#capitalized\"\n        }, {\n          \"include\": \"#types\"\n        }, {\n          \"include\": \"#mut\"\n        }]\n      }, {\n        \"comment\": \"Keyword acquires\",\n        \"match\": \"\\\\b(acquires)\\\\b\",\n        \"name\": \"storage.modifier\"\n      }]\n    },\n    \"has\": {\n      \"comment\": \"Has Abilities\",\n      \"match\": \"\\\\b(has)\\\\b\",\n      \"name\": \"keyword.control.ability.has.move\"\n    },\n    \"has_ability\": {\n      \"begin\": \"(?<=[})])\\\\s+(has)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"storage.modifier.type.move\"\n        }\n      },\n      \"end\": \";\",\n      \"name\": \"meta.has.ability.move\",\n      \"patterns\": [{\n        \"include\": \"#comments\"\n      }, {\n        \"include\": \"#abilities\"\n      }]\n    },\n    \"ident\": {\n      \"match\": \"\\\\b([a-zA-Z][A-Z_a-z0-9]*)\\\\b\",\n      \"name\": \"meta.identifier.move\"\n    },\n    \"import\": {\n      \"begin\": \"\\\\b(use)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"storage.modifier.type.move\"\n        }\n      },\n      \"end\": \";\",\n      \"name\": \"meta.import.move\",\n      \"patterns\": [{\n        \"include\": \"#comments\"\n      }, {\n        \"include\": \"#use_fun\"\n      }, {\n        \"include\": \"#address_literal\"\n      }, {\n        \"include\": \"#as-import\"\n      }, {\n        \"comment\": \"Uppercase entities\",\n        \"match\": \"\\\\b([A-Z]\\\\w*)\\\\b\",\n        \"name\": \"entity.name.type.move\"\n      }, {\n        \"begin\": \"{\",\n        \"comment\": \"Module members\",\n        \"end\": \"}\",\n        \"patterns\": [{\n          \"include\": \"#comments\"\n        }, {\n          \"include\": \"#as-import\"\n        }, {\n          \"comment\": \"Uppercase entities\",\n          \"match\": \"\\\\b([A-Z]\\\\w*)\\\\b\",\n          \"name\": \"entity.name.type.move\"\n        }]\n      }, {\n        \"comment\": \"Name of the imported module\",\n        \"match\": \"\\\\b(\\\\w+)\\\\b\",\n        \"name\": \"meta.entity.name.type.module.move\"\n      }]\n    },\n    \"label\": {\n      \"comment\": \"Label\",\n      \"match\": \"'[a-z][a-z_0-9]*\",\n      \"name\": \"string.quoted.single.label.move\"\n    },\n    \"let\": {\n      \"comment\": \"Keyword let\",\n      \"match\": \"\\\\b(let)\\\\b\",\n      \"name\": \"keyword.control.move\"\n    },\n    \"line-comments\": {\n      \"begin\": \"//\",\n      \"comment\": \"Single-line comment\",\n      \"end\": \"$\",\n      \"name\": \"comment.line.double-slash.move\"\n    },\n    \"literals\": {\n      \"comment\": \"Literals supported in Move\",\n      \"name\": \"meta.literal.move\",\n      \"patterns\": [{\n        \"comment\": \"base16 address literal\",\n        \"match\": \"@0x[A-F0-9a-f]+\",\n        \"name\": \"support.constant.address.base16.move\"\n      }, {\n        \"comment\": \"named address literal @[ident]\",\n        \"match\": \"@[a-zA-Z][a-zA-Z_0-9]*\",\n        \"name\": \"support.constant.address.name.move\"\n      }, {\n        \"comment\": \"Hex literal\",\n        \"match\": \"0x[_a-fA-F0-9]+(?:u(?:8|16|32|64|128|256))?\",\n        \"name\": \"constant.numeric.hex.move\"\n      }, {\n        \"comment\": \"Numeric literal\",\n        \"match\": \"(?<!(?:\\\\w|(?:(?<!\\\\.)\\\\.)))[0-9][_0-9]*(?:\\\\.(?!\\\\.)(?:[0-9][_0-9]*)?)?(?:[eE][+\\\\-]?[_0-9]+)?(?:[u](?:8|16|32|64|128|256))?\",\n        \"name\": \"constant.numeric.move\"\n      }, {\n        \"begin\": '\\\\bb\"',\n        \"comment\": \"vector ascii bytestring literal\",\n        \"end\": '\"',\n        \"name\": \"meta.vector.literal.ascii.move\",\n        \"patterns\": [{\n          \"comment\": \"character escape\",\n          \"match\": \"\\\\\\\\.\",\n          \"name\": \"constant.character.escape.move\"\n        }, {\n          \"comment\": \"Special symbol escape\",\n          \"match\": '\\\\\\\\[nrt\\\\0\"]',\n          \"name\": \"constant.character.escape.move\"\n        }, {\n          \"comment\": \"HEX Escape\",\n          \"match\": \"\\\\\\\\x[a-fA-F0-9][A-Fa-f0-9]\",\n          \"name\": \"constant.character.escape.hex.move\"\n        }, {\n          \"comment\": \"ASCII Character\",\n          \"match\": \"[\\\\x00-\\\\x7F]\",\n          \"name\": \"string.quoted.double.raw.move\"\n        }]\n      }, {\n        \"begin\": 'x\"',\n        \"comment\": \"vector hex literal\",\n        \"end\": '\"',\n        \"name\": \"meta.vector.literal.hex.move\",\n        \"patterns\": [{\n          \"comment\": \"vector hex literal\",\n          \"match\": \"[A-Fa-f0-9]+\",\n          \"name\": \"constant.character.move\"\n        }]\n      }, {\n        \"comment\": \"bool literal\",\n        \"match\": \"\\\\b(?:true|false)\\\\b\",\n        \"name\": \"constant.language.boolean.move\"\n      }, {\n        \"begin\": \"vector\\\\[\",\n        \"comment\": \"vector literal (macro?)\",\n        \"end\": \"\\\\]\",\n        \"name\": \"meta.vector.literal.macro.move\",\n        \"patterns\": [{\n          \"include\": \"#expr\"\n        }]\n      }]\n    },\n    \"local_call\": {\n      \"comment\": \"call to a local / imported fun\",\n      \"match\": \"\\\\b([a-z][_a-z0-9]*)(?=[<\\\\(])\",\n      \"name\": \"entity.name.function.call.local.move\"\n    },\n    \"macro\": {\n      \"begin\": \"\\\\b(macro)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.macro.move\"\n        }\n      },\n      \"comment\": \"macro fun [ident] {}\",\n      \"end\": \"(?<=})\",\n      \"name\": \"meta.macro.move\",\n      \"patterns\": [{\n        \"include\": \"#comments\"\n      }, {\n        \"include\": \"#fun\"\n      }]\n    },\n    \"macro_call\": {\n      \"captures\": {\n        \"2\": {\n          \"name\": \"support.function.macro.move\"\n        }\n      },\n      \"comment\": \"Macro fun call\",\n      \"match\": \"(\\\\b|\\\\.)([a-z][A-Za-z0-9_]*)!\",\n      \"name\": \"meta.macro.call\"\n    },\n    \"match_expression\": {\n      \"begin\": \"\\\\b(match)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.match.move\"\n        }\n      },\n      \"comment\": \"enum pattern matching\",\n      \"end\": \"(?<=})\",\n      \"name\": \"meta.match.move\",\n      \"patterns\": [{\n        \"include\": \"#comments\"\n      }, {\n        \"include\": \"#escaped_identifier\"\n      }, {\n        \"include\": \"#types\"\n      }, {\n        \"begin\": \"{\",\n        \"comment\": \"Block expression or definition\",\n        \"end\": \"}\",\n        \"name\": \"meta.match.block.move\",\n        \"patterns\": [{\n          \"comment\": \"arrow operator\",\n          \"match\": \"\\\\b(=>)\\\\b\",\n          \"name\": \"operator.match.move\"\n        }, {\n          \"include\": \"#expr\"\n        }]\n      }, {\n        \"include\": \"#expr\"\n      }]\n    },\n    \"method_call\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"entity.name.function.call.path.move\"\n        }\n      },\n      \"comment\": \"<expr>.[ident]<>?() call\",\n      \"match\": \"\\\\.([a-z][_a-z0-9]*)(?=[<\\\\(])\",\n      \"name\": \"meta.path.call.move\"\n    },\n    \"module\": {\n      \"begin\": \"\\\\b(module|spec)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"storage.modifier.type.move\"\n        }\n      },\n      \"comment\": \"Module definition\",\n      \"end\": \"(?<=[;}])\",\n      \"name\": \"meta.module.move\",\n      \"patterns\": [{\n        \"include\": \"#comments\"\n      }, {\n        \"begin\": \"(?<=(module|spec))\",\n        \"comment\": \"Module name\",\n        \"end\": \"(?=[;{])\",\n        \"patterns\": [{\n          \"include\": \"#comments\"\n        }, {\n          \"include\": \"#escaped_identifier\"\n        }, {\n          \"begin\": \"(?<=\\\\b(module|spec))\",\n          \"comment\": \"Module namespace / address\",\n          \"end\": \"(?=[(::){])\",\n          \"name\": \"constant.other.move\",\n          \"patterns\": [{\n            \"include\": \"#comments\"\n          }, {\n            \"include\": \"#escaped_identifier\"\n          }]\n        }, {\n          \"begin\": \"(?<=::)\",\n          \"comment\": \"Module name\",\n          \"end\": \"(?=[\\\\s;{])\",\n          \"name\": \"entity.name.type.move\",\n          \"patterns\": [{\n            \"include\": \"#comments\"\n          }, {\n            \"include\": \"#escaped_identifier\"\n          }]\n        }]\n      }, {\n        \"begin\": \"{\",\n        \"comment\": \"Module scope\",\n        \"end\": \"}\",\n        \"name\": \"meta.module_scope.move\",\n        \"patterns\": [{\n          \"include\": \"#comments\"\n        }, {\n          \"include\": \"#annotation\"\n        }, {\n          \"include\": \"#entry\"\n        }, {\n          \"include\": \"#public-scope\"\n        }, {\n          \"include\": \"#public\"\n        }, {\n          \"include\": \"#native\"\n        }, {\n          \"include\": \"#import\"\n        }, {\n          \"include\": \"#friend\"\n        }, {\n          \"include\": \"#const\"\n        }, {\n          \"include\": \"#struct\"\n        }, {\n          \"include\": \"#has_ability\"\n        }, {\n          \"include\": \"#enum\"\n        }, {\n          \"include\": \"#macro\"\n        }, {\n          \"include\": \"#fun\"\n        }, {\n          \"include\": \"#spec\"\n        }]\n      }]\n    },\n    \"module_access\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"meta.entity.name.type.accessed.module.move\"\n        },\n        \"2\": {\n          \"name\": \"entity.name.function.call.move\"\n        }\n      },\n      \"comment\": \"Use of module type or method\",\n      \"match\": \"\\\\b(\\\\w+)::(\\\\w+)\\\\b\",\n      \"name\": \"meta.module_access.move\"\n    },\n    \"module_label\": {\n      \"begin\": \"^\\\\s*(module)\\\\b\",\n      \"comment\": \"Module label, inline module definition\",\n      \"end\": \";\\\\s*$\",\n      \"name\": \"meta.module.label.move\",\n      \"patterns\": [{\n        \"include\": \"#comments\"\n      }, {\n        \"include\": \"#escaped_identifier\"\n      }, {\n        \"begin\": \"(?<=\\\\b(module|spec))\",\n        \"comment\": \"Module namespace / address\",\n        \"end\": \"(?=[(::){])\",\n        \"name\": \"constant.other.move\"\n      }, {\n        \"begin\": \"(?<=::)\",\n        \"comment\": \"Module name\",\n        \"end\": \"(?=[\\\\s{])\",\n        \"name\": \"entity.name.type.move\"\n      }]\n    },\n    \"move_copy\": {\n      \"comment\": \"Keywords move and copy\",\n      \"match\": \"\\\\b(move|copy)\\\\b\",\n      \"name\": \"variable.language.move\"\n    },\n    \"mut\": {\n      \"comment\": \"Mutable reference and let mut\",\n      \"match\": \"\\\\b(mut)\\\\b\",\n      \"name\": \"storage.modifier.mut.move\"\n    },\n    \"native\": {\n      \"comment\": \"native\",\n      \"match\": \"\\\\b(native)\\\\b\",\n      \"name\": \"storage.modifier.visibility.native.move\"\n    },\n    \"packed_field\": {\n      \"comment\": \"[ident]: \",\n      \"match\": \"[a-z][a-z0-9_]+\\\\s*:\\\\s*(?=\\\\s)\",\n      \"name\": \"meta.struct.field.move\"\n    },\n    \"paren\": {\n      \"begin\": \"\\\\(\",\n      \"end\": \"\\\\)\",\n      \"name\": \"meta.paren.move\",\n      \"patterns\": [{\n        \"include\": \"#expr\"\n      }]\n    },\n    \"path_access\": {\n      \"comment\": \"<expr>.[ident] access\",\n      \"match\": \"\\\\.[a-z][_a-z0-9]*\\\\b\",\n      \"name\": \"meta.path.access.move\"\n    },\n    \"phantom\": {\n      \"comment\": \"Keyword phantom inside type parameters\",\n      \"match\": \"\\\\b(phantom)\\\\b\",\n      \"name\": \"keyword.control.phantom.move\"\n    },\n    \"primitives\": {\n      \"comment\": \"Primitive types\",\n      \"match\": \"\\\\b(u8|u16|u32|u64|u128|u256|address|bool|signer)\\\\b\",\n      \"name\": \"support.type.primitives.move\"\n    },\n    \"public\": {\n      \"comment\": \"public\",\n      \"match\": \"\\\\b(public)\\\\b\",\n      \"name\": \"storage.modifier.visibility.public.move\"\n    },\n    \"public-scope\": {\n      \"begin\": \"(?<=\\\\b(public))\\\\s*\\\\(\",\n      \"comment\": \"public (friend/script/package)\",\n      \"end\": \"\\\\)\",\n      \"name\": \"meta.public.scoped.move\",\n      \"patterns\": [{\n        \"include\": \"#comments\"\n      }, {\n        \"match\": \"\\\\b(friend|script|package)\\\\b\",\n        \"name\": \"keyword.control.public.scope.move\"\n      }]\n    },\n    \"resource_methods\": {\n      \"comment\": \"Methods to work with resource\",\n      \"match\": \"\\\\b(borrow_global|borrow_global_mut|exists|move_from|move_to_sender|move_to)\\\\b\",\n      \"name\": \"support.function.typed.move\"\n    },\n    \"script\": {\n      \"begin\": \"\\\\b(script)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"storage.modifier.script.move\"\n        }\n      },\n      \"end\": \"(?<=})\",\n      \"name\": \"meta.script.move\",\n      \"patterns\": [{\n        \"include\": \"#comments\"\n      }, {\n        \"begin\": \"{\",\n        \"comment\": \"Script scope\",\n        \"end\": \"}\",\n        \"name\": \"meta.script_scope.move\",\n        \"patterns\": [{\n          \"include\": \"#const\"\n        }, {\n          \"include\": \"#comments\"\n        }, {\n          \"include\": \"#import\"\n        }, {\n          \"include\": \"#fun\"\n        }]\n      }]\n    },\n    \"self_access\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"variable.language.self.move\"\n        },\n        \"2\": {\n          \"name\": \"entity.name.function.call.move\"\n        }\n      },\n      \"comment\": \"Use of Self\",\n      \"match\": \"\\\\b(Self)::(\\\\w+)\\\\b\",\n      \"name\": \"meta.self_access.move\"\n    },\n    \"spec\": {\n      \"begin\": \"\\\\b(spec)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"storage.modifier.spec.move\"\n        }\n      },\n      \"end\": \"(?<=[;}])\",\n      \"name\": \"meta.spec.move\",\n      \"patterns\": [{\n        \"comment\": \"Spec target\",\n        \"match\": \"\\\\b(module|schema|struct|fun)\",\n        \"name\": \"storage.modifier.spec.target.move\"\n      }, {\n        \"comment\": \"Spec define inline\",\n        \"match\": \"\\\\b(define)\",\n        \"name\": \"storage.modifier.spec.define.move\"\n      }, {\n        \"comment\": \"Target name\",\n        \"match\": \"\\\\b(\\\\w+)\\\\b\",\n        \"name\": \"entity.name.function.move\"\n      }, {\n        \"begin\": \"{\",\n        \"comment\": \"Spec block\",\n        \"end\": \"}\",\n        \"patterns\": [{\n          \"include\": \"#comments\"\n        }, {\n          \"include\": \"#spec_block\"\n        }, {\n          \"include\": \"#spec_types\"\n        }, {\n          \"include\": \"#spec_define\"\n        }, {\n          \"include\": \"#spec_keywords\"\n        }, {\n          \"include\": \"#control\"\n        }, {\n          \"include\": \"#fun_call\"\n        }, {\n          \"include\": \"#literals\"\n        }, {\n          \"include\": \"#types\"\n        }, {\n          \"include\": \"#let\"\n        }]\n      }]\n    },\n    \"spec_block\": {\n      \"begin\": \"{\",\n      \"comment\": \"Spec block\",\n      \"end\": \"}\",\n      \"name\": \"meta.spec_block.move\",\n      \"patterns\": [{\n        \"include\": \"#comments\"\n      }, {\n        \"include\": \"#spec_block\"\n      }, {\n        \"include\": \"#spec_types\"\n      }, {\n        \"include\": \"#fun_call\"\n      }, {\n        \"include\": \"#literals\"\n      }, {\n        \"include\": \"#control\"\n      }, {\n        \"include\": \"#types\"\n      }, {\n        \"include\": \"#let\"\n      }]\n    },\n    \"spec_define\": {\n      \"begin\": \"\\\\b(define)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.move.spec\"\n        }\n      },\n      \"comment\": \"Spec define keyword\",\n      \"end\": \"(?=[;{])\",\n      \"name\": \"meta.spec_define.move\",\n      \"patterns\": [{\n        \"include\": \"#comments\"\n      }, {\n        \"include\": \"#spec_types\"\n      }, {\n        \"include\": \"#types\"\n      }, {\n        \"begin\": \"(?<=\\\\bdefine)\",\n        \"comment\": \"Function name\",\n        \"end\": \"(?=[(])\",\n        \"patterns\": [{\n          \"include\": \"#comments\"\n        }, {\n          \"match\": \"\\\\b(\\\\w+)\\\\b\",\n          \"name\": \"entity.name.function.move\"\n        }]\n      }]\n    },\n    \"spec_keywords\": {\n      \"match\": \"\\\\b(global|pack|unpack|pragma|native|include|ensures|requires|invariant|apply|aborts_if|modifies)\\\\b\",\n      \"name\": \"keyword.control.move.spec\"\n    },\n    \"spec_types\": {\n      \"comment\": \"Spec-only types\",\n      \"match\": \"\\\\b(range|num|vector|bool|u8|u16|u32|u64|u128|u256|address)\\\\b\",\n      \"name\": \"support.type.vector.move\"\n    },\n    \"struct\": {\n      \"begin\": \"\\\\b(struct)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"storage.modifier.type.move\"\n        }\n      },\n      \"end\": \"(?<=[};\\\\)])\",\n      \"name\": \"meta.struct.move\",\n      \"patterns\": [{\n        \"include\": \"#comments\"\n      }, {\n        \"include\": \"#escaped_identifier\"\n      }, {\n        \"include\": \"#has\"\n      }, {\n        \"include\": \"#abilities\"\n      }, {\n        \"comment\": \"Struct name (ident)\",\n        \"match\": \"\\\\b[A-Z][a-zA-Z_0-9]*\\\\b\",\n        \"name\": \"entity.name.type.struct.move\"\n      }, {\n        \"begin\": \"\\\\(\",\n        \"comment\": \"Positional fields\",\n        \"end\": \"\\\\)\",\n        \"name\": \"meta.struct.paren.move\",\n        \"patterns\": [{\n          \"include\": \"#comments\"\n        }, {\n          \"include\": \"#capitalized\"\n        }, {\n          \"include\": \"#types\"\n        }]\n      }, {\n        \"include\": \"#type_param\"\n      }, {\n        \"begin\": \"\\\\(\",\n        \"comment\": \"Simple struct\",\n        \"end\": \"(?<=[)])\",\n        \"name\": \"meta.struct.paren.move\",\n        \"patterns\": [{\n          \"include\": \"#comments\"\n        }, {\n          \"include\": \"#types\"\n        }]\n      }, {\n        \"begin\": \"{\",\n        \"comment\": \"Struct body\",\n        \"end\": \"}\",\n        \"name\": \"meta.struct.body.move\",\n        \"patterns\": [{\n          \"include\": \"#comments\"\n        }, {\n          \"include\": \"#self_access\"\n        }, {\n          \"include\": \"#escaped_identifier\"\n        }, {\n          \"include\": \"#module_access\"\n        }, {\n          \"include\": \"#expr_generic\"\n        }, {\n          \"include\": \"#capitalized\"\n        }, {\n          \"include\": \"#types\"\n        }]\n      }, {\n        \"include\": \"#has_ability\"\n      }]\n    },\n    \"struct_pack\": {\n      \"begin\": \"(?<=[A-Za-z0-9_>])\\\\s*{\",\n      \"comment\": \"Struct { field: value... }; identified as generic / ident followed by curly's\",\n      \"end\": \"}\",\n      \"name\": \"meta.struct.pack.move\",\n      \"patterns\": [{\n        \"include\": \"#comments\"\n      }]\n    },\n    \"type_param\": {\n      \"begin\": \"<\",\n      \"comment\": \"Generic type param\",\n      \"end\": \">\",\n      \"name\": \"meta.generic_param.move\",\n      \"patterns\": [{\n        \"include\": \"#comments\"\n      }, {\n        \"include\": \"#phantom\"\n      }, {\n        \"include\": \"#capitalized\"\n      }, {\n        \"include\": \"#module_access\"\n      }, {\n        \"include\": \"#abilities\"\n      }]\n    },\n    \"types\": {\n      \"comment\": \"Built-in types + vector\",\n      \"name\": \"meta.types.move\",\n      \"patterns\": [{\n        \"include\": \"#primitives\"\n      }, {\n        \"include\": \"#vector\"\n      }]\n    },\n    \"use_fun\": {\n      \"begin\": \"\\\\b(fun)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"storage.modifier.fun.move\"\n        }\n      },\n      \"comment\": \"use { fun } internals\",\n      \"end\": \"(?=;)\",\n      \"name\": \"meta.import.fun.move\",\n      \"patterns\": [{\n        \"include\": \"#comments\"\n      }, {\n        \"comment\": \"as keyword\",\n        \"match\": \"\\\\b(as)\\\\b\",\n        \"name\": \"keyword.control.as.move\"\n      }, {\n        \"comment\": \"Self keyword\",\n        \"match\": \"\\\\b(Self)\\\\b\",\n        \"name\": \"variable.language.self.use.fun.move\"\n      }, {\n        \"comment\": \"Function name\",\n        \"match\": \"\\\\b(_______[a-z][a-z_0-9]+)\\\\b\",\n        \"name\": \"entity.name.function.use.move\"\n      }, {\n        \"include\": \"#types\"\n      }, {\n        \"include\": \"#escaped_identifier\"\n      }, {\n        \"include\": \"#capitalized\"\n      }]\n    },\n    \"vector\": {\n      \"comment\": \"vector type\",\n      \"match\": \"\\\\b(vector)\\\\b\",\n      \"name\": \"support.type.vector.move\"\n    }\n  },\n  \"scopeName\": \"source.move\"\n});\nvar move = [lang];\nexport { move as default };"],
  "mappings": "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",
  "names": []
}
