{
  "version": 3,
  "sources": ["../../../../../../node_modules/shiki/dist/langs/fortran-free-form.mjs"],
  "sourcesContent": ["const lang = Object.freeze({\n  \"displayName\": \"Fortran (Free Form)\",\n  \"fileTypes\": [\"f90\", \"F90\", \"f95\", \"F95\", \"f03\", \"F03\", \"f08\", \"F08\", \"f18\", \"F18\", \"fpp\", \"FPP\", \".pf\", \".PF\"],\n  \"firstLineMatch\": \"(?i)-[*]- mode: fortran free -[*]-\",\n  \"injections\": {\n    \"source.fortran.free - ( string | comment | meta.preprocessor )\": {\n      \"patterns\": [{\n        \"include\": \"#line-continuation-operator\"\n      }, {\n        \"include\": \"#preprocessor\"\n      }]\n    },\n    \"string.quoted.double.fortran\": {\n      \"patterns\": [{\n        \"include\": \"#string-line-continuation-operator\"\n      }]\n    },\n    \"string.quoted.single.fortran\": {\n      \"patterns\": [{\n        \"include\": \"#string-line-continuation-operator\"\n      }]\n    }\n  },\n  \"name\": \"fortran-free-form\",\n  \"patterns\": [{\n    \"include\": \"#preprocessor\"\n  }, {\n    \"include\": \"#comments\"\n  }, {\n    \"include\": \"#constants\"\n  }, {\n    \"include\": \"#operators\"\n  }, {\n    \"include\": \"#array-constructor\"\n  }, {\n    \"include\": \"#parentheses\"\n  }, {\n    \"include\": \"#include-statement\"\n  }, {\n    \"include\": \"#import-statement\"\n  }, {\n    \"include\": \"#block-data-definition\"\n  }, {\n    \"include\": \"#function-definition\"\n  }, {\n    \"include\": \"#module-definition\"\n  }, {\n    \"include\": \"#program-definition\"\n  }, {\n    \"include\": \"#submodule-definition\"\n  }, {\n    \"include\": \"#subroutine-definition\"\n  }, {\n    \"include\": \"#procedure-definition\"\n  }, {\n    \"include\": \"#derived-type-definition\"\n  }, {\n    \"include\": \"#enum-block-construct\"\n  }, {\n    \"include\": \"#interface-block-constructs\"\n  }, {\n    \"include\": \"#procedure-specification-statement\"\n  }, {\n    \"include\": \"#type-specification-statements\"\n  }, {\n    \"include\": \"#specification-statements\"\n  }, {\n    \"include\": \"#control-constructs\"\n  }, {\n    \"include\": \"#control-statements\"\n  }, {\n    \"include\": \"#execution-statements\"\n  }, {\n    \"include\": \"#intrinsic-functions\"\n  }, {\n    \"include\": \"#variable\"\n  }],\n  \"repository\": {\n    \"IO-item-list\": {\n      \"begin\": `(?i)(?=\\\\s*[a-z0-9\"'])`,\n      \"comment\": \"Name list.\",\n      \"contentName\": \"meta.name-list.fortran\",\n      \"end\": \"(?=[\\\\);!\\\\n])\",\n      \"patterns\": [{\n        \"include\": \"#constants\"\n      }, {\n        \"include\": \"#operators\"\n      }, {\n        \"include\": \"#intrinsic-functions\"\n      }, {\n        \"include\": \"#array-constructor\"\n      }, {\n        \"include\": \"#parentheses\"\n      }, {\n        \"include\": \"#brackets\"\n      }, {\n        \"include\": \"#assignment-keyword\"\n      }, {\n        \"include\": \"#operator-keyword\"\n      }, {\n        \"include\": \"#variable\"\n      }]\n    },\n    \"IO-keywords\": {\n      \"begin\": \"(?i)\\\\G\\\\s*\\\\b(?:(read)|(write))\\\\s*(\\\\()\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.generic-spec.read.fortran\"\n        },\n        \"2\": {\n          \"name\": \"keyword.control.generic-spec.write.fortran\"\n        },\n        \"3\": {\n          \"name\": \"punctuation.parentheses.left.fortran\"\n        }\n      },\n      \"comment\": \"IO generic specification.\",\n      \"end\": \"(\\\\))\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.parentheses.right.fortran\"\n        }\n      },\n      \"patterns\": [{\n        \"captures\": {\n          \"1\": {\n            \"name\": \"keyword.control.generic-spec.formatted.fortran\"\n          },\n          \"2\": {\n            \"name\": \"keyword.control.generic-spec.unformatted.fortran\"\n          }\n        },\n        \"match\": \"(?i)\\\\G\\\\s*\\\\b(?:(formatted)|(unformatted))\\\\b\"\n      }, {\n        \"include\": \"#invalid-word\"\n      }]\n    },\n    \"IO-statements\": {\n      \"patterns\": [{\n        \"begin\": \"(?ix)\\\\b(?:(backspace)|(close)|(endfile)|(format)|(inquire)|(open)|(read)|(rewind)|(write))\\\\s*(?=\\\\()\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.backspace.fortran\"\n          },\n          \"2\": {\n            \"name\": \"keyword.control.close.fortran\"\n          },\n          \"3\": {\n            \"name\": \"keyword.control.endfile.fortran\"\n          },\n          \"4\": {\n            \"name\": \"keyword.control.format.fortran\"\n          },\n          \"5\": {\n            \"name\": \"keyword.control.inquire.fortran\"\n          },\n          \"6\": {\n            \"name\": \"keyword.control.open.fortran\"\n          },\n          \"7\": {\n            \"name\": \"keyword.control.read.fortran\"\n          },\n          \"8\": {\n            \"name\": \"keyword.control.rewind.fortran\"\n          },\n          \"9\": {\n            \"name\": \"keyword.control.write.fortran\"\n          },\n          \"10\": {\n            \"name\": \"punctuation.parentheses.left.fortran\"\n          }\n        },\n        \"comment\": \"Introduced in the Fortran 1977 standard.\",\n        \"end\": \"(?=[;!\\\\n])\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.parentheses.right.fortran\"\n          }\n        },\n        \"name\": \"meta.statement.IO.fortran\",\n        \"patterns\": [{\n          \"include\": \"#parentheses-dummy-variables\"\n        }, {\n          \"include\": \"#IO-item-list\"\n        }]\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"keyword.control.backspace.fortran\"\n          },\n          \"2\": {\n            \"name\": \"keyword.control.endfile.fortran\"\n          },\n          \"3\": {\n            \"name\": \"keyword.control.format.fortran\"\n          },\n          \"4\": {\n            \"name\": \"keyword.control.print.fortran\"\n          },\n          \"5\": {\n            \"name\": \"keyword.control.read.fortran\"\n          },\n          \"6\": {\n            \"name\": \"keyword.control.rewind.fortran\"\n          }\n        },\n        \"comment\": \"Introduced in the Fortran 1977 standard.\",\n        \"match\": \"(?i)\\\\b(?:(backspace)|(endfile)|(format)|(print)|(read)|(rewind))\\\\b\"\n      }, {\n        \"begin\": \"(?i)\\\\b(?:(flush)|(wait))\\\\s*(?=\\\\()\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.flush.fortran\"\n          },\n          \"2\": {\n            \"name\": \"keyword.control.wait.fortran\"\n          },\n          \"3\": {\n            \"name\": \"punctuation.parentheses.left.fortran\"\n          }\n        },\n        \"comment\": \"Introduced in the Fortran 2003 standard.\",\n        \"end\": \"(?<!\\\\G)\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.parentheses.right.fortran\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#parentheses-dummy-variables\"\n        }]\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"keyword.control.flush.fortran\"\n          }\n        },\n        \"comment\": \"Introduced in the Fortran 2003 standard.\",\n        \"match\": \"(?i)\\\\b(flush)\\\\b\"\n      }]\n    },\n    \"abstract-attribute\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"storage.modifier.fortran.fortran\"\n        }\n      },\n      \"comment\": \"Introduced in the Fortran 2003 standard.\",\n      \"match\": \"(?i)\\\\G\\\\s*\\\\b(abstract)\\\\b\"\n    },\n    \"abstract-interface-block-construct\": {\n      \"begin\": \"(?i)\\\\b(abstract)\\\\s+(interface)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.other.attribute.fortran.modern\"\n        },\n        \"2\": {\n          \"name\": \"keyword.control.interface.fortran\"\n        }\n      },\n      \"comment\": \"Introduced in the Fortran 2003 standard.\",\n      \"end\": \"(?i)\\\\b(end\\\\s*interface)\\\\b\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.endinterface.fortran.modern\"\n        }\n      },\n      \"name\": \"meta.interface.abstract.fortran\",\n      \"patterns\": [{\n        \"include\": \"$base\"\n      }]\n    },\n    \"access-attribute\": {\n      \"patterns\": [{\n        \"include\": \"#private-attribute\"\n      }, {\n        \"include\": \"#public-attribute\"\n      }]\n    },\n    \"allocatable-attribute\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"storage.modifier.allocatable.fortran\"\n        }\n      },\n      \"comment\": \"Introduced in the Fortran 1990 standard.\",\n      \"match\": \"(?i)\\\\s*\\\\b(allocatable)\\\\b\"\n    },\n    \"allocate-statement\": {\n      \"begin\": \"(?i)\\\\b(allocate)\\\\s*(?=\\\\()\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.allocate.fortran\"\n        },\n        \"2\": {\n          \"name\": \"punctuation.parentheses.left.fortran\"\n        }\n      },\n      \"comment\": \"Introduced in the Fortran 1990 standard.\",\n      \"end\": \"(?<!\\\\G)\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.parentheses.right.fortran\"\n        }\n      },\n      \"name\": \"meta.statement.allocate.fortran\",\n      \"patterns\": [{\n        \"include\": \"#parentheses-dummy-variables\"\n      }]\n    },\n    \"arithmetic-operators\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"keyword.operator.subtraction.fortran\"\n        },\n        \"2\": {\n          \"name\": \"keyword.operator.addition.fortran\"\n        },\n        \"3\": {\n          \"name\": \"keyword.operator.division.fortran\"\n        },\n        \"4\": {\n          \"name\": \"keyword.operator.power.fortran\"\n        },\n        \"5\": {\n          \"name\": \"keyword.operator.multiplication.fortran\"\n        }\n      },\n      \"comment\": \"Introduced in the Fortran 1977 standard.\",\n      \"match\": \"(\\\\-)|(\\\\+)|\\\\/(?!\\\\/|\\\\=|\\\\\\\\)|(\\\\*\\\\*)|(\\\\*)\"\n    },\n    \"array-constructor\": {\n      \"begin\": \"(?=\\\\s*(\\\\[|\\\\(\\\\/))\",\n      \"end\": \"(?<!\\\\G)\",\n      \"name\": \"meta.contructor.array\",\n      \"patterns\": [{\n        \"include\": \"#brackets\"\n      }, {\n        \"begin\": \"\\\\s*(\\\\(\\\\/)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.bracket.left.fortran\"\n          }\n        },\n        \"end\": \"(\\\\/\\\\))\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.bracket.left.fortran\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#comments\"\n        }, {\n          \"include\": \"#constants\"\n        }, {\n          \"include\": \"#operators\"\n        }, {\n          \"include\": \"#array-constructor\"\n        }, {\n          \"include\": \"#parentheses\"\n        }, {\n          \"include\": \"#intrinsic-functions\"\n        }, {\n          \"include\": \"#variable\"\n        }]\n      }]\n    },\n    \"assign-statement\": {\n      \"patterns\": [{\n        \"begin\": \"(?i)\\\\b(assign)\\\\b\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.assign.fortran\"\n          }\n        },\n        \"comment\": \"Introduced in the Fortran 1977 standard.\",\n        \"end\": \"(?=[;!\\\\n])\",\n        \"name\": \"meta.statement.control.assign.fortran\",\n        \"patterns\": [{\n          \"captures\": {\n            \"1\": {\n              \"name\": \"keyword.control.to.fortran\"\n            }\n          },\n          \"match\": \"(?i)\\\\s*\\\\b(to)\\\\b\"\n        }, {\n          \"include\": \"$base\"\n        }]\n      }]\n    },\n    \"assignment-keyword\": {\n      \"begin\": \"(?i)\\\\G\\\\s*\\\\b(assignment)\\\\s*(\\\\()\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.generic-spec.assignment.fortran\"\n        },\n        \"2\": {\n          \"name\": \"punctuation.parentheses.left.fortran\"\n        }\n      },\n      \"comment\": \"Assignment generic specification.\",\n      \"end\": \"(\\\\))\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.parentheses.right.fortran\"\n        }\n      },\n      \"patterns\": [{\n        \"include\": \"#assignment-operator\"\n      }, {\n        \"include\": \"#invalid-word\"\n      }]\n    },\n    \"assignment-operator\": {\n      \"comment\": \"Introduced in the Fortran 1977 standard.\",\n      \"match\": \"(?<!\\\\/|\\\\=|\\\\<|\\\\>)(\\\\=)(?!\\\\=|\\\\>)\",\n      \"name\": \"keyword.operator.assignment.fortran\"\n    },\n    \"associate-construct\": {\n      \"begin\": \"(?i)\\\\b(associate)\\\\b(?=\\\\s*\\\\()\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.associate.fortran\"\n        }\n      },\n      \"comment\": \"Introduced in the Fortran 2003 standard.\",\n      \"contentName\": \"meta.block.associate.fortran\",\n      \"end\": \"(?i)\\\\b(end\\\\s*associate)\\\\b\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.endassociate.fortran\"\n        }\n      },\n      \"patterns\": [{\n        \"include\": \"$base\"\n      }]\n    },\n    \"asynchronous-attribute\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"storage.modifier.asynchronous.fortran\"\n        }\n      },\n      \"comment\": \"Introduced in the Fortran 2003 standard.\",\n      \"match\": \"(?i)\\\\G\\\\s*\\\\b(asynchronous)\\\\b\"\n    },\n    \"attribute-specification-statement\": {\n      \"begin\": \"(?ix)(?=\\\\b(?:allocatable|asynchronous|contiguous |external|intrinsic|optional|parameter|pointer|private|protected|public|save|target|value|volatile)\\\\b |(bind|dimension|intent)\\\\s*\\\\( |(codimension)\\\\s*\\\\[)\",\n      \"end\": \"(?=[;!\\\\n])\",\n      \"name\": \"meta.statement.attribute-specification.fortran\",\n      \"patterns\": [{\n        \"include\": \"#access-attribute\"\n      }, {\n        \"include\": \"#allocatable-attribute\"\n      }, {\n        \"include\": \"#asynchronous-attribute\"\n      }, {\n        \"include\": \"#codimension-attribute\"\n      }, {\n        \"include\": \"#contiguous-attribute\"\n      }, {\n        \"include\": \"#dimension-attribute\"\n      }, {\n        \"include\": \"#external-attribute\"\n      }, {\n        \"include\": \"#intent-attribute\"\n      }, {\n        \"include\": \"#intrinsic-attribute\"\n      }, {\n        \"include\": \"#language-binding-attribute\"\n      }, {\n        \"include\": \"#optional-attribute\"\n      }, {\n        \"include\": \"#parameter-attribute\"\n      }, {\n        \"include\": \"#pointer-attribute\"\n      }, {\n        \"include\": \"#protected-attribute\"\n      }, {\n        \"include\": \"#save-attribute\"\n      }, {\n        \"include\": \"#target-attribute\"\n      }, {\n        \"include\": \"#value-attribute\"\n      }, {\n        \"include\": \"#volatile-attribute\"\n      }, {\n        \"begin\": \"(?=\\\\s*::)\",\n        \"comment\": \"Attribute list.\",\n        \"contentName\": \"meta.attribute-list.normal.fortran\",\n        \"end\": \"(::)|(?=[;!\\\\n])\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.operator.double-colon.fortran\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#invalid-word\"\n        }]\n      }, {\n        \"include\": \"#name-list\"\n      }]\n    },\n    \"block-construct\": {\n      \"begin\": \"(?i)\\\\b(block)\\\\b(?!\\\\s*\\\\bdata\\\\b)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.associate.fortran\"\n        }\n      },\n      \"comment\": \"Introduced in the Fortran 2008 standard.\",\n      \"contentName\": \"meta.block.block.fortran\",\n      \"end\": \"(?i)\\\\b(end\\\\s*block)\\\\b\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.endassociate.fortran\"\n        }\n      },\n      \"patterns\": [{\n        \"include\": \"$base\"\n      }]\n    },\n    \"block-data-definition\": {\n      \"begin\": \"(?i)\\\\b(block\\\\s*data)\\\\b(?:\\\\s+([a-z]\\\\w*)\\\\b)?\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.block-data.fortran\"\n        },\n        \"2\": {\n          \"name\": \"entity.name.block-data.fortran\"\n        }\n      },\n      \"end\": \"(?ix)\\\\b(?:(end\\\\s*block\\\\s*data)(?:\\\\s+(\\\\2))?|(end))\\\\b (?:\\\\s*(\\\\S((?!\\\\n).)*))?\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.end-block-data.fortran\"\n        },\n        \"2\": {\n          \"name\": \"entity.name.block-data.fortran\"\n        },\n        \"3\": {\n          \"name\": \"keyword.control.end-block-data.fortran\"\n        },\n        \"4\": {\n          \"name\": \"invalid.error.block-data-definition.fortran\"\n        }\n      },\n      \"name\": \"meta.block-data.fortran\",\n      \"patterns\": [{\n        \"include\": \"$base\"\n      }]\n    },\n    \"brackets\": {\n      \"begin\": \"\\\\s*(\\\\[)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.bracket.left.fortran\"\n        }\n      },\n      \"end\": \"(\\\\])\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.bracket.left.fortran\"\n        }\n      },\n      \"patterns\": [{\n        \"include\": \"#comments\"\n      }, {\n        \"include\": \"#constants\"\n      }, {\n        \"include\": \"#operators\"\n      }, {\n        \"include\": \"#array-constructor\"\n      }, {\n        \"include\": \"#parentheses\"\n      }, {\n        \"include\": \"#intrinsic-functions\"\n      }, {\n        \"include\": \"#variable\"\n      }]\n    },\n    \"call-statement\": {\n      \"patterns\": [{\n        \"begin\": \"(?i)\\\\s*\\\\b(call)\\\\b\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.call.fortran\"\n          }\n        },\n        \"comment\": \"Introduced in the Fortran 1977 standard.\",\n        \"end\": \"(?=[;!\\\\n])\",\n        \"name\": \"meta.statement.control.call.fortran\",\n        \"patterns\": [{\n          \"begin\": \"(?ix)\\\\G\\\\s*([a-z]\\\\w*)(%)([a-z]\\\\w*)\\\\b\\\\s*(?=\\\\()\",\n          \"beginCaptures\": {\n            \"1\": {\n              \"name\": \"variable.other.fortran\"\n            },\n            \"2\": {\n              \"name\": \"keyword.accessor.fortran\"\n            },\n            \"3\": {\n              \"name\": \"entity.name.function.subroutine.fortran\"\n            }\n          },\n          \"comment\": \"type-bound subroutines\",\n          \"end\": \"(?<!\\\\G)\",\n          \"endCaptures\": {\n            \"1\": {\n              \"name\": \"punctuation.parentheses.right.fortran\"\n            }\n          },\n          \"patterns\": [{\n            \"include\": \"#parentheses-dummy-variables\"\n          }]\n        }, {\n          \"include\": \"#intrinsic-subroutines\"\n        }, {\n          \"begin\": \"(?i)\\\\G\\\\s*\\\\b([a-z]\\\\w*)\\\\s*(?=\\\\()\",\n          \"beginCaptures\": {\n            \"1\": {\n              \"name\": \"entity.name.function.subroutine.fortran\"\n            },\n            \"2\": {\n              \"name\": \"punctuation.parentheses.left.fortran\"\n            }\n          },\n          \"comment\": \"User defined subroutine.\",\n          \"end\": \"(?<!\\\\G)\",\n          \"endCaptures\": {\n            \"1\": {\n              \"name\": \"punctuation.parentheses.right.fortran\"\n            }\n          },\n          \"patterns\": [{\n            \"include\": \"#parentheses-dummy-variables\"\n          }]\n        }, {\n          \"captures\": {\n            \"1\": {\n              \"name\": \"entity.name.function.subroutine.fortran\"\n            }\n          },\n          \"comment\": \"User defined subroutine.\",\n          \"match\": \"(?i)\\\\G\\\\s*\\\\b([a-z]\\\\w*)\\\\b(?=\\\\s*[;!\\\\n])\"\n        }, {\n          \"include\": \"$base\"\n        }]\n      }]\n    },\n    \"character-type\": {\n      \"comment\": \"Introduced in the Fortran 1977 standard.\",\n      \"patterns\": [{\n        \"begin\": \"(?i)\\\\b(character)\\\\s*(?=\\\\()\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"storage.type.character.fortran\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.parentheses.left.fortran\"\n          }\n        },\n        \"contentName\": \"meta.type-spec.fortran\",\n        \"end\": \"(?<!\\\\G)\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.parentheses.right.fortran\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#parentheses-dummy-variables\"\n        }]\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"storage.type.character.fortran\"\n          },\n          \"2\": {\n            \"name\": \"keyword.operator.multiplication.fortran\"\n          },\n          \"3\": {\n            \"name\": \"constant.numeric.fortran\"\n          }\n        },\n        \"match\": \"(?i)\\\\b(character)\\\\b(?:\\\\s*(\\\\*)\\\\s*(\\\\d*))?\"\n      }]\n    },\n    \"codimension-attribute\": {\n      \"begin\": \"(?i)\\\\G\\\\s*\\\\b(codimension)(?=\\\\s*\\\\[)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"storage.modifier.codimension.fortran\"\n        }\n      },\n      \"comment\": \"Introduced in the Fortran 2008 standard.\",\n      \"end\": \"(?<!\\\\G)\",\n      \"patterns\": [{\n        \"include\": \"#brackets\"\n      }]\n    },\n    \"comments\": {\n      \"begin\": \"!\",\n      \"end\": \"(?=\\\\n)\",\n      \"name\": \"comment.line.fortran\"\n    },\n    \"common-statement\": {\n      \"begin\": \"(?i)\\\\b(common)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.common.fortran\"\n        }\n      },\n      \"end\": \"(?=[;!\\\\n])\",\n      \"patterns\": [{\n        \"include\": \"$base\"\n      }]\n    },\n    \"concurrent-attribute\": {\n      \"begin\": \"(?i)\\\\G\\\\s*\\\\b(concurrent)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.while.fortran\"\n        }\n      },\n      \"comment\": \"Introduced in the Fortran 2003 standard.\",\n      \"end\": \"(?=[;!\\\\n])\",\n      \"patterns\": [{\n        \"include\": \"#parentheses\"\n      }, {\n        \"include\": \"#invalid-word\"\n      }]\n    },\n    \"constants\": {\n      \"patterns\": [{\n        \"include\": \"#logical-constant\"\n      }, {\n        \"include\": \"#numeric-constant\"\n      }, {\n        \"include\": \"#string-constant\"\n      }]\n    },\n    \"contiguous-attribute\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"storage.modifier.contigous.fortran\"\n        }\n      },\n      \"comment\": \"Introduced in the Fortran 2008 standard.\",\n      \"match\": \"(?i)\\\\G\\\\s*\\\\b(contiguous)\\\\b\"\n    },\n    \"continue-statement\": {\n      \"patterns\": [{\n        \"begin\": \"(?i)\\\\s*\\\\b(continue)\\\\b\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.continue.fortran\"\n          }\n        },\n        \"comment\": \"Introduced in the Fortran 1977 standard.\",\n        \"end\": \"(?=[;!\\\\n])\",\n        \"name\": \"meta.statement.control.continue.fortran\",\n        \"patterns\": [{\n          \"include\": \"#invalid-character\"\n        }]\n      }]\n    },\n    \"control-constructs\": {\n      \"patterns\": [{\n        \"include\": \"#named-control-constructs\"\n      }, {\n        \"include\": \"#unnamed-control-constructs\"\n      }]\n    },\n    \"control-statements\": {\n      \"comment\": \"Statements controlling the flow of the program\",\n      \"patterns\": [{\n        \"include\": \"#assign-statement\"\n      }, {\n        \"include\": \"#call-statement\"\n      }, {\n        \"include\": \"#continue-statement\"\n      }, {\n        \"include\": \"#cycle-statement\"\n      }, {\n        \"include\": \"#entry-statement\"\n      }, {\n        \"include\": \"#error-stop-statement\"\n      }, {\n        \"include\": \"#exit-statement\"\n      }, {\n        \"include\": \"#goto-statement\"\n      }, {\n        \"include\": \"#pause-statement\"\n      }, {\n        \"include\": \"#return-statement\"\n      }, {\n        \"include\": \"#stop-statement\"\n      }, {\n        \"include\": \"#where-statement\"\n      }, {\n        \"include\": \"#image-control-statement\"\n      }]\n    },\n    \"cpp-numeric-constant\": {\n      \"captures\": {\n        \"0\": {\n          \"patterns\": [{\n            \"begin\": \"(?=.)\",\n            \"beginCaptures\": {},\n            \"end\": \"$\",\n            \"endCaptures\": {},\n            \"patterns\": [{\n              \"captures\": {\n                \"1\": {\n                  \"name\": \"keyword.other.unit.hexadecimal.cpp\"\n                },\n                \"2\": {\n                  \"name\": \"constant.numeric.hexadecimal.cpp\",\n                  \"patterns\": [{\n                    \"match\": \"(?<=[0-9a-fA-F])'(?=[0-9a-fA-F])\",\n                    \"name\": \"punctuation.separator.constant.numeric.cpp\"\n                  }]\n                },\n                \"3\": {\n                  \"name\": \"punctuation.separator.constant.numeric.cpp\"\n                },\n                \"4\": {\n                  \"name\": \"constant.numeric.hexadecimal.cpp\"\n                },\n                \"5\": {\n                  \"name\": \"constant.numeric.hexadecimal.cpp\",\n                  \"patterns\": [{\n                    \"match\": \"(?<=[0-9a-fA-F])'(?=[0-9a-fA-F])\",\n                    \"name\": \"punctuation.separator.constant.numeric.cpp\"\n                  }]\n                },\n                \"6\": {\n                  \"name\": \"punctuation.separator.constant.numeric.cpp\"\n                },\n                \"7\": {\n                  \"name\": \"keyword.other.unit.exponent.hexadecimal.cpp\"\n                },\n                \"8\": {\n                  \"name\": \"keyword.operator.plus.exponent.hexadecimal.cpp\"\n                },\n                \"9\": {\n                  \"name\": \"keyword.operator.minus.exponent.hexadecimal.cpp\"\n                },\n                \"10\": {\n                  \"name\": \"constant.numeric.exponent.hexadecimal.cpp\",\n                  \"patterns\": [{\n                    \"match\": \"(?<=[0-9a-fA-F])'(?=[0-9a-fA-F])\",\n                    \"name\": \"punctuation.separator.constant.numeric.cpp\"\n                  }]\n                },\n                \"11\": {\n                  \"name\": \"keyword.other.unit.suffix.floating-point.cpp\"\n                },\n                \"12\": {\n                  \"name\": \"keyword.other.unit.user-defined.cpp\"\n                }\n              },\n              \"match\": \"(\\\\G0[xX])([0-9a-fA-F](?:[0-9a-fA-F]|((?<=[0-9a-fA-F])'(?=[0-9a-fA-F])))*)?((?:(?<=[0-9a-fA-F])\\\\.|\\\\.(?=[0-9a-fA-F])))([0-9a-fA-F](?:[0-9a-fA-F]|((?<=[0-9a-fA-F])'(?=[0-9a-fA-F])))*)?(?:(?<!')([pP])((?:\\\\+)?)((?:\\\\-)?)([0-9](?:[0-9]|(?<=[0-9a-fA-F])'(?=[0-9a-fA-F]))*))?([lLfF](?!\\\\w))?((?:\\\\w(?<![0-9a-fA-FpP])\\\\w*)?$)\"\n            }, {\n              \"captures\": {\n                \"1\": {\n                  \"name\": \"constant.numeric.decimal.cpp\",\n                  \"patterns\": [{\n                    \"match\": \"(?<=[0-9a-fA-F])'(?=[0-9a-fA-F])\",\n                    \"name\": \"punctuation.separator.constant.numeric.cpp\"\n                  }]\n                },\n                \"2\": {\n                  \"name\": \"punctuation.separator.constant.numeric.cpp\"\n                },\n                \"3\": {\n                  \"name\": \"constant.numeric.decimal.point.cpp\"\n                },\n                \"4\": {\n                  \"name\": \"constant.numeric.decimal.cpp\",\n                  \"patterns\": [{\n                    \"match\": \"(?<=[0-9a-fA-F])'(?=[0-9a-fA-F])\",\n                    \"name\": \"punctuation.separator.constant.numeric.cpp\"\n                  }]\n                },\n                \"5\": {\n                  \"name\": \"punctuation.separator.constant.numeric.cpp\"\n                },\n                \"6\": {\n                  \"name\": \"keyword.other.unit.exponent.decimal.cpp\"\n                },\n                \"7\": {\n                  \"name\": \"keyword.operator.plus.exponent.decimal.cpp\"\n                },\n                \"8\": {\n                  \"name\": \"keyword.operator.minus.exponent.decimal.cpp\"\n                },\n                \"9\": {\n                  \"name\": \"constant.numeric.exponent.decimal.cpp\",\n                  \"patterns\": [{\n                    \"match\": \"(?<=[0-9a-fA-F])'(?=[0-9a-fA-F])\",\n                    \"name\": \"punctuation.separator.constant.numeric.cpp\"\n                  }]\n                },\n                \"10\": {\n                  \"name\": \"keyword.other.unit.suffix.floating-point.cpp\"\n                },\n                \"11\": {\n                  \"name\": \"keyword.other.unit.user-defined.cpp\"\n                }\n              },\n              \"match\": \"\\\\G(?=[0-9.])(?!0[xXbB])([0-9](?:[0-9]|((?<=[0-9a-fA-F])'(?=[0-9a-fA-F])))*)?((?:(?<=[0-9])\\\\.|\\\\.(?=[0-9])))([0-9](?:[0-9]|((?<=[0-9a-fA-F])'(?=[0-9a-fA-F])))*)?(?:(?<!')([eE])((?:\\\\+)?)((?:\\\\-)?)([0-9](?:[0-9]|(?<=[0-9a-fA-F])'(?=[0-9a-fA-F]))*))?([lLfF](?!\\\\w))?((?:\\\\w(?<![0-9eE])\\\\w*)?$)\"\n            }, {\n              \"captures\": {\n                \"1\": {\n                  \"name\": \"keyword.other.unit.binary.cpp\"\n                },\n                \"2\": {\n                  \"name\": \"constant.numeric.binary.cpp\",\n                  \"patterns\": [{\n                    \"match\": \"(?<=[0-9a-fA-F])'(?=[0-9a-fA-F])\",\n                    \"name\": \"punctuation.separator.constant.numeric.cpp\"\n                  }]\n                },\n                \"3\": {\n                  \"name\": \"punctuation.separator.constant.numeric.cpp\"\n                },\n                \"4\": {\n                  \"name\": \"keyword.other.unit.suffix.integer.cpp\"\n                },\n                \"5\": {\n                  \"name\": \"keyword.other.unit.user-defined.cpp\"\n                }\n              },\n              \"match\": \"(\\\\G0[bB])([01](?:[01]|((?<=[0-9a-fA-F])'(?=[0-9a-fA-F])))*)((?:[uU]|(?:[uU]ll?)|(?:[uU]LL?)|(?:ll?[uU]?)|(?:LL?[uU]?)|[fF])(?!\\\\w))?((?:\\\\w(?<![0-9])\\\\w*)?$)\"\n            }, {\n              \"captures\": {\n                \"1\": {\n                  \"name\": \"keyword.other.unit.octal.cpp\"\n                },\n                \"2\": {\n                  \"name\": \"constant.numeric.octal.cpp\",\n                  \"patterns\": [{\n                    \"match\": \"(?<=[0-9a-fA-F])'(?=[0-9a-fA-F])\",\n                    \"name\": \"punctuation.separator.constant.numeric.cpp\"\n                  }]\n                },\n                \"3\": {\n                  \"name\": \"punctuation.separator.constant.numeric.cpp\"\n                },\n                \"4\": {\n                  \"name\": \"keyword.other.unit.suffix.integer.cpp\"\n                },\n                \"5\": {\n                  \"name\": \"keyword.other.unit.user-defined.cpp\"\n                }\n              },\n              \"match\": \"(\\\\G0)((?:[0-7]|((?<=[0-9a-fA-F])'(?=[0-9a-fA-F])))+)((?:[uU]|(?:[uU]ll?)|(?:[uU]LL?)|(?:ll?[uU]?)|(?:LL?[uU]?)|[fF])(?!\\\\w))?((?:\\\\w(?<![0-9])\\\\w*)?$)\"\n            }, {\n              \"captures\": {\n                \"1\": {\n                  \"name\": \"keyword.other.unit.hexadecimal.cpp\"\n                },\n                \"2\": {\n                  \"name\": \"constant.numeric.hexadecimal.cpp\",\n                  \"patterns\": [{\n                    \"match\": \"(?<=[0-9a-fA-F])'(?=[0-9a-fA-F])\",\n                    \"name\": \"punctuation.separator.constant.numeric.cpp\"\n                  }]\n                },\n                \"3\": {\n                  \"name\": \"punctuation.separator.constant.numeric.cpp\"\n                },\n                \"4\": {\n                  \"name\": \"keyword.other.unit.exponent.hexadecimal.cpp\"\n                },\n                \"5\": {\n                  \"name\": \"keyword.operator.plus.exponent.hexadecimal.cpp\"\n                },\n                \"6\": {\n                  \"name\": \"keyword.operator.minus.exponent.hexadecimal.cpp\"\n                },\n                \"7\": {\n                  \"name\": \"constant.numeric.exponent.hexadecimal.cpp\",\n                  \"patterns\": [{\n                    \"match\": \"(?<=[0-9a-fA-F])'(?=[0-9a-fA-F])\",\n                    \"name\": \"punctuation.separator.constant.numeric.cpp\"\n                  }]\n                },\n                \"8\": {\n                  \"name\": \"keyword.other.unit.suffix.integer.cpp\"\n                },\n                \"9\": {\n                  \"name\": \"keyword.other.unit.user-defined.cpp\"\n                }\n              },\n              \"match\": \"(\\\\G0[xX])([0-9a-fA-F](?:[0-9a-fA-F]|((?<=[0-9a-fA-F])'(?=[0-9a-fA-F])))*)(?:(?<!')([pP])((?:\\\\+)?)((?:\\\\-)?)([0-9](?:[0-9]|(?<=[0-9a-fA-F])'(?=[0-9a-fA-F]))*))?((?:[uU]|(?:[uU]ll?)|(?:[uU]LL?)|(?:ll?[uU]?)|(?:LL?[uU]?)|[fF])(?!\\\\w))?((?:\\\\w(?<![0-9a-fA-FpP])\\\\w*)?$)\"\n            }, {\n              \"captures\": {\n                \"1\": {\n                  \"name\": \"constant.numeric.decimal.cpp\",\n                  \"patterns\": [{\n                    \"match\": \"(?<=[0-9a-fA-F])'(?=[0-9a-fA-F])\",\n                    \"name\": \"punctuation.separator.constant.numeric.cpp\"\n                  }]\n                },\n                \"2\": {\n                  \"name\": \"punctuation.separator.constant.numeric.cpp\"\n                },\n                \"3\": {\n                  \"name\": \"keyword.other.unit.exponent.decimal.cpp\"\n                },\n                \"4\": {\n                  \"name\": \"keyword.operator.plus.exponent.decimal.cpp\"\n                },\n                \"5\": {\n                  \"name\": \"keyword.operator.minus.exponent.decimal.cpp\"\n                },\n                \"6\": {\n                  \"name\": \"constant.numeric.exponent.decimal.cpp\",\n                  \"patterns\": [{\n                    \"match\": \"(?<=[0-9a-fA-F])'(?=[0-9a-fA-F])\",\n                    \"name\": \"punctuation.separator.constant.numeric.cpp\"\n                  }]\n                },\n                \"7\": {\n                  \"name\": \"keyword.other.unit.suffix.integer.cpp\"\n                },\n                \"8\": {\n                  \"name\": \"keyword.other.unit.user-defined.cpp\"\n                }\n              },\n              \"match\": \"\\\\G(?=[0-9.])(?!0[xXbB])([0-9](?:[0-9]|((?<=[0-9a-fA-F])'(?=[0-9a-fA-F])))*)(?:(?<!')([eE])((?:\\\\+)?)((?:\\\\-)?)([0-9](?:[0-9]|(?<=[0-9a-fA-F])'(?=[0-9a-fA-F]))*))?((?:[uU]|(?:[uU]ll?)|(?:[uU]LL?)|(?:ll?[uU]?)|(?:LL?[uU]?)|[fF])(?!\\\\w))?((?:\\\\w(?<![0-9eE])\\\\w*)?$)\"\n            }, {\n              \"match\": \"(?:(?:[0-9a-zA-Z_\\\\.]|')|(?<=[eEpP])[+-])+\",\n              \"name\": \"invalid.illegal.constant.numeric.cpp\"\n            }]\n          }]\n        }\n      },\n      \"match\": \"(?<!\\\\w)\\\\.?\\\\d(?:(?:[0-9a-zA-Z_\\\\.]|')|(?<=[eEpP])[+-])*\"\n    },\n    \"critical-construct\": {\n      \"begin\": \"(?i)\\\\b(critical)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.associate.fortran\"\n        }\n      },\n      \"comment\": \"Introduced in the Fortran 2008 standard.\",\n      \"contentName\": \"meta.block.critical.fortran\",\n      \"end\": \"(?i)\\\\b(end\\\\s*critical)\\\\b\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.endassociate.fortran\"\n        }\n      },\n      \"patterns\": [{\n        \"include\": \"$base\"\n      }]\n    },\n    \"cycle-statement\": {\n      \"patterns\": [{\n        \"begin\": \"(?i)\\\\s*\\\\b(cycle)\\\\b\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.cycle.fortran\"\n          }\n        },\n        \"comment\": \"Introduced in the Fortran 1990 standard.\",\n        \"end\": \"(?=[;!\\\\n])\",\n        \"name\": \"meta.statement.control.fortran\",\n        \"patterns\": []\n      }]\n    },\n    \"data-statement\": {\n      \"begin\": \"(?i)\\\\b(data)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.data.fortran\"\n        }\n      },\n      \"end\": \"(?=[;!\\\\n])\",\n      \"patterns\": [{\n        \"include\": \"$base\"\n      }]\n    },\n    \"deallocate-statement\": {\n      \"begin\": \"(?i)\\\\b(deallocate)\\\\s*(?=\\\\()\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.deallocate.fortran\"\n        },\n        \"2\": {\n          \"name\": \"punctuation.parentheses.left.fortran\"\n        }\n      },\n      \"comment\": \"Introduced in the Fortran 1990 standard.\",\n      \"end\": \"(?<!\\\\G)\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.parentheses.right.fortran\"\n        }\n      },\n      \"name\": \"meta.statement.deallocate.fortran\",\n      \"patterns\": [{\n        \"include\": \"#parentheses-dummy-variables\"\n      }]\n    },\n    \"deferred-attribute\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"storage.modifier.deferred.fortran\"\n        }\n      },\n      \"comment\": \"Introduced in the Fortran 2003 standard.\",\n      \"match\": \"(?i)\\\\s*\\\\b(deferred)\\\\b\"\n    },\n    \"derived-type\": {\n      \"begin\": \"(?i)\\\\b(?:(class)|(type))\\\\s*(\\\\()\\\\s*(([a-z]\\\\w*)|\\\\*)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"storage.type.class.fortran\"\n        },\n        \"2\": {\n          \"name\": \"storage.type.type.fortran\"\n        },\n        \"3\": {\n          \"name\": \"punctuation.parentheses.left.fortran\"\n        },\n        \"4\": {\n          \"name\": \"entity.name.type.fortran\"\n        }\n      },\n      \"comment\": \"Introduced in the Fortran 1995 standard.\",\n      \"contentName\": \"meta.type-spec.fortran\",\n      \"end\": \"(\\\\))\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.parentheses.right.fortran\"\n        }\n      },\n      \"name\": \"meta.specification.type.derived.fortran\",\n      \"patterns\": [{\n        \"include\": \"#parentheses-dummy-variables\"\n      }]\n    },\n    \"derived-type-component-attribute-specification\": {\n      \"begin\": \"(?i)(?=\\\\s*\\\\b(?:private|sequence)\\\\b)\",\n      \"comment\": \"Introduced in the Fortran 1995 standard.\",\n      \"end\": \"(?=[;!\\\\n])\",\n      \"name\": \"meta.statement.attribute-specification.fortran\",\n      \"patterns\": [{\n        \"include\": \"#access-attribute\"\n      }, {\n        \"include\": \"#sequence-attribute\"\n      }, {\n        \"include\": \"#invalid-character\"\n      }]\n    },\n    \"derived-type-component-parameter-specification\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"storage.type.integer.fortran\"\n        },\n        \"2\": {\n          \"name\": \"punctuation.comma.fortran\"\n        },\n        \"3\": {\n          \"name\": \"keyword.other.attribute.derived-type.parameter.fortran\"\n        },\n        \"4\": {\n          \"name\": \"keyword.operator.double-colon.fortran\"\n        },\n        \"5\": {\n          \"name\": \"entity.name.derived-type.parameter.fortran\"\n        }\n      },\n      \"comment\": \"Derived type parameter.\",\n      \"match\": \"(?ix)\\\\b(integer)\\\\s*(,)\\\\s*(kind|len)\\\\s*(?:(::)\\\\s*([a-z]\\\\w*)?)?\\\\s*(?=[;!\\\\n])\"\n    },\n    \"derived-type-component-procedure-specification\": {\n      \"begin\": \"(?i)(?=\\\\b(?:procedure)\\\\b)\",\n      \"comment\": \"Introduced in the Fortran 2003 standard.\",\n      \"end\": \"(?=[;!\\\\n])\",\n      \"name\": \"meta.specification.procedure.fortran\",\n      \"patterns\": [{\n        \"include\": \"#procedure-type\"\n      }, {\n        \"begin\": \"(?=\\\\s*(,|::|\\\\())\",\n        \"comment\": \"Attribute list.\",\n        \"contentName\": \"meta.attribute-list.derived-type-component-procedure.fortran\",\n        \"end\": \"(::)|(?=[;!\\\\n])\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.operator.double-colon.fortran\"\n          }\n        },\n        \"patterns\": [{\n          \"begin\": \"(,)\",\n          \"beginCaptures\": {\n            \"1\": {\n              \"name\": \"punctuation.comma.fortran\"\n            }\n          },\n          \"end\": \"(?=::|[,;!\\\\n])\",\n          \"patterns\": [{\n            \"include\": \"#access-attribute\"\n          }, {\n            \"include\": \"#pass-attribute\"\n          }, {\n            \"include\": \"#nopass-attribute\"\n          }, {\n            \"include\": \"#invalid-word\"\n          }, {\n            \"include\": \"#pointer-attribute\"\n          }]\n        }]\n      }, {\n        \"include\": \"#procedure-name-list\"\n      }]\n    },\n    \"derived-type-component-type-specification\": {\n      \"begin\": `(?ix)(?=\\\\b(?:character|class|complex|double\\\\s*precision|double\\\\s*complex|integer|logical|real|type)\\\\b(?![^:'\";!\\\\n]*\\\\bfunction\\\\b))`,\n      \"comment\": \"Introduced in the Fortran 1995 standard.\",\n      \"end\": \"(?=[;!\\\\n])\",\n      \"name\": \"meta.specification.derived-type.fortran\",\n      \"patterns\": [{\n        \"include\": \"#types\"\n      }, {\n        \"include\": \"#line-continuation-operator\"\n      }, {\n        \"begin\": \"(?=\\\\s*(,|::))\",\n        \"comment\": \"Attribute list.\",\n        \"contentName\": \"meta.attribute-list.derived-type-component-type.fortran\",\n        \"end\": \"(::)|(?=[;!\\\\n])\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.operator.double-colon.fortran\"\n          }\n        },\n        \"patterns\": [{\n          \"begin\": \"(,)\",\n          \"beginCaptures\": {\n            \"1\": {\n              \"name\": \"punctuation.comma.fortran\"\n            }\n          },\n          \"end\": \"(?=::|[,;!\\\\n])\",\n          \"patterns\": [{\n            \"include\": \"#access-attribute\"\n          }, {\n            \"include\": \"#allocatable-attribute\"\n          }, {\n            \"include\": \"#codimension-attribute\"\n          }, {\n            \"include\": \"#contiguous-attribute\"\n          }, {\n            \"include\": \"#dimension-attribute\"\n          }, {\n            \"include\": \"#pointer-attribute\"\n          }, {\n            \"include\": \"#invalid-word\"\n          }]\n        }]\n      }, {\n        \"include\": \"#name-list\"\n      }]\n    },\n    \"derived-type-contains-attribute-specification\": {\n      \"begin\": \"(?i)(?=\\\\b(?:private)\\\\b)\",\n      \"comment\": \"Introduced in the Fortran 1995 standard.\",\n      \"end\": \"(?=[;!\\\\n])\",\n      \"name\": \"meta.statement.attribute-specification.fortran\",\n      \"patterns\": [{\n        \"include\": \"#access-attribute\"\n      }, {\n        \"include\": \"#invalid-character\"\n      }]\n    },\n    \"derived-type-contains-final-procedure-specification\": {\n      \"begin\": \"(?i)\\\\b(final)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"storage.type.final-procedure.fortran\"\n        }\n      },\n      \"comment\": \"Introduced in the Fortran 2003 standard.\",\n      \"end\": \"(?=[;!\\\\n])\",\n      \"name\": \"meta.specification.procedure.final.fortran\",\n      \"patterns\": [{\n        \"begin\": \"(?=\\\\s*(::))\",\n        \"comment\": \"Attribute list.\",\n        \"end\": \"(::)|(?=[;!\\\\n])\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.operator.double-colon.fortran\"\n          }\n        },\n        \"name\": \"meta.attribute-list.derived-type-contains-final-procedure.fortran\",\n        \"patterns\": [{\n          \"include\": \"#invalid-word\"\n        }]\n      }, {\n        \"include\": \"#procedure-name\"\n      }]\n    },\n    \"derived-type-contains-generic-procedure-specification\": {\n      \"begin\": \"(?i)\\\\b(generic)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"storage.type.procedure.generic.fortran\"\n        }\n      },\n      \"comment\": \"Introduced in the Fortran 2003 standard.\",\n      \"end\": \"(?=[;!\\\\n])\",\n      \"name\": \"meta.specification.procedure.generic.fortran\",\n      \"patterns\": [{\n        \"begin\": \"(?=\\\\s*(,|::|\\\\())\",\n        \"comment\": \"Attribute list.\",\n        \"contentName\": \"meta.attribute-list.derived-type-contains-generic-procedure.fortran\",\n        \"end\": \"(::)|(?=[;!\\\\n])\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.operator.double-colon.fortran\"\n          }\n        },\n        \"patterns\": [{\n          \"begin\": \"(,)|^|(?<=&)\",\n          \"beginCaptures\": {\n            \"1\": {\n              \"name\": \"punctuation.comma.fortran\"\n            }\n          },\n          \"end\": \"(?=::|[,&;!\\\\n])\",\n          \"patterns\": [{\n            \"include\": \"#access-attribute\"\n          }, {\n            \"include\": \"#invalid-word\"\n          }]\n        }]\n      }, {\n        \"begin\": \"(?=\\\\s*[a-z])\",\n        \"comment\": \"Name list.\",\n        \"contentName\": \"meta.name-list.fortran\",\n        \"end\": \"(?=[;!\\\\n])\",\n        \"patterns\": [{\n          \"include\": \"#IO-keywords\"\n        }, {\n          \"include\": \"#assignment-keyword\"\n        }, {\n          \"include\": \"#operator-keyword\"\n        }, {\n          \"include\": \"#procedure-name\"\n        }, {\n          \"include\": \"#pointer-operators\"\n        }]\n      }]\n    },\n    \"derived-type-contains-procedure-specification\": {\n      \"begin\": \"(?i)(?=\\\\b(?:procedure)\\\\b)\",\n      \"comment\": \"Introduced in the Fortran 2003 standard.\",\n      \"end\": \"(?=[;!\\\\n])\",\n      \"name\": \"meta.specification.procedure.fortran\",\n      \"patterns\": [{\n        \"include\": \"#procedure-type\"\n      }, {\n        \"begin\": \"(?=\\\\s*(,|::|\\\\())\",\n        \"comment\": \"Attribute list.\",\n        \"contentName\": \"meta.attribute-list.derived-type-contains-procedure.fortran\",\n        \"end\": \"(::)|(?=[;!\\\\n])\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.operator.double-colon.fortran\"\n          }\n        },\n        \"patterns\": [{\n          \"begin\": \"(,)|^|(?<=&)\",\n          \"beginCaptures\": {\n            \"1\": {\n              \"name\": \"punctuation.comma.fortran\"\n            }\n          },\n          \"end\": \"(?=::|[,&;!\\\\n])\",\n          \"name\": \"meta.something.fortran\",\n          \"patterns\": [{\n            \"include\": \"#access-attribute\"\n          }, {\n            \"include\": \"#deferred-attribute\"\n          }, {\n            \"include\": \"#non-overridable-attribute\"\n          }, {\n            \"include\": \"#nopass-attribute\"\n          }, {\n            \"include\": \"#pass-attribute\"\n          }, {\n            \"include\": \"#invalid-word\"\n          }]\n        }]\n      }, {\n        \"include\": \"#procedure-name-list\"\n      }]\n    },\n    \"derived-type-definition\": {\n      \"begin\": \"(?i)\\\\b(type)\\\\b(?!\\\\s*(\\\\(|is\\\\b|\\\\=))\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.type.fortran\"\n        }\n      },\n      \"end\": \"(?=[;!\\\\n])\",\n      \"name\": \"meta.derived-type.definition.fortran\",\n      \"patterns\": [{\n        \"begin\": \"\\\\G(?=\\\\s*(,|::))\",\n        \"comment\": \"Attribute list.\",\n        \"contentName\": \"meta.attribute-list.derived-type.fortran\",\n        \"end\": \"(::)|(?=[;!\\\\n])\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.operator.double-colon.fortran\"\n          }\n        },\n        \"patterns\": [{\n          \"begin\": \"(,)\",\n          \"beginCaptures\": {\n            \"1\": {\n              \"name\": \"punctuation.comma.fortran\"\n            }\n          },\n          \"end\": \"(?=::|[,;!\\\\n])\",\n          \"patterns\": [{\n            \"include\": \"#access-attribute\"\n          }, {\n            \"include\": \"#abstract-attribute\"\n          }, {\n            \"include\": \"#language-binding-attribute\"\n          }, {\n            \"include\": \"#extends-attribute\"\n          }, {\n            \"include\": \"#invalid-word\"\n          }]\n        }]\n      }, {\n        \"begin\": \"(?i)\\\\s*\\\\b([a-z]\\\\w*)\\\\b\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"entity.name.type.fortran\"\n          }\n        },\n        \"end\": \"(?i)(?:^|(?<=;))\\\\s*(end\\\\s*type)(?:\\\\s+(?:(\\\\1)|(\\\\w+)))?\\\\b\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.endtype.fortran\"\n          },\n          \"2\": {\n            \"name\": \"entity.name.type.fortran\"\n          },\n          \"3\": {\n            \"name\": \"invalid.error.derived-type.fortran\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#dummy-variable-list\"\n        }, {\n          \"include\": \"#comments\"\n        }, {\n          \"begin\": \"(?i)^(?!\\\\s*\\\\b(?:contains|end\\\\s*type)\\\\b)\",\n          \"comment\": \"Derived type specification block.\",\n          \"end\": \"(?i)^(?=\\\\s*\\\\b(?:contains|end\\\\s*type)\\\\b)\",\n          \"name\": \"meta.block.specification.derived-type.fortran\",\n          \"patterns\": [{\n            \"include\": \"#comments\"\n          }, {\n            \"include\": \"#derived-type-component-attribute-specification\"\n          }, {\n            \"include\": \"#derived-type-component-parameter-specification\"\n          }, {\n            \"include\": \"#derived-type-component-procedure-specification\"\n          }, {\n            \"include\": \"#derived-type-component-type-specification\"\n          }]\n        }, {\n          \"begin\": \"(?i)\\\\b(contains)\\\\b\",\n          \"beginCaptures\": {\n            \"1\": {\n              \"name\": \"keyword.control.contains.fortran\"\n            }\n          },\n          \"comment\": \"Derived type contains block.\",\n          \"end\": \"(?i)(?=\\\\s*end\\\\s*type\\\\b)\",\n          \"name\": \"meta.block.contains.fortran\",\n          \"patterns\": [{\n            \"include\": \"#comments\"\n          }, {\n            \"include\": \"#derived-type-contains-attribute-specification\"\n          }, {\n            \"include\": \"#derived-type-contains-final-procedure-specification\"\n          }, {\n            \"include\": \"#derived-type-contains-generic-procedure-specification\"\n          }, {\n            \"include\": \"#derived-type-contains-procedure-specification\"\n          }]\n        }]\n      }]\n    },\n    \"derived-type-operators\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"keyword.other.selector.fortran\"\n        }\n      },\n      \"comment\": \"Introduced in the Fortran 1995 standard.\",\n      \"match\": \"\\\\s*(\\\\%)\"\n    },\n    \"dimension-attribute\": {\n      \"begin\": \"(?i)\\\\s*\\\\b(dimension)(?=\\\\s*\\\\()\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"storage.modifier.dimension.fortran\"\n        }\n      },\n      \"comment\": \"Introduced in the Fortran 1977 standard.\",\n      \"end\": \"(?<!\\\\G)\",\n      \"patterns\": [{\n        \"include\": \"#parentheses-dummy-variables\"\n      }]\n    },\n    \"do-construct\": {\n      \"patterns\": [{\n        \"captures\": {\n          \"1\": {\n            \"name\": \"keyword.control.enddo.fortran\"\n          }\n        },\n        \"match\": \"(?i)\\\\b(end\\\\s*do)\\\\b\"\n      }, {\n        \"begin\": \"(?i)\\\\b(do)\\\\s+(\\\\d{1,5})\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.do.fortran\"\n          },\n          \"2\": {\n            \"name\": \"constant.numeric.fortran\"\n          }\n        },\n        \"comment\": \"Introduced in the Fortran 1977 standard.\",\n        \"end\": \"(?i)(?:^|(?<=;))(?=\\\\s*\\\\b\\\\2\\\\b)\",\n        \"name\": \"meta.do.labeled.fortran\",\n        \"patterns\": [{\n          \"begin\": \"(?i)\\\\G(?:\\\\s*(,)|(?!\\\\s*[;!\\\\n]))\",\n          \"beginCaptures\": {\n            \"1\": {\n              \"name\": \"punctuation.comma.fortran\"\n            }\n          },\n          \"comment\": \"Loop control.\",\n          \"end\": \"(?=[;!\\\\n])\",\n          \"patterns\": [{\n            \"include\": \"#concurrent-attribute\"\n          }, {\n            \"include\": \"#while-attribute\"\n          }, {\n            \"include\": \"$base\"\n          }]\n        }, {\n          \"include\": \"$base\"\n        }]\n      }, {\n        \"begin\": \"(?i)\\\\b(do)\\\\b\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.do.fortran\"\n          }\n        },\n        \"comment\": \"Introduced in the Fortran 1995 standard.\",\n        \"end\": \"(?i)\\\\b(?:(continue)|(end\\\\s*do))\\\\b\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.continue.fortran\"\n          },\n          \"2\": {\n            \"name\": \"keyword.control.enddo.fortran\"\n          }\n        },\n        \"name\": \"meta.block.do.unlabeled.fortran\",\n        \"patterns\": [{\n          \"begin\": \"(?i)\\\\G(?:\\\\s*(,)|(?!\\\\s*[;!\\\\n]))\",\n          \"beginCaptures\": {\n            \"1\": {\n              \"name\": \"punctuation.comma.fortran\"\n            }\n          },\n          \"comment\": \"Loop control.\",\n          \"end\": \"(?=[;!\\\\n])\",\n          \"name\": \"meta.loop-control.fortran\",\n          \"patterns\": [{\n            \"include\": \"#concurrent-attribute\"\n          }, {\n            \"include\": \"#while-attribute\"\n          }, {\n            \"include\": \"$base\"\n          }]\n        }, {\n          \"begin\": \"(?i)(?!\\\\s*\\\\b(continue|end\\\\s*do)\\\\b)\",\n          \"comment\": \"Loop body.\",\n          \"end\": \"(?i)(?=\\\\s*\\\\b(continue|end\\\\s*do)\\\\b)\",\n          \"patterns\": [{\n            \"include\": \"$base\"\n          }]\n        }]\n      }]\n    },\n    \"dummy-variable\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"variable.parameter.fortran\"\n        }\n      },\n      \"comment\": \"dummy variable\",\n      \"match\": \"(?i)(?:^|(?<=[&,\\\\(]))\\\\s*([a-z]\\\\w*)\"\n    },\n    \"dummy-variable-list\": {\n      \"begin\": \"\\\\G\\\\s*(\\\\()\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.definition.parameters.begin.fortran\"\n        }\n      },\n      \"end\": \"\\\\)|(?=\\\\n)\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.parameters.end.fortran\"\n        }\n      },\n      \"name\": \"meta.dummy-variable-list\",\n      \"patterns\": [{\n        \"include\": \"#dummy-variable\"\n      }]\n    },\n    \"elemental-attribute\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"storage.modifier.elemental.fortran\"\n        }\n      },\n      \"comment\": \"Introduced in the Fortran 1990 standard.\",\n      \"match\": \"(?i)\\\\s*\\\\b(elemental)\\\\b\"\n    },\n    \"entry-statement\": {\n      \"patterns\": [{\n        \"begin\": \"(?i)\\\\s*\\\\b(entry)\\\\b\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.entry.fortran\"\n          }\n        },\n        \"comment\": \"Introduced in the Fortran 1977 standard.\",\n        \"end\": \"(?=[;!\\\\n])\",\n        \"name\": \"meta.statement.control.entry.fortran\",\n        \"patterns\": [{\n          \"begin\": \"(?i)\\\\s*\\\\b([a-z]\\\\w*)\\\\b\",\n          \"beginCaptures\": {\n            \"1\": {\n              \"name\": \"entity.name.function.entry.fortran\"\n            }\n          },\n          \"end\": \"(?=[;!\\\\n])\",\n          \"patterns\": [{\n            \"include\": \"#dummy-variable-list\"\n          }, {\n            \"include\": \"#result-statement\"\n          }, {\n            \"include\": \"#language-binding-attribute\"\n          }]\n        }]\n      }]\n    },\n    \"enum-block-construct\": {\n      \"begin\": \"(?i)\\\\b(enum)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.enum.fortran\"\n        }\n      },\n      \"comment\": \"Introduced in the Fortran 2003 standard.\",\n      \"end\": \"(?i)\\\\b(end\\\\s*enum)\\\\b\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.end-enum.fortran\"\n        }\n      },\n      \"name\": \"meta.enum.fortran\",\n      \"patterns\": [{\n        \"begin\": \"\\\\G\\\\s*(,)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.comma.fortran\"\n          }\n        },\n        \"end\": \"(?=[;!\\\\n])\",\n        \"patterns\": [{\n          \"include\": \"#language-binding-attribute\"\n        }, {\n          \"include\": \"#invalid-word\"\n        }]\n      }, {\n        \"begin\": \"(?i)(?!\\\\s*\\\\b(end\\\\s*enum)\\\\b)\",\n        \"end\": \"(?i)(?=\\\\b(end\\\\s*enum)\\\\b)\",\n        \"name\": \"meta.block.specification.enum.fortran\",\n        \"patterns\": [{\n          \"include\": \"#comments\"\n        }, {\n          \"begin\": \"(?ix)\\\\b(enumerator)\\\\b\",\n          \"beginCaptures\": {\n            \"1\": {\n              \"name\": \"keyword.other.enumerator.fortran\"\n            }\n          },\n          \"end\": \"(?=[;!\\\\n])\",\n          \"name\": \"meta.statement.enumerator-specification.fortran\",\n          \"patterns\": [{\n            \"begin\": \"(?=\\\\s*(,|::))\",\n            \"comment\": \"Attribute list.\",\n            \"contentName\": \"meta.attribute-list.enum.fortran\",\n            \"end\": \"(::)|(?=[;!\\\\n])\",\n            \"endCaptures\": {\n              \"1\": {\n                \"name\": \"keyword.operator.double-colon.fortran\"\n              }\n            },\n            \"patterns\": [{\n              \"include\": \"#invalid-word\"\n            }]\n          }, {\n            \"include\": \"#comments\"\n          }, {\n            \"include\": \"#name-list\"\n          }]\n        }]\n      }]\n    },\n    \"equivalence-statement\": {\n      \"begin\": \"(?i)\\\\b(equivalence)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.common.fortran\"\n        }\n      },\n      \"end\": \"(?=[;!\\\\n])\",\n      \"patterns\": [{\n        \"begin\": \"(?:\\\\G|(,))\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"puntuation.comma.fortran\"\n          }\n        },\n        \"end\": \"(?=[,;!\\\\n])\",\n        \"patterns\": [{\n          \"include\": \"#parentheses-dummy-variables\"\n        }]\n      }]\n    },\n    \"error-stop-statement\": {\n      \"begin\": \"(?i)\\\\s*\\\\b(error\\\\s+stop)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.errorstop.fortran\"\n        }\n      },\n      \"comment\": \"Introduced in the Fortran 2008 standard.\",\n      \"end\": \"(?=[;!\\\\n])\",\n      \"name\": \"meta.statement.control.errorstop.fortran\",\n      \"patterns\": [{\n        \"include\": \"#constants\"\n      }, {\n        \"include\": \"#string-operators\"\n      }, {\n        \"include\": \"#variable\"\n      }, {\n        \"include\": \"#invalid-character\"\n      }]\n    },\n    \"event-statement\": {\n      \"begin\": \"(?i)\\\\b(event post|event wait)\\\\s*(?=\\\\()\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.event.fortran\"\n        },\n        \"2\": {\n          \"name\": \"punctuation.parentheses.left.fortran\"\n        }\n      },\n      \"comment\": \"Introduced in the Fortran 2018 standard.\",\n      \"end\": \"(?<!\\\\G)\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.parentheses.right.fortran\"\n        }\n      },\n      \"name\": \"meta.statement.event.fortran\",\n      \"patterns\": [{\n        \"include\": \"#parentheses-dummy-variables\"\n      }]\n    },\n    \"execution-statements\": {\n      \"patterns\": [{\n        \"include\": \"#allocate-statement\"\n      }, {\n        \"include\": \"#deallocate-statement\"\n      }, {\n        \"include\": \"#IO-statements\"\n      }, {\n        \"include\": \"#nullify-statement\"\n      }]\n    },\n    \"exit-statement\": {\n      \"begin\": \"(?i)\\\\s*\\\\b(exit)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.exit.fortran\"\n        }\n      },\n      \"comment\": \"Introduced in the Fortran 1990 standard.\",\n      \"end\": \"(?=[;!\\\\n])\",\n      \"name\": \"meta.statement.control.exit.fortran\",\n      \"patterns\": []\n    },\n    \"explicit-interface-block-construct\": {\n      \"begin\": \"(?i)\\\\b(interface)\\\\b(?=\\\\s*[;!\\\\n])\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.interface.fortran\"\n        }\n      },\n      \"comment\": \"Introduced in the Fortran 1990 standard.\",\n      \"end\": \"(?i)\\\\b(end\\\\s*interface)\\\\b\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.endinterface.fortran.modern\"\n        }\n      },\n      \"name\": \"meta.interface.explicit.fortran\",\n      \"patterns\": [{\n        \"include\": \"$base\"\n      }]\n    },\n    \"extends-attribute\": {\n      \"begin\": \"(?i)\\\\s*\\\\b(extends)\\\\s*\\\\(\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"storage.modifier.extends.fortran\"\n        }\n      },\n      \"end\": \"(?:\\\\)|(?=\\\\n))\",\n      \"patterns\": [{\n        \"match\": \"(?i)\\\\s*\\\\b([a-z]\\\\w*)\\\\b\",\n        \"name\": \"entity.name.type.fortran\"\n      }]\n    },\n    \"external-attribute\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"storage.modifier.external.fortran\"\n        }\n      },\n      \"comment\": \"Introduced in the Fortran 1977 standard.\",\n      \"match\": \"(?i)\\\\s*\\\\b(external)\\\\b\"\n    },\n    \"fail-image-statement\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"keyword.control.fail-image.fortran\"\n        }\n      },\n      \"comment\": \"Introduced in the Fortran 2018 standard.\",\n      \"match\": \"\\\\b(fail image)\\\\b\",\n      \"name\": \"meta.statement.fail-image.fortran\"\n    },\n    \"forall-construct\": {\n      \"applyEndPatternLast\": 1,\n      \"begin\": \"(?i)\\\\b(forall)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.forall.fortran\"\n        }\n      },\n      \"comment\": \"Introduced in the Fortran 1995 standard.\",\n      \"end\": \"(?<!\\\\G)\",\n      \"patterns\": [{\n        \"begin\": \"(?i)\\\\G(?!\\\\s*[;!\\\\n])\",\n        \"comment\": \"Loop control.\",\n        \"end\": \"(?<!\\\\G)\",\n        \"name\": \"meta.loop-control.fortran\",\n        \"patterns\": [{\n          \"include\": \"#parentheses\"\n        }, {\n          \"include\": \"#invalid-word\"\n        }]\n      }, {\n        \"begin\": \"(?<=\\\\))(?=\\\\s*[;!\\\\n])\",\n        \"end\": \"(?i)\\\\b(end\\\\s*forall)\\\\b\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.endforall.fortran\"\n          }\n        },\n        \"name\": \"meta.block.forall.fortran\",\n        \"patterns\": [{\n          \"include\": \"$base\"\n        }]\n      }, {\n        \"begin\": \"(?i)(?<=\\\\))(?!\\\\s*[;!\\\\n])\",\n        \"end\": \"\\\\n\",\n        \"name\": \"meta.statement.control.forall.fortran\",\n        \"patterns\": [{\n          \"include\": \"$base\"\n        }]\n      }]\n    },\n    \"form-team-statement\": {\n      \"begin\": \"(?i)\\\\b(form team)\\\\s*(?=\\\\()\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.form-team.fortran\"\n        },\n        \"2\": {\n          \"name\": \"punctuation.parentheses.left.fortran\"\n        }\n      },\n      \"comment\": \"Introduced in the Fortran 2018 standard.\",\n      \"end\": \"(?<!\\\\G)\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.parentheses.right.fortran\"\n        }\n      },\n      \"name\": \"meta.statement.form-team.fortran\",\n      \"patterns\": [{\n        \"include\": \"#parentheses-dummy-variables\"\n      }]\n    },\n    \"function-definition\": {\n      \"begin\": `(?i)(?=([^:'\";!\\\\n](?!\\\\bend)(?!\\\\bsubroutine\\\\b))*\\\\bfunction\\\\b)`,\n      \"comment\": \"Function program unit. Introduced in the Fortran 1977 standard.\",\n      \"end\": \"(?=[;!\\\\n])\",\n      \"name\": \"meta.function.fortran\",\n      \"patterns\": [{\n        \"begin\": \"(?i)(?=\\\\G\\\\s*(?!\\\\bfunction\\\\b))\",\n        \"comment\": \"Function attribute list.\",\n        \"end\": \"(?i)(?=\\\\bfunction\\\\b)\",\n        \"name\": \"meta.attribute-list.function.fortran\",\n        \"patterns\": [{\n          \"include\": \"#elemental-attribute\"\n        }, {\n          \"include\": \"#module-attribute\"\n        }, {\n          \"include\": \"#pure-attribute\"\n        }, {\n          \"include\": \"#recursive-attribute\"\n        }, {\n          \"include\": \"#types\"\n        }, {\n          \"include\": \"#invalid-word\"\n        }]\n      }, {\n        \"begin\": \"(?i)\\\\b(function)\\\\b\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.other.function.fortran\"\n          }\n        },\n        \"comment\": \"Captures the function keyword\",\n        \"end\": \"(?=[;!\\\\n])\",\n        \"patterns\": [{\n          \"begin\": \"(?i)\\\\G\\\\s*\\\\b([a-z]\\\\w*)\\\\b\",\n          \"beginCaptures\": {\n            \"1\": {\n              \"name\": \"entity.name.function.fortran\"\n            }\n          },\n          \"comment\": \"Function body.\",\n          \"end\": \"(?ix)\\\\s*\\\\b(?:(end\\\\s*function)(?:\\\\s+([a-z_]\\\\w*))?|(end))\\\\b \\\\s*([^;!\\\\n]+)?(?=[;!\\\\n])\",\n          \"endCaptures\": {\n            \"1\": {\n              \"name\": \"keyword.other.endfunction.fortran\"\n            },\n            \"2\": {\n              \"name\": \"entity.name.function.fortran\"\n            },\n            \"3\": {\n              \"name\": \"keyword.other.endfunction.fortran\"\n            },\n            \"4\": {\n              \"name\": \"invalid.error.function.fortran\"\n            }\n          },\n          \"patterns\": [{\n            \"begin\": \"\\\\G(?!\\\\s*[;!\\\\n])\",\n            \"comment\": \"Rest of the first line in function construct.\",\n            \"end\": \"(?=[;!\\\\n])\",\n            \"name\": \"meta.function.first-line.fortran\",\n            \"patterns\": [{\n              \"include\": \"#dummy-variable-list\"\n            }, {\n              \"include\": \"#result-statement\"\n            }, {\n              \"include\": \"#language-binding-attribute\"\n            }]\n          }, {\n            \"begin\": \"(?i)(?!\\\\b(?:end\\\\s*[;!\\\\n]|end\\\\s*function\\\\b))\",\n            \"comment\": \"Specification and execution block.\",\n            \"end\": \"(?i)(?=\\\\b(?:end\\\\s*[;!\\\\n]|end\\\\s*function\\\\b))\",\n            \"name\": \"meta.block.specification.function.fortran\",\n            \"patterns\": [{\n              \"begin\": \"(?i)\\\\b(contains)\\\\b\",\n              \"beginCaptures\": {\n                \"1\": {\n                  \"name\": \"keyword.control.contains.fortran\"\n                }\n              },\n              \"comment\": \"Contains block.\",\n              \"end\": \"(?i)(?=(?:end\\\\s*[;!\\\\n]|end\\\\s*function\\\\b))\",\n              \"name\": \"meta.block.contains.fortran\",\n              \"patterns\": [{\n                \"include\": \"$base\"\n              }]\n            }, {\n              \"include\": \"$base\"\n            }]\n          }]\n        }]\n      }]\n    },\n    \"generic-interface-block-construct\": {\n      \"begin\": \"(?i)\\\\b(interface)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.interface.fortran\"\n        }\n      },\n      \"comment\": \"Introduced in the Fortran 1990 standard.\",\n      \"end\": \"(?=[;!\\\\n])\",\n      \"name\": \"meta.interface.generic.fortran\",\n      \"patterns\": [{\n        \"begin\": \"(?ix)\\\\G\\\\s*\\\\b(assignment)\\\\s* (\\\\()\\\\s*(?:(\\\\=)|(\\\\S.*))\\\\s*(\\\\))\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.other.assignment.fortran\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.parentheses.left.fortran\"\n          },\n          \"3\": {\n            \"name\": \"keyword.operator.assignment.fortran\"\n          },\n          \"4\": {\n            \"name\": \"invalid.error.generic-interface.fortran\"\n          },\n          \"5\": {\n            \"name\": \"punctuation.parentheses.right.fortran\"\n          }\n        },\n        \"comment\": \"Assignment generic interface.\",\n        \"end\": \"(?ix)\\\\b(end\\\\s*interface)\\\\b (?:\\\\s*\\\\b(\\\\1)\\\\b\\\\s*(\\\\()\\\\s*(?:(\\\\3)|(\\\\S.*))\\\\s*(\\\\)))?\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.endinterface.fortran\"\n          },\n          \"2\": {\n            \"name\": \"keyword.other.assignment.fortran\"\n          },\n          \"3\": {\n            \"name\": \"punctuation.parentheses.left.fortran\"\n          },\n          \"4\": {\n            \"name\": \"keyword.operator.assignment.fortran\"\n          },\n          \"5\": {\n            \"name\": \"invalid.error.generic-interface-end.fortran\"\n          },\n          \"6\": {\n            \"name\": \"punctuation.parentheses.right.fortran\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#interface-procedure-statement\"\n        }, {\n          \"include\": \"$base\"\n        }]\n      }, {\n        \"begin\": \"(?ix)\\\\G\\\\s*\\\\b(operator)\\\\s* (\\\\()\\\\s*(?: (\\\\.[a-z]+\\\\.|\\\\=\\\\=|\\\\/\\\\=|\\\\>\\\\=|\\\\>|\\\\<|\\\\<\\\\=|\\\\-|\\\\+|\\\\/|\\\\/\\\\/|\\\\*\\\\*|\\\\*) |(\\\\S.*) )\\\\s*(\\\\))\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.other.operator.fortran\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.parentheses.left.fortran\"\n          },\n          \"3\": {\n            \"name\": \"keyword.operator.fortran\"\n          },\n          \"4\": {\n            \"name\": \"invalid.error.generic-interface-block-op.fortran\"\n          },\n          \"5\": {\n            \"name\": \"punctuation.parentheses.right.fortran\"\n          }\n        },\n        \"comment\": \"Operator generic interface.\",\n        \"end\": \"(?ix)\\\\b(end\\\\s*interface)\\\\b (?:\\\\s*\\\\b(\\\\1)\\\\b\\\\s*(\\\\()\\\\s*(?:(\\\\3)|(\\\\S.*))\\\\s*(\\\\)))?\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.endinterface.fortran\"\n          },\n          \"2\": {\n            \"name\": \"keyword.other.operator.fortran\"\n          },\n          \"3\": {\n            \"name\": \"punctuation.parentheses.left.fortran\"\n          },\n          \"4\": {\n            \"name\": \"keyword.operator.fortran\"\n          },\n          \"5\": {\n            \"name\": \"invalid.error.generic-interface-block-op-end.fortran\"\n          },\n          \"6\": {\n            \"name\": \"punctuation.parentheses.right.fortran\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#interface-procedure-statement\"\n        }, {\n          \"include\": \"$base\"\n        }]\n      }, {\n        \"begin\": \"(?ix)\\\\G\\\\s*\\\\b(?:(read)|(write))\\\\s* (\\\\()\\\\s*(?:(formatted)|(unformatted)|(\\\\S.*))\\\\s*(\\\\))\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.other.read.fortran\"\n          },\n          \"2\": {\n            \"name\": \"keyword.other.write.fortran\"\n          },\n          \"3\": {\n            \"name\": \"punctuation.parentheses.left.fortran\"\n          },\n          \"4\": {\n            \"name\": \"keyword.other.formatted.fortran\"\n          },\n          \"5\": {\n            \"name\": \"keyword.other.unformatted.fortran\"\n          },\n          \"6\": {\n            \"name\": \"invalid.error.generic-interface-block.fortran\"\n          },\n          \"7\": {\n            \"name\": \"punctuation.parentheses.right.fortran\"\n          }\n        },\n        \"comment\": \"Read/Write generic interface.\",\n        \"end\": \"(?ix)\\\\b(end\\\\s*interface)\\\\b(?:\\\\s*\\\\b(?:(\\\\2)|(\\\\3))\\\\b\\\\s* (\\\\()\\\\s*(?:(\\\\4)|(\\\\5)|(\\\\S.*))\\\\s*(\\\\)))?\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.endinterface.fortran\"\n          },\n          \"2\": {\n            \"name\": \"keyword.other.read.fortran\"\n          },\n          \"3\": {\n            \"name\": \"keyword.other.write.fortran\"\n          },\n          \"4\": {\n            \"name\": \"punctuation.parentheses.left.fortran\"\n          },\n          \"5\": {\n            \"name\": \"keyword.other.formatted.fortran\"\n          },\n          \"6\": {\n            \"name\": \"keyword.other.unformatted.fortran\"\n          },\n          \"7\": {\n            \"name\": \"invalid.error.generic-interface-block-end.fortran\"\n          },\n          \"8\": {\n            \"name\": \"punctuation.parentheses.right.fortran\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#interface-procedure-statement\"\n        }, {\n          \"include\": \"$base\"\n        }]\n      }, {\n        \"begin\": \"(?i)\\\\G\\\\s*\\\\b([a-z]\\\\w*)\\\\b\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"entity.name.function.fortran\"\n          }\n        },\n        \"comment\": \"Generic interface.\",\n        \"end\": \"(?i)\\\\b(end\\\\s*interface)\\\\b(?:\\\\s*\\\\b(\\\\1)\\\\b)?\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.endinterface.fortran\"\n          },\n          \"2\": {\n            \"name\": \"entity.name.function.fortran\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#interface-procedure-statement\"\n        }, {\n          \"include\": \"$base\"\n        }]\n      }]\n    },\n    \"goto-statement\": {\n      \"begin\": \"(?i)\\\\s*\\\\b(go\\\\s*to)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.goto.fortran\"\n        }\n      },\n      \"comment\": \"Introduced in the Fortran 1977 standard.\",\n      \"end\": \"(?=[;!\\\\n])\",\n      \"name\": \"meta.statement.control.goto.fortran\",\n      \"patterns\": [{\n        \"include\": \"$base\"\n      }]\n    },\n    \"if-construct\": {\n      \"patterns\": [{\n        \"begin\": \"(?i)\\\\b(if)\\\\b\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.if.fortran\"\n          }\n        },\n        \"end\": \"(?=[;!\\\\n])\",\n        \"patterns\": [{\n          \"include\": \"#logical-control-expression\"\n        }, {\n          \"begin\": \"(?i)\\\\s*\\\\b(then)\\\\b\",\n          \"beginCaptures\": {\n            \"1\": {\n              \"name\": \"keyword.control.then.fortran\"\n            }\n          },\n          \"contentName\": \"meta.block.if.fortran\",\n          \"end\": \"(?i)\\\\b(end\\\\s*if)\\\\b\",\n          \"endCaptures\": {\n            \"1\": {\n              \"name\": \"keyword.control.endif.fortran\"\n            }\n          },\n          \"patterns\": [{\n            \"begin\": \"(?i)\\\\b(else\\\\s*if)\\\\b\",\n            \"beginCaptures\": {\n              \"1\": {\n                \"name\": \"keyword.control.elseif.fortran\"\n              }\n            },\n            \"comment\": \"else if statement\",\n            \"end\": \"(?=[;!\\\\n])\",\n            \"patterns\": [{\n              \"include\": \"#parentheses\"\n            }, {\n              \"captures\": {\n                \"1\": {\n                  \"name\": \"keyword.control.then.fortran\"\n                },\n                \"2\": {\n                  \"name\": \"meta.label.elseif.fortran\"\n                }\n              },\n              \"comment\": \"capture the label if present\",\n              \"match\": \"(?i)\\\\b(then)\\\\b(\\\\s*[a-z]\\\\w*)?\"\n            }, {\n              \"include\": \"#invalid-word\"\n            }]\n          }, {\n            \"begin\": \"(?i)\\\\b(else)\\\\b\",\n            \"beginCaptures\": {\n              \"1\": {\n                \"name\": \"keyword.control.else.fortran\"\n              }\n            },\n            \"comment\": \"else block\",\n            \"end\": \"(?i)(?=\\\\b(end\\\\s*if)\\\\b)\",\n            \"patterns\": [{\n              \"begin\": \"(?!(\\\\s*(;|!|\\\\n)))\",\n              \"comment\": \"rest of else line\",\n              \"end\": \"(?=[;!\\\\n])\",\n              \"patterns\": [{\n                \"captures\": {\n                  \"1\": {\n                    \"name\": \"meta.label.else.fortran\"\n                  },\n                  \"2\": {\n                    \"name\": \"invalid.error.label.else.fortran\"\n                  }\n                },\n                \"comment\": \"capture the label if present\",\n                \"match\": \"\\\\s*([a-z]\\\\w*)?\\\\s*\\\\b(\\\\w*)\\\\b\"\n              }, {\n                \"include\": \"#invalid-word\"\n              }]\n            }, {\n              \"begin\": \"(?i)(?!\\\\b(end\\\\s*if)\\\\b)\",\n              \"end\": \"(?i)(?=\\\\b(end\\\\s*if)\\\\b)\",\n              \"patterns\": [{\n                \"include\": \"$base\"\n              }]\n            }]\n          }, {\n            \"include\": \"$base\"\n          }]\n        }, {\n          \"begin\": \"(?i)(?=\\\\s*[a-z])\",\n          \"end\": \"(?=[;!\\\\n])\",\n          \"name\": \"meta.statement.control.if.fortran\",\n          \"patterns\": [{\n            \"include\": \"$base\"\n          }]\n        }]\n      }]\n    },\n    \"image-control-statement\": {\n      \"patterns\": [{\n        \"include\": \"#sync-all-statement\"\n      }, {\n        \"include\": \"#sync-statement\"\n      }, {\n        \"include\": \"#event-statement\"\n      }, {\n        \"include\": \"#form-team-statement\"\n      }, {\n        \"include\": \"#fail-image-statement\"\n      }]\n    },\n    \"implicit-statement\": {\n      \"begin\": \"(?i)\\\\b(implicit)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.other.implicit.fortran\"\n        }\n      },\n      \"end\": \"(?=[;!\\\\n])\",\n      \"name\": \"meta.statement.implicit.fortran\",\n      \"patterns\": [{\n        \"captures\": {\n          \"1\": {\n            \"name\": \"keyword.other.none.fortran\"\n          }\n        },\n        \"match\": \"(?i)\\\\s*\\\\b(none)\\\\b\"\n      }, {\n        \"include\": \"$base\"\n      }]\n    },\n    \"import-statement\": {\n      \"begin\": \"(?i)\\\\b(import)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.include.fortran\"\n        }\n      },\n      \"comment\": \"Introduced in the Fortran 1990 standard.\",\n      \"end\": \"(?=[;!\\\\n])\",\n      \"name\": \"meta.statement.include.fortran\",\n      \"patterns\": [{\n        \"begin\": \"(?i)\\\\G\\\\s*(?:(::)|(?=[a-z]))\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.operator.double-colon.fortran\"\n          }\n        },\n        \"end\": \"(?=[;!\\\\n])\",\n        \"patterns\": [{\n          \"include\": \"#name-list\"\n        }]\n      }, {\n        \"begin\": \"\\\\G\\\\s*(,)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.comma.fortran\"\n          }\n        },\n        \"end\": \"(?=[;!\\\\n])\",\n        \"patterns\": [{\n          \"captures\": {\n            \"1\": {\n              \"name\": \"keyword.other.all.fortran\"\n            }\n          },\n          \"match\": \"(?i)\\\\G\\\\s*\\\\b(all)\\\\b\"\n        }, {\n          \"captures\": {\n            \"1\": {\n              \"name\": \"keyword.other.none.fortran\"\n            }\n          },\n          \"match\": \"(?i)\\\\G\\\\s*\\\\b(none)\\\\b\"\n        }, {\n          \"begin\": \"(?i)\\\\G\\\\s*\\\\b(only)\\\\s*(:)\",\n          \"beginCaptures\": {\n            \"1\": {\n              \"name\": \"keyword.other.only.fortran\"\n            },\n            \"2\": {\n              \"name\": \"keyword.other.colon.fortran\"\n            }\n          },\n          \"end\": \"(?=[;!\\\\n])\",\n          \"patterns\": [{\n            \"include\": \"#name-list\"\n          }]\n        }, {\n          \"include\": \"#invalid-word\"\n        }]\n      }]\n    },\n    \"include-statement\": {\n      \"begin\": \"(?i)\\\\b(include)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.include.fortran\"\n        }\n      },\n      \"comment\": \"Introduced in the Fortran 1990 standard.\",\n      \"end\": \"(?=[;!\\\\n])\",\n      \"name\": \"meta.statement.include.fortran\",\n      \"patterns\": [{\n        \"include\": \"#string-constant\"\n      }, {\n        \"include\": \"#invalid-character\"\n      }]\n    },\n    \"intent-attribute\": {\n      \"begin\": \"(?i)\\\\s*\\\\b(intent)\\\\s*(\\\\()\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"storage.modifier.intent.fortran\"\n        },\n        \"2\": {\n          \"name\": \"punctuation.parentheses.left.fortran\"\n        }\n      },\n      \"comment\": \"Introduced in the Fortran 1990 standard.\",\n      \"end\": \"(\\\\))|(?=[;!\\\\n])\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.parentheses.left.fortran\"\n        }\n      },\n      \"patterns\": [{\n        \"captures\": {\n          \"1\": {\n            \"name\": \"storage.modifier.intent.in-out.fortran\"\n          },\n          \"2\": {\n            \"name\": \"storage.modifier.intent.in.fortran\"\n          },\n          \"3\": {\n            \"name\": \"storage.modifier.intent.out.fortran\"\n          }\n        },\n        \"match\": \"(?i)\\\\b(?:(in\\\\s*out)|(in)|(out))\\\\b\"\n      }, {\n        \"include\": \"#invalid-word\"\n      }]\n    },\n    \"interface-block-constructs\": {\n      \"patterns\": [{\n        \"include\": \"#abstract-interface-block-construct\"\n      }, {\n        \"include\": \"#explicit-interface-block-construct\"\n      }, {\n        \"include\": \"#generic-interface-block-construct\"\n      }]\n    },\n    \"interface-procedure-statement\": {\n      \"begin\": `(?i)(?=[^'\";!\\\\n]*\\\\bprocedure\\\\b)`,\n      \"comment\": \"Introduced in the Fortran 1990 standard.\",\n      \"end\": \"(?=[;!\\\\n])\",\n      \"name\": \"meta.statement.procedure.fortran\",\n      \"patterns\": [{\n        \"begin\": \"(?i)(?=\\\\G\\\\s*(?!\\\\bprocedure\\\\b))\",\n        \"comment\": \"Attribute list.\",\n        \"end\": \"(?i)(?=\\\\bprocedure\\\\b)\",\n        \"name\": \"meta.attribute-list.interface.fortran\",\n        \"patterns\": [{\n          \"include\": \"#module-attribute\"\n        }, {\n          \"include\": \"#invalid-word\"\n        }]\n      }, {\n        \"begin\": \"(?i)\\\\s*\\\\b(procedure)\\\\b\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.other.procedure.fortran\"\n          }\n        },\n        \"comment\": \"Procedure statement.\",\n        \"end\": \"(?=[;!\\\\n])\",\n        \"patterns\": [{\n          \"captures\": {\n            \"1\": {\n              \"name\": \"keyword.operator.double-colon.fortran\"\n            }\n          },\n          \"match\": \"\\\\G\\\\s*(::)\"\n        }, {\n          \"include\": \"#procedure-name-list\"\n        }]\n      }]\n    },\n    \"intrinsic-attribute\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"storage.modifier.intrinsic.fortran\"\n        }\n      },\n      \"comment\": \"Introduced in the Fortran 1977 standard.\",\n      \"match\": \"(?i)\\\\s*\\\\b(intrinsic)\\\\b\"\n    },\n    \"intrinsic-functions\": {\n      \"patterns\": [{\n        \"begin\": \"(?ix)\\\\b(acosh|asinh|atanh|bge|bgt|ble|blt|dshiftl|dshiftr| findloc|hypot|iall|iany|image_index|iparity|is_contiguous|lcobound| leadz|mask[lr]|merge_bits|norm2|num_images|parity|popcnt|poppar| shift[alr]|storage_size|this_image|trailz|ucobound)\\\\s*(?=\\\\()\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"support.function.intrinsic.fortran\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.parentheses.left.fortran\"\n          }\n        },\n        \"comment\": \"Intrinsic functions introduced in the Fortran 2008 standard.\",\n        \"end\": \"(?<!\\\\G)\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.parentheses.right.fortran\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#parentheses-dummy-variables\"\n        }]\n      }, {\n        \"begin\": \"(?ix)\\\\b(bessel_[jy][01n]|erf(c(_scaled)?)?|gamma|log_gamma)\\\\s*(?=\\\\()\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"support.function.intrinsic.fortran\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.parentheses.left.fortran\"\n          }\n        },\n        \"comment\": \"Functions accessable through the intrinsic FORTRAN_SPECIAL_FUNCTIONS module. Introduced in the Fortran 2008 standard.\",\n        \"end\": \"(?<!\\\\G)\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.parentheses.right.fortran\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#parentheses-dummy-variables\"\n        }]\n      }, {\n        \"begin\": \"(?ix)\\\\b(command_argument_count|extends_type_of|is_iostat_end| is_iostat_eor|new_line|same_type_as|selected_char_kind)\\\\s*(?=\\\\()\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"support.function.intrinsic.fortran\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.parentheses.left.fortran\"\n          }\n        },\n        \"comment\": \"Intrinsic functions introduced in the Fortran 2003 standard.\",\n        \"end\": \"(?<!\\\\G)\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.parentheses.right.fortran\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#parentheses-dummy-variables\"\n        }]\n      }, {\n        \"begin\": \"(?ix)\\\\b(ieee_( class|copy_sign|is_(finite|nan|negative|normal)|logb|next_after|rem| rint|scalb|selected_real_kind| support_(datatype|denormal|divide|inf|io|nan|rounding|sqrt|standard|underflow_control)| unordered|value))\\\\s*(?=\\\\()\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"support.function.intrinsic.fortran\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.parentheses.left.fortran\"\n          }\n        },\n        \"comment\": \"Functions accessable through the intrinsic IEEE_ARITHMETIC module. Introduced in the Fortran 2003 standard.\",\n        \"end\": \"(?<!\\\\G)\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.parentheses.right.fortran\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#parentheses-dummy-variables\"\n        }]\n      }, {\n        \"begin\": \"(?ix)\\\\b(ieee_support_(flag|halting))\\\\s*(?=\\\\()\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"support.function.intrinsic.fortran\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.parentheses.left.fortran\"\n          }\n        },\n        \"comment\": \"Functions accessable through the intrinsic IEEE_EXCEPTIONS module. Introduced in the Fortran 2003 standard.\",\n        \"end\": \"(?<!\\\\G)\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.parentheses.right.fortran\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#parentheses-dummy-variables\"\n        }]\n      }, {\n        \"begin\": \"(?ix)\\\\b(c_(associated|funloc|loc|sizeof))\\\\s*(?=\\\\()\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"support.function.intrinsic.fortran\"\n          }\n        },\n        \"comment\": \"Functions accessable through the intrinsic ISO_C_BINDING module. Introduced in the Fortran 2003 standard.\",\n        \"end\": \"(?<!\\\\G)\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.parentheses.right.fortran\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#parentheses-dummy-variables\"\n        }]\n      }, {\n        \"begin\": \"(?ix)\\\\b(compiler_(options|version))\\\\s*(?=\\\\()\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"support.function.intrinsic.fortran\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.parentheses.left.fortran\"\n          }\n        },\n        \"comment\": \"Functions accessable through the intrinsic ISO_FORTRAN_ENV module. Introduced in the Fortran 2003 standard.\",\n        \"end\": \"(?<!\\\\G)\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.parentheses.right.fortran\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#parentheses-dummy-variables\"\n        }]\n      }, {\n        \"begin\": \"(?ix)\\\\b(null)\\\\s*(?=\\\\()\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"support.function.intrinsic.fortran\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.parentheses.left.fortran\"\n          }\n        },\n        \"comment\": \"Intrinsic functions introduced in the Fortran 1995 standard.\",\n        \"end\": \"(?<!\\\\G)\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.parentheses.right.fortran\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#parentheses-dummy-variables\"\n        }]\n      }, {\n        \"begin\": \"(?ix)\\\\b(achar|adjustl|adjustr|all|allocated|associated|any|bit_size|btest|ceiling|count|cshift|digits|dot_product|eoshift|epsilon|exponent|floor|fraction|huge|iachar|iand|ibclr|ibits|ibset|ieor|ior|ishftc?| kind|lbound|len_trim|logical|matmul|maxexponent|maxloc|maxval|merge|minexponent|minloc|minval|modulo|nearest|not|pack|precision|present|product|radix|range|repeat|reshape|rrspacing|scale|scan|selected_(int|real)_kind|set_exponent|shape|size|spacing|spread|sum|tiny|transfer|transpose|trim|ubound|unpack|verify)\\\\s*(?=\\\\()\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"support.function.intrinsic.fortran\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.parentheses.left.fortran\"\n          }\n        },\n        \"comment\": \"Intrinsic functions introduced in the Fortran 1990 standard.\",\n        \"end\": \"(?<!\\\\G)\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.parentheses.right.fortran\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#parentheses-dummy-variables\"\n        }]\n      }, {\n        \"begin\": \"(?ix)\\\\b([icd]?abs|acos|[ad]int|[ad]nint|aimag|amax[01]| amin[01]|d?asin|d?atan|d?atan2|char|conjg|[cd]?cos|d?cosh|cmplx|dble| i?dim|dmax1|dmin1|dprod|[cd]?exp|float|ichar|idint|ifix|index|int|len| lge|lgt|lle|llt|[acd]?log|[ad]?log10|max[01]?|min[01]?|[ad]?mod| (id)?nint|real|[di]?sign|[cd]?sin|d?sinh|sngl|[cd]?sqrt|d?tan|d?tanh) \\\\s*(?=\\\\()\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"support.function.intrinsic.fortran\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.parentheses.left.fortran\"\n          }\n        },\n        \"comment\": \"Intrinsic functions introduced in the Fortran 1977 standard.\",\n        \"end\": \"(?<!\\\\G)\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.parentheses.right.fortran\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#parentheses-dummy-variables\"\n        }]\n      }]\n    },\n    \"intrinsic-subroutines\": {\n      \"patterns\": [{\n        \"begin\": \"(?ix)\\\\G\\\\s*\\\\b(date_and_time|mvbits|random_number|random_seed| system_clock)\\\\s*(?=\\\\()\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"entity.name.function.subroutine.fortran\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.parentheses.left.fortran\"\n          }\n        },\n        \"comment\": \"Intrinsic subroutines introduced in the Fortran 1990 standard.\",\n        \"end\": \"(?<!\\\\G)\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.parentheses.right.fortran\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#parentheses-dummy-variables\"\n        }]\n      }, {\n        \"begin\": \"(?i)\\\\G\\\\s*\\\\b(cpu_time)\\\\s*(?=\\\\()\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"entity.name.function.subroutine.fortran\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.parentheses.left.fortran\"\n          }\n        },\n        \"comment\": \"Intrinsic subroutines introduced in the Fortran 1995 standard.\",\n        \"end\": \"(?<!\\\\G)\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.parentheses.right.fortran\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#parentheses-dummy-variables\"\n        }]\n      }, {\n        \"begin\": \"(?i)\\\\G\\\\s*\\\\b(ieee_(get|set)_(rounding|underflow)_mode)\\\\s*(?=\\\\()\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"entity.name.function.subroutine.fortran\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.parentheses.left.fortran\"\n          }\n        },\n        \"comment\": \"Subroutines accessable through the intrinsic IEEE_ARITHMETIC module. Introduced in the Fortran 2003 standard.\",\n        \"end\": \"(?<!\\\\G)\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.parentheses.right.fortran\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#parentheses-dummy-variables\"\n        }]\n      }, {\n        \"begin\": \"(?i)\\\\G\\\\s*\\\\b(ieee_(get|set)_(flag|halting_mode|status))\\\\s*(?=\\\\()\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"entity.name.function.subroutine.fortran\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.parentheses.left.fortran\"\n          }\n        },\n        \"comment\": \"Subroutines accessable through the intrinsic IEEE_EXCEPTIONS module. Introduced in the Fortran 2003 standard.\",\n        \"end\": \"(?<!\\\\G)\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.parentheses.right.fortran\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#parentheses-dummy-variables\"\n        }]\n      }, {\n        \"begin\": \"(?i)\\\\G\\\\s*\\\\b(c_f_(pointer|procpointer))\\\\s*(?=\\\\()\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"entity.name.function.subroutine.fortran\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.parentheses.left.fortran\"\n          }\n        },\n        \"comment\": \"Subroutines accessable through the intrinsic ISO_C_BINDING module. Introduced in the Fortran 2003 standard.\",\n        \"end\": \"(?<!\\\\G)\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.parentheses.right.fortran\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#parentheses-dummy-variables\"\n        }]\n      }, {\n        \"begin\": \"(?ix)\\\\G\\\\s*\\\\b(execute_command_line|get_command| get_command_argument|get_environment_variable|move_alloc)\\\\s*(?=\\\\()\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"entity.name.function.subroutine.fortran\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.parentheses.left.fortran\"\n          }\n        },\n        \"comment\": \"Intrinsic subroutines introduced in the Fortran 2008 standard.\",\n        \"end\": \"(?<!\\\\G)\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.parentheses.right.fortran\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#parentheses-dummy-variables\"\n        }]\n      }]\n    },\n    \"invalid-character\": {\n      \"match\": \"(?i)[^\\\\s;!\\\\n]+\",\n      \"name\": \"invalid.error.character.fortran\"\n    },\n    \"invalid-word\": {\n      \"match\": \"(?i)\\\\b\\\\w+\\\\b\",\n      \"name\": \"invalid.error.word.fortran\"\n    },\n    \"language-binding-attribute\": {\n      \"begin\": \"(?i)\\\\s*\\\\b(bind)\\\\s*\\\\(\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"storage.modifier.bind.fortran\"\n        }\n      },\n      \"comment\": \"Introduced in Fortran 2003 standard.\",\n      \"end\": \"(?:\\\\)|(?=\\\\n))\",\n      \"patterns\": [{\n        \"match\": \"(?i)\\\\b(c)\\\\b\",\n        \"name\": \"variable.parameter.fortran\"\n      }, {\n        \"include\": \"#dummy-variable\"\n      }, {\n        \"include\": \"$base\"\n      }]\n    },\n    \"line-continuation-operator\": {\n      \"comment\": \"Operator that allows a line to be continued on the next line.\",\n      \"patterns\": [{\n        \"captures\": {\n          \"1\": {\n            \"name\": \"keyword.operator.line-continuation.fortran\"\n          }\n        },\n        \"match\": \"(?:^|(?<=;))\\\\s*(&)\"\n      }, {\n        \"begin\": \"\\\\s*(&)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.operator.line-continuation.fortran\"\n          }\n        },\n        \"contentName\": \"meta.line-continuation.fortran\",\n        \"end\": \"(?i)^(?:\\\\s*(&))?\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.operator.line-continuation.fortran\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#comments\"\n        }, {\n          \"match\": \"\\\\S[^!]*\",\n          \"name\": \"invalid.error.line-cont.fortran\"\n        }]\n      }]\n    },\n    \"logical-constant\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"constant.language.logical.false.fortran\"\n        },\n        \"2\": {\n          \"name\": \"constant.language.logical.true.fortran\"\n        }\n      },\n      \"comment\": \"Logical constants\",\n      \"match\": \"(?i)\\\\s*(?:(\\\\.false\\\\.)|(\\\\.true\\\\.))\"\n    },\n    \"logical-control-expression\": {\n      \"begin\": \"\\\\G(?=\\\\s*\\\\()\",\n      \"end\": \"(?<!\\\\G)\",\n      \"name\": \"meta.expression.control.logical.fortran\",\n      \"patterns\": [{\n        \"include\": \"#parentheses\"\n      }]\n    },\n    \"logical-operators\": {\n      \"patterns\": [{\n        \"comment\": \"Introduced in the Fortran 1977 standard.\",\n        \"match\": \"(?ix)(\\\\s*\\\\.(and|eq|eqv|le|lt|ge|gt|ne|neqv|not|or)\\\\.)\",\n        \"name\": \"keyword.logical.fortran\"\n      }, {\n        \"comment\": \"Introduced in the Fortran 1990 standard.\",\n        \"match\": \"(\\\\=\\\\=|\\\\/\\\\=|\\\\>\\\\=|(?<!\\\\=)\\\\>|\\\\<\\\\=|\\\\<)\",\n        \"name\": \"keyword.logical.fortran.modern\"\n      }]\n    },\n    \"logical-type\": {\n      \"comment\": \"Introduced in the Fortran 1977 standard.\",\n      \"patterns\": [{\n        \"begin\": \"(?i)\\\\b(logical)\\\\s*(?=\\\\()\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"storage.type.logical.fortran\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.parentheses.left.fortran\"\n          }\n        },\n        \"contentName\": \"meta.type-spec.fortran\",\n        \"end\": \"(?<!\\\\G)\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.parentheses.right.fortran\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#parentheses-dummy-variables\"\n        }]\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"storage.type.character.fortran\"\n          },\n          \"2\": {\n            \"name\": \"keyword.operator.multiplication.fortran\"\n          },\n          \"3\": {\n            \"name\": \"constant.numeric.fortran\"\n          }\n        },\n        \"match\": \"(?i)\\\\b(logical)\\\\b(?:\\\\s*(\\\\*)\\\\s*(\\\\d*))?\"\n      }]\n    },\n    \"module-attribute\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"storage.modifier.module.fortran\"\n        }\n      },\n      \"comment\": \"Introduced in the Fortran 1990 standard.\",\n      \"match\": `(?ix)\\\\s*\\\\b(module)\\\\b(?=\\\\s*(?:[;!\\\\n]| [^'\";!\\\\n]*\\\\b(?:function|procedure|subroutine)\\\\b))`\n    },\n    \"module-definition\": {\n      \"begin\": `(?ix)(?=\\\\b(module)\\\\b)(?![^'\";!\\\\n]* \\\\b(?:function|procedure|subroutine)\\\\b)`,\n      \"comment\": \"Introduced in the Fortran 1990 standard.\",\n      \"end\": \"(?=[;!\\\\n])\",\n      \"name\": \"meta.module.fortran\",\n      \"patterns\": [{\n        \"captures\": {\n          \"1\": {\n            \"name\": \"keyword.other.program.fortran\"\n          }\n        },\n        \"match\": \"(?i)\\\\G\\\\s*\\\\b(module)\\\\b\"\n      }, {\n        \"applyEndPatternLast\": 1,\n        \"begin\": \"(?i)\\\\s*\\\\b([a-z]\\\\w*)\\\\b\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"entity.name.class.module.fortran\"\n          }\n        },\n        \"comment\": \"Module body.\",\n        \"end\": \"(?ix)\\\\b(?:(end\\\\s*module)(?:\\\\s+([a-z_]\\\\w*))?|(end))\\\\b \\\\s*([^;!\\\\n]+)?(?=[;!\\\\n])\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.other.endmodule.fortran\"\n          },\n          \"2\": {\n            \"name\": \"entity.name.class.module.fortran\"\n          },\n          \"3\": {\n            \"name\": \"keyword.other.endmodule.fortran\"\n          },\n          \"4\": {\n            \"name\": \"invalid.error.module-definition.fortran\"\n          }\n        },\n        \"patterns\": [{\n          \"begin\": \"\\\\G\",\n          \"comment\": \"Module specification block.\",\n          \"end\": \"(?i)(?=\\\\b(?:end\\\\s*[;!\\\\n]|end\\\\s*module\\\\b))\",\n          \"name\": \"meta.block.specification.module.fortran\",\n          \"patterns\": [{\n            \"begin\": \"(?i)\\\\b(contains)\\\\b\",\n            \"beginCaptures\": {\n              \"1\": {\n                \"name\": \"keyword.control.contains.fortran\"\n              }\n            },\n            \"comment\": \"Module contains block.\",\n            \"end\": \"(?i)(?=\\\\s*(?:end\\\\s*[;!\\\\n]|end\\\\s*module\\\\b))\",\n            \"name\": \"meta.block.contains.fortran\",\n            \"patterns\": [{\n              \"include\": \"$base\"\n            }]\n          }, {\n            \"include\": \"$base\"\n          }]\n        }]\n      }]\n    },\n    \"name-list\": {\n      \"begin\": \"(?i)(?=\\\\s*[a-z])\",\n      \"comment\": \"Name list.\",\n      \"contentName\": \"meta.name-list.fortran\",\n      \"end\": \"(?=[\\\\);!\\\\n])\",\n      \"patterns\": [{\n        \"include\": \"#constants\"\n      }, {\n        \"include\": \"#operators\"\n      }, {\n        \"include\": \"#intrinsic-functions\"\n      }, {\n        \"include\": \"#array-constructor\"\n      }, {\n        \"include\": \"#parentheses\"\n      }, {\n        \"include\": \"#brackets\"\n      }, {\n        \"include\": \"#assignment-keyword\"\n      }, {\n        \"include\": \"#operator-keyword\"\n      }, {\n        \"include\": \"#variable\"\n      }]\n    },\n    \"named-control-constructs\": {\n      \"applyEndPatternLast\": 1,\n      \"begin\": \"(?ix)([a-z]\\\\w*)\\\\s*(:)(?=\\\\s*(?:associate|block(?!\\\\s*data)|critical|do|forall|if|select\\\\s*case|select\\\\s*type|select\\\\s*rank|where)\\\\b)\",\n      \"comment\": \"Introduced in the Fortran 1990 standard.\",\n      \"contentName\": \"meta.named-construct.fortran.modern\",\n      \"end\": \"(?i)(?!\\\\s*\\\\b(?:associate|block(?!\\\\s*data)|critical|do|forall|if|select\\\\s*case|select\\\\s*type|select\\\\s*rank|where)\\\\b)(?:\\\\b(\\\\1)\\\\b)?([^\\\\s;!\\\\n]*?)?(?=\\\\s*[;!\\\\n])\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"meta.label.end.name.fortran\"\n        },\n        \"2\": {\n          \"name\": \"invalid.error.named-control-constructs.fortran.modern\"\n        }\n      },\n      \"patterns\": [{\n        \"include\": \"#unnamed-control-constructs\"\n      }]\n    },\n    \"namelist-statement\": {\n      \"begin\": \"(?i)\\\\b(namelist)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.namelist.fortran\"\n        }\n      },\n      \"comment\": \"Introduced in the Fortran 1990 standard.\",\n      \"end\": \"(?=[;!\\\\n])\",\n      \"patterns\": [{\n        \"include\": \"$base\"\n      }]\n    },\n    \"non-intrinsic-attribute\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"storage.modifier.non-intrinsic.fortran\"\n        }\n      },\n      \"comment\": \"Introduced in the Fortran 1990 standard.\",\n      \"match\": \"(?i)\\\\s*\\\\b(non_intrinsic)\\\\b\"\n    },\n    \"non-overridable-attribute\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"storage.modifier.non-overridable.fortran\"\n        }\n      },\n      \"comment\": \"Introduced in the Fortran 2003 standard.\",\n      \"match\": \"(?i)\\\\s*\\\\b(non_overridable)\\\\b\"\n    },\n    \"nopass-attribute\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"storage.modifier.nopass.fortran\"\n        }\n      },\n      \"comment\": \"Introduced in the Fortran 2003 standard.\",\n      \"match\": \"(?i)\\\\s*\\\\b(nopass)\\\\b\"\n    },\n    \"nullify-statement\": {\n      \"begin\": \"(?i)\\\\b(nullify)\\\\s*(?=\\\\()\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.nullify.fortran\"\n        },\n        \"2\": {\n          \"name\": \"punctuation.parentheses.left.fortran\"\n        }\n      },\n      \"comment\": \"Introduced in the Fortran 1990 standard.\",\n      \"end\": \"(?<!\\\\G)\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.parentheses.right.fortran\"\n        }\n      },\n      \"name\": \"meta.statement.nullify.fortran\",\n      \"patterns\": [{\n        \"include\": \"#parentheses-dummy-variables\"\n      }]\n    },\n    \"numeric-constant\": {\n      \"comment\": \"Numeric constants\",\n      \"match\": \"(?ix)[\\\\+\\\\-]?(\\\\b\\\\d+\\\\.?\\\\d*|\\\\.\\\\d+) (_\\\\w+|d[\\\\+\\\\-]?\\\\d+|e[\\\\+\\\\-]?\\\\d+(_\\\\w+)?)?(?![a-z_])\",\n      \"name\": \"constant.numeric.fortran\"\n    },\n    \"numeric-type\": {\n      \"comment\": \"Introduced in the Fortran 1977 standard.\",\n      \"patterns\": [{\n        \"begin\": \"(?i)\\\\b(?:(complex)|(double\\\\s*precision)|(double\\\\s*complex)|(integer)|(real))\\\\s*(?=\\\\()\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"storage.type.complex.fortran\"\n          },\n          \"2\": {\n            \"name\": \"storage.type.double.fortran\"\n          },\n          \"3\": {\n            \"name\": \"storage.type.doublecomplex.fortran\"\n          },\n          \"4\": {\n            \"name\": \"storage.type.integer.fortran\"\n          },\n          \"5\": {\n            \"name\": \"storage.type.real.fortran\"\n          },\n          \"6\": {\n            \"name\": \"punctuation.parentheses.left.fortran\"\n          }\n        },\n        \"contentName\": \"meta.type-spec.fortran\",\n        \"end\": \"(?<!\\\\G)\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.parentheses.right.fortran\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#parentheses-dummy-variables\"\n        }]\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"storage.type.complex.fortran\"\n          },\n          \"2\": {\n            \"name\": \"storage.type.double.fortran\"\n          },\n          \"3\": {\n            \"name\": \"storage.type.doublecomplex.fortran\"\n          },\n          \"4\": {\n            \"name\": \"storage.type.integer.fortran\"\n          },\n          \"5\": {\n            \"name\": \"storage.type.real.fortran\"\n          },\n          \"6\": {\n            \"name\": \"storage.type.dimension.fortran\"\n          },\n          \"7\": {\n            \"name\": \"keyword.operator.multiplication.fortran\"\n          },\n          \"8\": {\n            \"name\": \"constant.numeric.fortran\"\n          }\n        },\n        \"match\": \"(?ix)\\\\b(?:(complex)|(double\\\\s*precision)|(double\\\\s*complex)|(integer)|(real)|(dimension))\\\\b(?:\\\\s*(\\\\*)\\\\s*(\\\\d*))?\"\n      }]\n    },\n    \"operator-keyword\": {\n      \"begin\": \"(?i)\\\\s*\\\\b(operator)\\\\s*(\\\\()\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.generic-spec.operator.fortran\"\n        },\n        \"2\": {\n          \"name\": \"punctuation.parentheses.left.fortran\"\n        }\n      },\n      \"comment\": \"Operator generic specification.\",\n      \"end\": \"(\\\\))\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.parentheses.right.fortran\"\n        }\n      },\n      \"patterns\": [{\n        \"include\": \"#arithmetic-operators\"\n      }, {\n        \"include\": \"#logical-operators\"\n      }, {\n        \"include\": \"#user-defined-operators\"\n      }, {\n        \"include\": \"#invalid-word\"\n      }]\n    },\n    \"operators\": {\n      \"patterns\": [{\n        \"include\": \"#arithmetic-operators\"\n      }, {\n        \"include\": \"#assignment-operator\"\n      }, {\n        \"include\": \"#derived-type-operators\"\n      }, {\n        \"include\": \"#logical-operators\"\n      }, {\n        \"include\": \"#pointer-operators\"\n      }, {\n        \"include\": \"#string-operators\"\n      }, {\n        \"include\": \"#user-defined-operators\"\n      }]\n    },\n    \"optional-attribute\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"storage.modifier.optional.fortran\"\n        }\n      },\n      \"comment\": \"Introduced in the Fortran 1990 standard.\",\n      \"match\": \"(?i)\\\\s*\\\\b(optional)\\\\b\"\n    },\n    \"parameter-attribute\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"storage.modifier.parameter.fortran\"\n        }\n      },\n      \"comment\": \"Introduced in the Fortran 1977 standard.\",\n      \"match\": \"(?i)\\\\s*\\\\b(parameter)\\\\b\"\n    },\n    \"parentheses\": {\n      \"begin\": \"\\\\s*(\\\\()\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.parentheses.left.fortran\"\n        }\n      },\n      \"end\": \"(\\\\))\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.parentheses.right.fortran\"\n        }\n      },\n      \"patterns\": [{\n        \"include\": \"#comments\"\n      }, {\n        \"include\": \"#constants\"\n      }, {\n        \"include\": \"#operators\"\n      }, {\n        \"include\": \"#array-constructor\"\n      }, {\n        \"include\": \"#parentheses\"\n      }, {\n        \"include\": \"#intrinsic-functions\"\n      }, {\n        \"include\": \"#variable\"\n      }]\n    },\n    \"parentheses-dummy-variables\": {\n      \"begin\": \"\\\\s*(\\\\()\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.parentheses.left.fortran\"\n        }\n      },\n      \"end\": \"(\\\\))\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.parentheses.right.fortran\"\n        }\n      },\n      \"patterns\": [{\n        \"include\": \"#procedure-call-dummy-variable\"\n      }, {\n        \"include\": \"#comments\"\n      }, {\n        \"include\": \"#constants\"\n      }, {\n        \"include\": \"#operators\"\n      }, {\n        \"include\": \"#array-constructor\"\n      }, {\n        \"include\": \"#parentheses\"\n      }, {\n        \"include\": \"#intrinsic-functions\"\n      }, {\n        \"include\": \"#variable\"\n      }]\n    },\n    \"pass-attribute\": {\n      \"comment\": \"Introduced in the Fortran 2003 standard.\",\n      \"patterns\": [{\n        \"begin\": \"(?i)\\\\s*\\\\b(pass)\\\\s*\\\\(\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"storage.modifier.pass.fortran\"\n          }\n        },\n        \"comment\": \"Pass attribute with argument.\",\n        \"end\": \"\\\\)|(?=\\\\n)\",\n        \"patterns\": []\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"storage.modifier.pass.fortran\"\n          }\n        },\n        \"comment\": \"Pass attribute without argument.\",\n        \"match\": \"(?i)\\\\s*\\\\b(pass)\\\\b\"\n      }]\n    },\n    \"pause-statement\": {\n      \"begin\": \"(?i)\\\\s*\\\\b(pause)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.pause.fortran\"\n        }\n      },\n      \"comment\": \"Introduced in the Fortran 1977 standard.\",\n      \"end\": \"(?=[;!\\\\n])\",\n      \"name\": \"meta.statement.control.pause.fortran\",\n      \"patterns\": [{\n        \"include\": \"#constants\"\n      }, {\n        \"include\": \"#invalid-character\"\n      }]\n    },\n    \"pointer-attribute\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"storage.modifier.pointer.fortran\"\n        }\n      },\n      \"comment\": \"Introduced in the Fortran 1990 standard.\",\n      \"match\": \"(?i)\\\\s*\\\\b(pointer)\\\\b\"\n    },\n    \"pointer-operators\": {\n      \"comment\": \"Introduced in the Fortran 1990 standard.\",\n      \"match\": \"(\\\\=\\\\>)\",\n      \"name\": \"keyword.other.point.fortran\"\n    },\n    \"preprocessor\": {\n      \"begin\": \"^\\\\s*(#:?)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.preprocessor.indicator.fortran\"\n        }\n      },\n      \"end\": \"\\\\n\",\n      \"name\": \"meta.preprocessor\",\n      \"patterns\": [{\n        \"include\": \"#preprocessor-if-construct\"\n      }, {\n        \"include\": \"#preprocessor-statements\"\n      }]\n    },\n    \"preprocessor-arithmetic-operators\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"keyword.operator.subtraction.fortran\"\n        },\n        \"2\": {\n          \"name\": \"keyword.operator.addition.fortran\"\n        },\n        \"3\": {\n          \"name\": \"keyword.operator.division.fortran\"\n        },\n        \"4\": {\n          \"name\": \"keyword.operator.multiplication.fortran\"\n        }\n      },\n      \"comment\": \"division regex is different than in main fortran\",\n      \"match\": \"(\\\\-)|(\\\\+)|(\\\\/)|(\\\\*)\"\n    },\n    \"preprocessor-assignment-operator\": {\n      \"comment\": \"assignments with = are not allowed\",\n      \"match\": \"(?<!\\\\=)(\\\\=)(?!\\\\=)\",\n      \"name\": \"keyword.operator.assignment.preprocessor.fortran\"\n    },\n    \"preprocessor-comments\": {\n      \"begin\": \"/\\\\*\",\n      \"end\": \"\\\\*/\",\n      \"name\": \"comment.preprocessor\"\n    },\n    \"preprocessor-constants\": {\n      \"patterns\": [{\n        \"include\": \"#cpp-numeric-constant\"\n      }, {\n        \"include\": \"#preprocessor-string-constant\"\n      }]\n    },\n    \"preprocessor-define-statement\": {\n      \"begin\": \"(?i)\\\\G\\\\s*\\\\b(define)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.preprocessor.define.fortran\"\n        }\n      },\n      \"end\": \"(?=\\\\n)\",\n      \"name\": \"meta.preprocessor.macro.fortran\",\n      \"patterns\": [{\n        \"include\": \"#preprocessor-comments\"\n      }, {\n        \"include\": \"#preprocessor-constants\"\n      }, {\n        \"include\": \"#preprocessor-line-continuation-operator\"\n      }]\n    },\n    \"preprocessor-defined-function\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"keyword.control.preprocessor.defined.fortran\"\n        }\n      },\n      \"match\": \"(?i)\\\\b(defined)\\\\b\"\n    },\n    \"preprocessor-error-statement\": {\n      \"begin\": \"(?i)\\\\G\\\\s*(error)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.preprocessor.error.fortran\"\n        }\n      },\n      \"end\": \"(?=\\\\n)\",\n      \"name\": \"meta.preprocessor.macro.fortran\",\n      \"patterns\": [{\n        \"include\": \"#preprocessor-comments\"\n      }, {\n        \"include\": \"#preprocessor-string-constant\"\n      }, {\n        \"include\": \"#preprocessor-line-continuation-operator\"\n      }]\n    },\n    \"preprocessor-if-construct\": {\n      \"patterns\": [{\n        \"begin\": \"(?i)\\\\G\\\\s*\\\\b(if)\\\\b\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.preprocessor.if.fortran\"\n          }\n        },\n        \"end\": \"(?=\\\\n)\",\n        \"name\": \"meta.preprocessor.conditional.fortran\",\n        \"patterns\": [{\n          \"include\": \"#preprocessor-comments\"\n        }, {\n          \"include\": \"#cpp-numeric-constant\"\n        }, {\n          \"include\": \"#preprocessor-logical-operators\"\n        }, {\n          \"include\": \"#preprocessor-arithmetic-operators\"\n        }, {\n          \"include\": \"#preprocessor-defined-function\"\n        }, {\n          \"include\": \"#preprocessor-line-continuation-operator\"\n        }]\n      }, {\n        \"begin\": \"(?i)\\\\G\\\\s*\\\\b(ifdef)\\\\b\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.preprocessor.ifdef.fortran\"\n          }\n        },\n        \"end\": \"(?=\\\\n)\",\n        \"patterns\": [{\n          \"include\": \"#preprocessor-comments\"\n        }, {\n          \"include\": \"#cpp-numeric-constant\"\n        }, {\n          \"include\": \"#preprocessor-logical-operators\"\n        }, {\n          \"include\": \"#preprocessor-arithmetic-operators\"\n        }, {\n          \"include\": \"#preprocessor-line-continuation-operator\"\n        }]\n      }, {\n        \"begin\": \"(?i)\\\\G\\\\s*\\\\b(ifndef)\\\\b\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.preprocessor.ifndef.fortran\"\n          }\n        },\n        \"end\": \"(?=\\\\n)\",\n        \"patterns\": [{\n          \"include\": \"#preprocessor-comments\"\n        }, {\n          \"include\": \"#cpp-numeric-constant\"\n        }, {\n          \"include\": \"#preprocessor-logical-operators\"\n        }, {\n          \"include\": \"#preprocessor-arithmetic-operators\"\n        }, {\n          \"include\": \"#preprocessor-line-continuation-operator\"\n        }]\n      }, {\n        \"begin\": \"(?i)\\\\G\\\\s*\\\\b(else)\\\\b\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.preprocessor.else.fortran\"\n          }\n        },\n        \"end\": \"(?=\\\\n)\",\n        \"patterns\": [{\n          \"include\": \"#preprocessor-comments\"\n        }, {\n          \"include\": \"#cpp-numeric-constant\"\n        }]\n      }, {\n        \"begin\": \"(?i)\\\\G\\\\s*\\\\b(elif)\\\\b\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.preprocessor.elif.fortran\"\n          }\n        },\n        \"end\": \"(?=\\\\n)\",\n        \"patterns\": [{\n          \"include\": \"#preprocessor-comments\"\n        }, {\n          \"include\": \"#cpp-numeric-constant\"\n        }, {\n          \"include\": \"#preprocessor-logical-operators\"\n        }, {\n          \"include\": \"#preprocessor-arithmetic-operators\"\n        }, {\n          \"include\": \"#preprocessor-defined-function\"\n        }, {\n          \"include\": \"#preprocessor-line-continuation-operator\"\n        }]\n      }, {\n        \"begin\": \"(?i)\\\\G\\\\s*\\\\b(endif)\\\\b\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.preprocessor.endif.fortran\"\n          }\n        },\n        \"end\": \"(?=\\\\n)\",\n        \"patterns\": [{\n          \"include\": \"#preprocessor-comments\"\n        }]\n      }]\n    },\n    \"preprocessor-include-statement\": {\n      \"begin\": \"(?i)\\\\G\\\\s*(include)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.preprocessor.include.fortran\"\n        }\n      },\n      \"end\": \"(?=\\\\n)\",\n      \"name\": \"meta.preprocessor.include.fortran\",\n      \"patterns\": [{\n        \"include\": \"#preprocessor-comments\"\n      }, {\n        \"include\": \"#preprocessor-string-constant\"\n      }, {\n        \"begin\": \"<\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.begin.preprocessor.fortran\"\n          }\n        },\n        \"end\": \">\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.end.preprocessor.fortran\"\n          }\n        },\n        \"name\": \"string.quoted.other.lt-gt.include.preprocessor.fortran\"\n      }, {\n        \"include\": \"#line-continuation-operator\"\n      }]\n    },\n    \"preprocessor-line-continuation-operator\": {\n      \"begin\": \"\\\\s*(\\\\\\\\)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"constant.character.escape.line-continuation.preprocessor.fortran\"\n        }\n      },\n      \"end\": \"(?i)^\"\n    },\n    \"preprocessor-logical-operators\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"keyword.operator.logical.preprocessor.and.fortran\"\n        },\n        \"2\": {\n          \"name\": \"keyword.operator.logical.preprocessor.equals.fortran\"\n        },\n        \"3\": {\n          \"name\": \"keyword.operator.logical.preprocessor.not_equals.fortran\"\n        },\n        \"4\": {\n          \"name\": \"keyword.operator.logical.preprocessor.or.fortran\"\n        },\n        \"5\": {\n          \"name\": \"keyword.operator.logical.preprocessor.less_eq.fortran\"\n        },\n        \"6\": {\n          \"name\": \"keyword.operator.logical.preprocessor.more_eq.fortran\"\n        },\n        \"7\": {\n          \"name\": \"keyword.operator.logical.preprocessor.less.fortran\"\n        },\n        \"8\": {\n          \"name\": \"keyword.operator.logical.preprocessor.more.fortran\"\n        },\n        \"9\": {\n          \"name\": \"keyword.operator.logical.preprocessor.complementary.fortran\"\n        },\n        \"10\": {\n          \"name\": \"keyword.operator.logical.preprocessor.xor.fortran\"\n        },\n        \"11\": {\n          \"name\": \"keyword.operator.logical.preprocessor.bitand.fortran\"\n        },\n        \"12\": {\n          \"name\": \"keyword.operator.logical.preprocessor.not.fortran\"\n        },\n        \"13\": {\n          \"name\": \"keyword.operator.logical.preprocessor.bitor.fortran\"\n        }\n      },\n      \"comment\": \"and:&&, bitand:&, or:||, bitor:|, not eq:!=, not:!, xor:^, compl:~\",\n      \"match\": \"(&&)|(==)|(\\\\!=)|(\\\\|\\\\|)|(\\\\<\\\\=)|(\\\\>=)|(\\\\<)|(\\\\>)|(~)|(\\\\^)|(&)|(\\\\!)|(\\\\|)\",\n      \"name\": \"keyword.operator.logical.preprocessor.fortran\"\n    },\n    \"preprocessor-operators\": {\n      \"patterns\": [{\n        \"include\": \"#preprocessor-line-continuation-operator\"\n      }, {\n        \"include\": \"#preprocessor-logical-operators\"\n      }, {\n        \"include\": \"#preprocessor-arithmetic-operators\"\n      }]\n    },\n    \"preprocessor-pragma-statement\": {\n      \"begin\": \"(?i)\\\\G\\\\s*\\\\b(pragma)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.preprocessor.pragma.fortran\"\n        }\n      },\n      \"end\": \"(?=\\\\n)\",\n      \"name\": \"meta.preprocessor.pragma.fortran\",\n      \"patterns\": [{\n        \"include\": \"#preprocessor-comments\"\n      }, {\n        \"include\": \"#preprocessor-string-constant\"\n      }]\n    },\n    \"preprocessor-statements\": {\n      \"patterns\": [{\n        \"include\": \"#preprocessor-define-statement\"\n      }, {\n        \"include\": \"#preprocessor-error-statement\"\n      }, {\n        \"include\": \"#preprocessor-include-statement\"\n      }, {\n        \"include\": \"#preprocessor-preprocessor-pragma-statement\"\n      }, {\n        \"include\": \"#preprocessor-undefine-statement\"\n      }]\n    },\n    \"preprocessor-string-constant\": {\n      \"patterns\": [{\n        \"begin\": '\"',\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.begin.preprocessor.fortran\"\n          }\n        },\n        \"comment\": \"Double quote string\",\n        \"end\": '\"',\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.end.preprocessor.fortran\"\n          }\n        },\n        \"name\": \"string.quoted.double.include.preprocessor.fortran\"\n      }, {\n        \"begin\": \"'\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.begin.preprocessor.fortran\"\n          }\n        },\n        \"comment\": \"Single quote string\",\n        \"end\": \"'\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.end.preprocessor.fortran\"\n          }\n        },\n        \"name\": \"string.quoted.single.include.preprocessor.fortran\"\n      }]\n    },\n    \"preprocessor-undefine-statement\": {\n      \"begin\": \"(?i)\\\\G\\\\s*\\\\b(undef)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.preprocessor.undef.fortran\"\n        }\n      },\n      \"end\": \"(?=\\\\n)\",\n      \"name\": \"meta.preprocessor.undef.fortran\",\n      \"patterns\": [{\n        \"include\": \"#preprocessor-comments\"\n      }, {\n        \"include\": \"#preprocessor-line-continuation-operator\"\n      }]\n    },\n    \"private-attribute\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"storage.modifier.private.fortran\"\n        }\n      },\n      \"comment\": \"Introduced in the Fortran 1990 standard.\",\n      \"match\": \"(?i)\\\\s*\\\\b(private)\\\\b\"\n    },\n    \"procedure-call-dummy-variable\": {\n      \"match\": \"(?i)\\\\s*([a-z]\\\\w*)(?=\\\\s*\\\\=)(?!\\\\s*\\\\=\\\\=)\",\n      \"name\": \"variable.parameter.dummy-variable.fortran.modern\"\n    },\n    \"procedure-definition\": {\n      \"begin\": `(?i)(?=[^'\";!\\\\n]*\\\\bmodule\\\\s+procedure\\\\b)`,\n      \"comment\": \"Procedure program unit. Introduced in the Fortran 2008 standard.\",\n      \"end\": \"(?=[;!\\\\n])\",\n      \"name\": \"meta.procedure.fortran\",\n      \"patterns\": [{\n        \"begin\": \"(?i)\\\\s*\\\\b(module\\\\s+procedure)\\\\b\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.other.procedure.fortran\"\n          }\n        },\n        \"end\": \"(?=[;!\\\\n])\",\n        \"patterns\": [{\n          \"begin\": \"(?i)\\\\G\\\\s*\\\\b([a-z]\\\\w*)\\\\b\",\n          \"beginCaptures\": {\n            \"1\": {\n              \"name\": \"entity.name.function.procedure.fortran\"\n            }\n          },\n          \"comment\": \"Procedure body.\",\n          \"end\": \"(?ix)\\\\s*\\\\b(?:(end\\\\s*procedure)(?:\\\\s+([a-z_]\\\\w*))?|(end))\\\\b \\\\s*([^;!\\\\n]+)?(?=[;!\\\\n])\",\n          \"endCaptures\": {\n            \"1\": {\n              \"name\": \"keyword.other.endprocedure.fortran\"\n            },\n            \"2\": {\n              \"name\": \"entity.name.function.procedure.fortran\"\n            },\n            \"3\": {\n              \"name\": \"keyword.other.endprocedure.fortran\"\n            },\n            \"4\": {\n              \"name\": \"invalid.error.procedure-definition.fortran\"\n            }\n          },\n          \"patterns\": [{\n            \"begin\": \"\\\\G(?!\\\\s*[;!\\\\n])\",\n            \"comment\": \"Rest of the first line in procedure construct - should be empty.\",\n            \"end\": \"(?=[;!\\\\n])\",\n            \"name\": \"meta.first-line.fortran\",\n            \"patterns\": [{\n              \"include\": \"#invalid-character\"\n            }]\n          }, {\n            \"begin\": \"(?i)(?!\\\\s*(?:contains\\\\b|end\\\\s*[;!\\\\n]|end\\\\s*procedure\\\\b))\",\n            \"comment\": \"Specification and execution block.\",\n            \"end\": \"(?i)(?=\\\\s*(?:contains\\\\b|end\\\\s*[;!\\\\n]|end\\\\s*procedure\\\\b))\",\n            \"name\": \"meta.block.specification.procedure.fortran\",\n            \"patterns\": [{\n              \"include\": \"$self\"\n            }]\n          }, {\n            \"begin\": \"(?i)\\\\s*(contains)\\\\b\",\n            \"beginCaptures\": {\n              \"1\": {\n                \"name\": \"keyword.control.contains.fortran\"\n              }\n            },\n            \"comment\": \"Contains block.\",\n            \"end\": \"(?i)(?=\\\\s*(?:end\\\\s*[;!\\\\n]|end\\\\s*procedure\\\\b))\",\n            \"name\": \"meta.block.contains.fortran\",\n            \"patterns\": [{\n              \"include\": \"$self\"\n            }]\n          }]\n        }]\n      }]\n    },\n    \"procedure-name\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"entity.name.function.procedure.fortran\"\n        }\n      },\n      \"comment\": \"Procedure name.\",\n      \"match\": \"(?i)\\\\s*\\\\b([a-z]\\\\w*)\\\\b\"\n    },\n    \"procedure-name-list\": {\n      \"begin\": \"(?i)(?=\\\\s*[a-z])\",\n      \"comment\": \"Name list.\",\n      \"contentName\": \"meta.name-list.fortran\",\n      \"end\": \"(?=[;!\\\\n])\",\n      \"patterns\": [{\n        \"begin\": \"(?!\\\\s*\\\\n)\",\n        \"end\": \"(,)|(?=[!;\\\\n])\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.comma.fortran\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#procedure-name\"\n        }, {\n          \"include\": \"#pointer-operators\"\n        }]\n      }]\n    },\n    \"procedure-specification-statement\": {\n      \"begin\": \"(?i)(?=\\\\b(?:procedure)\\\\b)\",\n      \"comment\": \"Introduced in the Fortran 2003 standard.\",\n      \"end\": \"(?=[;!\\\\n])\",\n      \"name\": \"meta.specification.procedure.fortran\",\n      \"patterns\": [{\n        \"include\": \"#procedure-type\"\n      }, {\n        \"begin\": \"(?=\\\\s*(,|::|\\\\())\",\n        \"comment\": \"Attribute list.\",\n        \"contentName\": \"meta.attribute-list.procedure.fortran\",\n        \"end\": \"(::)|(?=[;!\\\\n])\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.operator.double-colon.fortran\"\n          }\n        },\n        \"patterns\": [{\n          \"begin\": \"(,)|^|(?<=&)\",\n          \"beginCaptures\": {\n            \"1\": {\n              \"name\": \"punctuation.comma.fortran\"\n            }\n          },\n          \"end\": \"(?=::|[,&;!\\\\n])\",\n          \"patterns\": [{\n            \"include\": \"#access-attribute\"\n          }, {\n            \"include\": \"#intent-attribute\"\n          }, {\n            \"include\": \"#optional-attribute\"\n          }, {\n            \"include\": \"#pointer-attribute\"\n          }, {\n            \"include\": \"#protected-attribute\"\n          }, {\n            \"include\": \"#save-attribute\"\n          }, {\n            \"include\": \"#invalid-word\"\n          }]\n        }]\n      }, {\n        \"include\": \"#procedure-name-list\"\n      }]\n    },\n    \"procedure-type\": {\n      \"comment\": \"Introduced in the Fortran ???? standard.\",\n      \"patterns\": [{\n        \"begin\": \"(?i)\\\\b(procedure)\\\\s*(\\\\()\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"storage.type.procedure.fortran\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.parentheses.left.fortran\"\n          }\n        },\n        \"contentName\": \"meta.type-spec.fortran\",\n        \"end\": \"(\\\\))\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.parentheses.right.fortran\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#types\"\n        }, {\n          \"include\": \"#procedure-name\"\n        }]\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"storage.type.procedure.fortran\"\n          }\n        },\n        \"match\": \"(?i)\\\\b(procedure)\\\\b\"\n      }]\n    },\n    \"program-definition\": {\n      \"begin\": \"(?i)(?=\\\\b(program)\\\\b)\",\n      \"comment\": \"Introduced in the Fortran 1977 standard.\",\n      \"end\": \"(?=[;!\\\\n])\",\n      \"name\": \"meta.program.fortran\",\n      \"patterns\": [{\n        \"captures\": {\n          \"1\": {\n            \"name\": \"keyword.control.program.fortran\"\n          }\n        },\n        \"match\": \"(?i)\\\\G\\\\s*\\\\b(program)\\\\b\"\n      }, {\n        \"applyEndPatternLast\": 1,\n        \"begin\": \"(?i)\\\\s*\\\\b([a-z]\\\\w*)\\\\b\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"entity.name.program.fortran\"\n          }\n        },\n        \"comment\": \"Program body.\",\n        \"end\": \"(?ix)\\\\b(?:(end\\\\s*program)(?:\\\\s+([a-z_]\\\\w*))?|(end))\\\\b\\\\s*([^;!\\\\n]+)?(?=[;!\\\\n])\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.endprogram.fortran\"\n          },\n          \"2\": {\n            \"name\": \"entity.name.program.fortran\"\n          },\n          \"3\": {\n            \"name\": \"keyword.control.endprogram.fortran\"\n          },\n          \"4\": {\n            \"name\": \"invalid.error.program-definition.fortran\"\n          }\n        },\n        \"patterns\": [{\n          \"begin\": \"\\\\G\",\n          \"comment\": \"Program specification block.\",\n          \"end\": \"(?i)(?=\\\\b(?:end\\\\s*[;!\\\\n]|end\\\\s*program\\\\b))\",\n          \"name\": \"meta.block.specification.program.fortran\",\n          \"patterns\": [{\n            \"begin\": \"(?i)\\\\b(contains)\\\\b\",\n            \"beginCaptures\": {\n              \"1\": {\n                \"name\": \"keyword.control.contains.fortran\"\n              }\n            },\n            \"comment\": \"Program contains block.\",\n            \"end\": \"(?i)(?=(?:end\\\\s*[;!\\\\n]|end\\\\s*program\\\\b))\",\n            \"name\": \"meta.block.contains.fortran\",\n            \"patterns\": [{\n              \"include\": \"$base\"\n            }]\n          }, {\n            \"include\": \"$base\"\n          }]\n        }]\n      }]\n    },\n    \"protected-attribute\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"storage.modifier.protected.fortran\"\n        }\n      },\n      \"comment\": \"Introduced in the Fortran 2003 standard.\",\n      \"match\": \"(?i)\\\\s*\\\\b(protected)\\\\b\"\n    },\n    \"public-attribute\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"storage.modifier.public.fortran\"\n        }\n      },\n      \"comment\": \"Introduced in the Fortran 1990 standard.\",\n      \"match\": \"(?i)\\\\s*\\\\b(public)\\\\b\"\n    },\n    \"pure-attribute\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"storage.modifier.impure.fortran\"\n        },\n        \"2\": {\n          \"name\": \"storage.modifier.pure.fortran\"\n        }\n      },\n      \"comment\": \"Introduced in the Fortran 1995 standard.\",\n      \"match\": \"(?i)\\\\s*\\\\b(?:(impure)|(pure))\\\\b\"\n    },\n    \"recursive-attribute\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"storage.modifier.non_recursive.fortran\"\n        },\n        \"2\": {\n          \"name\": \"storage.modifier.recursive.fortran\"\n        }\n      },\n      \"comment\": \"Introduced in the Fortran 1977 standard.\",\n      \"match\": \"(?i)\\\\s*\\\\b(?:(non_recursive)|(recursive))\\\\b\"\n    },\n    \"result-statement\": {\n      \"begin\": \"(?i)\\\\s*\\\\b(result)\\\\s*(\\\\()\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.result.fortran\"\n        },\n        \"2\": {\n          \"name\": \"punctuation.parentheses.left.fortran\"\n        }\n      },\n      \"comment\": \"Introduced in the Fortran 1990 standard.\",\n      \"end\": \"(\\\\))\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.parentheses.right.fortran\"\n        }\n      },\n      \"patterns\": [{\n        \"include\": \"#dummy-variable\"\n      }]\n    },\n    \"return-statement\": {\n      \"begin\": \"(?i)\\\\s*\\\\b(return)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.return.fortran\"\n        }\n      },\n      \"comment\": \"Introduced in the Fortran 1977 standard.\",\n      \"end\": \"(?=[;!\\\\n])\",\n      \"name\": \"meta.statement.control.return.fortran\",\n      \"patterns\": [{\n        \"include\": \"#invalid-character\"\n      }]\n    },\n    \"save-attribute\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"storage.modifier.save.fortran\"\n        }\n      },\n      \"comment\": \"Introduced in the Fortran 1977 standard.\",\n      \"match\": \"(?i)\\\\s*\\\\b(save)\\\\b\"\n    },\n    \"select-case-construct\": {\n      \"begin\": \"(?i)\\\\b(select\\\\s*case)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.selectcase.fortran\"\n        }\n      },\n      \"comment\": \"Select case construct. Introduced in the Fortran 1990 standard.\",\n      \"end\": \"(?i)\\\\b(end\\\\s*select)\\\\b\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.endselect.fortran\"\n        }\n      },\n      \"name\": \"meta.block.select.case.fortran\",\n      \"patterns\": [{\n        \"include\": \"#parentheses\"\n      }, {\n        \"begin\": \"(?i)\\\\b(case)\\\\b\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.case.fortran\"\n          }\n        },\n        \"end\": \"(?i)(?=[;!\\\\n])\",\n        \"patterns\": [{\n          \"captures\": {\n            \"1\": {\n              \"name\": \"keyword.control.default.fortran\"\n            }\n          },\n          \"match\": \"(?i)\\\\G\\\\s*\\\\b(default)\\\\b\"\n        }, {\n          \"include\": \"#parentheses\"\n        }, {\n          \"include\": \"#invalid-word\"\n        }]\n      }, {\n        \"include\": \"$base\"\n      }]\n    },\n    \"select-rank-construct\": {\n      \"begin\": \"(?i)\\\\b(select\\\\s*rank)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.selectrank.fortran\"\n        }\n      },\n      \"comment\": \"Select rank construct. Introduced in the Fortran 2008 standard.\",\n      \"end\": \"(?i)\\\\b(end\\\\s*select)\\\\b\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.endselect.fortran\"\n        }\n      },\n      \"name\": \"meta.block.select.rank.fortran\",\n      \"patterns\": [{\n        \"include\": \"#parentheses\"\n      }, {\n        \"begin\": \"(?i)\\\\b(rank)\\\\b\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.rank.fortran\"\n          }\n        },\n        \"end\": \"(?i)(?=[;!\\\\n])\",\n        \"patterns\": [{\n          \"captures\": {\n            \"1\": {\n              \"name\": \"keyword.control.default.fortran\"\n            }\n          },\n          \"match\": \"(?i)\\\\G\\\\s*\\\\b(default)\\\\b\"\n        }, {\n          \"include\": \"#parentheses\"\n        }, {\n          \"include\": \"#invalid-word\"\n        }]\n      }, {\n        \"include\": \"$base\"\n      }]\n    },\n    \"select-type-construct\": {\n      \"begin\": \"(?i)\\\\b(select\\\\s*type)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.selecttype.fortran\"\n        }\n      },\n      \"comment\": \"Select type construct. Introduced in the Fortran 2003 standard.\",\n      \"end\": \"(?i)\\\\b(end\\\\s*select)\\\\b\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.endselect.fortran\"\n        }\n      },\n      \"name\": \"meta.block.select.type.fortran\",\n      \"patterns\": [{\n        \"include\": \"#parentheses\"\n      }, {\n        \"begin\": \"(?i)\\\\b(?:(class)|(type))\\\\b\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.class.fortran\"\n          },\n          \"2\": {\n            \"name\": \"keyword.control.type.fortran\"\n          }\n        },\n        \"end\": \"(?i)(?=[;!\\\\n])\",\n        \"patterns\": [{\n          \"captures\": {\n            \"1\": {\n              \"name\": \"keyword.control.default.fortran\"\n            }\n          },\n          \"match\": \"(?i)\\\\G\\\\s*\\\\b(default)\\\\b\"\n        }, {\n          \"captures\": {\n            \"1\": {\n              \"name\": \"keyword.control.is.fortran\"\n            }\n          },\n          \"match\": \"(?i)\\\\G\\\\s*\\\\b(is)\\\\b\"\n        }, {\n          \"include\": \"#parentheses\"\n        }, {\n          \"include\": \"#invalid-word\"\n        }]\n      }, {\n        \"include\": \"$base\"\n      }]\n    },\n    \"sequence-attribute\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"storage.modifier.sequence.fortran\"\n        }\n      },\n      \"comment\": \"Introduced in the Fortran 20?? standard.\",\n      \"match\": \"(?i)\\\\s*\\\\b(sequence)\\\\b\"\n    },\n    \"specification-statements\": {\n      \"patterns\": [{\n        \"include\": \"#attribute-specification-statement\"\n      }, {\n        \"include\": \"#common-statement\"\n      }, {\n        \"include\": \"#data-statement\"\n      }, {\n        \"include\": \"#equivalence-statement\"\n      }, {\n        \"include\": \"#implicit-statement\"\n      }, {\n        \"include\": \"#namelist-statement\"\n      }, {\n        \"include\": \"#use-statement\"\n      }]\n    },\n    \"stop-statement\": {\n      \"begin\": \"(?i)\\\\s*\\\\b(stop)\\\\b(?:\\\\s*\\\\b([a-z]\\\\w*)\\\\b)?\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.stop.fortran\"\n        },\n        \"2\": {\n          \"name\": \"meta.label.stop.stop\"\n        }\n      },\n      \"comment\": \"Introduced in the Fortran 1977 standard.\",\n      \"end\": \"(?=[;!\\\\n])\",\n      \"name\": \"meta.statement.control.stop.fortran\",\n      \"patterns\": [{\n        \"include\": \"#constants\"\n      }, {\n        \"include\": \"#string-operators\"\n      }, {\n        \"include\": \"#invalid-character\"\n      }]\n    },\n    \"string-constant\": {\n      \"comment\": \"Introduced in the Fortran 1977 standard.\",\n      \"patterns\": [{\n        \"applyEndPatternLast\": 1,\n        \"begin\": \"'\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.begin.fortran\"\n          }\n        },\n        \"comment\": \"String\",\n        \"end\": \"'\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.end.fortran\"\n          }\n        },\n        \"name\": \"string.quoted.single.fortran\",\n        \"patterns\": [{\n          \"match\": \"''\",\n          \"name\": \"constant.character.escape.apostrophe.fortran\"\n        }]\n      }, {\n        \"applyEndPatternLast\": 1,\n        \"begin\": '\"',\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.begin.fortran\"\n          }\n        },\n        \"comment\": \"String\",\n        \"end\": '\"',\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.end.fortran\"\n          }\n        },\n        \"name\": \"string.quoted.double.fortran\",\n        \"patterns\": [{\n          \"match\": '\"\"',\n          \"name\": \"constant.character.escape.quote.fortran\"\n        }]\n      }]\n    },\n    \"string-line-continuation-operator\": {\n      \"begin\": \"(&)(?=\\\\s*\\\\n)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.operator.line-continuation.fortran\"\n        }\n      },\n      \"comment\": \"Operator that allows a line to be continued on the next line.\",\n      \"end\": \"(?i)^(?:(?=\\\\s*[^\\\\s!&])|\\\\s*(&))\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.operator.line-continuation.fortran\"\n        }\n      },\n      \"patterns\": [{\n        \"include\": \"#comments\"\n      }, {\n        \"match\": \"\\\\S.*\",\n        \"name\": \"invalid.error.string-line-cont.fortran\"\n      }]\n    },\n    \"string-operators\": {\n      \"comment\": \"Introduced in the Fortran 19?? standard.\",\n      \"match\": \"(\\\\/\\\\/)\",\n      \"name\": \"keyword.other.concatination.fortran\"\n    },\n    \"submodule-definition\": {\n      \"begin\": \"(?i)(?=\\\\b(submodule)\\\\s*\\\\()\",\n      \"comment\": \"Introduced in the Fortran 2008 standard.\",\n      \"end\": \"(?=[;!\\\\n])\",\n      \"name\": \"meta.submodule.fortran\",\n      \"patterns\": [{\n        \"begin\": \"(?i)\\\\G\\\\s*\\\\b(submodule)\\\\s*(\\\\()\\\\s*(\\\\w+)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.other.submodule.fortran\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.parentheses.left.fortran\"\n          },\n          \"3\": {\n            \"name\": \"entity.name.class.submodule.fortran\"\n          }\n        },\n        \"end\": \"(\\\\))\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.parentheses.left.fortran\"\n          }\n        },\n        \"patterns\": []\n      }, {\n        \"applyEndPatternLast\": 1,\n        \"begin\": \"(?i)\\\\s*\\\\b([a-z]\\\\w*)\\\\b\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"entity.name.module.submodule.fortran\"\n          }\n        },\n        \"comment\": \"Submodule body.\",\n        \"end\": \"(?ix)\\\\s*\\\\b(?:(end\\\\s*submodule)(?:\\\\s+([a-z_]\\\\w*))?|(end))\\\\b \\\\s*([^;!\\\\n]+)?(?=[;!\\\\n])\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.other.endsubmodule.fortran\"\n          },\n          \"2\": {\n            \"name\": \"entity.name.module.submodule.fortran\"\n          },\n          \"3\": {\n            \"name\": \"keyword.other.endsubmodule.fortran\"\n          },\n          \"4\": {\n            \"name\": \"invalid.error.submodule.fortran\"\n          }\n        },\n        \"patterns\": [{\n          \"begin\": \"\\\\G\",\n          \"comment\": \"Submodule specification block.\",\n          \"end\": \"(?i)(?=\\\\b(?:end\\\\s*[;!\\\\n]|end\\\\s*submodule\\\\b))\",\n          \"name\": \"meta.block.specification.submodule.fortran\",\n          \"patterns\": [{\n            \"begin\": \"(?i)\\\\b(contains)\\\\b\",\n            \"beginCaptures\": {\n              \"1\": {\n                \"name\": \"keyword.control.contains.fortran\"\n              }\n            },\n            \"comment\": \"Submodule contains block.\",\n            \"end\": \"(?i)(?=\\\\s*(?:end\\\\s*[;!\\\\n]|end\\\\s*submodule\\\\b))\",\n            \"name\": \"meta.block.contains.fortran\",\n            \"patterns\": [{\n              \"include\": \"$base\"\n            }]\n          }, {\n            \"include\": \"$base\"\n          }]\n        }]\n      }]\n    },\n    \"subroutine-definition\": {\n      \"begin\": `(?i)(?=([^:'\";!\\\\n](?!\\\\bend))*\\\\bsubroutine\\\\b)`,\n      \"comment\": \"Subroutine program unit. Introduced in the Fortran 1977 standard.\",\n      \"end\": \"(?=[;!\\\\n])\",\n      \"name\": \"meta.subroutine.fortran\",\n      \"patterns\": [{\n        \"begin\": \"(?i)(?=\\\\G\\\\s*(?!\\\\bsubroutine\\\\b))\",\n        \"comment\": \"Attribute list.\",\n        \"end\": \"(?i)(?=\\\\bsubroutine\\\\b)\",\n        \"name\": \"meta.attribute-list.subroutine.fortran\",\n        \"patterns\": [{\n          \"include\": \"#elemental-attribute\"\n        }, {\n          \"include\": \"#module-attribute\"\n        }, {\n          \"include\": \"#pure-attribute\"\n        }, {\n          \"include\": \"#recursive-attribute\"\n        }, {\n          \"include\": \"#invalid-word\"\n        }]\n      }, {\n        \"begin\": \"(?i)\\\\s*\\\\b(subroutine)\\\\b\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.other.subroutine.fortran\"\n          }\n        },\n        \"end\": \"(?=[;!\\\\n])\",\n        \"patterns\": [{\n          \"begin\": \"(?i)\\\\G\\\\s*\\\\b([a-z]\\\\w*)\\\\b\",\n          \"beginCaptures\": {\n            \"1\": {\n              \"name\": \"entity.name.function.subroutine.fortran\"\n            }\n          },\n          \"comment\": \"Subroutine body.\",\n          \"end\": \"(?ix)\\\\b(?:(end\\\\s*subroutine)(?:\\\\s+([a-z_]\\\\w*))?|(end))\\\\b \\\\s*([^;!\\\\n]+)?(?=[;!\\\\n])\",\n          \"endCaptures\": {\n            \"1\": {\n              \"name\": \"keyword.other.endsubroutine.fortran\"\n            },\n            \"2\": {\n              \"name\": \"entity.name.function.subroutine.fortran\"\n            },\n            \"3\": {\n              \"name\": \"keyword.other.endsubroutine.fortran\"\n            },\n            \"4\": {\n              \"name\": \"invalid.error.subroutine.fortran\"\n            }\n          },\n          \"patterns\": [{\n            \"begin\": \"\\\\G(?!\\\\s*[;!\\\\n])\",\n            \"comment\": \"Rest of the first line in subroutine construct.\",\n            \"end\": \"(?=[;!\\\\n])\",\n            \"name\": \"meta.first-line.fortran\",\n            \"patterns\": [{\n              \"include\": \"#dummy-variable-list\"\n            }, {\n              \"include\": \"#language-binding-attribute\"\n            }]\n          }, {\n            \"begin\": \"(?i)(?!\\\\b(?:end\\\\s*[;!\\\\n]|end\\\\s*subroutine\\\\b))\",\n            \"comment\": \"Specification and execution block.\",\n            \"end\": \"(?i)(?=\\\\b(?:end\\\\s*[;!\\\\n]|end\\\\s*subroutine\\\\b))\",\n            \"name\": \"meta.block.specification.subroutine.fortran\",\n            \"patterns\": [{\n              \"begin\": \"(?i)\\\\b(contains)\\\\b\",\n              \"beginCaptures\": {\n                \"1\": {\n                  \"name\": \"keyword.control.contains.fortran\"\n                }\n              },\n              \"comment\": \"Contains block.\",\n              \"end\": \"(?i)(?=(?:end\\\\s*[;!\\\\n]|end\\\\s*subroutine\\\\b))\",\n              \"name\": \"meta.block.contains.fortran\",\n              \"patterns\": [{\n                \"include\": \"$base\"\n              }]\n            }, {\n              \"include\": \"$base\"\n            }]\n          }]\n        }]\n      }]\n    },\n    \"sync-all-statement\": {\n      \"begin\": \"(?i)\\\\b(sync all|sync memory)(\\\\s*(?=\\\\())?\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.sync-all-memory.fortran\"\n        },\n        \"2\": {\n          \"name\": \"punctuation.parentheses.left.fortran\"\n        }\n      },\n      \"comment\": \"Introduced in the Fortran 2018 standard.\",\n      \"end\": \"(?<!\\\\G)\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.parentheses.right.fortran\"\n        }\n      },\n      \"name\": \"meta.statement.sync-all-memory.fortran\",\n      \"patterns\": [{\n        \"include\": \"#parentheses-dummy-variables\"\n      }]\n    },\n    \"sync-statement\": {\n      \"begin\": \"(?i)\\\\b(sync images|sync team)\\\\s*(?=\\\\()\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.sync-images-team.fortran\"\n        },\n        \"2\": {\n          \"name\": \"punctuation.parentheses.left.fortran\"\n        }\n      },\n      \"comment\": \"Introduced in the Fortran 2018 standard.\",\n      \"end\": \"(?<!\\\\G)\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.parentheses.right.fortran\"\n        }\n      },\n      \"name\": \"meta.statement.sync-images-team.fortran\",\n      \"patterns\": [{\n        \"include\": \"#parentheses-dummy-variables\"\n      }]\n    },\n    \"target-attribute\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"storage.modifier.target.fortran\"\n        }\n      },\n      \"comment\": \"Introduced in the Fortran 1990 standard.\",\n      \"match\": \"(?i)\\\\s*\\\\b(target)\\\\b\"\n    },\n    \"type-specification-statements\": {\n      \"begin\": `(?ix)(?=\\\\b(?:character|class|complex|double\\\\s*precision|double\\\\s*complex|integer|logical|real|type|dimension)\\\\b(?![^'\";!\\\\n:]*\\\\bfunction\\\\b))`,\n      \"comment\": \"Supported types for function and escape :: if function is used as a variable name (which is bad practice).\",\n      \"end\": \"(?=[\\\\);!\\\\n])\",\n      \"name\": \"meta.specification.type.fortran\",\n      \"patterns\": [{\n        \"include\": \"#types\"\n      }, {\n        \"begin\": \"(?=\\\\s*(,|::))\",\n        \"comment\": \"Attribute list.\",\n        \"contentName\": \"meta.attribute-list.type-specification-statements.fortran\",\n        \"end\": \"(::)|(?=[;!\\\\n])\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.operator.double-colon.fortran\"\n          }\n        },\n        \"patterns\": [{\n          \"begin\": \"(,)|^|(?<=&)\",\n          \"beginCaptures\": {\n            \"1\": {\n              \"name\": \"punctuation.comma.fortran\"\n            }\n          },\n          \"end\": \"(?=::|[,&;!\\\\n])\",\n          \"patterns\": [{\n            \"include\": \"#access-attribute\"\n          }, {\n            \"include\": \"#allocatable-attribute\"\n          }, {\n            \"include\": \"#asynchronous-attribute\"\n          }, {\n            \"include\": \"#codimension-attribute\"\n          }, {\n            \"include\": \"#contiguous-attribute\"\n          }, {\n            \"include\": \"#dimension-attribute\"\n          }, {\n            \"include\": \"#external-attribute\"\n          }, {\n            \"include\": \"#intent-attribute\"\n          }, {\n            \"include\": \"#intrinsic-attribute\"\n          }, {\n            \"include\": \"#language-binding-attribute\"\n          }, {\n            \"include\": \"#optional-attribute\"\n          }, {\n            \"include\": \"#parameter-attribute\"\n          }, {\n            \"include\": \"#pointer-attribute\"\n          }, {\n            \"include\": \"#protected-attribute\"\n          }, {\n            \"include\": \"#save-attribute\"\n          }, {\n            \"include\": \"#target-attribute\"\n          }, {\n            \"include\": \"#value-attribute\"\n          }, {\n            \"include\": \"#volatile-attribute\"\n          }, {\n            \"include\": \"#invalid-word\"\n          }]\n        }]\n      }, {\n        \"include\": \"#name-list\"\n      }]\n    },\n    \"types\": {\n      \"patterns\": [{\n        \"include\": \"#character-type\"\n      }, {\n        \"include\": \"#derived-type\"\n      }, {\n        \"include\": \"#logical-type\"\n      }, {\n        \"include\": \"#numeric-type\"\n      }]\n    },\n    \"unnamed-control-constructs\": {\n      \"patterns\": [{\n        \"include\": \"#associate-construct\"\n      }, {\n        \"include\": \"#block-construct\"\n      }, {\n        \"include\": \"#critical-construct\"\n      }, {\n        \"include\": \"#do-construct\"\n      }, {\n        \"include\": \"#forall-construct\"\n      }, {\n        \"include\": \"#if-construct\"\n      }, {\n        \"include\": \"#select-case-construct\"\n      }, {\n        \"include\": \"#select-type-construct\"\n      }, {\n        \"include\": \"#select-rank-construct\"\n      }, {\n        \"include\": \"#where-construct\"\n      }]\n    },\n    \"use-statement\": {\n      \"begin\": \"(?i)\\\\b(use)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.use.fortran\"\n        }\n      },\n      \"comment\": \"Introduced in the Fortran 1990 standard.\",\n      \"end\": \"(?=[;!\\\\n])\",\n      \"name\": \"meta.statement.use.fortran\",\n      \"patterns\": [{\n        \"begin\": \"(?=\\\\s*(,|::|\\\\())\",\n        \"comment\": \"Attribute list.\",\n        \"contentName\": \"meta.attribute-list.namelist.fortran\",\n        \"end\": \"(::)|(?=[;!\\\\n])\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.operator.double-colon.fortran\"\n          }\n        },\n        \"patterns\": [{\n          \"begin\": \"(,)\",\n          \"beginCaptures\": {\n            \"1\": {\n              \"name\": \"punctuation.comma.fortran\"\n            }\n          },\n          \"end\": \"(?=::|[,;!\\\\n])\",\n          \"patterns\": [{\n            \"include\": \"#intrinsic-attribute\"\n          }, {\n            \"include\": \"#non-intrinsic-attribute\"\n          }, {\n            \"include\": \"#invalid-word\"\n          }]\n        }]\n      }, {\n        \"begin\": \"(?i)\\\\s*\\\\b([a-z]\\\\w*)\\\\b\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"entity.name.class.module.fortran\"\n          }\n        },\n        \"end\": \"(?=[;!\\\\n])\",\n        \"patterns\": [{\n          \"begin\": \"(,)\",\n          \"beginCaptures\": {\n            \"1\": {\n              \"name\": \"punctuation.comma.fortran\"\n            }\n          },\n          \"end\": \"(?=::|[;!\\\\n])\",\n          \"patterns\": [{\n            \"begin\": \"(?i)\\\\s*\\\\b(only\\\\s*:)\",\n            \"beginCaptures\": {\n              \"1\": {\n                \"name\": \"keyword.control.only.fortran\"\n              }\n            },\n            \"end\": \"(?=[;!\\\\n])\",\n            \"patterns\": [{\n              \"include\": \"#operator-keyword\"\n            }, {\n              \"include\": \"$base\"\n            }]\n          }, {\n            \"begin\": \"(?i)(?=\\\\s*[a-z])\",\n            \"contentName\": \"meta.name-list.fortran\",\n            \"end\": \"(?=[;!\\\\n])\",\n            \"patterns\": [{\n              \"include\": \"#operator-keyword\"\n            }, {\n              \"include\": \"$base\"\n            }]\n          }]\n        }]\n      }]\n    },\n    \"user-defined-operators\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"keyword.operator.user-defined.fortran\"\n        }\n      },\n      \"match\": \"(?i)\\\\s*(\\\\.[a-z]+\\\\.)\"\n    },\n    \"value-attribute\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"storage.modifier.value.fortran\"\n        }\n      },\n      \"comment\": \"Introduced in the Fortran 2003 standard.\",\n      \"match\": \"(?i)\\\\s*\\\\b(value)\\\\b\"\n    },\n    \"variable\": {\n      \"applyEndPatternLast\": 1,\n      \"begin\": \"(?i)\\\\b(?=[a-z])\",\n      \"end\": \"(?<!\\\\G)\",\n      \"name\": \"meta.parameter.fortran\",\n      \"patterns\": [{\n        \"include\": \"#brackets\"\n      }, {\n        \"include\": \"#derived-type-operators\"\n      }, {\n        \"include\": \"#parentheses-dummy-variables\"\n      }, {\n        \"include\": \"#word\"\n      }]\n    },\n    \"volatile-attribute\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"storage.modifier.volatile.fortran\"\n        }\n      },\n      \"comment\": \"Introduced in the Fortran 2003 standard.\",\n      \"match\": \"(?i)\\\\s*\\\\b(volatile)\\\\b\"\n    },\n    \"where-construct\": {\n      \"patterns\": [{\n        \"applyEndPatternLast\": 1,\n        \"begin\": \"(?i)\\\\b(where)\\\\b\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.where.fortran\"\n          }\n        },\n        \"comment\": \"Introduced in the Fortran 1990 standard.\",\n        \"end\": \"(?<!\\\\G)\",\n        \"patterns\": [{\n          \"include\": \"#logical-control-expression\"\n        }, {\n          \"begin\": \"(?<=\\\\))(?=\\\\s*[;!\\\\n])\",\n          \"end\": \"(?i)\\\\b(end\\\\s*where)\\\\b\",\n          \"endCaptures\": {\n            \"1\": {\n              \"name\": \"keyword.control.endwhere.fortran\"\n            }\n          },\n          \"name\": \"meta.block.where.fortran\",\n          \"patterns\": [{\n            \"begin\": \"(?i)\\\\s*\\\\b(else\\\\s*where)\\\\b\",\n            \"beginCaptures\": {\n              \"1\": {\n                \"name\": \"keyword.control.elsewhere.fortran\"\n              }\n            },\n            \"end\": \"(?=[;!\\\\n])\",\n            \"patterns\": [{\n              \"include\": \"#parentheses\"\n            }, {\n              \"include\": \"#invalid-word\"\n            }]\n          }, {\n            \"include\": \"$base\"\n          }]\n        }, {\n          \"begin\": \"(?i)(?<=\\\\))(?!\\\\s*[;!\\\\n])\",\n          \"end\": \"\\\\n\",\n          \"name\": \"meta.statement.control.where.fortran\",\n          \"patterns\": [{\n            \"include\": \"$base\"\n          }]\n        }]\n      }]\n    },\n    \"while-attribute\": {\n      \"begin\": \"(?i)\\\\G\\\\s*\\\\b(while)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.while.fortran\"\n        }\n      },\n      \"comment\": \"Introduced in the Fortran 1995 standard.\",\n      \"end\": \"(?=[;!\\\\n])\",\n      \"patterns\": [{\n        \"include\": \"#parentheses\"\n      }, {\n        \"include\": \"#invalid-word\"\n      }]\n    },\n    \"word\": {\n      \"patterns\": [{\n        \"match\": \"(?i)(?:\\\\G|(?<=\\\\%))\\\\s*\\\\b([a-z]\\\\w*)\\\\b\"\n      }]\n    }\n  },\n  \"scopeName\": \"source.fortran.free\",\n  \"aliases\": [\"f90\", \"f95\", \"f03\", \"f08\", \"f18\"]\n});\nvar fortran_free_form = [lang];\nexport { fortran_free_form as default };"],
  "mappings": "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",
  "names": []
}
