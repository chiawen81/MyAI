{
  "version": 3,
  "sources": ["../../../../../../node_modules/shiki/dist/langs/angular-expression.mjs", "../../../../../../node_modules/shiki/dist/langs/angular-let-declaration.mjs", "../../../../../../node_modules/shiki/dist/langs/angular-template.mjs", "../../../../../../node_modules/shiki/dist/langs/angular-template-blocks.mjs", "../../../../../../node_modules/shiki/dist/langs/angular-html.mjs"],
  "sourcesContent": ["const lang = Object.freeze({\n  \"injectionSelector\": \"L:text.html -comment\",\n  \"name\": \"angular-expression\",\n  \"patterns\": [{\n    \"include\": \"#ngExpression\"\n  }],\n  \"repository\": {\n    \"arrayLiteral\": {\n      \"begin\": \"\\\\[\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"meta.brace.square.ts\"\n        }\n      },\n      \"end\": \"\\\\]\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"meta.brace.square.ts\"\n        }\n      },\n      \"name\": \"meta.array.literal.ts\",\n      \"patterns\": [{\n        \"include\": \"#ngExpression\"\n      }, {\n        \"include\": \"#punctuationComma\"\n      }]\n    },\n    \"booleanLiteral\": {\n      \"patterns\": [{\n        \"match\": \"(?<!\\\\.|\\\\$)\\\\btrue\\\\b(?!\\\\$)\",\n        \"name\": \"constant.language.boolean.true.ts\"\n      }, {\n        \"match\": \"(?<!\\\\.|\\\\$)\\\\bfalse\\\\b(?!\\\\$)\",\n        \"name\": \"constant.language.boolean.false.ts\"\n      }]\n    },\n    \"expressionOperator\": {\n      \"patterns\": [{\n        \"captures\": {\n          \"1\": {\n            \"name\": \"keyword.operator.logical.ts\"\n          },\n          \"2\": {\n            \"name\": \"entity.name.function.pipe.ng\"\n          }\n        },\n        \"match\": \"((?<!\\\\|)\\\\|(?!\\\\|))\\\\s?([a-zA-Z0-9\\\\-\\\\_\\\\$]*)\"\n      }, {\n        \"match\": \"(?<!\\\\.|\\\\$)\\\\b(let)\\\\b(?!\\\\$)\",\n        \"name\": \"storage.type.ts\"\n      }, {\n        \"match\": \"(?<!\\\\.|\\\\$)\\\\b(await)\\\\b(?!\\\\$)\",\n        \"name\": \"keyword.control.flow.ts\"\n      }, {\n        \"match\": \"(?<!\\\\.|\\\\$)\\\\bdelete\\\\b(?!\\\\$)\",\n        \"name\": \"keyword.operator.expression.delete.ts\"\n      }, {\n        \"match\": \"(?<!\\\\.|\\\\$)\\\\bin\\\\b(?!\\\\$)\",\n        \"name\": \"keyword.operator.expression.in.ts\"\n      }, {\n        \"match\": \"(?<!\\\\.|\\\\$)\\\\bof\\\\b(?!\\\\$)\",\n        \"name\": \"keyword.operator.expression.of.ts\"\n      }, {\n        \"match\": \"(?<!\\\\.|\\\\$)\\\\bif\\\\b(?!\\\\$)\",\n        \"name\": \"keyword.control.if.ts\"\n      }, {\n        \"match\": \"(?<!\\\\.|\\\\$)\\\\belse\\\\b(?!\\\\$)\",\n        \"name\": \"keyword.control.else.ts\"\n      }, {\n        \"match\": \"(?<!\\\\.|\\\\$)\\\\bthen\\\\b(?!\\\\$)\",\n        \"name\": \"keyword.control.then.ts\"\n      }, {\n        \"match\": \"(?<!\\\\.|\\\\$)\\\\binstanceof\\\\b(?!\\\\$)\",\n        \"name\": \"keyword.operator.expression.instanceof.ts\"\n      }, {\n        \"match\": \"(?<!\\\\.|\\\\$)\\\\bnew\\\\b(?!\\\\$)\",\n        \"name\": \"keyword.operator.new.ts\"\n      }, {\n        \"match\": \"(?<!\\\\.|\\\\$)\\\\bvoid\\\\b(?!\\\\$)\",\n        \"name\": \"keyword.operator.expression.void.ts\"\n      }, {\n        \"begin\": \"(?<!\\\\.|\\\\$)\\\\bas\\\\b(?!\\\\$)\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"storage.type.as.ts\"\n          }\n        },\n        \"end\": `(?=$|\"|'|[;,:})\\\\]])`,\n        \"patterns\": [{\n          \"include\": \"#type\"\n        }]\n      }, {\n        \"match\": \"\\\\*=|(?<!\\\\()\\\\/=|%=|\\\\+=|\\\\-=\",\n        \"name\": \"keyword.operator.assignment.compound.ts\"\n      }, {\n        \"match\": \"\\\\&=|\\\\^=|<<=|>>=|>>>=|\\\\|=\",\n        \"name\": \"keyword.operator.assignment.compound.bitwise.ts\"\n      }, {\n        \"match\": \"<<|>>>|>>\",\n        \"name\": \"keyword.operator.bitwise.shift.ts\"\n      }, {\n        \"match\": \"===|!==|==|!=\",\n        \"name\": \"keyword.operator.comparison.ts\"\n      }, {\n        \"match\": \"<=|>=|<>|<|>\",\n        \"name\": \"keyword.operator.relational.ts\"\n      }, {\n        \"match\": \"\\\\!|&&|\\\\?\\\\?|\\\\|\\\\|\",\n        \"name\": \"keyword.operator.logical.ts\"\n      }, {\n        \"match\": \"\\\\&|~|\\\\^|\\\\|\",\n        \"name\": \"keyword.operator.bitwise.ts\"\n      }, {\n        \"match\": \"\\\\=\",\n        \"name\": \"keyword.operator.assignment.ts\"\n      }, {\n        \"match\": \"--\",\n        \"name\": \"keyword.operator.decrement.ts\"\n      }, {\n        \"match\": \"\\\\+\\\\+\",\n        \"name\": \"keyword.operator.increment.ts\"\n      }, {\n        \"match\": \"\\\\%|\\\\*|\\\\/|-|\\\\+\",\n        \"name\": \"keyword.operator.arithmetic.ts\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"keyword.operator.arithmetic.ts\"\n          }\n        },\n        \"match\": \"(?<=[_$[:alnum:]])\\\\s*(\\\\/)(?![\\\\/*])\"\n      }, {\n        \"include\": \"#typeofOperator\"\n      }]\n    },\n    \"functionCall\": {\n      \"begin\": \"(?=(\\\\??\\\\.\\\\s*)?([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(<([^<>]|\\\\<[^<>]+\\\\>)+>\\\\s*)?\\\\()\",\n      \"end\": \"(?<=\\\\))(?!(\\\\??\\\\.\\\\s*)?([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(<([^<>]|\\\\<[^<>]+\\\\>)+>\\\\s*)?\\\\()\",\n      \"patterns\": [{\n        \"match\": \"\\\\?\",\n        \"name\": \"punctuation.accessor.ts\"\n      }, {\n        \"match\": \"\\\\.\",\n        \"name\": \"punctuation.accessor.ts\"\n      }, {\n        \"match\": \"([_$[:alpha:]][_$[:alnum:]]*)\",\n        \"name\": \"entity.name.function.ts\"\n      }, {\n        \"begin\": \"\\\\<\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.typeparameters.begin.ts\"\n          }\n        },\n        \"end\": \"\\\\>\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.typeparameters.end.ts\"\n          }\n        },\n        \"name\": \"meta.type.parameters.ts\",\n        \"patterns\": [{\n          \"include\": \"#type\"\n        }, {\n          \"include\": \"#punctuationComma\"\n        }]\n      }, {\n        \"include\": \"#parenExpression\"\n      }]\n    },\n    \"functionParameters\": {\n      \"begin\": \"\\\\(\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.parameters.begin.ts\"\n        }\n      },\n      \"end\": \"\\\\)\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.parameters.end.ts\"\n        }\n      },\n      \"name\": \"meta.parameters.ts\",\n      \"patterns\": [{\n        \"include\": \"#decorator\"\n      }, {\n        \"include\": \"#parameterName\"\n      }, {\n        \"include\": \"#variableInitializer\"\n      }, {\n        \"match\": \",\",\n        \"name\": \"punctuation.separator.parameter.ts\"\n      }]\n    },\n    \"identifiers\": {\n      \"patterns\": [{\n        \"match\": \"([_$[:alpha:]][_$[:alnum:]]*)(?=\\\\s*\\\\.\\\\s*prototype\\\\b(?!\\\\$))\",\n        \"name\": \"support.class.ts\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.accessor.ts\"\n          },\n          \"2\": {\n            \"name\": \"constant.other.object.property.ts\"\n          },\n          \"3\": {\n            \"name\": \"variable.other.object.property.ts\"\n          }\n        },\n        \"match\": \"(?x)([?!]?\\\\.)\\\\s*(?:\\n([[:upper:]][_$[:digit:][:upper:]]*)|\\n([_$[:alpha:]][_$[:alnum:]]*)\\n)(?=\\\\s*\\\\.\\\\s*[_$[:alpha:]][_$[:alnum:]]*)\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.accessor.ts\"\n          },\n          \"2\": {\n            \"name\": \"entity.name.function.ts\"\n          }\n        },\n        \"match\": \"(?x)(?:([?!]?\\\\.)\\\\s*)?([_$[:alpha:]][_$[:alnum:]]*)(?=\\\\s*=\\\\s*((async\\\\s+)|(function\\\\s*[(<])|(function\\\\s+)|([_$[:alpha:]][_$[:alnum:]]*\\\\s*=>)|((<([^<>]|\\\\<[^<>]+\\\\>)+>\\\\s*)?\\\\(([^()]|\\\\([^()]*\\\\))*\\\\)(\\\\s*:\\\\s*(.)*)?\\\\s*=>)))\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.accessor.ts\"\n          },\n          \"2\": {\n            \"name\": \"constant.other.property.ts\"\n          }\n        },\n        \"match\": \"([?!]?\\\\.)\\\\s*([[:upper:]][_$[:digit:][:upper:]]*)(?![_$[:alnum:]])\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.accessor.ts\"\n          },\n          \"2\": {\n            \"name\": \"variable.other.property.ts\"\n          }\n        },\n        \"match\": \"([?!]?\\\\.)\\\\s*([_$[:alpha:]][_$[:alnum:]]*)\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"constant.other.object.ts\"\n          },\n          \"2\": {\n            \"name\": \"variable.other.object.ts\"\n          }\n        },\n        \"match\": \"(?x)(?:\\n([[:upper:]][_$[:digit:][:upper:]]*)|\\n([_$[:alpha:]][_$[:alnum:]]*)\\n)(?=\\\\s*\\\\.\\\\s*[_$[:alpha:]][_$[:alnum:]]*)\"\n      }, {\n        \"match\": \"([[:upper:]][_$[:digit:][:upper:]]*)(?![_$[:alnum:]])\",\n        \"name\": \"constant.character.other\"\n      }, {\n        \"match\": \"[_$[:alpha:]][_$[:alnum:]]*\",\n        \"name\": \"variable.other.readwrite.ts\"\n      }]\n    },\n    \"literal\": {\n      \"name\": \"literal.ts\",\n      \"patterns\": [{\n        \"include\": \"#numericLiteral\"\n      }, {\n        \"include\": \"#booleanLiteral\"\n      }, {\n        \"include\": \"#nullLiteral\"\n      }, {\n        \"include\": \"#undefinedLiteral\"\n      }, {\n        \"include\": \"#numericConstantLiteral\"\n      }, {\n        \"include\": \"#arrayLiteral\"\n      }, {\n        \"include\": \"#thisLiteral\"\n      }]\n    },\n    \"ngExpression\": {\n      \"name\": \"meta.expression.ng\",\n      \"patterns\": [{\n        \"include\": \"#string\"\n      }, {\n        \"include\": \"#literal\"\n      }, {\n        \"include\": \"#ternaryExpression\"\n      }, {\n        \"include\": \"#expressionOperator\"\n      }, {\n        \"include\": \"#functionCall\"\n      }, {\n        \"include\": \"#identifiers\"\n      }, {\n        \"include\": \"#parenExpression\"\n      }, {\n        \"include\": \"#punctuationComma\"\n      }, {\n        \"include\": \"#punctuationAccessor\"\n      }]\n    },\n    \"nullLiteral\": {\n      \"match\": \"(?<!\\\\.|\\\\$)\\\\bnull\\\\b(?!\\\\$)\",\n      \"name\": \"constant.language.null.ts\"\n    },\n    \"numericConstantLiteral\": {\n      \"patterns\": [{\n        \"match\": \"(?<!\\\\.|\\\\$)\\\\bNaN\\\\b(?!\\\\$)\",\n        \"name\": \"constant.language.nan.ts\"\n      }, {\n        \"match\": \"(?<!\\\\.|\\\\$)\\\\bInfinity\\\\b(?!\\\\$)\",\n        \"name\": \"constant.language.infinity.ts\"\n      }]\n    },\n    \"numericLiteral\": {\n      \"patterns\": [{\n        \"match\": \"\\\\b(?<!\\\\$)0(x|X)[0-9a-fA-F]+\\\\b(?!\\\\$)\",\n        \"name\": \"constant.numeric.hex.ts\"\n      }, {\n        \"match\": \"\\\\b(?<!\\\\$)0(b|B)[01]+\\\\b(?!\\\\$)\",\n        \"name\": \"constant.numeric.binary.ts\"\n      }, {\n        \"match\": \"\\\\\\\\b(?<!\\\\$)0(o|O)?[0-7]+\\\\b(?!\\\\$)\",\n        \"name\": \"constant.numeric.octal.ts\"\n      }, {\n        \"captures\": {\n          \"0\": {\n            \"name\": \"constant.numeric.decimal.ts\"\n          },\n          \"1\": {\n            \"name\": \"meta.delimiter.decimal.period.ts\"\n          },\n          \"2\": {\n            \"name\": \"meta.delimiter.decimal.period.ts\"\n          },\n          \"3\": {\n            \"name\": \"meta.delimiter.decimal.period.ts\"\n          },\n          \"4\": {\n            \"name\": \"meta.delimiter.decimal.period.ts\"\n          },\n          \"5\": {\n            \"name\": \"meta.delimiter.decimal.period.ts\"\n          },\n          \"6\": {\n            \"name\": \"meta.delimiter.decimal.period.ts\"\n          }\n        },\n        \"match\": \"(?x)\\n(?<!\\\\$)(?:\\n(?:\\\\b[0-9]+(\\\\.)[0-9]+[eE][+-]?[0-9]+\\\\b)|#1.1E+3\\n(?:\\\\b[0-9]+(\\\\.)[eE][+-]?[0-9]+\\\\b)|#1.E+3\\n(?:\\\\B(\\\\.)[0-9]+[eE][+-]?[0-9]+\\\\b)|#.1E+3\\n(?:\\\\b[0-9]+[eE][+-]?[0-9]+\\\\b)|#1E+3(?:\\\\b[0-9]+(\\\\.)[0-9]+\\\\b)|#1.1\\n(?:\\\\b[0-9]+(\\\\.)\\\\B)|#1.\\n(?:\\\\B(\\\\.)[0-9]+\\\\b)|#.1\\n(?:\\\\b[0-9]+\\\\b(?!\\\\.))#1\\n)(?!\\\\$)\"\n      }]\n    },\n    \"parameterName\": {\n      \"patterns\": [{\n        \"captures\": {\n          \"1\": {\n            \"name\": \"storage.modifier.ts\"\n          },\n          \"2\": {\n            \"name\": \"storage.modifier.ts\"\n          },\n          \"3\": {\n            \"name\": \"keyword.operator.rest.ts\"\n          },\n          \"4\": {\n            \"name\": \"entity.name.function.ts\"\n          },\n          \"5\": {\n            \"name\": \"keyword.operator.optional.ts\"\n          }\n        },\n        \"match\": \"(?x)(?:\\\\s*\\\\b(readonly)\\\\s+)?(?:\\\\s*\\\\b(public|private|protected)\\\\s+)?(\\\\.\\\\.\\\\.)?\\\\s*(?<!=|:)([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(\\\\??)(?=\\\\s* (=\\\\s*( (async\\\\s+) | (function\\\\s*[(<]) | (function\\\\s+) | ([_$[:alpha:]][_$[:alnum:]]*\\\\s*=>) | ((<([^<>]|\\\\<[^<>]+\\\\>)+>\\\\s*)?\\\\(([^()]|\\\\([^()]*\\\\))*\\\\)(\\\\s*:\\\\s*(.)*)?\\\\s*=>)) ) | (:\\\\s*( (<) | ([(]\\\\s*( ([)]) | (\\\\.\\\\.\\\\.) | ([_$[:alnum:]]+\\\\s*( ([:,?=])| ([)]\\\\s*=>) )) ))) ))\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"storage.modifier.ts\"\n          },\n          \"2\": {\n            \"name\": \"storage.modifier.ts\"\n          },\n          \"3\": {\n            \"name\": \"keyword.operator.rest.ts\"\n          },\n          \"4\": {\n            \"name\": \"variable.parameter.ts\"\n          },\n          \"5\": {\n            \"name\": \"keyword.operator.optional.ts\"\n          }\n        },\n        \"match\": \"(?:\\\\s*\\\\b(readonly)\\\\s+)?(?:\\\\s*\\\\b(public|private|protected)\\\\s+)?(\\\\.\\\\.\\\\.)?\\\\s*(?<!=|:)([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(\\\\??)\"\n      }]\n    },\n    \"parenExpression\": {\n      \"begin\": \"\\\\(\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"meta.brace.round.ts\"\n        }\n      },\n      \"end\": \"\\\\)\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"meta.brace.round.ts\"\n        }\n      },\n      \"patterns\": [{\n        \"include\": \"#ngExpression\"\n      }, {\n        \"include\": \"#punctuationComma\"\n      }]\n    },\n    \"punctuationAccessor\": {\n      \"match\": \"\\\\?\\\\.|\\\\!\\\\.|\\\\.\",\n      \"name\": \"punctuation.accessor.ts\"\n    },\n    \"punctuationComma\": {\n      \"match\": \",\",\n      \"name\": \"punctuation.separator.comma.ts\"\n    },\n    \"punctuationSemicolon\": {\n      \"match\": \";\",\n      \"name\": \"punctuation.terminator.statement.ts\"\n    },\n    \"qstringDouble\": {\n      \"begin\": '\"',\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.begin.ts\"\n        }\n      },\n      \"end\": '(\")|((?:[^\\\\\\\\\\\\n])$)',\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.definition.string.end.ts\"\n        },\n        \"2\": {\n          \"name\": \"invalid.illegal.newline.ts\"\n        }\n      },\n      \"name\": \"string.quoted.double.ts\",\n      \"patterns\": [{\n        \"include\": \"#stringCharacterEscape\"\n      }]\n    },\n    \"qstringSingle\": {\n      \"begin\": \"'\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.begin.ts\"\n        }\n      },\n      \"end\": \"(\\\\')|((?:[^\\\\\\\\\\\\n])$)\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.definition.string.end.ts\"\n        },\n        \"2\": {\n          \"name\": \"invalid.illegal.newline.ts\"\n        }\n      },\n      \"name\": \"string.quoted.single.ts\",\n      \"patterns\": [{\n        \"include\": \"#stringCharacterEscape\"\n      }]\n    },\n    \"string\": {\n      \"patterns\": [{\n        \"include\": \"#qstringSingle\"\n      }, {\n        \"include\": \"#qstringDouble\"\n      }]\n    },\n    \"stringCharacterEscape\": {\n      \"match\": \"\\\\\\\\(x\\\\h{2}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.|$)\",\n      \"name\": \"constant.character.escape.ts\"\n    },\n    \"ternaryExpression\": {\n      \"begin\": \"(?!\\\\?\\\\.\\\\s*[^[:digit:]])(\\\\?)(?!\\\\?)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.operator.ternary.ts\"\n        }\n      },\n      \"end\": \"\\\\s*(:)\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.operator.ternary.ts\"\n        }\n      },\n      \"patterns\": [{\n        \"include\": \"#ngExpression\"\n      }]\n    },\n    \"thisLiteral\": {\n      \"match\": \"(?<!\\\\.|\\\\$)\\\\bthis\\\\b(?!\\\\$)\",\n      \"name\": \"variable.language.this.ts\"\n    },\n    \"type\": {\n      \"name\": \"meta.type.ts\",\n      \"patterns\": [{\n        \"include\": \"#string\"\n      }, {\n        \"include\": \"#numericLiteral\"\n      }, {\n        \"include\": \"#typeBuiltinLiterals\"\n      }, {\n        \"include\": \"#typeTuple\"\n      }, {\n        \"include\": \"#typeObject\"\n      }, {\n        \"include\": \"#typeOperators\"\n      }, {\n        \"include\": \"#typeFnTypeParameters\"\n      }, {\n        \"include\": \"#typeParenOrFunctionParameters\"\n      }, {\n        \"include\": \"#typeName\"\n      }]\n    },\n    \"typeAnnotation\": {\n      \"begin\": \":\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"keyword.operator.type.annotation.ts\"\n        }\n      },\n      \"end\": '(?=$|[,);\\\\}\\\\]]|\\\\/\\\\/|\")|(?==[^>])|(?<=[\\\\}>\\\\]\\\\)]|[_$[:alpha:]])\\\\s*(?=\\\\{)',\n      \"name\": \"meta.type.annotation.ts\",\n      \"patterns\": [{\n        \"include\": \"#type\"\n      }]\n    },\n    \"typeBuiltinLiterals\": {\n      \"match\": \"(?<!\\\\.|\\\\$)\\\\b(this|true|false|undefined|null)\\\\b(?!\\\\$)\",\n      \"name\": \"support.type.builtin.ts\"\n    },\n    \"typeFnTypeParameters\": {\n      \"patterns\": [{\n        \"captures\": {\n          \"1\": {\n            \"name\": \"keyword.control.new.ts\"\n          }\n        },\n        \"match\": \"(?<!\\\\.|\\\\$)\\\\b(new)\\\\b(?=\\\\s*\\\\<)\",\n        \"name\": \"meta.type.constructor.ts\"\n      }, {\n        \"begin\": \"(?<!\\\\.|\\\\$)\\\\b(new)\\\\b\\\\s*(?=\\\\()\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.new.ts\"\n          }\n        },\n        \"end\": \"(?<=\\\\))\",\n        \"name\": \"meta.type.constructor.ts\",\n        \"patterns\": [{\n          \"include\": \"#functionParameters\"\n        }]\n      }, {\n        \"begin\": \"(?<=\\\\>)\\\\s*(?=\\\\()\",\n        \"end\": \"(?<=\\\\))\",\n        \"include\": \"#typeofOperator\",\n        \"name\": \"meta.type.function.ts\",\n        \"patterns\": [{\n          \"include\": \"#functionParameters\"\n        }]\n      }, {\n        \"begin\": \"(?x)((?=[(]\\\\s*(([)])|(\\\\.\\\\.\\\\.)|([_$[:alnum:]]+\\\\s*(([:,?=])|([)]\\\\s*=>))))))\",\n        \"end\": \"(?<=\\\\))\",\n        \"name\": \"meta.type.function.ts\",\n        \"patterns\": [{\n          \"include\": \"#functionParameters\"\n        }]\n      }]\n    },\n    \"typeName\": {\n      \"patterns\": [{\n        \"captures\": {\n          \"1\": {\n            \"name\": \"entity.name.type.module.ts\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.accessor.ts\"\n          }\n        },\n        \"match\": \"([_$[:alpha:]][_$[:alnum:]]*)\\\\s*([?!]?\\\\.)\"\n      }, {\n        \"match\": \"[_$[:alpha:]][_$[:alnum:]]*\",\n        \"name\": \"entity.name.type.ts\"\n      }]\n    },\n    \"typeObject\": {\n      \"begin\": \"\\\\{\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.block.ts\"\n        }\n      },\n      \"end\": \"\\\\}\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.block.ts\"\n        }\n      },\n      \"name\": \"meta.object.type.ts\",\n      \"patterns\": [{\n        \"include\": \"#typeObjectMembers\"\n      }]\n    },\n    \"typeObjectMembers\": {\n      \"patterns\": [{\n        \"include\": \"#typeAnnotation\"\n      }, {\n        \"include\": \"#punctuationComma\"\n      }, {\n        \"include\": \"#punctuationSemicolon\"\n      }]\n    },\n    \"typeOperators\": {\n      \"patterns\": [{\n        \"include\": \"#typeofOperator\"\n      }, {\n        \"match\": \"[&|]\",\n        \"name\": \"keyword.operator.type.ts\"\n      }, {\n        \"match\": \"(?<!\\\\.|\\\\$)\\\\bkeyof\\\\b(?!\\\\$)\",\n        \"name\": \"keyword.operator.expression.keyof.ts\"\n      }]\n    },\n    \"typeParenOrFunctionParameters\": {\n      \"begin\": \"\\\\(\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"meta.brace.round.ts\"\n        }\n      },\n      \"end\": \"\\\\)\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"meta.brace.round.ts\"\n        }\n      },\n      \"name\": \"meta.type.paren.cover.ts\",\n      \"patterns\": [{\n        \"include\": \"#type\"\n      }, {\n        \"include\": \"#functionParameters\"\n      }]\n    },\n    \"typeTuple\": {\n      \"begin\": \"\\\\[\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"meta.brace.square.ts\"\n        }\n      },\n      \"end\": \"\\\\]\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"meta.brace.square.ts\"\n        }\n      },\n      \"name\": \"meta.type.tuple.ts\",\n      \"patterns\": [{\n        \"include\": \"#type\"\n      }, {\n        \"include\": \"#punctuationComma\"\n      }]\n    },\n    \"typeofOperator\": {\n      \"match\": \"(?<!\\\\.|\\\\$)\\\\btypeof\\\\b(?!\\\\$)\",\n      \"name\": \"keyword.operator.expression.typeof.ts\"\n    },\n    \"undefinedLiteral\": {\n      \"match\": \"(?<!\\\\.|\\\\$)\\\\bundefined\\\\b(?!\\\\$)\",\n      \"name\": \"constant.language.undefined.ts\"\n    },\n    \"variableInitializer\": {\n      \"begin\": \"(?<!=|!)(=)(?!=)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.operator.assignment.ts\"\n        }\n      },\n      \"end\": \"(?=$|[,);}\\\\]])\",\n      \"patterns\": [{\n        \"include\": \"#ngExpression\"\n      }]\n    }\n  },\n  \"scopeName\": \"expression.ng\"\n});\nvar angular_expression = [lang];\nexport { angular_expression as default };", "import angular_expression from './angular-expression.mjs';\nconst lang = Object.freeze({\n  \"injectTo\": [\"text.html.derivative\", \"text.html.derivative.ng\", \"source.ts.ng\"],\n  \"injectionSelector\": \"L:text.html -comment -expression.ng -meta.tag -source.css -source.js\",\n  \"name\": \"angular-let-declaration\",\n  \"patterns\": [{\n    \"include\": \"#letDeclaration\"\n  }],\n  \"repository\": {\n    \"letDeclaration\": {\n      \"begin\": \"(@let)\\\\s+([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(=)?\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"storage.type.ng\"\n        },\n        \"2\": {\n          \"name\": \"meta.definition.variable.ng\"\n        },\n        \"3\": {\n          \"name\": \"keyword.operator.assignment.ng\"\n        }\n      },\n      \"contentName\": \"meta.definition.variable.ng\",\n      \"end\": \"(?<=;)\",\n      \"patterns\": [{\n        \"include\": \"#letInitializer\"\n      }]\n    },\n    \"letInitializer\": {\n      \"begin\": \"\\\\s*\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"keyword.operator.assignment.ng\"\n        }\n      },\n      \"contentName\": \"meta.definition.variable.initializer.ng\",\n      \"end\": \";\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.terminator.statement.ng\"\n        }\n      },\n      \"patterns\": [{\n        \"include\": \"expression.ng\"\n      }]\n    }\n  },\n  \"scopeName\": \"template.let.ng\",\n  \"embeddedLangs\": [\"angular-expression\"]\n});\nvar angular_let_declaration = [...angular_expression, lang];\nexport { angular_let_declaration as default };", "import angular_expression from './angular-expression.mjs';\nconst lang = Object.freeze({\n  \"injectTo\": [\"text.html.derivative\", \"text.html.derivative.ng\", \"source.ts.ng\"],\n  \"injectionSelector\": \"L:text.html -comment\",\n  \"name\": \"angular-template\",\n  \"patterns\": [{\n    \"include\": \"#interpolation\"\n  }],\n  \"repository\": {\n    \"interpolation\": {\n      \"begin\": \"{{\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.block.ts\"\n        }\n      },\n      \"contentName\": \"expression.ng\",\n      \"end\": \"}}\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.block.ts\"\n        }\n      },\n      \"patterns\": [{\n        \"include\": \"expression.ng\"\n      }]\n    }\n  },\n  \"scopeName\": \"template.ng\",\n  \"embeddedLangs\": [\"angular-expression\"]\n});\nvar angular_template = [...angular_expression, lang];\nexport { angular_template as default };", "import angular_expression from './angular-expression.mjs';\nimport angular_template from './angular-template.mjs';\nconst lang = Object.freeze({\n  \"injectTo\": [\"text.html.derivative\", \"text.html.derivative.ng\", \"source.ts.ng\"],\n  \"injectionSelector\": \"L:text.html -comment -expression.ng -meta.tag -source.css -source.js\",\n  \"name\": \"angular-template-blocks\",\n  \"patterns\": [{\n    \"include\": \"#block\"\n  }],\n  \"repository\": {\n    \"block\": {\n      \"begin\": \"(@)(if|else if|else|defer|placeholder|loading|error|switch|case|default|for|empty)(?:\\\\s*)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"patterns\": [{\n            \"include\": \"#transition\"\n          }]\n        },\n        \"2\": {\n          \"name\": \"keyword.control.block.kind.ng\"\n        }\n      },\n      \"end\": \"(?<=\\\\})\",\n      \"name\": \"control.block.ng\",\n      \"patterns\": [{\n        \"include\": \"#blockExpression\"\n      }, {\n        \"include\": \"#blockBody\"\n      }]\n    },\n    \"blockBody\": {\n      \"begin\": \"\\\\{\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.block.ts\"\n        }\n      },\n      \"contentName\": \"control.block.body.ng\",\n      \"end\": \"\\\\}\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.block.ts\"\n        }\n      },\n      \"patterns\": [{\n        \"include\": \"text.html.derivative.ng\"\n      }, {\n        \"include\": \"template.ng\"\n      }]\n    },\n    \"blockExpression\": {\n      \"begin\": \"\\\\(\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"meta.brace.round.ts\"\n        }\n      },\n      \"contentName\": \"control.block.expression.ng\",\n      \"end\": \"\\\\)\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"meta.brace.round.ts\"\n        }\n      },\n      \"patterns\": [{\n        \"include\": \"expression.ng\"\n      }]\n    },\n    \"transition\": {\n      \"match\": \"@\",\n      \"name\": \"keyword.control.block.transition.ng\"\n    }\n  },\n  \"scopeName\": \"template.blocks.ng\",\n  \"embeddedLangs\": [\"angular-expression\", \"angular-template\"]\n});\nvar angular_template_blocks = [...angular_expression, ...angular_template, lang];\nexport { angular_template_blocks as default };", "import html from './html.mjs';\nimport angular_expression from './angular-expression.mjs';\nimport angular_let_declaration from './angular-let-declaration.mjs';\nimport angular_template from './angular-template.mjs';\nimport angular_template_blocks from './angular-template-blocks.mjs';\nimport './javascript.mjs';\nimport './css.mjs';\nconst lang = Object.freeze({\n  \"displayName\": \"Angular HTML\",\n  \"injections\": {\n    \"R:text.html - (comment.block, text.html meta.embedded, meta.tag.*.*.html, meta.tag.*.*.*.html, meta.tag.*.*.*.*.html)\": {\n      \"comment\": \"Uses R: to ensure this matches after any other injections.\",\n      \"patterns\": [{\n        \"match\": \"<\",\n        \"name\": \"invalid.illegal.bad-angle-bracket.html\"\n      }]\n    }\n  },\n  \"name\": \"angular-html\",\n  \"patterns\": [{\n    \"include\": \"text.html.basic#core-minus-invalid\"\n  }, {\n    \"begin\": \"(</?)(\\\\w[^\\\\s>]*)(?<!/)\",\n    \"beginCaptures\": {\n      \"1\": {\n        \"name\": \"punctuation.definition.tag.begin.html\"\n      },\n      \"2\": {\n        \"name\": \"entity.name.tag.html\"\n      }\n    },\n    \"end\": \"((?: ?/)?>)\",\n    \"endCaptures\": {\n      \"1\": {\n        \"name\": \"punctuation.definition.tag.end.html\"\n      }\n    },\n    \"name\": \"meta.tag.other.unrecognized.html.derivative\",\n    \"patterns\": [{\n      \"include\": \"text.html.basic#attribute\"\n    }]\n  }],\n  \"scopeName\": \"text.html.derivative.ng\",\n  \"embeddedLangs\": [\"html\", \"angular-expression\", \"angular-let-declaration\", \"angular-template\", \"angular-template-blocks\"]\n});\nvar angular_html = [...html, ...angular_expression, ...angular_let_declaration, ...angular_template, ...angular_template_blocks, lang];\nexport { angular_html as default };"],
  "mappings": "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",
  "names": ["lang", "lang", "lang", "lang"]
}
