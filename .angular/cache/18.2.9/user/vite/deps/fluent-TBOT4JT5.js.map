{
  "version": 3,
  "sources": ["../../../../../../node_modules/shiki/dist/langs/fluent.mjs"],
  "sourcesContent": ["const lang = Object.freeze({\n  \"displayName\": \"Fluent\",\n  \"name\": \"fluent\",\n  \"patterns\": [{\n    \"include\": \"#comment\"\n  }, {\n    \"include\": \"#message\"\n  }, {\n    \"include\": \"#wrong-line\"\n  }],\n  \"repository\": {\n    \"attributes\": {\n      \"begin\": \"\\\\s*(\\\\.[a-zA-Z][a-zA-Z0-9_-]*\\\\s*=\\\\s*)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"support.class.attribute-begin.fluent\"\n        }\n      },\n      \"end\": \"^(?=\\\\s*[^\\\\.])\",\n      \"patterns\": [{\n        \"include\": \"#placeable\"\n      }]\n    },\n    \"comment\": {\n      \"match\": \"^##?#?\\\\s.*$\",\n      \"name\": \"comment.fluent\"\n    },\n    \"function-comma\": {\n      \"match\": \",\",\n      \"name\": \"support.function.function-comma.fluent\"\n    },\n    \"function-named-argument\": {\n      \"begin\": '([a-zA-Z0-9]+:)\\\\s*([\"a-zA-Z0-9]+)',\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"support.function.named-argument.name.fluent\"\n        },\n        \"2\": {\n          \"name\": \"variable.other.named-argument.value.fluent\"\n        }\n      },\n      \"end\": \"(?=\\\\)|,|\\\\s)\",\n      \"name\": \"variable.other.named-argument.fluent\"\n    },\n    \"function-positional-argument\": {\n      \"match\": \"\\\\$[a-zA-Z0-9_-]+\",\n      \"name\": \"variable.other.function.positional-argument.fluent\"\n    },\n    \"invalid-placeable-string-missing-end-quote\": {\n      \"match\": '\"[^\"]+$',\n      \"name\": \"invalid.illegal.wrong-placeable-missing-end-quote.fluent\"\n    },\n    \"invalid-placeable-wrong-placeable-missing-end\": {\n      \"match\": \"([^}A-Z]*$|[^-][^>]$)\\\\b\",\n      \"name\": \"invalid.illegal.wrong-placeable-missing-end.fluent\"\n    },\n    \"message\": {\n      \"begin\": \"^(-?[a-zA-Z][a-zA-Z0-9_-]*\\\\s*=\\\\s*)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"support.class.message-identifier.fluent\"\n        }\n      },\n      \"contentName\": \"string.fluent\",\n      \"end\": \"^(?=\\\\S)\",\n      \"patterns\": [{\n        \"include\": \"#attributes\"\n      }, {\n        \"include\": \"#placeable\"\n      }]\n    },\n    \"placeable\": {\n      \"begin\": \"({)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.placeable.begin.fluent\"\n        }\n      },\n      \"contentName\": \"variable.other.placeable.content.fluent\",\n      \"end\": \"(})\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.placeable.end.fluent\"\n        }\n      },\n      \"patterns\": [{\n        \"include\": \"#placeable-string\"\n      }, {\n        \"include\": \"#placeable-function\"\n      }, {\n        \"include\": \"#placeable-reference-or-number\"\n      }, {\n        \"include\": \"#selector\"\n      }, {\n        \"include\": \"#invalid-placeable-wrong-placeable-missing-end\"\n      }, {\n        \"include\": \"#invalid-placeable-string-missing-end-quote\"\n      }, {\n        \"include\": \"#invalid-placeable-wrong-function-name\"\n      }]\n    },\n    \"placeable-function\": {\n      \"begin\": \"([A-Z][A-Z0-9_-]*\\\\()\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"support.function.placeable-function.call.begin.fluent\"\n        }\n      },\n      \"contentName\": \"string.placeable-function.fluent\",\n      \"end\": \"(\\\\))\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"support.function.placeable-function.call.end.fluent\"\n        }\n      },\n      \"patterns\": [{\n        \"include\": \"#function-comma\"\n      }, {\n        \"include\": \"#function-positional-argument\"\n      }, {\n        \"include\": \"#function-named-argument\"\n      }]\n    },\n    \"placeable-reference-or-number\": {\n      \"match\": \"((-|\\\\$)[a-zA-Z0-9_-]+|[a-zA-Z][a-zA-Z0-9_-]*|[0-9]+)\",\n      \"name\": \"variable.other.placeable.reference-or-number.fluent\"\n    },\n    \"placeable-string\": {\n      \"begin\": '(\")(?=[^\\\\n]*\")',\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"variable.other.placeable-string-begin.fluent\"\n        }\n      },\n      \"contentName\": \"string.placeable-string-content.fluent\",\n      \"end\": '(\")',\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"variable.other.placeable-string-end.fluent\"\n        }\n      }\n    },\n    \"selector\": {\n      \"begin\": \"(->)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"support.function.selector.begin.fluent\"\n        }\n      },\n      \"contentName\": \"string.selector.content.fluent\",\n      \"end\": \"^(?=\\\\s*})\",\n      \"patterns\": [{\n        \"include\": \"#selector-item\"\n      }]\n    },\n    \"selector-item\": {\n      \"begin\": \"(\\\\s*\\\\*?\\\\[)([a-zA-Z0-9_-]+)(\\\\]\\\\s*)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"support.function.selector-item.begin.fluent\"\n        },\n        \"2\": {\n          \"name\": \"variable.other.selector-item.begin.fluent\"\n        },\n        \"3\": {\n          \"name\": \"support.function.selector-item.begin.fluent\"\n        }\n      },\n      \"contentName\": \"string.selector-item.content.fluent\",\n      \"end\": \"^(?=(\\\\s*})|(\\\\s*\\\\[)|(\\\\s*\\\\*))\",\n      \"patterns\": [{\n        \"include\": \"#placeable\"\n      }]\n    },\n    \"wrong-line\": {\n      \"match\": \".*\",\n      \"name\": \"invalid.illegal.wrong-line.fluent\"\n    }\n  },\n  \"scopeName\": \"source.ftl\",\n  \"aliases\": [\"ftl\"]\n});\nvar fluent = [lang];\nexport { fluent as default };"],
  "mappings": "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",
  "names": []
}
