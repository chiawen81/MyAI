{
  "version": 3,
  "sources": ["../../../../../../node_modules/shiki/dist/langs/bicep.mjs"],
  "sourcesContent": ["const lang = Object.freeze({\n  \"displayName\": \"Bicep\",\n  \"fileTypes\": [\".bicep\"],\n  \"name\": \"bicep\",\n  \"patterns\": [{\n    \"include\": \"#expression\"\n  }, {\n    \"include\": \"#comments\"\n  }],\n  \"repository\": {\n    \"array-literal\": {\n      \"begin\": \"\\\\[(?!(?:[ \\\\t\\\\r\\\\n]|\\\\/\\\\*(?:\\\\*(?!\\\\/)|[^*])*\\\\*\\\\/)*\\\\bfor\\\\b)\",\n      \"end\": \"]\",\n      \"name\": \"meta.array-literal.bicep\",\n      \"patterns\": [{\n        \"include\": \"#expression\"\n      }, {\n        \"include\": \"#comments\"\n      }]\n    },\n    \"block-comment\": {\n      \"begin\": \"/\\\\*\",\n      \"end\": \"\\\\*/\",\n      \"name\": \"comment.block.bicep\"\n    },\n    \"comments\": {\n      \"patterns\": [{\n        \"include\": \"#line-comment\"\n      }, {\n        \"include\": \"#block-comment\"\n      }]\n    },\n    \"decorator\": {\n      \"begin\": \"@(?:[ \\\\t\\\\r\\\\n]|\\\\/\\\\*(?:\\\\*(?!\\\\/)|[^*])*\\\\*\\\\/)*(?=\\\\b[_$[:alpha:]][_$[:alnum:]]*\\\\b)\",\n      \"end\": \"\",\n      \"name\": \"meta.decorator.bicep\",\n      \"patterns\": [{\n        \"include\": \"#expression\"\n      }, {\n        \"include\": \"#comments\"\n      }]\n    },\n    \"directive\": {\n      \"begin\": \"#\\\\b[_a-zA-Z-0-9]+\\\\b\",\n      \"end\": \"$\",\n      \"name\": \"meta.directive.bicep\",\n      \"patterns\": [{\n        \"include\": \"#directive-variable\"\n      }, {\n        \"include\": \"#comments\"\n      }]\n    },\n    \"directive-variable\": {\n      \"match\": \"\\\\b[_a-zA-Z-0-9]+\\\\b\",\n      \"name\": \"keyword.control.declaration.bicep\"\n    },\n    \"escape-character\": {\n      \"match\": \"\\\\\\\\(u{[0-9A-Fa-f]+}|n|r|t|\\\\\\\\|'|\\\\${)\",\n      \"name\": \"constant.character.escape.bicep\"\n    },\n    \"expression\": {\n      \"patterns\": [{\n        \"include\": \"#string-literal\"\n      }, {\n        \"include\": \"#string-verbatim\"\n      }, {\n        \"include\": \"#numeric-literal\"\n      }, {\n        \"include\": \"#named-literal\"\n      }, {\n        \"include\": \"#object-literal\"\n      }, {\n        \"include\": \"#array-literal\"\n      }, {\n        \"include\": \"#keyword\"\n      }, {\n        \"include\": \"#identifier\"\n      }, {\n        \"include\": \"#function-call\"\n      }, {\n        \"include\": \"#decorator\"\n      }, {\n        \"include\": \"#lambda-start\"\n      }, {\n        \"include\": \"#directive\"\n      }]\n    },\n    \"function-call\": {\n      \"begin\": \"(\\\\b[_$[:alpha:]][_$[:alnum:]]*\\\\b)(?:[ \\\\t\\\\r\\\\n]|\\\\/\\\\*(?:\\\\*(?!\\\\/)|[^*])*\\\\*\\\\/)*\\\\(\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"entity.name.function.bicep\"\n        }\n      },\n      \"end\": \"\\\\)\",\n      \"name\": \"meta.function-call.bicep\",\n      \"patterns\": [{\n        \"include\": \"#expression\"\n      }, {\n        \"include\": \"#comments\"\n      }]\n    },\n    \"identifier\": {\n      \"match\": \"\\\\b[_$[:alpha:]][_$[:alnum:]]*\\\\b(?!(?:[ \\\\t\\\\r\\\\n]|\\\\/\\\\*(?:\\\\*(?!\\\\/)|[^*])*\\\\*\\\\/)*\\\\()\",\n      \"name\": \"variable.other.readwrite.bicep\"\n    },\n    \"keyword\": {\n      \"match\": \"\\\\b(metadata|targetScope|resource|module|param|var|output|for|in|if|existing|import|as|type|with|using|extends|func|assert|provider)\\\\b\",\n      \"name\": \"keyword.control.declaration.bicep\"\n    },\n    \"lambda-start\": {\n      \"begin\": \"(\\\\((?:[ \\\\t\\\\r\\\\n]|\\\\/\\\\*(?:\\\\*(?!\\\\/)|[^*])*\\\\*\\\\/)*\\\\b[_$[:alpha:]][_$[:alnum:]]*\\\\b(?:[ \\\\t\\\\r\\\\n]|\\\\/\\\\*(?:\\\\*(?!\\\\/)|[^*])*\\\\*\\\\/)*(,(?:[ \\\\t\\\\r\\\\n]|\\\\/\\\\*(?:\\\\*(?!\\\\/)|[^*])*\\\\*\\\\/)*\\\\b[_$[:alpha:]][_$[:alnum:]]*\\\\b(?:[ \\\\t\\\\r\\\\n]|\\\\/\\\\*(?:\\\\*(?!\\\\/)|[^*])*\\\\*\\\\/)*)*\\\\)|\\\\((?:[ \\\\t\\\\r\\\\n]|\\\\/\\\\*(?:\\\\*(?!\\\\/)|[^*])*\\\\*\\\\/)*\\\\)|(?:[ \\\\t\\\\r\\\\n]|\\\\/\\\\*(?:\\\\*(?!\\\\/)|[^*])*\\\\*\\\\/)*\\\\b[_$[:alpha:]][_$[:alnum:]]*\\\\b(?:[ \\\\t\\\\r\\\\n]|\\\\/\\\\*(?:\\\\*(?!\\\\/)|[^*])*\\\\*\\\\/)*)(?=(?:[ \\\\t\\\\r\\\\n]|\\\\/\\\\*(?:\\\\*(?!\\\\/)|[^*])*\\\\*\\\\/)*=>)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"meta.undefined.bicep\",\n          \"patterns\": [{\n            \"include\": \"#identifier\"\n          }, {\n            \"include\": \"#comments\"\n          }]\n        }\n      },\n      \"end\": \"(?:[ \\\\t\\\\r\\\\n]|\\\\/\\\\*(?:\\\\*(?!\\\\/)|[^*])*\\\\*\\\\/)*=>\",\n      \"name\": \"meta.lambda-start.bicep\"\n    },\n    \"line-comment\": {\n      \"match\": \"//.*(?=$)\",\n      \"name\": \"comment.line.double-slash.bicep\"\n    },\n    \"named-literal\": {\n      \"match\": \"\\\\b(true|false|null)\\\\b\",\n      \"name\": \"constant.language.bicep\"\n    },\n    \"numeric-literal\": {\n      \"match\": \"[0-9]+\",\n      \"name\": \"constant.numeric.bicep\"\n    },\n    \"object-literal\": {\n      \"begin\": \"{\",\n      \"end\": \"}\",\n      \"name\": \"meta.object-literal.bicep\",\n      \"patterns\": [{\n        \"include\": \"#object-property-key\"\n      }, {\n        \"include\": \"#expression\"\n      }, {\n        \"include\": \"#comments\"\n      }]\n    },\n    \"object-property-key\": {\n      \"match\": \"\\\\b[_$[:alpha:]][_$[:alnum:]]*\\\\b(?=(?:[ \\\\t\\\\r\\\\n]|\\\\/\\\\*(?:\\\\*(?!\\\\/)|[^*])*\\\\*\\\\/)*:)\",\n      \"name\": \"variable.other.property.bicep\"\n    },\n    \"string-literal\": {\n      \"begin\": \"'(?!'')\",\n      \"end\": \"'\",\n      \"name\": \"string.quoted.single.bicep\",\n      \"patterns\": [{\n        \"include\": \"#escape-character\"\n      }, {\n        \"include\": \"#string-literal-subst\"\n      }]\n    },\n    \"string-literal-subst\": {\n      \"begin\": \"(?<!\\\\\\\\)(\\\\${)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.definition.template-expression.begin.bicep\"\n        }\n      },\n      \"end\": \"(})\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.definition.template-expression.end.bicep\"\n        }\n      },\n      \"name\": \"meta.string-literal-subst.bicep\",\n      \"patterns\": [{\n        \"include\": \"#expression\"\n      }, {\n        \"include\": \"#comments\"\n      }]\n    },\n    \"string-verbatim\": {\n      \"begin\": \"'''\",\n      \"end\": \"'''(?!')\",\n      \"name\": \"string.quoted.multi.bicep\",\n      \"patterns\": []\n    }\n  },\n  \"scopeName\": \"source.bicep\"\n});\nvar bicep = [lang];\nexport { bicep as default };"],
  "mappings": ";;;AAAA,IAAM,OAAO,OAAO,OAAO;AAAA,EACzB,eAAe;AAAA,EACf,aAAa,CAAC,QAAQ;AAAA,EACtB,QAAQ;AAAA,EACR,YAAY,CAAC;AAAA,IACX,WAAW;AAAA,EACb,GAAG;AAAA,IACD,WAAW;AAAA,EACb,CAAC;AAAA,EACD,cAAc;AAAA,IACZ,iBAAiB;AAAA,MACf,SAAS;AAAA,MACT,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,YAAY,CAAC;AAAA,QACX,WAAW;AAAA,MACb,GAAG;AAAA,QACD,WAAW;AAAA,MACb,CAAC;AAAA,IACH;AAAA,IACA,iBAAiB;AAAA,MACf,SAAS;AAAA,MACT,OAAO;AAAA,MACP,QAAQ;AAAA,IACV;AAAA,IACA,YAAY;AAAA,MACV,YAAY,CAAC;AAAA,QACX,WAAW;AAAA,MACb,GAAG;AAAA,QACD,WAAW;AAAA,MACb,CAAC;AAAA,IACH;AAAA,IACA,aAAa;AAAA,MACX,SAAS;AAAA,MACT,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,YAAY,CAAC;AAAA,QACX,WAAW;AAAA,MACb,GAAG;AAAA,QACD,WAAW;AAAA,MACb,CAAC;AAAA,IACH;AAAA,IACA,aAAa;AAAA,MACX,SAAS;AAAA,MACT,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,YAAY,CAAC;AAAA,QACX,WAAW;AAAA,MACb,GAAG;AAAA,QACD,WAAW;AAAA,MACb,CAAC;AAAA,IACH;AAAA,IACA,sBAAsB;AAAA,MACpB,SAAS;AAAA,MACT,QAAQ;AAAA,IACV;AAAA,IACA,oBAAoB;AAAA,MAClB,SAAS;AAAA,MACT,QAAQ;AAAA,IACV;AAAA,IACA,cAAc;AAAA,MACZ,YAAY,CAAC;AAAA,QACX,WAAW;AAAA,MACb,GAAG;AAAA,QACD,WAAW;AAAA,MACb,GAAG;AAAA,QACD,WAAW;AAAA,MACb,GAAG;AAAA,QACD,WAAW;AAAA,MACb,GAAG;AAAA,QACD,WAAW;AAAA,MACb,GAAG;AAAA,QACD,WAAW;AAAA,MACb,GAAG;AAAA,QACD,WAAW;AAAA,MACb,GAAG;AAAA,QACD,WAAW;AAAA,MACb,GAAG;AAAA,QACD,WAAW;AAAA,MACb,GAAG;AAAA,QACD,WAAW;AAAA,MACb,GAAG;AAAA,QACD,WAAW;AAAA,MACb,GAAG;AAAA,QACD,WAAW;AAAA,MACb,CAAC;AAAA,IACH;AAAA,IACA,iBAAiB;AAAA,MACf,SAAS;AAAA,MACT,iBAAiB;AAAA,QACf,KAAK;AAAA,UACH,QAAQ;AAAA,QACV;AAAA,MACF;AAAA,MACA,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,YAAY,CAAC;AAAA,QACX,WAAW;AAAA,MACb,GAAG;AAAA,QACD,WAAW;AAAA,MACb,CAAC;AAAA,IACH;AAAA,IACA,cAAc;AAAA,MACZ,SAAS;AAAA,MACT,QAAQ;AAAA,IACV;AAAA,IACA,WAAW;AAAA,MACT,SAAS;AAAA,MACT,QAAQ;AAAA,IACV;AAAA,IACA,gBAAgB;AAAA,MACd,SAAS;AAAA,MACT,iBAAiB;AAAA,QACf,KAAK;AAAA,UACH,QAAQ;AAAA,UACR,YAAY,CAAC;AAAA,YACX,WAAW;AAAA,UACb,GAAG;AAAA,YACD,WAAW;AAAA,UACb,CAAC;AAAA,QACH;AAAA,MACF;AAAA,MACA,OAAO;AAAA,MACP,QAAQ;AAAA,IACV;AAAA,IACA,gBAAgB;AAAA,MACd,SAAS;AAAA,MACT,QAAQ;AAAA,IACV;AAAA,IACA,iBAAiB;AAAA,MACf,SAAS;AAAA,MACT,QAAQ;AAAA,IACV;AAAA,IACA,mBAAmB;AAAA,MACjB,SAAS;AAAA,MACT,QAAQ;AAAA,IACV;AAAA,IACA,kBAAkB;AAAA,MAChB,SAAS;AAAA,MACT,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,YAAY,CAAC;AAAA,QACX,WAAW;AAAA,MACb,GAAG;AAAA,QACD,WAAW;AAAA,MACb,GAAG;AAAA,QACD,WAAW;AAAA,MACb,CAAC;AAAA,IACH;AAAA,IACA,uBAAuB;AAAA,MACrB,SAAS;AAAA,MACT,QAAQ;AAAA,IACV;AAAA,IACA,kBAAkB;AAAA,MAChB,SAAS;AAAA,MACT,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,YAAY,CAAC;AAAA,QACX,WAAW;AAAA,MACb,GAAG;AAAA,QACD,WAAW;AAAA,MACb,CAAC;AAAA,IACH;AAAA,IACA,wBAAwB;AAAA,MACtB,SAAS;AAAA,MACT,iBAAiB;AAAA,QACf,KAAK;AAAA,UACH,QAAQ;AAAA,QACV;AAAA,MACF;AAAA,MACA,OAAO;AAAA,MACP,eAAe;AAAA,QACb,KAAK;AAAA,UACH,QAAQ;AAAA,QACV;AAAA,MACF;AAAA,MACA,QAAQ;AAAA,MACR,YAAY,CAAC;AAAA,QACX,WAAW;AAAA,MACb,GAAG;AAAA,QACD,WAAW;AAAA,MACb,CAAC;AAAA,IACH;AAAA,IACA,mBAAmB;AAAA,MACjB,SAAS;AAAA,MACT,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,YAAY,CAAC;AAAA,IACf;AAAA,EACF;AAAA,EACA,aAAa;AACf,CAAC;AACD,IAAI,QAAQ,CAAC,IAAI;",
  "names": []
}
