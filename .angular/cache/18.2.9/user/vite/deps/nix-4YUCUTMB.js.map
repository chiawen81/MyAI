{
  "version": 3,
  "sources": ["../../../../../../node_modules/shiki/dist/langs/nix.mjs"],
  "sourcesContent": ["const lang = Object.freeze({\n  \"displayName\": \"Nix\",\n  \"fileTypes\": [\"nix\"],\n  \"name\": \"nix\",\n  \"patterns\": [{\n    \"include\": \"#expression\"\n  }],\n  \"repository\": {\n    \"attribute-bind\": {\n      \"patterns\": [{\n        \"include\": \"#attribute-name\"\n      }, {\n        \"include\": \"#attribute-bind-from-equals\"\n      }]\n    },\n    \"attribute-bind-from-equals\": {\n      \"begin\": \"\\\\=\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"keyword.operator.bind.nix\"\n        }\n      },\n      \"end\": \"\\\\;\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.terminator.bind.nix\"\n        }\n      },\n      \"patterns\": [{\n        \"include\": \"#expression\"\n      }]\n    },\n    \"attribute-inherit\": {\n      \"begin\": \"\\\\binherit\\\\b\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"keyword.other.inherit.nix\"\n        }\n      },\n      \"end\": \"\\\\;\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.terminator.inherit.nix\"\n        }\n      },\n      \"patterns\": [{\n        \"begin\": \"\\\\(\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.section.function.arguments.nix\"\n          }\n        },\n        \"end\": \"(?=\\\\;)\",\n        \"patterns\": [{\n          \"begin\": \"\\\\)\",\n          \"beginCaptures\": {\n            \"0\": {\n              \"name\": \"punctuation.section.function.arguments.nix\"\n            }\n          },\n          \"end\": \"(?=\\\\;)\",\n          \"patterns\": [{\n            \"include\": \"#bad-reserved\"\n          }, {\n            \"include\": \"#attribute-name-single\"\n          }, {\n            \"include\": \"#others\"\n          }]\n        }, {\n          \"include\": \"#expression\"\n        }]\n      }, {\n        \"begin\": \"(?=[a-zA-Z\\\\_])\",\n        \"end\": \"(?=\\\\;)\",\n        \"patterns\": [{\n          \"include\": \"#bad-reserved\"\n        }, {\n          \"include\": \"#attribute-name-single\"\n        }, {\n          \"include\": \"#others\"\n        }]\n      }, {\n        \"include\": \"#others\"\n      }]\n    },\n    \"attribute-name\": {\n      \"patterns\": [{\n        \"match\": \"\\\\b[a-zA-Z\\\\_][a-zA-Z0-9\\\\_\\\\'\\\\-]*\",\n        \"name\": \"entity.other.attribute-name.multipart.nix\"\n      }, {\n        \"match\": \"\\\\.\"\n      }, {\n        \"include\": \"#string-quoted\"\n      }, {\n        \"include\": \"#interpolation\"\n      }]\n    },\n    \"attribute-name-single\": {\n      \"match\": \"\\\\b[a-zA-Z\\\\_][a-zA-Z0-9\\\\_\\\\'\\\\-]*\",\n      \"name\": \"entity.other.attribute-name.single.nix\"\n    },\n    \"attrset-contents\": {\n      \"patterns\": [{\n        \"include\": \"#attribute-inherit\"\n      }, {\n        \"include\": \"#bad-reserved\"\n      }, {\n        \"include\": \"#attribute-bind\"\n      }, {\n        \"include\": \"#others\"\n      }]\n    },\n    \"attrset-definition\": {\n      \"begin\": \"(?=\\\\{)\",\n      \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\",\n      \"patterns\": [{\n        \"begin\": \"(\\\\{)\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.attrset.nix\"\n          }\n        },\n        \"end\": \"(\\\\})\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.attrset.nix\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#attrset-contents\"\n        }]\n      }, {\n        \"begin\": \"(?<=\\\\})\",\n        \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\",\n        \"patterns\": [{\n          \"include\": \"#expression-cont\"\n        }]\n      }]\n    },\n    \"attrset-definition-brace-opened\": {\n      \"patterns\": [{\n        \"begin\": \"(?<=\\\\})\",\n        \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\",\n        \"patterns\": [{\n          \"include\": \"#expression-cont\"\n        }]\n      }, {\n        \"begin\": \"(?=.?)\",\n        \"end\": \"\\\\}\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.attrset.nix\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#attrset-contents\"\n        }]\n      }]\n    },\n    \"attrset-for-sure\": {\n      \"patterns\": [{\n        \"begin\": \"(?=\\\\brec\\\\b)\",\n        \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\",\n        \"patterns\": [{\n          \"begin\": \"\\\\brec\\\\b\",\n          \"beginCaptures\": {\n            \"0\": {\n              \"name\": \"keyword.other.nix\"\n            }\n          },\n          \"end\": \"(?=\\\\{)\",\n          \"patterns\": [{\n            \"include\": \"#others\"\n          }]\n        }, {\n          \"include\": \"#attrset-definition\"\n        }, {\n          \"include\": \"#others\"\n        }]\n      }, {\n        \"begin\": \"(?=\\\\{\\\\s*(\\\\}|[^,?]*(=|;)))\",\n        \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\",\n        \"patterns\": [{\n          \"include\": \"#attrset-definition\"\n        }, {\n          \"include\": \"#others\"\n        }]\n      }]\n    },\n    \"attrset-or-function\": {\n      \"begin\": \"\\\\{\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.attrset-or-function.nix\"\n        }\n      },\n      \"end\": \"(?=([\\\\])};]|\\\\b(else|then)\\\\b))\",\n      \"patterns\": [{\n        \"begin\": `(?=(\\\\s*\\\\}|\\\\\"|\\\\binherit\\\\b|\\\\$\\\\{|\\\\b[a-zA-Z\\\\_][a-zA-Z0-9\\\\_\\\\'\\\\-]*(\\\\s*\\\\.|\\\\s*=[^=])))`,\n        \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\",\n        \"patterns\": [{\n          \"include\": \"#attrset-definition-brace-opened\"\n        }]\n      }, {\n        \"begin\": \"(?=(\\\\.\\\\.\\\\.|\\\\b[a-zA-Z\\\\_][a-zA-Z0-9\\\\_\\\\'\\\\-]*\\\\s*[,?]))\",\n        \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\",\n        \"patterns\": [{\n          \"include\": \"#function-definition-brace-opened\"\n        }]\n      }, {\n        \"include\": \"#bad-reserved\"\n      }, {\n        \"begin\": \"\\\\b[a-zA-Z\\\\_][a-zA-Z0-9\\\\_\\\\'\\\\-]*\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"variable.parameter.function.maybe.nix\"\n          }\n        },\n        \"end\": \"(?=([\\\\])};]|\\\\b(else|then)\\\\b))\",\n        \"patterns\": [{\n          \"begin\": \"(?=\\\\.)\",\n          \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\",\n          \"patterns\": [{\n            \"include\": \"#attrset-definition-brace-opened\"\n          }]\n        }, {\n          \"begin\": \"\\\\s*(\\\\,)\",\n          \"beginCaptures\": {\n            \"1\": {\n              \"name\": \"keyword.operator.nix\"\n            }\n          },\n          \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\",\n          \"patterns\": [{\n            \"include\": \"#function-definition-brace-opened\"\n          }]\n        }, {\n          \"begin\": \"(?=\\\\=)\",\n          \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\",\n          \"patterns\": [{\n            \"include\": \"#attribute-bind-from-equals\"\n          }, {\n            \"include\": \"#attrset-definition-brace-opened\"\n          }]\n        }, {\n          \"begin\": \"(?=\\\\?)\",\n          \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\",\n          \"patterns\": [{\n            \"include\": \"#function-parameter-default\"\n          }, {\n            \"begin\": \"\\\\,\",\n            \"beginCaptures\": {\n              \"0\": {\n                \"name\": \"keyword.operator.nix\"\n              }\n            },\n            \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\",\n            \"patterns\": [{\n              \"include\": \"#function-definition-brace-opened\"\n            }]\n          }]\n        }, {\n          \"include\": \"#others\"\n        }]\n      }, {\n        \"include\": \"#others\"\n      }]\n    },\n    \"bad-reserved\": {\n      \"match\": \"(?<![\\\\w'-])(if|then|else|assert|with|let|in|rec|inherit)(?![\\\\w'-])\",\n      \"name\": \"invalid.illegal.reserved.nix\"\n    },\n    \"comment\": {\n      \"patterns\": [{\n        \"begin\": \"/\\\\*([^*]|\\\\*[^\\\\/])*\",\n        \"end\": \"\\\\*\\\\/\",\n        \"name\": \"comment.block.nix\",\n        \"patterns\": [{\n          \"include\": \"#comment-remark\"\n        }]\n      }, {\n        \"begin\": \"\\\\#\",\n        \"end\": \"$\",\n        \"name\": \"comment.line.number-sign.nix\",\n        \"patterns\": [{\n          \"include\": \"#comment-remark\"\n        }]\n      }]\n    },\n    \"comment-remark\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"markup.bold.comment.nix\"\n        }\n      },\n      \"match\": \"(TODO|FIXME|BUG|\\\\!\\\\!\\\\!):?\"\n    },\n    \"constants\": {\n      \"patterns\": [{\n        \"begin\": \"\\\\b(builtins|true|false|null)\\\\b\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"constant.language.nix\"\n          }\n        },\n        \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\",\n        \"patterns\": [{\n          \"include\": \"#expression-cont\"\n        }]\n      }, {\n        \"begin\": \"\\\\b(scopedImport|import|isNull|abort|throw|baseNameOf|dirOf|removeAttrs|map|toString|derivationStrict|derivation)\\\\b\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"support.function.nix\"\n          }\n        },\n        \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\",\n        \"patterns\": [{\n          \"include\": \"#expression-cont\"\n        }]\n      }, {\n        \"begin\": \"\\\\b[0-9]+\\\\b\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"constant.numeric.nix\"\n          }\n        },\n        \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\",\n        \"patterns\": [{\n          \"include\": \"#expression-cont\"\n        }]\n      }]\n    },\n    \"expression\": {\n      \"patterns\": [{\n        \"include\": \"#parens-and-cont\"\n      }, {\n        \"include\": \"#list-and-cont\"\n      }, {\n        \"include\": \"#string\"\n      }, {\n        \"include\": \"#interpolation\"\n      }, {\n        \"include\": \"#with-assert\"\n      }, {\n        \"include\": \"#function-for-sure\"\n      }, {\n        \"include\": \"#attrset-for-sure\"\n      }, {\n        \"include\": \"#attrset-or-function\"\n      }, {\n        \"include\": \"#let\"\n      }, {\n        \"include\": \"#if\"\n      }, {\n        \"include\": \"#operator-unary\"\n      }, {\n        \"include\": \"#constants\"\n      }, {\n        \"include\": \"#bad-reserved\"\n      }, {\n        \"include\": \"#parameter-name-and-cont\"\n      }, {\n        \"include\": \"#others\"\n      }]\n    },\n    \"expression-cont\": {\n      \"begin\": \"(?=.?)\",\n      \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\",\n      \"patterns\": [{\n        \"include\": \"#parens\"\n      }, {\n        \"include\": \"#list\"\n      }, {\n        \"include\": \"#string\"\n      }, {\n        \"include\": \"#interpolation\"\n      }, {\n        \"include\": \"#function-for-sure\"\n      }, {\n        \"include\": \"#attrset-for-sure\"\n      }, {\n        \"include\": \"#attrset-or-function\"\n      }, {\n        \"match\": \"(\\\\bor\\\\b|\\\\.|==|!=|!|\\\\<\\\\=|\\\\<|\\\\>\\\\=|\\\\>|&&|\\\\|\\\\||-\\\\>|//|\\\\?|\\\\+\\\\+|-|\\\\*|/(?=([^*]|$))|\\\\+)\",\n        \"name\": \"keyword.operator.nix\"\n      }, {\n        \"include\": \"#constants\"\n      }, {\n        \"include\": \"#bad-reserved\"\n      }, {\n        \"include\": \"#parameter-name\"\n      }, {\n        \"include\": \"#others\"\n      }]\n    },\n    \"function-body\": {\n      \"begin\": \"(@\\\\s*([a-zA-Z\\\\_][a-zA-Z0-9\\\\_\\\\'\\\\-]*)\\\\s*)?(\\\\:)\",\n      \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\",\n      \"patterns\": [{\n        \"include\": \"#expression\"\n      }]\n    },\n    \"function-body-from-colon\": {\n      \"begin\": \"(\\\\:)\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.function.nix\"\n        }\n      },\n      \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\",\n      \"patterns\": [{\n        \"include\": \"#expression\"\n      }]\n    },\n    \"function-contents\": {\n      \"patterns\": [{\n        \"include\": \"#bad-reserved\"\n      }, {\n        \"include\": \"#function-parameter\"\n      }, {\n        \"include\": \"#others\"\n      }]\n    },\n    \"function-definition\": {\n      \"begin\": \"(?=.?)\",\n      \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\",\n      \"patterns\": [{\n        \"include\": \"#function-body-from-colon\"\n      }, {\n        \"begin\": \"(?=.?)\",\n        \"end\": \"(?=\\\\:)\",\n        \"patterns\": [{\n          \"begin\": \"(\\\\b[a-zA-Z\\\\_][a-zA-Z0-9\\\\_\\\\'\\\\-]*)\",\n          \"beginCaptures\": {\n            \"0\": {\n              \"name\": \"variable.parameter.function.4.nix\"\n            }\n          },\n          \"end\": \"(?=\\\\:)\",\n          \"patterns\": [{\n            \"begin\": \"\\\\@\",\n            \"end\": \"(?=\\\\:)\",\n            \"patterns\": [{\n              \"include\": \"#function-header-until-colon-no-arg\"\n            }, {\n              \"include\": \"#others\"\n            }]\n          }, {\n            \"include\": \"#others\"\n          }]\n        }, {\n          \"begin\": \"(?=\\\\{)\",\n          \"end\": \"(?=\\\\:)\",\n          \"patterns\": [{\n            \"include\": \"#function-header-until-colon-with-arg\"\n          }]\n        }]\n      }, {\n        \"include\": \"#others\"\n      }]\n    },\n    \"function-definition-brace-opened\": {\n      \"begin\": \"(?=.?)\",\n      \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\",\n      \"patterns\": [{\n        \"include\": \"#function-body-from-colon\"\n      }, {\n        \"begin\": \"(?=.?)\",\n        \"end\": \"(?=\\\\:)\",\n        \"patterns\": [{\n          \"include\": \"#function-header-close-brace-with-arg\"\n        }, {\n          \"begin\": \"(?=.?)\",\n          \"end\": \"(?=\\\\})\",\n          \"patterns\": [{\n            \"include\": \"#function-contents\"\n          }]\n        }]\n      }, {\n        \"include\": \"#others\"\n      }]\n    },\n    \"function-for-sure\": {\n      \"patterns\": [{\n        \"begin\": `(?=(\\\\b[a-zA-Z\\\\_][a-zA-Z0-9\\\\_\\\\'\\\\-]*\\\\s*[:@]|\\\\{[^}]*\\\\}\\\\s*:|\\\\{[^#}\"'/=]*[,\\\\?]))`,\n        \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\",\n        \"patterns\": [{\n          \"include\": \"#function-definition\"\n        }]\n      }]\n    },\n    \"function-header-close-brace-no-arg\": {\n      \"begin\": \"\\\\}\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.entity.function.nix\"\n        }\n      },\n      \"end\": \"(?=\\\\:)\",\n      \"patterns\": [{\n        \"include\": \"#others\"\n      }]\n    },\n    \"function-header-close-brace-with-arg\": {\n      \"begin\": \"\\\\}\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.entity.function.nix\"\n        }\n      },\n      \"end\": \"(?=\\\\:)\",\n      \"patterns\": [{\n        \"include\": \"#function-header-terminal-arg\"\n      }, {\n        \"include\": \"#others\"\n      }]\n    },\n    \"function-header-open-brace\": {\n      \"begin\": \"\\\\{\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.entity.function.2.nix\"\n        }\n      },\n      \"end\": \"(?=\\\\})\",\n      \"patterns\": [{\n        \"include\": \"#function-contents\"\n      }]\n    },\n    \"function-header-terminal-arg\": {\n      \"begin\": \"(?=@)\",\n      \"end\": \"(?=\\\\:)\",\n      \"patterns\": [{\n        \"begin\": \"\\\\@\",\n        \"end\": \"(?=\\\\:)\",\n        \"patterns\": [{\n          \"begin\": \"(\\\\b[a-zA-Z\\\\_][a-zA-Z0-9\\\\_\\\\'\\\\-]*)\",\n          \"end\": \"(?=\\\\:)\",\n          \"name\": \"variable.parameter.function.3.nix\"\n        }, {\n          \"include\": \"#others\"\n        }]\n      }, {\n        \"include\": \"#others\"\n      }]\n    },\n    \"function-header-until-colon-no-arg\": {\n      \"begin\": \"(?=\\\\{)\",\n      \"end\": \"(?=\\\\:)\",\n      \"patterns\": [{\n        \"include\": \"#function-header-open-brace\"\n      }, {\n        \"include\": \"#function-header-close-brace-no-arg\"\n      }]\n    },\n    \"function-header-until-colon-with-arg\": {\n      \"begin\": \"(?=\\\\{)\",\n      \"end\": \"(?=\\\\:)\",\n      \"patterns\": [{\n        \"include\": \"#function-header-open-brace\"\n      }, {\n        \"include\": \"#function-header-close-brace-with-arg\"\n      }]\n    },\n    \"function-parameter\": {\n      \"patterns\": [{\n        \"begin\": \"(\\\\.\\\\.\\\\.)\",\n        \"end\": \"(,|(?=\\\\}))\",\n        \"name\": \"keyword.operator.nix\",\n        \"patterns\": [{\n          \"include\": \"#others\"\n        }]\n      }, {\n        \"begin\": \"\\\\b[a-zA-Z\\\\_][a-zA-Z0-9\\\\_\\\\'\\\\-]*\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"variable.parameter.function.1.nix\"\n          }\n        },\n        \"end\": \"(,|(?=\\\\}))\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"keyword.operator.nix\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#whitespace\"\n        }, {\n          \"include\": \"#comment\"\n        }, {\n          \"include\": \"#function-parameter-default\"\n        }, {\n          \"include\": \"#expression\"\n        }]\n      }, {\n        \"include\": \"#others\"\n      }]\n    },\n    \"function-parameter-default\": {\n      \"begin\": \"\\\\?\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"keyword.operator.nix\"\n        }\n      },\n      \"end\": \"(?=[,}])\",\n      \"patterns\": [{\n        \"include\": \"#expression\"\n      }]\n    },\n    \"if\": {\n      \"begin\": \"(?=\\\\bif\\\\b)\",\n      \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\",\n      \"patterns\": [{\n        \"begin\": \"\\\\bif\\\\b\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"keyword.other.nix\"\n          }\n        },\n        \"end\": \"\\\\bth(?=en\\\\b)\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"keyword.other.nix\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#expression\"\n        }]\n      }, {\n        \"begin\": \"(?<=th)en\\\\b\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"keyword.other.nix\"\n          }\n        },\n        \"end\": \"\\\\bel(?=se\\\\b)\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"keyword.other.nix\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#expression\"\n        }]\n      }, {\n        \"begin\": \"(?<=el)se\\\\b\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"keyword.other.nix\"\n          }\n        },\n        \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"keyword.other.nix\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#expression\"\n        }]\n      }]\n    },\n    \"illegal\": {\n      \"match\": \".\",\n      \"name\": \"invalid.illegal\"\n    },\n    \"interpolation\": {\n      \"begin\": \"\\\\$\\\\{\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.section.embedded.begin.nix\"\n        }\n      },\n      \"end\": \"\\\\}\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.section.embedded.end.nix\"\n        }\n      },\n      \"name\": \"meta.embedded\",\n      \"patterns\": [{\n        \"include\": \"#expression\"\n      }]\n    },\n    \"let\": {\n      \"begin\": \"(?=\\\\blet\\\\b)\",\n      \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\",\n      \"patterns\": [{\n        \"begin\": \"\\\\blet\\\\b\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"keyword.other.nix\"\n          }\n        },\n        \"end\": \"(?=([\\\\])};,]|\\\\b(in|else|then)\\\\b))\",\n        \"patterns\": [{\n          \"begin\": \"(?=\\\\{)\",\n          \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\",\n          \"patterns\": [{\n            \"begin\": \"\\\\{\",\n            \"end\": \"\\\\}\",\n            \"patterns\": [{\n              \"include\": \"#attrset-contents\"\n            }]\n          }, {\n            \"begin\": \"(^|(?<=\\\\}))\",\n            \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\",\n            \"patterns\": [{\n              \"include\": \"#expression-cont\"\n            }]\n          }, {\n            \"include\": \"#others\"\n          }]\n        }, {\n          \"include\": \"#attrset-contents\"\n        }, {\n          \"include\": \"#others\"\n        }]\n      }, {\n        \"begin\": \"\\\\bin\\\\b\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"keyword.other.nix\"\n          }\n        },\n        \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\",\n        \"patterns\": [{\n          \"include\": \"#expression\"\n        }]\n      }]\n    },\n    \"list\": {\n      \"begin\": \"\\\\[\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.list.nix\"\n        }\n      },\n      \"end\": \"\\\\]\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.list.nix\"\n        }\n      },\n      \"patterns\": [{\n        \"include\": \"#expression\"\n      }]\n    },\n    \"list-and-cont\": {\n      \"begin\": \"(?=\\\\[)\",\n      \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\",\n      \"patterns\": [{\n        \"include\": \"#list\"\n      }, {\n        \"include\": \"#expression-cont\"\n      }]\n    },\n    \"operator-unary\": {\n      \"match\": \"(!|-)\",\n      \"name\": \"keyword.operator.unary.nix\"\n    },\n    \"others\": {\n      \"patterns\": [{\n        \"include\": \"#whitespace\"\n      }, {\n        \"include\": \"#comment\"\n      }, {\n        \"include\": \"#illegal\"\n      }]\n    },\n    \"parameter-name\": {\n      \"captures\": {\n        \"0\": {\n          \"name\": \"variable.parameter.name.nix\"\n        }\n      },\n      \"match\": \"\\\\b[a-zA-Z\\\\_][a-zA-Z0-9\\\\_\\\\'\\\\-]*\"\n    },\n    \"parameter-name-and-cont\": {\n      \"begin\": \"\\\\b[a-zA-Z\\\\_][a-zA-Z0-9\\\\_\\\\'\\\\-]*\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"variable.parameter.name.nix\"\n        }\n      },\n      \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\",\n      \"patterns\": [{\n        \"include\": \"#expression-cont\"\n      }]\n    },\n    \"parens\": {\n      \"begin\": \"\\\\(\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.expression.nix\"\n        }\n      },\n      \"end\": \"\\\\)\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.expression.nix\"\n        }\n      },\n      \"patterns\": [{\n        \"include\": \"#expression\"\n      }]\n    },\n    \"parens-and-cont\": {\n      \"begin\": \"(?=\\\\()\",\n      \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\",\n      \"patterns\": [{\n        \"include\": \"#parens\"\n      }, {\n        \"include\": \"#expression-cont\"\n      }]\n    },\n    \"string\": {\n      \"patterns\": [{\n        \"begin\": \"(?=\\\\'\\\\')\",\n        \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\",\n        \"patterns\": [{\n          \"begin\": \"\\\\'\\\\'\",\n          \"beginCaptures\": {\n            \"0\": {\n              \"name\": \"punctuation.definition.string.other.start.nix\"\n            }\n          },\n          \"end\": \"\\\\'\\\\'(?!\\\\$|\\\\'|\\\\\\\\.)\",\n          \"endCaptures\": {\n            \"0\": {\n              \"name\": \"punctuation.definition.string.other.end.nix\"\n            }\n          },\n          \"name\": \"string.quoted.other.nix\",\n          \"patterns\": [{\n            \"match\": \"\\\\'\\\\'(\\\\$|\\\\'|\\\\\\\\.)\",\n            \"name\": \"constant.character.escape.nix\"\n          }, {\n            \"include\": \"#interpolation\"\n          }]\n        }, {\n          \"include\": \"#expression-cont\"\n        }]\n      }, {\n        \"begin\": '(?=\\\\\")',\n        \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\",\n        \"patterns\": [{\n          \"include\": \"#string-quoted\"\n        }, {\n          \"include\": \"#expression-cont\"\n        }]\n      }, {\n        \"begin\": \"(~?[a-zA-Z0-9\\\\.\\\\_\\\\-\\\\+]*(\\\\/[a-zA-Z0-9\\\\.\\\\_\\\\-\\\\+]+)+)\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"string.unquoted.path.nix\"\n          }\n        },\n        \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\",\n        \"patterns\": [{\n          \"include\": \"#expression-cont\"\n        }]\n      }, {\n        \"begin\": \"(\\\\<[a-zA-Z0-9\\\\.\\\\_\\\\-\\\\+]+(\\\\/[a-zA-Z0-9\\\\.\\\\_\\\\-\\\\+]+)*\\\\>)\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"string.unquoted.spath.nix\"\n          }\n        },\n        \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\",\n        \"patterns\": [{\n          \"include\": \"#expression-cont\"\n        }]\n      }, {\n        \"begin\": \"([a-zA-Z][a-zA-Z0-9\\\\+\\\\-\\\\.]*\\\\:[a-zA-Z0-9\\\\%\\\\/\\\\?\\\\:\\\\@\\\\&\\\\=\\\\+\\\\$\\\\,\\\\-\\\\_\\\\.\\\\!\\\\~\\\\*\\\\']+)\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"string.unquoted.url.nix\"\n          }\n        },\n        \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\",\n        \"patterns\": [{\n          \"include\": \"#expression-cont\"\n        }]\n      }]\n    },\n    \"string-quoted\": {\n      \"begin\": '\\\\\"',\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.double.start.nix\"\n        }\n      },\n      \"end\": '\\\\\"',\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.double.end.nix\"\n        }\n      },\n      \"name\": \"string.quoted.double.nix\",\n      \"patterns\": [{\n        \"match\": \"\\\\\\\\.\",\n        \"name\": \"constant.character.escape.nix\"\n      }, {\n        \"include\": \"#interpolation\"\n      }]\n    },\n    \"whitespace\": {\n      \"match\": \"\\\\s+\"\n    },\n    \"with-assert\": {\n      \"begin\": \"(?<![\\\\w'-])(with|assert)(?![\\\\w'-])\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"keyword.other.nix\"\n        }\n      },\n      \"end\": \"\\\\;\",\n      \"patterns\": [{\n        \"include\": \"#expression\"\n      }]\n    }\n  },\n  \"scopeName\": \"source.nix\"\n});\nvar nix = [lang];\nexport { nix as default };"],
  "mappings": "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",
  "names": []
}
