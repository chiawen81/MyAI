{
  "version": 3,
  "sources": ["../../../../../../node_modules/shiki/dist/langs.mjs", "../../../../../../node_modules/shiki/dist/chunks/wasm-dynamic.mjs", "../../../../../../node_modules/shiki/dist/themes.mjs", "../../../../../../node_modules/@shikijs/core/dist/types.mjs", "../../../../../../node_modules/@shikijs/core/dist/textmate.mjs", "../../../../../../node_modules/@shikijs/core/dist/index.mjs", "../../../../../../node_modules/shiki/dist/theme-css-variables.mjs", "../../../../../../node_modules/shiki/dist/bundle-full.mjs"],
  "sourcesContent": ["const bundledLanguagesInfo = [{\n  \"id\": \"abap\",\n  \"name\": \"ABAP\",\n  \"import\": () => import('./langs/abap.mjs')\n}, {\n  \"id\": \"actionscript-3\",\n  \"name\": \"ActionScript\",\n  \"import\": () => import('./langs/actionscript-3.mjs')\n}, {\n  \"id\": \"ada\",\n  \"name\": \"Ada\",\n  \"import\": () => import('./langs/ada.mjs')\n}, {\n  \"id\": \"angular-html\",\n  \"name\": \"Angular HTML\",\n  \"import\": () => import('./langs/angular-html.mjs')\n}, {\n  \"id\": \"angular-ts\",\n  \"name\": \"Angular TypeScript\",\n  \"import\": () => import('./langs/angular-ts.mjs')\n}, {\n  \"id\": \"apache\",\n  \"name\": \"Apache Conf\",\n  \"import\": () => import('./langs/apache.mjs')\n}, {\n  \"id\": \"apex\",\n  \"name\": \"Apex\",\n  \"import\": () => import('./langs/apex.mjs')\n}, {\n  \"id\": \"apl\",\n  \"name\": \"APL\",\n  \"import\": () => import('./langs/apl.mjs')\n}, {\n  \"id\": \"applescript\",\n  \"name\": \"AppleScript\",\n  \"import\": () => import('./langs/applescript.mjs')\n}, {\n  \"id\": \"ara\",\n  \"name\": \"Ara\",\n  \"import\": () => import('./langs/ara.mjs')\n}, {\n  \"id\": \"asciidoc\",\n  \"name\": \"AsciiDoc\",\n  \"aliases\": [\"adoc\"],\n  \"import\": () => import('./langs/asciidoc.mjs')\n}, {\n  \"id\": \"asm\",\n  \"name\": \"Assembly\",\n  \"import\": () => import('./langs/asm.mjs')\n}, {\n  \"id\": \"astro\",\n  \"name\": \"Astro\",\n  \"import\": () => import('./langs/astro.mjs')\n}, {\n  \"id\": \"awk\",\n  \"name\": \"AWK\",\n  \"import\": () => import('./langs/awk.mjs')\n}, {\n  \"id\": \"ballerina\",\n  \"name\": \"Ballerina\",\n  \"import\": () => import('./langs/ballerina.mjs')\n}, {\n  \"id\": \"bat\",\n  \"name\": \"Batch File\",\n  \"aliases\": [\"batch\"],\n  \"import\": () => import('./langs/bat.mjs')\n}, {\n  \"id\": \"beancount\",\n  \"name\": \"Beancount\",\n  \"import\": () => import('./langs/beancount.mjs')\n}, {\n  \"id\": \"berry\",\n  \"name\": \"Berry\",\n  \"aliases\": [\"be\"],\n  \"import\": () => import('./langs/berry.mjs')\n}, {\n  \"id\": \"bibtex\",\n  \"name\": \"BibTeX\",\n  \"import\": () => import('./langs/bibtex.mjs')\n}, {\n  \"id\": \"bicep\",\n  \"name\": \"Bicep\",\n  \"import\": () => import('./langs/bicep.mjs')\n}, {\n  \"id\": \"blade\",\n  \"name\": \"Blade\",\n  \"import\": () => import('./langs/blade.mjs')\n}, {\n  \"id\": \"c\",\n  \"name\": \"C\",\n  \"import\": () => import('./langs/c.mjs')\n}, {\n  \"id\": \"cadence\",\n  \"name\": \"Cadence\",\n  \"aliases\": [\"cdc\"],\n  \"import\": () => import('./langs/cadence.mjs')\n}, {\n  \"id\": \"clarity\",\n  \"name\": \"Clarity\",\n  \"import\": () => import('./langs/clarity.mjs')\n}, {\n  \"id\": \"clojure\",\n  \"name\": \"Clojure\",\n  \"aliases\": [\"clj\"],\n  \"import\": () => import('./langs/clojure.mjs')\n}, {\n  \"id\": \"cmake\",\n  \"name\": \"CMake\",\n  \"import\": () => import('./langs/cmake.mjs')\n}, {\n  \"id\": \"cobol\",\n  \"name\": \"COBOL\",\n  \"import\": () => import('./langs/cobol.mjs')\n}, {\n  \"id\": \"codeowners\",\n  \"name\": \"CODEOWNERS\",\n  \"import\": () => import('./langs/codeowners.mjs')\n}, {\n  \"id\": \"codeql\",\n  \"name\": \"CodeQL\",\n  \"aliases\": [\"ql\"],\n  \"import\": () => import('./langs/codeql.mjs')\n}, {\n  \"id\": \"coffee\",\n  \"name\": \"CoffeeScript\",\n  \"aliases\": [\"coffeescript\"],\n  \"import\": () => import('./langs/coffee.mjs')\n}, {\n  \"id\": \"common-lisp\",\n  \"name\": \"Common Lisp\",\n  \"aliases\": [\"lisp\"],\n  \"import\": () => import('./langs/common-lisp.mjs')\n}, {\n  \"id\": \"cpp\",\n  \"name\": \"C++\",\n  \"aliases\": [\"c++\"],\n  \"import\": () => import('./langs/cpp.mjs')\n}, {\n  \"id\": \"crystal\",\n  \"name\": \"Crystal\",\n  \"import\": () => import('./langs/crystal.mjs')\n}, {\n  \"id\": \"csharp\",\n  \"name\": \"C#\",\n  \"aliases\": [\"c#\", \"cs\"],\n  \"import\": () => import('./langs/csharp.mjs')\n}, {\n  \"id\": \"css\",\n  \"name\": \"CSS\",\n  \"import\": () => import('./langs/css.mjs')\n}, {\n  \"id\": \"csv\",\n  \"name\": \"CSV\",\n  \"import\": () => import('./langs/csv.mjs')\n}, {\n  \"id\": \"cue\",\n  \"name\": \"CUE\",\n  \"import\": () => import('./langs/cue.mjs')\n}, {\n  \"id\": \"cypher\",\n  \"name\": \"Cypher\",\n  \"aliases\": [\"cql\"],\n  \"import\": () => import('./langs/cypher.mjs')\n}, {\n  \"id\": \"d\",\n  \"name\": \"D\",\n  \"import\": () => import('./langs/d.mjs')\n}, {\n  \"id\": \"dart\",\n  \"name\": \"Dart\",\n  \"import\": () => import('./langs/dart.mjs')\n}, {\n  \"id\": \"dax\",\n  \"name\": \"DAX\",\n  \"import\": () => import('./langs/dax.mjs')\n}, {\n  \"id\": \"desktop\",\n  \"name\": \"Desktop\",\n  \"import\": () => import('./langs/desktop.mjs')\n}, {\n  \"id\": \"diff\",\n  \"name\": \"Diff\",\n  \"import\": () => import('./langs/diff.mjs')\n}, {\n  \"id\": \"docker\",\n  \"name\": \"Dockerfile\",\n  \"aliases\": [\"dockerfile\"],\n  \"import\": () => import('./langs/docker.mjs')\n}, {\n  \"id\": \"dream-maker\",\n  \"name\": \"Dream Maker\",\n  \"import\": () => import('./langs/dream-maker.mjs')\n}, {\n  \"id\": \"edge\",\n  \"name\": \"Edge\",\n  \"import\": () => import('./langs/edge.mjs')\n}, {\n  \"id\": \"elixir\",\n  \"name\": \"Elixir\",\n  \"import\": () => import('./langs/elixir.mjs')\n}, {\n  \"id\": \"elm\",\n  \"name\": \"Elm\",\n  \"import\": () => import('./langs/elm.mjs')\n}, {\n  \"id\": \"emacs-lisp\",\n  \"name\": \"Emacs Lisp\",\n  \"aliases\": [\"elisp\"],\n  \"import\": () => import('./langs/emacs-lisp.mjs')\n}, {\n  \"id\": \"erb\",\n  \"name\": \"ERB\",\n  \"import\": () => import('./langs/erb.mjs')\n}, {\n  \"id\": \"erlang\",\n  \"name\": \"Erlang\",\n  \"aliases\": [\"erl\"],\n  \"import\": () => import('./langs/erlang.mjs')\n}, {\n  \"id\": \"fennel\",\n  \"name\": \"Fennel\",\n  \"import\": () => import('./langs/fennel.mjs')\n}, {\n  \"id\": \"fish\",\n  \"name\": \"Fish\",\n  \"import\": () => import('./langs/fish.mjs')\n}, {\n  \"id\": \"fluent\",\n  \"name\": \"Fluent\",\n  \"aliases\": [\"ftl\"],\n  \"import\": () => import('./langs/fluent.mjs')\n}, {\n  \"id\": \"fortran-fixed-form\",\n  \"name\": \"Fortran (Fixed Form)\",\n  \"aliases\": [\"f\", \"for\", \"f77\"],\n  \"import\": () => import('./langs/fortran-fixed-form.mjs')\n}, {\n  \"id\": \"fortran-free-form\",\n  \"name\": \"Fortran (Free Form)\",\n  \"aliases\": [\"f90\", \"f95\", \"f03\", \"f08\", \"f18\"],\n  \"import\": () => import('./langs/fortran-free-form.mjs')\n}, {\n  \"id\": \"fsharp\",\n  \"name\": \"F#\",\n  \"aliases\": [\"f#\", \"fs\"],\n  \"import\": () => import('./langs/fsharp.mjs')\n}, {\n  \"id\": \"gdresource\",\n  \"name\": \"GDResource\",\n  \"import\": () => import('./langs/gdresource.mjs')\n}, {\n  \"id\": \"gdscript\",\n  \"name\": \"GDScript\",\n  \"import\": () => import('./langs/gdscript.mjs')\n}, {\n  \"id\": \"gdshader\",\n  \"name\": \"GDShader\",\n  \"import\": () => import('./langs/gdshader.mjs')\n}, {\n  \"id\": \"genie\",\n  \"name\": \"Genie\",\n  \"import\": () => import('./langs/genie.mjs')\n}, {\n  \"id\": \"gherkin\",\n  \"name\": \"Gherkin\",\n  \"import\": () => import('./langs/gherkin.mjs')\n}, {\n  \"id\": \"git-commit\",\n  \"name\": \"Git Commit Message\",\n  \"import\": () => import('./langs/git-commit.mjs')\n}, {\n  \"id\": \"git-rebase\",\n  \"name\": \"Git Rebase Message\",\n  \"import\": () => import('./langs/git-rebase.mjs')\n}, {\n  \"id\": \"gleam\",\n  \"name\": \"Gleam\",\n  \"import\": () => import('./langs/gleam.mjs')\n}, {\n  \"id\": \"glimmer-js\",\n  \"name\": \"Glimmer JS\",\n  \"aliases\": [\"gjs\"],\n  \"import\": () => import('./langs/glimmer-js.mjs')\n}, {\n  \"id\": \"glimmer-ts\",\n  \"name\": \"Glimmer TS\",\n  \"aliases\": [\"gts\"],\n  \"import\": () => import('./langs/glimmer-ts.mjs')\n}, {\n  \"id\": \"glsl\",\n  \"name\": \"GLSL\",\n  \"import\": () => import('./langs/glsl.mjs')\n}, {\n  \"id\": \"gnuplot\",\n  \"name\": \"Gnuplot\",\n  \"import\": () => import('./langs/gnuplot.mjs')\n}, {\n  \"id\": \"go\",\n  \"name\": \"Go\",\n  \"import\": () => import('./langs/go.mjs')\n}, {\n  \"id\": \"graphql\",\n  \"name\": \"GraphQL\",\n  \"aliases\": [\"gql\"],\n  \"import\": () => import('./langs/graphql.mjs')\n}, {\n  \"id\": \"groovy\",\n  \"name\": \"Groovy\",\n  \"import\": () => import('./langs/groovy.mjs')\n}, {\n  \"id\": \"hack\",\n  \"name\": \"Hack\",\n  \"import\": () => import('./langs/hack.mjs')\n}, {\n  \"id\": \"haml\",\n  \"name\": \"Ruby Haml\",\n  \"import\": () => import('./langs/haml.mjs')\n}, {\n  \"id\": \"handlebars\",\n  \"name\": \"Handlebars\",\n  \"aliases\": [\"hbs\"],\n  \"import\": () => import('./langs/handlebars.mjs')\n}, {\n  \"id\": \"haskell\",\n  \"name\": \"Haskell\",\n  \"aliases\": [\"hs\"],\n  \"import\": () => import('./langs/haskell.mjs')\n}, {\n  \"id\": \"haxe\",\n  \"name\": \"Haxe\",\n  \"import\": () => import('./langs/haxe.mjs')\n}, {\n  \"id\": \"hcl\",\n  \"name\": \"HashiCorp HCL\",\n  \"import\": () => import('./langs/hcl.mjs')\n}, {\n  \"id\": \"hjson\",\n  \"name\": \"Hjson\",\n  \"import\": () => import('./langs/hjson.mjs')\n}, {\n  \"id\": \"hlsl\",\n  \"name\": \"HLSL\",\n  \"import\": () => import('./langs/hlsl.mjs')\n}, {\n  \"id\": \"html\",\n  \"name\": \"HTML\",\n  \"import\": () => import('./langs/html.mjs')\n}, {\n  \"id\": \"html-derivative\",\n  \"name\": \"HTML (Derivative)\",\n  \"import\": () => import('./langs/html-derivative.mjs')\n}, {\n  \"id\": \"http\",\n  \"name\": \"HTTP\",\n  \"import\": () => import('./langs/http.mjs')\n}, {\n  \"id\": \"hxml\",\n  \"name\": \"HXML\",\n  \"import\": () => import('./langs/hxml.mjs')\n}, {\n  \"id\": \"hy\",\n  \"name\": \"Hy\",\n  \"import\": () => import('./langs/hy.mjs')\n}, {\n  \"id\": \"imba\",\n  \"name\": \"Imba\",\n  \"import\": () => import('./langs/imba.mjs')\n}, {\n  \"id\": \"ini\",\n  \"name\": \"INI\",\n  \"aliases\": [\"properties\"],\n  \"import\": () => import('./langs/ini.mjs')\n}, {\n  \"id\": \"java\",\n  \"name\": \"Java\",\n  \"import\": () => import('./langs/java.mjs')\n}, {\n  \"id\": \"javascript\",\n  \"name\": \"JavaScript\",\n  \"aliases\": [\"js\"],\n  \"import\": () => import('./langs/javascript.mjs')\n}, {\n  \"id\": \"jinja\",\n  \"name\": \"Jinja\",\n  \"import\": () => import('./langs/jinja.mjs')\n}, {\n  \"id\": \"jison\",\n  \"name\": \"Jison\",\n  \"import\": () => import('./langs/jison.mjs')\n}, {\n  \"id\": \"json\",\n  \"name\": \"JSON\",\n  \"import\": () => import('./langs/json.mjs')\n}, {\n  \"id\": \"json5\",\n  \"name\": \"JSON5\",\n  \"import\": () => import('./langs/json5.mjs')\n}, {\n  \"id\": \"jsonc\",\n  \"name\": \"JSON with Comments\",\n  \"import\": () => import('./langs/jsonc.mjs')\n}, {\n  \"id\": \"jsonl\",\n  \"name\": \"JSON Lines\",\n  \"import\": () => import('./langs/jsonl.mjs')\n}, {\n  \"id\": \"jsonnet\",\n  \"name\": \"Jsonnet\",\n  \"import\": () => import('./langs/jsonnet.mjs')\n}, {\n  \"id\": \"jssm\",\n  \"name\": \"JSSM\",\n  \"aliases\": [\"fsl\"],\n  \"import\": () => import('./langs/jssm.mjs')\n}, {\n  \"id\": \"jsx\",\n  \"name\": \"JSX\",\n  \"import\": () => import('./langs/jsx.mjs')\n}, {\n  \"id\": \"julia\",\n  \"name\": \"Julia\",\n  \"aliases\": [\"jl\"],\n  \"import\": () => import('./langs/julia.mjs')\n}, {\n  \"id\": \"kotlin\",\n  \"name\": \"Kotlin\",\n  \"aliases\": [\"kt\", \"kts\"],\n  \"import\": () => import('./langs/kotlin.mjs')\n}, {\n  \"id\": \"kusto\",\n  \"name\": \"Kusto\",\n  \"aliases\": [\"kql\"],\n  \"import\": () => import('./langs/kusto.mjs')\n}, {\n  \"id\": \"latex\",\n  \"name\": \"LaTeX\",\n  \"import\": () => import('./langs/latex.mjs')\n}, {\n  \"id\": \"lean\",\n  \"name\": \"Lean 4\",\n  \"aliases\": [\"lean4\"],\n  \"import\": () => import('./langs/lean.mjs')\n}, {\n  \"id\": \"less\",\n  \"name\": \"Less\",\n  \"import\": () => import('./langs/less.mjs')\n}, {\n  \"id\": \"liquid\",\n  \"name\": \"Liquid\",\n  \"import\": () => import('./langs/liquid.mjs')\n}, {\n  \"id\": \"log\",\n  \"name\": \"Log file\",\n  \"import\": () => import('./langs/log.mjs')\n}, {\n  \"id\": \"logo\",\n  \"name\": \"Logo\",\n  \"import\": () => import('./langs/logo.mjs')\n}, {\n  \"id\": \"lua\",\n  \"name\": \"Lua\",\n  \"import\": () => import('./langs/lua.mjs')\n}, {\n  \"id\": \"luau\",\n  \"name\": \"Luau\",\n  \"import\": () => import('./langs/luau.mjs')\n}, {\n  \"id\": \"make\",\n  \"name\": \"Makefile\",\n  \"aliases\": [\"makefile\"],\n  \"import\": () => import('./langs/make.mjs')\n}, {\n  \"id\": \"markdown\",\n  \"name\": \"Markdown\",\n  \"aliases\": [\"md\"],\n  \"import\": () => import('./langs/markdown.mjs')\n}, {\n  \"id\": \"marko\",\n  \"name\": \"Marko\",\n  \"import\": () => import('./langs/marko.mjs')\n}, {\n  \"id\": \"matlab\",\n  \"name\": \"MATLAB\",\n  \"import\": () => import('./langs/matlab.mjs')\n}, {\n  \"id\": \"mdc\",\n  \"name\": \"MDC\",\n  \"import\": () => import('./langs/mdc.mjs')\n}, {\n  \"id\": \"mdx\",\n  \"name\": \"MDX\",\n  \"import\": () => import('./langs/mdx.mjs')\n}, {\n  \"id\": \"mermaid\",\n  \"name\": \"Mermaid\",\n  \"import\": () => import('./langs/mermaid.mjs')\n}, {\n  \"id\": \"mojo\",\n  \"name\": \"Mojo\",\n  \"import\": () => import('./langs/mojo.mjs')\n}, {\n  \"id\": \"move\",\n  \"name\": \"Move\",\n  \"import\": () => import('./langs/move.mjs')\n}, {\n  \"id\": \"narrat\",\n  \"name\": \"Narrat Language\",\n  \"aliases\": [\"nar\"],\n  \"import\": () => import('./langs/narrat.mjs')\n}, {\n  \"id\": \"nextflow\",\n  \"name\": \"Nextflow\",\n  \"aliases\": [\"nf\"],\n  \"import\": () => import('./langs/nextflow.mjs')\n}, {\n  \"id\": \"nginx\",\n  \"name\": \"Nginx\",\n  \"import\": () => import('./langs/nginx.mjs')\n}, {\n  \"id\": \"nim\",\n  \"name\": \"Nim\",\n  \"import\": () => import('./langs/nim.mjs')\n}, {\n  \"id\": \"nix\",\n  \"name\": \"Nix\",\n  \"import\": () => import('./langs/nix.mjs')\n}, {\n  \"id\": \"nushell\",\n  \"name\": \"nushell\",\n  \"aliases\": [\"nu\"],\n  \"import\": () => import('./langs/nushell.mjs')\n}, {\n  \"id\": \"objective-c\",\n  \"name\": \"Objective-C\",\n  \"aliases\": [\"objc\"],\n  \"import\": () => import('./langs/objective-c.mjs')\n}, {\n  \"id\": \"objective-cpp\",\n  \"name\": \"Objective-C++\",\n  \"import\": () => import('./langs/objective-cpp.mjs')\n}, {\n  \"id\": \"ocaml\",\n  \"name\": \"OCaml\",\n  \"import\": () => import('./langs/ocaml.mjs')\n}, {\n  \"id\": \"pascal\",\n  \"name\": \"Pascal\",\n  \"import\": () => import('./langs/pascal.mjs')\n}, {\n  \"id\": \"perl\",\n  \"name\": \"Perl\",\n  \"import\": () => import('./langs/perl.mjs')\n}, {\n  \"id\": \"php\",\n  \"name\": \"PHP\",\n  \"import\": () => import('./langs/php.mjs')\n}, {\n  \"id\": \"plsql\",\n  \"name\": \"PL/SQL\",\n  \"import\": () => import('./langs/plsql.mjs')\n}, {\n  \"id\": \"po\",\n  \"name\": \"Gettext PO\",\n  \"aliases\": [\"pot\", \"potx\"],\n  \"import\": () => import('./langs/po.mjs')\n}, {\n  \"id\": \"postcss\",\n  \"name\": \"PostCSS\",\n  \"import\": () => import('./langs/postcss.mjs')\n}, {\n  \"id\": \"powerquery\",\n  \"name\": \"PowerQuery\",\n  \"import\": () => import('./langs/powerquery.mjs')\n}, {\n  \"id\": \"powershell\",\n  \"name\": \"PowerShell\",\n  \"aliases\": [\"ps\", \"ps1\"],\n  \"import\": () => import('./langs/powershell.mjs')\n}, {\n  \"id\": \"prisma\",\n  \"name\": \"Prisma\",\n  \"import\": () => import('./langs/prisma.mjs')\n}, {\n  \"id\": \"prolog\",\n  \"name\": \"Prolog\",\n  \"import\": () => import('./langs/prolog.mjs')\n}, {\n  \"id\": \"proto\",\n  \"name\": \"Protocol Buffer 3\",\n  \"import\": () => import('./langs/proto.mjs')\n}, {\n  \"id\": \"pug\",\n  \"name\": \"Pug\",\n  \"aliases\": [\"jade\"],\n  \"import\": () => import('./langs/pug.mjs')\n}, {\n  \"id\": \"puppet\",\n  \"name\": \"Puppet\",\n  \"import\": () => import('./langs/puppet.mjs')\n}, {\n  \"id\": \"purescript\",\n  \"name\": \"PureScript\",\n  \"import\": () => import('./langs/purescript.mjs')\n}, {\n  \"id\": \"python\",\n  \"name\": \"Python\",\n  \"aliases\": [\"py\"],\n  \"import\": () => import('./langs/python.mjs')\n}, {\n  \"id\": \"qml\",\n  \"name\": \"QML\",\n  \"import\": () => import('./langs/qml.mjs')\n}, {\n  \"id\": \"qmldir\",\n  \"name\": \"QML Directory\",\n  \"import\": () => import('./langs/qmldir.mjs')\n}, {\n  \"id\": \"qss\",\n  \"name\": \"Qt Style Sheets\",\n  \"import\": () => import('./langs/qss.mjs')\n}, {\n  \"id\": \"r\",\n  \"name\": \"R\",\n  \"import\": () => import('./langs/r.mjs')\n}, {\n  \"id\": \"racket\",\n  \"name\": \"Racket\",\n  \"import\": () => import('./langs/racket.mjs')\n}, {\n  \"id\": \"raku\",\n  \"name\": \"Raku\",\n  \"aliases\": [\"perl6\"],\n  \"import\": () => import('./langs/raku.mjs')\n}, {\n  \"id\": \"razor\",\n  \"name\": \"ASP.NET Razor\",\n  \"import\": () => import('./langs/razor.mjs')\n}, {\n  \"id\": \"reg\",\n  \"name\": \"Windows Registry Script\",\n  \"import\": () => import('./langs/reg.mjs')\n}, {\n  \"id\": \"regexp\",\n  \"name\": \"RegExp\",\n  \"aliases\": [\"regex\"],\n  \"import\": () => import('./langs/regexp.mjs')\n}, {\n  \"id\": \"rel\",\n  \"name\": \"Rel\",\n  \"import\": () => import('./langs/rel.mjs')\n}, {\n  \"id\": \"riscv\",\n  \"name\": \"RISC-V\",\n  \"import\": () => import('./langs/riscv.mjs')\n}, {\n  \"id\": \"rst\",\n  \"name\": \"reStructuredText\",\n  \"import\": () => import('./langs/rst.mjs')\n}, {\n  \"id\": \"ruby\",\n  \"name\": \"Ruby\",\n  \"aliases\": [\"rb\"],\n  \"import\": () => import('./langs/ruby.mjs')\n}, {\n  \"id\": \"rust\",\n  \"name\": \"Rust\",\n  \"aliases\": [\"rs\"],\n  \"import\": () => import('./langs/rust.mjs')\n}, {\n  \"id\": \"sas\",\n  \"name\": \"SAS\",\n  \"import\": () => import('./langs/sas.mjs')\n}, {\n  \"id\": \"sass\",\n  \"name\": \"Sass\",\n  \"import\": () => import('./langs/sass.mjs')\n}, {\n  \"id\": \"scala\",\n  \"name\": \"Scala\",\n  \"import\": () => import('./langs/scala.mjs')\n}, {\n  \"id\": \"scheme\",\n  \"name\": \"Scheme\",\n  \"import\": () => import('./langs/scheme.mjs')\n}, {\n  \"id\": \"scss\",\n  \"name\": \"SCSS\",\n  \"import\": () => import('./langs/scss.mjs')\n}, {\n  \"id\": \"shaderlab\",\n  \"name\": \"ShaderLab\",\n  \"aliases\": [\"shader\"],\n  \"import\": () => import('./langs/shaderlab.mjs')\n}, {\n  \"id\": \"shellscript\",\n  \"name\": \"Shell\",\n  \"aliases\": [\"bash\", \"sh\", \"shell\", \"zsh\"],\n  \"import\": () => import('./langs/shellscript.mjs')\n}, {\n  \"id\": \"shellsession\",\n  \"name\": \"Shell Session\",\n  \"aliases\": [\"console\"],\n  \"import\": () => import('./langs/shellsession.mjs')\n}, {\n  \"id\": \"smalltalk\",\n  \"name\": \"Smalltalk\",\n  \"import\": () => import('./langs/smalltalk.mjs')\n}, {\n  \"id\": \"solidity\",\n  \"name\": \"Solidity\",\n  \"import\": () => import('./langs/solidity.mjs')\n}, {\n  \"id\": \"soy\",\n  \"name\": \"Closure Templates\",\n  \"aliases\": [\"closure-templates\"],\n  \"import\": () => import('./langs/soy.mjs')\n}, {\n  \"id\": \"sparql\",\n  \"name\": \"SPARQL\",\n  \"import\": () => import('./langs/sparql.mjs')\n}, {\n  \"id\": \"splunk\",\n  \"name\": \"Splunk Query Language\",\n  \"aliases\": [\"spl\"],\n  \"import\": () => import('./langs/splunk.mjs')\n}, {\n  \"id\": \"sql\",\n  \"name\": \"SQL\",\n  \"import\": () => import('./langs/sql.mjs')\n}, {\n  \"id\": \"ssh-config\",\n  \"name\": \"SSH Config\",\n  \"import\": () => import('./langs/ssh-config.mjs')\n}, {\n  \"id\": \"stata\",\n  \"name\": \"Stata\",\n  \"import\": () => import('./langs/stata.mjs')\n}, {\n  \"id\": \"stylus\",\n  \"name\": \"Stylus\",\n  \"aliases\": [\"styl\"],\n  \"import\": () => import('./langs/stylus.mjs')\n}, {\n  \"id\": \"svelte\",\n  \"name\": \"Svelte\",\n  \"import\": () => import('./langs/svelte.mjs')\n}, {\n  \"id\": \"swift\",\n  \"name\": \"Swift\",\n  \"import\": () => import('./langs/swift.mjs')\n}, {\n  \"id\": \"system-verilog\",\n  \"name\": \"SystemVerilog\",\n  \"import\": () => import('./langs/system-verilog.mjs')\n}, {\n  \"id\": \"systemd\",\n  \"name\": \"Systemd Units\",\n  \"import\": () => import('./langs/systemd.mjs')\n}, {\n  \"id\": \"tasl\",\n  \"name\": \"Tasl\",\n  \"import\": () => import('./langs/tasl.mjs')\n}, {\n  \"id\": \"tcl\",\n  \"name\": \"Tcl\",\n  \"import\": () => import('./langs/tcl.mjs')\n}, {\n  \"id\": \"templ\",\n  \"name\": \"Templ\",\n  \"import\": () => import('./langs/templ.mjs')\n}, {\n  \"id\": \"terraform\",\n  \"name\": \"Terraform\",\n  \"aliases\": [\"tf\", \"tfvars\"],\n  \"import\": () => import('./langs/terraform.mjs')\n}, {\n  \"id\": \"tex\",\n  \"name\": \"TeX\",\n  \"import\": () => import('./langs/tex.mjs')\n}, {\n  \"id\": \"toml\",\n  \"name\": \"TOML\",\n  \"import\": () => import('./langs/toml.mjs')\n}, {\n  \"id\": \"tsv\",\n  \"name\": \"TSV\",\n  \"import\": () => import('./langs/tsv.mjs')\n}, {\n  \"id\": \"tsx\",\n  \"name\": \"TSX\",\n  \"import\": () => import('./langs/tsx.mjs')\n}, {\n  \"id\": \"turtle\",\n  \"name\": \"Turtle\",\n  \"import\": () => import('./langs/turtle.mjs')\n}, {\n  \"id\": \"twig\",\n  \"name\": \"Twig\",\n  \"import\": () => import('./langs/twig.mjs')\n}, {\n  \"id\": \"typescript\",\n  \"name\": \"TypeScript\",\n  \"aliases\": [\"ts\"],\n  \"import\": () => import('./langs/typescript.mjs')\n}, {\n  \"id\": \"typespec\",\n  \"name\": \"TypeSpec\",\n  \"aliases\": [\"tsp\"],\n  \"import\": () => import('./langs/typespec.mjs')\n}, {\n  \"id\": \"typst\",\n  \"name\": \"Typst\",\n  \"aliases\": [\"typ\"],\n  \"import\": () => import('./langs/typst.mjs')\n}, {\n  \"id\": \"v\",\n  \"name\": \"V\",\n  \"import\": () => import('./langs/v.mjs')\n}, {\n  \"id\": \"vala\",\n  \"name\": \"Vala\",\n  \"import\": () => import('./langs/vala.mjs')\n}, {\n  \"id\": \"vb\",\n  \"name\": \"Visual Basic\",\n  \"aliases\": [\"cmd\"],\n  \"import\": () => import('./langs/vb.mjs')\n}, {\n  \"id\": \"verilog\",\n  \"name\": \"Verilog\",\n  \"import\": () => import('./langs/verilog.mjs')\n}, {\n  \"id\": \"vhdl\",\n  \"name\": \"VHDL\",\n  \"import\": () => import('./langs/vhdl.mjs')\n}, {\n  \"id\": \"viml\",\n  \"name\": \"Vim Script\",\n  \"aliases\": [\"vim\", \"vimscript\"],\n  \"import\": () => import('./langs/viml.mjs')\n}, {\n  \"id\": \"vue\",\n  \"name\": \"Vue\",\n  \"import\": () => import('./langs/vue.mjs')\n}, {\n  \"id\": \"vue-html\",\n  \"name\": \"Vue HTML\",\n  \"import\": () => import('./langs/vue-html.mjs')\n}, {\n  \"id\": \"vyper\",\n  \"name\": \"Vyper\",\n  \"aliases\": [\"vy\"],\n  \"import\": () => import('./langs/vyper.mjs')\n}, {\n  \"id\": \"wasm\",\n  \"name\": \"WebAssembly\",\n  \"import\": () => import('./langs/wasm.mjs')\n}, {\n  \"id\": \"wenyan\",\n  \"name\": \"Wenyan\",\n  \"aliases\": [\"\\u6587\\u8A00\"],\n  \"import\": () => import('./langs/wenyan.mjs')\n}, {\n  \"id\": \"wgsl\",\n  \"name\": \"WGSL\",\n  \"import\": () => import('./langs/wgsl.mjs')\n}, {\n  \"id\": \"wikitext\",\n  \"name\": \"Wikitext\",\n  \"aliases\": [\"mediawiki\", \"wiki\"],\n  \"import\": () => import('./langs/wikitext.mjs')\n}, {\n  \"id\": \"wolfram\",\n  \"name\": \"Wolfram\",\n  \"aliases\": [\"wl\"],\n  \"import\": () => import('./langs/wolfram.mjs')\n}, {\n  \"id\": \"xml\",\n  \"name\": \"XML\",\n  \"import\": () => import('./langs/xml.mjs')\n}, {\n  \"id\": \"xsl\",\n  \"name\": \"XSL\",\n  \"import\": () => import('./langs/xsl.mjs')\n}, {\n  \"id\": \"yaml\",\n  \"name\": \"YAML\",\n  \"aliases\": [\"yml\"],\n  \"import\": () => import('./langs/yaml.mjs')\n}, {\n  \"id\": \"zenscript\",\n  \"name\": \"ZenScript\",\n  \"import\": () => import('./langs/zenscript.mjs')\n}, {\n  \"id\": \"zig\",\n  \"name\": \"Zig\",\n  \"import\": () => import('./langs/zig.mjs')\n}];\nconst bundledLanguagesBase = Object.fromEntries(bundledLanguagesInfo.map(i => [i.id, i.import]));\nconst bundledLanguagesAlias = Object.fromEntries(bundledLanguagesInfo.flatMap(i => i.aliases?.map(a => [a, i.import]) || []));\nconst bundledLanguages = {\n  ...bundledLanguagesBase,\n  ...bundledLanguagesAlias\n};\nexport { bundledLanguages, bundledLanguagesAlias, bundledLanguagesBase, bundledLanguagesInfo };", "const getWasmInlined = async info => {\n  return import('shiki/wasm').then(wasm => wasm.default(info));\n};\nexport { getWasmInlined as g };", "const bundledThemesInfo = [{\n  \"id\": \"andromeeda\",\n  \"displayName\": \"Andromeeda\",\n  \"type\": \"dark\",\n  \"import\": () => import('./themes/andromeeda.mjs')\n}, {\n  \"id\": \"aurora-x\",\n  \"displayName\": \"Aurora X\",\n  \"type\": \"dark\",\n  \"import\": () => import('./themes/aurora-x.mjs')\n}, {\n  \"id\": \"ayu-dark\",\n  \"displayName\": \"Ayu Dark\",\n  \"type\": \"dark\",\n  \"import\": () => import('./themes/ayu-dark.mjs')\n}, {\n  \"id\": \"catppuccin-frappe\",\n  \"displayName\": \"Catppuccin Frapp\\xE9\",\n  \"type\": \"dark\",\n  \"import\": () => import('./themes/catppuccin-frappe.mjs')\n}, {\n  \"id\": \"catppuccin-latte\",\n  \"displayName\": \"Catppuccin Latte\",\n  \"type\": \"light\",\n  \"import\": () => import('./themes/catppuccin-latte.mjs')\n}, {\n  \"id\": \"catppuccin-macchiato\",\n  \"displayName\": \"Catppuccin Macchiato\",\n  \"type\": \"dark\",\n  \"import\": () => import('./themes/catppuccin-macchiato.mjs')\n}, {\n  \"id\": \"catppuccin-mocha\",\n  \"displayName\": \"Catppuccin Mocha\",\n  \"type\": \"dark\",\n  \"import\": () => import('./themes/catppuccin-mocha.mjs')\n}, {\n  \"id\": \"dark-plus\",\n  \"displayName\": \"Dark Plus\",\n  \"type\": \"dark\",\n  \"import\": () => import('./themes/dark-plus.mjs')\n}, {\n  \"id\": \"dracula\",\n  \"displayName\": \"Dracula Theme\",\n  \"type\": \"dark\",\n  \"import\": () => import('./themes/dracula.mjs')\n}, {\n  \"id\": \"dracula-soft\",\n  \"displayName\": \"Dracula Theme Soft\",\n  \"type\": \"dark\",\n  \"import\": () => import('./themes/dracula-soft.mjs')\n}, {\n  \"id\": \"github-dark\",\n  \"displayName\": \"GitHub Dark\",\n  \"type\": \"dark\",\n  \"import\": () => import('./themes/github-dark.mjs')\n}, {\n  \"id\": \"github-dark-default\",\n  \"displayName\": \"GitHub Dark Default\",\n  \"type\": \"dark\",\n  \"import\": () => import('./themes/github-dark-default.mjs')\n}, {\n  \"id\": \"github-dark-dimmed\",\n  \"displayName\": \"GitHub Dark Dimmed\",\n  \"type\": \"dark\",\n  \"import\": () => import('./themes/github-dark-dimmed.mjs')\n}, {\n  \"id\": \"github-light\",\n  \"displayName\": \"GitHub Light\",\n  \"type\": \"light\",\n  \"import\": () => import('./themes/github-light.mjs')\n}, {\n  \"id\": \"github-light-default\",\n  \"displayName\": \"GitHub Light Default\",\n  \"type\": \"light\",\n  \"import\": () => import('./themes/github-light-default.mjs')\n}, {\n  \"id\": \"houston\",\n  \"displayName\": \"Houston\",\n  \"type\": \"dark\",\n  \"import\": () => import('./themes/houston.mjs')\n}, {\n  \"id\": \"laserwave\",\n  \"displayName\": \"LaserWave\",\n  \"type\": \"dark\",\n  \"import\": () => import('./themes/laserwave.mjs')\n}, {\n  \"id\": \"light-plus\",\n  \"displayName\": \"Light Plus\",\n  \"type\": \"light\",\n  \"import\": () => import('./themes/light-plus.mjs')\n}, {\n  \"id\": \"material-theme\",\n  \"displayName\": \"Material Theme\",\n  \"type\": \"dark\",\n  \"import\": () => import('./themes/material-theme.mjs')\n}, {\n  \"id\": \"material-theme-darker\",\n  \"displayName\": \"Material Theme Darker\",\n  \"type\": \"dark\",\n  \"import\": () => import('./themes/material-theme-darker.mjs')\n}, {\n  \"id\": \"material-theme-lighter\",\n  \"displayName\": \"Material Theme Lighter\",\n  \"type\": \"light\",\n  \"import\": () => import('./themes/material-theme-lighter.mjs')\n}, {\n  \"id\": \"material-theme-ocean\",\n  \"displayName\": \"Material Theme Ocean\",\n  \"type\": \"dark\",\n  \"import\": () => import('./themes/material-theme-ocean.mjs')\n}, {\n  \"id\": \"material-theme-palenight\",\n  \"displayName\": \"Material Theme Palenight\",\n  \"type\": \"dark\",\n  \"import\": () => import('./themes/material-theme-palenight.mjs')\n}, {\n  \"id\": \"min-dark\",\n  \"displayName\": \"Min Dark\",\n  \"type\": \"dark\",\n  \"import\": () => import('./themes/min-dark.mjs')\n}, {\n  \"id\": \"min-light\",\n  \"displayName\": \"Min Light\",\n  \"type\": \"light\",\n  \"import\": () => import('./themes/min-light.mjs')\n}, {\n  \"id\": \"monokai\",\n  \"displayName\": \"Monokai\",\n  \"type\": \"dark\",\n  \"import\": () => import('./themes/monokai.mjs')\n}, {\n  \"id\": \"night-owl\",\n  \"displayName\": \"Night Owl\",\n  \"type\": \"dark\",\n  \"import\": () => import('./themes/night-owl.mjs')\n}, {\n  \"id\": \"nord\",\n  \"displayName\": \"Nord\",\n  \"type\": \"dark\",\n  \"import\": () => import('./themes/nord.mjs')\n}, {\n  \"id\": \"one-dark-pro\",\n  \"displayName\": \"One Dark Pro\",\n  \"type\": \"dark\",\n  \"import\": () => import('./themes/one-dark-pro.mjs')\n}, {\n  \"id\": \"one-light\",\n  \"displayName\": \"One Light\",\n  \"type\": \"light\",\n  \"import\": () => import('./themes/one-light.mjs')\n}, {\n  \"id\": \"poimandres\",\n  \"displayName\": \"Poimandres\",\n  \"type\": \"dark\",\n  \"import\": () => import('./themes/poimandres.mjs')\n}, {\n  \"id\": \"red\",\n  \"displayName\": \"Red\",\n  \"type\": \"dark\",\n  \"import\": () => import('./themes/red.mjs')\n}, {\n  \"id\": \"rose-pine\",\n  \"displayName\": \"Ros\\xE9 Pine\",\n  \"type\": \"dark\",\n  \"import\": () => import('./themes/rose-pine.mjs')\n}, {\n  \"id\": \"rose-pine-dawn\",\n  \"displayName\": \"Ros\\xE9 Pine Dawn\",\n  \"type\": \"light\",\n  \"import\": () => import('./themes/rose-pine-dawn.mjs')\n}, {\n  \"id\": \"rose-pine-moon\",\n  \"displayName\": \"Ros\\xE9 Pine Moon\",\n  \"type\": \"dark\",\n  \"import\": () => import('./themes/rose-pine-moon.mjs')\n}, {\n  \"id\": \"slack-dark\",\n  \"displayName\": \"Slack Dark\",\n  \"type\": \"dark\",\n  \"import\": () => import('./themes/slack-dark.mjs')\n}, {\n  \"id\": \"slack-ochin\",\n  \"displayName\": \"Slack Ochin\",\n  \"type\": \"light\",\n  \"import\": () => import('./themes/slack-ochin.mjs')\n}, {\n  \"id\": \"snazzy-light\",\n  \"displayName\": \"Snazzy Light\",\n  \"type\": \"light\",\n  \"import\": () => import('./themes/snazzy-light.mjs')\n}, {\n  \"id\": \"solarized-dark\",\n  \"displayName\": \"Solarized Dark\",\n  \"type\": \"dark\",\n  \"import\": () => import('./themes/solarized-dark.mjs')\n}, {\n  \"id\": \"solarized-light\",\n  \"displayName\": \"Solarized Light\",\n  \"type\": \"light\",\n  \"import\": () => import('./themes/solarized-light.mjs')\n}, {\n  \"id\": \"synthwave-84\",\n  \"displayName\": \"Synthwave '84\",\n  \"type\": \"dark\",\n  \"import\": () => import('./themes/synthwave-84.mjs')\n}, {\n  \"id\": \"tokyo-night\",\n  \"displayName\": \"Tokyo Night\",\n  \"type\": \"dark\",\n  \"import\": () => import('./themes/tokyo-night.mjs')\n}, {\n  \"id\": \"vesper\",\n  \"displayName\": \"Vesper\",\n  \"type\": \"dark\",\n  \"import\": () => import('./themes/vesper.mjs')\n}, {\n  \"id\": \"vitesse-black\",\n  \"displayName\": \"Vitesse Black\",\n  \"type\": \"dark\",\n  \"import\": () => import('./themes/vitesse-black.mjs')\n}, {\n  \"id\": \"vitesse-dark\",\n  \"displayName\": \"Vitesse Dark\",\n  \"type\": \"dark\",\n  \"import\": () => import('./themes/vitesse-dark.mjs')\n}, {\n  \"id\": \"vitesse-light\",\n  \"displayName\": \"Vitesse Light\",\n  \"type\": \"light\",\n  \"import\": () => import('./themes/vitesse-light.mjs')\n}];\nconst bundledThemes = Object.fromEntries(bundledThemesInfo.map(i => [i.id, i.import]));\nexport { bundledThemes, bundledThemesInfo };", "var FontStyle;\n(function (FontStyle) {\n  FontStyle[FontStyle[\"NotSet\"] = -1] = \"NotSet\";\n  FontStyle[FontStyle[\"None\"] = 0] = \"None\";\n  FontStyle[FontStyle[\"Italic\"] = 1] = \"Italic\";\n  FontStyle[FontStyle[\"Bold\"] = 2] = \"Bold\";\n  FontStyle[FontStyle[\"Underline\"] = 4] = \"Underline\";\n})(FontStyle || (FontStyle = {}));\nexport { FontStyle };", "import { FontStyle } from './types.mjs';\n\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\n({\n  InDebugMode: typeof process !== 'undefined' && !!process.env['VSCODE_TEXTMATE_DEBUG']\n});\n\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nvar EncodedTokenAttributes;\n(function (EncodedTokenAttributes) {\n  function toBinaryStr(encodedTokenAttributes) {\n    return encodedTokenAttributes.toString(2).padStart(32, \"0\");\n  }\n  EncodedTokenAttributes.toBinaryStr = toBinaryStr;\n  function print(encodedTokenAttributes) {\n    const languageId = EncodedTokenAttributes.getLanguageId(encodedTokenAttributes);\n    const tokenType = EncodedTokenAttributes.getTokenType(encodedTokenAttributes);\n    const fontStyle = EncodedTokenAttributes.getFontStyle(encodedTokenAttributes);\n    const foreground = EncodedTokenAttributes.getForeground(encodedTokenAttributes);\n    const background = EncodedTokenAttributes.getBackground(encodedTokenAttributes);\n    console.log({\n      languageId: languageId,\n      tokenType: tokenType,\n      fontStyle: fontStyle,\n      foreground: foreground,\n      background: background\n    });\n  }\n  EncodedTokenAttributes.print = print;\n  function getLanguageId(encodedTokenAttributes) {\n    return (encodedTokenAttributes & 255 /* EncodedTokenDataConsts.LANGUAGEID_MASK */) >>> 0 /* EncodedTokenDataConsts.LANGUAGEID_OFFSET */;\n  }\n  EncodedTokenAttributes.getLanguageId = getLanguageId;\n  function getTokenType(encodedTokenAttributes) {\n    return (encodedTokenAttributes & 768 /* EncodedTokenDataConsts.TOKEN_TYPE_MASK */) >>> 8 /* EncodedTokenDataConsts.TOKEN_TYPE_OFFSET */;\n  }\n  EncodedTokenAttributes.getTokenType = getTokenType;\n  function containsBalancedBrackets(encodedTokenAttributes) {\n    return (encodedTokenAttributes & 1024 /* EncodedTokenDataConsts.BALANCED_BRACKETS_MASK */) !== 0;\n  }\n  EncodedTokenAttributes.containsBalancedBrackets = containsBalancedBrackets;\n  function getFontStyle(encodedTokenAttributes) {\n    return (encodedTokenAttributes & 30720 /* EncodedTokenDataConsts.FONT_STYLE_MASK */) >>> 11 /* EncodedTokenDataConsts.FONT_STYLE_OFFSET */;\n  }\n  EncodedTokenAttributes.getFontStyle = getFontStyle;\n  function getForeground(encodedTokenAttributes) {\n    return (encodedTokenAttributes & 16744448 /* EncodedTokenDataConsts.FOREGROUND_MASK */) >>> 15 /* EncodedTokenDataConsts.FOREGROUND_OFFSET */;\n  }\n  EncodedTokenAttributes.getForeground = getForeground;\n  function getBackground(encodedTokenAttributes) {\n    return (encodedTokenAttributes & 4278190080 /* EncodedTokenDataConsts.BACKGROUND_MASK */) >>> 24 /* EncodedTokenDataConsts.BACKGROUND_OFFSET */;\n  }\n  EncodedTokenAttributes.getBackground = getBackground;\n  /**\n   * Updates the fields in `metadata`.\n   * A value of `0`, `NotSet` or `null` indicates that the corresponding field should be left as is.\n   */\n  function set(encodedTokenAttributes, languageId, tokenType, containsBalancedBrackets, fontStyle, foreground, background) {\n    let _languageId = EncodedTokenAttributes.getLanguageId(encodedTokenAttributes);\n    let _tokenType = EncodedTokenAttributes.getTokenType(encodedTokenAttributes);\n    let _containsBalancedBracketsBit = EncodedTokenAttributes.containsBalancedBrackets(encodedTokenAttributes) ? 1 : 0;\n    let _fontStyle = EncodedTokenAttributes.getFontStyle(encodedTokenAttributes);\n    let _foreground = EncodedTokenAttributes.getForeground(encodedTokenAttributes);\n    let _background = EncodedTokenAttributes.getBackground(encodedTokenAttributes);\n    if (languageId !== 0) {\n      _languageId = languageId;\n    }\n    if (tokenType !== 8 /* OptionalStandardTokenType.NotSet */) {\n      _tokenType = fromOptionalTokenType(tokenType);\n    }\n    if (containsBalancedBrackets !== null) {\n      _containsBalancedBracketsBit = containsBalancedBrackets ? 1 : 0;\n    }\n    if (fontStyle !== -1 /* FontStyle.NotSet */) {\n      _fontStyle = fontStyle;\n    }\n    if (foreground !== 0) {\n      _foreground = foreground;\n    }\n    if (background !== 0) {\n      _background = background;\n    }\n    return (_languageId << 0 /* EncodedTokenDataConsts.LANGUAGEID_OFFSET */ | _tokenType << 8 /* EncodedTokenDataConsts.TOKEN_TYPE_OFFSET */ | _containsBalancedBracketsBit << 10 /* EncodedTokenDataConsts.BALANCED_BRACKETS_OFFSET */ | _fontStyle << 11 /* EncodedTokenDataConsts.FONT_STYLE_OFFSET */ | _foreground << 15 /* EncodedTokenDataConsts.FOREGROUND_OFFSET */ | _background << 24 /* EncodedTokenDataConsts.BACKGROUND_OFFSET */) >>> 0;\n  }\n  EncodedTokenAttributes.set = set;\n})(EncodedTokenAttributes || (EncodedTokenAttributes = {}));\nfunction toOptionalTokenType(standardType) {\n  return standardType;\n}\nfunction fromOptionalTokenType(standardType) {\n  return standardType;\n}\n\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nfunction createMatchers(selector, matchesName) {\n  const results = [];\n  const tokenizer = newTokenizer(selector);\n  let token = tokenizer.next();\n  while (token !== null) {\n    let priority = 0;\n    if (token.length === 2 && token.charAt(1) === ':') {\n      switch (token.charAt(0)) {\n        case 'R':\n          priority = 1;\n          break;\n        case 'L':\n          priority = -1;\n          break;\n        default:\n          console.log(`Unknown priority ${token} in scope selector`);\n      }\n      token = tokenizer.next();\n    }\n    let matcher = parseConjunction();\n    results.push({\n      matcher,\n      priority\n    });\n    if (token !== ',') {\n      break;\n    }\n    token = tokenizer.next();\n  }\n  return results;\n  function parseOperand() {\n    if (token === '-') {\n      token = tokenizer.next();\n      const expressionToNegate = parseOperand();\n      return matcherInput => !!expressionToNegate && !expressionToNegate(matcherInput);\n    }\n    if (token === '(') {\n      token = tokenizer.next();\n      const expressionInParents = parseInnerExpression();\n      if (token === ')') {\n        token = tokenizer.next();\n      }\n      return expressionInParents;\n    }\n    if (isIdentifier(token)) {\n      const identifiers = [];\n      do {\n        identifiers.push(token);\n        token = tokenizer.next();\n      } while (isIdentifier(token));\n      return matcherInput => matchesName(identifiers, matcherInput);\n    }\n    return null;\n  }\n  function parseConjunction() {\n    const matchers = [];\n    let matcher = parseOperand();\n    while (matcher) {\n      matchers.push(matcher);\n      matcher = parseOperand();\n    }\n    return matcherInput => matchers.every(matcher => matcher(matcherInput)); // and\n  }\n  function parseInnerExpression() {\n    const matchers = [];\n    let matcher = parseConjunction();\n    while (matcher) {\n      matchers.push(matcher);\n      if (token === '|' || token === ',') {\n        do {\n          token = tokenizer.next();\n        } while (token === '|' || token === ','); // ignore subsequent commas\n      } else {\n        break;\n      }\n      matcher = parseConjunction();\n    }\n    return matcherInput => matchers.some(matcher => matcher(matcherInput)); // or\n  }\n}\nfunction isIdentifier(token) {\n  return !!token && !!token.match(/[\\w\\.:]+/);\n}\nfunction newTokenizer(input) {\n  let regex = /([LR]:|[\\w\\.:][\\w\\.:\\-]*|[\\,\\|\\-\\(\\)])/g;\n  let match = regex.exec(input);\n  return {\n    next: () => {\n      if (!match) {\n        return null;\n      }\n      const res = match[0];\n      match = regex.exec(input);\n      return res;\n    }\n  };\n}\n\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nfunction disposeOnigString(str) {\n  if (typeof str.dispose === 'function') {\n    str.dispose();\n  }\n}\n\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nfunction clone(something) {\n  return doClone(something);\n}\nfunction doClone(something) {\n  if (Array.isArray(something)) {\n    return cloneArray(something);\n  }\n  if (typeof something === 'object') {\n    return cloneObj(something);\n  }\n  return something;\n}\nfunction cloneArray(arr) {\n  let r = [];\n  for (let i = 0, len = arr.length; i < len; i++) {\n    r[i] = doClone(arr[i]);\n  }\n  return r;\n}\nfunction cloneObj(obj) {\n  let r = {};\n  for (let key in obj) {\n    r[key] = doClone(obj[key]);\n  }\n  return r;\n}\nfunction mergeObjects(target, ...sources) {\n  sources.forEach(source => {\n    for (let key in source) {\n      target[key] = source[key];\n    }\n  });\n  return target;\n}\nfunction basename(path) {\n  const idx = ~path.lastIndexOf('/') || ~path.lastIndexOf('\\\\');\n  if (idx === 0) {\n    return path;\n  } else if (~idx === path.length - 1) {\n    return basename(path.substring(0, path.length - 1));\n  } else {\n    return path.substr(~idx + 1);\n  }\n}\nlet CAPTURING_REGEX_SOURCE = /\\$(\\d+)|\\${(\\d+):\\/(downcase|upcase)}/g;\nclass RegexSource {\n  static hasCaptures(regexSource) {\n    if (regexSource === null) {\n      return false;\n    }\n    CAPTURING_REGEX_SOURCE.lastIndex = 0;\n    return CAPTURING_REGEX_SOURCE.test(regexSource);\n  }\n  static replaceCaptures(regexSource, captureSource, captureIndices) {\n    return regexSource.replace(CAPTURING_REGEX_SOURCE, (match, index, commandIndex, command) => {\n      let capture = captureIndices[parseInt(index || commandIndex, 10)];\n      if (capture) {\n        let result = captureSource.substring(capture.start, capture.end);\n        // Remove leading dots that would make the selector invalid\n        while (result[0] === '.') {\n          result = result.substring(1);\n        }\n        switch (command) {\n          case 'downcase':\n            return result.toLowerCase();\n          case 'upcase':\n            return result.toUpperCase();\n          default:\n            return result;\n        }\n      } else {\n        return match;\n      }\n    });\n  }\n}\nfunction strcmp(a, b) {\n  if (a < b) {\n    return -1;\n  }\n  if (a > b) {\n    return 1;\n  }\n  return 0;\n}\nfunction strArrCmp(a, b) {\n  if (a === null && b === null) {\n    return 0;\n  }\n  if (!a) {\n    return -1;\n  }\n  if (!b) {\n    return 1;\n  }\n  let len1 = a.length;\n  let len2 = b.length;\n  if (len1 === len2) {\n    for (let i = 0; i < len1; i++) {\n      let res = strcmp(a[i], b[i]);\n      if (res !== 0) {\n        return res;\n      }\n    }\n    return 0;\n  }\n  return len1 - len2;\n}\nfunction isValidHexColor(hex) {\n  if (/^#[0-9a-f]{6}$/i.test(hex)) {\n    // #rrggbb\n    return true;\n  }\n  if (/^#[0-9a-f]{8}$/i.test(hex)) {\n    // #rrggbbaa\n    return true;\n  }\n  if (/^#[0-9a-f]{3}$/i.test(hex)) {\n    // #rgb\n    return true;\n  }\n  if (/^#[0-9a-f]{4}$/i.test(hex)) {\n    // #rgba\n    return true;\n  }\n  return false;\n}\n/**\n * Escapes regular expression characters in a given string\n */\nfunction escapeRegExpCharacters(value) {\n  return value.replace(/[\\-\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&');\n}\nclass CachedFn {\n  fn;\n  cache = new Map();\n  constructor(fn) {\n    this.fn = fn;\n  }\n  get(key) {\n    if (this.cache.has(key)) {\n      return this.cache.get(key);\n    }\n    const value = this.fn(key);\n    this.cache.set(key, value);\n    return value;\n  }\n}\n\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\n/**\n * References the top level rule of a grammar with the given scope name.\n*/\nclass TopLevelRuleReference {\n  scopeName;\n  constructor(scopeName) {\n    this.scopeName = scopeName;\n  }\n  toKey() {\n    return this.scopeName;\n  }\n}\n/**\n * References a rule of a grammar in the top level repository section with the given name.\n*/\nclass TopLevelRepositoryRuleReference {\n  scopeName;\n  ruleName;\n  constructor(scopeName, ruleName) {\n    this.scopeName = scopeName;\n    this.ruleName = ruleName;\n  }\n  toKey() {\n    return `${this.scopeName}#${this.ruleName}`;\n  }\n}\nclass ExternalReferenceCollector {\n  _references = [];\n  _seenReferenceKeys = new Set();\n  get references() {\n    return this._references;\n  }\n  visitedRule = new Set();\n  add(reference) {\n    const key = reference.toKey();\n    if (this._seenReferenceKeys.has(key)) {\n      return;\n    }\n    this._seenReferenceKeys.add(key);\n    this._references.push(reference);\n  }\n}\nclass ScopeDependencyProcessor {\n  repo;\n  initialScopeName;\n  seenFullScopeRequests = new Set();\n  seenPartialScopeRequests = new Set();\n  Q;\n  constructor(repo, initialScopeName) {\n    this.repo = repo;\n    this.initialScopeName = initialScopeName;\n    this.seenFullScopeRequests.add(this.initialScopeName);\n    this.Q = [new TopLevelRuleReference(this.initialScopeName)];\n  }\n  processQueue() {\n    const q = this.Q;\n    this.Q = [];\n    const deps = new ExternalReferenceCollector();\n    for (const dep of q) {\n      collectReferencesOfReference(dep, this.initialScopeName, this.repo, deps);\n    }\n    for (const dep of deps.references) {\n      if (dep instanceof TopLevelRuleReference) {\n        if (this.seenFullScopeRequests.has(dep.scopeName)) {\n          // already processed\n          continue;\n        }\n        this.seenFullScopeRequests.add(dep.scopeName);\n        this.Q.push(dep);\n      } else {\n        if (this.seenFullScopeRequests.has(dep.scopeName)) {\n          // already processed in full\n          continue;\n        }\n        if (this.seenPartialScopeRequests.has(dep.toKey())) {\n          // already processed\n          continue;\n        }\n        this.seenPartialScopeRequests.add(dep.toKey());\n        this.Q.push(dep);\n      }\n    }\n  }\n}\nfunction collectReferencesOfReference(reference, baseGrammarScopeName, repo, result) {\n  const selfGrammar = repo.lookup(reference.scopeName);\n  if (!selfGrammar) {\n    if (reference.scopeName === baseGrammarScopeName) {\n      throw new Error(`No grammar provided for <${baseGrammarScopeName}>`);\n    }\n    return;\n  }\n  const baseGrammar = repo.lookup(baseGrammarScopeName);\n  if (reference instanceof TopLevelRuleReference) {\n    collectExternalReferencesInTopLevelRule({\n      baseGrammar,\n      selfGrammar\n    }, result);\n  } else {\n    collectExternalReferencesInTopLevelRepositoryRule(reference.ruleName, {\n      baseGrammar,\n      selfGrammar,\n      repository: selfGrammar.repository\n    }, result);\n  }\n  const injections = repo.injections(reference.scopeName);\n  if (injections) {\n    for (const injection of injections) {\n      result.add(new TopLevelRuleReference(injection));\n    }\n  }\n}\nfunction collectExternalReferencesInTopLevelRepositoryRule(ruleName, context, result) {\n  if (context.repository && context.repository[ruleName]) {\n    const rule = context.repository[ruleName];\n    collectExternalReferencesInRules([rule], context, result);\n  }\n}\nfunction collectExternalReferencesInTopLevelRule(context, result) {\n  if (context.selfGrammar.patterns && Array.isArray(context.selfGrammar.patterns)) {\n    collectExternalReferencesInRules(context.selfGrammar.patterns, {\n      ...context,\n      repository: context.selfGrammar.repository\n    }, result);\n  }\n  if (context.selfGrammar.injections) {\n    collectExternalReferencesInRules(Object.values(context.selfGrammar.injections), {\n      ...context,\n      repository: context.selfGrammar.repository\n    }, result);\n  }\n}\nfunction collectExternalReferencesInRules(rules, context, result) {\n  for (const rule of rules) {\n    if (result.visitedRule.has(rule)) {\n      continue;\n    }\n    result.visitedRule.add(rule);\n    const patternRepository = rule.repository ? mergeObjects({}, context.repository, rule.repository) : context.repository;\n    if (Array.isArray(rule.patterns)) {\n      collectExternalReferencesInRules(rule.patterns, {\n        ...context,\n        repository: patternRepository\n      }, result);\n    }\n    const include = rule.include;\n    if (!include) {\n      continue;\n    }\n    const reference = parseInclude(include);\n    switch (reference.kind) {\n      case 0 /* IncludeReferenceKind.Base */:\n        collectExternalReferencesInTopLevelRule({\n          ...context,\n          selfGrammar: context.baseGrammar\n        }, result);\n        break;\n      case 1 /* IncludeReferenceKind.Self */:\n        collectExternalReferencesInTopLevelRule(context, result);\n        break;\n      case 2 /* IncludeReferenceKind.RelativeReference */:\n        collectExternalReferencesInTopLevelRepositoryRule(reference.ruleName, {\n          ...context,\n          repository: patternRepository\n        }, result);\n        break;\n      case 3 /* IncludeReferenceKind.TopLevelReference */:\n      case 4 /* IncludeReferenceKind.TopLevelRepositoryReference */:\n        const selfGrammar = reference.scopeName === context.selfGrammar.scopeName ? context.selfGrammar : reference.scopeName === context.baseGrammar.scopeName ? context.baseGrammar : undefined;\n        if (selfGrammar) {\n          const newContext = {\n            baseGrammar: context.baseGrammar,\n            selfGrammar,\n            repository: patternRepository\n          };\n          if (reference.kind === 4 /* IncludeReferenceKind.TopLevelRepositoryReference */) {\n            collectExternalReferencesInTopLevelRepositoryRule(reference.ruleName, newContext, result);\n          } else {\n            collectExternalReferencesInTopLevelRule(newContext, result);\n          }\n        } else {\n          if (reference.kind === 4 /* IncludeReferenceKind.TopLevelRepositoryReference */) {\n            result.add(new TopLevelRepositoryRuleReference(reference.scopeName, reference.ruleName));\n          } else {\n            result.add(new TopLevelRuleReference(reference.scopeName));\n          }\n        }\n        break;\n    }\n  }\n}\nclass BaseReference {\n  kind = 0 /* IncludeReferenceKind.Base */;\n}\nclass SelfReference {\n  kind = 1 /* IncludeReferenceKind.Self */;\n}\nclass RelativeReference {\n  ruleName;\n  kind = 2 /* IncludeReferenceKind.RelativeReference */;\n  constructor(ruleName) {\n    this.ruleName = ruleName;\n  }\n}\nclass TopLevelReference {\n  scopeName;\n  kind = 3 /* IncludeReferenceKind.TopLevelReference */;\n  constructor(scopeName) {\n    this.scopeName = scopeName;\n  }\n}\nclass TopLevelRepositoryReference {\n  scopeName;\n  ruleName;\n  kind = 4 /* IncludeReferenceKind.TopLevelRepositoryReference */;\n  constructor(scopeName, ruleName) {\n    this.scopeName = scopeName;\n    this.ruleName = ruleName;\n  }\n}\nfunction parseInclude(include) {\n  if (include === '$base') {\n    return new BaseReference();\n  } else if (include === '$self') {\n    return new SelfReference();\n  }\n  const indexOfSharp = include.indexOf(\"#\");\n  if (indexOfSharp === -1) {\n    return new TopLevelReference(include);\n  } else if (indexOfSharp === 0) {\n    return new RelativeReference(include.substring(1));\n  } else {\n    const scopeName = include.substring(0, indexOfSharp);\n    const ruleName = include.substring(indexOfSharp + 1);\n    return new TopLevelRepositoryReference(scopeName, ruleName);\n  }\n}\n\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nconst HAS_BACK_REFERENCES = /\\\\(\\d+)/;\nconst BACK_REFERENCING_END = /\\\\(\\d+)/g;\n// This is a special constant to indicate that the end regexp matched.\nconst endRuleId = -1;\n// This is a special constant to indicate that the while regexp matched.\nconst whileRuleId = -2;\nfunction ruleIdFromNumber(id) {\n  return id;\n}\nfunction ruleIdToNumber(id) {\n  return id;\n}\nclass Rule {\n  $location;\n  id;\n  _nameIsCapturing;\n  _name;\n  _contentNameIsCapturing;\n  _contentName;\n  constructor($location, id, name, contentName) {\n    this.$location = $location;\n    this.id = id;\n    this._name = name || null;\n    this._nameIsCapturing = RegexSource.hasCaptures(this._name);\n    this._contentName = contentName || null;\n    this._contentNameIsCapturing = RegexSource.hasCaptures(this._contentName);\n  }\n  get debugName() {\n    const location = this.$location ? `${basename(this.$location.filename)}:${this.$location.line}` : 'unknown';\n    return `${this.constructor.name}#${this.id} @ ${location}`;\n  }\n  getName(lineText, captureIndices) {\n    if (!this._nameIsCapturing || this._name === null || lineText === null || captureIndices === null) {\n      return this._name;\n    }\n    return RegexSource.replaceCaptures(this._name, lineText, captureIndices);\n  }\n  getContentName(lineText, captureIndices) {\n    if (!this._contentNameIsCapturing || this._contentName === null) {\n      return this._contentName;\n    }\n    return RegexSource.replaceCaptures(this._contentName, lineText, captureIndices);\n  }\n}\nclass CaptureRule extends Rule {\n  retokenizeCapturedWithRuleId;\n  constructor($location, id, name, contentName, retokenizeCapturedWithRuleId) {\n    super($location, id, name, contentName);\n    this.retokenizeCapturedWithRuleId = retokenizeCapturedWithRuleId;\n  }\n  dispose() {\n    // nothing to dispose\n  }\n  collectPatterns(grammar, out) {\n    throw new Error('Not supported!');\n  }\n  compile(grammar, endRegexSource) {\n    throw new Error('Not supported!');\n  }\n  compileAG(grammar, endRegexSource, allowA, allowG) {\n    throw new Error('Not supported!');\n  }\n}\nclass MatchRule extends Rule {\n  _match;\n  captures;\n  _cachedCompiledPatterns;\n  constructor($location, id, name, match, captures) {\n    super($location, id, name, null);\n    this._match = new RegExpSource(match, this.id);\n    this.captures = captures;\n    this._cachedCompiledPatterns = null;\n  }\n  dispose() {\n    if (this._cachedCompiledPatterns) {\n      this._cachedCompiledPatterns.dispose();\n      this._cachedCompiledPatterns = null;\n    }\n  }\n  get debugMatchRegExp() {\n    return `${this._match.source}`;\n  }\n  collectPatterns(grammar, out) {\n    out.push(this._match);\n  }\n  compile(grammar, endRegexSource) {\n    return this._getCachedCompiledPatterns(grammar).compile(grammar);\n  }\n  compileAG(grammar, endRegexSource, allowA, allowG) {\n    return this._getCachedCompiledPatterns(grammar).compileAG(grammar, allowA, allowG);\n  }\n  _getCachedCompiledPatterns(grammar) {\n    if (!this._cachedCompiledPatterns) {\n      this._cachedCompiledPatterns = new RegExpSourceList();\n      this.collectPatterns(grammar, this._cachedCompiledPatterns);\n    }\n    return this._cachedCompiledPatterns;\n  }\n}\nclass IncludeOnlyRule extends Rule {\n  hasMissingPatterns;\n  patterns;\n  _cachedCompiledPatterns;\n  constructor($location, id, name, contentName, patterns) {\n    super($location, id, name, contentName);\n    this.patterns = patterns.patterns;\n    this.hasMissingPatterns = patterns.hasMissingPatterns;\n    this._cachedCompiledPatterns = null;\n  }\n  dispose() {\n    if (this._cachedCompiledPatterns) {\n      this._cachedCompiledPatterns.dispose();\n      this._cachedCompiledPatterns = null;\n    }\n  }\n  collectPatterns(grammar, out) {\n    for (const pattern of this.patterns) {\n      const rule = grammar.getRule(pattern);\n      rule.collectPatterns(grammar, out);\n    }\n  }\n  compile(grammar, endRegexSource) {\n    return this._getCachedCompiledPatterns(grammar).compile(grammar);\n  }\n  compileAG(grammar, endRegexSource, allowA, allowG) {\n    return this._getCachedCompiledPatterns(grammar).compileAG(grammar, allowA, allowG);\n  }\n  _getCachedCompiledPatterns(grammar) {\n    if (!this._cachedCompiledPatterns) {\n      this._cachedCompiledPatterns = new RegExpSourceList();\n      this.collectPatterns(grammar, this._cachedCompiledPatterns);\n    }\n    return this._cachedCompiledPatterns;\n  }\n}\nclass BeginEndRule extends Rule {\n  _begin;\n  beginCaptures;\n  _end;\n  endHasBackReferences;\n  endCaptures;\n  applyEndPatternLast;\n  hasMissingPatterns;\n  patterns;\n  _cachedCompiledPatterns;\n  constructor($location, id, name, contentName, begin, beginCaptures, end, endCaptures, applyEndPatternLast, patterns) {\n    super($location, id, name, contentName);\n    this._begin = new RegExpSource(begin, this.id);\n    this.beginCaptures = beginCaptures;\n    this._end = new RegExpSource(end ? end : '\\uFFFF', -1);\n    this.endHasBackReferences = this._end.hasBackReferences;\n    this.endCaptures = endCaptures;\n    this.applyEndPatternLast = applyEndPatternLast || false;\n    this.patterns = patterns.patterns;\n    this.hasMissingPatterns = patterns.hasMissingPatterns;\n    this._cachedCompiledPatterns = null;\n  }\n  dispose() {\n    if (this._cachedCompiledPatterns) {\n      this._cachedCompiledPatterns.dispose();\n      this._cachedCompiledPatterns = null;\n    }\n  }\n  get debugBeginRegExp() {\n    return `${this._begin.source}`;\n  }\n  get debugEndRegExp() {\n    return `${this._end.source}`;\n  }\n  getEndWithResolvedBackReferences(lineText, captureIndices) {\n    return this._end.resolveBackReferences(lineText, captureIndices);\n  }\n  collectPatterns(grammar, out) {\n    out.push(this._begin);\n  }\n  compile(grammar, endRegexSource) {\n    return this._getCachedCompiledPatterns(grammar, endRegexSource).compile(grammar);\n  }\n  compileAG(grammar, endRegexSource, allowA, allowG) {\n    return this._getCachedCompiledPatterns(grammar, endRegexSource).compileAG(grammar, allowA, allowG);\n  }\n  _getCachedCompiledPatterns(grammar, endRegexSource) {\n    if (!this._cachedCompiledPatterns) {\n      this._cachedCompiledPatterns = new RegExpSourceList();\n      for (const pattern of this.patterns) {\n        const rule = grammar.getRule(pattern);\n        rule.collectPatterns(grammar, this._cachedCompiledPatterns);\n      }\n      if (this.applyEndPatternLast) {\n        this._cachedCompiledPatterns.push(this._end.hasBackReferences ? this._end.clone() : this._end);\n      } else {\n        this._cachedCompiledPatterns.unshift(this._end.hasBackReferences ? this._end.clone() : this._end);\n      }\n    }\n    if (this._end.hasBackReferences) {\n      if (this.applyEndPatternLast) {\n        this._cachedCompiledPatterns.setSource(this._cachedCompiledPatterns.length() - 1, endRegexSource);\n      } else {\n        this._cachedCompiledPatterns.setSource(0, endRegexSource);\n      }\n    }\n    return this._cachedCompiledPatterns;\n  }\n}\nclass BeginWhileRule extends Rule {\n  _begin;\n  beginCaptures;\n  whileCaptures;\n  _while;\n  whileHasBackReferences;\n  hasMissingPatterns;\n  patterns;\n  _cachedCompiledPatterns;\n  _cachedCompiledWhilePatterns;\n  constructor($location, id, name, contentName, begin, beginCaptures, _while, whileCaptures, patterns) {\n    super($location, id, name, contentName);\n    this._begin = new RegExpSource(begin, this.id);\n    this.beginCaptures = beginCaptures;\n    this.whileCaptures = whileCaptures;\n    this._while = new RegExpSource(_while, whileRuleId);\n    this.whileHasBackReferences = this._while.hasBackReferences;\n    this.patterns = patterns.patterns;\n    this.hasMissingPatterns = patterns.hasMissingPatterns;\n    this._cachedCompiledPatterns = null;\n    this._cachedCompiledWhilePatterns = null;\n  }\n  dispose() {\n    if (this._cachedCompiledPatterns) {\n      this._cachedCompiledPatterns.dispose();\n      this._cachedCompiledPatterns = null;\n    }\n    if (this._cachedCompiledWhilePatterns) {\n      this._cachedCompiledWhilePatterns.dispose();\n      this._cachedCompiledWhilePatterns = null;\n    }\n  }\n  get debugBeginRegExp() {\n    return `${this._begin.source}`;\n  }\n  get debugWhileRegExp() {\n    return `${this._while.source}`;\n  }\n  getWhileWithResolvedBackReferences(lineText, captureIndices) {\n    return this._while.resolveBackReferences(lineText, captureIndices);\n  }\n  collectPatterns(grammar, out) {\n    out.push(this._begin);\n  }\n  compile(grammar, endRegexSource) {\n    return this._getCachedCompiledPatterns(grammar).compile(grammar);\n  }\n  compileAG(grammar, endRegexSource, allowA, allowG) {\n    return this._getCachedCompiledPatterns(grammar).compileAG(grammar, allowA, allowG);\n  }\n  _getCachedCompiledPatterns(grammar) {\n    if (!this._cachedCompiledPatterns) {\n      this._cachedCompiledPatterns = new RegExpSourceList();\n      for (const pattern of this.patterns) {\n        const rule = grammar.getRule(pattern);\n        rule.collectPatterns(grammar, this._cachedCompiledPatterns);\n      }\n    }\n    return this._cachedCompiledPatterns;\n  }\n  compileWhile(grammar, endRegexSource) {\n    return this._getCachedCompiledWhilePatterns(grammar, endRegexSource).compile(grammar);\n  }\n  compileWhileAG(grammar, endRegexSource, allowA, allowG) {\n    return this._getCachedCompiledWhilePatterns(grammar, endRegexSource).compileAG(grammar, allowA, allowG);\n  }\n  _getCachedCompiledWhilePatterns(grammar, endRegexSource) {\n    if (!this._cachedCompiledWhilePatterns) {\n      this._cachedCompiledWhilePatterns = new RegExpSourceList();\n      this._cachedCompiledWhilePatterns.push(this._while.hasBackReferences ? this._while.clone() : this._while);\n    }\n    if (this._while.hasBackReferences) {\n      this._cachedCompiledWhilePatterns.setSource(0, endRegexSource ? endRegexSource : '\\uFFFF');\n    }\n    return this._cachedCompiledWhilePatterns;\n  }\n}\nclass RuleFactory {\n  static createCaptureRule(helper, $location, name, contentName, retokenizeCapturedWithRuleId) {\n    return helper.registerRule(id => {\n      return new CaptureRule($location, id, name, contentName, retokenizeCapturedWithRuleId);\n    });\n  }\n  static getCompiledRuleId(desc, helper, repository) {\n    if (!desc.id) {\n      helper.registerRule(id => {\n        desc.id = id;\n        if (desc.match) {\n          return new MatchRule(desc.$vscodeTextmateLocation, desc.id, desc.name, desc.match, RuleFactory._compileCaptures(desc.captures, helper, repository));\n        }\n        if (typeof desc.begin === 'undefined') {\n          if (desc.repository) {\n            repository = mergeObjects({}, repository, desc.repository);\n          }\n          let patterns = desc.patterns;\n          if (typeof patterns === 'undefined' && desc.include) {\n            patterns = [{\n              include: desc.include\n            }];\n          }\n          return new IncludeOnlyRule(desc.$vscodeTextmateLocation, desc.id, desc.name, desc.contentName, RuleFactory._compilePatterns(patterns, helper, repository));\n        }\n        if (desc.while) {\n          return new BeginWhileRule(desc.$vscodeTextmateLocation, desc.id, desc.name, desc.contentName, desc.begin, RuleFactory._compileCaptures(desc.beginCaptures || desc.captures, helper, repository), desc.while, RuleFactory._compileCaptures(desc.whileCaptures || desc.captures, helper, repository), RuleFactory._compilePatterns(desc.patterns, helper, repository));\n        }\n        return new BeginEndRule(desc.$vscodeTextmateLocation, desc.id, desc.name, desc.contentName, desc.begin, RuleFactory._compileCaptures(desc.beginCaptures || desc.captures, helper, repository), desc.end, RuleFactory._compileCaptures(desc.endCaptures || desc.captures, helper, repository), desc.applyEndPatternLast, RuleFactory._compilePatterns(desc.patterns, helper, repository));\n      });\n    }\n    return desc.id;\n  }\n  static _compileCaptures(captures, helper, repository) {\n    let r = [];\n    if (captures) {\n      // Find the maximum capture id\n      let maximumCaptureId = 0;\n      for (const captureId in captures) {\n        if (captureId === '$vscodeTextmateLocation') {\n          continue;\n        }\n        const numericCaptureId = parseInt(captureId, 10);\n        if (numericCaptureId > maximumCaptureId) {\n          maximumCaptureId = numericCaptureId;\n        }\n      }\n      // Initialize result\n      for (let i = 0; i <= maximumCaptureId; i++) {\n        r[i] = null;\n      }\n      // Fill out result\n      for (const captureId in captures) {\n        if (captureId === '$vscodeTextmateLocation') {\n          continue;\n        }\n        const numericCaptureId = parseInt(captureId, 10);\n        let retokenizeCapturedWithRuleId = 0;\n        if (captures[captureId].patterns) {\n          retokenizeCapturedWithRuleId = RuleFactory.getCompiledRuleId(captures[captureId], helper, repository);\n        }\n        r[numericCaptureId] = RuleFactory.createCaptureRule(helper, captures[captureId].$vscodeTextmateLocation, captures[captureId].name, captures[captureId].contentName, retokenizeCapturedWithRuleId);\n      }\n    }\n    return r;\n  }\n  static _compilePatterns(patterns, helper, repository) {\n    let r = [];\n    if (patterns) {\n      for (let i = 0, len = patterns.length; i < len; i++) {\n        const pattern = patterns[i];\n        let ruleId = -1;\n        if (pattern.include) {\n          const reference = parseInclude(pattern.include);\n          switch (reference.kind) {\n            case 0 /* IncludeReferenceKind.Base */:\n            case 1 /* IncludeReferenceKind.Self */:\n              ruleId = RuleFactory.getCompiledRuleId(repository[pattern.include], helper, repository);\n              break;\n            case 2 /* IncludeReferenceKind.RelativeReference */:\n              // Local include found in `repository`\n              let localIncludedRule = repository[reference.ruleName];\n              if (localIncludedRule) {\n                ruleId = RuleFactory.getCompiledRuleId(localIncludedRule, helper, repository);\n              }\n              break;\n            case 3 /* IncludeReferenceKind.TopLevelReference */:\n            case 4 /* IncludeReferenceKind.TopLevelRepositoryReference */:\n              const externalGrammarName = reference.scopeName;\n              const externalGrammarInclude = reference.kind === 4 /* IncludeReferenceKind.TopLevelRepositoryReference */ ? reference.ruleName : null;\n              // External include\n              const externalGrammar = helper.getExternalGrammar(externalGrammarName, repository);\n              if (externalGrammar) {\n                if (externalGrammarInclude) {\n                  let externalIncludedRule = externalGrammar.repository[externalGrammarInclude];\n                  if (externalIncludedRule) {\n                    ruleId = RuleFactory.getCompiledRuleId(externalIncludedRule, helper, externalGrammar.repository);\n                  }\n                } else {\n                  ruleId = RuleFactory.getCompiledRuleId(externalGrammar.repository.$self, helper, externalGrammar.repository);\n                }\n              }\n              break;\n          }\n        } else {\n          ruleId = RuleFactory.getCompiledRuleId(pattern, helper, repository);\n        }\n        if (ruleId !== -1) {\n          const rule = helper.getRule(ruleId);\n          let skipRule = false;\n          if (rule instanceof IncludeOnlyRule || rule instanceof BeginEndRule || rule instanceof BeginWhileRule) {\n            if (rule.hasMissingPatterns && rule.patterns.length === 0) {\n              skipRule = true;\n            }\n          }\n          if (skipRule) {\n            // console.log('REMOVING RULE ENTIRELY DUE TO EMPTY PATTERNS THAT ARE MISSING');\n            continue;\n          }\n          r.push(ruleId);\n        }\n      }\n    }\n    return {\n      patterns: r,\n      hasMissingPatterns: (patterns ? patterns.length : 0) !== r.length\n    };\n  }\n}\nclass RegExpSource {\n  source;\n  ruleId;\n  hasAnchor;\n  hasBackReferences;\n  _anchorCache;\n  constructor(regExpSource, ruleId) {\n    if (regExpSource) {\n      const len = regExpSource.length;\n      let lastPushedPos = 0;\n      let output = [];\n      let hasAnchor = false;\n      for (let pos = 0; pos < len; pos++) {\n        const ch = regExpSource.charAt(pos);\n        if (ch === '\\\\') {\n          if (pos + 1 < len) {\n            const nextCh = regExpSource.charAt(pos + 1);\n            if (nextCh === 'z') {\n              output.push(regExpSource.substring(lastPushedPos, pos));\n              output.push('$(?!\\\\n)(?<!\\\\n)');\n              lastPushedPos = pos + 2;\n            } else if (nextCh === 'A' || nextCh === 'G') {\n              hasAnchor = true;\n            }\n            pos++;\n          }\n        }\n      }\n      this.hasAnchor = hasAnchor;\n      if (lastPushedPos === 0) {\n        // No \\z hit\n        this.source = regExpSource;\n      } else {\n        output.push(regExpSource.substring(lastPushedPos, len));\n        this.source = output.join('');\n      }\n    } else {\n      this.hasAnchor = false;\n      this.source = regExpSource;\n    }\n    if (this.hasAnchor) {\n      this._anchorCache = this._buildAnchorCache();\n    } else {\n      this._anchorCache = null;\n    }\n    this.ruleId = ruleId;\n    this.hasBackReferences = HAS_BACK_REFERENCES.test(this.source);\n    // console.log('input: ' + regExpSource + ' => ' + this.source + ', ' + this.hasAnchor);\n  }\n  clone() {\n    return new RegExpSource(this.source, this.ruleId);\n  }\n  setSource(newSource) {\n    if (this.source === newSource) {\n      return;\n    }\n    this.source = newSource;\n    if (this.hasAnchor) {\n      this._anchorCache = this._buildAnchorCache();\n    }\n  }\n  resolveBackReferences(lineText, captureIndices) {\n    let capturedValues = captureIndices.map(capture => {\n      return lineText.substring(capture.start, capture.end);\n    });\n    BACK_REFERENCING_END.lastIndex = 0;\n    return this.source.replace(BACK_REFERENCING_END, (match, g1) => {\n      return escapeRegExpCharacters(capturedValues[parseInt(g1, 10)] || '');\n    });\n  }\n  _buildAnchorCache() {\n    let A0_G0_result = [];\n    let A0_G1_result = [];\n    let A1_G0_result = [];\n    let A1_G1_result = [];\n    let pos, len, ch, nextCh;\n    for (pos = 0, len = this.source.length; pos < len; pos++) {\n      ch = this.source.charAt(pos);\n      A0_G0_result[pos] = ch;\n      A0_G1_result[pos] = ch;\n      A1_G0_result[pos] = ch;\n      A1_G1_result[pos] = ch;\n      if (ch === '\\\\') {\n        if (pos + 1 < len) {\n          nextCh = this.source.charAt(pos + 1);\n          if (nextCh === 'A') {\n            A0_G0_result[pos + 1] = '\\uFFFF';\n            A0_G1_result[pos + 1] = '\\uFFFF';\n            A1_G0_result[pos + 1] = 'A';\n            A1_G1_result[pos + 1] = 'A';\n          } else if (nextCh === 'G') {\n            A0_G0_result[pos + 1] = '\\uFFFF';\n            A0_G1_result[pos + 1] = 'G';\n            A1_G0_result[pos + 1] = '\\uFFFF';\n            A1_G1_result[pos + 1] = 'G';\n          } else {\n            A0_G0_result[pos + 1] = nextCh;\n            A0_G1_result[pos + 1] = nextCh;\n            A1_G0_result[pos + 1] = nextCh;\n            A1_G1_result[pos + 1] = nextCh;\n          }\n          pos++;\n        }\n      }\n    }\n    return {\n      A0_G0: A0_G0_result.join(''),\n      A0_G1: A0_G1_result.join(''),\n      A1_G0: A1_G0_result.join(''),\n      A1_G1: A1_G1_result.join('')\n    };\n  }\n  resolveAnchors(allowA, allowG) {\n    if (!this.hasAnchor || !this._anchorCache) {\n      return this.source;\n    }\n    if (allowA) {\n      if (allowG) {\n        return this._anchorCache.A1_G1;\n      } else {\n        return this._anchorCache.A1_G0;\n      }\n    } else {\n      if (allowG) {\n        return this._anchorCache.A0_G1;\n      } else {\n        return this._anchorCache.A0_G0;\n      }\n    }\n  }\n}\nclass RegExpSourceList {\n  _items;\n  _hasAnchors;\n  _cached;\n  _anchorCache;\n  constructor() {\n    this._items = [];\n    this._hasAnchors = false;\n    this._cached = null;\n    this._anchorCache = {\n      A0_G0: null,\n      A0_G1: null,\n      A1_G0: null,\n      A1_G1: null\n    };\n  }\n  dispose() {\n    this._disposeCaches();\n  }\n  _disposeCaches() {\n    if (this._cached) {\n      this._cached.dispose();\n      this._cached = null;\n    }\n    if (this._anchorCache.A0_G0) {\n      this._anchorCache.A0_G0.dispose();\n      this._anchorCache.A0_G0 = null;\n    }\n    if (this._anchorCache.A0_G1) {\n      this._anchorCache.A0_G1.dispose();\n      this._anchorCache.A0_G1 = null;\n    }\n    if (this._anchorCache.A1_G0) {\n      this._anchorCache.A1_G0.dispose();\n      this._anchorCache.A1_G0 = null;\n    }\n    if (this._anchorCache.A1_G1) {\n      this._anchorCache.A1_G1.dispose();\n      this._anchorCache.A1_G1 = null;\n    }\n  }\n  push(item) {\n    this._items.push(item);\n    this._hasAnchors = this._hasAnchors || item.hasAnchor;\n  }\n  unshift(item) {\n    this._items.unshift(item);\n    this._hasAnchors = this._hasAnchors || item.hasAnchor;\n  }\n  length() {\n    return this._items.length;\n  }\n  setSource(index, newSource) {\n    if (this._items[index].source !== newSource) {\n      // bust the cache\n      this._disposeCaches();\n      this._items[index].setSource(newSource);\n    }\n  }\n  compile(onigLib) {\n    if (!this._cached) {\n      let regExps = this._items.map(e => e.source);\n      this._cached = new CompiledRule(onigLib, regExps, this._items.map(e => e.ruleId));\n    }\n    return this._cached;\n  }\n  compileAG(onigLib, allowA, allowG) {\n    if (!this._hasAnchors) {\n      return this.compile(onigLib);\n    } else {\n      if (allowA) {\n        if (allowG) {\n          if (!this._anchorCache.A1_G1) {\n            this._anchorCache.A1_G1 = this._resolveAnchors(onigLib, allowA, allowG);\n          }\n          return this._anchorCache.A1_G1;\n        } else {\n          if (!this._anchorCache.A1_G0) {\n            this._anchorCache.A1_G0 = this._resolveAnchors(onigLib, allowA, allowG);\n          }\n          return this._anchorCache.A1_G0;\n        }\n      } else {\n        if (allowG) {\n          if (!this._anchorCache.A0_G1) {\n            this._anchorCache.A0_G1 = this._resolveAnchors(onigLib, allowA, allowG);\n          }\n          return this._anchorCache.A0_G1;\n        } else {\n          if (!this._anchorCache.A0_G0) {\n            this._anchorCache.A0_G0 = this._resolveAnchors(onigLib, allowA, allowG);\n          }\n          return this._anchorCache.A0_G0;\n        }\n      }\n    }\n  }\n  _resolveAnchors(onigLib, allowA, allowG) {\n    let regExps = this._items.map(e => e.resolveAnchors(allowA, allowG));\n    return new CompiledRule(onigLib, regExps, this._items.map(e => e.ruleId));\n  }\n}\nclass CompiledRule {\n  regExps;\n  rules;\n  scanner;\n  constructor(onigLib, regExps, rules) {\n    this.regExps = regExps;\n    this.rules = rules;\n    this.scanner = onigLib.createOnigScanner(regExps);\n  }\n  dispose() {\n    if (typeof this.scanner.dispose === \"function\") {\n      this.scanner.dispose();\n    }\n  }\n  toString() {\n    const r = [];\n    for (let i = 0, len = this.rules.length; i < len; i++) {\n      r.push(\"   - \" + this.rules[i] + \": \" + this.regExps[i]);\n    }\n    return r.join(\"\\n\");\n  }\n  findNextMatchSync(string, startPosition, options) {\n    const result = this.scanner.findNextMatchSync(string, startPosition, options);\n    if (!result) {\n      return null;\n    }\n    return {\n      ruleId: this.rules[result.index],\n      captureIndices: result.captureIndices\n    };\n  }\n}\n\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nclass Theme {\n  _colorMap;\n  _defaults;\n  _root;\n  static createFromRawTheme(source, colorMap) {\n    return this.createFromParsedTheme(parseTheme(source), colorMap);\n  }\n  static createFromParsedTheme(source, colorMap) {\n    return resolveParsedThemeRules(source, colorMap);\n  }\n  _cachedMatchRoot = new CachedFn(scopeName => this._root.match(scopeName));\n  constructor(_colorMap, _defaults, _root) {\n    this._colorMap = _colorMap;\n    this._defaults = _defaults;\n    this._root = _root;\n  }\n  getColorMap() {\n    return this._colorMap.getColorMap();\n  }\n  getDefaults() {\n    return this._defaults;\n  }\n  match(scopePath) {\n    if (scopePath === null) {\n      return this._defaults;\n    }\n    const scopeName = scopePath.scopeName;\n    const matchingTrieElements = this._cachedMatchRoot.get(scopeName);\n    const effectiveRule = matchingTrieElements.find(v => _scopePathMatchesParentScopes(scopePath.parent, v.parentScopes));\n    if (!effectiveRule) {\n      return null;\n    }\n    return new StyleAttributes(effectiveRule.fontStyle, effectiveRule.foreground, effectiveRule.background);\n  }\n}\nclass ScopeStack {\n  parent;\n  scopeName;\n  static push(path, scopeNames) {\n    for (const name of scopeNames) {\n      path = new ScopeStack(path, name);\n    }\n    return path;\n  }\n  static from(...segments) {\n    let result = null;\n    for (let i = 0; i < segments.length; i++) {\n      result = new ScopeStack(result, segments[i]);\n    }\n    return result;\n  }\n  constructor(parent, scopeName) {\n    this.parent = parent;\n    this.scopeName = scopeName;\n  }\n  push(scopeName) {\n    return new ScopeStack(this, scopeName);\n  }\n  getSegments() {\n    let item = this;\n    const result = [];\n    while (item) {\n      result.push(item.scopeName);\n      item = item.parent;\n    }\n    result.reverse();\n    return result;\n  }\n  toString() {\n    return this.getSegments().join(' ');\n  }\n  extends(other) {\n    if (this === other) {\n      return true;\n    }\n    if (this.parent === null) {\n      return false;\n    }\n    return this.parent.extends(other);\n  }\n  getExtensionIfDefined(base) {\n    const result = [];\n    let item = this;\n    while (item && item !== base) {\n      result.push(item.scopeName);\n      item = item.parent;\n    }\n    return item === base ? result.reverse() : undefined;\n  }\n}\nfunction _scopePathMatchesParentScopes(scopePath, parentScopes) {\n  if (parentScopes === null) {\n    return true;\n  }\n  let index = 0;\n  let scopePattern = parentScopes[index];\n  while (scopePath) {\n    if (_matchesScope(scopePath.scopeName, scopePattern)) {\n      index++;\n      if (index === parentScopes.length) {\n        return true;\n      }\n      scopePattern = parentScopes[index];\n    }\n    scopePath = scopePath.parent;\n  }\n  return false;\n}\nfunction _matchesScope(scopeName, scopePattern) {\n  return scopePattern === scopeName || scopeName.startsWith(scopePattern) && scopeName[scopePattern.length] === '.';\n}\nclass StyleAttributes {\n  fontStyle;\n  foregroundId;\n  backgroundId;\n  constructor(fontStyle, foregroundId, backgroundId) {\n    this.fontStyle = fontStyle;\n    this.foregroundId = foregroundId;\n    this.backgroundId = backgroundId;\n  }\n}\n/**\n * Parse a raw theme into rules.\n */\nfunction parseTheme(source) {\n  if (!source) {\n    return [];\n  }\n  if (!source.settings || !Array.isArray(source.settings)) {\n    return [];\n  }\n  let settings = source.settings;\n  let result = [],\n    resultLen = 0;\n  for (let i = 0, len = settings.length; i < len; i++) {\n    let entry = settings[i];\n    if (!entry.settings) {\n      continue;\n    }\n    let scopes;\n    if (typeof entry.scope === 'string') {\n      let _scope = entry.scope;\n      // remove leading commas\n      _scope = _scope.replace(/^[,]+/, '');\n      // remove trailing commans\n      _scope = _scope.replace(/[,]+$/, '');\n      scopes = _scope.split(',');\n    } else if (Array.isArray(entry.scope)) {\n      scopes = entry.scope;\n    } else {\n      scopes = [''];\n    }\n    let fontStyle = -1 /* FontStyle.NotSet */;\n    if (typeof entry.settings.fontStyle === 'string') {\n      fontStyle = 0 /* FontStyle.None */;\n      let segments = entry.settings.fontStyle.split(' ');\n      for (let j = 0, lenJ = segments.length; j < lenJ; j++) {\n        let segment = segments[j];\n        switch (segment) {\n          case 'italic':\n            fontStyle = fontStyle | 1 /* FontStyle.Italic */;\n            break;\n          case 'bold':\n            fontStyle = fontStyle | 2 /* FontStyle.Bold */;\n            break;\n          case 'underline':\n            fontStyle = fontStyle | 4 /* FontStyle.Underline */;\n            break;\n          case 'strikethrough':\n            fontStyle = fontStyle | 8 /* FontStyle.Strikethrough */;\n            break;\n        }\n      }\n    }\n    let foreground = null;\n    if (typeof entry.settings.foreground === 'string' && isValidHexColor(entry.settings.foreground)) {\n      foreground = entry.settings.foreground;\n    }\n    let background = null;\n    if (typeof entry.settings.background === 'string' && isValidHexColor(entry.settings.background)) {\n      background = entry.settings.background;\n    }\n    for (let j = 0, lenJ = scopes.length; j < lenJ; j++) {\n      let _scope = scopes[j].trim();\n      let segments = _scope.split(' ');\n      let scope = segments[segments.length - 1];\n      let parentScopes = null;\n      if (segments.length > 1) {\n        parentScopes = segments.slice(0, segments.length - 1);\n        parentScopes.reverse();\n      }\n      result[resultLen++] = new ParsedThemeRule(scope, parentScopes, i, fontStyle, foreground, background);\n    }\n  }\n  return result;\n}\nclass ParsedThemeRule {\n  scope;\n  parentScopes;\n  index;\n  fontStyle;\n  foreground;\n  background;\n  constructor(scope, parentScopes, index, fontStyle, foreground, background) {\n    this.scope = scope;\n    this.parentScopes = parentScopes;\n    this.index = index;\n    this.fontStyle = fontStyle;\n    this.foreground = foreground;\n    this.background = background;\n  }\n}\n/**\n * Resolve rules (i.e. inheritance).\n */\nfunction resolveParsedThemeRules(parsedThemeRules, _colorMap) {\n  // Sort rules lexicographically, and then by index if necessary\n  parsedThemeRules.sort((a, b) => {\n    let r = strcmp(a.scope, b.scope);\n    if (r !== 0) {\n      return r;\n    }\n    r = strArrCmp(a.parentScopes, b.parentScopes);\n    if (r !== 0) {\n      return r;\n    }\n    return a.index - b.index;\n  });\n  // Determine defaults\n  let defaultFontStyle = 0 /* FontStyle.None */;\n  let defaultForeground = '#000000';\n  let defaultBackground = '#ffffff';\n  while (parsedThemeRules.length >= 1 && parsedThemeRules[0].scope === '') {\n    let incomingDefaults = parsedThemeRules.shift();\n    if (incomingDefaults.fontStyle !== -1 /* FontStyle.NotSet */) {\n      defaultFontStyle = incomingDefaults.fontStyle;\n    }\n    if (incomingDefaults.foreground !== null) {\n      defaultForeground = incomingDefaults.foreground;\n    }\n    if (incomingDefaults.background !== null) {\n      defaultBackground = incomingDefaults.background;\n    }\n  }\n  let colorMap = new ColorMap(_colorMap);\n  let defaults = new StyleAttributes(defaultFontStyle, colorMap.getId(defaultForeground), colorMap.getId(defaultBackground));\n  let root = new ThemeTrieElement(new ThemeTrieElementRule(0, null, -1 /* FontStyle.NotSet */, 0, 0), []);\n  for (let i = 0, len = parsedThemeRules.length; i < len; i++) {\n    let rule = parsedThemeRules[i];\n    root.insert(0, rule.scope, rule.parentScopes, rule.fontStyle, colorMap.getId(rule.foreground), colorMap.getId(rule.background));\n  }\n  return new Theme(colorMap, defaults, root);\n}\nclass ColorMap {\n  _isFrozen;\n  _lastColorId;\n  _id2color;\n  _color2id;\n  constructor(_colorMap) {\n    this._lastColorId = 0;\n    this._id2color = [];\n    this._color2id = Object.create(null);\n    if (Array.isArray(_colorMap)) {\n      this._isFrozen = true;\n      for (let i = 0, len = _colorMap.length; i < len; i++) {\n        this._color2id[_colorMap[i]] = i;\n        this._id2color[i] = _colorMap[i];\n      }\n    } else {\n      this._isFrozen = false;\n    }\n  }\n  getId(color) {\n    if (color === null) {\n      return 0;\n    }\n    color = color.toUpperCase();\n    let value = this._color2id[color];\n    if (value) {\n      return value;\n    }\n    if (this._isFrozen) {\n      throw new Error(`Missing color in color map - ${color}`);\n    }\n    value = ++this._lastColorId;\n    this._color2id[color] = value;\n    this._id2color[value] = color;\n    return value;\n  }\n  getColorMap() {\n    return this._id2color.slice(0);\n  }\n}\nclass ThemeTrieElementRule {\n  scopeDepth;\n  parentScopes;\n  fontStyle;\n  foreground;\n  background;\n  constructor(scopeDepth, parentScopes, fontStyle, foreground, background) {\n    this.scopeDepth = scopeDepth;\n    this.parentScopes = parentScopes;\n    this.fontStyle = fontStyle;\n    this.foreground = foreground;\n    this.background = background;\n  }\n  clone() {\n    return new ThemeTrieElementRule(this.scopeDepth, this.parentScopes, this.fontStyle, this.foreground, this.background);\n  }\n  static cloneArr(arr) {\n    let r = [];\n    for (let i = 0, len = arr.length; i < len; i++) {\n      r[i] = arr[i].clone();\n    }\n    return r;\n  }\n  acceptOverwrite(scopeDepth, fontStyle, foreground, background) {\n    if (this.scopeDepth > scopeDepth) {\n      console.log('how did this happen?');\n    } else {\n      this.scopeDepth = scopeDepth;\n    }\n    // console.log('TODO -> my depth: ' + this.scopeDepth + ', overwriting depth: ' + scopeDepth);\n    if (fontStyle !== -1 /* FontStyle.NotSet */) {\n      this.fontStyle = fontStyle;\n    }\n    if (foreground !== 0) {\n      this.foreground = foreground;\n    }\n    if (background !== 0) {\n      this.background = background;\n    }\n  }\n}\nclass ThemeTrieElement {\n  _mainRule;\n  _children;\n  _rulesWithParentScopes;\n  constructor(_mainRule, rulesWithParentScopes = [], _children = {}) {\n    this._mainRule = _mainRule;\n    this._children = _children;\n    this._rulesWithParentScopes = rulesWithParentScopes;\n  }\n  static _sortBySpecificity(arr) {\n    if (arr.length === 1) {\n      return arr;\n    }\n    arr.sort(this._cmpBySpecificity);\n    return arr;\n  }\n  static _cmpBySpecificity(a, b) {\n    if (a.scopeDepth === b.scopeDepth) {\n      const aParentScopes = a.parentScopes;\n      const bParentScopes = b.parentScopes;\n      let aParentScopesLen = aParentScopes === null ? 0 : aParentScopes.length;\n      let bParentScopesLen = bParentScopes === null ? 0 : bParentScopes.length;\n      if (aParentScopesLen === bParentScopesLen) {\n        for (let i = 0; i < aParentScopesLen; i++) {\n          const aLen = aParentScopes[i].length;\n          const bLen = bParentScopes[i].length;\n          if (aLen !== bLen) {\n            return bLen - aLen;\n          }\n        }\n      }\n      return bParentScopesLen - aParentScopesLen;\n    }\n    return b.scopeDepth - a.scopeDepth;\n  }\n  match(scope) {\n    if (scope === '') {\n      return ThemeTrieElement._sortBySpecificity([].concat(this._mainRule).concat(this._rulesWithParentScopes));\n    }\n    let dotIndex = scope.indexOf('.');\n    let head;\n    let tail;\n    if (dotIndex === -1) {\n      head = scope;\n      tail = '';\n    } else {\n      head = scope.substring(0, dotIndex);\n      tail = scope.substring(dotIndex + 1);\n    }\n    if (this._children.hasOwnProperty(head)) {\n      return this._children[head].match(tail);\n    }\n    return ThemeTrieElement._sortBySpecificity([].concat(this._mainRule).concat(this._rulesWithParentScopes));\n  }\n  insert(scopeDepth, scope, parentScopes, fontStyle, foreground, background) {\n    if (scope === '') {\n      this._doInsertHere(scopeDepth, parentScopes, fontStyle, foreground, background);\n      return;\n    }\n    let dotIndex = scope.indexOf('.');\n    let head;\n    let tail;\n    if (dotIndex === -1) {\n      head = scope;\n      tail = '';\n    } else {\n      head = scope.substring(0, dotIndex);\n      tail = scope.substring(dotIndex + 1);\n    }\n    let child;\n    if (this._children.hasOwnProperty(head)) {\n      child = this._children[head];\n    } else {\n      child = new ThemeTrieElement(this._mainRule.clone(), ThemeTrieElementRule.cloneArr(this._rulesWithParentScopes));\n      this._children[head] = child;\n    }\n    child.insert(scopeDepth + 1, tail, parentScopes, fontStyle, foreground, background);\n  }\n  _doInsertHere(scopeDepth, parentScopes, fontStyle, foreground, background) {\n    if (parentScopes === null) {\n      // Merge into the main rule\n      this._mainRule.acceptOverwrite(scopeDepth, fontStyle, foreground, background);\n      return;\n    }\n    // Try to merge into existing rule\n    for (let i = 0, len = this._rulesWithParentScopes.length; i < len; i++) {\n      let rule = this._rulesWithParentScopes[i];\n      if (strArrCmp(rule.parentScopes, parentScopes) === 0) {\n        // bingo! => we get to merge this into an existing one\n        rule.acceptOverwrite(scopeDepth, fontStyle, foreground, background);\n        return;\n      }\n    }\n    // Must add a new rule\n    // Inherit from main rule\n    if (fontStyle === -1 /* FontStyle.NotSet */) {\n      fontStyle = this._mainRule.fontStyle;\n    }\n    if (foreground === 0) {\n      foreground = this._mainRule.foreground;\n    }\n    if (background === 0) {\n      background = this._mainRule.background;\n    }\n    this._rulesWithParentScopes.push(new ThemeTrieElementRule(scopeDepth, parentScopes, fontStyle, foreground, background));\n  }\n}\n\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nclass BasicScopeAttributes {\n  languageId;\n  tokenType;\n  constructor(languageId, tokenType) {\n    this.languageId = languageId;\n    this.tokenType = tokenType;\n  }\n}\nclass BasicScopeAttributesProvider {\n  _defaultAttributes;\n  _embeddedLanguagesMatcher;\n  constructor(initialLanguageId, embeddedLanguages) {\n    this._defaultAttributes = new BasicScopeAttributes(initialLanguageId, 8 /* OptionalStandardTokenType.NotSet */);\n    this._embeddedLanguagesMatcher = new ScopeMatcher(Object.entries(embeddedLanguages || {}));\n  }\n  getDefaultAttributes() {\n    return this._defaultAttributes;\n  }\n  getBasicScopeAttributes(scopeName) {\n    if (scopeName === null) {\n      return BasicScopeAttributesProvider._NULL_SCOPE_METADATA;\n    }\n    return this._getBasicScopeAttributes.get(scopeName);\n  }\n  static _NULL_SCOPE_METADATA = new BasicScopeAttributes(0, 0);\n  _getBasicScopeAttributes = new CachedFn(scopeName => {\n    const languageId = this._scopeToLanguage(scopeName);\n    const standardTokenType = this._toStandardTokenType(scopeName);\n    return new BasicScopeAttributes(languageId, standardTokenType);\n  });\n  /**\n   * Given a produced TM scope, return the language that token describes or null if unknown.\n   * e.g. source.html => html, source.css.embedded.html => css, punctuation.definition.tag.html => null\n   */\n  _scopeToLanguage(scope) {\n    return this._embeddedLanguagesMatcher.match(scope) || 0;\n  }\n  _toStandardTokenType(scopeName) {\n    const m = scopeName.match(BasicScopeAttributesProvider.STANDARD_TOKEN_TYPE_REGEXP);\n    if (!m) {\n      return 8 /* OptionalStandardTokenType.NotSet */;\n    }\n    switch (m[1]) {\n      case \"comment\":\n        return 1 /* OptionalStandardTokenType.Comment */;\n      case \"string\":\n        return 2 /* OptionalStandardTokenType.String */;\n      case \"regex\":\n        return 3 /* OptionalStandardTokenType.RegEx */;\n      case \"meta.embedded\":\n        return 0 /* OptionalStandardTokenType.Other */;\n    }\n    throw new Error(\"Unexpected match for standard token type!\");\n  }\n  static STANDARD_TOKEN_TYPE_REGEXP = /\\b(comment|string|regex|meta\\.embedded)\\b/;\n}\nclass ScopeMatcher {\n  values;\n  scopesRegExp;\n  constructor(values) {\n    if (values.length === 0) {\n      this.values = null;\n      this.scopesRegExp = null;\n    } else {\n      this.values = new Map(values);\n      // create the regex\n      const escapedScopes = values.map(([scopeName, value]) => escapeRegExpCharacters(scopeName));\n      escapedScopes.sort();\n      escapedScopes.reverse(); // Longest scope first\n      this.scopesRegExp = new RegExp(`^((${escapedScopes.join(\")|(\")}))($|\\\\.)`, \"\");\n    }\n  }\n  match(scope) {\n    if (!this.scopesRegExp) {\n      return undefined;\n    }\n    const m = scope.match(this.scopesRegExp);\n    if (!m) {\n      // no scopes matched\n      return undefined;\n    }\n    return this.values.get(m[1]);\n  }\n}\n\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nclass TokenizeStringResult {\n  stack;\n  stoppedEarly;\n  constructor(stack, stoppedEarly) {\n    this.stack = stack;\n    this.stoppedEarly = stoppedEarly;\n  }\n}\n/**\n * Tokenize a string\n * @param grammar\n * @param lineText\n * @param isFirstLine\n * @param linePos\n * @param stack\n * @param lineTokens\n * @param checkWhileConditions\n * @param timeLimit Use `0` to indicate no time limit\n * @returns the StackElement or StackElement.TIME_LIMIT_REACHED if the time limit has been reached\n */\nfunction _tokenizeString(grammar, lineText, isFirstLine, linePos, stack, lineTokens, checkWhileConditions, timeLimit) {\n  const lineLength = lineText.content.length;\n  let STOP = false;\n  let anchorPosition = -1;\n  if (checkWhileConditions) {\n    const whileCheckResult = _checkWhileConditions(grammar, lineText, isFirstLine, linePos, stack, lineTokens);\n    stack = whileCheckResult.stack;\n    linePos = whileCheckResult.linePos;\n    isFirstLine = whileCheckResult.isFirstLine;\n    anchorPosition = whileCheckResult.anchorPosition;\n  }\n  const startTime = Date.now();\n  while (!STOP) {\n    if (timeLimit !== 0) {\n      const elapsedTime = Date.now() - startTime;\n      if (elapsedTime > timeLimit) {\n        return new TokenizeStringResult(stack, true);\n      }\n    }\n    scanNext(); // potentially modifies linePos && anchorPosition\n  }\n  return new TokenizeStringResult(stack, false);\n  function scanNext() {\n    const r = matchRuleOrInjections(grammar, lineText, isFirstLine, linePos, stack, anchorPosition);\n    if (!r) {\n      // No match\n      lineTokens.produce(stack, lineLength);\n      STOP = true;\n      return;\n    }\n    const captureIndices = r.captureIndices;\n    const matchedRuleId = r.matchedRuleId;\n    const hasAdvanced = captureIndices && captureIndices.length > 0 ? captureIndices[0].end > linePos : false;\n    if (matchedRuleId === endRuleId) {\n      // We matched the `end` for this rule => pop it\n      const poppedRule = stack.getRule(grammar);\n      lineTokens.produce(stack, captureIndices[0].start);\n      stack = stack.withContentNameScopesList(stack.nameScopesList);\n      handleCaptures(grammar, lineText, isFirstLine, stack, lineTokens, poppedRule.endCaptures, captureIndices);\n      lineTokens.produce(stack, captureIndices[0].end);\n      // pop\n      const popped = stack;\n      stack = stack.parent;\n      anchorPosition = popped.getAnchorPos();\n      if (!hasAdvanced && popped.getEnterPos() === linePos) {\n        // See https://github.com/Microsoft/vscode-textmate/issues/12\n        // Let's assume this was a mistake by the grammar author and the intent was to continue in this state\n        stack = popped;\n        lineTokens.produce(stack, lineLength);\n        STOP = true;\n        return;\n      }\n    } else {\n      // We matched a rule!\n      const _rule = grammar.getRule(matchedRuleId);\n      lineTokens.produce(stack, captureIndices[0].start);\n      const beforePush = stack;\n      // push it on the stack rule\n      const scopeName = _rule.getName(lineText.content, captureIndices);\n      const nameScopesList = stack.contentNameScopesList.pushAttributed(scopeName, grammar);\n      stack = stack.push(matchedRuleId, linePos, anchorPosition, captureIndices[0].end === lineLength, null, nameScopesList, nameScopesList);\n      if (_rule instanceof BeginEndRule) {\n        const pushedRule = _rule;\n        handleCaptures(grammar, lineText, isFirstLine, stack, lineTokens, pushedRule.beginCaptures, captureIndices);\n        lineTokens.produce(stack, captureIndices[0].end);\n        anchorPosition = captureIndices[0].end;\n        const contentName = pushedRule.getContentName(lineText.content, captureIndices);\n        const contentNameScopesList = nameScopesList.pushAttributed(contentName, grammar);\n        stack = stack.withContentNameScopesList(contentNameScopesList);\n        if (pushedRule.endHasBackReferences) {\n          stack = stack.withEndRule(pushedRule.getEndWithResolvedBackReferences(lineText.content, captureIndices));\n        }\n        if (!hasAdvanced && beforePush.hasSameRuleAs(stack)) {\n          stack = stack.pop();\n          lineTokens.produce(stack, lineLength);\n          STOP = true;\n          return;\n        }\n      } else if (_rule instanceof BeginWhileRule) {\n        const pushedRule = _rule;\n        handleCaptures(grammar, lineText, isFirstLine, stack, lineTokens, pushedRule.beginCaptures, captureIndices);\n        lineTokens.produce(stack, captureIndices[0].end);\n        anchorPosition = captureIndices[0].end;\n        const contentName = pushedRule.getContentName(lineText.content, captureIndices);\n        const contentNameScopesList = nameScopesList.pushAttributed(contentName, grammar);\n        stack = stack.withContentNameScopesList(contentNameScopesList);\n        if (pushedRule.whileHasBackReferences) {\n          stack = stack.withEndRule(pushedRule.getWhileWithResolvedBackReferences(lineText.content, captureIndices));\n        }\n        if (!hasAdvanced && beforePush.hasSameRuleAs(stack)) {\n          stack = stack.pop();\n          lineTokens.produce(stack, lineLength);\n          STOP = true;\n          return;\n        }\n      } else {\n        const matchingRule = _rule;\n        handleCaptures(grammar, lineText, isFirstLine, stack, lineTokens, matchingRule.captures, captureIndices);\n        lineTokens.produce(stack, captureIndices[0].end);\n        // pop rule immediately since it is a MatchRule\n        stack = stack.pop();\n        if (!hasAdvanced) {\n          stack = stack.safePop();\n          lineTokens.produce(stack, lineLength);\n          STOP = true;\n          return;\n        }\n      }\n    }\n    if (captureIndices[0].end > linePos) {\n      // Advance stream\n      linePos = captureIndices[0].end;\n      isFirstLine = false;\n    }\n  }\n}\n/**\n * Walk the stack from bottom to top, and check each while condition in this order.\n * If any fails, cut off the entire stack above the failed while condition. While conditions\n * may also advance the linePosition.\n */\nfunction _checkWhileConditions(grammar, lineText, isFirstLine, linePos, stack, lineTokens) {\n  let anchorPosition = stack.beginRuleCapturedEOL ? 0 : -1;\n  const whileRules = [];\n  for (let node = stack; node; node = node.pop()) {\n    const nodeRule = node.getRule(grammar);\n    if (nodeRule instanceof BeginWhileRule) {\n      whileRules.push({\n        rule: nodeRule,\n        stack: node\n      });\n    }\n  }\n  for (let whileRule = whileRules.pop(); whileRule; whileRule = whileRules.pop()) {\n    const {\n      ruleScanner,\n      findOptions\n    } = prepareRuleWhileSearch(whileRule.rule, grammar, whileRule.stack.endRule, isFirstLine, linePos === anchorPosition);\n    const r = ruleScanner.findNextMatchSync(lineText, linePos, findOptions);\n    if (r) {\n      const matchedRuleId = r.ruleId;\n      if (matchedRuleId !== whileRuleId) {\n        // we shouldn't end up here\n        stack = whileRule.stack.pop();\n        break;\n      }\n      if (r.captureIndices && r.captureIndices.length) {\n        lineTokens.produce(whileRule.stack, r.captureIndices[0].start);\n        handleCaptures(grammar, lineText, isFirstLine, whileRule.stack, lineTokens, whileRule.rule.whileCaptures, r.captureIndices);\n        lineTokens.produce(whileRule.stack, r.captureIndices[0].end);\n        anchorPosition = r.captureIndices[0].end;\n        if (r.captureIndices[0].end > linePos) {\n          linePos = r.captureIndices[0].end;\n          isFirstLine = false;\n        }\n      }\n    } else {\n      stack = whileRule.stack.pop();\n      break;\n    }\n  }\n  return {\n    stack: stack,\n    linePos: linePos,\n    anchorPosition: anchorPosition,\n    isFirstLine: isFirstLine\n  };\n}\nfunction matchRuleOrInjections(grammar, lineText, isFirstLine, linePos, stack, anchorPosition) {\n  // Look for normal grammar rule\n  const matchResult = matchRule(grammar, lineText, isFirstLine, linePos, stack, anchorPosition);\n  // Look for injected rules\n  const injections = grammar.getInjections();\n  if (injections.length === 0) {\n    // No injections whatsoever => early return\n    return matchResult;\n  }\n  const injectionResult = matchInjections(injections, grammar, lineText, isFirstLine, linePos, stack, anchorPosition);\n  if (!injectionResult) {\n    // No injections matched => early return\n    return matchResult;\n  }\n  if (!matchResult) {\n    // Only injections matched => early return\n    return injectionResult;\n  }\n  // Decide if `matchResult` or `injectionResult` should win\n  const matchResultScore = matchResult.captureIndices[0].start;\n  const injectionResultScore = injectionResult.captureIndices[0].start;\n  if (injectionResultScore < matchResultScore || injectionResult.priorityMatch && injectionResultScore === matchResultScore) {\n    // injection won!\n    return injectionResult;\n  }\n  return matchResult;\n}\nfunction matchRule(grammar, lineText, isFirstLine, linePos, stack, anchorPosition) {\n  const rule = stack.getRule(grammar);\n  const {\n    ruleScanner,\n    findOptions\n  } = prepareRuleSearch(rule, grammar, stack.endRule, isFirstLine, linePos === anchorPosition);\n  const r = ruleScanner.findNextMatchSync(lineText, linePos, findOptions);\n  if (r) {\n    return {\n      captureIndices: r.captureIndices,\n      matchedRuleId: r.ruleId\n    };\n  }\n  return null;\n}\nfunction matchInjections(injections, grammar, lineText, isFirstLine, linePos, stack, anchorPosition) {\n  // The lower the better\n  let bestMatchRating = Number.MAX_VALUE;\n  let bestMatchCaptureIndices = null;\n  let bestMatchRuleId;\n  let bestMatchResultPriority = 0;\n  const scopes = stack.contentNameScopesList.getScopeNames();\n  for (let i = 0, len = injections.length; i < len; i++) {\n    const injection = injections[i];\n    if (!injection.matcher(scopes)) {\n      // injection selector doesn't match stack\n      continue;\n    }\n    const rule = grammar.getRule(injection.ruleId);\n    const {\n      ruleScanner,\n      findOptions\n    } = prepareRuleSearch(rule, grammar, null, isFirstLine, linePos === anchorPosition);\n    const matchResult = ruleScanner.findNextMatchSync(lineText, linePos, findOptions);\n    if (!matchResult) {\n      continue;\n    }\n    const matchRating = matchResult.captureIndices[0].start;\n    if (matchRating >= bestMatchRating) {\n      // Injections are sorted by priority, so the previous injection had a better or equal priority\n      continue;\n    }\n    bestMatchRating = matchRating;\n    bestMatchCaptureIndices = matchResult.captureIndices;\n    bestMatchRuleId = matchResult.ruleId;\n    bestMatchResultPriority = injection.priority;\n    if (bestMatchRating === linePos) {\n      // No more need to look at the rest of the injections.\n      break;\n    }\n  }\n  if (bestMatchCaptureIndices) {\n    return {\n      priorityMatch: bestMatchResultPriority === -1,\n      captureIndices: bestMatchCaptureIndices,\n      matchedRuleId: bestMatchRuleId\n    };\n  }\n  return null;\n}\nfunction prepareRuleSearch(rule, grammar, endRegexSource, allowA, allowG) {\n  const ruleScanner = rule.compileAG(grammar, endRegexSource, allowA, allowG);\n  return {\n    ruleScanner,\n    findOptions: 0 /* FindOption.None */\n  };\n}\nfunction prepareRuleWhileSearch(rule, grammar, endRegexSource, allowA, allowG) {\n  const ruleScanner = rule.compileWhileAG(grammar, endRegexSource, allowA, allowG);\n  return {\n    ruleScanner,\n    findOptions: 0 /* FindOption.None */\n  };\n}\nfunction handleCaptures(grammar, lineText, isFirstLine, stack, lineTokens, captures, captureIndices) {\n  if (captures.length === 0) {\n    return;\n  }\n  const lineTextContent = lineText.content;\n  const len = Math.min(captures.length, captureIndices.length);\n  const localStack = [];\n  const maxEnd = captureIndices[0].end;\n  for (let i = 0; i < len; i++) {\n    const captureRule = captures[i];\n    if (captureRule === null) {\n      // Not interested\n      continue;\n    }\n    const captureIndex = captureIndices[i];\n    if (captureIndex.length === 0) {\n      // Nothing really captured\n      continue;\n    }\n    if (captureIndex.start > maxEnd) {\n      // Capture going beyond consumed string\n      break;\n    }\n    // pop captures while needed\n    while (localStack.length > 0 && localStack[localStack.length - 1].endPos <= captureIndex.start) {\n      // pop!\n      lineTokens.produceFromScopes(localStack[localStack.length - 1].scopes, localStack[localStack.length - 1].endPos);\n      localStack.pop();\n    }\n    if (localStack.length > 0) {\n      lineTokens.produceFromScopes(localStack[localStack.length - 1].scopes, captureIndex.start);\n    } else {\n      lineTokens.produce(stack, captureIndex.start);\n    }\n    if (captureRule.retokenizeCapturedWithRuleId) {\n      // the capture requires additional matching\n      const scopeName = captureRule.getName(lineTextContent, captureIndices);\n      const nameScopesList = stack.contentNameScopesList.pushAttributed(scopeName, grammar);\n      const contentName = captureRule.getContentName(lineTextContent, captureIndices);\n      const contentNameScopesList = nameScopesList.pushAttributed(contentName, grammar);\n      const stackClone = stack.push(captureRule.retokenizeCapturedWithRuleId, captureIndex.start, -1, false, null, nameScopesList, contentNameScopesList);\n      const onigSubStr = grammar.createOnigString(lineTextContent.substring(0, captureIndex.end));\n      _tokenizeString(grammar, onigSubStr, isFirstLine && captureIndex.start === 0, captureIndex.start, stackClone, lineTokens, false, /* no time limit */0);\n      disposeOnigString(onigSubStr);\n      continue;\n    }\n    const captureRuleScopeName = captureRule.getName(lineTextContent, captureIndices);\n    if (captureRuleScopeName !== null) {\n      // push\n      const base = localStack.length > 0 ? localStack[localStack.length - 1].scopes : stack.contentNameScopesList;\n      const captureRuleScopesList = base.pushAttributed(captureRuleScopeName, grammar);\n      localStack.push(new LocalStackElement(captureRuleScopesList, captureIndex.end));\n    }\n  }\n  while (localStack.length > 0) {\n    // pop!\n    lineTokens.produceFromScopes(localStack[localStack.length - 1].scopes, localStack[localStack.length - 1].endPos);\n    localStack.pop();\n  }\n}\nclass LocalStackElement {\n  scopes;\n  endPos;\n  constructor(scopes, endPos) {\n    this.scopes = scopes;\n    this.endPos = endPos;\n  }\n}\n\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nfunction createGrammar(scopeName, grammar, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors, grammarRepository, onigLib) {\n  return new Grammar(scopeName, grammar, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors, grammarRepository, onigLib); //TODO\n}\nfunction collectInjections(result, selector, rule, ruleFactoryHelper, grammar) {\n  const matchers = createMatchers(selector, nameMatcher);\n  const ruleId = RuleFactory.getCompiledRuleId(rule, ruleFactoryHelper, grammar.repository);\n  for (const matcher of matchers) {\n    result.push({\n      debugSelector: selector,\n      matcher: matcher.matcher,\n      ruleId: ruleId,\n      grammar: grammar,\n      priority: matcher.priority\n    });\n  }\n}\nfunction nameMatcher(identifers, scopes) {\n  if (scopes.length < identifers.length) {\n    return false;\n  }\n  let lastIndex = 0;\n  return identifers.every(identifier => {\n    for (let i = lastIndex; i < scopes.length; i++) {\n      if (scopesAreMatching(scopes[i], identifier)) {\n        lastIndex = i + 1;\n        return true;\n      }\n    }\n    return false;\n  });\n}\nfunction scopesAreMatching(thisScopeName, scopeName) {\n  if (!thisScopeName) {\n    return false;\n  }\n  if (thisScopeName === scopeName) {\n    return true;\n  }\n  const len = scopeName.length;\n  return thisScopeName.length > len && thisScopeName.substr(0, len) === scopeName && thisScopeName[len] === '.';\n}\nclass Grammar {\n  _rootScopeName;\n  balancedBracketSelectors;\n  _onigLib;\n  _rootId;\n  _lastRuleId;\n  _ruleId2desc;\n  _includedGrammars;\n  _grammarRepository;\n  _grammar;\n  _injections;\n  _basicScopeAttributesProvider;\n  _tokenTypeMatchers;\n  get themeProvider() {\n    return this._grammarRepository;\n  }\n  constructor(_rootScopeName, grammar, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors, grammarRepository, _onigLib) {\n    this._rootScopeName = _rootScopeName;\n    this.balancedBracketSelectors = balancedBracketSelectors;\n    this._onigLib = _onigLib;\n    this._basicScopeAttributesProvider = new BasicScopeAttributesProvider(initialLanguage, embeddedLanguages);\n    this._rootId = -1;\n    this._lastRuleId = 0;\n    this._ruleId2desc = [null];\n    this._includedGrammars = {};\n    this._grammarRepository = grammarRepository;\n    this._grammar = initGrammar(grammar, null);\n    this._injections = null;\n    this._tokenTypeMatchers = [];\n    if (tokenTypes) {\n      for (const selector of Object.keys(tokenTypes)) {\n        const matchers = createMatchers(selector, nameMatcher);\n        for (const matcher of matchers) {\n          this._tokenTypeMatchers.push({\n            matcher: matcher.matcher,\n            type: tokenTypes[selector]\n          });\n        }\n      }\n    }\n  }\n  dispose() {\n    for (const rule of this._ruleId2desc) {\n      if (rule) {\n        rule.dispose();\n      }\n    }\n  }\n  createOnigScanner(sources) {\n    return this._onigLib.createOnigScanner(sources);\n  }\n  createOnigString(sources) {\n    return this._onigLib.createOnigString(sources);\n  }\n  getMetadataForScope(scope) {\n    return this._basicScopeAttributesProvider.getBasicScopeAttributes(scope);\n  }\n  _collectInjections() {\n    const grammarRepository = {\n      lookup: scopeName => {\n        if (scopeName === this._rootScopeName) {\n          return this._grammar;\n        }\n        return this.getExternalGrammar(scopeName);\n      },\n      injections: scopeName => {\n        return this._grammarRepository.injections(scopeName);\n      }\n    };\n    const result = [];\n    const scopeName = this._rootScopeName;\n    const grammar = grammarRepository.lookup(scopeName);\n    if (grammar) {\n      // add injections from the current grammar\n      const rawInjections = grammar.injections;\n      if (rawInjections) {\n        for (let expression in rawInjections) {\n          collectInjections(result, expression, rawInjections[expression], this, grammar);\n        }\n      }\n      // add injection grammars contributed for the current scope\n      const injectionScopeNames = this._grammarRepository.injections(scopeName);\n      if (injectionScopeNames) {\n        injectionScopeNames.forEach(injectionScopeName => {\n          const injectionGrammar = this.getExternalGrammar(injectionScopeName);\n          if (injectionGrammar) {\n            const selector = injectionGrammar.injectionSelector;\n            if (selector) {\n              collectInjections(result, selector, injectionGrammar, this, injectionGrammar);\n            }\n          }\n        });\n      }\n    }\n    result.sort((i1, i2) => i1.priority - i2.priority); // sort by priority\n    return result;\n  }\n  getInjections() {\n    if (this._injections === null) {\n      this._injections = this._collectInjections();\n    }\n    return this._injections;\n  }\n  registerRule(factory) {\n    const id = ++this._lastRuleId;\n    const result = factory(ruleIdFromNumber(id));\n    this._ruleId2desc[id] = result;\n    return result;\n  }\n  getRule(ruleId) {\n    return this._ruleId2desc[ruleIdToNumber(ruleId)];\n  }\n  getExternalGrammar(scopeName, repository) {\n    if (this._includedGrammars[scopeName]) {\n      return this._includedGrammars[scopeName];\n    } else if (this._grammarRepository) {\n      const rawIncludedGrammar = this._grammarRepository.lookup(scopeName);\n      if (rawIncludedGrammar) {\n        // console.log('LOADED GRAMMAR ' + pattern.include);\n        this._includedGrammars[scopeName] = initGrammar(rawIncludedGrammar, repository && repository.$base);\n        return this._includedGrammars[scopeName];\n      }\n    }\n    return undefined;\n  }\n  tokenizeLine(lineText, prevState, timeLimit = 0) {\n    const r = this._tokenize(lineText, prevState, false, timeLimit);\n    return {\n      tokens: r.lineTokens.getResult(r.ruleStack, r.lineLength),\n      ruleStack: r.ruleStack,\n      stoppedEarly: r.stoppedEarly\n    };\n  }\n  tokenizeLine2(lineText, prevState, timeLimit = 0) {\n    const r = this._tokenize(lineText, prevState, true, timeLimit);\n    return {\n      tokens: r.lineTokens.getBinaryResult(r.ruleStack, r.lineLength),\n      ruleStack: r.ruleStack,\n      stoppedEarly: r.stoppedEarly\n    };\n  }\n  _tokenize(lineText, prevState, emitBinaryTokens, timeLimit) {\n    if (this._rootId === -1) {\n      this._rootId = RuleFactory.getCompiledRuleId(this._grammar.repository.$self, this, this._grammar.repository);\n      // This ensures ids are deterministic, and thus equal in renderer and webworker.\n      this.getInjections();\n    }\n    let isFirstLine;\n    if (!prevState || prevState === StateStackImpl.NULL) {\n      isFirstLine = true;\n      const rawDefaultMetadata = this._basicScopeAttributesProvider.getDefaultAttributes();\n      const defaultStyle = this.themeProvider.getDefaults();\n      const defaultMetadata = EncodedTokenAttributes.set(0, rawDefaultMetadata.languageId, rawDefaultMetadata.tokenType, null, defaultStyle.fontStyle, defaultStyle.foregroundId, defaultStyle.backgroundId);\n      const rootScopeName = this.getRule(this._rootId).getName(null, null);\n      let scopeList;\n      if (rootScopeName) {\n        scopeList = AttributedScopeStack.createRootAndLookUpScopeName(rootScopeName, defaultMetadata, this);\n      } else {\n        scopeList = AttributedScopeStack.createRoot(\"unknown\", defaultMetadata);\n      }\n      prevState = new StateStackImpl(null, this._rootId, -1, -1, false, null, scopeList, scopeList);\n    } else {\n      isFirstLine = false;\n      prevState.reset();\n    }\n    lineText = lineText + \"\\n\";\n    const onigLineText = this.createOnigString(lineText);\n    const lineLength = onigLineText.content.length;\n    const lineTokens = new LineTokens(emitBinaryTokens, lineText, this._tokenTypeMatchers, this.balancedBracketSelectors);\n    const r = _tokenizeString(this, onigLineText, isFirstLine, 0, prevState, lineTokens, true, timeLimit);\n    disposeOnigString(onigLineText);\n    return {\n      lineLength: lineLength,\n      lineTokens: lineTokens,\n      ruleStack: r.stack,\n      stoppedEarly: r.stoppedEarly\n    };\n  }\n}\nfunction initGrammar(grammar, base) {\n  grammar = clone(grammar);\n  grammar.repository = grammar.repository || {};\n  grammar.repository.$self = {\n    $vscodeTextmateLocation: grammar.$vscodeTextmateLocation,\n    patterns: grammar.patterns,\n    name: grammar.scopeName\n  };\n  grammar.repository.$base = base || grammar.repository.$self;\n  return grammar;\n}\nclass AttributedScopeStack {\n  parent;\n  scopePath;\n  tokenAttributes;\n  static fromExtension(namesScopeList, contentNameScopesList) {\n    let current = namesScopeList;\n    let scopeNames = namesScopeList?.scopePath ?? null;\n    for (const frame of contentNameScopesList) {\n      scopeNames = ScopeStack.push(scopeNames, frame.scopeNames);\n      current = new AttributedScopeStack(current, scopeNames, frame.encodedTokenAttributes);\n    }\n    return current;\n  }\n  static createRoot(scopeName, tokenAttributes) {\n    return new AttributedScopeStack(null, new ScopeStack(null, scopeName), tokenAttributes);\n  }\n  static createRootAndLookUpScopeName(scopeName, tokenAttributes, grammar) {\n    const rawRootMetadata = grammar.getMetadataForScope(scopeName);\n    const scopePath = new ScopeStack(null, scopeName);\n    const rootStyle = grammar.themeProvider.themeMatch(scopePath);\n    const resolvedTokenAttributes = AttributedScopeStack.mergeAttributes(tokenAttributes, rawRootMetadata, rootStyle);\n    return new AttributedScopeStack(null, scopePath, resolvedTokenAttributes);\n  }\n  get scopeName() {\n    return this.scopePath.scopeName;\n  }\n  /**\n   * Invariant:\n   * ```\n   * if (parent && !scopePath.extends(parent.scopePath)) {\n   * \tthrow new Error();\n   * }\n   * ```\n   */\n  constructor(parent, scopePath, tokenAttributes) {\n    this.parent = parent;\n    this.scopePath = scopePath;\n    this.tokenAttributes = tokenAttributes;\n  }\n  toString() {\n    return this.getScopeNames().join(' ');\n  }\n  equals(other) {\n    return AttributedScopeStack.equals(this, other);\n  }\n  static equals(a, b) {\n    do {\n      if (a === b) {\n        return true;\n      }\n      if (!a && !b) {\n        // End of list reached for both\n        return true;\n      }\n      if (!a || !b) {\n        // End of list reached only for one\n        return false;\n      }\n      if (a.scopeName !== b.scopeName || a.tokenAttributes !== b.tokenAttributes) {\n        return false;\n      }\n      // Go to previous pair\n      a = a.parent;\n      b = b.parent;\n    } while (true);\n  }\n  static mergeAttributes(existingTokenAttributes, basicScopeAttributes, styleAttributes) {\n    let fontStyle = -1 /* FontStyle.NotSet */;\n    let foreground = 0;\n    let background = 0;\n    if (styleAttributes !== null) {\n      fontStyle = styleAttributes.fontStyle;\n      foreground = styleAttributes.foregroundId;\n      background = styleAttributes.backgroundId;\n    }\n    return EncodedTokenAttributes.set(existingTokenAttributes, basicScopeAttributes.languageId, basicScopeAttributes.tokenType, null, fontStyle, foreground, background);\n  }\n  pushAttributed(scopePath, grammar) {\n    if (scopePath === null) {\n      return this;\n    }\n    if (scopePath.indexOf(' ') === -1) {\n      // This is the common case and much faster\n      return AttributedScopeStack._pushAttributed(this, scopePath, grammar);\n    }\n    const scopes = scopePath.split(/ /g);\n    let result = this;\n    for (const scope of scopes) {\n      result = AttributedScopeStack._pushAttributed(result, scope, grammar);\n    }\n    return result;\n  }\n  static _pushAttributed(target, scopeName, grammar) {\n    const rawMetadata = grammar.getMetadataForScope(scopeName);\n    const newPath = target.scopePath.push(scopeName);\n    const scopeThemeMatchResult = grammar.themeProvider.themeMatch(newPath);\n    const metadata = AttributedScopeStack.mergeAttributes(target.tokenAttributes, rawMetadata, scopeThemeMatchResult);\n    return new AttributedScopeStack(target, newPath, metadata);\n  }\n  getScopeNames() {\n    return this.scopePath.getSegments();\n  }\n  getExtensionIfDefined(base) {\n    const result = [];\n    let self = this;\n    while (self && self !== base) {\n      result.push({\n        encodedTokenAttributes: self.tokenAttributes,\n        scopeNames: self.scopePath.getExtensionIfDefined(self.parent?.scopePath ?? null)\n      });\n      self = self.parent;\n    }\n    return self === base ? result.reverse() : undefined;\n  }\n}\n/**\n * Represents a \"pushed\" state on the stack (as a linked list element).\n */\nclass StateStackImpl {\n  parent;\n  ruleId;\n  beginRuleCapturedEOL;\n  endRule;\n  nameScopesList;\n  contentNameScopesList;\n  _stackElementBrand = undefined;\n  // TODO remove me\n  static NULL = new StateStackImpl(null, 0, 0, 0, false, null, null, null);\n  /**\n   * The position on the current line where this state was pushed.\n   * This is relevant only while tokenizing a line, to detect endless loops.\n   * Its value is meaningless across lines.\n   */\n  _enterPos;\n  /**\n   * The captured anchor position when this stack element was pushed.\n   * This is relevant only while tokenizing a line, to restore the anchor position when popping.\n   * Its value is meaningless across lines.\n   */\n  _anchorPos;\n  /**\n   * The depth of the stack.\n   */\n  depth;\n  /**\n   * Invariant:\n   * ```\n   * if (contentNameScopesList !== nameScopesList && contentNameScopesList?.parent !== nameScopesList) {\n   * \tthrow new Error();\n   * }\n   * if (this.parent && !nameScopesList.extends(this.parent.contentNameScopesList)) {\n   * \tthrow new Error();\n   * }\n   * ```\n   */\n  constructor(\n  /**\n   * The previous state on the stack (or null for the root state).\n   */\n  parent,\n  /**\n   * The state (rule) that this element represents.\n   */\n  ruleId, enterPos, anchorPos,\n  /**\n   * The state has entered and captured \\n. This means that the next line should have an anchorPosition of 0.\n   */\n  beginRuleCapturedEOL,\n  /**\n   * The \"pop\" (end) condition for this state in case that it was dynamically generated through captured text.\n   */\n  endRule,\n  /**\n   * The list of scopes containing the \"name\" for this state.\n   */\n  nameScopesList,\n  /**\n   * The list of scopes containing the \"contentName\" (besides \"name\") for this state.\n   * This list **must** contain as an element `scopeName`.\n   */\n  contentNameScopesList) {\n    this.parent = parent;\n    this.ruleId = ruleId;\n    this.beginRuleCapturedEOL = beginRuleCapturedEOL;\n    this.endRule = endRule;\n    this.nameScopesList = nameScopesList;\n    this.contentNameScopesList = contentNameScopesList;\n    this.depth = this.parent ? this.parent.depth + 1 : 1;\n    this._enterPos = enterPos;\n    this._anchorPos = anchorPos;\n  }\n  equals(other) {\n    if (other === null) {\n      return false;\n    }\n    return StateStackImpl._equals(this, other);\n  }\n  static _equals(a, b) {\n    if (a === b) {\n      return true;\n    }\n    if (!this._structuralEquals(a, b)) {\n      return false;\n    }\n    return AttributedScopeStack.equals(a.contentNameScopesList, b.contentNameScopesList);\n  }\n  /**\n   * A structural equals check. Does not take into account `scopes`.\n   */\n  static _structuralEquals(a, b) {\n    do {\n      if (a === b) {\n        return true;\n      }\n      if (!a && !b) {\n        // End of list reached for both\n        return true;\n      }\n      if (!a || !b) {\n        // End of list reached only for one\n        return false;\n      }\n      if (a.depth !== b.depth || a.ruleId !== b.ruleId || a.endRule !== b.endRule) {\n        return false;\n      }\n      // Go to previous pair\n      a = a.parent;\n      b = b.parent;\n    } while (true);\n  }\n  clone() {\n    return this;\n  }\n  static _reset(el) {\n    while (el) {\n      el._enterPos = -1;\n      el._anchorPos = -1;\n      el = el.parent;\n    }\n  }\n  reset() {\n    StateStackImpl._reset(this);\n  }\n  pop() {\n    return this.parent;\n  }\n  safePop() {\n    if (this.parent) {\n      return this.parent;\n    }\n    return this;\n  }\n  push(ruleId, enterPos, anchorPos, beginRuleCapturedEOL, endRule, nameScopesList, contentNameScopesList) {\n    return new StateStackImpl(this, ruleId, enterPos, anchorPos, beginRuleCapturedEOL, endRule, nameScopesList, contentNameScopesList);\n  }\n  getEnterPos() {\n    return this._enterPos;\n  }\n  getAnchorPos() {\n    return this._anchorPos;\n  }\n  getRule(grammar) {\n    return grammar.getRule(this.ruleId);\n  }\n  toString() {\n    const r = [];\n    this._writeString(r, 0);\n    return \"[\" + r.join(\",\") + \"]\";\n  }\n  _writeString(res, outIndex) {\n    if (this.parent) {\n      outIndex = this.parent._writeString(res, outIndex);\n    }\n    res[outIndex++] = `(${this.ruleId}, ${this.nameScopesList?.toString()}, ${this.contentNameScopesList?.toString()})`;\n    return outIndex;\n  }\n  withContentNameScopesList(contentNameScopeStack) {\n    if (this.contentNameScopesList === contentNameScopeStack) {\n      return this;\n    }\n    return this.parent.push(this.ruleId, this._enterPos, this._anchorPos, this.beginRuleCapturedEOL, this.endRule, this.nameScopesList, contentNameScopeStack);\n  }\n  withEndRule(endRule) {\n    if (this.endRule === endRule) {\n      return this;\n    }\n    return new StateStackImpl(this.parent, this.ruleId, this._enterPos, this._anchorPos, this.beginRuleCapturedEOL, endRule, this.nameScopesList, this.contentNameScopesList);\n  }\n  // Used to warn of endless loops\n  hasSameRuleAs(other) {\n    let el = this;\n    while (el && el._enterPos === other._enterPos) {\n      if (el.ruleId === other.ruleId) {\n        return true;\n      }\n      el = el.parent;\n    }\n    return false;\n  }\n  toStateStackFrame() {\n    return {\n      ruleId: ruleIdToNumber(this.ruleId),\n      beginRuleCapturedEOL: this.beginRuleCapturedEOL,\n      endRule: this.endRule,\n      nameScopesList: this.nameScopesList?.getExtensionIfDefined(this.parent?.nameScopesList ?? null) ?? [],\n      contentNameScopesList: this.contentNameScopesList?.getExtensionIfDefined(this.nameScopesList) ?? []\n    };\n  }\n  static pushFrame(self, frame) {\n    const namesScopeList = AttributedScopeStack.fromExtension(self?.nameScopesList ?? null, frame.nameScopesList);\n    return new StateStackImpl(self, ruleIdFromNumber(frame.ruleId), frame.enterPos ?? -1, frame.anchorPos ?? -1, frame.beginRuleCapturedEOL, frame.endRule, namesScopeList, AttributedScopeStack.fromExtension(namesScopeList, frame.contentNameScopesList));\n  }\n}\nclass BalancedBracketSelectors {\n  balancedBracketScopes;\n  unbalancedBracketScopes;\n  allowAny = false;\n  constructor(balancedBracketScopes, unbalancedBracketScopes) {\n    this.balancedBracketScopes = balancedBracketScopes.flatMap(selector => {\n      if (selector === '*') {\n        this.allowAny = true;\n        return [];\n      }\n      return createMatchers(selector, nameMatcher).map(m => m.matcher);\n    });\n    this.unbalancedBracketScopes = unbalancedBracketScopes.flatMap(selector => createMatchers(selector, nameMatcher).map(m => m.matcher));\n  }\n  get matchesAlways() {\n    return this.allowAny && this.unbalancedBracketScopes.length === 0;\n  }\n  get matchesNever() {\n    return this.balancedBracketScopes.length === 0 && !this.allowAny;\n  }\n  match(scopes) {\n    for (const excluder of this.unbalancedBracketScopes) {\n      if (excluder(scopes)) {\n        return false;\n      }\n    }\n    for (const includer of this.balancedBracketScopes) {\n      if (includer(scopes)) {\n        return true;\n      }\n    }\n    return this.allowAny;\n  }\n}\nclass LineTokens {\n  balancedBracketSelectors;\n  _emitBinaryTokens;\n  /**\n   * defined only if `false`.\n   */\n  _lineText;\n  /**\n   * used only if `_emitBinaryTokens` is false.\n   */\n  _tokens;\n  /**\n   * used only if `_emitBinaryTokens` is true.\n   */\n  _binaryTokens;\n  _lastTokenEndIndex;\n  _tokenTypeOverrides;\n  constructor(emitBinaryTokens, lineText, tokenTypeOverrides, balancedBracketSelectors) {\n    this.balancedBracketSelectors = balancedBracketSelectors;\n    this._emitBinaryTokens = emitBinaryTokens;\n    this._tokenTypeOverrides = tokenTypeOverrides;\n    {\n      this._lineText = null;\n    }\n    this._tokens = [];\n    this._binaryTokens = [];\n    this._lastTokenEndIndex = 0;\n  }\n  produce(stack, endIndex) {\n    this.produceFromScopes(stack.contentNameScopesList, endIndex);\n  }\n  produceFromScopes(scopesList, endIndex) {\n    if (this._lastTokenEndIndex >= endIndex) {\n      return;\n    }\n    if (this._emitBinaryTokens) {\n      let metadata = scopesList?.tokenAttributes ?? 0;\n      let containsBalancedBrackets = false;\n      if (this.balancedBracketSelectors?.matchesAlways) {\n        containsBalancedBrackets = true;\n      }\n      if (this._tokenTypeOverrides.length > 0 || this.balancedBracketSelectors && !this.balancedBracketSelectors.matchesAlways && !this.balancedBracketSelectors.matchesNever) {\n        // Only generate scope array when required to improve performance\n        const scopes = scopesList?.getScopeNames() ?? [];\n        for (const tokenType of this._tokenTypeOverrides) {\n          if (tokenType.matcher(scopes)) {\n            metadata = EncodedTokenAttributes.set(metadata, 0, toOptionalTokenType(tokenType.type), null, -1 /* FontStyle.NotSet */, 0, 0);\n          }\n        }\n        if (this.balancedBracketSelectors) {\n          containsBalancedBrackets = this.balancedBracketSelectors.match(scopes);\n        }\n      }\n      if (containsBalancedBrackets) {\n        metadata = EncodedTokenAttributes.set(metadata, 0, 8 /* OptionalStandardTokenType.NotSet */, containsBalancedBrackets, -1 /* FontStyle.NotSet */, 0, 0);\n      }\n      if (this._binaryTokens.length > 0 && this._binaryTokens[this._binaryTokens.length - 1] === metadata) {\n        // no need to push a token with the same metadata\n        this._lastTokenEndIndex = endIndex;\n        return;\n      }\n      this._binaryTokens.push(this._lastTokenEndIndex);\n      this._binaryTokens.push(metadata);\n      this._lastTokenEndIndex = endIndex;\n      return;\n    }\n    const scopes = scopesList?.getScopeNames() ?? [];\n    this._tokens.push({\n      startIndex: this._lastTokenEndIndex,\n      endIndex: endIndex,\n      // value: lineText.substring(lastTokenEndIndex, endIndex),\n      scopes: scopes\n    });\n    this._lastTokenEndIndex = endIndex;\n  }\n  getResult(stack, lineLength) {\n    if (this._tokens.length > 0 && this._tokens[this._tokens.length - 1].startIndex === lineLength - 1) {\n      // pop produced token for newline\n      this._tokens.pop();\n    }\n    if (this._tokens.length === 0) {\n      this._lastTokenEndIndex = -1;\n      this.produce(stack, lineLength);\n      this._tokens[this._tokens.length - 1].startIndex = 0;\n    }\n    return this._tokens;\n  }\n  getBinaryResult(stack, lineLength) {\n    if (this._binaryTokens.length > 0 && this._binaryTokens[this._binaryTokens.length - 2] === lineLength - 1) {\n      // pop produced token for newline\n      this._binaryTokens.pop();\n      this._binaryTokens.pop();\n    }\n    if (this._binaryTokens.length === 0) {\n      this._lastTokenEndIndex = -1;\n      this.produce(stack, lineLength);\n      this._binaryTokens[this._binaryTokens.length - 2] = 0;\n    }\n    const result = new Uint32Array(this._binaryTokens.length);\n    for (let i = 0, len = this._binaryTokens.length; i < len; i++) {\n      result[i] = this._binaryTokens[i];\n    }\n    return result;\n  }\n}\n\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nclass SyncRegistry {\n  _onigLibPromise;\n  _grammars = new Map();\n  _rawGrammars = new Map();\n  _injectionGrammars = new Map();\n  _theme;\n  constructor(theme, _onigLibPromise) {\n    this._onigLibPromise = _onigLibPromise;\n    this._theme = theme;\n  }\n  dispose() {\n    for (const grammar of this._grammars.values()) {\n      grammar.dispose();\n    }\n  }\n  setTheme(theme) {\n    this._theme = theme;\n  }\n  getColorMap() {\n    return this._theme.getColorMap();\n  }\n  /**\n   * Add `grammar` to registry and return a list of referenced scope names\n   */\n  addGrammar(grammar, injectionScopeNames) {\n    this._rawGrammars.set(grammar.scopeName, grammar);\n    if (injectionScopeNames) {\n      this._injectionGrammars.set(grammar.scopeName, injectionScopeNames);\n    }\n  }\n  /**\n   * Lookup a raw grammar.\n   */\n  lookup(scopeName) {\n    return this._rawGrammars.get(scopeName);\n  }\n  /**\n   * Returns the injections for the given grammar\n   */\n  injections(targetScope) {\n    return this._injectionGrammars.get(targetScope);\n  }\n  /**\n   * Get the default theme settings\n   */\n  getDefaults() {\n    return this._theme.getDefaults();\n  }\n  /**\n   * Match a scope in the theme.\n   */\n  themeMatch(scopePath) {\n    return this._theme.match(scopePath);\n  }\n  /**\n   * Lookup a grammar.\n   */\n  async grammarForScopeName(scopeName, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors) {\n    if (!this._grammars.has(scopeName)) {\n      let rawGrammar = this._rawGrammars.get(scopeName);\n      if (!rawGrammar) {\n        return null;\n      }\n      this._grammars.set(scopeName, createGrammar(scopeName, rawGrammar, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors, this, await this._onigLibPromise));\n    }\n    return this._grammars.get(scopeName);\n  }\n}\n\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\n/**\n * The registry that will hold all grammars.\n */\nlet Registry$1 = class Registry {\n  _options;\n  _syncRegistry;\n  _ensureGrammarCache;\n  constructor(options) {\n    this._options = options;\n    this._syncRegistry = new SyncRegistry(Theme.createFromRawTheme(options.theme, options.colorMap), options.onigLib);\n    this._ensureGrammarCache = new Map();\n  }\n  dispose() {\n    this._syncRegistry.dispose();\n  }\n  /**\n   * Change the theme. Once called, no previous `ruleStack` should be used anymore.\n   */\n  setTheme(theme, colorMap) {\n    this._syncRegistry.setTheme(Theme.createFromRawTheme(theme, colorMap));\n  }\n  /**\n   * Returns a lookup array for color ids.\n   */\n  getColorMap() {\n    return this._syncRegistry.getColorMap();\n  }\n  /**\n   * Load the grammar for `scopeName` and all referenced included grammars asynchronously.\n   * Please do not use language id 0.\n   */\n  loadGrammarWithEmbeddedLanguages(initialScopeName, initialLanguage, embeddedLanguages) {\n    return this.loadGrammarWithConfiguration(initialScopeName, initialLanguage, {\n      embeddedLanguages\n    });\n  }\n  /**\n   * Load the grammar for `scopeName` and all referenced included grammars asynchronously.\n   * Please do not use language id 0.\n   */\n  loadGrammarWithConfiguration(initialScopeName, initialLanguage, configuration) {\n    return this._loadGrammar(initialScopeName, initialLanguage, configuration.embeddedLanguages, configuration.tokenTypes, new BalancedBracketSelectors(configuration.balancedBracketSelectors || [], configuration.unbalancedBracketSelectors || []));\n  }\n  /**\n   * Load the grammar for `scopeName` and all referenced included grammars asynchronously.\n   */\n  loadGrammar(initialScopeName) {\n    return this._loadGrammar(initialScopeName, 0, null, null, null);\n  }\n  async _loadGrammar(initialScopeName, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors) {\n    const dependencyProcessor = new ScopeDependencyProcessor(this._syncRegistry, initialScopeName);\n    while (dependencyProcessor.Q.length > 0) {\n      await Promise.all(dependencyProcessor.Q.map(request => this._loadSingleGrammar(request.scopeName)));\n      dependencyProcessor.processQueue();\n    }\n    return this._grammarForScopeName(initialScopeName, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors);\n  }\n  async _loadSingleGrammar(scopeName) {\n    if (!this._ensureGrammarCache.has(scopeName)) {\n      this._ensureGrammarCache.set(scopeName, this._doLoadSingleGrammar(scopeName));\n    }\n    return this._ensureGrammarCache.get(scopeName);\n  }\n  async _doLoadSingleGrammar(scopeName) {\n    const grammar = await this._options.loadGrammar(scopeName);\n    if (grammar) {\n      const injections = typeof this._options.getInjections === \"function\" ? this._options.getInjections(scopeName) : undefined;\n      this._syncRegistry.addGrammar(grammar, injections);\n    }\n  }\n  /**\n   * Adds a rawGrammar.\n   */\n  async addGrammar(rawGrammar, injections = [], initialLanguage = 0, embeddedLanguages = null) {\n    this._syncRegistry.addGrammar(rawGrammar, injections);\n    return await this._grammarForScopeName(rawGrammar.scopeName, initialLanguage, embeddedLanguages);\n  }\n  /**\n   * Get the grammar for `scopeName`. The grammar must first be created via `loadGrammar` or `addGrammar`.\n   */\n  _grammarForScopeName(scopeName, initialLanguage = 0, embeddedLanguages = null, tokenTypes = null, balancedBracketSelectors = null) {\n    return this._syncRegistry.grammarForScopeName(scopeName, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors);\n  }\n};\nconst INITIAL = StateStackImpl.NULL;\n\n/**\n * Helpers to manage the \"collapsed\" metadata of an entire StackElement stack.\n * The following assumptions have been made:\n *  - languageId < 256 => needs 8 bits\n *  - unique color count < 512 => needs 9 bits\n *\n * The binary format is:\n * - -------------------------------------------\n *     3322 2222 2222 1111 1111 1100 0000 0000\n *     1098 7654 3210 9876 5432 1098 7654 3210\n * - -------------------------------------------\n *     xxxx xxxx xxxx xxxx xxxx xxxx xxxx xxxx\n *     bbbb bbbb bfff ffff ffFF FTTT LLLL LLLL\n * - -------------------------------------------\n *  - L = LanguageId (8 bits)\n *  - T = StandardTokenType (3 bits)\n *  - F = FontStyle (3 bits)\n *  - f = foreground color (9 bits)\n *  - b = background color (9 bits)\n */\nconst MetadataConsts = {\n  LANGUAGEID_MASK: 0b00000000000000000000000011111111,\n  TOKEN_TYPE_MASK: 0b00000000000000000000001100000000,\n  BALANCED_BRACKETS_MASK: 0b00000000000000000000010000000000,\n  FONT_STYLE_MASK: 0b00000000000000000011100000000000,\n  FOREGROUND_MASK: 0b00000000011111111100000000000000,\n  BACKGROUND_MASK: 0b11111111100000000000000000000000,\n  LANGUAGEID_OFFSET: 0,\n  TOKEN_TYPE_OFFSET: 8,\n  BALANCED_BRACKETS_OFFSET: 10,\n  FONT_STYLE_OFFSET: 11,\n  FOREGROUND_OFFSET: 15,\n  BACKGROUND_OFFSET: 24\n};\nclass StackElementMetadata {\n  static toBinaryStr(metadata) {\n    let r = metadata.toString(2);\n    while (r.length < 32) r = `0${r}`;\n    return r;\n  }\n  // public static printMetadata(metadata: number): void {\n  //   const languageId = StackElementMetadata.getLanguageId(metadata)\n  //   const tokenType = StackElementMetadata.getTokenType(metadata)\n  //   const fontStyle = StackElementMetadata.getFontStyle(metadata)\n  //   const foreground = StackElementMetadata.getForeground(metadata)\n  //   const background = StackElementMetadata.getBackground(metadata)\n  //   console.log({\n  //     languageId,\n  //     tokenType,\n  //     fontStyle,\n  //     foreground,\n  //     background,\n  //   })\n  // }\n  static getLanguageId(metadata) {\n    return (metadata & MetadataConsts.LANGUAGEID_MASK) >>> MetadataConsts.LANGUAGEID_OFFSET;\n  }\n  static getTokenType(metadata) {\n    return (metadata & MetadataConsts.TOKEN_TYPE_MASK) >>> MetadataConsts.TOKEN_TYPE_OFFSET;\n  }\n  static getFontStyle(metadata) {\n    return (metadata & MetadataConsts.FONT_STYLE_MASK) >>> MetadataConsts.FONT_STYLE_OFFSET;\n  }\n  static getForeground(metadata) {\n    return (metadata & MetadataConsts.FOREGROUND_MASK) >>> MetadataConsts.FOREGROUND_OFFSET;\n  }\n  static getBackground(metadata) {\n    return (metadata & MetadataConsts.BACKGROUND_MASK) >>> MetadataConsts.BACKGROUND_OFFSET;\n  }\n  static containsBalancedBrackets(metadata) {\n    return (metadata & MetadataConsts.BALANCED_BRACKETS_MASK) !== 0;\n  }\n  static set(metadata, languageId, tokenType, fontStyle, foreground, background) {\n    let _languageId = StackElementMetadata.getLanguageId(metadata);\n    let _tokenType = StackElementMetadata.getTokenType(metadata);\n    let _fontStyle = StackElementMetadata.getFontStyle(metadata);\n    let _foreground = StackElementMetadata.getForeground(metadata);\n    let _background = StackElementMetadata.getBackground(metadata);\n    const _containsBalancedBracketsBit = StackElementMetadata.containsBalancedBrackets(metadata) ? 1 : 0;\n    if (languageId !== 0) _languageId = languageId;\n    if (tokenType !== 0 /* TemporaryStandardTokenType.Other */) {\n      _tokenType = tokenType === 8 /* TemporaryStandardTokenType.MetaEmbedded */ ? 0 /* StandardTokenType.Other */ : tokenType;\n    }\n    if (fontStyle !== FontStyle.NotSet) _fontStyle = fontStyle;\n    if (foreground !== 0) _foreground = foreground;\n    if (background !== 0) _background = background;\n    return (_languageId << MetadataConsts.LANGUAGEID_OFFSET | _tokenType << MetadataConsts.TOKEN_TYPE_OFFSET | _fontStyle << MetadataConsts.FONT_STYLE_OFFSET | _containsBalancedBracketsBit << MetadataConsts.BALANCED_BRACKETS_OFFSET | _foreground << MetadataConsts.FOREGROUND_OFFSET | _background << MetadataConsts.BACKGROUND_OFFSET) >>> 0;\n  }\n}\nexport { INITIAL, Registry$1 as Registry, StackElementMetadata, Theme };", "import { INITIAL, StackElementMetadata, Registry as Registry$1, Theme } from './textmate.mjs';\nimport { FontStyle } from './types.mjs';\nfunction toArray(x) {\n  return Array.isArray(x) ? x : [x];\n}\n/**\n * Slipt a string into lines, each line preserves the line ending.\n */\nfunction splitLines(code, preserveEnding = false) {\n  const parts = code.split(/(\\r?\\n)/g);\n  let index = 0;\n  const lines = [];\n  for (let i = 0; i < parts.length; i += 2) {\n    const line = preserveEnding ? parts[i] + (parts[i + 1] || '') : parts[i];\n    lines.push([line, index]);\n    index += parts[i].length;\n    index += parts[i + 1]?.length || 0;\n  }\n  return lines;\n}\n/**\n * Check if the language is plaintext that is ignored by Shiki.\n *\n * Hard-coded plain text languages: `plaintext`, `txt`, `text`, `plain`.\n */\nfunction isPlainLang(lang) {\n  return !lang || ['plaintext', 'txt', 'text', 'plain'].includes(lang);\n}\n/**\n * Check if the language is specially handled or bypassed by Shiki.\n *\n * Hard-coded languages: `ansi` and plaintexts like `plaintext`, `txt`, `text`, `plain`.\n */\nfunction isSpecialLang(lang) {\n  return lang === 'ansi' || isPlainLang(lang);\n}\n/**\n * Check if the theme is specially handled or bypassed by Shiki.\n *\n * Hard-coded themes: `none`.\n */\nfunction isNoneTheme(theme) {\n  return theme === 'none';\n}\n/**\n * Check if the theme is specially handled or bypassed by Shiki.\n *\n * Hard-coded themes: `none`.\n */\nfunction isSpecialTheme(theme) {\n  return isNoneTheme(theme);\n}\n/**\n * Utility to append class to a hast node\n *\n * If the `property.class` is a string, it will be splitted by space and converted to an array.\n */\nfunction addClassToHast(node, className) {\n  if (!className) return node;\n  node.properties ||= {};\n  node.properties.class ||= [];\n  if (typeof node.properties.class === 'string') node.properties.class = node.properties.class.split(/\\s+/g);\n  if (!Array.isArray(node.properties.class)) node.properties.class = [];\n  const targets = Array.isArray(className) ? className : className.split(/\\s+/g);\n  for (const c of targets) {\n    if (c && !node.properties.class.includes(c)) node.properties.class.push(c);\n  }\n  return node;\n}\n/**\n * Split a token into multiple tokens by given offsets.\n *\n * The offsets are relative to the token, and should be sorted.\n */\nfunction splitToken(token, offsets) {\n  let lastOffset = 0;\n  const tokens = [];\n  for (const offset of offsets) {\n    if (offset > lastOffset) {\n      tokens.push({\n        ...token,\n        content: token.content.slice(lastOffset, offset),\n        offset: token.offset + lastOffset\n      });\n    }\n    lastOffset = offset;\n  }\n  if (lastOffset < token.content.length) {\n    tokens.push({\n      ...token,\n      content: token.content.slice(lastOffset),\n      offset: token.offset + lastOffset\n    });\n  }\n  return tokens;\n}\n/**\n * Split 2D tokens array by given breakpoints.\n */\nfunction splitTokens(tokens, breakpoints) {\n  const sorted = Array.from(breakpoints instanceof Set ? breakpoints : new Set(breakpoints)).sort((a, b) => a - b);\n  if (!sorted.length) return tokens;\n  return tokens.map(line => {\n    return line.flatMap(token => {\n      const breakpointsInToken = sorted.filter(i => token.offset < i && i < token.offset + token.content.length).map(i => i - token.offset).sort((a, b) => a - b);\n      if (!breakpointsInToken.length) return token;\n      return splitToken(token, breakpointsInToken);\n    });\n  });\n}\nfunction resolveColorReplacements(theme, options) {\n  const replacements = typeof theme === 'string' ? {} : {\n    ...theme.colorReplacements\n  };\n  const themeName = typeof theme === 'string' ? theme : theme.name;\n  for (const [key, value] of Object.entries(options?.colorReplacements || {})) {\n    if (typeof value === 'string') replacements[key] = value;else if (key === themeName) Object.assign(replacements, value);\n  }\n  return replacements;\n}\nfunction applyColorReplacements(color, replacements) {\n  if (!color) return color;\n  return replacements?.[color?.toLowerCase()] || color;\n}\nfunction getTokenStyleObject(token) {\n  const styles = {};\n  if (token.color) styles.color = token.color;\n  if (token.bgColor) styles['background-color'] = token.bgColor;\n  if (token.fontStyle) {\n    if (token.fontStyle & FontStyle.Italic) styles['font-style'] = 'italic';\n    if (token.fontStyle & FontStyle.Bold) styles['font-weight'] = 'bold';\n    if (token.fontStyle & FontStyle.Underline) styles['text-decoration'] = 'underline';\n  }\n  return styles;\n}\nfunction stringifyTokenStyle(token) {\n  return Object.entries(token).map(([key, value]) => `${key}:${value}`).join(';');\n}\n/**\n * Creates a converter between index and position in a code block.\n */\nfunction createPositionConverter(code) {\n  const lines = splitLines(code, true).map(([line]) => line);\n  function indexToPos(index) {\n    let character = index;\n    let line = 0;\n    for (const lineText of lines) {\n      if (character < lineText.length) break;\n      character -= lineText.length;\n      line++;\n    }\n    return {\n      line,\n      character\n    };\n  }\n  function posToIndex(line, character) {\n    let index = 0;\n    for (let i = 0; i < line; i++) index += lines[i].length;\n    index += character;\n    return index;\n  }\n  return {\n    lines,\n    indexToPos,\n    posToIndex\n  };\n}\n\n// src/colors.ts\nvar namedColors = [\"black\", \"red\", \"green\", \"yellow\", \"blue\", \"magenta\", \"cyan\", \"white\", \"brightBlack\", \"brightRed\", \"brightGreen\", \"brightYellow\", \"brightBlue\", \"brightMagenta\", \"brightCyan\", \"brightWhite\"];\n\n// src/decorations.ts\nvar decorations = {\n  1: \"bold\",\n  2: \"dim\",\n  3: \"italic\",\n  4: \"underline\",\n  7: \"reverse\",\n  9: \"strikethrough\"\n};\n\n// src/parser.ts\nfunction findSequence(value, position) {\n  const nextEscape = value.indexOf(\"\\x1B[\", position);\n  if (nextEscape !== -1) {\n    const nextClose = value.indexOf(\"m\", nextEscape);\n    return {\n      sequence: value.substring(nextEscape + 2, nextClose).split(\";\"),\n      startPosition: nextEscape,\n      position: nextClose + 1\n    };\n  }\n  return {\n    position: value.length\n  };\n}\nfunction parseColor(sequence, index) {\n  let offset = 1;\n  const colorMode = sequence[index + offset++];\n  let color;\n  if (colorMode === \"2\") {\n    const rgb = [sequence[index + offset++], sequence[index + offset++], sequence[index + offset]].map(x => Number.parseInt(x));\n    if (rgb.length === 3 && !rgb.some(x => Number.isNaN(x))) {\n      color = {\n        type: \"rgb\",\n        rgb\n      };\n    }\n  } else if (colorMode === \"5\") {\n    const colorIndex = Number.parseInt(sequence[index + offset]);\n    if (!Number.isNaN(colorIndex)) {\n      color = {\n        type: \"table\",\n        index: Number(colorIndex)\n      };\n    }\n  }\n  return [offset, color];\n}\nfunction parseSequence(sequence) {\n  const commands = [];\n  for (let i = 0; i < sequence.length; i++) {\n    const code = sequence[i];\n    const codeInt = Number.parseInt(code);\n    if (Number.isNaN(codeInt)) continue;\n    if (codeInt === 0) {\n      commands.push({\n        type: \"resetAll\"\n      });\n    } else if (codeInt <= 9) {\n      const decoration = decorations[codeInt];\n      if (decoration) {\n        commands.push({\n          type: \"setDecoration\",\n          value: decorations[codeInt]\n        });\n      }\n    } else if (codeInt <= 29) {\n      const decoration = decorations[codeInt - 20];\n      if (decoration) {\n        commands.push({\n          type: \"resetDecoration\",\n          value: decoration\n        });\n      }\n    } else if (codeInt <= 37) {\n      commands.push({\n        type: \"setForegroundColor\",\n        value: {\n          type: \"named\",\n          name: namedColors[codeInt - 30]\n        }\n      });\n    } else if (codeInt === 38) {\n      const [offset, color] = parseColor(sequence, i);\n      if (color) {\n        commands.push({\n          type: \"setForegroundColor\",\n          value: color\n        });\n      }\n      i += offset;\n    } else if (codeInt === 39) {\n      commands.push({\n        type: \"resetForegroundColor\"\n      });\n    } else if (codeInt <= 47) {\n      commands.push({\n        type: \"setBackgroundColor\",\n        value: {\n          type: \"named\",\n          name: namedColors[codeInt - 40]\n        }\n      });\n    } else if (codeInt === 48) {\n      const [offset, color] = parseColor(sequence, i);\n      if (color) {\n        commands.push({\n          type: \"setBackgroundColor\",\n          value: color\n        });\n      }\n      i += offset;\n    } else if (codeInt === 49) {\n      commands.push({\n        type: \"resetBackgroundColor\"\n      });\n    } else if (codeInt >= 90 && codeInt <= 97) {\n      commands.push({\n        type: \"setForegroundColor\",\n        value: {\n          type: \"named\",\n          name: namedColors[codeInt - 90 + 8]\n        }\n      });\n    } else if (codeInt >= 100 && codeInt <= 107) {\n      commands.push({\n        type: \"setBackgroundColor\",\n        value: {\n          type: \"named\",\n          name: namedColors[codeInt - 100 + 8]\n        }\n      });\n    }\n  }\n  return commands;\n}\nfunction createAnsiSequenceParser() {\n  let foreground = null;\n  let background = null;\n  let decorations2 = /* @__PURE__ */new Set();\n  return {\n    parse(value) {\n      const tokens = [];\n      let position = 0;\n      do {\n        const findResult = findSequence(value, position);\n        const text = findResult.sequence ? value.substring(position, findResult.startPosition) : value.substring(position);\n        if (text.length > 0) {\n          tokens.push({\n            value: text,\n            foreground,\n            background,\n            decorations: new Set(decorations2)\n          });\n        }\n        if (findResult.sequence) {\n          const commands = parseSequence(findResult.sequence);\n          for (const styleToken of commands) {\n            if (styleToken.type === \"resetAll\") {\n              foreground = null;\n              background = null;\n              decorations2.clear();\n            } else if (styleToken.type === \"resetForegroundColor\") {\n              foreground = null;\n            } else if (styleToken.type === \"resetBackgroundColor\") {\n              background = null;\n            } else if (styleToken.type === \"resetDecoration\") {\n              decorations2.delete(styleToken.value);\n            }\n          }\n          for (const styleToken of commands) {\n            if (styleToken.type === \"setForegroundColor\") {\n              foreground = styleToken.value;\n            } else if (styleToken.type === \"setBackgroundColor\") {\n              background = styleToken.value;\n            } else if (styleToken.type === \"setDecoration\") {\n              decorations2.add(styleToken.value);\n            }\n          }\n        }\n        position = findResult.position;\n      } while (position < value.length);\n      return tokens;\n    }\n  };\n}\n\n// src/palette.ts\nvar defaultNamedColorsMap = {\n  black: \"#000000\",\n  red: \"#bb0000\",\n  green: \"#00bb00\",\n  yellow: \"#bbbb00\",\n  blue: \"#0000bb\",\n  magenta: \"#ff00ff\",\n  cyan: \"#00bbbb\",\n  white: \"#eeeeee\",\n  brightBlack: \"#555555\",\n  brightRed: \"#ff5555\",\n  brightGreen: \"#00ff00\",\n  brightYellow: \"#ffff55\",\n  brightBlue: \"#5555ff\",\n  brightMagenta: \"#ff55ff\",\n  brightCyan: \"#55ffff\",\n  brightWhite: \"#ffffff\"\n};\nfunction createColorPalette(namedColorsMap = defaultNamedColorsMap) {\n  function namedColor(name) {\n    return namedColorsMap[name];\n  }\n  function rgbColor(rgb) {\n    return `#${rgb.map(x => Math.max(0, Math.min(x, 255)).toString(16).padStart(2, \"0\")).join(\"\")}`;\n  }\n  let colorTable;\n  function getColorTable() {\n    if (colorTable) {\n      return colorTable;\n    }\n    colorTable = [];\n    for (let i = 0; i < namedColors.length; i++) {\n      colorTable.push(namedColor(namedColors[i]));\n    }\n    let levels = [0, 95, 135, 175, 215, 255];\n    for (let r = 0; r < 6; r++) {\n      for (let g = 0; g < 6; g++) {\n        for (let b = 0; b < 6; b++) {\n          colorTable.push(rgbColor([levels[r], levels[g], levels[b]]));\n        }\n      }\n    }\n    let level = 8;\n    for (let i = 0; i < 24; i++, level += 10) {\n      colorTable.push(rgbColor([level, level, level]));\n    }\n    return colorTable;\n  }\n  function tableColor(index) {\n    return getColorTable()[index];\n  }\n  function value(color) {\n    switch (color.type) {\n      case \"named\":\n        return namedColor(color.name);\n      case \"rgb\":\n        return rgbColor(color.rgb);\n      case \"table\":\n        return tableColor(color.index);\n    }\n  }\n  return {\n    value\n  };\n}\nfunction tokenizeAnsiWithTheme(theme, fileContents, options) {\n  const colorReplacements = resolveColorReplacements(theme, options);\n  const lines = splitLines(fileContents);\n  const colorPalette = createColorPalette(Object.fromEntries(namedColors.map(name => [name, theme.colors?.[`terminal.ansi${name[0].toUpperCase()}${name.substring(1)}`]])));\n  const parser = createAnsiSequenceParser();\n  return lines.map(line => parser.parse(line[0]).map(token => {\n    let color;\n    let bgColor;\n    if (token.decorations.has('reverse')) {\n      color = token.background ? colorPalette.value(token.background) : theme.bg;\n      bgColor = token.foreground ? colorPalette.value(token.foreground) : theme.fg;\n    } else {\n      color = token.foreground ? colorPalette.value(token.foreground) : theme.fg;\n      bgColor = token.background ? colorPalette.value(token.background) : undefined;\n    }\n    color = applyColorReplacements(color, colorReplacements);\n    bgColor = applyColorReplacements(bgColor, colorReplacements);\n    if (token.decorations.has('dim')) color = dimColor(color);\n    let fontStyle = FontStyle.None;\n    if (token.decorations.has('bold')) fontStyle |= FontStyle.Bold;\n    if (token.decorations.has('italic')) fontStyle |= FontStyle.Italic;\n    if (token.decorations.has('underline')) fontStyle |= FontStyle.Underline;\n    return {\n      content: token.value,\n      offset: line[1],\n      // TODO: more accurate offset? might need to fork ansi-sequence-parser\n      color,\n      bgColor,\n      fontStyle\n    };\n  }));\n}\n/**\n * Adds 50% alpha to a hex color string or the \"-dim\" postfix to a CSS variable\n */\nfunction dimColor(color) {\n  const hexMatch = color.match(/#([0-9a-f]{3})([0-9a-f]{3})?([0-9a-f]{2})?/);\n  if (hexMatch) {\n    if (hexMatch[3]) {\n      // convert from #rrggbbaa to #rrggbb(aa/2)\n      const alpha = Math.round(Number.parseInt(hexMatch[3], 16) / 2).toString(16).padStart(2, '0');\n      return `#${hexMatch[1]}${hexMatch[2]}${alpha}`;\n    } else if (hexMatch[2]) {\n      // convert from #rrggbb to #rrggbb80\n      return `#${hexMatch[1]}${hexMatch[2]}80`;\n    } else {\n      // convert from #rgb to #rrggbb80\n      return `#${Array.from(hexMatch[1]).map(x => `${x}${x}`).join('')}80`;\n    }\n  }\n  const cssVarMatch = color.match(/var\\((--[\\w-]+-ansi-[\\w-]+)\\)/);\n  if (cssVarMatch) return `var(${cssVarMatch[1]}-dim)`;\n  return color;\n}\nclass ShikiError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = 'ShikiError';\n  }\n}\n\n/**\n * GrammarState is a special reference object that holds the state of a grammar.\n *\n * It's used to highlight code snippets that are part of the target language.\n */\nclass GrammarState {\n  _stack;\n  lang;\n  theme;\n  constructor(_stack, lang, theme) {\n    this._stack = _stack;\n    this.lang = lang;\n    this.theme = theme;\n  }\n  get scopes() {\n    return getScopes(this._stack);\n  }\n  toJSON() {\n    return {\n      lang: this.lang,\n      theme: this.theme,\n      scopes: this.scopes\n    };\n  }\n}\nfunction getScopes(stack) {\n  const scopes = [];\n  const visited = new Set();\n  function pushScope(stack) {\n    if (visited.has(stack)) return;\n    visited.add(stack);\n    const name = stack?.nameScopesList?.scopeName;\n    if (name) scopes.push(name);\n    if (stack.parent) pushScope(stack.parent);\n  }\n  pushScope(stack);\n  return scopes;\n}\nfunction getGrammarStack(state) {\n  if (!(state instanceof GrammarState)) throw new ShikiError('Invalid grammar state');\n  // @ts-expect-error _stack is private\n  return state._stack;\n}\n\n/**\n * Code to tokens, with a simple theme.\n */\nfunction codeToTokensBase(internal, code, options = {}) {\n  const {\n    lang = 'text',\n    theme: themeName = internal.getLoadedThemes()[0]\n  } = options;\n  if (isPlainLang(lang) || isNoneTheme(themeName)) return splitLines(code).map(line => [{\n    content: line[0],\n    offset: line[1]\n  }]);\n  const {\n    theme,\n    colorMap\n  } = internal.setTheme(themeName);\n  if (lang === 'ansi') return tokenizeAnsiWithTheme(theme, code, options);\n  const _grammar = internal.getLanguage(lang);\n  if (options.grammarState) {\n    if (options.grammarState.lang !== _grammar.name) {\n      throw new ShikiError(`Grammar state language \"${options.grammarState.lang}\" does not match highlight language \"${_grammar.name}\"`);\n    }\n    if (options.grammarState.theme !== themeName) {\n      throw new ShikiError(`Grammar state theme \"${options.grammarState.theme}\" does not match highlight theme \"${themeName}\"`);\n    }\n  }\n  return tokenizeWithTheme(code, _grammar, theme, colorMap, options);\n}\nfunction getLastGrammarState(internal, code, options = {}) {\n  const {\n    lang = 'text',\n    theme: themeName = internal.getLoadedThemes()[0]\n  } = options;\n  if (isPlainLang(lang) || isNoneTheme(themeName)) throw new ShikiError('Plain language does not have grammar state');\n  if (lang === 'ansi') throw new ShikiError('ANSI language does not have grammar state');\n  const {\n    theme,\n    colorMap\n  } = internal.setTheme(themeName);\n  const _grammar = internal.getLanguage(lang);\n  return new GrammarState(_tokenizeWithTheme(code, _grammar, theme, colorMap, options).stateStack, _grammar.name, theme.name);\n}\nfunction tokenizeWithTheme(code, grammar, theme, colorMap, options) {\n  return _tokenizeWithTheme(code, grammar, theme, colorMap, options).tokens;\n}\nfunction _tokenizeWithTheme(code, grammar, theme, colorMap, options) {\n  const colorReplacements = resolveColorReplacements(theme, options);\n  const {\n    tokenizeMaxLineLength = 0,\n    tokenizeTimeLimit = 500\n  } = options;\n  const lines = splitLines(code);\n  let stateStack = options.grammarState ? getGrammarStack(options.grammarState) : options.grammarContextCode != null ? _tokenizeWithTheme(options.grammarContextCode, grammar, theme, colorMap, {\n    ...options,\n    grammarState: undefined,\n    grammarContextCode: undefined\n  }).stateStack : INITIAL;\n  let actual = [];\n  const final = [];\n  const themeSettingsSelectors = [];\n  if (options.includeExplanation) {\n    for (const setting of theme.settings) {\n      let selectors;\n      switch (typeof setting.scope) {\n        case 'string':\n          selectors = setting.scope.split(/,/).map(scope => scope.trim());\n          break;\n        case 'object':\n          selectors = setting.scope;\n          break;\n        default:\n          continue;\n      }\n      themeSettingsSelectors.push({\n        settings: setting,\n        selectors: selectors.map(selector => selector.split(/ /))\n      });\n    }\n  }\n  for (let i = 0, len = lines.length; i < len; i++) {\n    const [line, lineOffset] = lines[i];\n    if (line === '') {\n      actual = [];\n      final.push([]);\n      continue;\n    }\n    // Do not attempt to tokenize if the line length is longer than the `tokenizationMaxLineLength`\n    if (tokenizeMaxLineLength > 0 && line.length >= tokenizeMaxLineLength) {\n      actual = [];\n      final.push([{\n        content: line,\n        offset: lineOffset,\n        color: '',\n        fontStyle: 0\n      }]);\n      continue;\n    }\n    let resultWithScopes;\n    let tokensWithScopes;\n    let tokensWithScopesIndex;\n    if (options.includeExplanation) {\n      resultWithScopes = grammar.tokenizeLine(line, stateStack);\n      tokensWithScopes = resultWithScopes.tokens;\n      tokensWithScopesIndex = 0;\n    }\n    const result = grammar.tokenizeLine2(line, stateStack, tokenizeTimeLimit);\n    const tokensLength = result.tokens.length / 2;\n    for (let j = 0; j < tokensLength; j++) {\n      const startIndex = result.tokens[2 * j];\n      const nextStartIndex = j + 1 < tokensLength ? result.tokens[2 * j + 2] : line.length;\n      if (startIndex === nextStartIndex) continue;\n      const metadata = result.tokens[2 * j + 1];\n      const color = applyColorReplacements(colorMap[StackElementMetadata.getForeground(metadata)], colorReplacements);\n      const fontStyle = StackElementMetadata.getFontStyle(metadata);\n      const token = {\n        content: line.substring(startIndex, nextStartIndex),\n        offset: lineOffset + startIndex,\n        color,\n        fontStyle\n      };\n      if (options.includeExplanation) {\n        token.explanation = [];\n        let offset = 0;\n        while (startIndex + offset < nextStartIndex) {\n          const tokenWithScopes = tokensWithScopes[tokensWithScopesIndex];\n          const tokenWithScopesText = line.substring(tokenWithScopes.startIndex, tokenWithScopes.endIndex);\n          offset += tokenWithScopesText.length;\n          token.explanation.push({\n            content: tokenWithScopesText,\n            scopes: explainThemeScopes(themeSettingsSelectors, tokenWithScopes.scopes)\n          });\n          tokensWithScopesIndex += 1;\n        }\n      }\n      actual.push(token);\n    }\n    final.push(actual);\n    actual = [];\n    stateStack = result.ruleStack;\n  }\n  return {\n    tokens: final,\n    stateStack\n  };\n}\nfunction explainThemeScopes(themeSelectors, scopes) {\n  const result = [];\n  for (let i = 0, len = scopes.length; i < len; i++) {\n    const parentScopes = scopes.slice(0, i);\n    const scope = scopes[i];\n    result[i] = {\n      scopeName: scope,\n      themeMatches: explainThemeScope(themeSelectors, scope, parentScopes)\n    };\n  }\n  return result;\n}\nfunction matchesOne(selector, scope) {\n  return selector === scope || scope.substring(0, selector.length) === selector && scope[selector.length] === '.';\n}\nfunction matches(selectors, scope, parentScopes) {\n  if (!matchesOne(selectors[selectors.length - 1], scope)) return false;\n  let selectorParentIndex = selectors.length - 2;\n  let parentIndex = parentScopes.length - 1;\n  while (selectorParentIndex >= 0 && parentIndex >= 0) {\n    if (matchesOne(selectors[selectorParentIndex], parentScopes[parentIndex])) selectorParentIndex -= 1;\n    parentIndex -= 1;\n  }\n  if (selectorParentIndex === -1) return true;\n  return false;\n}\nfunction explainThemeScope(themeSettingsSelectors, scope, parentScopes) {\n  const result = [];\n  for (const {\n    selectors,\n    settings\n  } of themeSettingsSelectors) {\n    for (const selectorPieces of selectors) {\n      if (matches(selectorPieces, scope, parentScopes)) {\n        result.push(settings);\n        break; // continue to the next theme settings\n      }\n    }\n  }\n  return result;\n}\n\n/**\n * Get tokens with multiple themes\n */\nfunction codeToTokensWithThemes(internal, code, options) {\n  const themes = Object.entries(options.themes).filter(i => i[1]).map(i => ({\n    color: i[0],\n    theme: i[1]\n  }));\n  const tokens = syncThemesTokenization(...themes.map(t => codeToTokensBase(internal, code, {\n    ...options,\n    theme: t.theme\n  })));\n  const mergedTokens = tokens[0].map((line, lineIdx) => line.map((_token, tokenIdx) => {\n    const mergedToken = {\n      content: _token.content,\n      variants: {},\n      offset: _token.offset\n    };\n    if ('includeExplanation' in options && options.includeExplanation) {\n      mergedToken.explanation = _token.explanation;\n    }\n    tokens.forEach((t, themeIdx) => {\n      const {\n        content: _,\n        explanation: __,\n        offset: ___,\n        ...styles\n      } = t[lineIdx][tokenIdx];\n      mergedToken.variants[themes[themeIdx].color] = styles;\n    });\n    return mergedToken;\n  }));\n  return mergedTokens;\n}\n/**\n * Break tokens from multiple themes into same tokenization.\n *\n * For example, given two themes that tokenize `console.log(\"hello\")` as:\n *\n * - `console . log (\" hello \")` (6 tokens)\n * - `console .log ( \"hello\" )` (5 tokens)\n *\n * This function will return:\n *\n * - `console . log ( \" hello \" )` (8 tokens)\n * - `console . log ( \" hello \" )` (8 tokens)\n */\nfunction syncThemesTokenization(...themes) {\n  const outThemes = themes.map(() => []);\n  const count = themes.length;\n  for (let i = 0; i < themes[0].length; i++) {\n    const lines = themes.map(t => t[i]);\n    const outLines = outThemes.map(() => []);\n    outThemes.forEach((t, i) => t.push(outLines[i]));\n    const indexes = lines.map(() => 0);\n    const current = lines.map(l => l[0]);\n    while (current.every(t => t)) {\n      const minLength = Math.min(...current.map(t => t.content.length));\n      for (let n = 0; n < count; n++) {\n        const token = current[n];\n        if (token.content.length === minLength) {\n          outLines[n].push(token);\n          indexes[n] += 1;\n          current[n] = lines[n][indexes[n]];\n        } else {\n          outLines[n].push({\n            ...token,\n            content: token.content.slice(0, minLength)\n          });\n          current[n] = {\n            ...token,\n            content: token.content.slice(minLength),\n            offset: token.offset + minLength\n          };\n        }\n      }\n    }\n  }\n  return outThemes;\n}\n\n/**\n * High-level code-to-tokens API.\n *\n * It will use `codeToTokensWithThemes` or `codeToTokensBase` based on the options.\n */\nfunction codeToTokens(internal, code, options) {\n  let bg;\n  let fg;\n  let tokens;\n  let themeName;\n  let rootStyle;\n  if ('themes' in options) {\n    const {\n      defaultColor = 'light',\n      cssVariablePrefix = '--shiki-'\n    } = options;\n    const themes = Object.entries(options.themes).filter(i => i[1]).map(i => ({\n      color: i[0],\n      theme: i[1]\n    })).sort((a, b) => a.color === defaultColor ? -1 : b.color === defaultColor ? 1 : 0);\n    if (themes.length === 0) throw new ShikiError('`themes` option must not be empty');\n    const themeTokens = codeToTokensWithThemes(internal, code, options);\n    if (defaultColor && !themes.find(t => t.color === defaultColor)) throw new ShikiError(`\\`themes\\` option must contain the defaultColor key \\`${defaultColor}\\``);\n    const themeRegs = themes.map(t => internal.getTheme(t.theme));\n    const themesOrder = themes.map(t => t.color);\n    tokens = themeTokens.map(line => line.map(token => mergeToken(token, themesOrder, cssVariablePrefix, defaultColor)));\n    const themeColorReplacements = themes.map(t => resolveColorReplacements(t.theme, options));\n    fg = themes.map((t, idx) => (idx === 0 && defaultColor ? '' : `${cssVariablePrefix + t.color}:`) + (applyColorReplacements(themeRegs[idx].fg, themeColorReplacements[idx]) || 'inherit')).join(';');\n    bg = themes.map((t, idx) => (idx === 0 && defaultColor ? '' : `${cssVariablePrefix + t.color}-bg:`) + (applyColorReplacements(themeRegs[idx].bg, themeColorReplacements[idx]) || 'inherit')).join(';');\n    themeName = `shiki-themes ${themeRegs.map(t => t.name).join(' ')}`;\n    rootStyle = defaultColor ? undefined : [fg, bg].join(';');\n  } else if ('theme' in options) {\n    const colorReplacements = resolveColorReplacements(options.theme, options.colorReplacements);\n    tokens = codeToTokensBase(internal, code, options);\n    const _theme = internal.getTheme(options.theme);\n    bg = applyColorReplacements(_theme.bg, colorReplacements);\n    fg = applyColorReplacements(_theme.fg, colorReplacements);\n    themeName = _theme.name;\n  } else {\n    throw new ShikiError('Invalid options, either `theme` or `themes` must be provided');\n  }\n  return {\n    tokens,\n    fg,\n    bg,\n    themeName,\n    rootStyle\n  };\n}\nfunction mergeToken(merged, variantsOrder, cssVariablePrefix, defaultColor) {\n  const token = {\n    content: merged.content,\n    explanation: merged.explanation,\n    offset: merged.offset\n  };\n  const styles = variantsOrder.map(t => getTokenStyleObject(merged.variants[t]));\n  // Get all style keys, for themes that missing some style, we put `inherit` to override as needed\n  const styleKeys = new Set(styles.flatMap(t => Object.keys(t)));\n  const mergedStyles = styles.reduce((acc, cur, idx) => {\n    for (const key of styleKeys) {\n      const value = cur[key] || 'inherit';\n      if (idx === 0 && defaultColor) {\n        acc[key] = value;\n      } else {\n        const keyName = key === 'color' ? '' : key === 'background-color' ? '-bg' : `-${key}`;\n        const varKey = cssVariablePrefix + variantsOrder[idx] + (key === 'color' ? '' : keyName);\n        if (acc[key]) acc[key] += `;${varKey}:${value}`;else acc[key] = `${varKey}:${value}`;\n      }\n    }\n    return acc;\n  }, {});\n  token.htmlStyle = defaultColor ? stringifyTokenStyle(mergedStyles) : Object.values(mergedStyles).join(';');\n  return token;\n}\n\n/**\n * A built-in transformer to add decorations to the highlighted code.\n */\nfunction transformerDecorations() {\n  const map = new WeakMap();\n  function getContext(shiki) {\n    if (!map.has(shiki.meta)) {\n      const converter = createPositionConverter(shiki.source);\n      function normalizePosition(p) {\n        if (typeof p === 'number') {\n          return {\n            ...converter.indexToPos(p),\n            offset: p\n          };\n        } else {\n          return {\n            ...p,\n            offset: converter.posToIndex(p.line, p.character)\n          };\n        }\n      }\n      const decorations = (shiki.options.decorations || []).map(d => ({\n        ...d,\n        start: normalizePosition(d.start),\n        end: normalizePosition(d.end)\n      }));\n      verifyIntersections(decorations);\n      map.set(shiki.meta, {\n        decorations,\n        converter,\n        source: shiki.source\n      });\n    }\n    return map.get(shiki.meta);\n  }\n  function verifyIntersections(items) {\n    for (let i = 0; i < items.length; i++) {\n      const foo = items[i];\n      if (foo.start.offset > foo.end.offset) throw new ShikiError(`Invalid decoration range: ${JSON.stringify(foo.start)} - ${JSON.stringify(foo.end)}`);\n      for (let j = i + 1; j < items.length; j++) {\n        const bar = items[j];\n        const isFooHasBarStart = foo.start.offset < bar.start.offset && bar.start.offset < foo.end.offset;\n        const isFooHasBarEnd = foo.start.offset < bar.end.offset && bar.end.offset < foo.end.offset;\n        const isBarHasFooStart = bar.start.offset < foo.start.offset && foo.start.offset < bar.end.offset;\n        const isBarHasFooEnd = bar.start.offset < foo.end.offset && foo.end.offset < bar.end.offset;\n        if (isFooHasBarStart || isFooHasBarEnd || isBarHasFooStart || isBarHasFooEnd) {\n          if (isFooHasBarEnd && isFooHasBarEnd) continue; // nested\n          if (isBarHasFooStart && isBarHasFooEnd) continue; // nested\n          throw new ShikiError(`Decorations ${JSON.stringify(foo.start)} and ${JSON.stringify(bar.start)} intersect.`);\n        }\n      }\n    }\n  }\n  return {\n    name: 'shiki:decorations',\n    tokens(tokens) {\n      if (!this.options.decorations?.length) return;\n      const ctx = getContext(this);\n      const breakpoints = ctx.decorations.flatMap(d => [d.start.offset, d.end.offset]);\n      const splitted = splitTokens(tokens, breakpoints);\n      return splitted;\n    },\n    code(codeEl) {\n      if (!this.options.decorations?.length) return;\n      const ctx = getContext(this);\n      const lines = Array.from(codeEl.children).filter(i => i.type === 'element' && i.tagName === 'span');\n      if (lines.length !== ctx.converter.lines.length) throw new ShikiError(`Number of lines in code element (${lines.length}) does not match the number of lines in the source (${ctx.converter.lines.length}). Failed to apply decorations.`);\n      function applyLineSection(line, start, end, decoration) {\n        const lineEl = lines[line];\n        let text = '';\n        let startIndex = -1;\n        let endIndex = -1;\n        function stringify(el) {\n          if (el.type === 'text') return el.value;\n          if (el.type === 'element') return el.children.map(stringify).join('');\n          return '';\n        }\n        if (start === 0) startIndex = 0;\n        if (end === 0) endIndex = 0;\n        if (end === Number.POSITIVE_INFINITY) endIndex = lineEl.children.length;\n        if (startIndex === -1 || endIndex === -1) {\n          for (let i = 0; i < lineEl.children.length; i++) {\n            text += stringify(lineEl.children[i]);\n            if (startIndex === -1 && text.length === start) startIndex = i + 1;\n            if (endIndex === -1 && text.length === end) endIndex = i + 1;\n          }\n        }\n        if (startIndex === -1) throw new ShikiError(`Failed to find start index for decoration ${JSON.stringify(decoration.start)}`);\n        if (endIndex === -1) throw new ShikiError(`Failed to find end index for decoration ${JSON.stringify(decoration.end)}`);\n        const children = lineEl.children.slice(startIndex, endIndex);\n        // Full line decoration\n        if (!decoration.alwaysWrap && children.length === lineEl.children.length) {\n          applyDecoration(lineEl, decoration, 'line');\n        }\n        // Single token decoration\n        else if (!decoration.alwaysWrap && children.length === 1 && children[0].type === 'element') {\n          applyDecoration(children[0], decoration, 'token');\n        }\n        // Create a wrapper for the decoration\n        else {\n          const wrapper = {\n            type: 'element',\n            tagName: 'span',\n            properties: {},\n            children\n          };\n          applyDecoration(wrapper, decoration, 'wrapper');\n          lineEl.children.splice(startIndex, children.length, wrapper);\n        }\n      }\n      function applyLine(line, decoration) {\n        lines[line] = applyDecoration(lines[line], decoration, 'line');\n      }\n      function applyDecoration(el, decoration, type) {\n        const properties = decoration.properties || {};\n        const transform = decoration.transform || (i => i);\n        el.tagName = decoration.tagName || 'span';\n        el.properties = {\n          ...el.properties,\n          ...properties,\n          class: el.properties.class\n        };\n        if (decoration.properties?.class) addClassToHast(el, decoration.properties.class);\n        el = transform(el, type) || el;\n        return el;\n      }\n      const lineApplies = [];\n      // Apply decorations in reverse order so the nested ones get applied first.\n      const sorted = ctx.decorations.sort((a, b) => b.start.offset - a.start.offset);\n      for (const decoration of sorted) {\n        const {\n          start,\n          end\n        } = decoration;\n        if (start.line === end.line) {\n          applyLineSection(start.line, start.character, end.character, decoration);\n        } else if (start.line < end.line) {\n          applyLineSection(start.line, start.character, Number.POSITIVE_INFINITY, decoration);\n          for (let i = start.line + 1; i < end.line; i++) lineApplies.unshift(() => applyLine(i, decoration));\n          applyLineSection(end.line, 0, end.character, decoration);\n        }\n      }\n      lineApplies.forEach(i => i());\n    }\n  };\n}\nconst builtInTransformers = [/* @__PURE__ */transformerDecorations()];\nfunction getTransformers(options) {\n  return [...(options.transformers || []), ...builtInTransformers];\n}\nfunction codeToHast(internal, code, options, transformerContext = {\n  meta: {},\n  options,\n  codeToHast: (_code, _options) => codeToHast(internal, _code, _options),\n  codeToTokens: (_code, _options) => codeToTokens(internal, _code, _options)\n}) {\n  let input = code;\n  for (const transformer of getTransformers(options)) input = transformer.preprocess?.call(transformerContext, input, options) || input;\n  let {\n    tokens,\n    fg,\n    bg,\n    themeName,\n    rootStyle\n  } = codeToTokens(internal, input, options);\n  const {\n    mergeWhitespaces = true\n  } = options;\n  if (mergeWhitespaces === true) tokens = mergeWhitespaceTokens(tokens);else if (mergeWhitespaces === 'never') tokens = splitWhitespaceTokens(tokens);\n  const contextSource = {\n    ...transformerContext,\n    get source() {\n      return input;\n    }\n  };\n  for (const transformer of getTransformers(options)) tokens = transformer.tokens?.call(contextSource, tokens) || tokens;\n  return tokensToHast(tokens, {\n    ...options,\n    fg,\n    bg,\n    themeName,\n    rootStyle\n  }, contextSource);\n}\nfunction tokensToHast(tokens, options, transformerContext) {\n  const transformers = getTransformers(options);\n  const lines = [];\n  const root = {\n    type: 'root',\n    children: []\n  };\n  const {\n    structure = 'classic'\n  } = options;\n  let preNode = {\n    type: 'element',\n    tagName: 'pre',\n    properties: {\n      class: `shiki ${options.themeName || ''}`,\n      style: options.rootStyle || `background-color:${options.bg};color:${options.fg}`,\n      tabindex: '0',\n      ...Object.fromEntries(Array.from(Object.entries(options.meta || {})).filter(([key]) => !key.startsWith('_')))\n    },\n    children: []\n  };\n  let codeNode = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: lines\n  };\n  const lineNodes = [];\n  const context = {\n    ...transformerContext,\n    structure,\n    addClassToHast,\n    get source() {\n      return transformerContext.source;\n    },\n    get tokens() {\n      return tokens;\n    },\n    get options() {\n      return options;\n    },\n    get root() {\n      return root;\n    },\n    get pre() {\n      return preNode;\n    },\n    get code() {\n      return codeNode;\n    },\n    get lines() {\n      return lineNodes;\n    }\n  };\n  tokens.forEach((line, idx) => {\n    if (idx) {\n      if (structure === 'inline') root.children.push({\n        type: 'element',\n        tagName: 'br',\n        properties: {},\n        children: []\n      });else if (structure === 'classic') lines.push({\n        type: 'text',\n        value: '\\n'\n      });\n    }\n    let lineNode = {\n      type: 'element',\n      tagName: 'span',\n      properties: {\n        class: 'line'\n      },\n      children: []\n    };\n    let col = 0;\n    for (const token of line) {\n      let tokenNode = {\n        type: 'element',\n        tagName: 'span',\n        properties: {},\n        children: [{\n          type: 'text',\n          value: token.content\n        }]\n      };\n      const style = token.htmlStyle || stringifyTokenStyle(getTokenStyleObject(token));\n      if (style) tokenNode.properties.style = style;\n      for (const transformer of transformers) tokenNode = transformer?.span?.call(context, tokenNode, idx + 1, col, lineNode) || tokenNode;\n      if (structure === 'inline') root.children.push(tokenNode);else if (structure === 'classic') lineNode.children.push(tokenNode);\n      col += token.content.length;\n    }\n    if (structure === 'classic') {\n      for (const transformer of transformers) lineNode = transformer?.line?.call(context, lineNode, idx + 1) || lineNode;\n      lineNodes.push(lineNode);\n      lines.push(lineNode);\n    }\n  });\n  if (structure === 'classic') {\n    for (const transformer of transformers) codeNode = transformer?.code?.call(context, codeNode) || codeNode;\n    preNode.children.push(codeNode);\n    for (const transformer of transformers) preNode = transformer?.pre?.call(context, preNode) || preNode;\n    root.children.push(preNode);\n  }\n  let result = root;\n  for (const transformer of transformers) result = transformer?.root?.call(context, result) || result;\n  return result;\n}\nfunction mergeWhitespaceTokens(tokens) {\n  return tokens.map(line => {\n    const newLine = [];\n    let carryOnContent = '';\n    let firstOffset = 0;\n    line.forEach((token, idx) => {\n      const isUnderline = token.fontStyle && token.fontStyle & FontStyle.Underline;\n      const couldMerge = !isUnderline;\n      if (couldMerge && token.content.match(/^\\s+$/) && line[idx + 1]) {\n        if (!firstOffset) firstOffset = token.offset;\n        carryOnContent += token.content;\n      } else {\n        if (carryOnContent) {\n          if (couldMerge) {\n            newLine.push({\n              ...token,\n              offset: firstOffset,\n              content: carryOnContent + token.content\n            });\n          } else {\n            newLine.push({\n              content: carryOnContent,\n              offset: firstOffset\n            }, token);\n          }\n          firstOffset = 0;\n          carryOnContent = '';\n        } else {\n          newLine.push(token);\n        }\n      }\n    });\n    return newLine;\n  });\n}\nfunction splitWhitespaceTokens(tokens) {\n  return tokens.map(line => {\n    return line.flatMap(token => {\n      if (token.content.match(/^\\s+$/)) return token;\n      // eslint-disable-next-line regexp/no-super-linear-backtracking\n      const match = token.content.match(/^(\\s*)(.*?)(\\s*)$/);\n      if (!match) return token;\n      const [, leading, content, trailing] = match;\n      if (!leading && !trailing) return token;\n      const expanded = [{\n        ...token,\n        offset: token.offset + leading.length,\n        content\n      }];\n      if (leading) {\n        expanded.unshift({\n          content: leading,\n          offset: token.offset\n        });\n      }\n      if (trailing) {\n        expanded.push({\n          content: trailing,\n          offset: token.offset + leading.length + content.length\n        });\n      }\n      return expanded;\n    });\n  });\n}\n\n/**\n * List of HTML void tag names.\n *\n * @type {Array<string>}\n */\nconst htmlVoidElements = ['area', 'base', 'basefont', 'bgsound', 'br', 'col', 'command', 'embed', 'frame', 'hr', 'image', 'img', 'input', 'keygen', 'link', 'meta', 'param', 'source', 'track', 'wbr'];\n\n/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nclass Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property;\n    this.normal = normal;\n    if (space) {\n      this.space = space;\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {};\n/** @type {Normal} */\nSchema.prototype.normal = {};\n/** @type {string|null} */\nSchema.prototype.space = null;\n\n/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nfunction merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {};\n  /** @type {Normal} */\n  const normal = {};\n  let index = -1;\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property);\n    Object.assign(normal, definitions[index].normal);\n  }\n  return new Schema(property, normal, space);\n}\n\n/**\n * @param {string} value\n * @returns {string}\n */\nfunction normalize(value) {\n  return value.toLowerCase();\n}\nclass Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property;\n    /** @type {string} */\n    this.attribute = attribute;\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null;\nInfo.prototype.boolean = false;\nInfo.prototype.booleanish = false;\nInfo.prototype.overloadedBoolean = false;\nInfo.prototype.number = false;\nInfo.prototype.commaSeparated = false;\nInfo.prototype.spaceSeparated = false;\nInfo.prototype.commaOrSpaceSeparated = false;\nInfo.prototype.mustUseProperty = false;\nInfo.prototype.defined = false;\nlet powers = 0;\nconst boolean = increment();\nconst booleanish = increment();\nconst overloadedBoolean = increment();\nconst number = increment();\nconst spaceSeparated = increment();\nconst commaSeparated = increment();\nconst commaOrSpaceSeparated = increment();\nfunction increment() {\n  return 2 ** ++powers;\n}\nvar types = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  boolean: boolean,\n  booleanish: booleanish,\n  commaOrSpaceSeparated: commaOrSpaceSeparated,\n  commaSeparated: commaSeparated,\n  number: number,\n  overloadedBoolean: overloadedBoolean,\n  spaceSeparated: spaceSeparated\n});\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types);\nclass DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1;\n    super(property, attribute);\n    mark(this, 'space', space);\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index];\n        mark(this, checks[index], (mask & types[check]) === types[check]);\n      }\n    }\n  }\n}\nDefinedInfo.prototype.defined = true;\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value;\n  }\n}\n\n/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nconst own$3 = {}.hasOwnProperty;\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nfunction create(definition) {\n  /** @type {Properties} */\n  const property = {};\n  /** @type {Normal} */\n  const normal = {};\n  /** @type {string} */\n  let prop;\n  for (prop in definition.properties) {\n    if (own$3.call(definition.properties, prop)) {\n      const value = definition.properties[prop];\n      const info = new DefinedInfo(prop, definition.transform(definition.attributes || {}, prop), value, definition.space);\n      if (definition.mustUseProperty && definition.mustUseProperty.includes(prop)) {\n        info.mustUseProperty = true;\n      }\n      property[prop] = info;\n      normal[normalize(prop)] = prop;\n      normal[normalize(info.attribute)] = prop;\n    }\n  }\n  return new Schema(property, normal, definition.space);\n}\nconst xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase();\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n});\nconst xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase();\n  },\n  properties: {\n    xmlLang: null,\n    xmlBase: null,\n    xmlSpace: null\n  }\n});\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nfunction caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute;\n}\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nfunction caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase());\n}\nconst xmlns = create({\n  space: 'xmlns',\n  attributes: {\n    xmlnsxlink: 'xmlns:xlink'\n  },\n  transform: caseInsensitiveTransform,\n  properties: {\n    xmlns: null,\n    xmlnsXLink: null\n  }\n});\nconst aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase();\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n});\nconst html$3 = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: null,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null,\n    // Several. Use CSS `text-align` instead,\n    aLink: null,\n    // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated,\n    // `<object>`. List of URIs to archives\n    axis: null,\n    // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null,\n    // `<body>`. Use CSS `background-image` instead\n    bgColor: null,\n    // `<body>` and table elements. Use CSS `background-color` instead\n    border: number,\n    // `<table>`. Use CSS `border-width` instead,\n    borderColor: null,\n    // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number,\n    // `<body>`\n    cellPadding: null,\n    // `<table>`\n    cellSpacing: null,\n    // `<table>`\n    char: null,\n    // Several table elements. When `align=char`, sets the character to align on\n    charOff: null,\n    // Several table elements. When `char`, offsets the alignment\n    classId: null,\n    // `<object>`\n    clear: null,\n    // `<br>`. Use CSS `clear` instead\n    code: null,\n    // `<object>`\n    codeBase: null,\n    // `<object>`\n    codeType: null,\n    // `<object>`\n    color: null,\n    // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean,\n    // Lists. Use CSS to reduce space between items instead\n    declare: boolean,\n    // `<object>`\n    event: null,\n    // `<script>`\n    face: null,\n    // `<font>`. Use CSS instead\n    frame: null,\n    // `<table>`\n    frameBorder: null,\n    // `<iframe>`. Use CSS `border` instead\n    hSpace: number,\n    // `<img>` and `<object>`\n    leftMargin: number,\n    // `<body>`\n    link: null,\n    // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null,\n    // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null,\n    // `<img>`. Use a `<picture>`\n    marginHeight: number,\n    // `<body>`\n    marginWidth: number,\n    // `<body>`\n    noResize: boolean,\n    // `<frame>`\n    noHref: boolean,\n    // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean,\n    // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean,\n    // `<td>` and `<th>`\n    object: null,\n    // `<applet>`\n    profile: null,\n    // `<head>`\n    prompt: null,\n    // `<isindex>`\n    rev: null,\n    // `<link>`\n    rightMargin: number,\n    // `<body>`\n    rules: null,\n    // `<table>`\n    scheme: null,\n    // `<meta>`\n    scrolling: booleanish,\n    // `<frame>`. Use overflow in the child context\n    standby: null,\n    // `<object>`\n    summary: null,\n    // `<table>`\n    text: null,\n    // `<body>`. Use CSS `color` instead\n    topMargin: number,\n    // `<body>`\n    valueType: null,\n    // `<param>`\n    version: null,\n    // `<html>`. Use a doctype.\n    vAlign: null,\n    // Several. Use CSS `vertical-align` instead\n    vLink: null,\n    // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number,\n    // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n});\nconst svg$1 = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null,\n    // SEMI_COLON_SEPARATED\n    keySplines: null,\n    // SEMI_COLON_SEPARATED\n    keyTimes: null,\n    // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n});\n\n/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nconst valid = /^data[-\\w.:]+$/i;\nconst dash = /-[a-z]/g;\nconst cap = /[A-Z]/g;\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nfunction find(schema, value) {\n  const normal = normalize(value);\n  let prop = value;\n  let Type = Info;\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]];\n  }\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase);\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1);\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4);\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab);\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes;\n        }\n        value = 'data' + dashes;\n      }\n    }\n    Type = DefinedInfo;\n  }\n  return new Type(prop, value);\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase();\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase();\n}\n\n/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nconst html$2 = merge([xml, xlink, xmlns, aria, html$3], 'html');\nconst svg = merge([xml, xlink, xmlns, aria, svg$1], 'svg');\n\n/**\n * @callback Handler\n *   Handle a value, with a certain ID field set to a certain value.\n *   The ID field is passed to `zwitch`, and it’s value is this function’s\n *   place on the `handlers` record.\n * @param {...any} parameters\n *   Arbitrary parameters passed to the zwitch.\n *   The first will be an object with a certain ID field set to a certain value.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback UnknownHandler\n *   Handle values that do have a certain ID field, but it’s set to a value\n *   that is not listed in the `handlers` record.\n * @param {unknown} value\n *   An object with a certain ID field set to an unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback InvalidHandler\n *   Handle values that do not have a certain ID field.\n * @param {unknown} value\n *   Any unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {void|null|undefined|never}\n *   This should crash or return nothing.\n */\n\n/**\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @typedef Options\n *   Configuration (required).\n * @property {Invalid} [invalid]\n *   Handler to use for invalid values.\n * @property {Unknown} [unknown]\n *   Handler to use for unknown values.\n * @property {Handlers} [handlers]\n *   Handlers to use.\n */\n\nconst own$2 = {}.hasOwnProperty;\n\n/**\n * Handle values based on a field.\n *\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @param {string} key\n *   Field to switch on.\n * @param {Options<Invalid, Unknown, Handlers>} [options]\n *   Configuration (required).\n * @returns {{unknown: Unknown, invalid: Invalid, handlers: Handlers, (...parameters: Parameters<Handlers[keyof Handlers]>): ReturnType<Handlers[keyof Handlers]>, (...parameters: Parameters<Unknown>): ReturnType<Unknown>}}\n */\nfunction zwitch(key, options) {\n  const settings = options || {};\n\n  /**\n   * Handle one value.\n   *\n   * Based on the bound `key`, a respective handler will be called.\n   * If `value` is not an object, or doesn’t have a `key` property, the special\n   * “invalid” handler will be called.\n   * If `value` has an unknown `key`, the special “unknown” handler will be\n   * called.\n   *\n   * All arguments, and the context object, are passed through to the handler,\n   * and it’s result is returned.\n   *\n   * @this {unknown}\n   *   Any context object.\n   * @param {unknown} [value]\n   *   Any value.\n   * @param {...unknown} parameters\n   *   Arbitrary parameters passed to the zwitch.\n   * @property {Handler} invalid\n   *   Handle for values that do not have a certain ID field.\n   * @property {Handler} unknown\n   *   Handle values that do have a certain ID field, but it’s set to a value\n   *   that is not listed in the `handlers` record.\n   * @property {Handlers} handlers\n   *   Record of handlers.\n   * @returns {unknown}\n   *   Anything.\n   */\n  function one(value, ...parameters) {\n    /** @type {Handler|undefined} */\n    let fn = one.invalid;\n    const handlers = one.handlers;\n    if (value && own$2.call(value, key)) {\n      // @ts-expect-error Indexable.\n      const id = String(value[key]);\n      // @ts-expect-error Indexable.\n      fn = own$2.call(handlers, id) ? handlers[id] : one.unknown;\n    }\n    if (fn) {\n      return fn.call(this, value, ...parameters);\n    }\n  }\n  one.handlers = settings.handlers || {};\n  one.invalid = settings.invalid;\n  one.unknown = settings.unknown;\n\n  // @ts-expect-error: matches!\n  return one;\n}\n\n/**\n * @typedef CoreOptions\n * @property {Array<string>} [subset=[]]\n *   Whether to only escape the given subset of characters.\n * @property {boolean} [escapeOnly=false]\n *   Whether to only escape possibly dangerous characters.\n *   Those characters are `\"`, `&`, `'`, `<`, `>`, and `` ` ``.\n *\n * @typedef FormatOptions\n * @property {(code: number, next: number, options: CoreWithFormatOptions) => string} format\n *   Format strategy.\n *\n * @typedef {CoreOptions & FormatOptions & import('./util/format-smart.js').FormatSmartOptions} CoreWithFormatOptions\n */\n\n/**\n * Encode certain characters in `value`.\n *\n * @param {string} value\n * @param {CoreWithFormatOptions} options\n * @returns {string}\n */\nfunction core(value, options) {\n  value = value.replace(options.subset ? charactersToExpression(options.subset) : /[\"&'<>`]/g, basic);\n  if (options.subset || options.escapeOnly) {\n    return value;\n  }\n  return value\n  // Surrogate pairs.\n  .replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, surrogate)\n  // BMP control characters (C0 except for LF, CR, SP; DEL; and some more\n  // non-ASCII ones).\n  .replace(\n  // eslint-disable-next-line no-control-regex, unicorn/no-hex-escape\n  /[\\x01-\\t\\v\\f\\x0E-\\x1F\\x7F\\x81\\x8D\\x8F\\x90\\x9D\\xA0-\\uFFFF]/g, basic);\n\n  /**\n   * @param {string} pair\n   * @param {number} index\n   * @param {string} all\n   */\n  function surrogate(pair, index, all) {\n    return options.format((pair.charCodeAt(0) - 0xd800) * 0x400 + pair.charCodeAt(1) - 0xdc00 + 0x10000, all.charCodeAt(index + 2), options);\n  }\n\n  /**\n   * @param {string} character\n   * @param {number} index\n   * @param {string} all\n   */\n  function basic(character, index, all) {\n    return options.format(character.charCodeAt(0), all.charCodeAt(index + 1), options);\n  }\n}\n\n/**\n * @param {Array<string>} subset\n * @returns {RegExp}\n */\nfunction charactersToExpression(subset) {\n  /** @type {Array<string>} */\n  const groups = [];\n  let index = -1;\n  while (++index < subset.length) {\n    groups.push(subset[index].replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&'));\n  }\n  return new RegExp('(?:' + groups.join('|') + ')', 'g');\n}\n\n/**\n * Configurable ways to encode characters as hexadecimal references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @returns {string}\n */\nfunction toHexadecimal(code, next, omit) {\n  const value = '&#x' + code.toString(16).toUpperCase();\n  return omit && next && !/[\\dA-Fa-f]/.test(String.fromCharCode(next)) ? value : value + ';';\n}\n\n/**\n * Configurable ways to encode characters as decimal references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @returns {string}\n */\nfunction toDecimal(code, next, omit) {\n  const value = '&#' + String(code);\n  return omit && next && !/\\d/.test(String.fromCharCode(next)) ? value : value + ';';\n}\n\n/**\n * List of legacy HTML named character references that don’t need a trailing semicolon.\n *\n * @type {Array<string>}\n */\nconst characterEntitiesLegacy = ['AElig', 'AMP', 'Aacute', 'Acirc', 'Agrave', 'Aring', 'Atilde', 'Auml', 'COPY', 'Ccedil', 'ETH', 'Eacute', 'Ecirc', 'Egrave', 'Euml', 'GT', 'Iacute', 'Icirc', 'Igrave', 'Iuml', 'LT', 'Ntilde', 'Oacute', 'Ocirc', 'Ograve', 'Oslash', 'Otilde', 'Ouml', 'QUOT', 'REG', 'THORN', 'Uacute', 'Ucirc', 'Ugrave', 'Uuml', 'Yacute', 'aacute', 'acirc', 'acute', 'aelig', 'agrave', 'amp', 'aring', 'atilde', 'auml', 'brvbar', 'ccedil', 'cedil', 'cent', 'copy', 'curren', 'deg', 'divide', 'eacute', 'ecirc', 'egrave', 'eth', 'euml', 'frac12', 'frac14', 'frac34', 'gt', 'iacute', 'icirc', 'iexcl', 'igrave', 'iquest', 'iuml', 'laquo', 'lt', 'macr', 'micro', 'middot', 'nbsp', 'not', 'ntilde', 'oacute', 'ocirc', 'ograve', 'ordf', 'ordm', 'oslash', 'otilde', 'ouml', 'para', 'plusmn', 'pound', 'quot', 'raquo', 'reg', 'sect', 'shy', 'sup1', 'sup2', 'sup3', 'szlig', 'thorn', 'times', 'uacute', 'ucirc', 'ugrave', 'uml', 'uuml', 'yacute', 'yen', 'yuml'];\n\n/**\n * Map of named character references from HTML 4.\n *\n * @type {Record<string, string>}\n */\nconst characterEntitiesHtml4 = {\n  nbsp: ' ',\n  iexcl: '¡',\n  cent: '¢',\n  pound: '£',\n  curren: '¤',\n  yen: '¥',\n  brvbar: '¦',\n  sect: '§',\n  uml: '¨',\n  copy: '©',\n  ordf: 'ª',\n  laquo: '«',\n  not: '¬',\n  shy: '­',\n  reg: '®',\n  macr: '¯',\n  deg: '°',\n  plusmn: '±',\n  sup2: '²',\n  sup3: '³',\n  acute: '´',\n  micro: 'µ',\n  para: '¶',\n  middot: '·',\n  cedil: '¸',\n  sup1: '¹',\n  ordm: 'º',\n  raquo: '»',\n  frac14: '¼',\n  frac12: '½',\n  frac34: '¾',\n  iquest: '¿',\n  Agrave: 'À',\n  Aacute: 'Á',\n  Acirc: 'Â',\n  Atilde: 'Ã',\n  Auml: 'Ä',\n  Aring: 'Å',\n  AElig: 'Æ',\n  Ccedil: 'Ç',\n  Egrave: 'È',\n  Eacute: 'É',\n  Ecirc: 'Ê',\n  Euml: 'Ë',\n  Igrave: 'Ì',\n  Iacute: 'Í',\n  Icirc: 'Î',\n  Iuml: 'Ï',\n  ETH: 'Ð',\n  Ntilde: 'Ñ',\n  Ograve: 'Ò',\n  Oacute: 'Ó',\n  Ocirc: 'Ô',\n  Otilde: 'Õ',\n  Ouml: 'Ö',\n  times: '×',\n  Oslash: 'Ø',\n  Ugrave: 'Ù',\n  Uacute: 'Ú',\n  Ucirc: 'Û',\n  Uuml: 'Ü',\n  Yacute: 'Ý',\n  THORN: 'Þ',\n  szlig: 'ß',\n  agrave: 'à',\n  aacute: 'á',\n  acirc: 'â',\n  atilde: 'ã',\n  auml: 'ä',\n  aring: 'å',\n  aelig: 'æ',\n  ccedil: 'ç',\n  egrave: 'è',\n  eacute: 'é',\n  ecirc: 'ê',\n  euml: 'ë',\n  igrave: 'ì',\n  iacute: 'í',\n  icirc: 'î',\n  iuml: 'ï',\n  eth: 'ð',\n  ntilde: 'ñ',\n  ograve: 'ò',\n  oacute: 'ó',\n  ocirc: 'ô',\n  otilde: 'õ',\n  ouml: 'ö',\n  divide: '÷',\n  oslash: 'ø',\n  ugrave: 'ù',\n  uacute: 'ú',\n  ucirc: 'û',\n  uuml: 'ü',\n  yacute: 'ý',\n  thorn: 'þ',\n  yuml: 'ÿ',\n  fnof: 'ƒ',\n  Alpha: 'Α',\n  Beta: 'Β',\n  Gamma: 'Γ',\n  Delta: 'Δ',\n  Epsilon: 'Ε',\n  Zeta: 'Ζ',\n  Eta: 'Η',\n  Theta: 'Θ',\n  Iota: 'Ι',\n  Kappa: 'Κ',\n  Lambda: 'Λ',\n  Mu: 'Μ',\n  Nu: 'Ν',\n  Xi: 'Ξ',\n  Omicron: 'Ο',\n  Pi: 'Π',\n  Rho: 'Ρ',\n  Sigma: 'Σ',\n  Tau: 'Τ',\n  Upsilon: 'Υ',\n  Phi: 'Φ',\n  Chi: 'Χ',\n  Psi: 'Ψ',\n  Omega: 'Ω',\n  alpha: 'α',\n  beta: 'β',\n  gamma: 'γ',\n  delta: 'δ',\n  epsilon: 'ε',\n  zeta: 'ζ',\n  eta: 'η',\n  theta: 'θ',\n  iota: 'ι',\n  kappa: 'κ',\n  lambda: 'λ',\n  mu: 'μ',\n  nu: 'ν',\n  xi: 'ξ',\n  omicron: 'ο',\n  pi: 'π',\n  rho: 'ρ',\n  sigmaf: 'ς',\n  sigma: 'σ',\n  tau: 'τ',\n  upsilon: 'υ',\n  phi: 'φ',\n  chi: 'χ',\n  psi: 'ψ',\n  omega: 'ω',\n  thetasym: 'ϑ',\n  upsih: 'ϒ',\n  piv: 'ϖ',\n  bull: '•',\n  hellip: '…',\n  prime: '′',\n  Prime: '″',\n  oline: '‾',\n  frasl: '⁄',\n  weierp: '℘',\n  image: 'ℑ',\n  real: 'ℜ',\n  trade: '™',\n  alefsym: 'ℵ',\n  larr: '←',\n  uarr: '↑',\n  rarr: '→',\n  darr: '↓',\n  harr: '↔',\n  crarr: '↵',\n  lArr: '⇐',\n  uArr: '⇑',\n  rArr: '⇒',\n  dArr: '⇓',\n  hArr: '⇔',\n  forall: '∀',\n  part: '∂',\n  exist: '∃',\n  empty: '∅',\n  nabla: '∇',\n  isin: '∈',\n  notin: '∉',\n  ni: '∋',\n  prod: '∏',\n  sum: '∑',\n  minus: '−',\n  lowast: '∗',\n  radic: '√',\n  prop: '∝',\n  infin: '∞',\n  ang: '∠',\n  and: '∧',\n  or: '∨',\n  cap: '∩',\n  cup: '∪',\n  int: '∫',\n  there4: '∴',\n  sim: '∼',\n  cong: '≅',\n  asymp: '≈',\n  ne: '≠',\n  equiv: '≡',\n  le: '≤',\n  ge: '≥',\n  sub: '⊂',\n  sup: '⊃',\n  nsub: '⊄',\n  sube: '⊆',\n  supe: '⊇',\n  oplus: '⊕',\n  otimes: '⊗',\n  perp: '⊥',\n  sdot: '⋅',\n  lceil: '⌈',\n  rceil: '⌉',\n  lfloor: '⌊',\n  rfloor: '⌋',\n  lang: '〈',\n  rang: '〉',\n  loz: '◊',\n  spades: '♠',\n  clubs: '♣',\n  hearts: '♥',\n  diams: '♦',\n  quot: '\"',\n  amp: '&',\n  lt: '<',\n  gt: '>',\n  OElig: 'Œ',\n  oelig: 'œ',\n  Scaron: 'Š',\n  scaron: 'š',\n  Yuml: 'Ÿ',\n  circ: 'ˆ',\n  tilde: '˜',\n  ensp: ' ',\n  emsp: ' ',\n  thinsp: ' ',\n  zwnj: '‌',\n  zwj: '‍',\n  lrm: '‎',\n  rlm: '‏',\n  ndash: '–',\n  mdash: '—',\n  lsquo: '‘',\n  rsquo: '’',\n  sbquo: '‚',\n  ldquo: '“',\n  rdquo: '”',\n  bdquo: '„',\n  dagger: '†',\n  Dagger: '‡',\n  permil: '‰',\n  lsaquo: '‹',\n  rsaquo: '›',\n  euro: '€'\n};\n\n/**\n * List of legacy (that don’t need a trailing `;`) named references which could,\n * depending on what follows them, turn into a different meaning\n *\n * @type {Array<string>}\n */\nconst dangerous = ['cent', 'copy', 'divide', 'gt', 'lt', 'not', 'para', 'times'];\nconst own$1 = {}.hasOwnProperty;\n\n/**\n * `characterEntitiesHtml4` but inverted.\n *\n * @type {Record<string, string>}\n */\nconst characters = {};\n\n/** @type {string} */\nlet key;\nfor (key in characterEntitiesHtml4) {\n  if (own$1.call(characterEntitiesHtml4, key)) {\n    characters[characterEntitiesHtml4[key]] = key;\n  }\n}\n\n/**\n * Configurable ways to encode characters as named references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @param {boolean|undefined} attribute\n * @returns {string}\n */\nfunction toNamed(code, next, omit, attribute) {\n  const character = String.fromCharCode(code);\n  if (own$1.call(characters, character)) {\n    const name = characters[character];\n    const value = '&' + name;\n    if (omit && characterEntitiesLegacy.includes(name) && !dangerous.includes(name) && (!attribute || next && next !== 61 /* `=` */ && /[^\\da-z]/i.test(String.fromCharCode(next)))) {\n      return value;\n    }\n    return value + ';';\n  }\n  return '';\n}\n\n/**\n * @typedef FormatSmartOptions\n * @property {boolean} [useNamedReferences=false]\n *   Prefer named character references (`&amp;`) where possible.\n * @property {boolean} [useShortestReferences=false]\n *   Prefer the shortest possible reference, if that results in less bytes.\n *   **Note**: `useNamedReferences` can be omitted when using `useShortestReferences`.\n * @property {boolean} [omitOptionalSemicolons=false]\n *   Whether to omit semicolons when possible.\n *   **Note**: This creates what HTML calls “parse errors” but is otherwise still valid HTML — don’t use this except when building a minifier.\n *   Omitting semicolons is possible for certain named and numeric references in some cases.\n * @property {boolean} [attribute=false]\n *   Create character references which don’t fail in attributes.\n *   **Note**: `attribute` only applies when operating dangerously with\n *   `omitOptionalSemicolons: true`.\n */\n\n/**\n * Configurable ways to encode a character yielding pretty or small results.\n *\n * @param {number} code\n * @param {number} next\n * @param {FormatSmartOptions} options\n * @returns {string}\n */\nfunction formatSmart(code, next, options) {\n  let numeric = toHexadecimal(code, next, options.omitOptionalSemicolons);\n  /** @type {string|undefined} */\n  let named;\n  if (options.useNamedReferences || options.useShortestReferences) {\n    named = toNamed(code, next, options.omitOptionalSemicolons, options.attribute);\n  }\n\n  // Use the shortest numeric reference when requested.\n  // A simple algorithm would use decimal for all code points under 100, as\n  // those are shorter than hexadecimal:\n  //\n  // * `&#99;` vs `&#x63;` (decimal shorter)\n  // * `&#100;` vs `&#x64;` (equal)\n  //\n  // However, because we take `next` into consideration when `omit` is used,\n  // And it would be possible that decimals are shorter on bigger values as\n  // well if `next` is hexadecimal but not decimal, we instead compare both.\n  if ((options.useShortestReferences || !named) && options.useShortestReferences) {\n    const decimal = toDecimal(code, next, options.omitOptionalSemicolons);\n    if (decimal.length < numeric.length) {\n      numeric = decimal;\n    }\n  }\n  return named && (!options.useShortestReferences || named.length < numeric.length) ? named : numeric;\n}\n\n/**\n * @typedef {import('./core.js').CoreOptions & import('./util/format-smart.js').FormatSmartOptions} Options\n * @typedef {import('./core.js').CoreOptions} LightOptions\n */\n\n/**\n * Encode special characters in `value`.\n *\n * @param {string} value\n *   Value to encode.\n * @param {Options} [options]\n *   Configuration.\n * @returns {string}\n *   Encoded value.\n */\nfunction stringifyEntities(value, options) {\n  return core(value, Object.assign({\n    format: formatSmart\n  }, options));\n}\n\n/**\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Parents} Parents\n *\n * @typedef {import('../index.js').State} State\n */\n\nconst htmlCommentRegex = /^>|^->|<!--|-->|--!>|<!-$/g;\n\n// Declare arrays as variables so it can be cached by `stringifyEntities`\nconst bogusCommentEntitySubset = ['>'];\nconst commentEntitySubset = ['<', '>'];\n\n/**\n * Serialize a comment.\n *\n * @param {Comment} node\n *   Node to handle.\n * @param {number | undefined} _1\n *   Index of `node` in `parent.\n * @param {Parents | undefined} _2\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nfunction comment(node, _1, _2, state) {\n  // See: <https://html.spec.whatwg.org/multipage/syntax.html#comments>\n  return state.settings.bogusComments ? '<?' + stringifyEntities(node.value, Object.assign({}, state.settings.characterReferences, {\n    subset: bogusCommentEntitySubset\n  })) + '>' : '<!--' + node.value.replace(htmlCommentRegex, encode) + '-->';\n\n  /**\n   * @param {string} $0\n   */\n  function encode($0) {\n    return stringifyEntities($0, Object.assign({}, state.settings.characterReferences, {\n      subset: commentEntitySubset\n    }));\n  }\n}\n\n/**\n * @typedef {import('hast').Doctype} Doctype\n * @typedef {import('hast').Parents} Parents\n *\n * @typedef {import('../index.js').State} State\n */\n\n/**\n * Serialize a doctype.\n *\n * @param {Doctype} _1\n *   Node to handle.\n * @param {number | undefined} _2\n *   Index of `node` in `parent.\n * @param {Parents | undefined} _3\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nfunction doctype(_1, _2, _3, state) {\n  return '<!' + (state.settings.upperDoctype ? 'DOCTYPE' : 'doctype') + (state.settings.tightDoctype ? '' : ' ') + 'html>';\n}\n\n/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nfunction ccount(value, character) {\n  const source = String(value);\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character');\n  }\n  let count = 0;\n  let index = source.indexOf(character);\n  while (index !== -1) {\n    count++;\n    index = source.indexOf(character, index + character.length);\n  }\n  return count;\n}\n\n/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nfunction stringify$1(values, options) {\n  const settings = options || {};\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values;\n  return input.join((settings.padRight ? ' ' : '') + ',' + (settings.padLeft === false ? '' : ' ')).trim();\n}\n\n/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nfunction stringify(values) {\n  return values.join(' ').trim();\n}\n\n/**\n * @typedef {import('hast').Nodes} Nodes\n */\n\n// HTML whitespace expression.\n// See <https://infra.spec.whatwg.org/#ascii-whitespace>.\nconst re = /[ \\t\\n\\f\\r]/g;\n\n/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {Nodes | string} thing\n *   Thing to check (`Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`); if a node is passed it must be a `Text` node,\n *   whose `value` field is checked.\n */\nfunction whitespace(thing) {\n  return typeof thing === 'object' ? thing.type === 'text' ? empty(thing.value) : false : empty(thing);\n}\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction empty(value) {\n  return value.replace(re, '') === '';\n}\n\n/**\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').RootContent} RootContent\n */\n\nconst siblingAfter = siblings(1);\nconst siblingBefore = siblings(-1);\n\n/** @type {Array<RootContent>} */\nconst emptyChildren$1 = [];\n\n/**\n * Factory to check siblings in a direction.\n *\n * @param {number} increment\n */\nfunction siblings(increment) {\n  return sibling;\n\n  /**\n   * Find applicable siblings in a direction.\n   *\n   * @template {Parents} Parent\n   *   Parent type.\n   * @param {Parent | undefined} parent\n   *   Parent.\n   * @param {number | undefined} index\n   *   Index of child in `parent`.\n   * @param {boolean | undefined} [includeWhitespace=false]\n   *   Whether to include whitespace (default: `false`).\n   * @returns {Parent extends {children: Array<infer Child>} ? Child | undefined : never}\n   *   Child of parent.\n   */\n  function sibling(parent, index, includeWhitespace) {\n    const siblings = parent ? parent.children : emptyChildren$1;\n    let offset = (index || 0) + increment;\n    let next = siblings[offset];\n    if (!includeWhitespace) {\n      while (next && whitespace(next)) {\n        offset += increment;\n        next = siblings[offset];\n      }\n    }\n\n    // @ts-expect-error: it’s a correct child.\n    return next;\n  }\n}\n\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Parents} Parents\n */\n\n/**\n * @callback OmitHandle\n *   Check if a tag can be omitted.\n * @param {Element} element\n *   Element to check.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether to omit a tag.\n *\n */\n\nconst own = {}.hasOwnProperty;\n\n/**\n * Factory to check if a given node can have a tag omitted.\n *\n * @param {Record<string, OmitHandle>} handlers\n *   Omission handlers, where each key is a tag name, and each value is the\n *   corresponding handler.\n * @returns {OmitHandle}\n *   Whether to omit a tag of an element.\n */\nfunction omission(handlers) {\n  return omit;\n\n  /**\n   * Check if a given node can have a tag omitted.\n   *\n   * @type {OmitHandle}\n   */\n  function omit(node, index, parent) {\n    return own.call(handlers, node.tagName) && handlers[node.tagName](node, index, parent);\n  }\n}\n\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Parents} Parents\n */\n\nconst closing = omission({\n  body: body$1,\n  caption: headOrColgroupOrCaption,\n  colgroup: headOrColgroupOrCaption,\n  dd,\n  dt,\n  head: headOrColgroupOrCaption,\n  html: html$1,\n  li,\n  optgroup,\n  option,\n  p,\n  rp: rubyElement,\n  rt: rubyElement,\n  tbody: tbody$1,\n  td: cells,\n  tfoot,\n  th: cells,\n  thead,\n  tr\n});\n\n/**\n * Macro for `</head>`, `</colgroup>`, and `</caption>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction headOrColgroupOrCaption(_, index, parent) {\n  const next = siblingAfter(parent, index, true);\n  return !next || next.type !== 'comment' && !(next.type === 'text' && whitespace(next.value.charAt(0)));\n}\n\n/**\n * Whether to omit `</html>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction html$1(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return !next || next.type !== 'comment';\n}\n\n/**\n * Whether to omit `</body>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction body$1(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return !next || next.type !== 'comment';\n}\n\n/**\n * Whether to omit `</p>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction p(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return next ? next.type === 'element' && (next.tagName === 'address' || next.tagName === 'article' || next.tagName === 'aside' || next.tagName === 'blockquote' || next.tagName === 'details' || next.tagName === 'div' || next.tagName === 'dl' || next.tagName === 'fieldset' || next.tagName === 'figcaption' || next.tagName === 'figure' || next.tagName === 'footer' || next.tagName === 'form' || next.tagName === 'h1' || next.tagName === 'h2' || next.tagName === 'h3' || next.tagName === 'h4' || next.tagName === 'h5' || next.tagName === 'h6' || next.tagName === 'header' || next.tagName === 'hgroup' || next.tagName === 'hr' || next.tagName === 'main' || next.tagName === 'menu' || next.tagName === 'nav' || next.tagName === 'ol' || next.tagName === 'p' || next.tagName === 'pre' || next.tagName === 'section' || next.tagName === 'table' || next.tagName === 'ul') : !parent ||\n  // Confusing parent.\n  !(parent.type === 'element' && (parent.tagName === 'a' || parent.tagName === 'audio' || parent.tagName === 'del' || parent.tagName === 'ins' || parent.tagName === 'map' || parent.tagName === 'noscript' || parent.tagName === 'video'));\n}\n\n/**\n * Whether to omit `</li>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction li(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return !next || next.type === 'element' && next.tagName === 'li';\n}\n\n/**\n * Whether to omit `</dt>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction dt(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return Boolean(next && next.type === 'element' && (next.tagName === 'dt' || next.tagName === 'dd'));\n}\n\n/**\n * Whether to omit `</dd>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction dd(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return !next || next.type === 'element' && (next.tagName === 'dt' || next.tagName === 'dd');\n}\n\n/**\n * Whether to omit `</rt>` or `</rp>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction rubyElement(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return !next || next.type === 'element' && (next.tagName === 'rp' || next.tagName === 'rt');\n}\n\n/**\n * Whether to omit `</optgroup>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction optgroup(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return !next || next.type === 'element' && next.tagName === 'optgroup';\n}\n\n/**\n * Whether to omit `</option>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction option(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return !next || next.type === 'element' && (next.tagName === 'option' || next.tagName === 'optgroup');\n}\n\n/**\n * Whether to omit `</thead>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction thead(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return Boolean(next && next.type === 'element' && (next.tagName === 'tbody' || next.tagName === 'tfoot'));\n}\n\n/**\n * Whether to omit `</tbody>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tbody$1(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return !next || next.type === 'element' && (next.tagName === 'tbody' || next.tagName === 'tfoot');\n}\n\n/**\n * Whether to omit `</tfoot>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tfoot(_, index, parent) {\n  return !siblingAfter(parent, index);\n}\n\n/**\n * Whether to omit `</tr>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tr(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return !next || next.type === 'element' && next.tagName === 'tr';\n}\n\n/**\n * Whether to omit `</td>` or `</th>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction cells(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return !next || next.type === 'element' && (next.tagName === 'td' || next.tagName === 'th');\n}\n\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Parents} Parents\n */\n\nconst opening = omission({\n  body,\n  colgroup,\n  head,\n  html,\n  tbody\n});\n\n/**\n * Whether to omit `<html>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction html(node) {\n  const head = siblingAfter(node, -1);\n  return !head || head.type !== 'comment';\n}\n\n/**\n * Whether to omit `<head>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction head(node) {\n  const children = node.children;\n  /** @type {Array<string>} */\n  const seen = [];\n  let index = -1;\n  while (++index < children.length) {\n    const child = children[index];\n    if (child.type === 'element' && (child.tagName === 'title' || child.tagName === 'base')) {\n      if (seen.includes(child.tagName)) return false;\n      seen.push(child.tagName);\n    }\n  }\n  return children.length > 0;\n}\n\n/**\n * Whether to omit `<body>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction body(node) {\n  const head = siblingAfter(node, -1, true);\n  return !head || head.type !== 'comment' && !(head.type === 'text' && whitespace(head.value.charAt(0))) && !(head.type === 'element' && (head.tagName === 'meta' || head.tagName === 'link' || head.tagName === 'script' || head.tagName === 'style' || head.tagName === 'template'));\n}\n\n/**\n * Whether to omit `<colgroup>`.\n * The spec describes some logic for the opening tag, but it’s easier to\n * implement in the closing tag, to the same effect, so we handle it there\n * instead.\n *\n * @param {Element} node\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction colgroup(node, index, parent) {\n  const previous = siblingBefore(parent, index);\n  const head = siblingAfter(node, -1, true);\n\n  // Previous colgroup was already omitted.\n  if (parent && previous && previous.type === 'element' && previous.tagName === 'colgroup' && closing(previous, parent.children.indexOf(previous), parent)) {\n    return false;\n  }\n  return Boolean(head && head.type === 'element' && head.tagName === 'col');\n}\n\n/**\n * Whether to omit `<tbody>`.\n *\n * @param {Element} node\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction tbody(node, index, parent) {\n  const previous = siblingBefore(parent, index);\n  const head = siblingAfter(node, -1);\n\n  // Previous table section was already omitted.\n  if (parent && previous && previous.type === 'element' && (previous.tagName === 'thead' || previous.tagName === 'tbody') && closing(previous, parent.children.indexOf(previous), parent)) {\n    return false;\n  }\n  return Boolean(head && head.type === 'element' && head.tagName === 'tr');\n}\n\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Properties} Properties\n *\n * @typedef {import('../index.js').State} State\n */\n\n/**\n * Maps of subsets.\n *\n * Each value is a matrix of tuples.\n * The value at `0` causes parse errors, the value at `1` is valid.\n * Of both, the value at `0` is unsafe, and the value at `1` is safe.\n *\n * @type {Record<'double' | 'name' | 'single' | 'unquoted', Array<[Array<string>, Array<string>]>>}\n */\nconst constants = {\n  // See: <https://html.spec.whatwg.org/#attribute-name-state>.\n  name: [['\\t\\n\\f\\r &/=>'.split(''), '\\t\\n\\f\\r \"&\\'/=>`'.split('')], ['\\0\\t\\n\\f\\r \"&\\'/<=>'.split(''), '\\0\\t\\n\\f\\r \"&\\'/<=>`'.split('')]],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(unquoted)-state>.\n  unquoted: [['\\t\\n\\f\\r &>'.split(''), '\\0\\t\\n\\f\\r \"&\\'<=>`'.split('')], ['\\0\\t\\n\\f\\r \"&\\'<=>`'.split(''), '\\0\\t\\n\\f\\r \"&\\'<=>`'.split('')]],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(single-quoted)-state>.\n  single: [[\"&'\".split(''), '\"&\\'`'.split('')], [\"\\0&'\".split(''), '\\0\"&\\'`'.split('')]],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(double-quoted)-state>.\n  double: [['\"&'.split(''), '\"&\\'`'.split('')], ['\\0\"&'.split(''), '\\0\"&\\'`'.split('')]]\n};\n\n/**\n * Serialize an element node.\n *\n * @param {Element} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nfunction element(node, index, parent, state) {\n  const schema = state.schema;\n  const omit = schema.space === 'svg' ? false : state.settings.omitOptionalTags;\n  let selfClosing = schema.space === 'svg' ? state.settings.closeEmptyElements : state.settings.voids.includes(node.tagName.toLowerCase());\n  /** @type {Array<string>} */\n  const parts = [];\n  /** @type {string} */\n  let last;\n  if (schema.space === 'html' && node.tagName === 'svg') {\n    state.schema = svg;\n  }\n  const attributes = serializeAttributes(state, node.properties);\n  const content = state.all(schema.space === 'html' && node.tagName === 'template' ? node.content : node);\n  state.schema = schema;\n\n  // If the node is categorised as void, but it has children, remove the\n  // categorisation.\n  // This enables for example `menuitem`s, which are void in W3C HTML but not\n  // void in WHATWG HTML, to be stringified properly.\n  // Note: `menuitem` has since been removed from the HTML spec, and so is no\n  // longer void.\n  if (content) selfClosing = false;\n  if (attributes || !omit || !opening(node, index, parent)) {\n    parts.push('<', node.tagName, attributes ? ' ' + attributes : '');\n    if (selfClosing && (schema.space === 'svg' || state.settings.closeSelfClosing)) {\n      last = attributes.charAt(attributes.length - 1);\n      if (!state.settings.tightSelfClosing || last === '/' || last && last !== '\"' && last !== \"'\") {\n        parts.push(' ');\n      }\n      parts.push('/');\n    }\n    parts.push('>');\n  }\n  parts.push(content);\n  if (!selfClosing && (!omit || !closing(node, index, parent))) {\n    parts.push('</' + node.tagName + '>');\n  }\n  return parts.join('');\n}\n\n/**\n * @param {State} state\n * @param {Properties | null | undefined} properties\n * @returns {string}\n */\nfunction serializeAttributes(state, properties) {\n  /** @type {Array<string>} */\n  const values = [];\n  let index = -1;\n  /** @type {string} */\n  let key;\n  if (properties) {\n    for (key in properties) {\n      if (properties[key] !== null && properties[key] !== undefined) {\n        const value = serializeAttribute(state, key, properties[key]);\n        if (value) values.push(value);\n      }\n    }\n  }\n  while (++index < values.length) {\n    const last = state.settings.tightAttributes ? values[index].charAt(values[index].length - 1) : undefined;\n\n    // In tight mode, don’t add a space after quoted attributes.\n    if (index !== values.length - 1 && last !== '\"' && last !== \"'\") {\n      values[index] += ' ';\n    }\n  }\n  return values.join('');\n}\n\n/**\n * @param {State} state\n * @param {string} key\n * @param {Properties[keyof Properties]} value\n * @returns {string}\n */\nfunction serializeAttribute(state, key, value) {\n  const info = find(state.schema, key);\n  const x = state.settings.allowParseErrors && state.schema.space === 'html' ? 0 : 1;\n  const y = state.settings.allowDangerousCharacters ? 0 : 1;\n  let quote = state.quote;\n  /** @type {string | undefined} */\n  let result;\n  if (info.overloadedBoolean && (value === info.attribute || value === '')) {\n    value = true;\n  } else if (info.boolean || info.overloadedBoolean && typeof value !== 'string') {\n    value = Boolean(value);\n  }\n  if (value === null || value === undefined || value === false || typeof value === 'number' && Number.isNaN(value)) {\n    return '';\n  }\n  const name = stringifyEntities(info.attribute, Object.assign({}, state.settings.characterReferences, {\n    // Always encode without parse errors in non-HTML.\n    subset: constants.name[x][y]\n  }));\n\n  // No value.\n  // There is currently only one boolean property in SVG: `[download]` on\n  // `<a>`.\n  // This property does not seem to work in browsers (Firefox, Safari, Chrome),\n  // so I can’t test if dropping the value works.\n  // But I assume that it should:\n  //\n  // ```html\n  // <!doctype html>\n  // <svg viewBox=\"0 0 100 100\">\n  //   <a href=https://example.com download>\n  //     <circle cx=50 cy=40 r=35 />\n  //   </a>\n  // </svg>\n  // ```\n  //\n  // See: <https://github.com/wooorm/property-information/blob/main/lib/svg.js>\n  if (value === true) return name;\n\n  // `spaces` doesn’t accept a second argument, but it’s given here just to\n  // keep the code cleaner.\n  value = Array.isArray(value) ? (info.commaSeparated ? stringify$1 : stringify)(value, {\n    padLeft: !state.settings.tightCommaSeparatedLists\n  }) : String(value);\n  if (state.settings.collapseEmptyAttributes && !value) return name;\n\n  // Check unquoted value.\n  if (state.settings.preferUnquoted) {\n    result = stringifyEntities(value, Object.assign({}, state.settings.characterReferences, {\n      attribute: true,\n      subset: constants.unquoted[x][y]\n    }));\n  }\n\n  // If we don’t want unquoted, or if `value` contains character references when\n  // unquoted…\n  if (result !== value) {\n    // If the alternative is less common than `quote`, switch.\n    if (state.settings.quoteSmart && ccount(value, quote) > ccount(value, state.alternative)) {\n      quote = state.alternative;\n    }\n    result = quote + stringifyEntities(value, Object.assign({}, state.settings.characterReferences, {\n      // Always encode without parse errors in non-HTML.\n      subset: (quote === \"'\" ? constants.single : constants.double)[x][y],\n      attribute: true\n    })) + quote;\n  }\n\n  // Don’t add a `=` for unquoted empties.\n  return name + (result ? '=' + result : result);\n}\n\n/**\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('mdast-util-to-hast').Raw} Raw\n *\n * @typedef {import('../index.js').State} State\n */\n\n// Declare array as variable so it can be cached by `stringifyEntities`\nconst textEntitySubset = ['<', '&'];\n\n/**\n * Serialize a text node.\n *\n * @param {Raw | Text} node\n *   Node to handle.\n * @param {number | undefined} _\n *   Index of `node` in `parent.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nfunction text(node, _, parent, state) {\n  // Check if content of `node` should be escaped.\n  return parent && parent.type === 'element' && (parent.tagName === 'script' || parent.tagName === 'style') ? node.value : stringifyEntities(node.value, Object.assign({}, state.settings.characterReferences, {\n    subset: textEntitySubset\n  }));\n}\n\n/**\n * @typedef {import('hast').Parents} Parents\n *\n * @typedef {import('mdast-util-to-hast').Raw} Raw\n *\n * @typedef {import('../index.js').State} State\n */\n\n/**\n * Serialize a raw node.\n *\n * @param {Raw} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nfunction raw(node, index, parent, state) {\n  return state.settings.allowDangerousHtml ? node.value : text(node, index, parent, state);\n}\n\n/**\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Root} Root\n *\n * @typedef {import('../index.js').State} State\n */\n\n/**\n * Serialize a root.\n *\n * @param {Root} node\n *   Node to handle.\n * @param {number | undefined} _1\n *   Index of `node` in `parent.\n * @param {Parents | undefined} _2\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nfunction root(node, _1, _2, state) {\n  return state.all(node);\n}\n\n/**\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n *\n * @typedef {import('../index.js').State} State\n */\n\n/**\n * @type {(node: Nodes, index: number | undefined, parent: Parents | undefined, state: State) => string}\n */\nconst handle = zwitch('type', {\n  invalid,\n  unknown,\n  handlers: {\n    comment,\n    doctype,\n    element,\n    raw,\n    root,\n    text\n  }\n});\n\n/**\n * Fail when a non-node is found in the tree.\n *\n * @param {unknown} node\n *   Unknown value.\n * @returns {never}\n *   Never.\n */\nfunction invalid(node) {\n  throw new Error('Expected node, not `' + node + '`');\n}\n\n/**\n * Fail when a node with an unknown type is found in the tree.\n *\n * @param {unknown} node_\n *  Unknown node.\n * @returns {never}\n *   Never.\n */\nfunction unknown(node_) {\n  // `type` is guaranteed by runtime JS.\n  const node = /** @type {Nodes} */node_;\n  throw new Error('Cannot compile unknown node `' + node.type + '`');\n}\n\n/**\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').RootContent} RootContent\n *\n * @typedef {import('property-information').Schema} Schema\n *\n * @typedef {import('stringify-entities').Options} StringifyEntitiesOptions\n */\n\n/** @type {Options} */\nconst emptyOptions = {};\n\n/** @type {CharacterReferences} */\nconst emptyCharacterReferences = {};\n\n/** @type {Array<never>} */\nconst emptyChildren = [];\n\n/**\n * Serialize hast as HTML.\n *\n * @param {Array<RootContent> | Nodes} tree\n *   Tree to serialize.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized HTML.\n */\nfunction toHtml(tree, options) {\n  const options_ = options || emptyOptions;\n  const quote = options_.quote || '\"';\n  const alternative = quote === '\"' ? \"'\" : '\"';\n  if (quote !== '\"' && quote !== \"'\") {\n    throw new Error('Invalid quote `' + quote + '`, expected `\\'` or `\"`');\n  }\n\n  /** @type {State} */\n  const state = {\n    one,\n    all,\n    settings: {\n      omitOptionalTags: options_.omitOptionalTags || false,\n      allowParseErrors: options_.allowParseErrors || false,\n      allowDangerousCharacters: options_.allowDangerousCharacters || false,\n      quoteSmart: options_.quoteSmart || false,\n      preferUnquoted: options_.preferUnquoted || false,\n      tightAttributes: options_.tightAttributes || false,\n      upperDoctype: options_.upperDoctype || false,\n      tightDoctype: options_.tightDoctype || false,\n      bogusComments: options_.bogusComments || false,\n      tightCommaSeparatedLists: options_.tightCommaSeparatedLists || false,\n      tightSelfClosing: options_.tightSelfClosing || false,\n      collapseEmptyAttributes: options_.collapseEmptyAttributes || false,\n      allowDangerousHtml: options_.allowDangerousHtml || false,\n      voids: options_.voids || htmlVoidElements,\n      characterReferences: options_.characterReferences || emptyCharacterReferences,\n      closeSelfClosing: options_.closeSelfClosing || false,\n      closeEmptyElements: options_.closeEmptyElements || false\n    },\n    schema: options_.space === 'svg' ? svg : html$2,\n    quote,\n    alternative\n  };\n  return state.one(Array.isArray(tree) ? {\n    type: 'root',\n    children: tree\n  } : tree, undefined, undefined);\n}\n\n/**\n * Serialize a node.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {Nodes} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(node, index, parent) {\n  return handle(node, index, parent, this);\n}\n\n/**\n * Serialize all children of `parent`.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {Parents | undefined} parent\n *   Parent whose children to serialize.\n * @returns {string}\n */\nfunction all(parent) {\n  /** @type {Array<string>} */\n  const results = [];\n  const children = parent && parent.children || emptyChildren;\n  let index = -1;\n  while (++index < children.length) {\n    results[index] = this.one(children[index], index, parent);\n  }\n  return results.join('');\n}\n\n/**\n * Get highlighted code in HTML.\n */\nfunction codeToHtml(internal, code, options) {\n  const context = {\n    meta: {},\n    options,\n    codeToHast: (_code, _options) => codeToHast(internal, _code, _options),\n    codeToTokens: (_code, _options) => codeToTokens(internal, _code, _options)\n  };\n  let result = toHtml(codeToHast(internal, code, options, context));\n  for (const transformer of getTransformers(options)) result = transformer.postprocess?.call(context, result, options) || result;\n  return result;\n}\nasync function main(init) {\n  let wasmMemory;\n  let buffer;\n  const binding = {};\n  function updateGlobalBufferAndViews(buf) {\n    buffer = buf;\n    binding.HEAPU8 = new Uint8Array(buf);\n    binding.HEAPU32 = new Uint32Array(buf);\n  }\n  function _emscripten_get_now() {\n    return typeof performance !== 'undefined' ? performance.now() : Date.now();\n  }\n  function _emscripten_memcpy_big(dest, src, num) {\n    binding.HEAPU8.copyWithin(dest, src, src + num);\n  }\n  function getHeapMax() {\n    return 2147483648;\n  }\n  function emscripten_realloc_buffer(size) {\n    try {\n      wasmMemory.grow(size - buffer.byteLength + 65535 >>> 16);\n      updateGlobalBufferAndViews(wasmMemory.buffer);\n      return 1;\n    } catch {}\n  }\n  function _emscripten_resize_heap(requestedSize) {\n    const oldSize = binding.HEAPU8.length;\n    requestedSize = requestedSize >>> 0;\n    const maxHeapSize = getHeapMax();\n    if (requestedSize > maxHeapSize) return false;\n    const alignUp = (x, multiple) => x + (multiple - x % multiple) % multiple;\n    for (let cutDown = 1; cutDown <= 4; cutDown *= 2) {\n      let overGrownHeapSize = oldSize * (1 + 0.2 / cutDown);\n      overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);\n      const newSize = Math.min(maxHeapSize, alignUp(Math.max(requestedSize, overGrownHeapSize), 65536));\n      const replacement = emscripten_realloc_buffer(newSize);\n      if (replacement) return true;\n    }\n    return false;\n  }\n  const UTF8Decoder = typeof TextDecoder != 'undefined' ? new TextDecoder('utf8') : undefined;\n  function UTF8ArrayToString(heapOrArray, idx, maxBytesToRead = 1024) {\n    const endIdx = idx + maxBytesToRead;\n    let endPtr = idx;\n    while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n    if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\n      return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\n    }\n    let str = '';\n    while (idx < endPtr) {\n      let u0 = heapOrArray[idx++];\n      if (!(u0 & 128)) {\n        str += String.fromCharCode(u0);\n        continue;\n      }\n      const u1 = heapOrArray[idx++] & 63;\n      if ((u0 & 224) === 192) {\n        str += String.fromCharCode((u0 & 31) << 6 | u1);\n        continue;\n      }\n      const u2 = heapOrArray[idx++] & 63;\n      if ((u0 & 240) === 224) {\n        u0 = (u0 & 15) << 12 | u1 << 6 | u2;\n      } else {\n        u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | heapOrArray[idx++] & 63;\n      }\n      if (u0 < 65536) {\n        str += String.fromCharCode(u0);\n      } else {\n        const ch = u0 - 65536;\n        str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n      }\n    }\n    return str;\n  }\n  function UTF8ToString(ptr, maxBytesToRead) {\n    return ptr ? UTF8ArrayToString(binding.HEAPU8, ptr, maxBytesToRead) : '';\n  }\n  const asmLibraryArg = {\n    emscripten_get_now: _emscripten_get_now,\n    emscripten_memcpy_big: _emscripten_memcpy_big,\n    emscripten_resize_heap: _emscripten_resize_heap,\n    fd_write: () => 0\n  };\n  async function createWasm() {\n    const info = {\n      env: asmLibraryArg,\n      wasi_snapshot_preview1: asmLibraryArg\n    };\n    const exports = await init(info);\n    wasmMemory = exports.memory;\n    updateGlobalBufferAndViews(wasmMemory.buffer);\n    Object.assign(binding, exports);\n    binding.UTF8ToString = UTF8ToString;\n  }\n  await createWasm();\n  return binding;\n}\n\n/* ---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *-------------------------------------------------------- */\nlet onigBinding = null;\nlet defaultDebugCall = false;\nfunction throwLastOnigError(onigBinding) {\n  throw new ShikiError(onigBinding.UTF8ToString(onigBinding.getLastOnigError()));\n}\nclass UtfString {\n  static _utf8ByteLength(str) {\n    let result = 0;\n    for (let i = 0, len = str.length; i < len; i++) {\n      const charCode = str.charCodeAt(i);\n      let codepoint = charCode;\n      let wasSurrogatePair = false;\n      if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n        // Hit a high surrogate, try to look for a matching low surrogate\n        if (i + 1 < len) {\n          const nextCharCode = str.charCodeAt(i + 1);\n          if (nextCharCode >= 0xDC00 && nextCharCode <= 0xDFFF) {\n            // Found the matching low surrogate\n            codepoint = (charCode - 0xD800 << 10) + 0x10000 | nextCharCode - 0xDC00;\n            wasSurrogatePair = true;\n          }\n        }\n      }\n      if (codepoint <= 0x7F) result += 1;else if (codepoint <= 0x7FF) result += 2;else if (codepoint <= 0xFFFF) result += 3;else result += 4;\n      if (wasSurrogatePair) i++;\n    }\n    return result;\n  }\n  utf16Length;\n  utf8Length;\n  utf16Value;\n  utf8Value;\n  utf16OffsetToUtf8;\n  utf8OffsetToUtf16;\n  constructor(str) {\n    const utf16Length = str.length;\n    const utf8Length = UtfString._utf8ByteLength(str);\n    const computeIndicesMapping = utf8Length !== utf16Length;\n    const utf16OffsetToUtf8 = computeIndicesMapping ? new Uint32Array(utf16Length + 1) : null;\n    if (computeIndicesMapping) utf16OffsetToUtf8[utf16Length] = utf8Length;\n    const utf8OffsetToUtf16 = computeIndicesMapping ? new Uint32Array(utf8Length + 1) : null;\n    if (computeIndicesMapping) utf8OffsetToUtf16[utf8Length] = utf16Length;\n    const utf8Value = new Uint8Array(utf8Length);\n    let i8 = 0;\n    for (let i16 = 0; i16 < utf16Length; i16++) {\n      const charCode = str.charCodeAt(i16);\n      let codePoint = charCode;\n      let wasSurrogatePair = false;\n      if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n        // Hit a high surrogate, try to look for a matching low surrogate\n        if (i16 + 1 < utf16Length) {\n          const nextCharCode = str.charCodeAt(i16 + 1);\n          if (nextCharCode >= 0xDC00 && nextCharCode <= 0xDFFF) {\n            // Found the matching low surrogate\n            codePoint = (charCode - 0xD800 << 10) + 0x10000 | nextCharCode - 0xDC00;\n            wasSurrogatePair = true;\n          }\n        }\n      }\n      if (computeIndicesMapping) {\n        utf16OffsetToUtf8[i16] = i8;\n        if (wasSurrogatePair) utf16OffsetToUtf8[i16 + 1] = i8;\n        if (codePoint <= 0x7F) {\n          utf8OffsetToUtf16[i8 + 0] = i16;\n        } else if (codePoint <= 0x7FF) {\n          utf8OffsetToUtf16[i8 + 0] = i16;\n          utf8OffsetToUtf16[i8 + 1] = i16;\n        } else if (codePoint <= 0xFFFF) {\n          utf8OffsetToUtf16[i8 + 0] = i16;\n          utf8OffsetToUtf16[i8 + 1] = i16;\n          utf8OffsetToUtf16[i8 + 2] = i16;\n        } else {\n          utf8OffsetToUtf16[i8 + 0] = i16;\n          utf8OffsetToUtf16[i8 + 1] = i16;\n          utf8OffsetToUtf16[i8 + 2] = i16;\n          utf8OffsetToUtf16[i8 + 3] = i16;\n        }\n      }\n      if (codePoint <= 0x7F) {\n        utf8Value[i8++] = codePoint;\n      } else if (codePoint <= 0x7FF) {\n        utf8Value[i8++] = 0b11000000 | (codePoint & 0b00000000000000000000011111000000) >>> 6;\n        utf8Value[i8++] = 0b10000000 | (codePoint & 0b00000000000000000000000000111111) >>> 0;\n      } else if (codePoint <= 0xFFFF) {\n        utf8Value[i8++] = 0b11100000 | (codePoint & 0b00000000000000001111000000000000) >>> 12;\n        utf8Value[i8++] = 0b10000000 | (codePoint & 0b00000000000000000000111111000000) >>> 6;\n        utf8Value[i8++] = 0b10000000 | (codePoint & 0b00000000000000000000000000111111) >>> 0;\n      } else {\n        utf8Value[i8++] = 0b11110000 | (codePoint & 0b00000000000111000000000000000000) >>> 18;\n        utf8Value[i8++] = 0b10000000 | (codePoint & 0b00000000000000111111000000000000) >>> 12;\n        utf8Value[i8++] = 0b10000000 | (codePoint & 0b00000000000000000000111111000000) >>> 6;\n        utf8Value[i8++] = 0b10000000 | (codePoint & 0b00000000000000000000000000111111) >>> 0;\n      }\n      if (wasSurrogatePair) i16++;\n    }\n    this.utf16Length = utf16Length;\n    this.utf8Length = utf8Length;\n    this.utf16Value = str;\n    this.utf8Value = utf8Value;\n    this.utf16OffsetToUtf8 = utf16OffsetToUtf8;\n    this.utf8OffsetToUtf16 = utf8OffsetToUtf16;\n  }\n  createString(onigBinding) {\n    const result = onigBinding.omalloc(this.utf8Length);\n    onigBinding.HEAPU8.set(this.utf8Value, result);\n    return result;\n  }\n}\nclass OnigString {\n  static LAST_ID = 0;\n  static _sharedPtr = 0; // a pointer to a string of 10000 bytes\n  static _sharedPtrInUse = false;\n  id = ++OnigString.LAST_ID;\n  _onigBinding;\n  content;\n  utf16Length;\n  utf8Length;\n  utf16OffsetToUtf8;\n  utf8OffsetToUtf16;\n  ptr;\n  constructor(str) {\n    if (!onigBinding) throw new ShikiError('Must invoke loadWasm first.');\n    this._onigBinding = onigBinding;\n    this.content = str;\n    const utfString = new UtfString(str);\n    this.utf16Length = utfString.utf16Length;\n    this.utf8Length = utfString.utf8Length;\n    this.utf16OffsetToUtf8 = utfString.utf16OffsetToUtf8;\n    this.utf8OffsetToUtf16 = utfString.utf8OffsetToUtf16;\n    if (this.utf8Length < 10000 && !OnigString._sharedPtrInUse) {\n      if (!OnigString._sharedPtr) OnigString._sharedPtr = onigBinding.omalloc(10000);\n      OnigString._sharedPtrInUse = true;\n      onigBinding.HEAPU8.set(utfString.utf8Value, OnigString._sharedPtr);\n      this.ptr = OnigString._sharedPtr;\n    } else {\n      this.ptr = utfString.createString(onigBinding);\n    }\n  }\n  convertUtf8OffsetToUtf16(utf8Offset) {\n    if (this.utf8OffsetToUtf16) {\n      if (utf8Offset < 0) return 0;\n      if (utf8Offset > this.utf8Length) return this.utf16Length;\n      return this.utf8OffsetToUtf16[utf8Offset];\n    }\n    return utf8Offset;\n  }\n  convertUtf16OffsetToUtf8(utf16Offset) {\n    if (this.utf16OffsetToUtf8) {\n      if (utf16Offset < 0) return 0;\n      if (utf16Offset > this.utf16Length) return this.utf8Length;\n      return this.utf16OffsetToUtf8[utf16Offset];\n    }\n    return utf16Offset;\n  }\n  dispose() {\n    if (this.ptr === OnigString._sharedPtr) OnigString._sharedPtrInUse = false;else this._onigBinding.ofree(this.ptr);\n  }\n}\nclass OnigScanner {\n  _onigBinding;\n  _ptr;\n  constructor(patterns) {\n    if (!onigBinding) throw new ShikiError('Must invoke loadWasm first.');\n    const strPtrsArr = [];\n    const strLenArr = [];\n    for (let i = 0, len = patterns.length; i < len; i++) {\n      const utfString = new UtfString(patterns[i]);\n      strPtrsArr[i] = utfString.createString(onigBinding);\n      strLenArr[i] = utfString.utf8Length;\n    }\n    const strPtrsPtr = onigBinding.omalloc(4 * patterns.length);\n    onigBinding.HEAPU32.set(strPtrsArr, strPtrsPtr / 4);\n    const strLenPtr = onigBinding.omalloc(4 * patterns.length);\n    onigBinding.HEAPU32.set(strLenArr, strLenPtr / 4);\n    const scannerPtr = onigBinding.createOnigScanner(strPtrsPtr, strLenPtr, patterns.length);\n    for (let i = 0, len = patterns.length; i < len; i++) onigBinding.ofree(strPtrsArr[i]);\n    onigBinding.ofree(strLenPtr);\n    onigBinding.ofree(strPtrsPtr);\n    if (scannerPtr === 0) throwLastOnigError(onigBinding);\n    this._onigBinding = onigBinding;\n    this._ptr = scannerPtr;\n  }\n  dispose() {\n    this._onigBinding.freeOnigScanner(this._ptr);\n  }\n  findNextMatchSync(string, startPosition, arg) {\n    let debugCall = defaultDebugCall;\n    let options = 0 /* FindOption.None */;\n    if (typeof arg === 'number') {\n      if (arg & 8 /* FindOption.DebugCall */) debugCall = true;\n      options = arg;\n    } else if (typeof arg === 'boolean') {\n      debugCall = arg;\n    }\n    if (typeof string === 'string') {\n      string = new OnigString(string);\n      const result = this._findNextMatchSync(string, startPosition, debugCall, options);\n      string.dispose();\n      return result;\n    }\n    return this._findNextMatchSync(string, startPosition, debugCall, options);\n  }\n  _findNextMatchSync(string, startPosition, debugCall, options) {\n    const onigBinding = this._onigBinding;\n    let resultPtr;\n    if (debugCall) resultPtr = onigBinding.findNextOnigScannerMatchDbg(this._ptr, string.id, string.ptr, string.utf8Length, string.convertUtf16OffsetToUtf8(startPosition), options);else resultPtr = onigBinding.findNextOnigScannerMatch(this._ptr, string.id, string.ptr, string.utf8Length, string.convertUtf16OffsetToUtf8(startPosition), options);\n    if (resultPtr === 0) {\n      // no match\n      return null;\n    }\n    const HEAPU32 = onigBinding.HEAPU32;\n    let offset = resultPtr / 4; // byte offset -> uint32 offset\n    const index = HEAPU32[offset++];\n    const count = HEAPU32[offset++];\n    const captureIndices = [];\n    for (let i = 0; i < count; i++) {\n      const beg = string.convertUtf8OffsetToUtf16(HEAPU32[offset++]);\n      const end = string.convertUtf8OffsetToUtf16(HEAPU32[offset++]);\n      captureIndices[i] = {\n        start: beg,\n        end,\n        length: end - beg\n      };\n    }\n    return {\n      index,\n      captureIndices\n    };\n  }\n}\nfunction isInstantiatorOptionsObject(dataOrOptions) {\n  return typeof dataOrOptions.instantiator === 'function';\n}\nfunction isInstantiatorModule(dataOrOptions) {\n  return typeof dataOrOptions.default === 'function';\n}\nfunction isDataOptionsObject(dataOrOptions) {\n  return typeof dataOrOptions.data !== 'undefined';\n}\nfunction isResponse(dataOrOptions) {\n  return typeof Response !== 'undefined' && dataOrOptions instanceof Response;\n}\nfunction isArrayBuffer(data) {\n  return typeof ArrayBuffer !== 'undefined' && (data instanceof ArrayBuffer || ArrayBuffer.isView(data))\n  // eslint-disable-next-line node/prefer-global/buffer\n  || typeof Buffer !== 'undefined' && Buffer.isBuffer?.(data) || typeof SharedArrayBuffer !== 'undefined' && data instanceof SharedArrayBuffer || typeof Uint32Array !== 'undefined' && data instanceof Uint32Array;\n}\nlet initPromise;\nfunction loadWasm(options) {\n  if (initPromise) return initPromise;\n  async function _load() {\n    onigBinding = await main(async info => {\n      let instance = options;\n      instance = await instance;\n      if (typeof instance === 'function') instance = await instance(info);\n      if (typeof instance === 'function') instance = await instance(info);\n      if (isInstantiatorOptionsObject(instance)) {\n        instance = await instance.instantiator(info);\n      } else if (isInstantiatorModule(instance)) {\n        instance = await instance.default(info);\n      } else {\n        if (isDataOptionsObject(instance)) instance = instance.data;\n        if (isResponse(instance)) {\n          if (typeof WebAssembly.instantiateStreaming === 'function') instance = await _makeResponseStreamingLoader(instance)(info);else instance = await _makeResponseNonStreamingLoader(instance)(info);\n        } else if (isArrayBuffer(instance)) {\n          instance = await _makeArrayBufferLoader(instance)(info);\n        }\n        // import(\"shiki/onig.wasm\") returns `{ default: WebAssembly.Module }` on cloudflare workers\n        // https://developers.cloudflare.com/workers/wrangler/bundling/\n        else if (instance instanceof WebAssembly.Module) {\n          instance = await _makeArrayBufferLoader(instance)(info);\n        } else if ('default' in instance && instance.default instanceof WebAssembly.Module) {\n          instance = await _makeArrayBufferLoader(instance.default)(info);\n        }\n      }\n      if ('instance' in instance) instance = instance.instance;\n      if ('exports' in instance) instance = instance.exports;\n      return instance;\n    });\n  }\n  initPromise = _load();\n  return initPromise;\n}\nfunction _makeArrayBufferLoader(data) {\n  return importObject => WebAssembly.instantiate(data, importObject);\n}\nfunction _makeResponseStreamingLoader(data) {\n  return importObject => WebAssembly.instantiateStreaming(data, importObject);\n}\nfunction _makeResponseNonStreamingLoader(data) {\n  return async importObject => {\n    const arrayBuffer = await data.arrayBuffer();\n    return WebAssembly.instantiate(arrayBuffer, importObject);\n  };\n}\nfunction createOnigString(str) {\n  return new OnigString(str);\n}\nfunction createOnigScanner(patterns) {\n  return new OnigScanner(patterns);\n}\n\n/**\n * https://github.com/microsoft/vscode/blob/f7f05dee53fb33fe023db2e06e30a89d3094488f/src/vs/platform/theme/common/colorRegistry.ts#L258-L268\n */\nconst VSCODE_FALLBACK_EDITOR_FG = {\n  light: '#333333',\n  dark: '#bbbbbb'\n};\nconst VSCODE_FALLBACK_EDITOR_BG = {\n  light: '#fffffe',\n  dark: '#1e1e1e'\n};\nconst RESOLVED_KEY = '__shiki_resolved';\n/**\n * Normalize a textmate theme to shiki theme\n */\nfunction normalizeTheme(rawTheme) {\n  // @ts-expect-error private field\n  if (rawTheme?.[RESOLVED_KEY]) return rawTheme;\n  const theme = {\n    ...rawTheme\n  };\n  // Fallback settings\n  if (theme.tokenColors && !theme.settings) {\n    theme.settings = theme.tokenColors;\n    delete theme.tokenColors;\n  }\n  theme.type ||= 'dark';\n  theme.colorReplacements = {\n    ...theme.colorReplacements\n  };\n  theme.settings ||= [];\n  // Guess fg/bg colors\n  let {\n    bg,\n    fg\n  } = theme;\n  if (!bg || !fg) {\n    /**\n     * First try:\n     * Theme might contain a global `tokenColor` without `name` or `scope`\n     * Used as default value for foreground/background\n     */\n    const globalSetting = theme.settings ? theme.settings.find(s => !s.name && !s.scope) : undefined;\n    if (globalSetting?.settings?.foreground) fg = globalSetting.settings.foreground;\n    if (globalSetting?.settings?.background) bg = globalSetting.settings.background;\n    /**\n     * Second try:\n     * If there's no global `tokenColor` without `name` or `scope`\n     * Use `editor.foreground` and `editor.background`\n     */\n    if (!fg && theme?.colors?.['editor.foreground']) fg = theme.colors['editor.foreground'];\n    if (!bg && theme?.colors?.['editor.background']) bg = theme.colors['editor.background'];\n    /**\n     * Last try:\n     * If there's no fg/bg color specified in theme, use default\n     */\n    if (!fg) fg = theme.type === 'light' ? VSCODE_FALLBACK_EDITOR_FG.light : VSCODE_FALLBACK_EDITOR_FG.dark;\n    if (!bg) bg = theme.type === 'light' ? VSCODE_FALLBACK_EDITOR_BG.light : VSCODE_FALLBACK_EDITOR_BG.dark;\n    theme.fg = fg;\n    theme.bg = bg;\n  }\n  // Push a no-scope setting with fallback colors\n  if (!(theme.settings[0] && theme.settings[0].settings && !theme.settings[0].scope)) {\n    theme.settings.unshift({\n      settings: {\n        foreground: theme.fg,\n        background: theme.bg\n      }\n    });\n  }\n  // Push non-hex colors to color replacements, as `vscode-textmate` doesn't support them\n  let replacementCount = 0;\n  const replacementMap = new Map();\n  function getReplacementColor(value) {\n    if (replacementMap.has(value)) return replacementMap.get(value);\n    replacementCount += 1;\n    const hex = `#${replacementCount.toString(16).padStart(8, '0').toLowerCase()}`;\n    if (theme.colorReplacements?.[`#${hex}`])\n      // already exists\n      return getReplacementColor(value);\n    replacementMap.set(value, hex);\n    return hex;\n  }\n  theme.settings = theme.settings.map(setting => {\n    const replaceFg = setting.settings?.foreground && !setting.settings.foreground.startsWith('#');\n    const replaceBg = setting.settings?.background && !setting.settings.background.startsWith('#');\n    if (!replaceFg && !replaceBg) return setting;\n    const clone = {\n      ...setting,\n      settings: {\n        ...setting.settings\n      }\n    };\n    if (replaceFg) {\n      const replacement = getReplacementColor(setting.settings.foreground);\n      theme.colorReplacements[replacement] = setting.settings.foreground;\n      clone.settings.foreground = replacement;\n    }\n    if (replaceBg) {\n      const replacement = getReplacementColor(setting.settings.background);\n      theme.colorReplacements[replacement] = setting.settings.background;\n      clone.settings.background = replacement;\n    }\n    return clone;\n  });\n  for (const key of Object.keys(theme.colors || {})) {\n    // Only patch for known keys\n    if (key === 'editor.foreground' || key === 'editor.background' || key.startsWith('terminal.ansi')) {\n      if (!theme.colors[key]?.startsWith('#')) {\n        const replacement = getReplacementColor(theme.colors[key]);\n        theme.colorReplacements[replacement] = theme.colors[key];\n        theme.colors[key] = replacement;\n      }\n    }\n  }\n  Object.defineProperty(theme, RESOLVED_KEY, {\n    enumerable: false,\n    writable: false,\n    value: true\n  });\n  return theme;\n}\nclass Registry extends Registry$1 {\n  _resolver;\n  _themes;\n  _langs;\n  _alias;\n  _resolvedThemes = new Map();\n  _resolvedGrammars = new Map();\n  _langMap = new Map();\n  _langGraph = new Map();\n  _textmateThemeCache = new WeakMap();\n  _loadedThemesCache = null;\n  _loadedLanguagesCache = null;\n  constructor(_resolver, _themes, _langs, _alias = {}) {\n    super(_resolver);\n    this._resolver = _resolver;\n    this._themes = _themes;\n    this._langs = _langs;\n    this._alias = _alias;\n    _themes.forEach(t => this.loadTheme(t));\n    _langs.forEach(l => this.loadLanguage(l));\n  }\n  getTheme(theme) {\n    if (typeof theme === 'string') return this._resolvedThemes.get(theme);else return this.loadTheme(theme);\n  }\n  loadTheme(theme) {\n    const _theme = normalizeTheme(theme);\n    if (_theme.name) {\n      this._resolvedThemes.set(_theme.name, _theme);\n      // Reset cache\n      this._loadedThemesCache = null;\n    }\n    return _theme;\n  }\n  getLoadedThemes() {\n    if (!this._loadedThemesCache) this._loadedThemesCache = [...this._resolvedThemes.keys()];\n    return this._loadedThemesCache;\n  }\n  // Override and re-implement this method to cache the textmate themes as `TextMateTheme.createFromRawTheme`\n  // is expensive. Themes can switch often especially for dual-theme support.\n  //\n  // The parent class also accepts `colorMap` as the second parameter, but since we don't use that,\n  // we omit here so it's easier to cache the themes.\n  setTheme(theme) {\n    let textmateTheme = this._textmateThemeCache.get(theme);\n    if (!textmateTheme) {\n      textmateTheme = Theme.createFromRawTheme(theme);\n      this._textmateThemeCache.set(theme, textmateTheme);\n    }\n    // @ts-expect-error Access private `_syncRegistry`, but should work in runtime\n    this._syncRegistry.setTheme(textmateTheme);\n  }\n  getGrammar(name) {\n    if (this._alias[name]) {\n      const resolved = new Set([name]);\n      while (this._alias[name]) {\n        name = this._alias[name];\n        if (resolved.has(name)) throw new ShikiError(`Circular alias \\`${Array.from(resolved).join(' -> ')} -> ${name}\\``);\n        resolved.add(name);\n      }\n    }\n    return this._resolvedGrammars.get(name);\n  }\n  async loadLanguage(lang) {\n    if (this.getGrammar(lang.name)) return;\n    const embeddedLazilyBy = new Set([...this._langMap.values()].filter(i => i.embeddedLangsLazy?.includes(lang.name)));\n    this._resolver.addLanguage(lang);\n    const grammarConfig = {\n      balancedBracketSelectors: lang.balancedBracketSelectors || ['*'],\n      unbalancedBracketSelectors: lang.unbalancedBracketSelectors || []\n    };\n    // @ts-expect-error Private members, set this to override the previous grammar (that can be a stub)\n    this._syncRegistry._rawGrammars.set(lang.scopeName, lang);\n    const g = await this.loadGrammarWithConfiguration(lang.scopeName, 1, grammarConfig);\n    g.name = lang.name;\n    this._resolvedGrammars.set(lang.name, g);\n    if (lang.aliases) {\n      lang.aliases.forEach(alias => {\n        this._alias[alias] = lang.name;\n      });\n    }\n    // Reset cache\n    this._loadedLanguagesCache = null;\n    // If there is a language that embeds this language lazily, we need to reload it\n    if (embeddedLazilyBy.size) {\n      for (const e of embeddedLazilyBy) {\n        this._resolvedGrammars.delete(e.name);\n        // Reset cache\n        this._loadedLanguagesCache = null;\n        // @ts-expect-error clear cache\n        this._syncRegistry?._injectionGrammars?.delete(e.scopeName);\n        // @ts-expect-error clear cache\n        this._syncRegistry?._grammars?.delete(e.scopeName);\n        await this.loadLanguage(this._langMap.get(e.name));\n      }\n    }\n  }\n  async init() {\n    this._themes.map(t => this.loadTheme(t));\n    await this.loadLanguages(this._langs);\n  }\n  dispose() {\n    super.dispose();\n    this._resolvedThemes.clear();\n    this._resolvedGrammars.clear();\n    this._langMap.clear();\n    this._langGraph.clear();\n    this._loadedThemesCache = null;\n  }\n  async loadLanguages(langs) {\n    for (const lang of langs) this.resolveEmbeddedLanguages(lang);\n    const langsGraphArray = Array.from(this._langGraph.entries());\n    const missingLangs = langsGraphArray.filter(([_, lang]) => !lang);\n    if (missingLangs.length) {\n      const dependents = langsGraphArray.filter(([_, lang]) => lang && lang.embeddedLangs?.some(l => missingLangs.map(([name]) => name).includes(l))).filter(lang => !missingLangs.includes(lang));\n      throw new ShikiError(`Missing languages ${missingLangs.map(([name]) => `\\`${name}\\``).join(', ')}, required by ${dependents.map(([name]) => `\\`${name}\\``).join(', ')}`);\n    }\n    for (const [_, lang] of langsGraphArray) this._resolver.addLanguage(lang);\n    for (const [_, lang] of langsGraphArray) await this.loadLanguage(lang);\n  }\n  getLoadedLanguages() {\n    if (!this._loadedLanguagesCache) {\n      this._loadedLanguagesCache = [...new Set([...this._resolvedGrammars.keys(), ...Object.keys(this._alias)])];\n    }\n    return this._loadedLanguagesCache;\n  }\n  resolveEmbeddedLanguages(lang) {\n    this._langMap.set(lang.name, lang);\n    this._langGraph.set(lang.name, lang);\n    if (lang.embeddedLangs) {\n      for (const embeddedLang of lang.embeddedLangs) this._langGraph.set(embeddedLang, this._langMap.get(embeddedLang));\n    }\n  }\n}\nclass Resolver {\n  _langs = new Map();\n  _scopeToLang = new Map();\n  _injections = new Map();\n  _onigLibPromise;\n  constructor(onigLibPromise, langs) {\n    this._onigLibPromise = onigLibPromise;\n    langs.forEach(i => this.addLanguage(i));\n  }\n  get onigLib() {\n    return this._onigLibPromise;\n  }\n  getLangRegistration(langIdOrAlias) {\n    return this._langs.get(langIdOrAlias);\n  }\n  async loadGrammar(scopeName) {\n    return this._scopeToLang.get(scopeName);\n  }\n  addLanguage(l) {\n    this._langs.set(l.name, l);\n    if (l.aliases) {\n      l.aliases.forEach(a => {\n        this._langs.set(a, l);\n      });\n    }\n    this._scopeToLang.set(l.scopeName, l);\n    if (l.injectTo) {\n      l.injectTo.forEach(i => {\n        if (!this._injections.get(i)) this._injections.set(i, []);\n        this._injections.get(i).push(l.scopeName);\n      });\n    }\n  }\n  getInjections(scopeName) {\n    const scopeParts = scopeName.split('.');\n    let injections = [];\n    for (let i = 1; i <= scopeParts.length; i++) {\n      const subScopeName = scopeParts.slice(0, i).join('.');\n      injections = [...injections, ...(this._injections.get(subScopeName) || [])];\n    }\n    return injections;\n  }\n}\nlet _defaultWasmLoader;\n/**\n * Set the default wasm loader for `loadWasm`.\n * @internal\n */\nfunction setDefaultWasmLoader(_loader) {\n  _defaultWasmLoader = _loader;\n}\nlet instancesCount = 0;\n/**\n * Get the minimal shiki context for rendering.\n */\nasync function createShikiInternal(options = {}) {\n  instancesCount += 1;\n  if (options.warnings !== false && instancesCount >= 10 && instancesCount % 10 === 0) console.warn(`[Shiki] ${instancesCount} instances have been created. Shiki is supposed to be used as a singleton, consider refactoring your code to cache your highlighter instance; Or call \\`highlighter.dispose()\\` to release unused instances.`);\n  let isDisposed = false;\n  async function normalizeGetter(p) {\n    return Promise.resolve(typeof p === 'function' ? p() : p).then(r => r.default || r);\n  }\n  async function resolveLangs(langs) {\n    return Array.from(new Set((await Promise.all(langs.filter(l => !isSpecialLang(l)).map(async lang => await normalizeGetter(lang).then(r => Array.isArray(r) ? r : [r])))).flat()));\n  }\n  const wasmLoader = options.loadWasm || _defaultWasmLoader;\n  const [themes, langs] = await Promise.all([Promise.all((options.themes || []).map(normalizeGetter)).then(r => r.map(normalizeTheme)), resolveLangs(options.langs || []), wasmLoader ? loadWasm(wasmLoader) : undefined]);\n  const resolver = new Resolver(Promise.resolve({\n    createOnigScanner(patterns) {\n      return createOnigScanner(patterns);\n    },\n    createOnigString(s) {\n      return createOnigString(s);\n    }\n  }), langs);\n  const _registry = new Registry(resolver, themes, langs, options.langAlias);\n  await _registry.init();\n  let _lastTheme;\n  function getLanguage(name) {\n    ensureNotDisposed();\n    const _lang = _registry.getGrammar(typeof name === 'string' ? name : name.name);\n    if (!_lang) throw new ShikiError(`Language \\`${name}\\` not found, you may need to load it first`);\n    return _lang;\n  }\n  function getTheme(name) {\n    if (name === 'none') return {\n      bg: '',\n      fg: '',\n      name: 'none',\n      settings: [],\n      type: 'dark'\n    };\n    ensureNotDisposed();\n    const _theme = _registry.getTheme(name);\n    if (!_theme) throw new ShikiError(`Theme \\`${name}\\` not found, you may need to load it first`);\n    return _theme;\n  }\n  function setTheme(name) {\n    ensureNotDisposed();\n    const theme = getTheme(name);\n    if (_lastTheme !== name) {\n      _registry.setTheme(theme);\n      _lastTheme = name;\n    }\n    const colorMap = _registry.getColorMap();\n    return {\n      theme,\n      colorMap\n    };\n  }\n  function getLoadedThemes() {\n    ensureNotDisposed();\n    return _registry.getLoadedThemes();\n  }\n  function getLoadedLanguages() {\n    ensureNotDisposed();\n    return _registry.getLoadedLanguages();\n  }\n  async function loadLanguage(...langs) {\n    ensureNotDisposed();\n    await _registry.loadLanguages(await resolveLangs(langs));\n  }\n  async function loadTheme(...themes) {\n    ensureNotDisposed();\n    await Promise.all(themes.map(async theme => isSpecialTheme(theme) ? null : _registry.loadTheme(await normalizeGetter(theme))));\n  }\n  function ensureNotDisposed() {\n    if (isDisposed) throw new ShikiError('Shiki instance has been disposed');\n  }\n  function dispose() {\n    if (isDisposed) return;\n    isDisposed = true;\n    _registry.dispose();\n    instancesCount -= 1;\n  }\n  return {\n    setTheme,\n    getTheme,\n    getLanguage,\n    getLoadedThemes,\n    getLoadedLanguages,\n    loadLanguage,\n    loadTheme,\n    dispose,\n    [Symbol.dispose]: dispose\n  };\n}\n/**\n * @deprecated Use `createShikiInternal` instead.\n */\nfunction getShikiInternal(options = {}) {\n  // TODO: next: console.warn('`getShikiInternal` is deprecated. Use `createShikiInternal` instead.')\n  return createShikiInternal(options);\n}\n\n/**\n * Create a Shiki core highlighter instance, with no languages or themes bundled.\n * Wasm and each language and theme must be loaded manually.\n *\n * @see http://shiki.style/guide/install#fine-grained-bundle\n */\nasync function createHighlighterCore(options = {}) {\n  const internal = await createShikiInternal(options);\n  return {\n    getLastGrammarState: (code, options) => getLastGrammarState(internal, code, options),\n    codeToTokensBase: (code, options) => codeToTokensBase(internal, code, options),\n    codeToTokensWithThemes: (code, options) => codeToTokensWithThemes(internal, code, options),\n    codeToTokens: (code, options) => codeToTokens(internal, code, options),\n    codeToHast: (code, options) => codeToHast(internal, code, options),\n    codeToHtml: (code, options) => codeToHtml(internal, code, options),\n    ...internal,\n    getInternalContext: () => internal\n  };\n}\nfunction makeSingletonHighlighterCore(createHighlighter) {\n  let _shiki;\n  async function getSingletonHighlighterCore(options = {}) {\n    if (!_shiki) {\n      _shiki = createHighlighter({\n        ...options,\n        themes: options.themes || [],\n        langs: options.langs || []\n      });\n      return _shiki;\n    } else {\n      const s = await _shiki;\n      await Promise.all([s.loadTheme(...(options.themes || [])), s.loadLanguage(...(options.langs || []))]);\n      return s;\n    }\n  }\n  return getSingletonHighlighterCore;\n}\nconst getSingletonHighlighterCore = /* @__PURE__ */makeSingletonHighlighterCore(createHighlighterCore);\n/**\n * @deprecated Use `createHighlighterCore` or `getSingletonHighlighterCore` instead.\n */\n/* v8 ignore next 5 */\nfunction getHighlighterCore(options = {}) {\n  // TODO: next:  console.warn('`getHighlighterCore` is deprecated. Use `createHighlighterCore` or `getSingletonHighlighterCore` instead.')\n  return createHighlighterCore(options);\n}\n\n/**\n * Create a `createHighlighter` function with bundled themes and languages.\n *\n * @param bundledLanguages\n * @param bundledThemes\n * @param loadWasm\n */\nfunction createdBundledHighlighter(bundledLanguages, bundledThemes, loadWasm) {\n  async function createHighlighter(options) {\n    function resolveLang(lang) {\n      if (typeof lang === 'string') {\n        if (isSpecialLang(lang)) return [];\n        const bundle = bundledLanguages[lang];\n        if (!bundle) throw new ShikiError(`Language \\`${lang}\\` is not included in this bundle. You may want to load it from external source.`);\n        return bundle;\n      }\n      return lang;\n    }\n    function resolveTheme(theme) {\n      if (isSpecialTheme(theme)) return 'none';\n      if (typeof theme === 'string') {\n        const bundle = bundledThemes[theme];\n        if (!bundle) throw new ShikiError(`Theme \\`${theme}\\` is not included in this bundle. You may want to load it from external source.`);\n        return bundle;\n      }\n      return theme;\n    }\n    const _themes = (options.themes ?? []).map(i => resolveTheme(i));\n    const langs = (options.langs ?? []).map(i => resolveLang(i));\n    const core = await createHighlighterCore({\n      ...options,\n      themes: _themes,\n      langs,\n      loadWasm\n    });\n    return {\n      ...core,\n      loadLanguage(...langs) {\n        return core.loadLanguage(...langs.map(resolveLang));\n      },\n      loadTheme(...themes) {\n        return core.loadTheme(...themes.map(resolveTheme));\n      }\n    };\n  }\n  return createHighlighter;\n}\nfunction makeSingletonHighlighter(createHighlighter) {\n  let _shiki;\n  async function getSingletonHighlighter(options = {}) {\n    if (!_shiki) {\n      _shiki = createHighlighter({\n        ...options,\n        themes: options.themes || [],\n        langs: options.langs || []\n      });\n      return _shiki;\n    } else {\n      const s = await _shiki;\n      await Promise.all([s.loadTheme(...(options.themes || [])), s.loadLanguage(...(options.langs || []))]);\n      return s;\n    }\n  }\n  return getSingletonHighlighter;\n}\nfunction createSingletonShorthands(createHighlighter) {\n  const getSingletonHighlighter = makeSingletonHighlighter(createHighlighter);\n  return {\n    getSingletonHighlighter(options) {\n      return getSingletonHighlighter(options);\n    },\n    async codeToHtml(code, options) {\n      const shiki = await getSingletonHighlighter({\n        langs: [options.lang],\n        themes: 'theme' in options ? [options.theme] : Object.values(options.themes)\n      });\n      return shiki.codeToHtml(code, options);\n    },\n    async codeToHast(code, options) {\n      const shiki = await getSingletonHighlighter({\n        langs: [options.lang],\n        themes: 'theme' in options ? [options.theme] : Object.values(options.themes)\n      });\n      return shiki.codeToHast(code, options);\n    },\n    async codeToTokens(code, options) {\n      const shiki = await getSingletonHighlighter({\n        langs: [options.lang],\n        themes: 'theme' in options ? [options.theme] : Object.values(options.themes)\n      });\n      return shiki.codeToTokens(code, options);\n    },\n    async codeToTokensBase(code, options) {\n      const shiki = await getSingletonHighlighter({\n        langs: [options.lang],\n        themes: [options.theme]\n      });\n      return shiki.codeToTokensBase(code, options);\n    },\n    async codeToTokensWithThemes(code, options) {\n      const shiki = await getSingletonHighlighter({\n        langs: [options.lang],\n        themes: Object.values(options.themes).filter(Boolean)\n      });\n      return shiki.codeToTokensWithThemes(code, options);\n    },\n    async getLastGrammarState(code, options) {\n      const shiki = await getSingletonHighlighter({\n        langs: [options.lang],\n        themes: [options.theme]\n      });\n      return shiki.getLastGrammarState(code, options);\n    }\n  };\n}\nexport { FontStyle, ShikiError, addClassToHast, applyColorReplacements, codeToHast, codeToHtml, codeToTokens, codeToTokensBase, codeToTokensWithThemes, createHighlighterCore, createPositionConverter, createShikiInternal, createSingletonShorthands, createdBundledHighlighter, getHighlighterCore, getShikiInternal, getSingletonHighlighterCore, getTokenStyleObject, toHtml as hastToHtml, isNoneTheme, isPlainLang, isSpecialLang, isSpecialTheme, loadWasm, makeSingletonHighlighter, makeSingletonHighlighterCore, normalizeTheme, resolveColorReplacements, setDefaultWasmLoader, splitLines, splitToken, splitTokens, stringifyTokenStyle, toArray, tokenizeAnsiWithTheme, tokenizeWithTheme, tokensToHast, transformerDecorations };", "function createCssVariablesTheme(options = {}) {\n  const {\n    name = \"css-variables\",\n    variablePrefix = \"--shiki-\",\n    fontStyle = true\n  } = options;\n  const variable = name2 => {\n    if (options.variableDefaults?.[name2]) return `var(${variablePrefix}${name2}, ${options.variableDefaults[name2]})`;\n    return `var(${variablePrefix}${name2})`;\n  };\n  const theme = {\n    name,\n    type: \"dark\",\n    colors: {\n      \"editor.foreground\": variable(\"foreground\"),\n      \"editor.background\": variable(\"background\"),\n      \"terminal.ansiBlack\": variable(\"ansi-black\"),\n      \"terminal.ansiRed\": variable(\"ansi-red\"),\n      \"terminal.ansiGreen\": variable(\"ansi-green\"),\n      \"terminal.ansiYellow\": variable(\"ansi-yellow\"),\n      \"terminal.ansiBlue\": variable(\"ansi-blue\"),\n      \"terminal.ansiMagenta\": variable(\"ansi-magenta\"),\n      \"terminal.ansiCyan\": variable(\"ansi-cyan\"),\n      \"terminal.ansiWhite\": variable(\"ansi-white\"),\n      \"terminal.ansiBrightBlack\": variable(\"ansi-bright-black\"),\n      \"terminal.ansiBrightRed\": variable(\"ansi-bright-red\"),\n      \"terminal.ansiBrightGreen\": variable(\"ansi-bright-green\"),\n      \"terminal.ansiBrightYellow\": variable(\"ansi-bright-yellow\"),\n      \"terminal.ansiBrightBlue\": variable(\"ansi-bright-blue\"),\n      \"terminal.ansiBrightMagenta\": variable(\"ansi-bright-magenta\"),\n      \"terminal.ansiBrightCyan\": variable(\"ansi-bright-cyan\"),\n      \"terminal.ansiBrightWhite\": variable(\"ansi-bright-white\")\n    },\n    tokenColors: [{\n      scope: [\"keyword.operator.accessor\", \"meta.group.braces.round.function.arguments\", \"meta.template.expression\", \"markup.fenced_code meta.embedded.block\"],\n      settings: {\n        foreground: variable(\"foreground\")\n      }\n    }, {\n      scope: \"emphasis\",\n      settings: {\n        fontStyle: \"italic\"\n      }\n    }, {\n      scope: [\"strong\", \"markup.heading.markdown\", \"markup.bold.markdown\"],\n      settings: {\n        fontStyle: \"bold\"\n      }\n    }, {\n      scope: [\"markup.italic.markdown\"],\n      settings: {\n        fontStyle: \"italic\"\n      }\n    }, {\n      scope: \"meta.link.inline.markdown\",\n      settings: {\n        fontStyle: \"underline\",\n        foreground: variable(\"token-link\")\n      }\n    }, {\n      scope: [\"string\", \"markup.fenced_code\", \"markup.inline\"],\n      settings: {\n        foreground: variable(\"token-string\")\n      }\n    }, {\n      scope: [\"comment\", \"string.quoted.docstring.multi\"],\n      settings: {\n        foreground: variable(\"token-comment\")\n      }\n    }, {\n      scope: [\"constant.numeric\", \"constant.language\", \"constant.other.placeholder\", \"constant.character.format.placeholder\", \"variable.language.this\", \"variable.other.object\", \"variable.other.class\", \"variable.other.constant\", \"meta.property-name\", \"meta.property-value\", \"support\"],\n      settings: {\n        foreground: variable(\"token-constant\")\n      }\n    }, {\n      scope: [\"keyword\", \"storage.modifier\", \"storage.type\", \"storage.control.clojure\", \"entity.name.function.clojure\", \"entity.name.tag.yaml\", \"support.function.node\", \"support.type.property-name.json\", \"punctuation.separator.key-value\", \"punctuation.definition.template-expression\"],\n      settings: {\n        foreground: variable(\"token-keyword\")\n      }\n    }, {\n      scope: \"variable.parameter.function\",\n      settings: {\n        foreground: variable(\"token-parameter\")\n      }\n    }, {\n      scope: [\"support.function\", \"entity.name.type\", \"entity.other.inherited-class\", \"meta.function-call\", \"meta.instance.constructor\", \"entity.other.attribute-name\", \"entity.name.function\", \"constant.keyword.clojure\"],\n      settings: {\n        foreground: variable(\"token-function\")\n      }\n    }, {\n      scope: [\"entity.name.tag\", \"string.quoted\", \"string.regexp\", \"string.interpolated\", \"string.template\", \"string.unquoted.plain.out.yaml\", \"keyword.other.template\"],\n      settings: {\n        foreground: variable(\"token-string-expression\")\n      }\n    }, {\n      scope: [\"punctuation.definition.arguments\", \"punctuation.definition.dict\", \"punctuation.separator\", \"meta.function-call.arguments\"],\n      settings: {\n        foreground: variable(\"token-punctuation\")\n      }\n    }, {\n      // [Custom] Markdown links\n      scope: [\"markup.underline.link\", \"punctuation.definition.metadata.markdown\"],\n      settings: {\n        foreground: variable(\"token-link\")\n      }\n    }, {\n      // [Custom] Markdown list\n      scope: [\"beginning.punctuation.definition.list.markdown\"],\n      settings: {\n        foreground: variable(\"token-string\")\n      }\n    }, {\n      // [Custom] Markdown punctuation definition brackets\n      scope: [\"punctuation.definition.string.begin.markdown\", \"punctuation.definition.string.end.markdown\", \"string.other.link.title.markdown\", \"string.other.link.description.markdown\"],\n      settings: {\n        foreground: variable(\"token-keyword\")\n      }\n    }, {\n      // [Custom] Diff\n      scope: [\"markup.inserted\", \"meta.diff.header.to-file\", \"punctuation.definition.inserted\"],\n      settings: {\n        foreground: variable(\"token-inserted\")\n      }\n    }, {\n      scope: [\"markup.deleted\", \"meta.diff.header.from-file\", \"punctuation.definition.deleted\"],\n      settings: {\n        foreground: variable(\"token-deleted\")\n      }\n    }, {\n      scope: [\"markup.changed\", \"punctuation.definition.changed\"],\n      settings: {\n        foreground: variable(\"token-changed\")\n      }\n    }]\n  };\n  if (!fontStyle) {\n    theme.tokenColors = theme.tokenColors?.map(tokenColor => {\n      if (tokenColor.settings?.fontStyle) delete tokenColor.settings.fontStyle;\n      return tokenColor;\n    });\n  }\n  return theme;\n}\nexport { createCssVariablesTheme };", "import { bundledLanguages } from './langs.mjs';\nexport { bundledLanguagesAlias, bundledLanguagesBase, bundledLanguagesInfo } from './langs.mjs';\nimport { g as getWasmInlined } from './chunks/wasm-dynamic.mjs';\nimport { bundledThemes } from './themes.mjs';\nexport { bundledThemesInfo } from './themes.mjs';\nimport { createdBundledHighlighter, createSingletonShorthands } from '@shikijs/core';\nexport * from '@shikijs/core';\nexport { createCssVariablesTheme } from './theme-css-variables.mjs';\nconst createHighlighter = /* @__PURE__ */createdBundledHighlighter(bundledLanguages, bundledThemes, getWasmInlined);\nconst {\n  codeToHtml,\n  codeToHast,\n  codeToTokens,\n  codeToTokensBase,\n  codeToTokensWithThemes,\n  getSingletonHighlighter,\n  getLastGrammarState\n} = /* @__PURE__ */createSingletonShorthands(createHighlighter);\nconst getHighlighter = options => {\n  return createHighlighter(options);\n};\nexport { bundledLanguages, bundledThemes, codeToHast, codeToHtml, codeToTokens, codeToTokensBase, codeToTokensWithThemes, createHighlighter, getHighlighter, getLastGrammarState, getSingletonHighlighter, getWasmInlined };"],
  "mappings": "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",
  "names": ["FontStyle", "EncodedTokenAttributes", "containsBalancedBrackets", "matcher", "key", "root", "head", "scopeName", "scopes", "key", "text", "stack", "i", "p", "decorations", "stringify", "root", "one", "all", "increment", "siblings", "head", "onigBinding", "clone", "Registry", "langs", "themes", "options", "createHighlighter", "getSingletonHighlighterCore", "bundledLanguages", "bundledThemes", "loadWasm", "core", "getSingletonHighlighter", "codeToHtml", "codeToHast", "codeToTokens", "codeToTokensBase", "codeToTokensWithThemes", "getLastGrammarState"]
}
