{
  "version": 3,
  "sources": ["../../../../../../node_modules/shiki/dist/langs/shellscript.mjs"],
  "sourcesContent": ["const lang = Object.freeze({\n  \"displayName\": \"Shell\",\n  \"name\": \"shellscript\",\n  \"patterns\": [{\n    \"include\": \"#initial_context\"\n  }],\n  \"repository\": {\n    \"alias_statement\": {\n      \"begin\": \"(?:(?:[ \\\\t]*+)(alias)(?:[ \\\\t]*+)((?:(?:((?<!\\\\w)-\\\\w+\\\\b)(?:[ \\\\t]*+))*))(?:(?:[ \\\\t]*+)(?:((?<!\\\\w)(?:[a-zA-Z_0-9-]+)(?!\\\\w))(?:(?:(\\\\[)((?:(?:(?:(?:\\\\$?)(?:(?<!\\\\w)(?:[a-zA-Z_0-9-]+)(?!\\\\w))|@)|\\\\*)|(-?\\\\d+)))(\\\\]))?))(?:(?:(\\\\=)|(\\\\+\\\\=))|(\\\\-\\\\=))))\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"storage.type.alias.shell\"\n        },\n        \"2\": {\n          \"patterns\": [{\n            \"match\": \"(?<!\\\\w)-\\\\w+\\\\b\",\n            \"name\": \"string.unquoted.argument.shell constant.other.option.shell\"\n          }]\n        },\n        \"3\": {\n          \"name\": \"string.unquoted.argument.shell constant.other.option.shell\"\n        },\n        \"4\": {\n          \"name\": \"variable.other.assignment.shell\"\n        },\n        \"5\": {\n          \"name\": \"punctuation.definition.array.access.shell\"\n        },\n        \"6\": {\n          \"name\": \"variable.other.assignment.shell\"\n        },\n        \"7\": {\n          \"name\": \"constant.numeric.shell constant.numeric.integer.shell\"\n        },\n        \"8\": {\n          \"name\": \"punctuation.definition.array.access.shell\"\n        },\n        \"9\": {\n          \"name\": \"keyword.operator.assignment.shell\"\n        },\n        \"10\": {\n          \"name\": \"keyword.operator.assignment.compound.shell\"\n        },\n        \"11\": {\n          \"name\": \"keyword.operator.assignment.compound.shell\"\n        }\n      },\n      \"end\": \"(?:(?= |\\\\t|$)|(?:(?:(?:(;)|(&&))|(\\\\|\\\\|))|(&)))\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.terminator.statement.semicolon.shell\"\n        },\n        \"2\": {\n          \"name\": \"punctuation.separator.statement.and.shell\"\n        },\n        \"3\": {\n          \"name\": \"punctuation.separator.statement.or.shell\"\n        },\n        \"4\": {\n          \"name\": \"punctuation.separator.statement.background.shell\"\n        }\n      },\n      \"name\": \"meta.expression.assignment.alias.shell\",\n      \"patterns\": [{\n        \"include\": \"#normal_context\"\n      }]\n    },\n    \"argument\": {\n      \"begin\": \"(?:[ \\\\t]++)(?!(?:&|\\\\||\\\\(|\\\\[|#|\\\\n|$|;))\",\n      \"beginCaptures\": {},\n      \"end\": \"(?= |\\\\t|;|\\\\||&|$|\\\\n|\\\\)|\\\\`)\",\n      \"endCaptures\": {},\n      \"name\": \"meta.argument.shell\",\n      \"patterns\": [{\n        \"include\": \"#argument_context\"\n      }, {\n        \"include\": \"#line_continuation\"\n      }]\n    },\n    \"argument_context\": {\n      \"patterns\": [{\n        \"captures\": {\n          \"1\": {\n            \"name\": \"string.unquoted.argument.shell\",\n            \"patterns\": [{\n              \"match\": \"\\\\*\",\n              \"name\": \"variable.language.special.wildcard.shell\"\n            }, {\n              \"include\": \"#variable\"\n            }, {\n              \"include\": \"#numeric_literal\"\n            }, {\n              \"captures\": {\n                \"1\": {\n                  \"name\": \"constant.language.$1.shell\"\n                }\n              },\n              \"match\": \"(?<!\\\\w)(\\\\b(?:true|false)\\\\b)(?!\\\\w)\"\n            }]\n          }\n        },\n        \"match\": \"(?:[ \\\\t]*+)((?:[^ \\\\t\\\\n>&;<>\\\\(\\\\)\\\\$`\\\\\\\\\\\"'<\\\\|]+)(?!>))\"\n      }, {\n        \"include\": \"#normal_context\"\n      }]\n    },\n    \"arithmetic_double\": {\n      \"patterns\": [{\n        \"begin\": \"\\\\(\\\\(\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.section.arithmetic.double.shell\"\n          }\n        },\n        \"end\": \"\\\\)(?:\\\\s*)\\\\)\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.section.arithmetic.double.shell\"\n          }\n        },\n        \"name\": \"meta.arithmetic.shell\",\n        \"patterns\": [{\n          \"include\": \"#math\"\n        }, {\n          \"include\": \"#string\"\n        }]\n      }]\n    },\n    \"arithmetic_no_dollar\": {\n      \"patterns\": [{\n        \"begin\": \"\\\\(\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.section.arithmetic.single.shell\"\n          }\n        },\n        \"end\": \"\\\\)\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.section.arithmetic.single.shell\"\n          }\n        },\n        \"name\": \"meta.arithmetic.shell\",\n        \"patterns\": [{\n          \"include\": \"#math\"\n        }, {\n          \"include\": \"#string\"\n        }]\n      }]\n    },\n    \"array_access_inline\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"punctuation.section.array.shell\"\n        },\n        \"2\": {\n          \"patterns\": [{\n            \"include\": \"#special_expansion\"\n          }, {\n            \"include\": \"#string\"\n          }, {\n            \"include\": \"#variable\"\n          }]\n        },\n        \"3\": {\n          \"name\": \"punctuation.section.array.shell\"\n        }\n      },\n      \"match\": \"(?:(\\\\[)([^\\\\[\\\\]]+)(\\\\]))\"\n    },\n    \"array_value\": {\n      \"begin\": \"(?:[ \\\\t]*+)(?:((?<!\\\\w)(?:[a-zA-Z_0-9-]+)(?!\\\\w))(?:(?:(\\\\[)((?:(?:(?:(?:\\\\$?)(?:(?<!\\\\w)(?:[a-zA-Z_0-9-]+)(?!\\\\w))|@)|\\\\*)|(-?\\\\d+)))(\\\\]))?))(?:(?:(\\\\=)|(\\\\+\\\\=))|(\\\\-\\\\=))(?:[ \\\\t]*+)(\\\\()\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"variable.other.assignment.shell\"\n        },\n        \"2\": {\n          \"name\": \"punctuation.definition.array.access.shell\"\n        },\n        \"3\": {\n          \"name\": \"variable.other.assignment.shell\"\n        },\n        \"4\": {\n          \"name\": \"constant.numeric.shell constant.numeric.integer.shell\"\n        },\n        \"5\": {\n          \"name\": \"punctuation.definition.array.access.shell\"\n        },\n        \"6\": {\n          \"name\": \"keyword.operator.assignment.shell\"\n        },\n        \"7\": {\n          \"name\": \"keyword.operator.assignment.compound.shell\"\n        },\n        \"8\": {\n          \"name\": \"keyword.operator.assignment.compound.shell\"\n        },\n        \"9\": {\n          \"name\": \"punctuation.definition.array.shell\"\n        }\n      },\n      \"end\": \"\\\\)\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.array.shell\"\n        }\n      },\n      \"patterns\": [{\n        \"include\": \"#comment\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"variable.other.assignment.array.shell entity.other.attribute-name.shell\"\n          },\n          \"2\": {\n            \"name\": \"keyword.operator.assignment.shell punctuation.definition.assignment.shell\"\n          }\n        },\n        \"match\": \"(?:((?<!\\\\w)(?:[a-zA-Z_0-9-]+)(?!\\\\w))(\\\\=))\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.bracket.named-array.shell\"\n          },\n          \"2\": {\n            \"name\": \"string.unquoted.shell entity.other.attribute-name.bracket.shell\"\n          },\n          \"3\": {\n            \"name\": \"punctuation.definition.bracket.named-array.shell\"\n          },\n          \"4\": {\n            \"name\": \"punctuation.definition.assignment.shell\"\n          }\n        },\n        \"match\": \"(?:(\\\\[)(.+?)(\\\\])(\\\\=))\"\n      }, {\n        \"include\": \"#normal_context\"\n      }, {\n        \"include\": \"#simple_unquoted\"\n      }]\n    },\n    \"assignment_statement\": {\n      \"patterns\": [{\n        \"include\": \"#array_value\"\n      }, {\n        \"include\": \"#modified_assignment_statement\"\n      }, {\n        \"include\": \"#normal_assignment_statement\"\n      }]\n    },\n    \"basic_command_name\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"storage.modifier.$1.shell\"\n        },\n        \"2\": {\n          \"name\": \"entity.name.function.call.shell entity.name.command.shell\",\n          \"patterns\": [{\n            \"match\": \"(?<!\\\\w)(?:continue|return|break)(?!\\\\w)\",\n            \"name\": \"keyword.control.$0.shell\"\n          }, {\n            \"match\": \"(?<!\\\\w)(?:(?:unfunction|continue|autoload|unsetopt|bindkey|builtin|getopts|command|declare|unalias|history|unlimit|typeset|suspend|source|printf|unhash|disown|ulimit|return|which|alias|break|false|print|shift|times|umask|umask|unset|read|type|exec|eval|wait|echo|dirs|jobs|kill|hash|stat|exit|test|trap|true|let|set|pwd|cd|fg|bg|fc|:|\\\\.)(?!\\\\/))(?!\\\\w)(?!-)\",\n            \"name\": \"support.function.builtin.shell\"\n          }, {\n            \"include\": \"#variable\"\n          }]\n        }\n      },\n      \"match\": `(?:(?:(?!(?:!|&|\\\\||\\\\(|\\\\)|\\\\{|\\\\[|<|>|#|\\\\n|$|;|[ \\\\t]))(?!nocorrect |nocorrect\t|nocorrect$|readonly |readonly\t|readonly$|function |function\t|function$|foreach |foreach\t|foreach$|coproc |coproc\t|coproc$|logout |logout\t|logout$|export |export\t|export$|select |select\t|select$|repeat |repeat\t|repeat$|pushd |pushd\t|pushd$|until |until\t|until$|while |while\t|while$|local |local\t|local$|case |case\t|case$|done |done\t|done$|elif |elif\t|elif$|else |else\t|else$|esac |esac\t|esac$|popd |popd\t|popd$|then |then\t|then$|time |time\t|time$|for |for\t|for$|end |end\t|end$|fi |fi\t|fi$|do |do\t|do$|in |in\t|in$|if |if\t|if$))(?:((?<=^|;|&|[ \\\\t])(?:readonly|declare|typeset|export|local)(?=[ \\\\t]|;|&|$))|((?!\"|'|\\\\\\\\\\\\n?$)(?:[^!'\"<> \\\\t\\\\n\\\\r]+?)))(?:(?= |\\\\t)|(?:(?=;|\\\\||&|\\\\n|\\\\)|\\\\\\`|\\\\{|\\\\}|[ \\\\t]*#|\\\\])(?<!\\\\\\\\))))`,\n      \"name\": \"meta.statement.command.name.basic.shell\"\n    },\n    \"block_comment\": {\n      \"begin\": \"(?:(?:\\\\s*+)(\\\\/\\\\*))\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.definition.comment.begin.shell\"\n        }\n      },\n      \"end\": \"\\\\*\\\\/\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.comment.end.shell\"\n        }\n      },\n      \"name\": \"comment.block.shell\"\n    },\n    \"boolean\": {\n      \"match\": \"\\\\b(?:true|false)\\\\b\",\n      \"name\": \"constant.language.$0.shell\"\n    },\n    \"case_statement\": {\n      \"begin\": \"(?:(\\\\bcase\\\\b)(?:[ \\\\t]*+)(.+?)(?:[ \\\\t]*+)(\\\\bin\\\\b))\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.case.shell\"\n        },\n        \"2\": {\n          \"patterns\": [{\n            \"include\": \"#initial_context\"\n          }]\n        },\n        \"3\": {\n          \"name\": \"keyword.control.in.shell\"\n        }\n      },\n      \"end\": \"\\\\besac\\\\b\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"keyword.control.esac.shell\"\n        }\n      },\n      \"name\": \"meta.case.shell\",\n      \"patterns\": [{\n        \"include\": \"#comment\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"keyword.operator.pattern.case.default.shell\"\n          }\n        },\n        \"match\": \"(?:[ \\\\t]*+)(\\\\* *\\\\))\"\n      }, {\n        \"begin\": \"(?<!\\\\))(?!(?:[ \\\\t]*+)(?:esac\\\\b|$))\",\n        \"beginCaptures\": {},\n        \"end\": \"(?:(?=\\\\besac\\\\b)|(\\\\)))\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.operator.pattern.case.shell\"\n          }\n        },\n        \"name\": \"meta.case.entry.pattern.shell\",\n        \"patterns\": [{\n          \"include\": \"#case_statement_context\"\n        }]\n      }, {\n        \"begin\": \"(?<=\\\\))\",\n        \"beginCaptures\": {},\n        \"end\": \"(?:(;;)|(?=\\\\besac\\\\b))\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.terminator.statement.case.shell\"\n          }\n        },\n        \"name\": \"meta.case.entry.body.shell\",\n        \"patterns\": [{\n          \"include\": \"#typical_statements\"\n        }, {\n          \"include\": \"#initial_context\"\n        }]\n      }]\n    },\n    \"case_statement_context\": {\n      \"patterns\": [{\n        \"match\": \"\\\\*\",\n        \"name\": \"variable.language.special.quantifier.star.shell keyword.operator.quantifier.star.shell punctuation.definition.arbitrary-repetition.shell punctuation.definition.regex.arbitrary-repetition.shell\"\n      }, {\n        \"match\": \"\\\\+\",\n        \"name\": \"variable.language.special.quantifier.plus.shell keyword.operator.quantifier.plus.shell punctuation.definition.arbitrary-repetition.shell punctuation.definition.regex.arbitrary-repetition.shell\"\n      }, {\n        \"match\": \"\\\\?\",\n        \"name\": \"variable.language.special.quantifier.question.shell keyword.operator.quantifier.question.shell punctuation.definition.arbitrary-repetition.shell punctuation.definition.regex.arbitrary-repetition.shell\"\n      }, {\n        \"match\": \"@\",\n        \"name\": \"variable.language.special.at.shell keyword.operator.at.shell punctuation.definition.regex.at.shell\"\n      }, {\n        \"match\": \"\\\\|\",\n        \"name\": \"keyword.operator.orvariable.language.special.or.shell keyword.operator.alternation.ruby.shell punctuation.definition.regex.alternation.shell punctuation.separator.regex.alternation.shell\"\n      }, {\n        \"match\": \"\\\\\\\\.\",\n        \"name\": \"constant.character.escape.shell\"\n      }, {\n        \"match\": \"(?<=\\\\tin| in| |\\\\t|;;)\\\\(\",\n        \"name\": \"keyword.operator.pattern.case.shell\"\n      }, {\n        \"begin\": \"(?<=\\\\S)(\\\\()\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.group.shell punctuation.definition.regex.group.shell\"\n          }\n        },\n        \"end\": \"\\\\)\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.group.shell punctuation.definition.regex.group.shell\"\n          }\n        },\n        \"name\": \"meta.parenthese.shell\",\n        \"patterns\": [{\n          \"include\": \"#case_statement_context\"\n        }]\n      }, {\n        \"begin\": \"\\\\[\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.character-class.shell\"\n          }\n        },\n        \"end\": \"\\\\]\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.character-class.shell\"\n          }\n        },\n        \"name\": \"string.regexp.character-class.shell\",\n        \"patterns\": [{\n          \"match\": \"\\\\\\\\.\",\n          \"name\": \"constant.character.escape.shell\"\n        }]\n      }, {\n        \"include\": \"#string\"\n      }, {\n        \"match\": \"[^) \\\\t\\\\n\\\\[\\\\?\\\\*\\\\|\\\\@]\",\n        \"name\": \"string.unquoted.pattern.shell string.regexp.unquoted.shell\"\n      }]\n    },\n    \"command_name_range\": {\n      \"begin\": \"\\\\G\",\n      \"beginCaptures\": {},\n      \"end\": \"(?:(?= |\\\\t|;|\\\\||&|$|\\\\n|\\\\)|\\\\`)|(?=<))\",\n      \"endCaptures\": {},\n      \"name\": \"meta.statement.command.name.shell\",\n      \"patterns\": [{\n        \"match\": \"(?<!\\\\w)(?:continue|return|break)(?!\\\\w)\",\n        \"name\": \"entity.name.function.call.shell entity.name.command.shell keyword.control.$0.shell\"\n      }, {\n        \"match\": \"(?<!\\\\w)(?:(?:unfunction|continue|autoload|unsetopt|bindkey|builtin|getopts|command|declare|unalias|history|unlimit|typeset|suspend|source|printf|unhash|disown|ulimit|return|which|alias|break|false|print|shift|times|umask|umask|unset|read|type|exec|eval|wait|echo|dirs|jobs|kill|hash|stat|exit|test|trap|true|let|set|pwd|cd|fg|bg|fc|:|\\\\.)(?!\\\\/))(?!\\\\w)(?!-)\",\n        \"name\": \"entity.name.function.call.shell entity.name.command.shell support.function.builtin.shell\"\n      }, {\n        \"include\": \"#variable\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"entity.name.function.call.shell entity.name.command.shell\"\n          }\n        },\n        \"match\": `(?:(?<!\\\\w)(?<=\\\\G|'|\"|\\\\}|\\\\))([^ \\\\n\\\\t\\\\r\"'=;&\\\\|\\`\\\\)\\\\{<>]+))`\n      }, {\n        \"begin\": `(?:(?:\\\\G|(?<! |\\\\t|;|\\\\||&|\\\\n|\\\\{|#))(?:(\\\\$?)((?:(\")|(')))))`,\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"meta.statement.command.name.quoted.shell punctuation.definition.string.shell entity.name.function.call.shell entity.name.command.shell\"\n          },\n          \"2\": {},\n          \"3\": {\n            \"name\": \"meta.statement.command.name.quoted.shell string.quoted.double.shell punctuation.definition.string.begin.shell entity.name.function.call.shell entity.name.command.shell\"\n          },\n          \"4\": {\n            \"name\": \"meta.statement.command.name.quoted.shell string.quoted.single.shell punctuation.definition.string.begin.shell entity.name.function.call.shell entity.name.command.shell\"\n          }\n        },\n        \"end\": \"(?<!\\\\G)(?<=(?:\\\\2))\",\n        \"endCaptures\": {},\n        \"patterns\": [{\n          \"include\": \"#continuation_of_single_quoted_command_name\"\n        }, {\n          \"include\": \"#continuation_of_double_quoted_command_name\"\n        }]\n      }, {\n        \"include\": \"#line_continuation\"\n      }, {\n        \"include\": \"#simple_unquoted\"\n      }]\n    },\n    \"command_statement\": {\n      \"begin\": \"(?:(?:[ \\\\t]*+)(?:(?!(?:!|&|\\\\||\\\\(|\\\\)|\\\\{|\\\\[|<|>|#|\\\\n|$|;|[ \\\\t]))(?!nocorrect |nocorrect\t|nocorrect$|readonly |readonly\t|readonly$|function |function\t|function$|foreach |foreach\t|foreach$|coproc |coproc\t|coproc$|logout |logout\t|logout$|export |export\t|export$|select |select\t|select$|repeat |repeat\t|repeat$|pushd |pushd\t|pushd$|until |until\t|until$|while |while\t|while$|local |local\t|local$|case |case\t|case$|done |done\t|done$|elif |elif\t|elif$|else |else\t|else$|esac |esac\t|esac$|popd |popd\t|popd$|then |then\t|then$|time |time\t|time$|for |for\t|for$|end |end\t|end$|fi |fi\t|fi$|do |do\t|do$|in |in\t|in$|if |if\t|if$)(?!\\\\\\\\\\\\n?$)))\",\n      \"beginCaptures\": {},\n      \"end\": \"(?=;|\\\\||&|\\\\n|\\\\)|\\\\`|\\\\{|\\\\}|[ \\\\t]*#|\\\\])(?<!\\\\\\\\)\",\n      \"endCaptures\": {},\n      \"name\": \"meta.statement.command.shell\",\n      \"patterns\": [{\n        \"include\": \"#command_name_range\"\n      }, {\n        \"include\": \"#line_continuation\"\n      }, {\n        \"include\": \"#option\"\n      }, {\n        \"include\": \"#argument\"\n      }, {\n        \"include\": \"#string\"\n      }, {\n        \"include\": \"#heredoc\"\n      }]\n    },\n    \"comment\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"comment.line.number-sign.shell meta.shebang.shell\"\n        },\n        \"2\": {\n          \"name\": \"punctuation.definition.comment.shebang.shell\"\n        },\n        \"3\": {\n          \"name\": \"comment.line.number-sign.shell\"\n        },\n        \"4\": {\n          \"name\": \"punctuation.definition.comment.shell\"\n        }\n      },\n      \"match\": \"(?:(?:^|(?:[ \\\\t]++))(?:((?:(#!)(?:.*)))|((?:(#)(?:.*)))))\"\n    },\n    \"comments\": {\n      \"patterns\": [{\n        \"include\": \"#block_comment\"\n      }, {\n        \"include\": \"#line_comment\"\n      }]\n    },\n    \"compound-command\": {\n      \"patterns\": [{\n        \"begin\": \"\\\\[\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.logical-expression.shell\"\n          }\n        },\n        \"end\": \"\\\\]\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.logical-expression.shell\"\n          }\n        },\n        \"name\": \"meta.scope.logical-expression.shell\",\n        \"patterns\": [{\n          \"include\": \"#logical-expression\"\n        }, {\n          \"include\": \"#initial_context\"\n        }]\n      }, {\n        \"begin\": \"(?<=\\\\s|^){(?=\\\\s|$)\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.group.shell\"\n          }\n        },\n        \"end\": \"(?<=^|;)\\\\s*(})\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.group.shell\"\n          }\n        },\n        \"name\": \"meta.scope.group.shell\",\n        \"patterns\": [{\n          \"include\": \"#initial_context\"\n        }]\n      }]\n    },\n    \"continuation_of_double_quoted_command_name\": {\n      \"begin\": '(?:\\\\G(?<=\"))',\n      \"beginCaptures\": {},\n      \"contentName\": \"meta.statement.command.name.continuation string.quoted.double entity.name.function.call entity.name.command\",\n      \"end\": '\"',\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"string.quoted.double.shell punctuation.definition.string.end.shell entity.name.function.call.shell entity.name.command.shell\"\n        }\n      },\n      \"patterns\": [{\n        \"match\": '\\\\\\\\[\\\\$\\\\n`\"\\\\\\\\]',\n        \"name\": \"constant.character.escape.shell\"\n      }, {\n        \"include\": \"#variable\"\n      }, {\n        \"include\": \"#interpolation\"\n      }]\n    },\n    \"continuation_of_single_quoted_command_name\": {\n      \"begin\": \"(?:\\\\G(?<='))\",\n      \"beginCaptures\": {},\n      \"contentName\": \"meta.statement.command.name.continuation string.quoted.single entity.name.function.call entity.name.command\",\n      \"end\": \"'\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"string.quoted.single.shell punctuation.definition.string.end.shell entity.name.function.call.shell entity.name.command.shell\"\n        }\n      }\n    },\n    \"custom_command_names\": {\n      \"patterns\": []\n    },\n    \"custom_commands\": {\n      \"patterns\": []\n    },\n    \"double_quote_context\": {\n      \"patterns\": [{\n        \"match\": '\\\\\\\\[\\\\$`\"\\\\\\\\\\\\n]',\n        \"name\": \"constant.character.escape.shell\"\n      }, {\n        \"include\": \"#variable\"\n      }, {\n        \"include\": \"#interpolation\"\n      }]\n    },\n    \"double_quote_escape_char\": {\n      \"match\": '\\\\\\\\[\\\\$`\"\\\\\\\\\\\\n]',\n      \"name\": \"constant.character.escape.shell\"\n    },\n    \"floating_keyword\": {\n      \"patterns\": [{\n        \"match\": \"(?<=^|;|&| |\\\\t)(?:then|elif|else|done|end|do|if|fi)(?= |\\\\t|;|&|$)\",\n        \"name\": \"keyword.control.$0.shell\"\n      }]\n    },\n    \"for_statement\": {\n      \"patterns\": [{\n        \"begin\": \"(?:(\\\\bfor\\\\b)(?:(?:[ \\\\t]*+)((?<!\\\\w)(?:[a-zA-Z_0-9-]+)(?!\\\\w))(?:[ \\\\t]*+)(\\\\bin\\\\b)))\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.for.shell\"\n          },\n          \"2\": {\n            \"name\": \"variable.other.for.shell\"\n          },\n          \"3\": {\n            \"name\": \"keyword.control.in.shell\"\n          }\n        },\n        \"end\": \"(?=;|\\\\||&|\\\\n|\\\\)|\\\\`|\\\\{|\\\\}|[ \\\\t]*#|\\\\])(?<!\\\\\\\\)\",\n        \"endCaptures\": {},\n        \"name\": \"meta.for.in.shell\",\n        \"patterns\": [{\n          \"include\": \"#string\"\n        }, {\n          \"include\": \"#simple_unquoted\"\n        }, {\n          \"include\": \"#normal_context\"\n        }]\n      }, {\n        \"begin\": \"(\\\\bfor\\\\b)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.for.shell\"\n          }\n        },\n        \"end\": \"(?=;|\\\\||&|\\\\n|\\\\)|\\\\`|\\\\{|\\\\}|[ \\\\t]*#|\\\\])(?<!\\\\\\\\)\",\n        \"endCaptures\": {},\n        \"name\": \"meta.for.shell\",\n        \"patterns\": [{\n          \"include\": \"#arithmetic_double\"\n        }, {\n          \"include\": \"#normal_context\"\n        }]\n      }]\n    },\n    \"function_definition\": {\n      \"applyEndPatternLast\": 1,\n      \"begin\": `(?:[ \\\\t]*+)(?:(?:(\\\\bfunction\\\\b)(?:[ \\\\t]*+)([^ \\\\t\\\\n\\\\r\\\\(\\\\)=\"']+)(?:(?:(\\\\()(?:[ \\\\t]*+)(\\\\)))?))|(?:([^ \\\\t\\\\n\\\\r\\\\(\\\\)=\"']+)(?:[ \\\\t]*+)(\\\\()(?:[ \\\\t]*+)(\\\\))))`,\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"storage.type.function.shell\"\n        },\n        \"2\": {\n          \"name\": \"entity.name.function.shell\"\n        },\n        \"3\": {\n          \"name\": \"punctuation.definition.arguments.shell\"\n        },\n        \"4\": {\n          \"name\": \"punctuation.definition.arguments.shell\"\n        },\n        \"5\": {\n          \"name\": \"entity.name.function.shell\"\n        },\n        \"6\": {\n          \"name\": \"punctuation.definition.arguments.shell\"\n        },\n        \"7\": {\n          \"name\": \"punctuation.definition.arguments.shell\"\n        }\n      },\n      \"end\": \"(?<=\\\\}|\\\\))\",\n      \"endCaptures\": {},\n      \"name\": \"meta.function.shell\",\n      \"patterns\": [{\n        \"match\": \"(?:\\\\G(?:\\\\t| |\\\\n))\"\n      }, {\n        \"begin\": \"\\\\{\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.group.shell punctuation.section.function.definition.shell\"\n          }\n        },\n        \"end\": \"\\\\}\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.group.shell punctuation.section.function.definition.shell\"\n          }\n        },\n        \"name\": \"meta.function.body.shell\",\n        \"patterns\": [{\n          \"include\": \"#initial_context\"\n        }]\n      }, {\n        \"begin\": \"\\\\(\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.group.shell punctuation.section.function.definition.shell\"\n          }\n        },\n        \"end\": \"\\\\)\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.group.shell punctuation.section.function.definition.shell\"\n          }\n        },\n        \"name\": \"meta.function.body.shell\",\n        \"patterns\": [{\n          \"include\": \"#initial_context\"\n        }]\n      }, {\n        \"include\": \"#initial_context\"\n      }]\n    },\n    \"heredoc\": {\n      \"patterns\": [{\n        \"begin\": `(?:((?<!<)(?:<<-))(?:[ \\\\t]*+)(\"|')(?:[ \\\\t]*+)([^\"']+?)(?=\\\\s|;|&|<|\"|')((?:\\\\2))(.*))`,\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.operator.heredoc.shell\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.definition.string.heredoc.quote.shell\"\n          },\n          \"3\": {\n            \"name\": \"punctuation.definition.string.heredoc.delimiter.shell\"\n          },\n          \"4\": {\n            \"name\": \"punctuation.definition.string.heredoc.quote.shell\"\n          },\n          \"5\": {\n            \"patterns\": [{\n              \"include\": \"#redirect_fix\"\n            }, {\n              \"include\": \"#typical_statements\"\n            }]\n          }\n        },\n        \"contentName\": \"string.quoted.heredoc.indent.$3\",\n        \"end\": \"(?:(?:^\\\\t*)(?:\\\\3)(?=\\\\s|;|&|$))\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.heredoc.$0.shell\"\n          }\n        },\n        \"patterns\": []\n      }, {\n        \"begin\": `(?:((?<!<)(?:<<)(?!<))(?:[ \\\\t]*+)(\"|')(?:[ \\\\t]*+)([^\"']+?)(?=\\\\s|;|&|<|\"|')((?:\\\\2))(.*))`,\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.operator.heredoc.shell\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.definition.string.heredoc.quote.shell\"\n          },\n          \"3\": {\n            \"name\": \"punctuation.definition.string.heredoc.delimiter.shell\"\n          },\n          \"4\": {\n            \"name\": \"punctuation.definition.string.heredoc.quote.shell\"\n          },\n          \"5\": {\n            \"patterns\": [{\n              \"include\": \"#redirect_fix\"\n            }, {\n              \"include\": \"#typical_statements\"\n            }]\n          }\n        },\n        \"contentName\": \"string.quoted.heredoc.no-indent.$3\",\n        \"end\": \"(?:^(?:\\\\3)(?=\\\\s|;|&|$))\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.heredoc.delimiter.shell\"\n          }\n        },\n        \"patterns\": []\n      }, {\n        \"begin\": `(?:((?<!<)(?:<<-))(?:[ \\\\t]*+)([^\"' \\\\t]+)(?=\\\\s|;|&|<|\"|')(.*))`,\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.operator.heredoc.shell\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.definition.string.heredoc.delimiter.shell\"\n          },\n          \"3\": {\n            \"patterns\": [{\n              \"include\": \"#redirect_fix\"\n            }, {\n              \"include\": \"#typical_statements\"\n            }]\n          }\n        },\n        \"contentName\": \"string.unquoted.heredoc.indent.$2\",\n        \"end\": \"(?:(?:^\\\\t*)(?:\\\\2)(?=\\\\s|;|&|$))\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.heredoc.delimiter.shell\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#double_quote_escape_char\"\n        }, {\n          \"include\": \"#variable\"\n        }, {\n          \"include\": \"#interpolation\"\n        }]\n      }, {\n        \"begin\": `(?:((?<!<)(?:<<)(?!<))(?:[ \\\\t]*+)([^\"' \\\\t]+)(?=\\\\s|;|&|<|\"|')(.*))`,\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.operator.heredoc.shell\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.definition.string.heredoc.delimiter.shell\"\n          },\n          \"3\": {\n            \"patterns\": [{\n              \"include\": \"#redirect_fix\"\n            }, {\n              \"include\": \"#typical_statements\"\n            }]\n          }\n        },\n        \"contentName\": \"string.unquoted.heredoc.no-indent.$2\",\n        \"end\": \"(?:^(?:\\\\2)(?=\\\\s|;|&|$))\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.heredoc.delimiter.shell\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#double_quote_escape_char\"\n        }, {\n          \"include\": \"#variable\"\n        }, {\n          \"include\": \"#interpolation\"\n        }]\n      }]\n    },\n    \"herestring\": {\n      \"patterns\": [{\n        \"begin\": \"(<<<)\\\\s*(('))\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.operator.herestring.shell\"\n          },\n          \"2\": {\n            \"name\": \"string.quoted.single.shell\"\n          },\n          \"3\": {\n            \"name\": \"punctuation.definition.string.begin.shell\"\n          }\n        },\n        \"contentName\": \"string.quoted.single.shell\",\n        \"end\": \"(')\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"string.quoted.single.shell\"\n          },\n          \"1\": {\n            \"name\": \"punctuation.definition.string.end.shell\"\n          }\n        },\n        \"name\": \"meta.herestring.shell\"\n      }, {\n        \"begin\": '(<<<)\\\\s*((\"))',\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.operator.herestring.shell\"\n          },\n          \"2\": {\n            \"name\": \"string.quoted.double.shell\"\n          },\n          \"3\": {\n            \"name\": \"punctuation.definition.string.begin.shell\"\n          }\n        },\n        \"contentName\": \"string.quoted.double.shell\",\n        \"end\": '(\")',\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"string.quoted.double.shell\"\n          },\n          \"1\": {\n            \"name\": \"punctuation.definition.string.end.shell\"\n          }\n        },\n        \"name\": \"meta.herestring.shell\",\n        \"patterns\": [{\n          \"include\": \"#double_quote_context\"\n        }]\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"keyword.operator.herestring.shell\"\n          },\n          \"2\": {\n            \"name\": \"string.unquoted.herestring.shell\",\n            \"patterns\": [{\n              \"include\": \"#initial_context\"\n            }]\n          }\n        },\n        \"match\": \"(<<<)\\\\s*(([^\\\\s)\\\\\\\\]|\\\\\\\\.)+)\",\n        \"name\": \"meta.herestring.shell\"\n      }]\n    },\n    \"initial_context\": {\n      \"patterns\": [{\n        \"include\": \"#comment\"\n      }, {\n        \"include\": \"#pipeline\"\n      }, {\n        \"include\": \"#normal_statement_seperator\"\n      }, {\n        \"include\": \"#logical_expression_double\"\n      }, {\n        \"include\": \"#logical_expression_single\"\n      }, {\n        \"include\": \"#assignment_statement\"\n      }, {\n        \"include\": \"#case_statement\"\n      }, {\n        \"include\": \"#for_statement\"\n      }, {\n        \"include\": \"#loop\"\n      }, {\n        \"include\": \"#function_definition\"\n      }, {\n        \"include\": \"#line_continuation\"\n      }, {\n        \"include\": \"#arithmetic_double\"\n      }, {\n        \"include\": \"#misc_ranges\"\n      }, {\n        \"include\": \"#variable\"\n      }, {\n        \"include\": \"#interpolation\"\n      }, {\n        \"include\": \"#heredoc\"\n      }, {\n        \"include\": \"#herestring\"\n      }, {\n        \"include\": \"#redirection\"\n      }, {\n        \"include\": \"#pathname\"\n      }, {\n        \"include\": \"#floating_keyword\"\n      }, {\n        \"include\": \"#alias_statement\"\n      }, {\n        \"include\": \"#normal_statement\"\n      }, {\n        \"include\": \"#string\"\n      }, {\n        \"include\": \"#support\"\n      }]\n    },\n    \"inline_comment\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"comment.block.shell punctuation.definition.comment.begin.shell\"\n        },\n        \"2\": {\n          \"name\": \"comment.block.shell\"\n        },\n        \"3\": {\n          \"patterns\": [{\n            \"match\": \"\\\\*\\\\/\",\n            \"name\": \"comment.block.shell punctuation.definition.comment.end.shell\"\n          }, {\n            \"match\": \"\\\\*\",\n            \"name\": \"comment.block.shell\"\n          }]\n        }\n      },\n      \"match\": \"(\\\\/\\\\*)((?:(?:[^\\\\*]|(?:(?:\\\\*++)[^\\\\/]))*+)((?:(?:\\\\*++)\\\\/)))\"\n    },\n    \"interpolation\": {\n      \"patterns\": [{\n        \"include\": \"#arithmetic_dollar\"\n      }, {\n        \"include\": \"#subshell_dollar\"\n      }, {\n        \"begin\": \"`\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.evaluation.backticks.shell\"\n          }\n        },\n        \"end\": \"`\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.evaluation.backticks.shell\"\n          }\n        },\n        \"name\": \"string.interpolated.backtick.shell\",\n        \"patterns\": [{\n          \"match\": \"\\\\\\\\[`\\\\\\\\$]\",\n          \"name\": \"constant.character.escape.shell\"\n        }, {\n          \"begin\": \"(?<=\\\\W)(?=#)(?!#{)\",\n          \"beginCaptures\": {\n            \"1\": {\n              \"name\": \"punctuation.whitespace.comment.leading.shell\"\n            }\n          },\n          \"end\": \"(?!\\\\G)\",\n          \"patterns\": [{\n            \"begin\": \"#\",\n            \"beginCaptures\": {\n              \"0\": {\n                \"name\": \"punctuation.definition.comment.shell\"\n              }\n            },\n            \"end\": \"(?=`)\",\n            \"name\": \"comment.line.number-sign.shell\"\n          }]\n        }, {\n          \"include\": \"#initial_context\"\n        }]\n      }]\n    },\n    \"keyword\": {\n      \"patterns\": [{\n        \"match\": \"(?<=^|;|&|\\\\s)(then|else|elif|fi|for|in|do|done|select|continue|esac|while|until|return)(?=\\\\s|;|&|$)\",\n        \"name\": \"keyword.control.shell\"\n      }, {\n        \"match\": \"(?<=^|;|&|\\\\s)(?:export|declare|typeset|local|readonly)(?=\\\\s|;|&|$)\",\n        \"name\": \"storage.modifier.shell\"\n      }]\n    },\n    \"line_comment\": {\n      \"begin\": \"(?:\\\\s*+)(\\\\/\\\\/)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.definition.comment.shell\"\n        }\n      },\n      \"end\": \"(?<=\\\\n)(?<!\\\\\\\\\\\\n)\",\n      \"endCaptures\": {},\n      \"name\": \"comment.line.double-slash.shell\",\n      \"patterns\": [{\n        \"include\": \"#line_continuation_character\"\n      }]\n    },\n    \"line_continuation\": {\n      \"match\": \"\\\\\\\\(?=\\\\n)\",\n      \"name\": \"constant.character.escape.line-continuation.shell\"\n    },\n    \"logical-expression\": {\n      \"patterns\": [{\n        \"include\": \"#arithmetic_no_dollar\"\n      }, {\n        \"comment\": \"do we want a special rule for ( expr )?\",\n        \"match\": \"=[=~]?|!=?|<|>|&&|\\\\|\\\\|\",\n        \"name\": \"keyword.operator.logical.shell\"\n      }, {\n        \"match\": \"(?<!\\\\S)-(nt|ot|ef|eq|ne|l[te]|g[te]|[a-hknoprstuwxzOGLSN])\\\\b\",\n        \"name\": \"keyword.operator.logical.shell\"\n      }]\n    },\n    \"logical_expression_context\": {\n      \"patterns\": [{\n        \"include\": \"#regex_comparison\"\n      }, {\n        \"include\": \"#arithmetic_no_dollar\"\n      }, {\n        \"include\": \"#logical-expression\"\n      }, {\n        \"include\": \"#logical_expression_single\"\n      }, {\n        \"include\": \"#logical_expression_double\"\n      }, {\n        \"include\": \"#comment\"\n      }, {\n        \"include\": \"#boolean\"\n      }, {\n        \"include\": \"#redirect_number\"\n      }, {\n        \"include\": \"#numeric_literal\"\n      }, {\n        \"include\": \"#pipeline\"\n      }, {\n        \"include\": \"#normal_statement_seperator\"\n      }, {\n        \"include\": \"#string\"\n      }, {\n        \"include\": \"#variable\"\n      }, {\n        \"include\": \"#interpolation\"\n      }, {\n        \"include\": \"#heredoc\"\n      }, {\n        \"include\": \"#herestring\"\n      }, {\n        \"include\": \"#pathname\"\n      }, {\n        \"include\": \"#floating_keyword\"\n      }, {\n        \"include\": \"#support\"\n      }]\n    },\n    \"logical_expression_double\": {\n      \"begin\": \"\\\\[\\\\[\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.logical-expression.shell\"\n        }\n      },\n      \"end\": \"\\\\]\\\\]\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.logical-expression.shell\"\n        }\n      },\n      \"name\": \"meta.scope.logical-expression.shell\",\n      \"patterns\": [{\n        \"include\": \"#logical_expression_context\"\n      }]\n    },\n    \"logical_expression_single\": {\n      \"begin\": \"\\\\[\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.logical-expression.shell\"\n        }\n      },\n      \"end\": \"\\\\]\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.logical-expression.shell\"\n        }\n      },\n      \"name\": \"meta.scope.logical-expression.shell\",\n      \"patterns\": [{\n        \"include\": \"#logical_expression_context\"\n      }]\n    },\n    \"loop\": {\n      \"patterns\": [{\n        \"begin\": \"(?<=^|;|&|\\\\s)(for)\\\\s+(.+?)\\\\s+(in)(?=\\\\s|;|&|$)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.shell\"\n          },\n          \"2\": {\n            \"name\": \"variable.other.loop.shell\",\n            \"patterns\": [{\n              \"include\": \"#string\"\n            }]\n          },\n          \"3\": {\n            \"name\": \"keyword.control.shell\"\n          }\n        },\n        \"end\": \"(?<=^|;|&|\\\\s)done(?=\\\\s|;|&|$|\\\\))\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"keyword.control.shell\"\n          }\n        },\n        \"name\": \"meta.scope.for-in-loop.shell\",\n        \"patterns\": [{\n          \"include\": \"#initial_context\"\n        }]\n      }, {\n        \"begin\": \"(?<=^|;|&|\\\\s)(while|until)(?=\\\\s|;|&|$)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.shell\"\n          }\n        },\n        \"end\": \"(?<=^|;|&|\\\\s)done(?=\\\\s|;|&|$|\\\\))\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"keyword.control.shell\"\n          }\n        },\n        \"name\": \"meta.scope.while-loop.shell\",\n        \"patterns\": [{\n          \"include\": \"#initial_context\"\n        }]\n      }, {\n        \"begin\": \"(?<=^|;|&|\\\\s)(select)\\\\s+((?:[^\\\\s\\\\\\\\]|\\\\\\\\.)+)(?=\\\\s|;|&|$)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.shell\"\n          },\n          \"2\": {\n            \"name\": \"variable.other.loop.shell\"\n          }\n        },\n        \"end\": \"(?<=^|;|&|\\\\s)(done)(?=\\\\s|;|&|$|\\\\))\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.shell\"\n          }\n        },\n        \"name\": \"meta.scope.select-block.shell\",\n        \"patterns\": [{\n          \"include\": \"#initial_context\"\n        }]\n      }, {\n        \"begin\": \"(?<=^|;|&|\\\\s)if(?=\\\\s|;|&|$)\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"keyword.control.if.shell\"\n          }\n        },\n        \"end\": \"(?<=^|;|&|\\\\s)fi(?=\\\\s|;|&|$)\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"keyword.control.fi.shell\"\n          }\n        },\n        \"name\": \"meta.scope.if-block.shell\",\n        \"patterns\": [{\n          \"include\": \"#initial_context\"\n        }]\n      }]\n    },\n    \"math\": {\n      \"patterns\": [{\n        \"include\": \"#variable\"\n      }, {\n        \"match\": \"\\\\+{1,2}|-{1,2}|!|~|\\\\*{1,2}|/|%|<[<=]?|>[>=]?|==|!=|^|\\\\|{1,2}|&{1,2}|\\\\?|\\\\:|,|=|[*/%+\\\\-&^|]=|<<=|>>=\",\n        \"name\": \"keyword.operator.arithmetic.shell\"\n      }, {\n        \"match\": \"0[xX][0-9A-Fa-f]+\",\n        \"name\": \"constant.numeric.hex.shell\"\n      }, {\n        \"match\": \";\",\n        \"name\": \"punctuation.separator.semicolon.range\"\n      }, {\n        \"match\": \"0\\\\d+\",\n        \"name\": \"constant.numeric.octal.shell\"\n      }, {\n        \"match\": \"\\\\d{1,2}#[0-9a-zA-Z@_]+\",\n        \"name\": \"constant.numeric.other.shell\"\n      }, {\n        \"match\": \"\\\\d+\",\n        \"name\": \"constant.numeric.integer.shell\"\n      }, {\n        \"match\": \"(?<!\\\\w)(?:[a-zA-Z_0-9]+)(?!\\\\w)\",\n        \"name\": \"variable.other.normal.shell\"\n      }]\n    },\n    \"math_operators\": {\n      \"patterns\": [{\n        \"match\": \"\\\\+{1,2}|-{1,2}|!|~|\\\\*{1,2}|/|%|<[<=]?|>[>=]?|==|!=|^|\\\\|{1,2}|&{1,2}|\\\\?|\\\\:|,|=|[*/%+\\\\-&^|]=|<<=|>>=\",\n        \"name\": \"keyword.operator.arithmetic.shell\"\n      }, {\n        \"match\": \"0[xX][0-9A-Fa-f]+\",\n        \"name\": \"constant.numeric.hex.shell\"\n      }, {\n        \"match\": \"0\\\\d+\",\n        \"name\": \"constant.numeric.octal.shell\"\n      }, {\n        \"match\": \"\\\\d{1,2}#[0-9a-zA-Z@_]+\",\n        \"name\": \"constant.numeric.other.shell\"\n      }, {\n        \"match\": \"\\\\d+\",\n        \"name\": \"constant.numeric.integer.shell\"\n      }]\n    },\n    \"misc_ranges\": {\n      \"patterns\": [{\n        \"include\": \"#logical_expression_single\"\n      }, {\n        \"include\": \"#logical_expression_double\"\n      }, {\n        \"include\": \"#subshell_dollar\"\n      }, {\n        \"begin\": \"(?<![^ \\\\t])({)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.group.shell\"\n          }\n        },\n        \"end\": \"}\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.group.shell\"\n          }\n        },\n        \"name\": \"meta.scope.group.shell\",\n        \"patterns\": [{\n          \"include\": \"#initial_context\"\n        }]\n      }]\n    },\n    \"modified_assignment_statement\": {\n      \"begin\": \"(?<=^|;|&|[ \\\\t])(?:readonly|declare|typeset|export|local)(?=[ \\\\t]|;|&|$)\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"storage.modifier.$0.shell\"\n        }\n      },\n      \"end\": \"(?=;|\\\\||&|\\\\n|\\\\)|\\\\`|\\\\{|\\\\}|[ \\\\t]*#|\\\\])(?<!\\\\\\\\)\",\n      \"endCaptures\": {},\n      \"name\": \"meta.statement.shell meta.expression.assignment.modified.shell\",\n      \"patterns\": [{\n        \"match\": \"(?<!\\\\w)-\\\\w+\\\\b\",\n        \"name\": \"string.unquoted.argument.shell constant.other.option.shell\"\n      }, {\n        \"include\": \"#array_value\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"variable.other.assignment.shell\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.definition.array.access.shell\"\n          },\n          \"3\": {\n            \"name\": \"variable.other.assignment.shell\"\n          },\n          \"4\": {\n            \"name\": \"constant.numeric.shell constant.numeric.integer.shell\"\n          },\n          \"5\": {\n            \"name\": \"punctuation.definition.array.access.shell\"\n          },\n          \"6\": {\n            \"name\": \"keyword.operator.assignment.shell\"\n          },\n          \"7\": {\n            \"name\": \"keyword.operator.assignment.compound.shell\"\n          },\n          \"8\": {\n            \"name\": \"keyword.operator.assignment.compound.shell\"\n          },\n          \"9\": {\n            \"name\": \"constant.numeric.shell constant.numeric.hex.shell\"\n          },\n          \"10\": {\n            \"name\": \"constant.numeric.shell constant.numeric.octal.shell\"\n          },\n          \"11\": {\n            \"name\": \"constant.numeric.shell constant.numeric.other.shell\"\n          },\n          \"12\": {\n            \"name\": \"constant.numeric.shell constant.numeric.decimal.shell\"\n          },\n          \"13\": {\n            \"name\": \"constant.numeric.shell constant.numeric.version.shell\"\n          },\n          \"14\": {\n            \"name\": \"constant.numeric.shell constant.numeric.integer.shell\"\n          }\n        },\n        \"match\": \"(?:((?<!\\\\w)(?:[a-zA-Z_0-9-]+)(?!\\\\w))(?:(?:(\\\\[)((?:(?:(?:(?:\\\\$?)(?:(?<!\\\\w)(?:[a-zA-Z_0-9-]+)(?!\\\\w))|@)|\\\\*)|(-?\\\\d+)))(\\\\]))?)(?:(?:(?:(\\\\=)|(\\\\+\\\\=))|(\\\\-\\\\=))?)(?:(?:(?<==| |\\\\t|^|\\\\{|\\\\(|\\\\[)(?:(?:(?:(?:(?:(0[xX][0-9A-Fa-f]+)|(0\\\\d+))|(\\\\d{1,2}#[0-9a-zA-Z@_]+))|(-?\\\\d+(?:\\\\.\\\\d+)))|(-?\\\\d+(?:\\\\.\\\\d+)+))|(-?\\\\d+))(?= |\\\\t|$|\\\\}|\\\\)|;))?))\"\n      }, {\n        \"include\": \"#normal_context\"\n      }]\n    },\n    \"modifiers\": {\n      \"match\": \"(?<=^|;|&|[ \\\\t])(?:readonly|declare|typeset|export|local)(?=[ \\\\t]|;|&|$)\",\n      \"name\": \"storage.modifier.$0.shell\"\n    },\n    \"normal_assignment_statement\": {\n      \"begin\": \"(?:[ \\\\t]*+)(?:((?<!\\\\w)(?:[a-zA-Z_0-9-]+)(?!\\\\w))(?:(?:(\\\\[)((?:(?:(?:(?:\\\\$?)(?:(?<!\\\\w)(?:[a-zA-Z_0-9-]+)(?!\\\\w))|@)|\\\\*)|(-?\\\\d+)))(\\\\]))?))(?:(?:(\\\\=)|(\\\\+\\\\=))|(\\\\-\\\\=))\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"variable.other.assignment.shell\"\n        },\n        \"2\": {\n          \"name\": \"punctuation.definition.array.access.shell\"\n        },\n        \"3\": {\n          \"name\": \"variable.other.assignment.shell\"\n        },\n        \"4\": {\n          \"name\": \"constant.numeric.shell constant.numeric.integer.shell\"\n        },\n        \"5\": {\n          \"name\": \"punctuation.definition.array.access.shell\"\n        },\n        \"6\": {\n          \"name\": \"keyword.operator.assignment.shell\"\n        },\n        \"7\": {\n          \"name\": \"keyword.operator.assignment.compound.shell\"\n        },\n        \"8\": {\n          \"name\": \"keyword.operator.assignment.compound.shell\"\n        }\n      },\n      \"end\": \"(?=;|\\\\||&|\\\\n|\\\\)|\\\\`|\\\\{|\\\\}|[ \\\\t]*#|\\\\])(?<!\\\\\\\\)\",\n      \"endCaptures\": {},\n      \"name\": \"meta.expression.assignment.shell\",\n      \"patterns\": [{\n        \"include\": \"#comment\"\n      }, {\n        \"include\": \"#string\"\n      }, {\n        \"include\": \"#normal_assignment_statement\"\n      }, {\n        \"begin\": \"(?<= |\\\\t)(?! |\\\\t|\\\\w+=)\",\n        \"beginCaptures\": {},\n        \"end\": \"(?=;|\\\\||&|\\\\n|\\\\)|\\\\`|\\\\{|\\\\}|[ \\\\t]*#|\\\\])(?<!\\\\\\\\)\",\n        \"endCaptures\": {},\n        \"name\": \"meta.statement.command.env.shell\",\n        \"patterns\": [{\n          \"include\": \"#command_name_range\"\n        }, {\n          \"include\": \"#line_continuation\"\n        }, {\n          \"include\": \"#option\"\n        }, {\n          \"include\": \"#argument\"\n        }, {\n          \"include\": \"#string\"\n        }]\n      }, {\n        \"include\": \"#simple_unquoted\"\n      }, {\n        \"include\": \"#normal_context\"\n      }]\n    },\n    \"normal_context\": {\n      \"patterns\": [{\n        \"include\": \"#comment\"\n      }, {\n        \"include\": \"#pipeline\"\n      }, {\n        \"include\": \"#normal_statement_seperator\"\n      }, {\n        \"include\": \"#misc_ranges\"\n      }, {\n        \"include\": \"#boolean\"\n      }, {\n        \"include\": \"#redirect_number\"\n      }, {\n        \"include\": \"#numeric_literal\"\n      }, {\n        \"include\": \"#string\"\n      }, {\n        \"include\": \"#variable\"\n      }, {\n        \"include\": \"#interpolation\"\n      }, {\n        \"include\": \"#heredoc\"\n      }, {\n        \"include\": \"#herestring\"\n      }, {\n        \"include\": \"#redirection\"\n      }, {\n        \"include\": \"#pathname\"\n      }, {\n        \"include\": \"#floating_keyword\"\n      }, {\n        \"include\": \"#support\"\n      }, {\n        \"include\": \"#parenthese\"\n      }]\n    },\n    \"normal_statement\": {\n      \"begin\": \"(?:(?!^[ \\\\t]*+$)(?:(?<=^until | until |\\\\tuntil |^while | while |\\\\twhile |^elif | elif |\\\\telif |^else | else |\\\\telse |^then | then |\\\\tthen |^do | do |\\\\tdo |^if | if |\\\\tif )|(?<=(?:^|;|\\\\||&|!|\\\\(|\\\\{|\\\\`)))(?:[ \\\\t]*+)(?!nocorrect\\\\W|nocorrect\\\\$|function\\\\W|function\\\\$|foreach\\\\W|foreach\\\\$|repeat\\\\W|repeat\\\\$|logout\\\\W|logout\\\\$|coproc\\\\W|coproc\\\\$|select\\\\W|select\\\\$|while\\\\W|while\\\\$|pushd\\\\W|pushd\\\\$|until\\\\W|until\\\\$|case\\\\W|case\\\\$|done\\\\W|done\\\\$|elif\\\\W|elif\\\\$|else\\\\W|else\\\\$|esac\\\\W|esac\\\\$|popd\\\\W|popd\\\\$|then\\\\W|then\\\\$|time\\\\W|time\\\\$|for\\\\W|for\\\\$|end\\\\W|end\\\\$|fi\\\\W|fi\\\\$|do\\\\W|do\\\\$|in\\\\W|in\\\\$|if\\\\W|if\\\\$))\",\n      \"beginCaptures\": {},\n      \"end\": \"(?=;|\\\\||&|\\\\n|\\\\)|\\\\`|\\\\{|\\\\}|[ \\\\t]*#|\\\\])(?<!\\\\\\\\)\",\n      \"endCaptures\": {},\n      \"name\": \"meta.statement.shell\",\n      \"patterns\": [{\n        \"include\": \"#typical_statements\"\n      }]\n    },\n    \"normal_statement_seperator\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"punctuation.terminator.statement.semicolon.shell\"\n        },\n        \"2\": {\n          \"name\": \"punctuation.separator.statement.and.shell\"\n        },\n        \"3\": {\n          \"name\": \"punctuation.separator.statement.or.shell\"\n        },\n        \"4\": {\n          \"name\": \"punctuation.separator.statement.background.shell\"\n        }\n      },\n      \"match\": \"(?:(?:(?:(;)|(&&))|(\\\\|\\\\|))|(&))\"\n    },\n    \"numeric_literal\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"constant.numeric.shell constant.numeric.hex.shell\"\n        },\n        \"2\": {\n          \"name\": \"constant.numeric.shell constant.numeric.octal.shell\"\n        },\n        \"3\": {\n          \"name\": \"constant.numeric.shell constant.numeric.other.shell\"\n        },\n        \"4\": {\n          \"name\": \"constant.numeric.shell constant.numeric.decimal.shell\"\n        },\n        \"5\": {\n          \"name\": \"constant.numeric.shell constant.numeric.version.shell\"\n        },\n        \"6\": {\n          \"name\": \"constant.numeric.shell constant.numeric.integer.shell\"\n        }\n      },\n      \"match\": \"(?<==| |\\\\t|^|\\\\{|\\\\(|\\\\[)(?:(?:(?:(?:(?:(0[xX][0-9A-Fa-f]+)|(0\\\\d+))|(\\\\d{1,2}#[0-9a-zA-Z@_]+))|(-?\\\\d+(?:\\\\.\\\\d+)))|(-?\\\\d+(?:\\\\.\\\\d+)+))|(-?\\\\d+))(?= |\\\\t|$|\\\\}|\\\\)|;)\"\n    },\n    \"option\": {\n      \"begin\": \"(?:(?:[ \\\\t]++)(-)((?!(?:!|&|\\\\||\\\\(|\\\\)|\\\\{|\\\\[|<|>|#|\\\\n|$|;|[ \\\\t]))))\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"string.unquoted.argument.shell constant.other.option.dash.shell\"\n        },\n        \"2\": {\n          \"name\": \"string.unquoted.argument.shell constant.other.option.shell\"\n        }\n      },\n      \"contentName\": \"string.unquoted.argument constant.other.option\",\n      \"end\": \"(?:(?=[ \\\\t])|(?:(?=;|\\\\||&|\\\\n|\\\\)|\\\\`|\\\\{|\\\\}|[ \\\\t]*#|\\\\])(?<!\\\\\\\\)))\",\n      \"endCaptures\": {},\n      \"patterns\": [{\n        \"include\": \"#option_context\"\n      }]\n    },\n    \"option_context\": {\n      \"patterns\": [{\n        \"include\": \"#misc_ranges\"\n      }, {\n        \"include\": \"#string\"\n      }, {\n        \"include\": \"#variable\"\n      }, {\n        \"include\": \"#interpolation\"\n      }, {\n        \"include\": \"#heredoc\"\n      }, {\n        \"include\": \"#herestring\"\n      }, {\n        \"include\": \"#redirection\"\n      }, {\n        \"include\": \"#pathname\"\n      }, {\n        \"include\": \"#floating_keyword\"\n      }, {\n        \"include\": \"#support\"\n      }]\n    },\n    \"parenthese\": {\n      \"patterns\": [{\n        \"begin\": \"\\\\(\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.section.parenthese.shell\"\n          }\n        },\n        \"end\": \"\\\\)\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.section.parenthese.shell\"\n          }\n        },\n        \"name\": \"meta.parenthese.group.shell\",\n        \"patterns\": [{\n          \"include\": \"#initial_context\"\n        }]\n      }]\n    },\n    \"pathname\": {\n      \"patterns\": [{\n        \"match\": \"(?<=\\\\s|:|=|^)~\",\n        \"name\": \"keyword.operator.tilde.shell\"\n      }, {\n        \"match\": \"\\\\*|\\\\?\",\n        \"name\": \"keyword.operator.glob.shell\"\n      }, {\n        \"begin\": \"([?*+@!])(\\\\()\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.operator.extglob.shell\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.definition.extglob.shell\"\n          }\n        },\n        \"end\": \"\\\\)\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.extglob.shell\"\n          }\n        },\n        \"name\": \"meta.structure.extglob.shell\",\n        \"patterns\": [{\n          \"include\": \"#initial_context\"\n        }]\n      }]\n    },\n    \"pipeline\": {\n      \"patterns\": [{\n        \"match\": \"(?<=^|;|&|\\\\s)(time)(?=\\\\s|;|&|$)\",\n        \"name\": \"keyword.other.shell\"\n      }, {\n        \"match\": \"[|!]\",\n        \"name\": \"keyword.operator.pipe.shell\"\n      }]\n    },\n    \"redirect_fix\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"keyword.operator.redirect.shell\"\n        },\n        \"2\": {\n          \"name\": \"string.unquoted.argument.shell\"\n        }\n      },\n      \"match\": \"(?:(>>?)(?:[ \\\\t]*+)([^ \\\\t\\\\n>&;<>\\\\(\\\\)\\\\$`\\\\\\\\\\\"'<\\\\|]+))\"\n    },\n    \"redirect_number\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"keyword.operator.redirect.stdout.shell\"\n        },\n        \"2\": {\n          \"name\": \"keyword.operator.redirect.stderr.shell\"\n        },\n        \"3\": {\n          \"name\": \"keyword.operator.redirect.$3.shell\"\n        }\n      },\n      \"match\": \"(?<=[ \\\\t])(?:(?:(1)|(2)|(\\\\d+))(?=>))\"\n    },\n    \"redirection\": {\n      \"patterns\": [{\n        \"begin\": \"[><]\\\\(\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.begin.shell\"\n          }\n        },\n        \"end\": \"\\\\)\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.end.shell\"\n          }\n        },\n        \"name\": \"string.interpolated.process-substitution.shell\",\n        \"patterns\": [{\n          \"include\": \"#initial_context\"\n        }]\n      }, {\n        \"match\": \"(?<![<>])(&>|\\\\d*>&\\\\d*|\\\\d*(>>|>|<)|\\\\d*<&|\\\\d*<>)(?![<>])\",\n        \"name\": \"keyword.operator.redirect.shell\"\n      }]\n    },\n    \"regex_comparison\": {\n      \"match\": \"\\\\=~\",\n      \"name\": \"keyword.operator.logical.regex.shell\"\n    },\n    \"regexp\": {\n      \"patterns\": [{\n        \"match\": \"(?:.+)\"\n      }]\n    },\n    \"simple_options\": {\n      \"captures\": {\n        \"0\": {\n          \"patterns\": [{\n            \"captures\": {\n              \"1\": {\n                \"name\": \"string.unquoted.argument.shell constant.other.option.dash.shell\"\n              },\n              \"2\": {\n                \"name\": \"string.unquoted.argument.shell constant.other.option.shell\"\n              }\n            },\n            \"match\": \"(?:[ \\\\t]++)(\\\\-)(\\\\w+)\"\n          }]\n        }\n      },\n      \"match\": \"(?:(?:[ \\\\t]++)\\\\-(?:\\\\w+))*\"\n    },\n    \"simple_unquoted\": {\n      \"match\": \"[^ \\\\t\\\\n>&;<>\\\\(\\\\)\\\\$`\\\\\\\\\\\"'<\\\\|]\",\n      \"name\": \"string.unquoted.shell\"\n    },\n    \"special_expansion\": {\n      \"match\": \"!|:[-=?]?|\\\\*|@|##|#|%%|%|\\\\/\",\n      \"name\": \"keyword.operator.expansion.shell\"\n    },\n    \"start_of_command\": {\n      \"match\": \"(?:(?:[ \\\\t]*+)(?:(?!(?:!|&|\\\\||\\\\(|\\\\)|\\\\{|\\\\[|<|>|#|\\\\n|$|;|[ \\\\t]))(?!nocorrect |nocorrect\t|nocorrect$|readonly |readonly\t|readonly$|function |function\t|function$|foreach |foreach\t|foreach$|coproc |coproc\t|coproc$|logout |logout\t|logout$|export |export\t|export$|select |select\t|select$|repeat |repeat\t|repeat$|pushd |pushd\t|pushd$|until |until\t|until$|while |while\t|while$|local |local\t|local$|case |case\t|case$|done |done\t|done$|elif |elif\t|elif$|else |else\t|else$|esac |esac\t|esac$|popd |popd\t|popd$|then |then\t|then$|time |time\t|time$|for |for\t|for$|end |end\t|end$|fi |fi\t|fi$|do |do\t|do$|in |in\t|in$|if |if\t|if$)(?!\\\\\\\\\\\\n?$)))\"\n    },\n    \"string\": {\n      \"patterns\": [{\n        \"match\": \"\\\\\\\\.\",\n        \"name\": \"constant.character.escape.shell\"\n      }, {\n        \"begin\": \"'\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.begin.shell\"\n          }\n        },\n        \"end\": \"'\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.end.shell\"\n          }\n        },\n        \"name\": \"string.quoted.single.shell\"\n      }, {\n        \"begin\": '\\\\$?\"',\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.begin.shell\"\n          }\n        },\n        \"end\": '\"',\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.end.shell\"\n          }\n        },\n        \"name\": \"string.quoted.double.shell\",\n        \"patterns\": [{\n          \"match\": '\\\\\\\\[\\\\$\\\\n`\"\\\\\\\\]',\n          \"name\": \"constant.character.escape.shell\"\n        }, {\n          \"include\": \"#variable\"\n        }, {\n          \"include\": \"#interpolation\"\n        }]\n      }, {\n        \"begin\": \"\\\\$'\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.begin.shell\"\n          }\n        },\n        \"end\": \"'\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.end.shell\"\n          }\n        },\n        \"name\": \"string.quoted.single.dollar.shell\",\n        \"patterns\": [{\n          \"match\": \"\\\\\\\\(?:a|b|e|f|n|r|t|v|\\\\\\\\|')\",\n          \"name\": \"constant.character.escape.ansi-c.shell\"\n        }, {\n          \"match\": '\\\\\\\\[0-9]{3}\"',\n          \"name\": \"constant.character.escape.octal.shell\"\n        }, {\n          \"match\": '\\\\\\\\x[0-9a-fA-F]{2}\"',\n          \"name\": \"constant.character.escape.hex.shell\"\n        }, {\n          \"match\": '\\\\\\\\c.\"',\n          \"name\": \"constant.character.escape.control-char.shell\"\n        }]\n      }]\n    },\n    \"subshell_dollar\": {\n      \"patterns\": [{\n        \"begin\": \"(?:\\\\$\\\\()\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.subshell.single.shell\"\n          }\n        },\n        \"end\": \"\\\\)\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.subshell.single.shell\"\n          }\n        },\n        \"name\": \"meta.scope.subshell\",\n        \"patterns\": [{\n          \"include\": \"#parenthese\"\n        }, {\n          \"include\": \"#initial_context\"\n        }]\n      }]\n    },\n    \"support\": {\n      \"patterns\": [{\n        \"match\": \"(?<=^|;|&|\\\\s)(?::|\\\\.)(?=\\\\s|;|&|$)\",\n        \"name\": \"support.function.builtin.shell\"\n      }]\n    },\n    \"typical_statements\": {\n      \"patterns\": [{\n        \"include\": \"#assignment_statement\"\n      }, {\n        \"include\": \"#case_statement\"\n      }, {\n        \"include\": \"#for_statement\"\n      }, {\n        \"include\": \"#while_statement\"\n      }, {\n        \"include\": \"#function_definition\"\n      }, {\n        \"include\": \"#command_statement\"\n      }, {\n        \"include\": \"#line_continuation\"\n      }, {\n        \"include\": \"#arithmetic_double\"\n      }, {\n        \"include\": \"#normal_context\"\n      }]\n    },\n    \"variable\": {\n      \"patterns\": [{\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.variable.shell variable.parameter.positional.all.shell\"\n          },\n          \"2\": {\n            \"name\": \"variable.parameter.positional.all.shell\"\n          }\n        },\n        \"match\": \"(?:(\\\\$)(\\\\@(?!\\\\w)))\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.variable.shell variable.parameter.positional.shell\"\n          },\n          \"2\": {\n            \"name\": \"variable.parameter.positional.shell\"\n          }\n        },\n        \"match\": \"(?:(\\\\$)([0-9](?!\\\\w)))\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.variable.shell variable.language.special.shell\"\n          },\n          \"2\": {\n            \"name\": \"variable.language.special.shell\"\n          }\n        },\n        \"match\": \"(?:(\\\\$)([-*#?$!0_](?!\\\\w)))\"\n      }, {\n        \"begin\": \"(?:(\\\\$)(\\\\{)(?:[ \\\\t]*+)(?=\\\\d))\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.variable.shell variable.parameter.positional.shell\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.section.bracket.curly.variable.begin.shell punctuation.definition.variable.shell variable.parameter.positional.shell\"\n          }\n        },\n        \"contentName\": \"meta.parameter-expansion\",\n        \"end\": \"\\\\}\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.section.bracket.curly.variable.end.shell punctuation.definition.variable.shell variable.parameter.positional.shell\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#special_expansion\"\n        }, {\n          \"include\": \"#array_access_inline\"\n        }, {\n          \"match\": \"[0-9]+\",\n          \"name\": \"variable.parameter.positional.shell\"\n        }, {\n          \"match\": \"(?<!\\\\w)(?:[a-zA-Z_0-9-]+)(?!\\\\w)\",\n          \"name\": \"variable.other.normal.shell\"\n        }, {\n          \"include\": \"#variable\"\n        }, {\n          \"include\": \"#string\"\n        }]\n      }, {\n        \"begin\": \"(?:(\\\\$)(\\\\{))\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.variable.shell\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.section.bracket.curly.variable.begin.shell punctuation.definition.variable.shell\"\n          }\n        },\n        \"contentName\": \"meta.parameter-expansion\",\n        \"end\": \"\\\\}\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.section.bracket.curly.variable.end.shell punctuation.definition.variable.shell\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#special_expansion\"\n        }, {\n          \"include\": \"#array_access_inline\"\n        }, {\n          \"match\": \"(?<!\\\\w)(?:[a-zA-Z_0-9-]+)(?!\\\\w)\",\n          \"name\": \"variable.other.normal.shell\"\n        }, {\n          \"include\": \"#variable\"\n        }, {\n          \"include\": \"#string\"\n        }]\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.variable.shell variable.other.normal.shell\"\n          },\n          \"2\": {\n            \"name\": \"variable.other.normal.shell\"\n          }\n        },\n        \"match\": \"(?:(\\\\$)((?:\\\\w+)(?!\\\\w)))\"\n      }]\n    },\n    \"while_statement\": {\n      \"patterns\": [{\n        \"begin\": \"(\\\\bwhile\\\\b)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.while.shell\"\n          }\n        },\n        \"end\": \"(?=;|\\\\||&|\\\\n|\\\\)|\\\\`|\\\\{|\\\\}|[ \\\\t]*#|\\\\])(?<!\\\\\\\\)\",\n        \"endCaptures\": {},\n        \"name\": \"meta.while.shell\",\n        \"patterns\": [{\n          \"include\": \"#line_continuation\"\n        }, {\n          \"include\": \"#math_operators\"\n        }, {\n          \"include\": \"#option\"\n        }, {\n          \"include\": \"#simple_unquoted\"\n        }, {\n          \"include\": \"#normal_context\"\n        }, {\n          \"include\": \"#string\"\n        }]\n      }]\n    }\n  },\n  \"scopeName\": \"source.shell\",\n  \"aliases\": [\"bash\", \"sh\", \"shell\", \"zsh\"]\n});\nvar shellscript = [lang];\nexport { shellscript as default };"],
  "mappings": "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",
  "names": []
}
