{
  "version": 3,
  "sources": ["../../../../../../node_modules/shiki/dist/langs/elixir.mjs"],
  "sourcesContent": ["import html from './html.mjs';\nimport './javascript.mjs';\nimport './css.mjs';\nconst lang = Object.freeze({\n  \"displayName\": \"Elixir\",\n  \"fileTypes\": [\"ex\", \"exs\"],\n  \"firstLineMatch\": \"^#!/.*\\\\belixir\",\n  \"foldingStartMarker\": \"(after|else|catch|rescue|\\\\-\\\\>|\\\\{|\\\\[|do)\\\\s*$\",\n  \"foldingStopMarker\": \"^\\\\s*((\\\\}|\\\\]|after|else|catch|rescue)\\\\s*$|end\\\\b)\",\n  \"name\": \"elixir\",\n  \"patterns\": [{\n    \"begin\": \"\\\\b(fn)\\\\b(?!.*->)\",\n    \"beginCaptures\": {\n      \"1\": {\n        \"name\": \"keyword.control.elixir\"\n      }\n    },\n    \"end\": \"$\",\n    \"patterns\": [{\n      \"include\": \"#core_syntax\"\n    }]\n  }, {\n    \"captures\": {\n      \"1\": {\n        \"name\": \"entity.name.type.class.elixir\"\n      },\n      \"2\": {\n        \"name\": \"punctuation.separator.method.elixir\"\n      },\n      \"3\": {\n        \"name\": \"entity.name.function.elixir\"\n      }\n    },\n    \"match\": \"([A-Z]\\\\w+)\\\\s*(\\\\.)\\\\s*([a-z_]\\\\w*[!?]?)\"\n  }, {\n    \"captures\": {\n      \"1\": {\n        \"name\": \"constant.other.symbol.elixir\"\n      },\n      \"2\": {\n        \"name\": \"punctuation.separator.method.elixir\"\n      },\n      \"3\": {\n        \"name\": \"entity.name.function.elixir\"\n      }\n    },\n    \"match\": \"(\\\\:\\\\w+)\\\\s*(\\\\.)\\\\s*([_]?\\\\w*[!?]?)\"\n  }, {\n    \"captures\": {\n      \"1\": {\n        \"name\": \"keyword.operator.other.elixir\"\n      },\n      \"2\": {\n        \"name\": \"entity.name.function.elixir\"\n      }\n    },\n    \"match\": \"(\\\\|\\\\>)\\\\s*([a-z_]\\\\w*[!?]?)\"\n  }, {\n    \"match\": \"\\\\b[a-z_]\\\\w*[!?]?(?=\\\\s*\\\\.?\\\\s*\\\\()\",\n    \"name\": \"entity.name.function.elixir\"\n  }, {\n    \"begin\": \"\\\\b(fn)\\\\b(?=.*->)\",\n    \"beginCaptures\": {\n      \"1\": {\n        \"name\": \"keyword.control.elixir\"\n      }\n    },\n    \"end\": \"(?>(->)|(when)|(\\\\)))\",\n    \"endCaptures\": {\n      \"1\": {\n        \"name\": \"keyword.operator.other.elixir\"\n      },\n      \"2\": {\n        \"name\": \"keyword.control.elixir\"\n      },\n      \"3\": {\n        \"name\": \"punctuation.section.function.elixir\"\n      }\n    },\n    \"patterns\": [{\n      \"include\": \"#core_syntax\"\n    }]\n  }, {\n    \"include\": \"#core_syntax\"\n  }, {\n    \"begin\": `^(?=.*->)((?![^\"']*(\"|')[^\"']*->)|(?=.*->[^\"']*(\"|')[^\"']*->))((?!.*\\\\([^\\\\)]*->)|(?=[^\\\\(\\\\)]*->)|(?=\\\\s*\\\\(.*\\\\).*->))((?!.*\\\\b(fn)\\\\b)|(?=.*->.*\\\\bfn\\\\b))`,\n    \"beginCaptures\": {\n      \"1\": {\n        \"name\": \"keyword.control.elixir\"\n      }\n    },\n    \"end\": \"(?>(->)|(when)|(\\\\)))\",\n    \"endCaptures\": {\n      \"1\": {\n        \"name\": \"keyword.operator.other.elixir\"\n      },\n      \"2\": {\n        \"name\": \"keyword.control.elixir\"\n      },\n      \"3\": {\n        \"name\": \"punctuation.section.function.elixir\"\n      }\n    },\n    \"patterns\": [{\n      \"include\": \"#core_syntax\"\n    }]\n  }],\n  \"repository\": {\n    \"core_syntax\": {\n      \"patterns\": [{\n        \"begin\": \"^\\\\s*(defmodule)\\\\b\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.module.elixir\"\n          }\n        },\n        \"end\": \"\\\\b(do)\\\\b\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.module.elixir\"\n          }\n        },\n        \"name\": \"meta.module.elixir\",\n        \"patterns\": [{\n          \"match\": \"\\\\b[A-Z]\\\\w*(?=\\\\.)\",\n          \"name\": \"entity.other.inherited-class.elixir\"\n        }, {\n          \"match\": \"\\\\b[A-Z]\\\\w*\\\\b\",\n          \"name\": \"entity.name.type.class.elixir\"\n        }]\n      }, {\n        \"begin\": \"^\\\\s*(defprotocol)\\\\b\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.protocol.elixir\"\n          }\n        },\n        \"end\": \"\\\\b(do)\\\\b\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.protocol.elixir\"\n          }\n        },\n        \"name\": \"meta.protocol_declaration.elixir\",\n        \"patterns\": [{\n          \"match\": \"\\\\b[A-Z]\\\\w*\\\\b\",\n          \"name\": \"entity.name.type.protocol.elixir\"\n        }]\n      }, {\n        \"begin\": \"^\\\\s*(defimpl)\\\\b\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.protocol.elixir\"\n          }\n        },\n        \"end\": \"\\\\b(do)\\\\b\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.protocol.elixir\"\n          }\n        },\n        \"name\": \"meta.protocol_implementation.elixir\",\n        \"patterns\": [{\n          \"match\": \"\\\\b[A-Z]\\\\w*\\\\b\",\n          \"name\": \"entity.name.type.protocol.elixir\"\n        }]\n      }, {\n        \"begin\": \"^\\\\s*(def|defmacro|defdelegate|defguard)\\\\s+((?>[a-zA-Z_]\\\\w*(?>\\\\.|::))?(?>[a-zA-Z_]\\\\w*(?>[?!]|=(?!>))?|===?|>[>=]?|<=>|<[<=]?|[%&`/\\\\|]|\\\\*\\\\*?|=?~|[-+]@?|\\\\[\\\\]=?))((\\\\()|\\\\s*)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.module.elixir\"\n          },\n          \"2\": {\n            \"name\": \"entity.name.function.public.elixir\"\n          },\n          \"4\": {\n            \"name\": \"punctuation.section.function.elixir\"\n          }\n        },\n        \"end\": \"(\\\\bdo:)|(\\\\bdo\\\\b)|(?=\\\\s+(def|defn|defmacro|defdelegate|defguard)\\\\b)\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"constant.other.keywords.elixir\"\n          },\n          \"2\": {\n            \"name\": \"keyword.control.module.elixir\"\n          }\n        },\n        \"name\": \"meta.function.public.elixir\",\n        \"patterns\": [{\n          \"include\": \"$self\"\n        }, {\n          \"begin\": \"\\\\s(\\\\\\\\\\\\\\\\)\",\n          \"beginCaptures\": {\n            \"1\": {\n              \"name\": \"keyword.operator.other.elixir\"\n            }\n          },\n          \"end\": \",|\\\\)|$\",\n          \"patterns\": [{\n            \"include\": \"$self\"\n          }]\n        }, {\n          \"match\": \"\\\\b(is_atom|is_binary|is_bitstring|is_boolean|is_float|is_function|is_integer|is_list|is_map|is_nil|is_number|is_pid|is_port|is_record|is_reference|is_tuple|is_exception|abs|bit_size|byte_size|div|elem|hd|length|map_size|node|rem|round|tl|trunc|tuple_size)\\\\b\",\n          \"name\": \"keyword.control.elixir\"\n        }]\n      }, {\n        \"begin\": \"^\\\\s*(defp|defnp|defmacrop|defguardp)\\\\s+((?>[a-zA-Z_]\\\\w*(?>\\\\.|::))?(?>[a-zA-Z_]\\\\w*(?>[?!]|=(?!>))?|===?|>[>=]?|<=>|<[<=]?|[%&`/\\\\|]|\\\\*\\\\*?|=?~|[-+]@?|\\\\[\\\\]=?))((\\\\()|\\\\s*)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.module.elixir\"\n          },\n          \"2\": {\n            \"name\": \"entity.name.function.private.elixir\"\n          },\n          \"4\": {\n            \"name\": \"punctuation.section.function.elixir\"\n          }\n        },\n        \"end\": \"(\\\\bdo:)|(\\\\bdo\\\\b)|(?=\\\\s+(defp|defmacrop|defguardp)\\\\b)\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"constant.other.keywords.elixir\"\n          },\n          \"2\": {\n            \"name\": \"keyword.control.module.elixir\"\n          }\n        },\n        \"name\": \"meta.function.private.elixir\",\n        \"patterns\": [{\n          \"include\": \"$self\"\n        }, {\n          \"begin\": \"\\\\s(\\\\\\\\\\\\\\\\)\",\n          \"beginCaptures\": {\n            \"1\": {\n              \"name\": \"keyword.operator.other.elixir\"\n            }\n          },\n          \"end\": \",|\\\\)|$\",\n          \"patterns\": [{\n            \"include\": \"$self\"\n          }]\n        }, {\n          \"match\": \"\\\\b(is_atom|is_binary|is_bitstring|is_boolean|is_float|is_function|is_integer|is_list|is_map|is_nil|is_number|is_pid|is_port|is_record|is_reference|is_tuple|is_exception|abs|bit_size|byte_size|div|elem|hd|length|map_size|node|rem|round|tl|trunc|tuple_size)\\\\b\",\n          \"name\": \"keyword.control.elixir\"\n        }]\n      }, {\n        \"begin\": '\\\\s*~L\"\"\"',\n        \"comment\": \"Leex Sigil\",\n        \"end\": '\\\\s*\"\"\"',\n        \"name\": \"sigil.leex\",\n        \"patterns\": [{\n          \"include\": \"text.elixir\"\n        }, {\n          \"include\": \"text.html.basic\"\n        }]\n      }, {\n        \"begin\": '\\\\s*~H\"\"\"',\n        \"comment\": \"HEEx Sigil\",\n        \"end\": '\\\\s*\"\"\"',\n        \"name\": \"sigil.heex\",\n        \"patterns\": [{\n          \"include\": \"text.elixir\"\n        }, {\n          \"include\": \"text.html.basic\"\n        }]\n      }, {\n        \"begin\": '@(module|type)?doc (~[a-z])?\"\"\"',\n        \"comment\": \"@doc with heredocs is treated as documentation\",\n        \"end\": '\\\\s*\"\"\"',\n        \"name\": \"comment.block.documentation.heredoc\",\n        \"patterns\": [{\n          \"include\": \"#interpolated_elixir\"\n        }, {\n          \"include\": \"#escaped_char\"\n        }]\n      }, {\n        \"begin\": '@(module|type)?doc ~[A-Z]\"\"\"',\n        \"comment\": \"@doc with heredocs is treated as documentation\",\n        \"end\": '\\\\s*\"\"\"',\n        \"name\": \"comment.block.documentation.heredoc\"\n      }, {\n        \"begin\": \"@(module|type)?doc (~[a-z])?'''\",\n        \"comment\": \"@doc with heredocs is treated as documentation\",\n        \"end\": \"\\\\s*'''\",\n        \"name\": \"comment.block.documentation.heredoc\",\n        \"patterns\": [{\n          \"include\": \"#interpolated_elixir\"\n        }, {\n          \"include\": \"#escaped_char\"\n        }]\n      }, {\n        \"begin\": \"@(module|type)?doc ~[A-Z]'''\",\n        \"comment\": \"@doc with heredocs is treated as documentation\",\n        \"end\": \"\\\\s*'''\",\n        \"name\": \"comment.block.documentation.heredoc\"\n      }, {\n        \"comment\": \"@doc false is treated as documentation\",\n        \"match\": \"@(module|type)?doc false\",\n        \"name\": \"comment.block.documentation.false\"\n      }, {\n        \"begin\": '@(module|type)?doc \"',\n        \"comment\": \"@doc with string is treated as documentation\",\n        \"end\": '\"',\n        \"name\": \"comment.block.documentation.string\",\n        \"patterns\": [{\n          \"include\": \"#interpolated_elixir\"\n        }, {\n          \"include\": \"#escaped_char\"\n        }]\n      }, {\n        \"match\": \"(?<!\\\\.)\\\\b(do|end|case|bc|lc|for|if|cond|unless|try|receive|fn|defmodule|defp?|defprotocol|defimpl|defrecord|defstruct|defnp?|defmacrop?|defguardp?|defdelegate|defexception|defoverridable|exit|after|rescue|catch|else|raise|reraise|throw|import|require|alias|use|quote|unquote|super|with)\\\\b(?![?!:])\",\n        \"name\": \"keyword.control.elixir\"\n      }, {\n        \"comment\": \" as above, just doesn't need a 'end' and does a logic operation\",\n        \"match\": \"(?<!\\\\.)\\\\b(and|not|or|when|xor|in)\\\\b\",\n        \"name\": \"keyword.operator.elixir\"\n      }, {\n        \"match\": \"\\\\b[A-Z]\\\\w*\\\\b\",\n        \"name\": \"entity.name.type.class.elixir\"\n      }, {\n        \"match\": \"\\\\b(nil|true|false)\\\\b(?![?!])\",\n        \"name\": \"constant.language.elixir\"\n      }, {\n        \"match\": \"\\\\b(__(CALLER|ENV|MODULE|DIR|STACKTRACE)__)\\\\b(?![?!])\",\n        \"name\": \"variable.language.elixir\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.variable.elixir\"\n          }\n        },\n        \"match\": \"(@)[a-zA-Z_]\\\\w*\",\n        \"name\": \"variable.other.readwrite.module.elixir\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.variable.elixir\"\n          }\n        },\n        \"match\": \"(&)\\\\d+\",\n        \"name\": \"variable.other.anonymous.elixir\"\n      }, {\n        \"match\": \"&(?![&])\",\n        \"name\": \"variable.other.anonymous.elixir\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.variable.elixir\"\n          }\n        },\n        \"match\": \"\\\\^[a-z_]\\\\w*\",\n        \"name\": \"variable.other.capture.elixir\"\n      }, {\n        \"match\": \"\\\\b0x[0-9A-Fa-f](?>_?[0-9A-Fa-f])*\\\\b\",\n        \"name\": \"constant.numeric.hex.elixir\"\n      }, {\n        \"match\": \"\\\\b\\\\d(?>_?\\\\d)*(\\\\.(?![^[:space:][:digit:]])(?>_?\\\\d)+)([eE][-+]?\\\\d(?>_?\\\\d)*)?\\\\b\",\n        \"name\": \"constant.numeric.float.elixir\"\n      }, {\n        \"match\": \"\\\\b\\\\d(?>_?\\\\d)*\\\\b\",\n        \"name\": \"constant.numeric.integer.elixir\"\n      }, {\n        \"match\": \"\\\\b0b[01](?>_?[01])*\\\\b\",\n        \"name\": \"constant.numeric.binary.elixir\"\n      }, {\n        \"match\": \"\\\\b0o[0-7](?>_?[0-7])*\\\\b\",\n        \"name\": \"constant.numeric.octal.elixir\"\n      }, {\n        \"begin\": \":'\",\n        \"captures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.constant.elixir\"\n          }\n        },\n        \"end\": \"'\",\n        \"name\": \"constant.other.symbol.single-quoted.elixir\",\n        \"patterns\": [{\n          \"include\": \"#interpolated_elixir\"\n        }, {\n          \"include\": \"#escaped_char\"\n        }]\n      }, {\n        \"begin\": ':\"',\n        \"captures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.constant.elixir\"\n          }\n        },\n        \"end\": '\"',\n        \"name\": \"constant.other.symbol.double-quoted.elixir\",\n        \"patterns\": [{\n          \"include\": \"#interpolated_elixir\"\n        }, {\n          \"include\": \"#escaped_char\"\n        }]\n      }, {\n        \"begin\": \"(?>''')\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.begin.elixir\"\n          }\n        },\n        \"comment\": \"Single-quoted heredocs\",\n        \"end\": \"^\\\\s*'''\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.end.elixir\"\n          }\n        },\n        \"name\": \"string.quoted.single.heredoc.elixir\",\n        \"patterns\": [{\n          \"include\": \"#interpolated_elixir\"\n        }, {\n          \"include\": \"#escaped_char\"\n        }]\n      }, {\n        \"begin\": \"'\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.begin.elixir\"\n          }\n        },\n        \"comment\": \"single quoted string (allows for interpolation)\",\n        \"end\": \"'\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.end.elixir\"\n          }\n        },\n        \"name\": \"string.quoted.single.elixir\",\n        \"patterns\": [{\n          \"include\": \"#interpolated_elixir\"\n        }, {\n          \"include\": \"#escaped_char\"\n        }]\n      }, {\n        \"begin\": '(?>\"\"\")',\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.begin.elixir\"\n          }\n        },\n        \"comment\": \"Double-quoted heredocs\",\n        \"end\": '^\\\\s*\"\"\"',\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.end.elixir\"\n          }\n        },\n        \"name\": \"string.quoted.double.heredoc.elixir\",\n        \"patterns\": [{\n          \"include\": \"#interpolated_elixir\"\n        }, {\n          \"include\": \"#escaped_char\"\n        }]\n      }, {\n        \"begin\": '\"',\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.begin.elixir\"\n          }\n        },\n        \"comment\": \"double quoted string (allows for interpolation)\",\n        \"end\": '\"',\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.end.elixir\"\n          }\n        },\n        \"name\": \"string.quoted.double.elixir\",\n        \"patterns\": [{\n          \"include\": \"#interpolated_elixir\"\n        }, {\n          \"include\": \"#escaped_char\"\n        }]\n      }, {\n        \"begin\": '~[a-z](?>\"\"\")',\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.begin.elixir\"\n          }\n        },\n        \"comment\": \"Double-quoted heredocs sigils\",\n        \"end\": '^\\\\s*\"\"\"',\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.end.elixir\"\n          }\n        },\n        \"name\": \"string.quoted.other.sigil.heredoc.elixir\",\n        \"patterns\": [{\n          \"include\": \"#interpolated_elixir\"\n        }, {\n          \"include\": \"#escaped_char\"\n        }]\n      }, {\n        \"begin\": \"~[a-z]\\\\{\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.begin.elixir\"\n          }\n        },\n        \"comment\": \"sigil (allow for interpolation)\",\n        \"end\": \"\\\\}[a-z]*\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.end.elixir\"\n          }\n        },\n        \"name\": \"string.quoted.other.sigil.elixir\",\n        \"patterns\": [{\n          \"include\": \"#interpolated_elixir\"\n        }, {\n          \"include\": \"#escaped_char\"\n        }]\n      }, {\n        \"begin\": \"~[a-z]\\\\[\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.begin.elixir\"\n          }\n        },\n        \"comment\": \"sigil (allow for interpolation)\",\n        \"end\": \"\\\\][a-z]*\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.end.elixir\"\n          }\n        },\n        \"name\": \"string.quoted.other.sigil.elixir\",\n        \"patterns\": [{\n          \"include\": \"#interpolated_elixir\"\n        }, {\n          \"include\": \"#escaped_char\"\n        }]\n      }, {\n        \"begin\": \"~[a-z]\\\\<\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.begin.elixir\"\n          }\n        },\n        \"comment\": \"sigil (allow for interpolation)\",\n        \"end\": \"\\\\>[a-z]*\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.end.elixir\"\n          }\n        },\n        \"name\": \"string.quoted.other.sigil.elixir\",\n        \"patterns\": [{\n          \"include\": \"#interpolated_elixir\"\n        }, {\n          \"include\": \"#escaped_char\"\n        }]\n      }, {\n        \"begin\": \"~[a-z]\\\\(\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.begin.elixir\"\n          }\n        },\n        \"comment\": \"sigil (allow for interpolation)\",\n        \"end\": \"\\\\)[a-z]*\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.end.elixir\"\n          }\n        },\n        \"name\": \"string.quoted.other.sigil.elixir\",\n        \"patterns\": [{\n          \"include\": \"#interpolated_elixir\"\n        }, {\n          \"include\": \"#escaped_char\"\n        }]\n      }, {\n        \"begin\": \"~[a-z]([^\\\\w])\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.begin.elixir\"\n          }\n        },\n        \"comment\": \"sigil (allow for interpolation)\",\n        \"end\": \"\\\\1[a-z]*\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.end.elixir\"\n          }\n        },\n        \"name\": \"string.quoted.other.sigil.elixir\",\n        \"patterns\": [{\n          \"include\": \"#interpolated_elixir\"\n        }, {\n          \"include\": \"#escaped_char\"\n        }]\n      }, {\n        \"begin\": '~[A-Z](?>\"\"\")',\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.begin.elixir\"\n          }\n        },\n        \"comment\": \"Double-quoted heredocs sigils\",\n        \"end\": '^\\\\s*\"\"\"',\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.end.elixir\"\n          }\n        },\n        \"name\": \"string.quoted.other.sigil.heredoc.literal.elixir\"\n      }, {\n        \"begin\": \"~[A-Z]\\\\{\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.begin.elixir\"\n          }\n        },\n        \"comment\": \"sigil (without interpolation)\",\n        \"end\": \"\\\\}[a-z]*\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.end.elixir\"\n          }\n        },\n        \"name\": \"string.quoted.other.sigil.literal.elixir\"\n      }, {\n        \"begin\": \"~[A-Z]\\\\[\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.begin.elixir\"\n          }\n        },\n        \"comment\": \"sigil (without interpolation)\",\n        \"end\": \"\\\\][a-z]*\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.end.elixir\"\n          }\n        },\n        \"name\": \"string.quoted.other.sigil.literal.elixir\"\n      }, {\n        \"begin\": \"~[A-Z]\\\\<\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.begin.elixir\"\n          }\n        },\n        \"comment\": \"sigil (without interpolation)\",\n        \"end\": \"\\\\>[a-z]*\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.end.elixir\"\n          }\n        },\n        \"name\": \"string.quoted.other.sigil.literal.elixir\"\n      }, {\n        \"begin\": \"~[A-Z]\\\\(\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.begin.elixir\"\n          }\n        },\n        \"comment\": \"sigil (without interpolation)\",\n        \"end\": \"\\\\)[a-z]*\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.end.elixir\"\n          }\n        },\n        \"name\": \"string.quoted.other.sigil.literal.elixir\"\n      }, {\n        \"begin\": \"~[A-Z]([^\\\\w])\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.begin.elixir\"\n          }\n        },\n        \"comment\": \"sigil (without interpolation)\",\n        \"end\": \"\\\\1[a-z]*\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.end.elixir\"\n          }\n        },\n        \"name\": \"string.quoted.other.sigil.literal.elixir\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.constant.elixir\"\n          }\n        },\n        \"comment\": \"symbols\",\n        \"match\": \"(?<!:)(:)(?>[a-zA-Z_][\\\\w@]*(?>[?!]|=(?![>=]))?|\\\\<\\\\>|===?|!==?|<<>>|<<<|>>>|~~~|::|<\\\\-|\\\\|>|=>|=~|=|/|\\\\\\\\\\\\\\\\|\\\\*\\\\*?|\\\\.\\\\.?\\\\.?|\\\\.\\\\.//|>=?|<=?|&&?&?|\\\\+\\\\+?|\\\\-\\\\-?|\\\\|\\\\|?\\\\|?|\\\\!|@|\\\\%?\\\\{\\\\}|%|\\\\[\\\\]|\\\\^(\\\\^\\\\^)?)\",\n        \"name\": \"constant.other.symbol.elixir\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.constant.elixir\"\n          }\n        },\n        \"comment\": \"symbols\",\n        \"match\": \"(?>[a-zA-Z_][\\\\w@]*(?>[?!])?)(:)(?!:)\",\n        \"name\": \"constant.other.keywords.elixir\"\n      }, {\n        \"begin\": \"(^[ \\\\t]+)?(?=##)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.whitespace.comment.leading.elixir\"\n          }\n        },\n        \"end\": \"(?!#)\",\n        \"patterns\": [{\n          \"begin\": \"##\",\n          \"beginCaptures\": {\n            \"0\": {\n              \"name\": \"punctuation.definition.comment.elixir\"\n            }\n          },\n          \"end\": \"\\\\n\",\n          \"name\": \"comment.line.section.elixir\"\n        }]\n      }, {\n        \"begin\": \"(^[ \\\\t]+)?(?=#)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.whitespace.comment.leading.elixir\"\n          }\n        },\n        \"end\": \"(?!#)\",\n        \"patterns\": [{\n          \"begin\": \"#\",\n          \"beginCaptures\": {\n            \"0\": {\n              \"name\": \"punctuation.definition.comment.elixir\"\n            }\n          },\n          \"end\": \"\\\\n\",\n          \"name\": \"comment.line.number-sign.elixir\"\n        }]\n      }, {\n        \"match\": \"\\\\b_([^_][\\\\w]+[?!]?)\",\n        \"name\": \"comment.unused.elixir\"\n      }, {\n        \"match\": \"\\\\b_\\\\b\",\n        \"name\": \"comment.wildcard.elixir\"\n      }, {\n        \"comment\": '\\n\t\t\tmatches questionmark-letters.\\n\\n\t\t\texamples (1st alternation = hex):\\n\t\t\t?\\\\x1     ?\\\\x61\\n\\n\t\t\texamples (2rd alternation = escaped):\\n\t\t\t?\\\\n      ?\\\\b\\n\\n\t\t\texamples (3rd alternation = normal):\\n\t\t\t?a       ?A       ?0\\n\t\t\t?*       ?\"       ?(\\n\t\t\t?.       ?#\\n\\n\t\t\tthe negative lookbehind prevents against matching\\n\t\t\tp(42.tainted?)\\n\t\t\t',\n        \"match\": \"(?<!\\\\w)\\\\?(\\\\\\\\(x[0-9A-Fa-f]{1,2}(?![0-9A-Fa-f])\\\\b|[^xMC])|[^\\\\s\\\\\\\\])\",\n        \"name\": \"constant.numeric.elixir\"\n      }, {\n        \"match\": \"\\\\+\\\\+|\\\\-\\\\-|<\\\\|>\",\n        \"name\": \"keyword.operator.concatenation.elixir\"\n      }, {\n        \"match\": \"\\\\|\\\\>|<~>|<>|<<<|>>>|~>>|<<~|~>|<~|<\\\\|>\",\n        \"name\": \"keyword.operator.sigils_1.elixir\"\n      }, {\n        \"match\": \"&&&|&&\",\n        \"name\": \"keyword.operator.sigils_2.elixir\"\n      }, {\n        \"match\": \"<\\\\-|\\\\\\\\\\\\\\\\\",\n        \"name\": \"keyword.operator.sigils_3.elixir\"\n      }, {\n        \"match\": \"===?|!==?|<=?|>=?\",\n        \"name\": \"keyword.operator.comparison.elixir\"\n      }, {\n        \"match\": \"(\\\\|\\\\|\\\\||&&&|\\\\^\\\\^\\\\^|<<<|>>>|~~~)\",\n        \"name\": \"keyword.operator.bitwise.elixir\"\n      }, {\n        \"match\": \"(?<=[ \\\\t])!+|\\\\bnot\\\\b|&&|\\\\band\\\\b|\\\\|\\\\||\\\\bor\\\\b|\\\\bxor\\\\b\",\n        \"name\": \"keyword.operator.logical.elixir\"\n      }, {\n        \"match\": \"(\\\\*|\\\\+|\\\\-|/)\",\n        \"name\": \"keyword.operator.arithmetic.elixir\"\n      }, {\n        \"match\": \"\\\\||\\\\+\\\\+|\\\\-\\\\-|\\\\*\\\\*|\\\\\\\\\\\\\\\\|\\\\<\\\\-|\\\\<\\\\>|\\\\<\\\\<|\\\\>\\\\>|\\\\:\\\\:|\\\\.\\\\.|//|\\\\|>|~|=>|&\",\n        \"name\": \"keyword.operator.other.elixir\"\n      }, {\n        \"match\": \"=\",\n        \"name\": \"keyword.operator.assignment.elixir\"\n      }, {\n        \"match\": \":\",\n        \"name\": \"punctuation.separator.other.elixir\"\n      }, {\n        \"match\": \"\\\\;\",\n        \"name\": \"punctuation.separator.statement.elixir\"\n      }, {\n        \"match\": \",\",\n        \"name\": \"punctuation.separator.object.elixir\"\n      }, {\n        \"match\": \"\\\\.\",\n        \"name\": \"punctuation.separator.method.elixir\"\n      }, {\n        \"match\": \"\\\\{|\\\\}\",\n        \"name\": \"punctuation.section.scope.elixir\"\n      }, {\n        \"match\": \"\\\\[|\\\\]\",\n        \"name\": \"punctuation.section.array.elixir\"\n      }, {\n        \"match\": \"\\\\(|\\\\)\",\n        \"name\": \"punctuation.section.function.elixir\"\n      }]\n    },\n    \"escaped_char\": {\n      \"match\": \"\\\\\\\\(x[\\\\da-fA-F]{1,2}|.)\",\n      \"name\": \"constant.character.escaped.elixir\"\n    },\n    \"interpolated_elixir\": {\n      \"begin\": \"#\\\\{\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.section.embedded.begin.elixir\"\n        }\n      },\n      \"contentName\": \"source.elixir\",\n      \"end\": \"\\\\}\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.section.embedded.end.elixir\"\n        }\n      },\n      \"name\": \"meta.embedded.line.elixir\",\n      \"patterns\": [{\n        \"include\": \"#nest_curly_and_self\"\n      }, {\n        \"include\": \"$self\"\n      }]\n    },\n    \"nest_curly_and_self\": {\n      \"patterns\": [{\n        \"begin\": \"\\\\{\",\n        \"captures\": {\n          \"0\": {\n            \"name\": \"punctuation.section.scope.elixir\"\n          }\n        },\n        \"end\": \"\\\\}\",\n        \"patterns\": [{\n          \"include\": \"#nest_curly_and_self\"\n        }]\n      }, {\n        \"include\": \"$self\"\n      }]\n    }\n  },\n  \"scopeName\": \"source.elixir\",\n  \"embeddedLangs\": [\"html\"]\n});\nvar elixir = [...html, lang];\nexport { elixir as default };"],
  "mappings": "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",
  "names": []
}
