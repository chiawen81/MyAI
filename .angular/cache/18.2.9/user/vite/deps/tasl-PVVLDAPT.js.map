{
  "version": 3,
  "sources": ["../../../../../../node_modules/shiki/dist/langs/tasl.mjs"],
  "sourcesContent": ["const lang = Object.freeze({\n  \"displayName\": \"Tasl\",\n  \"fileTypes\": [\"tasl\"],\n  \"name\": \"tasl\",\n  \"patterns\": [{\n    \"include\": \"#comment\"\n  }, {\n    \"include\": \"#namespace\"\n  }, {\n    \"include\": \"#type\"\n  }, {\n    \"include\": \"#class\"\n  }, {\n    \"include\": \"#edge\"\n  }],\n  \"repository\": {\n    \"class\": {\n      \"begin\": \"(?:^\\\\s*)(class)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.tasl.class\"\n        }\n      },\n      \"end\": \"$\",\n      \"patterns\": [{\n        \"include\": \"#key\"\n      }, {\n        \"include\": \"#export\"\n      }, {\n        \"include\": \"#expression\"\n      }]\n    },\n    \"comment\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"punctuation.definition.comment.tasl\"\n        }\n      },\n      \"match\": \"(#).*$\",\n      \"name\": \"comment.line.number-sign.tasl\"\n    },\n    \"component\": {\n      \"begin\": \"->\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.separator.tasl.component\"\n        }\n      },\n      \"end\": \"$\",\n      \"patterns\": [{\n        \"include\": \"#expression\"\n      }]\n    },\n    \"coproduct\": {\n      \"begin\": \"\\\\[\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.block.tasl.coproduct\"\n        }\n      },\n      \"end\": \"\\\\]\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.block.tasl.coproduct\"\n        }\n      },\n      \"patterns\": [{\n        \"include\": \"#comment\"\n      }, {\n        \"include\": \"#term\"\n      }, {\n        \"include\": \"#option\"\n      }]\n    },\n    \"datatype\": {\n      \"match\": \"[a-zA-Z][a-zA-Z0-9]*:(?:[A-Za-z0-9\\\\-._~!$&'()*+,;=:@/?]|%[0-9A-Fa-f]{2})+\",\n      \"name\": \"string.regexp\"\n    },\n    \"edge\": {\n      \"begin\": \"(?:^\\\\s*)(edge)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.tasl.edge\"\n        }\n      },\n      \"end\": \"$\",\n      \"patterns\": [{\n        \"include\": \"#key\"\n      }, {\n        \"include\": \"#export\"\n      }, {\n        \"match\": \"=/\",\n        \"name\": \"punctuation.separator.tasl.edge.source\"\n      }, {\n        \"match\": \"/=>\",\n        \"name\": \"punctuation.separator.tasl.edge.target\"\n      }, {\n        \"match\": \"=>\",\n        \"name\": \"punctuation.separator.tasl.edge\"\n      }, {\n        \"include\": \"#expression\"\n      }]\n    },\n    \"export\": {\n      \"match\": \"::\",\n      \"name\": \"keyword.operator.tasl.export\"\n    },\n    \"expression\": {\n      \"patterns\": [{\n        \"include\": \"#literal\"\n      }, {\n        \"include\": \"#uri\"\n      }, {\n        \"include\": \"#product\"\n      }, {\n        \"include\": \"#coproduct\"\n      }, {\n        \"include\": \"#reference\"\n      }, {\n        \"include\": \"#optional\"\n      }, {\n        \"include\": \"#identifier\"\n      }]\n    },\n    \"identifier\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"variable\"\n        }\n      },\n      \"match\": \"([a-zA-Z][a-zA-Z0-9]*)\\\\b\"\n    },\n    \"key\": {\n      \"match\": \"[a-zA-Z][a-zA-Z0-9]*:(?:[A-Za-z0-9\\\\-._~!$&'()*+,;=:@/?]|%[0-9A-Fa-f]{2})+\",\n      \"name\": \"markup.bold entity.name.class\"\n    },\n    \"literal\": {\n      \"patterns\": [{\n        \"include\": \"#datatype\"\n      }]\n    },\n    \"namespace\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"keyword.control.tasl.namespace\"\n        },\n        \"2\": {\n          \"patterns\": [{\n            \"include\": \"#namespaceURI\"\n          }, {\n            \"match\": \"[a-zA-Z][a-zA-Z0-9]*\\\\b\",\n            \"name\": \"entity.name\"\n          }]\n        }\n      },\n      \"match\": \"(?:^\\\\s*)(namespace)\\\\b(.*)\"\n    },\n    \"namespaceURI\": {\n      \"match\": \"[a-z]+:[a-zA-Z0-9-._~:\\\\/?#\\\\[\\\\]@!$&'()*+,;%=]+\",\n      \"name\": \"markup.underline.link\"\n    },\n    \"option\": {\n      \"begin\": \"<-\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.separator.tasl.option\"\n        }\n      },\n      \"end\": \"$\",\n      \"patterns\": [{\n        \"include\": \"#expression\"\n      }]\n    },\n    \"optional\": {\n      \"begin\": \"\\\\?\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"keyword.operator\"\n        }\n      },\n      \"end\": \"$\",\n      \"patterns\": [{\n        \"include\": \"#expression\"\n      }]\n    },\n    \"product\": {\n      \"begin\": \"{\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.block.tasl.product\"\n        }\n      },\n      \"end\": \"}\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.block.tasl.product\"\n        }\n      },\n      \"patterns\": [{\n        \"include\": \"#comment\"\n      }, {\n        \"include\": \"#term\"\n      }, {\n        \"include\": \"#component\"\n      }]\n    },\n    \"reference\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"markup.bold keyword.operator\"\n        },\n        \"2\": {\n          \"patterns\": [{\n            \"include\": \"#key\"\n          }]\n        }\n      },\n      \"match\": \"(\\\\*)\\\\s*(.*)\"\n    },\n    \"term\": {\n      \"match\": \"[a-zA-Z][a-zA-Z0-9]*:(?:[A-Za-z0-9\\\\-._~!$&'()*+,;=:@/?]|%[0-9A-Fa-f]{2})+\",\n      \"name\": \"entity.other.tasl.key\"\n    },\n    \"type\": {\n      \"begin\": \"(?:^\\\\s*)(type)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.tasl.type\"\n        }\n      },\n      \"end\": \"$\",\n      \"patterns\": [{\n        \"include\": \"#expression\"\n      }]\n    },\n    \"uri\": {\n      \"match\": \"<>\",\n      \"name\": \"variable.other.constant\"\n    }\n  },\n  \"scopeName\": \"source.tasl\"\n});\nvar tasl = [lang];\nexport { tasl as default };"],
  "mappings": "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",
  "names": []
}
