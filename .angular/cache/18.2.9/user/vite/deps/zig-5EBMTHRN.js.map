{
  "version": 3,
  "sources": ["../../../../../../node_modules/shiki/dist/langs/zig.mjs"],
  "sourcesContent": ["const lang = Object.freeze({\n  \"displayName\": \"Zig\",\n  \"fileTypes\": [\"zig\", \"zon\"],\n  \"name\": \"zig\",\n  \"patterns\": [{\n    \"include\": \"#comments\"\n  }, {\n    \"include\": \"#strings\"\n  }, {\n    \"include\": \"#keywords\"\n  }, {\n    \"include\": \"#operators\"\n  }, {\n    \"include\": \"#punctuation\"\n  }, {\n    \"include\": \"#numbers\"\n  }, {\n    \"include\": \"#support\"\n  }, {\n    \"include\": \"#variables\"\n  }],\n  \"repository\": {\n    \"commentContents\": {\n      \"patterns\": [{\n        \"match\": \"\\\\b(TODO|FIXME|XXX|NOTE)\\\\b:?\",\n        \"name\": \"keyword.todo.zig\"\n      }]\n    },\n    \"comments\": {\n      \"patterns\": [{\n        \"begin\": \"//[!/](?=[^/])\",\n        \"end\": \"$\",\n        \"name\": \"comment.line.documentation.zig\",\n        \"patterns\": [{\n          \"include\": \"#commentContents\"\n        }]\n      }, {\n        \"begin\": \"//\",\n        \"end\": \"$\",\n        \"name\": \"comment.line.double-slash.zig\",\n        \"patterns\": [{\n          \"include\": \"#commentContents\"\n        }]\n      }]\n    },\n    \"keywords\": {\n      \"patterns\": [{\n        \"match\": \"\\\\binline\\\\b(?!\\\\s*\\\\bfn\\\\b)\",\n        \"name\": \"keyword.control.repeat.zig\"\n      }, {\n        \"match\": \"\\\\b(while|for)\\\\b\",\n        \"name\": \"keyword.control.repeat.zig\"\n      }, {\n        \"match\": \"\\\\b(extern|packed|export|pub|noalias|inline|comptime|volatile|align|linksection|threadlocal|allowzero|noinline|callconv)\\\\b\",\n        \"name\": \"keyword.storage.zig\"\n      }, {\n        \"match\": \"\\\\b(struct|enum|union|opaque)\\\\b\",\n        \"name\": \"keyword.structure.zig\"\n      }, {\n        \"match\": \"\\\\b(asm|unreachable)\\\\b\",\n        \"name\": \"keyword.statement.zig\"\n      }, {\n        \"match\": \"\\\\b(break|return|continue|defer|errdefer)\\\\b\",\n        \"name\": \"keyword.control.flow.zig\"\n      }, {\n        \"match\": \"\\\\b(await|resume|suspend|async|nosuspend)\\\\b\",\n        \"name\": \"keyword.control.async.zig\"\n      }, {\n        \"match\": \"\\\\b(try|catch)\\\\b\",\n        \"name\": \"keyword.control.trycatch.zig\"\n      }, {\n        \"match\": \"\\\\b(if|else|switch|orelse)\\\\b\",\n        \"name\": \"keyword.control.conditional.zig\"\n      }, {\n        \"match\": \"\\\\b(null|undefined)\\\\b\",\n        \"name\": \"keyword.constant.default.zig\"\n      }, {\n        \"match\": \"\\\\b(true|false)\\\\b\",\n        \"name\": \"keyword.constant.bool.zig\"\n      }, {\n        \"match\": \"\\\\b(usingnamespace|test|and|or)\\\\b\",\n        \"name\": \"keyword.default.zig\"\n      }, {\n        \"match\": \"\\\\b(bool|void|noreturn|type|error|anyerror|anyframe|anytype|anyopaque)\\\\b\",\n        \"name\": \"keyword.type.zig\"\n      }, {\n        \"match\": \"\\\\b(f16|f32|f64|f80|f128|u\\\\d+|i\\\\d+|isize|usize|comptime_int|comptime_float)\\\\b\",\n        \"name\": \"keyword.type.integer.zig\"\n      }, {\n        \"match\": \"\\\\b(c_char|c_short|c_ushort|c_int|c_uint|c_long|c_ulong|c_longlong|c_ulonglong|c_longdouble)\\\\b\",\n        \"name\": \"keyword.type.c.zig\"\n      }]\n    },\n    \"numbers\": {\n      \"patterns\": [{\n        \"match\": \"\\\\b0x[0-9a-fA-F][0-9a-fA-F_]*(\\\\.[0-9a-fA-F][0-9a-fA-F_]*)?([pP][+-]?[0-9a-fA-F_]+)?\\\\b\",\n        \"name\": \"constant.numeric.hexfloat.zig\"\n      }, {\n        \"match\": \"\\\\b[0-9][0-9_]*(\\\\.[0-9][0-9_]*)?([eE][+-]?[0-9_]+)?\\\\b\",\n        \"name\": \"constant.numeric.float.zig\"\n      }, {\n        \"match\": \"\\\\b[0-9][0-9_]*\\\\b\",\n        \"name\": \"constant.numeric.decimal.zig\"\n      }, {\n        \"match\": \"\\\\b0x[a-fA-F0-9_]+\\\\b\",\n        \"name\": \"constant.numeric.hexadecimal.zig\"\n      }, {\n        \"match\": \"\\\\b0o[0-7_]+\\\\b\",\n        \"name\": \"constant.numeric.octal.zig\"\n      }, {\n        \"match\": \"\\\\b0b[01_]+\\\\b\",\n        \"name\": \"constant.numeric.binary.zig\"\n      }, {\n        \"match\": \"\\\\b[0-9](([eEpP][+-])|[0-9a-zA-Z_])*(\\\\.(([eEpP][+-])|[0-9a-zA-Z_])*)?([eEpP][+-])?[0-9a-zA-Z_]*\\\\b\",\n        \"name\": \"constant.numeric.invalid.zig\"\n      }]\n    },\n    \"operators\": {\n      \"patterns\": [{\n        \"match\": \"(?<=\\\\[)\\\\*c(?=\\\\])\",\n        \"name\": \"keyword.operator.c-pointer.zig\"\n      }, {\n        \"match\": \"(\\\\b(and|or)\\\\b)|(==|!=|<=|>=|<|>)\",\n        \"name\": \"keyword.operator.comparison.zig\"\n      }, {\n        \"match\": \"(-%?|\\\\+%?|\\\\*%?|/|%)=?\",\n        \"name\": \"keyword.operator.arithmetic.zig\"\n      }, {\n        \"match\": \"(<<%?|>>|!|~|&|\\\\^|\\\\|)=?\",\n        \"name\": \"keyword.operator.bitwise.zig\"\n      }, {\n        \"match\": \"(==|\\\\+\\\\+|\\\\*\\\\*|->)\",\n        \"name\": \"keyword.operator.special.zig\"\n      }, {\n        \"match\": \"=\",\n        \"name\": \"keyword.operator.assignment.zig\"\n      }, {\n        \"match\": \"\\\\?\",\n        \"name\": \"keyword.operator.question.zig\"\n      }]\n    },\n    \"punctuation\": {\n      \"patterns\": [{\n        \"match\": \"\\\\.\",\n        \"name\": \"punctuation.accessor.zig\"\n      }, {\n        \"match\": \",\",\n        \"name\": \"punctuation.comma.zig\"\n      }, {\n        \"match\": \":\",\n        \"name\": \"punctuation.separator.key-value.zig\"\n      }, {\n        \"match\": \";\",\n        \"name\": \"punctuation.terminator.statement.zig\"\n      }]\n    },\n    \"stringcontent\": {\n      \"patterns\": [{\n        \"match\": `\\\\\\\\([nrt'\"\\\\\\\\]|(x[0-9a-fA-F]{2})|(u\\\\{[0-9a-fA-F]+\\\\}))`,\n        \"name\": \"constant.character.escape.zig\"\n      }, {\n        \"match\": \"\\\\\\\\.\",\n        \"name\": \"invalid.illegal.unrecognized-string-escape.zig\"\n      }]\n    },\n    \"strings\": {\n      \"patterns\": [{\n        \"begin\": '\"',\n        \"end\": '\"',\n        \"name\": \"string.quoted.double.zig\",\n        \"patterns\": [{\n          \"include\": \"#stringcontent\"\n        }]\n      }, {\n        \"begin\": \"\\\\\\\\\\\\\\\\\",\n        \"end\": \"$\",\n        \"name\": \"string.multiline.zig\"\n      }, {\n        \"match\": \"'([^'\\\\\\\\]|\\\\\\\\(x\\\\h{2}|[0-2][0-7]{,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.))'\",\n        \"name\": \"string.quoted.single.zig\"\n      }]\n    },\n    \"support\": {\n      \"patterns\": [{\n        \"comment\": \"Built-in functions\",\n        \"match\": \"@[_a-zA-Z][_a-zA-Z0-9]*\",\n        \"name\": \"support.function.builtin.zig\"\n      }]\n    },\n    \"variables\": {\n      \"patterns\": [{\n        \"name\": \"meta.function.declaration.zig\",\n        \"patterns\": [{\n          \"captures\": {\n            \"1\": {\n              \"name\": \"storage.type.function.zig\"\n            },\n            \"2\": {\n              \"name\": \"entity.name.type.zig\"\n            }\n          },\n          \"match\": \"\\\\b(fn)\\\\s+([A-Z][a-zA-Z0-9]*)\\\\b\"\n        }, {\n          \"captures\": {\n            \"1\": {\n              \"name\": \"storage.type.function.zig\"\n            },\n            \"2\": {\n              \"name\": \"entity.name.function.zig\"\n            }\n          },\n          \"match\": \"\\\\b(fn)\\\\s+([_a-zA-Z][_a-zA-Z0-9]*)\\\\b\"\n        }, {\n          \"begin\": '\\\\b(fn)\\\\s+@\"',\n          \"beginCaptures\": {\n            \"1\": {\n              \"name\": \"storage.type.function.zig\"\n            }\n          },\n          \"end\": '\"',\n          \"name\": \"entity.name.function.string.zig\",\n          \"patterns\": [{\n            \"include\": \"#stringcontent\"\n          }]\n        }, {\n          \"match\": \"\\\\b(const|var|fn)\\\\b\",\n          \"name\": \"keyword.default.zig\"\n        }]\n      }, {\n        \"name\": \"meta.function.call.zig\",\n        \"patterns\": [{\n          \"match\": \"([A-Z][a-zA-Z0-9]*)(?=\\\\s*\\\\()\",\n          \"name\": \"entity.name.type.zig\"\n        }, {\n          \"match\": \"([_a-zA-Z][_a-zA-Z0-9]*)(?=\\\\s*\\\\()\",\n          \"name\": \"entity.name.function.zig\"\n        }]\n      }, {\n        \"name\": \"meta.variable.zig\",\n        \"patterns\": [{\n          \"match\": \"\\\\b[_a-zA-Z][_a-zA-Z0-9]*\\\\b\",\n          \"name\": \"variable.zig\"\n        }, {\n          \"begin\": '@\"',\n          \"end\": '\"',\n          \"name\": \"variable.string.zig\",\n          \"patterns\": [{\n            \"include\": \"#stringcontent\"\n          }]\n        }]\n      }]\n    }\n  },\n  \"scopeName\": \"source.zig\"\n});\nvar zig = [lang];\nexport { zig as default };"],
  "mappings": "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",
  "names": []
}
