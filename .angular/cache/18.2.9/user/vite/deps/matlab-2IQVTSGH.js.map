{
  "version": 3,
  "sources": ["../../../../../../node_modules/shiki/dist/langs/matlab.mjs"],
  "sourcesContent": ["const lang = Object.freeze({\n  \"displayName\": \"MATLAB\",\n  \"fileTypes\": [\"m\"],\n  \"name\": \"matlab\",\n  \"patterns\": [{\n    \"comment\": \"This and #all_after_command_dual are split out so #command_dual can be excluded in things like (), {}, []\",\n    \"include\": \"#all_before_command_dual\"\n  }, {\n    \"include\": \"#command_dual\"\n  }, {\n    \"include\": \"#all_after_command_dual\"\n  }],\n  \"repository\": {\n    \"all_after_command_dual\": {\n      \"patterns\": [{\n        \"include\": \"#string\"\n      }, {\n        \"include\": \"#line_continuation\"\n      }, {\n        \"include\": \"#comments\"\n      }, {\n        \"include\": \"#conjugate_transpose\"\n      }, {\n        \"include\": \"#transpose\"\n      }, {\n        \"include\": \"#constants\"\n      }, {\n        \"include\": \"#variables\"\n      }, {\n        \"include\": \"#numbers\"\n      }, {\n        \"include\": \"#operators\"\n      }]\n    },\n    \"all_before_command_dual\": {\n      \"patterns\": [{\n        \"include\": \"#classdef\"\n      }, {\n        \"include\": \"#function\"\n      }, {\n        \"include\": \"#blocks\"\n      }, {\n        \"include\": \"#control_statements\"\n      }, {\n        \"include\": \"#global_persistent\"\n      }, {\n        \"include\": \"#parens\"\n      }, {\n        \"include\": \"#square_brackets\"\n      }, {\n        \"include\": \"#indexing_curly_brackets\"\n      }, {\n        \"include\": \"#curly_brackets\"\n      }]\n    },\n    \"blocks\": {\n      \"patterns\": [{\n        \"begin\": \"\\\\s*(?:^|[\\\\s,;])(for)\\\\b\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.for.matlab\"\n          }\n        },\n        \"end\": \"\\\\s*(?:^|[\\\\s,;])(end)\\\\b\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.end.for.matlab\"\n          }\n        },\n        \"name\": \"meta.for.matlab\",\n        \"patterns\": [{\n          \"include\": \"$self\"\n        }]\n      }, {\n        \"begin\": \"\\\\s*(?:^|[\\\\s,;])(if)\\\\b\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.if.matlab\"\n          }\n        },\n        \"end\": \"\\\\s*(?:^|[\\\\s,;])(end)\\\\b\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.end.if.matlab\"\n          },\n          \"2\": {\n            \"patterns\": [{\n              \"include\": \"$self\"\n            }]\n          }\n        },\n        \"name\": \"meta.if.matlab\",\n        \"patterns\": [{\n          \"captures\": {\n            \"2\": {\n              \"name\": \"keyword.control.elseif.matlab\"\n            },\n            \"3\": {\n              \"patterns\": [{\n                \"include\": \"$self\"\n              }]\n            }\n          },\n          \"end\": \"^\",\n          \"match\": \"(\\\\s*)(?:^|[\\\\s,;])(elseif)\\\\b(.*)$\\\\n?\",\n          \"name\": \"meta.elseif.matlab\"\n        }, {\n          \"captures\": {\n            \"2\": {\n              \"name\": \"keyword.control.else.matlab\"\n            },\n            \"3\": {\n              \"patterns\": [{\n                \"include\": \"$self\"\n              }]\n            }\n          },\n          \"end\": \"^\",\n          \"match\": \"(\\\\s*)(?:^|[\\\\s,;])(else)\\\\b(.*)?$\\\\n?\",\n          \"name\": \"meta.else.matlab\"\n        }, {\n          \"include\": \"$self\"\n        }]\n      }, {\n        \"begin\": \"\\\\s*(?:^|[\\\\s,;])(parfor)\\\\b\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.for.matlab\"\n          }\n        },\n        \"end\": \"\\\\s*(?:^|[\\\\s,;])(end)\\\\b\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.end.for.matlab\"\n          }\n        },\n        \"name\": \"meta.parfor.matlab\",\n        \"patterns\": [{\n          \"begin\": \"\\\\G(?!$)\",\n          \"end\": \"$\\\\n?\",\n          \"name\": \"meta.parfor-quantity.matlab\",\n          \"patterns\": [{\n            \"include\": \"$self\"\n          }]\n        }, {\n          \"include\": \"$self\"\n        }]\n      }, {\n        \"begin\": \"\\\\s*(?:^|[\\\\s,;])(spmd)\\\\b\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.spmd.matlab\"\n          }\n        },\n        \"end\": \"\\\\s*(?:^|[\\\\s,;])(end)\\\\b\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.end.spmd.matlab\"\n          }\n        },\n        \"name\": \"meta.spmd.matlab\",\n        \"patterns\": [{\n          \"begin\": \"\\\\G(?!$)\",\n          \"end\": \"$\\\\n?\",\n          \"name\": \"meta.spmd-statement.matlab\",\n          \"patterns\": [{\n            \"include\": \"$self\"\n          }]\n        }, {\n          \"include\": \"$self\"\n        }]\n      }, {\n        \"begin\": \"\\\\s*(?:^|[\\\\s,;])(switch)\\\\b\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.switch.matlab\"\n          }\n        },\n        \"end\": \"\\\\s*(?:^|[\\\\s,;])(end)\\\\b\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.end.switch.matlab\"\n          }\n        },\n        \"name\": \"meta.switch.matlab\",\n        \"patterns\": [{\n          \"captures\": {\n            \"2\": {\n              \"name\": \"keyword.control.case.matlab\"\n            },\n            \"3\": {\n              \"patterns\": [{\n                \"include\": \"$self\"\n              }]\n            }\n          },\n          \"end\": \"^\",\n          \"match\": \"(\\\\s*)(?:^|[\\\\s,;])(case)\\\\b(.*)$\\\\n?\",\n          \"name\": \"meta.case.matlab\"\n        }, {\n          \"captures\": {\n            \"2\": {\n              \"name\": \"keyword.control.otherwise.matlab\"\n            },\n            \"3\": {\n              \"patterns\": [{\n                \"include\": \"$self\"\n              }]\n            }\n          },\n          \"end\": \"^\",\n          \"match\": \"(\\\\s*)(?:^|[\\\\s,;])(otherwise)\\\\b(.*)?$\\\\n?\",\n          \"name\": \"meta.otherwise.matlab\"\n        }, {\n          \"include\": \"$self\"\n        }]\n      }, {\n        \"begin\": \"\\\\s*(?:^|[\\\\s,;])(try)\\\\b\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.try.matlab\"\n          }\n        },\n        \"end\": \"\\\\s*(?:^|[\\\\s,;])(end)\\\\b\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.end.try.matlab\"\n          }\n        },\n        \"name\": \"meta.try.matlab\",\n        \"patterns\": [{\n          \"captures\": {\n            \"2\": {\n              \"name\": \"keyword.control.catch.matlab\"\n            },\n            \"3\": {\n              \"patterns\": [{\n                \"include\": \"$self\"\n              }]\n            }\n          },\n          \"end\": \"^\",\n          \"match\": \"(\\\\s*)(?:^|[\\\\s,;])(catch)\\\\b(.*)?$\\\\n?\",\n          \"name\": \"meta.catch.matlab\"\n        }, {\n          \"include\": \"$self\"\n        }]\n      }, {\n        \"begin\": \"\\\\s*(?:^|[\\\\s,;])(while)\\\\b\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.while.matlab\"\n          }\n        },\n        \"end\": \"\\\\s*(?:^|[\\\\s,;])(end)\\\\b\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.end.while.matlab\"\n          }\n        },\n        \"name\": \"meta.while.matlab\",\n        \"patterns\": [{\n          \"include\": \"$self\"\n        }]\n      }]\n    },\n    \"braced_validator_list\": {\n      \"begin\": \"\\\\s*({)\\\\s*\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"storage.type.matlab\"\n        }\n      },\n      \"comment\": \"Validator functions. Treated as a recursive group to permit nested brackets, quotes, etc.\",\n      \"end\": \"(})\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"storage.type.matlab\"\n        }\n      },\n      \"patterns\": [{\n        \"include\": \"#braced_validator_list\"\n      }, {\n        \"include\": \"#validator_strings\"\n      }, {\n        \"include\": \"#line_continuation\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"storage.type.matlab\"\n          }\n        },\n        \"match\": `([^{}}'\"\\\\.]+)`\n      }, {\n        \"match\": \"\\\\.\",\n        \"name\": \"storage.type.matlab\"\n      }]\n    },\n    \"classdef\": {\n      \"patterns\": [{\n        \"begin\": \"(?x)\\n(^\\\\s*)\\n(classdef)\\n\\\\b\\\\s*\\n(.*)\\n\",\n        \"beginCaptures\": {\n          \"2\": {\n            \"name\": \"storage.type.class.matlab\"\n          },\n          \"3\": {\n            \"patterns\": [{\n              \"captures\": {\n                \"1\": {\n                  \"patterns\": [{\n                    \"match\": \"[a-zA-Z][a-zA-Z0-9_]*\",\n                    \"name\": \"variable.parameter.class.matlab\"\n                  }, {\n                    \"begin\": \"=\\\\s*\",\n                    \"end\": \",|(?=\\\\))\",\n                    \"patterns\": [{\n                      \"match\": \"true|false\",\n                      \"name\": \"constant.language.boolean.matlab\"\n                    }, {\n                      \"include\": \"#string\"\n                    }]\n                  }]\n                },\n                \"2\": {\n                  \"name\": \"meta.class-declaration.matlab\"\n                },\n                \"3\": {\n                  \"name\": \"entity.name.section.class.matlab\"\n                },\n                \"4\": {\n                  \"name\": \"keyword.operator.other.matlab\"\n                },\n                \"5\": {\n                  \"patterns\": [{\n                    \"match\": \"[a-zA-Z][a-zA-Z0-9_]*(\\\\.[a-zA-Z][a-zA-Z0-9_]*)*\",\n                    \"name\": \"entity.other.inherited-class.matlab\"\n                  }, {\n                    \"match\": \"&\",\n                    \"name\": \"keyword.operator.other.matlab\"\n                  }]\n                },\n                \"6\": {\n                  \"patterns\": [{\n                    \"include\": \"$self\"\n                  }]\n                }\n              },\n              \"match\": \"(?x)\\n\t\t\t\t\t\t\t\t\t\t(\t\t\t\t\t\t\t\t\t# Optional attributes\\n\t\t\t\t\t\t\t\t\t\t\t \\\\( [^)]* \\\\)\\n\t\t\t\t\t\t\t\t\t\t)?\\n\t\t\t\t\t\t\t\t\t\t\\\\s*\\n\t\t\t\t\t\t\t\t\t\t(\\n\t\t\t\t\t\t\t\t\t\t\t([a-zA-Z][a-zA-Z0-9_]*)\t\t\t# Class name\\n\t\t\t\t\t\t\t\t\t\t\t(?:\t\t\t\t\t\t\t\t# Optional inheritance\\n\t\t\t\t\t\t\t\t\t\t\t\t\\\\s*\\n\t\t\t\t\t\t\t\t\t\t\t\t(<)\\n\t\t\t\t\t\t\t\t\t\t\t\t\\\\s*\\n\t\t\t\t\t\t\t\t\t\t\t\t([^%]*)\\n\t\t\t\t\t\t\t\t\t\t\t)?\\n\t\t\t\t\t\t\t\t\t\t)\\n\t\t\t\t\t\t\t\t\t\t\\\\s*($|(?=(%|...)).*)\\n\t\t\t\t\t\t\t\t\t\"\n            }]\n          }\n        },\n        \"end\": \"\\\\s*(?:^|[\\\\s,;])(end)\\\\b\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.end.class.matlab\"\n          }\n        },\n        \"name\": \"meta.class.matlab\",\n        \"patterns\": [{\n          \"begin\": \"(?x)\\n(^\\\\s*)\\n(properties)\\\\b([^%]*)\\n\\\\s*\\n(\\n\\\\( [^)]* \\\\)\\n)?\\n\\\\s*($|(?=%))\\n\",\n          \"beginCaptures\": {\n            \"2\": {\n              \"name\": \"keyword.control.properties.matlab\"\n            },\n            \"3\": {\n              \"patterns\": [{\n                \"match\": \"[a-zA-Z][a-zA-Z0-9_]*\",\n                \"name\": \"variable.parameter.properties.matlab\"\n              }, {\n                \"begin\": \"=\\\\s*\",\n                \"end\": \",|(?=\\\\))\",\n                \"patterns\": [{\n                  \"match\": \"true|false\",\n                  \"name\": \"constant.language.boolean.matlab\"\n                }, {\n                  \"match\": \"public|protected|private\",\n                  \"name\": \"constant.language.access.matlab\"\n                }]\n              }]\n            }\n          },\n          \"end\": \"\\\\s*(?:^|[\\\\s,;])(end)\\\\b\",\n          \"endCaptures\": {\n            \"1\": {\n              \"name\": \"keyword.control.end.properties.matlab\"\n            }\n          },\n          \"name\": \"meta.properties.matlab\",\n          \"patterns\": [{\n            \"include\": \"#validators\"\n          }, {\n            \"include\": \"$self\"\n          }]\n        }, {\n          \"begin\": \"(?x)\\n(^\\\\s*)\\n(methods)\\\\b([^%]*)\\n\\\\s*\\n(\\n\\\\( [^)]* \\\\)\\n)?\\n\\\\s*($|(?=%))\\n\",\n          \"beginCaptures\": {\n            \"2\": {\n              \"name\": \"keyword.control.methods.matlab\"\n            },\n            \"3\": {\n              \"patterns\": [{\n                \"match\": \"[a-zA-Z][a-zA-Z0-9_]*\",\n                \"name\": \"variable.parameter.methods.matlab\"\n              }, {\n                \"begin\": \"=\\\\s*\",\n                \"end\": \",|(?=\\\\))\",\n                \"patterns\": [{\n                  \"match\": \"true|false\",\n                  \"name\": \"constant.language.boolean.matlab\"\n                }, {\n                  \"match\": \"public|protected|private\",\n                  \"name\": \"constant.language.access.matlab\"\n                }]\n              }]\n            }\n          },\n          \"end\": \"\\\\s*(?:^|[\\\\s,;])(end)\\\\b\",\n          \"endCaptures\": {\n            \"1\": {\n              \"name\": \"keyword.control.end.methods.matlab\"\n            }\n          },\n          \"name\": \"meta.methods.matlab\",\n          \"patterns\": [{\n            \"include\": \"$self\"\n          }]\n        }, {\n          \"begin\": \"(?x)\\n(^\\\\s*)\\n(events)\\\\b([^%]*)\\n\\\\s*\\n(\\n\\\\( [^)]* \\\\)\\n)?\\n\\\\s*($|(?=%))\\n\",\n          \"beginCaptures\": {\n            \"2\": {\n              \"name\": \"keyword.control.events.matlab\"\n            },\n            \"3\": {\n              \"patterns\": [{\n                \"match\": \"[a-zA-Z][a-zA-Z0-9_]*\",\n                \"name\": \"variable.parameter.events.matlab\"\n              }, {\n                \"begin\": \"=\\\\s*\",\n                \"end\": \",|(?=\\\\))\",\n                \"patterns\": [{\n                  \"match\": \"true|false\",\n                  \"name\": \"constant.language.boolean.matlab\"\n                }, {\n                  \"match\": \"public|protected|private\",\n                  \"name\": \"constant.language.access.matlab\"\n                }]\n              }]\n            }\n          },\n          \"end\": \"\\\\s*(?:^|[\\\\s,;])(end)\\\\b\",\n          \"endCaptures\": {\n            \"1\": {\n              \"name\": \"keyword.control.end.events.matlab\"\n            }\n          },\n          \"name\": \"meta.events.matlab\",\n          \"patterns\": [{\n            \"include\": \"$self\"\n          }]\n        }, {\n          \"begin\": \"(?x)\\n(^\\\\s*)\\n(enumeration)\\\\b([^%]*)\\n\\\\s*($|(?=%))\\n\",\n          \"beginCaptures\": {\n            \"2\": {\n              \"name\": \"keyword.control.enumeration.matlab\"\n            }\n          },\n          \"end\": \"\\\\s*(?:^|[\\\\s,;])(end)\\\\b\",\n          \"endCaptures\": {\n            \"1\": {\n              \"name\": \"keyword.control.end.enumeration.matlab\"\n            }\n          },\n          \"name\": \"meta.enumeration.matlab\",\n          \"patterns\": [{\n            \"include\": \"$self\"\n          }]\n        }, {\n          \"include\": \"$self\"\n        }]\n      }]\n    },\n    \"command_dual\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"string.interpolated.matlab\"\n        },\n        \"2\": {\n          \"name\": \"variable.other.command.matlab\"\n        },\n        \"28\": {\n          \"name\": \"comment.line.percentage.matlab\"\n        }\n      },\n      \"comment\": \"  1        2                                  3                                                    4                                                  5                                                    6                                                         7                                                                             8                 9                            10                   11                      12                         13                   14                                                               1516       17                                                             18                                                                                                                               19                      20                                     21                                    22                                      23                                         24                                         25                                                                         26            27                 28\",\n      \"match\": `^\\\\s*((?# A> )([b-df-hk-moq-zA-HJ-MO-Z]\\\\w*|a|an|a([A-Za-mo-z0-9_]\\\\w*|n[A-Za-rt-z0-9_]\\\\w*|ns\\\\w+)|e|ep|e([A-Za-oq-z0-9_]\\\\w*|p[A-Za-rt-z0-9_]\\\\w*|ps\\\\w+)|in|i([A-Za-mo-z0-9_]\\\\w*|n[A-Za-eg-z0-9_]\\\\w*|nf\\\\w+)|I|In|I([A-Za-mo-z0-9_]\\\\w*|n[A-Za-eg-z0-9_]\\\\w*|nf\\\\w+)|j\\\\w+|N|Na|N([A-Zb-z0-9_]\\\\w*|a[A-MO-Za-z0-9_]\\\\w*|aN\\\\w+)|n|na|nar|narg|nargi|nargo|nargou|n([A-Zb-z0-9_]\\\\w*|a([A-Za-mo-qs-z0-9_]\\\\w*|n\\\\w+|r([A-Za-fh-z0-9_]\\\\w*|g([A-Za-hj-nq-z0-9_]\\\\w*|i([A-Za-mo-z0-9_]\\\\w*|n\\\\w+)|o([A-Za-tv-z0-9_]\\\\w*|u([A-Za-su-z]\\\\w*|t\\\\w+))))))|p|p[A-Za-hj-z0-9_]\\\\w*|pi\\\\w+)(?# <A )\\\\s+(((?# B> )([^\\\\s;,%()=.{&|~<>:+\\\\-*/\\\\\\\\@^'\"]|(?=')|(?=\"))(?# <B )|(?# C> )(\\\\.\\\\^|\\\\.\\\\*|\\\\./|\\\\.\\\\\\\\|\\\\.'|\\\\.\\\\(|&&|==|\\\\|\\\\||&(?=[^&])|\\\\|(?=[^\\\\|])|~=|<=|>=|~(?!=)|<(?!=)|>(?!=)|:|\\\\+|-|\\\\*|/|\\\\\\\\|@|\\\\^)(?# <C )(?# D> )([^\\\\s]|\\\\s*(?=%)|\\\\s+$|\\\\s+(,|;|\\\\)|}|\\\\]|&|\\\\||<|>|=|:|\\\\*|/|\\\\\\\\|\\\\^|@|(\\\\.[^\\\\d.]|\\\\.\\\\.[^.])))(?# <D )|(?# E> )(\\\\.[^^*/\\\\\\\\'(\\\\sA-Za-z])(?# <E ))(?# F> )([^%]|'[^']*'|\"[^\"]*\")*(?# <F )|(?# X> )(\\\\.(?=\\\\s)|\\\\.[A-Za-z]|(?={))(?# <X )(?# Y> )([^(=\\\\'\"%]|==|'[^']*'|\"[^\"]*\"|\\\\(|\\\\([^)%]*\\\\)|\\\\[|\\\\[[^\\\\]%]*\\\\]|{|{[^}%]*})*(\\\\.\\\\.\\\\.[^%]*)?((?=%)|$)(?# <Y )))(%.*)?$`\n    },\n    \"comment_block\": {\n      \"begin\": \"(^[\\\\s]*)%\\\\{[^\\\\n\\\\S]*+\\\\n\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.definition.comment.matlab\"\n        }\n      },\n      \"end\": \"^[\\\\s]*%\\\\}[^\\\\n\\\\S]*+(?:\\\\n|$)\",\n      \"name\": \"comment.block.percentage.matlab\",\n      \"patterns\": [{\n        \"include\": \"#comment_block\"\n      }, {\n        \"match\": \"^[^\\\\n]*\\\\n\"\n      }]\n    },\n    \"comments\": {\n      \"patterns\": [{\n        \"begin\": \"(^[ \\\\t]+)?(?=%%\\\\s)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.whitespace.comment.leading.matlab\"\n          }\n        },\n        \"end\": \"(?!\\\\G)\",\n        \"patterns\": [{\n          \"begin\": \"%%\",\n          \"beginCaptures\": {\n            \"0\": {\n              \"name\": \"punctuation.definition.comment.matlab\"\n            }\n          },\n          \"end\": \"\\\\n\",\n          \"name\": \"comment.line.double-percentage.matlab\",\n          \"patterns\": [{\n            \"begin\": \"\\\\G[^\\\\S\\\\n]*(?![\\\\n\\\\s])\",\n            \"contentName\": \"meta.cell.matlab\",\n            \"end\": \"(?=\\\\n)\"\n          }]\n        }]\n      }, {\n        \"include\": \"#comment_block\"\n      }, {\n        \"begin\": \"(^[ \\\\t]+)?(?=%)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.whitespace.comment.leading.matlab\"\n          }\n        },\n        \"end\": \"(?!\\\\G)\",\n        \"patterns\": [{\n          \"begin\": \"%\",\n          \"beginCaptures\": {\n            \"0\": {\n              \"name\": \"punctuation.definition.comment.matlab\"\n            }\n          },\n          \"end\": \"\\\\n\",\n          \"name\": \"comment.line.percentage.matlab\"\n        }]\n      }]\n    },\n    \"conjugate_transpose\": {\n      \"match\": \"((?<=[^\\\\s])|(?<=\\\\])|(?<=\\\\))|(?<=\\\\}))'\",\n      \"name\": \"keyword.operator.transpose.matlab\"\n    },\n    \"constants\": {\n      \"comment\": \"MATLAB Constants\",\n      \"match\": \"(?<!\\\\.)\\\\b(eps|false|Inf|inf|intmax|intmin|namelengthmax|NaN|nan|on|off|realmax|realmin|true|pi)\\\\b\",\n      \"name\": \"constant.language.matlab\"\n    },\n    \"control_statements\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"keyword.control.matlab\"\n        }\n      },\n      \"match\": \"\\\\s*(?:^|[\\\\s,;])(break|continue|return)\\\\b\",\n      \"name\": \"meta.control.matlab\"\n    },\n    \"curly_brackets\": {\n      \"begin\": \"\\\\{\",\n      \"comment\": \"We don't include $self here to avoid matching command syntax inside (), [], {}\",\n      \"end\": \"\\\\}\",\n      \"patterns\": [{\n        \"include\": \"#end_in_parens\"\n      }, {\n        \"include\": \"#all_before_command_dual\"\n      }, {\n        \"include\": \"#all_after_command_dual\"\n      }, {\n        \"include\": \"#end_in_parens\"\n      }, {\n        \"comment\": \"These block keywords pick up any such missed keywords when the block matching for things like (), if-end, etc. don't work. Useful for when someone has partially written\",\n        \"include\": \"#block_keywords\"\n      }]\n    },\n    \"end_in_parens\": {\n      \"comment\": \"end as operator symbol\",\n      \"match\": \"\\\\bend\\\\b\",\n      \"name\": \"keyword.operator.symbols.matlab\"\n    },\n    \"function\": {\n      \"patterns\": [{\n        \"begin\": \"(?x)\\n(^\\\\s*)\\n(function)\\n\\\\s+\\n(?:\\n(?:\\n(\\\\[) ([^\\\\]]*) (\\\\])\\n| ([a-zA-Z][a-zA-Z0-9_]*)\\n)\\n\\\\s* = \\\\s*\\n)?\\n([a-zA-Z][a-zA-Z0-9_]*(\\\\.[a-zA-Z][a-zA-Z0-9_]*)*)\\n\\\\s*\\n\",\n        \"beginCaptures\": {\n          \"2\": {\n            \"name\": \"storage.type.function.matlab\"\n          },\n          \"3\": {\n            \"name\": \"punctuation.definition.arguments.begin.matlab\"\n          },\n          \"4\": {\n            \"patterns\": [{\n              \"match\": \"\\\\w+\",\n              \"name\": \"variable.parameter.output.matlab\"\n            }]\n          },\n          \"5\": {\n            \"name\": \"punctuation.definition.arguments.end.matlab\"\n          },\n          \"6\": {\n            \"name\": \"variable.parameter.output.function.matlab\"\n          },\n          \"7\": {\n            \"name\": \"entity.name.function.matlab\"\n          }\n        },\n        \"end\": \"\\\\s*(?:^|[\\\\s,;])(end)\\\\b(\\\\s*\\\\n)?\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.end.function.matlab\"\n          }\n        },\n        \"name\": \"meta.function.matlab\",\n        \"patterns\": [{\n          \"begin\": \"\\\\G\\\\(\",\n          \"end\": \"\\\\)\",\n          \"name\": \"meta.arguments.function.matlab\",\n          \"patterns\": [{\n            \"include\": \"#line_continuation\"\n          }, {\n            \"match\": \"\\\\w+\",\n            \"name\": \"variable.parameter.input.matlab\"\n          }]\n        }, {\n          \"begin\": \"(?x)\\n(^\\\\s*)\\n(arguments)\\\\b([^%]*)\\n\\\\s*\\n(\\n\\\\( [^)]* \\\\)\\n)?\\n\\\\s*($|(?=%))\\n\",\n          \"beginCaptures\": {\n            \"2\": {\n              \"name\": \"keyword.control.arguments.matlab\"\n            },\n            \"3\": {\n              \"patterns\": [{\n                \"match\": \"[a-zA-Z][a-zA-Z0-9_]*\",\n                \"name\": \"variable.parameter.arguments.matlab\"\n              }]\n            }\n          },\n          \"end\": \"\\\\s*(?:^|[\\\\s,;])(end)\\\\b\",\n          \"endCaptures\": {\n            \"1\": {\n              \"name\": \"keyword.control.end.arguments.matlab\"\n            }\n          },\n          \"name\": \"meta.arguments.matlab\",\n          \"patterns\": [{\n            \"include\": \"#validators\"\n          }, {\n            \"include\": \"$self\"\n          }]\n        }, {\n          \"include\": \"$self\"\n        }]\n      }]\n    },\n    \"global_persistent\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"keyword.control.globalpersistent.matlab\"\n        }\n      },\n      \"match\": \"^\\\\s*(global|persistent)\\\\b\",\n      \"name\": \"meta.globalpersistent.matlab\"\n    },\n    \"indexing_curly_brackets\": {\n      \"Comment\": \"Match identifier{idx, idx, } and stop at newline without ... This helps with partially written code like x{idx \",\n      \"begin\": \"([a-zA-Z][a-zA-Z0-9_\\\\.]*\\\\s*)\\\\{\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"patterns\": [{\n            \"include\": \"$self\"\n          }]\n        }\n      },\n      \"comment\": \"We don't include $self here to avoid matching command syntax inside (), [], {}\",\n      \"end\": \"(\\\\}|(?<!\\\\.\\\\.\\\\.).\\\\n)\",\n      \"patterns\": [{\n        \"include\": \"#end_in_parens\"\n      }, {\n        \"include\": \"#all_before_command_dual\"\n      }, {\n        \"include\": \"#all_after_command_dual\"\n      }, {\n        \"include\": \"#end_in_parens\"\n      }, {\n        \"comment\": \"These block keywords pick up any such missed keywords when the block matching for things like (), if-end, etc. don't work. Useful for when someone has partially written\",\n        \"include\": \"#block_keywords\"\n      }]\n    },\n    \"line_continuation\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"keyword.operator.symbols.matlab\"\n        },\n        \"2\": {\n          \"name\": \"comment.line.continuation.matlab\"\n        }\n      },\n      \"comment\": \"Line continuations\",\n      \"match\": \"(\\\\.\\\\.\\\\.)(.*)$\",\n      \"name\": \"meta.linecontinuation.matlab\"\n    },\n    \"numbers\": {\n      \"comment\": \"Valid numbers: 1, .1, 1.1, .1e1, 1.1e1, 1e1, 1i, 1j, 1e2j\",\n      \"match\": \"(?<=[\\\\s\\\\-\\\\+\\\\*\\\\/\\\\\\\\=:\\\\[\\\\(\\\\{,]|^)\\\\d*\\\\.?\\\\d+([eE][+-]?\\\\d)?([0-9&&[^\\\\.]])*(i|j)?\\\\b\",\n      \"name\": \"constant.numeric.matlab\"\n    },\n    \"operators\": {\n      \"comment\": \"Operator symbols\",\n      \"match\": \"(?<=\\\\s)(==|~=|>|>=|<|<=|&|&&|:|\\\\||\\\\|\\\\||\\\\+|-|\\\\*|\\\\.\\\\*|/|\\\\./|\\\\\\\\|\\\\.\\\\\\\\|\\\\^|\\\\.\\\\^)(?=\\\\s)\",\n      \"name\": \"keyword.operator.symbols.matlab\"\n    },\n    \"parens\": {\n      \"begin\": \"\\\\(\",\n      \"comment\": \"We don't include $self here to avoid matching command syntax inside (), [], {}\",\n      \"end\": \"(\\\\)|(?<!\\\\.\\\\.\\\\.).\\\\n)\",\n      \"patterns\": [{\n        \"include\": \"#end_in_parens\"\n      }, {\n        \"include\": \"#all_before_command_dual\"\n      }, {\n        \"include\": \"#all_after_command_dual\"\n      }, {\n        \"comment\": \"These block keywords pick up any such missed keywords when the block matching for things like (), if-end, etc. don't work. Useful for when someone has partially written\",\n        \"include\": \"#block_keywords\"\n      }]\n    },\n    \"square_brackets\": {\n      \"begin\": \"\\\\[\",\n      \"comment\": \"We don't include $self here to avoid matching command syntax inside (), [], {}\",\n      \"end\": \"\\\\]\",\n      \"patterns\": [{\n        \"include\": \"#all_before_command_dual\"\n      }, {\n        \"include\": \"#all_after_command_dual\"\n      }, {\n        \"comment\": \"These block keywords pick up any such missed keywords when the block matching for things like (), if-end, etc. don't work. Useful for when someone has partially written\",\n        \"include\": \"#block_keywords\"\n      }]\n    },\n    \"string\": {\n      \"patterns\": [{\n        \"captures\": {\n          \"1\": {\n            \"name\": \"string.interpolated.matlab\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.definition.string.begin.matlab\"\n          }\n        },\n        \"comment\": \"Shell command\",\n        \"match\": \"^\\\\s*((!).*$\\\\n?)\"\n      }, {\n        \"begin\": \"((?<=(\\\\[|\\\\(|\\\\{|=|\\\\s|;|:|,|~|<|>|&|\\\\||-|\\\\+|\\\\*|/|\\\\\\\\|\\\\.|\\\\^))|^)'\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.begin.matlab\"\n          }\n        },\n        \"comment\": \"Character vector literal (single-quoted)\",\n        \"end\": \"'(?=(\\\\[|\\\\(|\\\\{|\\\\]|\\\\)|\\\\}|=|~|<|>|&|\\\\||-|\\\\+|\\\\*|/|\\\\\\\\|\\\\.|\\\\^|\\\\s|;|:|,))\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.end.matlab\"\n          }\n        },\n        \"name\": \"string.quoted.single.matlab\",\n        \"patterns\": [{\n          \"match\": \"''\",\n          \"name\": \"constant.character.escape.matlab\"\n        }, {\n          \"match\": \"'(?=.)\",\n          \"name\": \"invalid.illegal.unescaped-quote.matlab\"\n        }, {\n          \"comment\": \"Operator symbols\",\n          \"match\": \"((\\\\%([\\\\+\\\\-0]?\\\\d{0,3}(\\\\.\\\\d{1,3})?)(c|d|e|E|f|g|G|s|((b|t)?(o|u|x|X))))|\\\\%\\\\%|\\\\\\\\(b|f|n|r|t|\\\\\\\\))\",\n          \"name\": \"constant.character.escape.matlab\"\n        }]\n      }, {\n        \"begin\": '((?<=(\\\\[|\\\\(|\\\\{|=|\\\\s|;|:|,|~|<|>|&|\\\\||-|\\\\+|\\\\*|/|\\\\\\\\|\\\\.|\\\\^))|^)\"',\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.begin.matlab\"\n          }\n        },\n        \"comment\": \"String literal (double-quoted)\",\n        \"end\": '\"(?=(\\\\[|\\\\(|\\\\{|\\\\]|\\\\)|\\\\}|=|~|<|>|&|\\\\||-|\\\\+|\\\\*|/|\\\\\\\\|\\\\.|\\\\^|\\\\||\\\\s|;|:|,))',\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.end.matlab\"\n          }\n        },\n        \"name\": \"string.quoted.double.matlab\",\n        \"patterns\": [{\n          \"match\": '\"\"',\n          \"name\": \"constant.character.escape.matlab\"\n        }, {\n          \"match\": '\"(?=.)',\n          \"name\": \"invalid.illegal.unescaped-quote.matlab\"\n        }]\n      }]\n    },\n    \"transpose\": {\n      \"match\": \"\\\\.'\",\n      \"name\": \"keyword.operator.transpose.matlab\"\n    },\n    \"validator_strings\": {\n      \"comment\": \"Simplified string patterns nested inside validator functions which don't change scopes of matches.\",\n      \"patterns\": [{\n        \"patterns\": [{\n          \"begin\": \"((?<=(\\\\[|\\\\(|\\\\{|=|\\\\s|;|:|,|~|<|>|&|\\\\||-|\\\\+|\\\\*|/|\\\\\\\\|\\\\.|\\\\^))|^)'\",\n          \"comment\": \"Character vector literal (single-quoted)\",\n          \"end\": \"'(?=(\\\\[|\\\\(|\\\\{|\\\\]|\\\\)|\\\\}|=|~|<|>|&|\\\\||-|\\\\+|\\\\*|/|\\\\\\\\|\\\\.|\\\\^|\\\\s|;|:|,))\",\n          \"name\": \"storage.type.matlab\",\n          \"patterns\": [{\n            \"match\": \"''\"\n          }, {\n            \"match\": \"'(?=.)\"\n          }, {\n            \"match\": \"([^']+)\"\n          }]\n        }, {\n          \"begin\": '((?<=(\\\\[|\\\\(|\\\\{|=|\\\\s|;|:|,|~|<|>|&|\\\\||-|\\\\+|\\\\*|/|\\\\\\\\|\\\\.|\\\\^))|^)\"',\n          \"comment\": \"String literal (double-quoted)\",\n          \"end\": '\"(?=(\\\\[|\\\\(|\\\\{|\\\\]|\\\\)|\\\\}|=|~|<|>|&|\\\\||-|\\\\+|\\\\*|/|\\\\\\\\|\\\\.|\\\\^|\\\\||\\\\s|;|:|,))',\n          \"name\": \"storage.type.matlab\",\n          \"patterns\": [{\n            \"match\": '\"\"'\n          }, {\n            \"match\": '\"(?=.)'\n          }, {\n            \"match\": '[^\"]+'\n          }]\n        }]\n      }]\n    },\n    \"validators\": {\n      \"begin\": \"\\\\s*[;]?\\\\s*([a-zA-Z][a-zA-Z0-9_\\\\.\\\\?]*)\",\n      \"comment\": \"Property and argument validation. Match an identifier allowing . and ?.\",\n      \"end\": \"([;\\\\n%=].*)\",\n      \"endCaptures\": {\n        \"1\": {\n          \"patterns\": [{\n            \"captures\": {\n              \"1\": {\n                \"patterns\": [{\n                  \"include\": \"$self\"\n                }]\n              }\n            },\n            \"comment\": \"Match comments\",\n            \"match\": \"([%].*)\"\n          }, {\n            \"captures\": {\n              \"1\": {\n                \"patterns\": [{\n                  \"include\": \"$self\"\n                }]\n              }\n            },\n            \"comment\": \"Handle things like arg = val; nextArg\",\n            \"match\": \"(=[^;]*)\"\n          }, {\n            \"captures\": {\n              \"1\": {\n                \"patterns\": [{\n                  \"include\": \"#validators\"\n                }]\n              }\n            },\n            \"comment\": \"End of property/argument patterns which start a new property/argument. Look for beginning of identifier after semicolon. Otherwise treat as regular code.\",\n            \"match\": \"([\\\\n;]\\\\s*[a-zA-Z].*)\"\n          }, {\n            \"include\": \"$self\"\n          }]\n        }\n      },\n      \"patterns\": [{\n        \"include\": \"#line_continuation\"\n      }, {\n        \"comment\": \"Size declaration\",\n        \"match\": \"\\\\s*(\\\\([^\\\\)]*\\\\))\",\n        \"name\": \"storage.type.matlab\"\n      }, {\n        \"comment\": \"Type declaration\",\n        \"match\": \"([a-zA-Z][a-zA-Z0-9_\\\\.]*)\",\n        \"name\": \"storage.type.matlab\"\n      }, {\n        \"include\": \"#braced_validator_list\"\n      }]\n    },\n    \"variables\": {\n      \"comment\": \"MATLAB variables\",\n      \"match\": \"(?<!\\\\.)\\\\b(nargin|nargout|varargin|varargout)\\\\b\",\n      \"name\": \"variable.other.function.matlab\"\n    }\n  },\n  \"scopeName\": \"source.matlab\"\n});\nvar matlab = [lang];\nexport { matlab as default };"],
  "mappings": ";;;AAAA,IAAM,OAAO,OAAO,OAAO;AAAA,EACzB,eAAe;AAAA,EACf,aAAa,CAAC,GAAG;AAAA,EACjB,QAAQ;AAAA,EACR,YAAY,CAAC;AAAA,IACX,WAAW;AAAA,IACX,WAAW;AAAA,EACb,GAAG;AAAA,IACD,WAAW;AAAA,EACb,GAAG;AAAA,IACD,WAAW;AAAA,EACb,CAAC;AAAA,EACD,cAAc;AAAA,IACZ,0BAA0B;AAAA,MACxB,YAAY,CAAC;AAAA,QACX,WAAW;AAAA,MACb,GAAG;AAAA,QACD,WAAW;AAAA,MACb,GAAG;AAAA,QACD,WAAW;AAAA,MACb,GAAG;AAAA,QACD,WAAW;AAAA,MACb,GAAG;AAAA,QACD,WAAW;AAAA,MACb,GAAG;AAAA,QACD,WAAW;AAAA,MACb,GAAG;AAAA,QACD,WAAW;AAAA,MACb,GAAG;AAAA,QACD,WAAW;AAAA,MACb,GAAG;AAAA,QACD,WAAW;AAAA,MACb,CAAC;AAAA,IACH;AAAA,IACA,2BAA2B;AAAA,MACzB,YAAY,CAAC;AAAA,QACX,WAAW;AAAA,MACb,GAAG;AAAA,QACD,WAAW;AAAA,MACb,GAAG;AAAA,QACD,WAAW;AAAA,MACb,GAAG;AAAA,QACD,WAAW;AAAA,MACb,GAAG;AAAA,QACD,WAAW;AAAA,MACb,GAAG;AAAA,QACD,WAAW;AAAA,MACb,GAAG;AAAA,QACD,WAAW;AAAA,MACb,GAAG;AAAA,QACD,WAAW;AAAA,MACb,GAAG;AAAA,QACD,WAAW;AAAA,MACb,CAAC;AAAA,IACH;AAAA,IACA,UAAU;AAAA,MACR,YAAY,CAAC;AAAA,QACX,SAAS;AAAA,QACT,iBAAiB;AAAA,UACf,KAAK;AAAA,YACH,QAAQ;AAAA,UACV;AAAA,QACF;AAAA,QACA,OAAO;AAAA,QACP,eAAe;AAAA,UACb,KAAK;AAAA,YACH,QAAQ;AAAA,UACV;AAAA,QACF;AAAA,QACA,QAAQ;AAAA,QACR,YAAY,CAAC;AAAA,UACX,WAAW;AAAA,QACb,CAAC;AAAA,MACH,GAAG;AAAA,QACD,SAAS;AAAA,QACT,iBAAiB;AAAA,UACf,KAAK;AAAA,YACH,QAAQ;AAAA,UACV;AAAA,QACF;AAAA,QACA,OAAO;AAAA,QACP,eAAe;AAAA,UACb,KAAK;AAAA,YACH,QAAQ;AAAA,UACV;AAAA,UACA,KAAK;AAAA,YACH,YAAY,CAAC;AAAA,cACX,WAAW;AAAA,YACb,CAAC;AAAA,UACH;AAAA,QACF;AAAA,QACA,QAAQ;AAAA,QACR,YAAY,CAAC;AAAA,UACX,YAAY;AAAA,YACV,KAAK;AAAA,cACH,QAAQ;AAAA,YACV;AAAA,YACA,KAAK;AAAA,cACH,YAAY,CAAC;AAAA,gBACX,WAAW;AAAA,cACb,CAAC;AAAA,YACH;AAAA,UACF;AAAA,UACA,OAAO;AAAA,UACP,SAAS;AAAA,UACT,QAAQ;AAAA,QACV,GAAG;AAAA,UACD,YAAY;AAAA,YACV,KAAK;AAAA,cACH,QAAQ;AAAA,YACV;AAAA,YACA,KAAK;AAAA,cACH,YAAY,CAAC;AAAA,gBACX,WAAW;AAAA,cACb,CAAC;AAAA,YACH;AAAA,UACF;AAAA,UACA,OAAO;AAAA,UACP,SAAS;AAAA,UACT,QAAQ;AAAA,QACV,GAAG;AAAA,UACD,WAAW;AAAA,QACb,CAAC;AAAA,MACH,GAAG;AAAA,QACD,SAAS;AAAA,QACT,iBAAiB;AAAA,UACf,KAAK;AAAA,YACH,QAAQ;AAAA,UACV;AAAA,QACF;AAAA,QACA,OAAO;AAAA,QACP,eAAe;AAAA,UACb,KAAK;AAAA,YACH,QAAQ;AAAA,UACV;AAAA,QACF;AAAA,QACA,QAAQ;AAAA,QACR,YAAY,CAAC;AAAA,UACX,SAAS;AAAA,UACT,OAAO;AAAA,UACP,QAAQ;AAAA,UACR,YAAY,CAAC;AAAA,YACX,WAAW;AAAA,UACb,CAAC;AAAA,QACH,GAAG;AAAA,UACD,WAAW;AAAA,QACb,CAAC;AAAA,MACH,GAAG;AAAA,QACD,SAAS;AAAA,QACT,iBAAiB;AAAA,UACf,KAAK;AAAA,YACH,QAAQ;AAAA,UACV;AAAA,QACF;AAAA,QACA,OAAO;AAAA,QACP,eAAe;AAAA,UACb,KAAK;AAAA,YACH,QAAQ;AAAA,UACV;AAAA,QACF;AAAA,QACA,QAAQ;AAAA,QACR,YAAY,CAAC;AAAA,UACX,SAAS;AAAA,UACT,OAAO;AAAA,UACP,QAAQ;AAAA,UACR,YAAY,CAAC;AAAA,YACX,WAAW;AAAA,UACb,CAAC;AAAA,QACH,GAAG;AAAA,UACD,WAAW;AAAA,QACb,CAAC;AAAA,MACH,GAAG;AAAA,QACD,SAAS;AAAA,QACT,iBAAiB;AAAA,UACf,KAAK;AAAA,YACH,QAAQ;AAAA,UACV;AAAA,QACF;AAAA,QACA,OAAO;AAAA,QACP,eAAe;AAAA,UACb,KAAK;AAAA,YACH,QAAQ;AAAA,UACV;AAAA,QACF;AAAA,QACA,QAAQ;AAAA,QACR,YAAY,CAAC;AAAA,UACX,YAAY;AAAA,YACV,KAAK;AAAA,cACH,QAAQ;AAAA,YACV;AAAA,YACA,KAAK;AAAA,cACH,YAAY,CAAC;AAAA,gBACX,WAAW;AAAA,cACb,CAAC;AAAA,YACH;AAAA,UACF;AAAA,UACA,OAAO;AAAA,UACP,SAAS;AAAA,UACT,QAAQ;AAAA,QACV,GAAG;AAAA,UACD,YAAY;AAAA,YACV,KAAK;AAAA,cACH,QAAQ;AAAA,YACV;AAAA,YACA,KAAK;AAAA,cACH,YAAY,CAAC;AAAA,gBACX,WAAW;AAAA,cACb,CAAC;AAAA,YACH;AAAA,UACF;AAAA,UACA,OAAO;AAAA,UACP,SAAS;AAAA,UACT,QAAQ;AAAA,QACV,GAAG;AAAA,UACD,WAAW;AAAA,QACb,CAAC;AAAA,MACH,GAAG;AAAA,QACD,SAAS;AAAA,QACT,iBAAiB;AAAA,UACf,KAAK;AAAA,YACH,QAAQ;AAAA,UACV;AAAA,QACF;AAAA,QACA,OAAO;AAAA,QACP,eAAe;AAAA,UACb,KAAK;AAAA,YACH,QAAQ;AAAA,UACV;AAAA,QACF;AAAA,QACA,QAAQ;AAAA,QACR,YAAY,CAAC;AAAA,UACX,YAAY;AAAA,YACV,KAAK;AAAA,cACH,QAAQ;AAAA,YACV;AAAA,YACA,KAAK;AAAA,cACH,YAAY,CAAC;AAAA,gBACX,WAAW;AAAA,cACb,CAAC;AAAA,YACH;AAAA,UACF;AAAA,UACA,OAAO;AAAA,UACP,SAAS;AAAA,UACT,QAAQ;AAAA,QACV,GAAG;AAAA,UACD,WAAW;AAAA,QACb,CAAC;AAAA,MACH,GAAG;AAAA,QACD,SAAS;AAAA,QACT,iBAAiB;AAAA,UACf,KAAK;AAAA,YACH,QAAQ;AAAA,UACV;AAAA,QACF;AAAA,QACA,OAAO;AAAA,QACP,eAAe;AAAA,UACb,KAAK;AAAA,YACH,QAAQ;AAAA,UACV;AAAA,QACF;AAAA,QACA,QAAQ;AAAA,QACR,YAAY,CAAC;AAAA,UACX,WAAW;AAAA,QACb,CAAC;AAAA,MACH,CAAC;AAAA,IACH;AAAA,IACA,yBAAyB;AAAA,MACvB,SAAS;AAAA,MACT,iBAAiB;AAAA,QACf,KAAK;AAAA,UACH,QAAQ;AAAA,QACV;AAAA,MACF;AAAA,MACA,WAAW;AAAA,MACX,OAAO;AAAA,MACP,eAAe;AAAA,QACb,KAAK;AAAA,UACH,QAAQ;AAAA,QACV;AAAA,MACF;AAAA,MACA,YAAY,CAAC;AAAA,QACX,WAAW;AAAA,MACb,GAAG;AAAA,QACD,WAAW;AAAA,MACb,GAAG;AAAA,QACD,WAAW;AAAA,MACb,GAAG;AAAA,QACD,YAAY;AAAA,UACV,KAAK;AAAA,YACH,QAAQ;AAAA,UACV;AAAA,QACF;AAAA,QACA,SAAS;AAAA,MACX,GAAG;AAAA,QACD,SAAS;AAAA,QACT,QAAQ;AAAA,MACV,CAAC;AAAA,IACH;AAAA,IACA,YAAY;AAAA,MACV,YAAY,CAAC;AAAA,QACX,SAAS;AAAA,QACT,iBAAiB;AAAA,UACf,KAAK;AAAA,YACH,QAAQ;AAAA,UACV;AAAA,UACA,KAAK;AAAA,YACH,YAAY,CAAC;AAAA,cACX,YAAY;AAAA,gBACV,KAAK;AAAA,kBACH,YAAY,CAAC;AAAA,oBACX,SAAS;AAAA,oBACT,QAAQ;AAAA,kBACV,GAAG;AAAA,oBACD,SAAS;AAAA,oBACT,OAAO;AAAA,oBACP,YAAY,CAAC;AAAA,sBACX,SAAS;AAAA,sBACT,QAAQ;AAAA,oBACV,GAAG;AAAA,sBACD,WAAW;AAAA,oBACb,CAAC;AAAA,kBACH,CAAC;AAAA,gBACH;AAAA,gBACA,KAAK;AAAA,kBACH,QAAQ;AAAA,gBACV;AAAA,gBACA,KAAK;AAAA,kBACH,QAAQ;AAAA,gBACV;AAAA,gBACA,KAAK;AAAA,kBACH,QAAQ;AAAA,gBACV;AAAA,gBACA,KAAK;AAAA,kBACH,YAAY,CAAC;AAAA,oBACX,SAAS;AAAA,oBACT,QAAQ;AAAA,kBACV,GAAG;AAAA,oBACD,SAAS;AAAA,oBACT,QAAQ;AAAA,kBACV,CAAC;AAAA,gBACH;AAAA,gBACA,KAAK;AAAA,kBACH,YAAY,CAAC;AAAA,oBACX,WAAW;AAAA,kBACb,CAAC;AAAA,gBACH;AAAA,cACF;AAAA,cACA,SAAS;AAAA,YACX,CAAC;AAAA,UACH;AAAA,QACF;AAAA,QACA,OAAO;AAAA,QACP,eAAe;AAAA,UACb,KAAK;AAAA,YACH,QAAQ;AAAA,UACV;AAAA,QACF;AAAA,QACA,QAAQ;AAAA,QACR,YAAY,CAAC;AAAA,UACX,SAAS;AAAA,UACT,iBAAiB;AAAA,YACf,KAAK;AAAA,cACH,QAAQ;AAAA,YACV;AAAA,YACA,KAAK;AAAA,cACH,YAAY,CAAC;AAAA,gBACX,SAAS;AAAA,gBACT,QAAQ;AAAA,cACV,GAAG;AAAA,gBACD,SAAS;AAAA,gBACT,OAAO;AAAA,gBACP,YAAY,CAAC;AAAA,kBACX,SAAS;AAAA,kBACT,QAAQ;AAAA,gBACV,GAAG;AAAA,kBACD,SAAS;AAAA,kBACT,QAAQ;AAAA,gBACV,CAAC;AAAA,cACH,CAAC;AAAA,YACH;AAAA,UACF;AAAA,UACA,OAAO;AAAA,UACP,eAAe;AAAA,YACb,KAAK;AAAA,cACH,QAAQ;AAAA,YACV;AAAA,UACF;AAAA,UACA,QAAQ;AAAA,UACR,YAAY,CAAC;AAAA,YACX,WAAW;AAAA,UACb,GAAG;AAAA,YACD,WAAW;AAAA,UACb,CAAC;AAAA,QACH,GAAG;AAAA,UACD,SAAS;AAAA,UACT,iBAAiB;AAAA,YACf,KAAK;AAAA,cACH,QAAQ;AAAA,YACV;AAAA,YACA,KAAK;AAAA,cACH,YAAY,CAAC;AAAA,gBACX,SAAS;AAAA,gBACT,QAAQ;AAAA,cACV,GAAG;AAAA,gBACD,SAAS;AAAA,gBACT,OAAO;AAAA,gBACP,YAAY,CAAC;AAAA,kBACX,SAAS;AAAA,kBACT,QAAQ;AAAA,gBACV,GAAG;AAAA,kBACD,SAAS;AAAA,kBACT,QAAQ;AAAA,gBACV,CAAC;AAAA,cACH,CAAC;AAAA,YACH;AAAA,UACF;AAAA,UACA,OAAO;AAAA,UACP,eAAe;AAAA,YACb,KAAK;AAAA,cACH,QAAQ;AAAA,YACV;AAAA,UACF;AAAA,UACA,QAAQ;AAAA,UACR,YAAY,CAAC;AAAA,YACX,WAAW;AAAA,UACb,CAAC;AAAA,QACH,GAAG;AAAA,UACD,SAAS;AAAA,UACT,iBAAiB;AAAA,YACf,KAAK;AAAA,cACH,QAAQ;AAAA,YACV;AAAA,YACA,KAAK;AAAA,cACH,YAAY,CAAC;AAAA,gBACX,SAAS;AAAA,gBACT,QAAQ;AAAA,cACV,GAAG;AAAA,gBACD,SAAS;AAAA,gBACT,OAAO;AAAA,gBACP,YAAY,CAAC;AAAA,kBACX,SAAS;AAAA,kBACT,QAAQ;AAAA,gBACV,GAAG;AAAA,kBACD,SAAS;AAAA,kBACT,QAAQ;AAAA,gBACV,CAAC;AAAA,cACH,CAAC;AAAA,YACH;AAAA,UACF;AAAA,UACA,OAAO;AAAA,UACP,eAAe;AAAA,YACb,KAAK;AAAA,cACH,QAAQ;AAAA,YACV;AAAA,UACF;AAAA,UACA,QAAQ;AAAA,UACR,YAAY,CAAC;AAAA,YACX,WAAW;AAAA,UACb,CAAC;AAAA,QACH,GAAG;AAAA,UACD,SAAS;AAAA,UACT,iBAAiB;AAAA,YACf,KAAK;AAAA,cACH,QAAQ;AAAA,YACV;AAAA,UACF;AAAA,UACA,OAAO;AAAA,UACP,eAAe;AAAA,YACb,KAAK;AAAA,cACH,QAAQ;AAAA,YACV;AAAA,UACF;AAAA,UACA,QAAQ;AAAA,UACR,YAAY,CAAC;AAAA,YACX,WAAW;AAAA,UACb,CAAC;AAAA,QACH,GAAG;AAAA,UACD,WAAW;AAAA,QACb,CAAC;AAAA,MACH,CAAC;AAAA,IACH;AAAA,IACA,gBAAgB;AAAA,MACd,YAAY;AAAA,QACV,KAAK;AAAA,UACH,QAAQ;AAAA,QACV;AAAA,QACA,KAAK;AAAA,UACH,QAAQ;AAAA,QACV;AAAA,QACA,MAAM;AAAA,UACJ,QAAQ;AAAA,QACV;AAAA,MACF;AAAA,MACA,WAAW;AAAA,MACX,SAAS;AAAA,IACX;AAAA,IACA,iBAAiB;AAAA,MACf,SAAS;AAAA,MACT,iBAAiB;AAAA,QACf,KAAK;AAAA,UACH,QAAQ;AAAA,QACV;AAAA,MACF;AAAA,MACA,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,YAAY,CAAC;AAAA,QACX,WAAW;AAAA,MACb,GAAG;AAAA,QACD,SAAS;AAAA,MACX,CAAC;AAAA,IACH;AAAA,IACA,YAAY;AAAA,MACV,YAAY,CAAC;AAAA,QACX,SAAS;AAAA,QACT,iBAAiB;AAAA,UACf,KAAK;AAAA,YACH,QAAQ;AAAA,UACV;AAAA,QACF;AAAA,QACA,OAAO;AAAA,QACP,YAAY,CAAC;AAAA,UACX,SAAS;AAAA,UACT,iBAAiB;AAAA,YACf,KAAK;AAAA,cACH,QAAQ;AAAA,YACV;AAAA,UACF;AAAA,UACA,OAAO;AAAA,UACP,QAAQ;AAAA,UACR,YAAY,CAAC;AAAA,YACX,SAAS;AAAA,YACT,eAAe;AAAA,YACf,OAAO;AAAA,UACT,CAAC;AAAA,QACH,CAAC;AAAA,MACH,GAAG;AAAA,QACD,WAAW;AAAA,MACb,GAAG;AAAA,QACD,SAAS;AAAA,QACT,iBAAiB;AAAA,UACf,KAAK;AAAA,YACH,QAAQ;AAAA,UACV;AAAA,QACF;AAAA,QACA,OAAO;AAAA,QACP,YAAY,CAAC;AAAA,UACX,SAAS;AAAA,UACT,iBAAiB;AAAA,YACf,KAAK;AAAA,cACH,QAAQ;AAAA,YACV;AAAA,UACF;AAAA,UACA,OAAO;AAAA,UACP,QAAQ;AAAA,QACV,CAAC;AAAA,MACH,CAAC;AAAA,IACH;AAAA,IACA,uBAAuB;AAAA,MACrB,SAAS;AAAA,MACT,QAAQ;AAAA,IACV;AAAA,IACA,aAAa;AAAA,MACX,WAAW;AAAA,MACX,SAAS;AAAA,MACT,QAAQ;AAAA,IACV;AAAA,IACA,sBAAsB;AAAA,MACpB,YAAY;AAAA,QACV,KAAK;AAAA,UACH,QAAQ;AAAA,QACV;AAAA,MACF;AAAA,MACA,SAAS;AAAA,MACT,QAAQ;AAAA,IACV;AAAA,IACA,kBAAkB;AAAA,MAChB,SAAS;AAAA,MACT,WAAW;AAAA,MACX,OAAO;AAAA,MACP,YAAY,CAAC;AAAA,QACX,WAAW;AAAA,MACb,GAAG;AAAA,QACD,WAAW;AAAA,MACb,GAAG;AAAA,QACD,WAAW;AAAA,MACb,GAAG;AAAA,QACD,WAAW;AAAA,MACb,GAAG;AAAA,QACD,WAAW;AAAA,QACX,WAAW;AAAA,MACb,CAAC;AAAA,IACH;AAAA,IACA,iBAAiB;AAAA,MACf,WAAW;AAAA,MACX,SAAS;AAAA,MACT,QAAQ;AAAA,IACV;AAAA,IACA,YAAY;AAAA,MACV,YAAY,CAAC;AAAA,QACX,SAAS;AAAA,QACT,iBAAiB;AAAA,UACf,KAAK;AAAA,YACH,QAAQ;AAAA,UACV;AAAA,UACA,KAAK;AAAA,YACH,QAAQ;AAAA,UACV;AAAA,UACA,KAAK;AAAA,YACH,YAAY,CAAC;AAAA,cACX,SAAS;AAAA,cACT,QAAQ;AAAA,YACV,CAAC;AAAA,UACH;AAAA,UACA,KAAK;AAAA,YACH,QAAQ;AAAA,UACV;AAAA,UACA,KAAK;AAAA,YACH,QAAQ;AAAA,UACV;AAAA,UACA,KAAK;AAAA,YACH,QAAQ;AAAA,UACV;AAAA,QACF;AAAA,QACA,OAAO;AAAA,QACP,eAAe;AAAA,UACb,KAAK;AAAA,YACH,QAAQ;AAAA,UACV;AAAA,QACF;AAAA,QACA,QAAQ;AAAA,QACR,YAAY,CAAC;AAAA,UACX,SAAS;AAAA,UACT,OAAO;AAAA,UACP,QAAQ;AAAA,UACR,YAAY,CAAC;AAAA,YACX,WAAW;AAAA,UACb,GAAG;AAAA,YACD,SAAS;AAAA,YACT,QAAQ;AAAA,UACV,CAAC;AAAA,QACH,GAAG;AAAA,UACD,SAAS;AAAA,UACT,iBAAiB;AAAA,YACf,KAAK;AAAA,cACH,QAAQ;AAAA,YACV;AAAA,YACA,KAAK;AAAA,cACH,YAAY,CAAC;AAAA,gBACX,SAAS;AAAA,gBACT,QAAQ;AAAA,cACV,CAAC;AAAA,YACH;AAAA,UACF;AAAA,UACA,OAAO;AAAA,UACP,eAAe;AAAA,YACb,KAAK;AAAA,cACH,QAAQ;AAAA,YACV;AAAA,UACF;AAAA,UACA,QAAQ;AAAA,UACR,YAAY,CAAC;AAAA,YACX,WAAW;AAAA,UACb,GAAG;AAAA,YACD,WAAW;AAAA,UACb,CAAC;AAAA,QACH,GAAG;AAAA,UACD,WAAW;AAAA,QACb,CAAC;AAAA,MACH,CAAC;AAAA,IACH;AAAA,IACA,qBAAqB;AAAA,MACnB,YAAY;AAAA,QACV,KAAK;AAAA,UACH,QAAQ;AAAA,QACV;AAAA,MACF;AAAA,MACA,SAAS;AAAA,MACT,QAAQ;AAAA,IACV;AAAA,IACA,2BAA2B;AAAA,MACzB,WAAW;AAAA,MACX,SAAS;AAAA,MACT,iBAAiB;AAAA,QACf,KAAK;AAAA,UACH,YAAY,CAAC;AAAA,YACX,WAAW;AAAA,UACb,CAAC;AAAA,QACH;AAAA,MACF;AAAA,MACA,WAAW;AAAA,MACX,OAAO;AAAA,MACP,YAAY,CAAC;AAAA,QACX,WAAW;AAAA,MACb,GAAG;AAAA,QACD,WAAW;AAAA,MACb,GAAG;AAAA,QACD,WAAW;AAAA,MACb,GAAG;AAAA,QACD,WAAW;AAAA,MACb,GAAG;AAAA,QACD,WAAW;AAAA,QACX,WAAW;AAAA,MACb,CAAC;AAAA,IACH;AAAA,IACA,qBAAqB;AAAA,MACnB,YAAY;AAAA,QACV,KAAK;AAAA,UACH,QAAQ;AAAA,QACV;AAAA,QACA,KAAK;AAAA,UACH,QAAQ;AAAA,QACV;AAAA,MACF;AAAA,MACA,WAAW;AAAA,MACX,SAAS;AAAA,MACT,QAAQ;AAAA,IACV;AAAA,IACA,WAAW;AAAA,MACT,WAAW;AAAA,MACX,SAAS;AAAA,MACT,QAAQ;AAAA,IACV;AAAA,IACA,aAAa;AAAA,MACX,WAAW;AAAA,MACX,SAAS;AAAA,MACT,QAAQ;AAAA,IACV;AAAA,IACA,UAAU;AAAA,MACR,SAAS;AAAA,MACT,WAAW;AAAA,MACX,OAAO;AAAA,MACP,YAAY,CAAC;AAAA,QACX,WAAW;AAAA,MACb,GAAG;AAAA,QACD,WAAW;AAAA,MACb,GAAG;AAAA,QACD,WAAW;AAAA,MACb,GAAG;AAAA,QACD,WAAW;AAAA,QACX,WAAW;AAAA,MACb,CAAC;AAAA,IACH;AAAA,IACA,mBAAmB;AAAA,MACjB,SAAS;AAAA,MACT,WAAW;AAAA,MACX,OAAO;AAAA,MACP,YAAY,CAAC;AAAA,QACX,WAAW;AAAA,MACb,GAAG;AAAA,QACD,WAAW;AAAA,MACb,GAAG;AAAA,QACD,WAAW;AAAA,QACX,WAAW;AAAA,MACb,CAAC;AAAA,IACH;AAAA,IACA,UAAU;AAAA,MACR,YAAY,CAAC;AAAA,QACX,YAAY;AAAA,UACV,KAAK;AAAA,YACH,QAAQ;AAAA,UACV;AAAA,UACA,KAAK;AAAA,YACH,QAAQ;AAAA,UACV;AAAA,QACF;AAAA,QACA,WAAW;AAAA,QACX,SAAS;AAAA,MACX,GAAG;AAAA,QACD,SAAS;AAAA,QACT,iBAAiB;AAAA,UACf,KAAK;AAAA,YACH,QAAQ;AAAA,UACV;AAAA,QACF;AAAA,QACA,WAAW;AAAA,QACX,OAAO;AAAA,QACP,eAAe;AAAA,UACb,KAAK;AAAA,YACH,QAAQ;AAAA,UACV;AAAA,QACF;AAAA,QACA,QAAQ;AAAA,QACR,YAAY,CAAC;AAAA,UACX,SAAS;AAAA,UACT,QAAQ;AAAA,QACV,GAAG;AAAA,UACD,SAAS;AAAA,UACT,QAAQ;AAAA,QACV,GAAG;AAAA,UACD,WAAW;AAAA,UACX,SAAS;AAAA,UACT,QAAQ;AAAA,QACV,CAAC;AAAA,MACH,GAAG;AAAA,QACD,SAAS;AAAA,QACT,iBAAiB;AAAA,UACf,KAAK;AAAA,YACH,QAAQ;AAAA,UACV;AAAA,QACF;AAAA,QACA,WAAW;AAAA,QACX,OAAO;AAAA,QACP,eAAe;AAAA,UACb,KAAK;AAAA,YACH,QAAQ;AAAA,UACV;AAAA,QACF;AAAA,QACA,QAAQ;AAAA,QACR,YAAY,CAAC;AAAA,UACX,SAAS;AAAA,UACT,QAAQ;AAAA,QACV,GAAG;AAAA,UACD,SAAS;AAAA,UACT,QAAQ;AAAA,QACV,CAAC;AAAA,MACH,CAAC;AAAA,IACH;AAAA,IACA,aAAa;AAAA,MACX,SAAS;AAAA,MACT,QAAQ;AAAA,IACV;AAAA,IACA,qBAAqB;AAAA,MACnB,WAAW;AAAA,MACX,YAAY,CAAC;AAAA,QACX,YAAY,CAAC;AAAA,UACX,SAAS;AAAA,UACT,WAAW;AAAA,UACX,OAAO;AAAA,UACP,QAAQ;AAAA,UACR,YAAY,CAAC;AAAA,YACX,SAAS;AAAA,UACX,GAAG;AAAA,YACD,SAAS;AAAA,UACX,GAAG;AAAA,YACD,SAAS;AAAA,UACX,CAAC;AAAA,QACH,GAAG;AAAA,UACD,SAAS;AAAA,UACT,WAAW;AAAA,UACX,OAAO;AAAA,UACP,QAAQ;AAAA,UACR,YAAY,CAAC;AAAA,YACX,SAAS;AAAA,UACX,GAAG;AAAA,YACD,SAAS;AAAA,UACX,GAAG;AAAA,YACD,SAAS;AAAA,UACX,CAAC;AAAA,QACH,CAAC;AAAA,MACH,CAAC;AAAA,IACH;AAAA,IACA,cAAc;AAAA,MACZ,SAAS;AAAA,MACT,WAAW;AAAA,MACX,OAAO;AAAA,MACP,eAAe;AAAA,QACb,KAAK;AAAA,UACH,YAAY,CAAC;AAAA,YACX,YAAY;AAAA,cACV,KAAK;AAAA,gBACH,YAAY,CAAC;AAAA,kBACX,WAAW;AAAA,gBACb,CAAC;AAAA,cACH;AAAA,YACF;AAAA,YACA,WAAW;AAAA,YACX,SAAS;AAAA,UACX,GAAG;AAAA,YACD,YAAY;AAAA,cACV,KAAK;AAAA,gBACH,YAAY,CAAC;AAAA,kBACX,WAAW;AAAA,gBACb,CAAC;AAAA,cACH;AAAA,YACF;AAAA,YACA,WAAW;AAAA,YACX,SAAS;AAAA,UACX,GAAG;AAAA,YACD,YAAY;AAAA,cACV,KAAK;AAAA,gBACH,YAAY,CAAC;AAAA,kBACX,WAAW;AAAA,gBACb,CAAC;AAAA,cACH;AAAA,YACF;AAAA,YACA,WAAW;AAAA,YACX,SAAS;AAAA,UACX,GAAG;AAAA,YACD,WAAW;AAAA,UACb,CAAC;AAAA,QACH;AAAA,MACF;AAAA,MACA,YAAY,CAAC;AAAA,QACX,WAAW;AAAA,MACb,GAAG;AAAA,QACD,WAAW;AAAA,QACX,SAAS;AAAA,QACT,QAAQ;AAAA,MACV,GAAG;AAAA,QACD,WAAW;AAAA,QACX,SAAS;AAAA,QACT,QAAQ;AAAA,MACV,GAAG;AAAA,QACD,WAAW;AAAA,MACb,CAAC;AAAA,IACH;AAAA,IACA,aAAa;AAAA,MACX,WAAW;AAAA,MACX,SAAS;AAAA,MACT,QAAQ;AAAA,IACV;AAAA,EACF;AAAA,EACA,aAAa;AACf,CAAC;AACD,IAAI,SAAS,CAAC,IAAI;",
  "names": []
}
