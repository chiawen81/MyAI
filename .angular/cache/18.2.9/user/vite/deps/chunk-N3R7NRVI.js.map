{
  "version": 3,
  "sources": ["../../../../../../node_modules/shiki/dist/langs/ruby.mjs"],
  "sourcesContent": ["import html from './html.mjs';\nimport xml from './xml.mjs';\nimport sql from './sql.mjs';\nimport css from './css.mjs';\nimport c from './c.mjs';\nimport javascript from './javascript.mjs';\nimport shellscript from './shellscript.mjs';\nimport lua from './lua.mjs';\nimport './java.mjs';\nconst lang = Object.freeze({\n  \"displayName\": \"Ruby\",\n  \"name\": \"ruby\",\n  \"patterns\": [{\n    \"captures\": {\n      \"1\": {\n        \"name\": \"keyword.control.class.ruby\"\n      },\n      \"2\": {\n        \"name\": \"entity.name.type.class.ruby\"\n      },\n      \"3\": {\n        \"name\": \"keyword.operator.other.ruby\"\n      },\n      \"4\": {\n        \"name\": \"entity.other.inherited-class.ruby\"\n      },\n      \"5\": {\n        \"name\": \"keyword.operator.other.ruby\"\n      },\n      \"6\": {\n        \"name\": \"variable.other.object.ruby\"\n      }\n    },\n    \"match\": \"^\\\\s*(class)\\\\s+(?:([.a-zA-Z0-9_:]+)(?:\\\\s*(<)\\\\s*([.a-zA-Z0-9_:]+))?|(<<)\\\\s*([.a-zA-Z0-9_:]+))\",\n    \"name\": \"meta.class.ruby\"\n  }, {\n    \"captures\": {\n      \"1\": {\n        \"name\": \"keyword.control.module.ruby\"\n      },\n      \"2\": {\n        \"name\": \"entity.name.type.module.ruby\"\n      },\n      \"3\": {\n        \"name\": \"entity.other.inherited-class.module.first.ruby\"\n      },\n      \"4\": {\n        \"name\": \"punctuation.separator.inheritance.ruby\"\n      },\n      \"5\": {\n        \"name\": \"entity.other.inherited-class.module.second.ruby\"\n      },\n      \"6\": {\n        \"name\": \"punctuation.separator.inheritance.ruby\"\n      },\n      \"7\": {\n        \"name\": \"entity.other.inherited-class.module.third.ruby\"\n      },\n      \"8\": {\n        \"name\": \"punctuation.separator.inheritance.ruby\"\n      }\n    },\n    \"match\": \"^\\\\s*(module)\\\\s+(([A-Z]\\\\w*(::))?([A-Z]\\\\w*(::))?([A-Z]\\\\w*(::))*[A-Z]\\\\w*)\",\n    \"name\": \"meta.module.ruby\"\n  }, {\n    \"comment\": \"else if is a common mistake carried over from other languages. it works if you put in a second end, but it\\u2019s never what you want.\",\n    \"match\": \"(?<!\\\\.)\\\\belse(\\\\s)+if\\\\b\",\n    \"name\": \"invalid.deprecated.ruby\"\n  }, {\n    \"captures\": {\n      \"1\": {\n        \"name\": \"punctuation.definition.constant.ruby\"\n      }\n    },\n    \"comment\": \"symbols as hash key (1.9 syntax)\",\n    \"match\": \"(?>[a-zA-Z_]\\\\w*(?>[?!])?)(:)(?!:)\",\n    \"name\": \"constant.other.symbol.hashkey.ruby\"\n  }, {\n    \"captures\": {\n      \"1\": {\n        \"name\": \"punctuation.definition.constant.ruby\"\n      }\n    },\n    \"comment\": \"symbols as hash key (1.8 syntax)\",\n    \"match\": \"(?<!:)(:)(?>[a-zA-Z_]\\\\w*(?>[?!])?)(?=\\\\s*=>)\",\n    \"name\": \"constant.other.symbol.hashkey.ruby\"\n  }, {\n    \"comment\": \"everything being a reserved word, not a value and needing a 'end' is a..\",\n    \"match\": \"(?<!\\\\.)\\\\b(BEGIN|begin|case|class|else|elsif|END|end|ensure|for|if|in|module|rescue|then|unless|until|when|while)\\\\b(?![?!])\",\n    \"name\": \"keyword.control.ruby\"\n  }, {\n    \"comment\": \"contextual smart pair support for block parameters\",\n    \"match\": \"(?<!\\\\.)\\\\bdo\\\\b\",\n    \"name\": \"keyword.control.start-block.ruby\"\n  }, {\n    \"comment\": \"contextual smart pair support\",\n    \"match\": \"(?<=\\\\{)(\\\\s+)\",\n    \"name\": \"meta.syntax.ruby.start-block\"\n  }, {\n    \"match\": \"(?<!\\\\.)\\\\b(alias|alias_method|block_given[?]|break|defined[?]|iterator[?]|next|redo|retry|return|super|undef|yield)(\\\\b|(?<=[?]))(?![?!])\",\n    \"name\": \"keyword.control.pseudo-method.ruby\"\n  }, {\n    \"match\": \"\\\\b(nil|true|false)\\\\b(?![?!])\",\n    \"name\": \"constant.language.ruby\"\n  }, {\n    \"match\": \"\\\\b(__(dir|FILE|LINE)__)\\\\b(?![?!])\",\n    \"name\": \"variable.language.ruby\"\n  }, {\n    \"begin\": \"^__END__\\\\n\",\n    \"captures\": {\n      \"0\": {\n        \"name\": \"string.unquoted.program-block.ruby\"\n      }\n    },\n    \"comment\": \"__END__ marker\",\n    \"contentName\": \"text.plain\",\n    \"end\": \"(?=not)impossible\",\n    \"patterns\": [{\n      \"begin\": \"(?=<?xml|<(?i:html\\\\b)|!DOCTYPE (?i:html\\\\b))\",\n      \"end\": \"(?=not)impossible\",\n      \"name\": \"text.html.embedded.ruby\",\n      \"patterns\": [{\n        \"include\": \"text.html.basic\"\n      }]\n    }]\n  }, {\n    \"match\": \"\\\\b(self)\\\\b(?![?!])\",\n    \"name\": \"variable.language.self.ruby\"\n  }, {\n    \"comment\": \" everything being a method but having a special function is a..\",\n    \"match\": \"\\\\b(initialize|new|loop|include|extend|prepend|fail|raise|attr_reader|attr_writer|attr_accessor|attr|catch|throw|private|private_class_method|module_function|public|public_class_method|protected|refine|using)\\\\b(?![?!])\",\n    \"name\": \"keyword.other.special-method.ruby\"\n  }, {\n    \"begin\": \"\\\\b(?<!\\\\.|::)(require|require_relative)\\\\b\",\n    \"captures\": {\n      \"1\": {\n        \"name\": \"keyword.other.special-method.ruby\"\n      }\n    },\n    \"end\": \"$|(?=#|\\\\})\",\n    \"name\": \"meta.require.ruby\",\n    \"patterns\": [{\n      \"include\": \"$self\"\n    }]\n  }, {\n    \"captures\": {\n      \"1\": {\n        \"name\": \"punctuation.definition.variable.ruby\"\n      }\n    },\n    \"match\": \"(@)[a-zA-Z_]\\\\w*\",\n    \"name\": \"variable.other.readwrite.instance.ruby\"\n  }, {\n    \"captures\": {\n      \"1\": {\n        \"name\": \"punctuation.definition.variable.ruby\"\n      }\n    },\n    \"match\": \"(@@)[a-zA-Z_]\\\\w*\",\n    \"name\": \"variable.other.readwrite.class.ruby\"\n  }, {\n    \"captures\": {\n      \"1\": {\n        \"name\": \"punctuation.definition.variable.ruby\"\n      }\n    },\n    \"match\": \"(\\\\$)[a-zA-Z_]\\\\w*\",\n    \"name\": \"variable.other.readwrite.global.ruby\"\n  }, {\n    \"captures\": {\n      \"1\": {\n        \"name\": \"punctuation.definition.variable.ruby\"\n      }\n    },\n    \"match\": \"(\\\\$)(!|@|&|`|'|\\\\+|\\\\d+|~|=|/|\\\\\\\\|,|;|\\\\.|<|>|_|\\\\*|\\\\$|\\\\?|:|\\\"|-[0adFiIlpvw])\",\n    \"name\": \"variable.other.readwrite.global.pre-defined.ruby\"\n  }, {\n    \"begin\": \"\\\\b(ENV)\\\\[\",\n    \"beginCaptures\": {\n      \"1\": {\n        \"name\": \"variable.other.constant.ruby\"\n      }\n    },\n    \"end\": \"\\\\]\",\n    \"name\": \"meta.environment-variable.ruby\",\n    \"patterns\": [{\n      \"include\": \"$self\"\n    }]\n  }, {\n    \"match\": \"\\\\b[A-Z]\\\\w*(?=((\\\\.|::)[A-Za-z]|\\\\[))\",\n    \"name\": \"support.class.ruby\"\n  }, {\n    \"match\": \"\\\\b(abort|at_exit|autoload[?]?|binding|callcc|caller|caller_locations|chomp|chop|eval|exec|exit|exit!|fork|format|gets|global_variables|gsub|lambda|load|local_variables|open|p|print|printf|proc|putc|puts|rand|readline|readlines|select|set_trace_func|sleep|spawn|sprintf|srand|sub|syscall|system|test|trace_var|trap|untrace_var|warn)(\\\\b|(?<=[?!]))(?![?!])\",\n    \"name\": \"support.function.kernel.ruby\"\n  }, {\n    \"match\": \"\\\\b[A-Z]\\\\w*\\\\b\",\n    \"name\": \"variable.other.constant.ruby\"\n  }, {\n    \"begin\": \"(?x)\\n(?=def\\\\b)\\n(?<=^|\\\\s)(def)\\\\s+\\n( (?>[a-zA-Z_]\\\\w*(?>\\\\.|::))?\\n(?>[a-zA-Z_]\\\\w*(?>[?!]|=(?!>))?\\n|===?|!=|!~|>[>=]?|<=>|<[<=]?|[%&`/\\\\|^]|\\\\*\\\\*?|=?~|[-+]@?|\\\\[\\\\]=?) )\\n\\\\s*(\\\\()\\n\",\n    \"beginCaptures\": {\n      \"1\": {\n        \"name\": \"keyword.control.def.ruby\"\n      },\n      \"2\": {\n        \"name\": \"entity.name.function.ruby\"\n      },\n      \"3\": {\n        \"name\": \"punctuation.definition.parameters.ruby\"\n      }\n    },\n    \"comment\": \"the method pattern comes from the symbol pattern, see there for a explaination\",\n    \"end\": \"\\\\)\",\n    \"endCaptures\": {\n      \"0\": {\n        \"name\": \"punctuation.definition.parameters.ruby\"\n      }\n    },\n    \"name\": \"meta.function.method.with-arguments.ruby\",\n    \"patterns\": [{\n      \"begin\": \"(?=[&*_a-zA-Z])\",\n      \"end\": \"(?=[,)])\",\n      \"patterns\": [{\n        \"captures\": {\n          \"1\": {\n            \"name\": \"storage.type.variable.ruby\"\n          },\n          \"2\": {\n            \"name\": \"constant.other.symbol.hashkey.parameter.function.ruby\"\n          },\n          \"3\": {\n            \"name\": \"punctuation.definition.constant.ruby\"\n          },\n          \"4\": {\n            \"name\": \"variable.parameter.function.ruby\"\n          }\n        },\n        \"match\": \"\\\\G([&*]?)(?:([_a-zA-Z]\\\\w*(:))|([_a-zA-Z]\\\\w*))\"\n      }, {\n        \"include\": \"#parens\"\n      }, {\n        \"include\": \"#braces\"\n      }, {\n        \"include\": \"$self\"\n      }]\n    }],\n    \"repository\": {\n      \"braces\": {\n        \"begin\": \"\\\\{\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.section.function.begin.ruby\"\n          }\n        },\n        \"end\": \"\\\\}\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.section.function.end.ruby\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#parens\"\n        }, {\n          \"include\": \"#braces\"\n        }, {\n          \"include\": \"$self\"\n        }]\n      },\n      \"parens\": {\n        \"begin\": \"\\\\(\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.section.function.begin.ruby\"\n          }\n        },\n        \"end\": \"\\\\)\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.section.function.end.ruby\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#parens\"\n        }, {\n          \"include\": \"#braces\"\n        }, {\n          \"include\": \"$self\"\n        }]\n      }\n    }\n  }, {\n    \"begin\": \"(?x)\\n(?=def\\\\b)\\n(?<=^|\\\\s)(def)\\\\s+\\n( (?>[a-zA-Z_]\\\\w*(?>\\\\.|::))?\\n(?>[a-zA-Z_]\\\\w*(?>[?!]|=(?!>))?\\n|===?|!=|!~|>[>=]?|<=>|<[<=]?|[%&`/\\\\|^]|\\\\*\\\\*?|=?~|[-+]@?|\\\\[\\\\]=?) )\\n[ \\\\t]\\n(?=[ \\\\t]*[^\\\\s#;])\\n\",\n    \"beginCaptures\": {\n      \"1\": {\n        \"name\": \"keyword.control.def.ruby\"\n      },\n      \"2\": {\n        \"name\": \"entity.name.function.ruby\"\n      }\n    },\n    \"comment\": \"same as the previous rule, but without parentheses around the arguments\",\n    \"end\": \"$\",\n    \"name\": \"meta.function.method.with-arguments.ruby\",\n    \"patterns\": [{\n      \"begin\": \"(?![\\\\s,])\",\n      \"end\": \"(?=,|$)\",\n      \"patterns\": [{\n        \"captures\": {\n          \"1\": {\n            \"name\": \"storage.type.variable.ruby\"\n          },\n          \"2\": {\n            \"name\": \"constant.other.symbol.hashkey.parameter.function.ruby\"\n          },\n          \"3\": {\n            \"name\": \"punctuation.definition.constant.ruby\"\n          },\n          \"4\": {\n            \"name\": \"variable.parameter.function.ruby\"\n          }\n        },\n        \"match\": \"\\\\G([&*]?)(?:([_a-zA-Z]\\\\w*(:))|([_a-zA-Z]\\\\w*))\",\n        \"name\": \"variable.parameter.function.ruby\"\n      }, {\n        \"include\": \"$self\"\n      }]\n    }]\n  }, {\n    \"captures\": {\n      \"1\": {\n        \"name\": \"keyword.control.def.ruby\"\n      },\n      \"3\": {\n        \"name\": \"entity.name.function.ruby\"\n      }\n    },\n    \"comment\": \" the optional name is just to catch the def also without a method-name\",\n    \"match\": \"(?x)\\n(?=def\\\\b)\\n(?<=^|\\\\s)(def)\\\\b\\n( \\\\s+\\n( (?>[a-zA-Z_]\\\\w*(?>\\\\.|::))?\\n(?>[a-zA-Z_]\\\\w*(?>[?!]|=(?!>))?\\n|===?|!=|!~|>[>=]?|<=>|<[<=]?|[%&`/\\\\|^]|\\\\*\\\\*?|=?~|[-+]@?|\\\\[\\\\]=?) ) )?\\n\",\n    \"name\": \"meta.function.method.without-arguments.ruby\"\n  }, {\n    \"match\": \"\\\\b\\\\d(?>_?\\\\d)*(?=\\\\.\\\\d|[eE])(\\\\.\\\\d(?>_?\\\\d)*)?([eE][-+]?\\\\d(?>_?\\\\d)*)?r?i?\\\\b\",\n    \"name\": \"constant.numeric.float.ruby\"\n  }, {\n    \"match\": \"\\\\b(0|(0[dD]\\\\d|[1-9])(?>_?\\\\d)*)r?i?\\\\b\",\n    \"name\": \"constant.numeric.integer.ruby\"\n  }, {\n    \"match\": \"\\\\b0[xX]\\\\h(?>_?\\\\h)*r?i?\\\\b\",\n    \"name\": \"constant.numeric.hex.ruby\"\n  }, {\n    \"match\": \"\\\\b0[bB][01](?>_?[01])*r?i?\\\\b\",\n    \"name\": \"constant.numeric.binary.ruby\"\n  }, {\n    \"match\": \"\\\\b0([oO]?[0-7](?>_?[0-7])*)?r?i?\\\\b\",\n    \"name\": \"constant.numeric.octal.ruby\"\n  }, {\n    \"begin\": \":'\",\n    \"captures\": {\n      \"0\": {\n        \"name\": \"punctuation.definition.constant.ruby\"\n      }\n    },\n    \"end\": \"'\",\n    \"name\": \"constant.other.symbol.single-quoted.ruby\",\n    \"patterns\": [{\n      \"match\": \"\\\\\\\\['\\\\\\\\]\",\n      \"name\": \"constant.character.escape.ruby\"\n    }]\n  }, {\n    \"begin\": ':\"',\n    \"captures\": {\n      \"0\": {\n        \"name\": \"punctuation.definition.constant.ruby\"\n      }\n    },\n    \"end\": '\"',\n    \"name\": \"constant.other.symbol.double-quoted.ruby\",\n    \"patterns\": [{\n      \"include\": \"#interpolated_ruby\"\n    }, {\n      \"include\": \"#escaped_char\"\n    }]\n  }, {\n    \"comment\": \"Needs higher precedence than regular expressions.\",\n    \"match\": \"(?<!\\\\()/=\",\n    \"name\": \"keyword.operator.assignment.augmented.ruby\"\n  }, {\n    \"begin\": \"'\",\n    \"beginCaptures\": {\n      \"0\": {\n        \"name\": \"punctuation.definition.string.begin.ruby\"\n      }\n    },\n    \"comment\": \"single quoted string (does not allow interpolation)\",\n    \"end\": \"'\",\n    \"endCaptures\": {\n      \"0\": {\n        \"name\": \"punctuation.definition.string.end.ruby\"\n      }\n    },\n    \"name\": \"string.quoted.single.ruby\",\n    \"patterns\": [{\n      \"match\": \"\\\\\\\\'|\\\\\\\\\\\\\\\\\",\n      \"name\": \"constant.character.escape.ruby\"\n    }]\n  }, {\n    \"begin\": '\"',\n    \"beginCaptures\": {\n      \"0\": {\n        \"name\": \"punctuation.definition.string.begin.ruby\"\n      }\n    },\n    \"comment\": \"double quoted string (allows for interpolation)\",\n    \"end\": '\"',\n    \"endCaptures\": {\n      \"0\": {\n        \"name\": \"punctuation.definition.string.end.ruby\"\n      }\n    },\n    \"name\": \"string.quoted.double.ruby\",\n    \"patterns\": [{\n      \"include\": \"#interpolated_ruby\"\n    }, {\n      \"include\": \"#escaped_char\"\n    }]\n  }, {\n    \"begin\": \"`\",\n    \"beginCaptures\": {\n      \"0\": {\n        \"name\": \"punctuation.definition.string.begin.ruby\"\n      }\n    },\n    \"comment\": \"execute string (allows for interpolation)\",\n    \"end\": \"`\",\n    \"endCaptures\": {\n      \"0\": {\n        \"name\": \"punctuation.definition.string.end.ruby\"\n      }\n    },\n    \"name\": \"string.interpolated.ruby\",\n    \"patterns\": [{\n      \"include\": \"#interpolated_ruby\"\n    }, {\n      \"include\": \"#escaped_char\"\n    }]\n  }, {\n    \"include\": \"#percent_literals\"\n  }, {\n    \"begin\": \"(?x)\\n(?:\\n^\\n| (?<=\\n[=>~(?:\\\\[,|&;]\\n| [\\\\s;]if\\\\s\\n| [\\\\s;]elsif\\\\s\\n| [\\\\s;]while\\\\s\\n| [\\\\s;]unless\\\\s\\n| [\\\\s;]when\\\\s\\n| [\\\\s;]assert_match\\\\s\\n| [\\\\s;]or\\\\s\\n| [\\\\s;]and\\\\s\\n| [\\\\s;]not\\\\s\\n| [\\\\s.]index\\\\s\\n| [\\\\s.]scan\\\\s\\n| [\\\\s.]sub\\\\s\\n| [\\\\s.]sub!\\\\s\\n| [\\\\s.]gsub\\\\s\\n| [\\\\s.]gsub!\\\\s\\n| [\\\\s.]match\\\\s\\n)\\n| (?<=\\n^when\\\\s\\n| ^if\\\\s\\n| ^elsif\\\\s\\n| ^while\\\\s\\n| ^unless\\\\s\\n)\\n)\\n\\\\s*((/))(?![*+{}?])\\n\",\n    \"captures\": {\n      \"1\": {\n        \"name\": \"string.regexp.classic.ruby\"\n      },\n      \"2\": {\n        \"name\": \"punctuation.definition.string.ruby\"\n      }\n    },\n    \"comment\": \"regular expressions (normal)\\n\t\t\twe only start a regexp if the character before it (excluding whitespace)\\n\t\t\tis what we think is before a regexp\\n\t\t\t\",\n    \"contentName\": \"string.regexp.classic.ruby\",\n    \"end\": \"((/[eimnosux]*))\",\n    \"patterns\": [{\n      \"include\": \"#regex_sub\"\n    }]\n  }, {\n    \"captures\": {\n      \"1\": {\n        \"name\": \"punctuation.definition.constant.ruby\"\n      }\n    },\n    \"comment\": \"symbols\",\n    \"match\": \"(?<!:)(:)(?>[a-zA-Z_]\\\\w*(?>[?!]|=(?![>=]))?|===?|>[>=]?|<=>|<[<=]?|[%&`/\\\\|]|\\\\*\\\\*?|=?~|[-+]@?|\\\\[\\\\]=?|(@@?|\\\\$)[a-zA-Z_]\\\\w*)\",\n    \"name\": \"constant.other.symbol.ruby\"\n  }, {\n    \"begin\": \"^=begin\",\n    \"captures\": {\n      \"0\": {\n        \"name\": \"punctuation.definition.comment.ruby\"\n      }\n    },\n    \"comment\": \"multiline comments\",\n    \"end\": \"^=end\",\n    \"name\": \"comment.block.documentation.ruby\"\n  }, {\n    \"begin\": \"(^[ \\\\t]+)?(?=#)\",\n    \"beginCaptures\": {\n      \"1\": {\n        \"name\": \"punctuation.whitespace.comment.leading.ruby\"\n      }\n    },\n    \"end\": \"(?!\\\\G)\",\n    \"patterns\": [{\n      \"begin\": \"#\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.comment.ruby\"\n        }\n      },\n      \"end\": \"\\\\n\",\n      \"name\": \"comment.line.number-sign.ruby\"\n    }]\n  }, {\n    \"comment\": '\\n\t\t\tmatches questionmark-letters.\\n\\n\t\t\texamples (1st alternation = hex):\\n\t\t\t?\\\\x1     ?\\\\x61\\n\\n\t\t\texamples (2nd alternation = octal):\\n\t\t\t?\\\\0      ?\\\\07     ?\\\\017\\n\\n\t\t\texamples (3rd alternation = escaped):\\n\t\t\t?\\\\n      ?\\\\b\\n\\n\t\t\texamples (4th alternation = meta-ctrl):\\n\t\t\t?\\\\C-a    ?\\\\M-a    ?\\\\C-\\\\M-\\\\C-\\\\M-a\\n\\n\t\t\texamples (4th alternation = normal):\\n\t\t\t?a       ?A       ?0 \\n\t\t\t?*       ?\"       ?( \\n\t\t\t?.       ?#\\n\t\t\t\\n\t\t\t\\n\t\t\tthe negative lookbehind prevents against matching\\n\t\t\tp(42.tainted?)\\n\t\t\t',\n    \"match\": \"(?<!\\\\w)\\\\?(\\\\\\\\(x\\\\h{1,2}(?!\\\\h)\\\\b|0[0-7]{0,2}(?![0-7])\\\\b|[^x0MC])|(\\\\\\\\[MC]-)+\\\\w|[^\\\\s\\\\\\\\])\",\n    \"name\": \"constant.numeric.ruby\"\n  }, {\n    \"begin\": '(?=(?><<[-~](\"?)((?:[_\\\\w]+_|)HTML)\\\\b\\\\1))',\n    \"comment\": \"Heredoc with embedded html\",\n    \"end\": \"(?!\\\\G)\",\n    \"name\": \"meta.embedded.block.html\",\n    \"patterns\": [{\n      \"begin\": '(?><<[-~](\"?)((?:[_\\\\w]+_|)HTML)\\\\b\\\\1)',\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.begin.ruby\"\n        }\n      },\n      \"contentName\": \"text.html\",\n      \"end\": \"\\\\s*\\\\2$\\\\n?\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.end.ruby\"\n        }\n      },\n      \"name\": \"string.unquoted.heredoc.ruby\",\n      \"patterns\": [{\n        \"include\": \"#heredoc\"\n      }, {\n        \"include\": \"#interpolated_ruby\"\n      }, {\n        \"include\": \"text.html.basic\"\n      }, {\n        \"include\": \"#escaped_char\"\n      }]\n    }]\n  }, {\n    \"begin\": '(?=(?><<[-~](\"?)((?:[_\\\\w]+_|)XML)\\\\b\\\\1))',\n    \"comment\": \"Heredoc with embedded xml\",\n    \"end\": \"(?!\\\\G)\",\n    \"name\": \"meta.embedded.block.xml\",\n    \"patterns\": [{\n      \"begin\": '(?><<[-~](\"?)((?:[_\\\\w]+_|)XML)\\\\b\\\\1)',\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.begin.ruby\"\n        }\n      },\n      \"contentName\": \"text.xml\",\n      \"end\": \"\\\\s*\\\\2$\\\\n?\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.end.ruby\"\n        }\n      },\n      \"name\": \"string.unquoted.heredoc.ruby\",\n      \"patterns\": [{\n        \"include\": \"#heredoc\"\n      }, {\n        \"include\": \"#interpolated_ruby\"\n      }, {\n        \"include\": \"text.xml\"\n      }, {\n        \"include\": \"#escaped_char\"\n      }]\n    }]\n  }, {\n    \"begin\": '(?=(?><<[-~](\"?)((?:[_\\\\w]+_|)SQL)\\\\b\\\\1))',\n    \"comment\": \"Heredoc with embedded sql\",\n    \"end\": \"(?!\\\\G)\",\n    \"name\": \"meta.embedded.block.sql\",\n    \"patterns\": [{\n      \"begin\": '(?><<[-~](\"?)((?:[_\\\\w]+_|)SQL)\\\\b\\\\1)',\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.begin.ruby\"\n        }\n      },\n      \"contentName\": \"source.sql\",\n      \"end\": \"\\\\s*\\\\2$\\\\n?\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.end.ruby\"\n        }\n      },\n      \"name\": \"string.unquoted.heredoc.ruby\",\n      \"patterns\": [{\n        \"include\": \"#heredoc\"\n      }, {\n        \"include\": \"#interpolated_ruby\"\n      }, {\n        \"include\": \"source.sql\"\n      }, {\n        \"include\": \"#escaped_char\"\n      }]\n    }]\n  }, {\n    \"begin\": '(?=(?><<[-~](\"?)((?:[_\\\\w]+_|)CSS)\\\\b\\\\1))',\n    \"comment\": \"Heredoc with embedded css\",\n    \"end\": \"(?!\\\\G)\",\n    \"name\": \"meta.embedded.block.css\",\n    \"patterns\": [{\n      \"begin\": '(?><<[-~](\"?)((?:[_\\\\w]+_|)CSS)\\\\b\\\\1)',\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.begin.ruby\"\n        }\n      },\n      \"contentName\": \"source.css\",\n      \"end\": \"\\\\s*\\\\2$\\\\n?\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.end.ruby\"\n        }\n      },\n      \"name\": \"string.unquoted.heredoc.ruby\",\n      \"patterns\": [{\n        \"include\": \"#heredoc\"\n      }, {\n        \"include\": \"#interpolated_ruby\"\n      }, {\n        \"include\": \"source.css\"\n      }, {\n        \"include\": \"#escaped_char\"\n      }]\n    }]\n  }, {\n    \"begin\": '(?=(?><<[-~](\"?)((?:[_\\\\w]+_|)CPP)\\\\b\\\\1))',\n    \"comment\": \"Heredoc with embedded c++\",\n    \"end\": \"(?!\\\\G)\",\n    \"name\": \"meta.embedded.block.c++\",\n    \"patterns\": [{\n      \"begin\": '(?><<[-~](\"?)((?:[_\\\\w]+_|)CPP)\\\\b\\\\1)',\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.begin.ruby\"\n        }\n      },\n      \"contentName\": \"source.c++\",\n      \"end\": \"\\\\s*\\\\2$\\\\n?\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.end.ruby\"\n        }\n      },\n      \"name\": \"string.unquoted.heredoc.ruby\",\n      \"patterns\": [{\n        \"include\": \"#heredoc\"\n      }, {\n        \"include\": \"#interpolated_ruby\"\n      }, {\n        \"include\": \"source.c++\"\n      }, {\n        \"include\": \"#escaped_char\"\n      }]\n    }]\n  }, {\n    \"begin\": '(?=(?><<[-~](\"?)((?:[_\\\\w]+_|)C)\\\\b\\\\1))',\n    \"comment\": \"Heredoc with embedded c\",\n    \"end\": \"(?!\\\\G)\",\n    \"name\": \"meta.embedded.block.c\",\n    \"patterns\": [{\n      \"begin\": '(?><<[-~](\"?)((?:[_\\\\w]+_|)C)\\\\b\\\\1)',\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.begin.ruby\"\n        }\n      },\n      \"contentName\": \"source.c\",\n      \"end\": \"\\\\s*\\\\2$\\\\n?\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.end.ruby\"\n        }\n      },\n      \"name\": \"string.unquoted.heredoc.ruby\",\n      \"patterns\": [{\n        \"include\": \"#heredoc\"\n      }, {\n        \"include\": \"#interpolated_ruby\"\n      }, {\n        \"include\": \"source.c\"\n      }, {\n        \"include\": \"#escaped_char\"\n      }]\n    }]\n  }, {\n    \"begin\": '(?=(?><<[-~](\"?)((?:[_\\\\w]+_|)(?:JS|JAVASCRIPT))\\\\b\\\\1))',\n    \"comment\": \"Heredoc with embedded javascript\",\n    \"end\": \"(?!\\\\G)\",\n    \"name\": \"meta.embedded.block.js\",\n    \"patterns\": [{\n      \"begin\": '(?><<[-~](\"?)((?:[_\\\\w]+_|)(?:JS|JAVASCRIPT))\\\\b\\\\1)',\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.begin.ruby\"\n        }\n      },\n      \"contentName\": \"source.js\",\n      \"end\": \"\\\\s*\\\\2$\\\\n?\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.end.ruby\"\n        }\n      },\n      \"name\": \"string.unquoted.heredoc.ruby\",\n      \"patterns\": [{\n        \"include\": \"#heredoc\"\n      }, {\n        \"include\": \"#interpolated_ruby\"\n      }, {\n        \"include\": \"source.js\"\n      }, {\n        \"include\": \"#escaped_char\"\n      }]\n    }]\n  }, {\n    \"begin\": '(?=(?><<[-~](\"?)((?:[_\\\\w]+_|)JQUERY)\\\\b\\\\1))',\n    \"comment\": \"Heredoc with embedded jQuery javascript\",\n    \"end\": \"(?!\\\\G)\",\n    \"name\": \"meta.embedded.block.js.jquery\",\n    \"patterns\": [{\n      \"begin\": '(?><<[-~](\"?)((?:[_\\\\w]+_|)JQUERY)\\\\b\\\\1)',\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.begin.ruby\"\n        }\n      },\n      \"contentName\": \"source.js.jquery\",\n      \"end\": \"\\\\s*\\\\2$\\\\n?\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.end.ruby\"\n        }\n      },\n      \"name\": \"string.unquoted.heredoc.ruby\",\n      \"patterns\": [{\n        \"include\": \"#heredoc\"\n      }, {\n        \"include\": \"#interpolated_ruby\"\n      }, {\n        \"include\": \"source.js.jquery\"\n      }, {\n        \"include\": \"#escaped_char\"\n      }]\n    }]\n  }, {\n    \"begin\": '(?=(?><<[-~](\"?)((?:[_\\\\w]+_|)(?:SH|SHELL))\\\\b\\\\1))',\n    \"comment\": \"Heredoc with embedded shell\",\n    \"end\": \"(?!\\\\G)\",\n    \"name\": \"meta.embedded.block.shell\",\n    \"patterns\": [{\n      \"begin\": '(?><<[-~](\"?)((?:[_\\\\w]+_|)(?:SH|SHELL))\\\\b\\\\1)',\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.begin.ruby\"\n        }\n      },\n      \"contentName\": \"source.shell\",\n      \"end\": \"\\\\s*\\\\2$\\\\n?\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.end.ruby\"\n        }\n      },\n      \"name\": \"string.unquoted.heredoc.ruby\",\n      \"patterns\": [{\n        \"include\": \"#heredoc\"\n      }, {\n        \"include\": \"#interpolated_ruby\"\n      }, {\n        \"include\": \"source.shell\"\n      }, {\n        \"include\": \"#escaped_char\"\n      }]\n    }]\n  }, {\n    \"begin\": '(?=(?><<[-~](\"?)((?:[_\\\\w]+_|)LUA)\\\\b\\\\1))',\n    \"comment\": \"Heredoc with embedded lua\",\n    \"end\": \"(?!\\\\G)\",\n    \"name\": \"meta.embedded.block.lua\",\n    \"patterns\": [{\n      \"begin\": '(?><<[-~](\"?)((?:[_\\\\w]+_|)LUA)\\\\b\\\\1)',\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.begin.ruby\"\n        }\n      },\n      \"contentName\": \"source.lua\",\n      \"end\": \"\\\\s*\\\\2$\\\\n?\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.end.ruby\"\n        }\n      },\n      \"name\": \"string.unquoted.heredoc.ruby\",\n      \"patterns\": [{\n        \"include\": \"#heredoc\"\n      }, {\n        \"include\": \"#interpolated_ruby\"\n      }, {\n        \"include\": \"source.lua\"\n      }, {\n        \"include\": \"#escaped_char\"\n      }]\n    }]\n  }, {\n    \"begin\": '(?=(?><<[-~](\"?)((?:[_\\\\w]+_|)RUBY)\\\\b\\\\1))',\n    \"comment\": \"Heredoc with embedded ruby\",\n    \"end\": \"(?!\\\\G)\",\n    \"name\": \"meta.embedded.block.ruby\",\n    \"patterns\": [{\n      \"begin\": '(?><<[-~](\"?)((?:[_\\\\w]+_|)RUBY)\\\\b\\\\1)',\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.begin.ruby\"\n        }\n      },\n      \"contentName\": \"source.ruby\",\n      \"end\": \"\\\\s*\\\\2$\\\\n?\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.end.ruby\"\n        }\n      },\n      \"name\": \"string.unquoted.heredoc.ruby\",\n      \"patterns\": [{\n        \"include\": \"#heredoc\"\n      }, {\n        \"include\": \"#interpolated_ruby\"\n      }, {\n        \"include\": \"source.ruby\"\n      }, {\n        \"include\": \"#escaped_char\"\n      }]\n    }]\n  }, {\n    \"begin\": \"(?>=\\\\s*<<(\\\\w+))\",\n    \"beginCaptures\": {\n      \"0\": {\n        \"name\": \"punctuation.definition.string.begin.ruby\"\n      }\n    },\n    \"end\": \"^\\\\1$\",\n    \"endCaptures\": {\n      \"0\": {\n        \"name\": \"punctuation.definition.string.end.ruby\"\n      }\n    },\n    \"name\": \"string.unquoted.heredoc.ruby\",\n    \"patterns\": [{\n      \"include\": \"#heredoc\"\n    }, {\n      \"include\": \"#interpolated_ruby\"\n    }, {\n      \"include\": \"#escaped_char\"\n    }]\n  }, {\n    \"begin\": \"(?><<[-~](\\\\w+))\",\n    \"beginCaptures\": {\n      \"0\": {\n        \"name\": \"punctuation.definition.string.begin.ruby\"\n      }\n    },\n    \"comment\": \"heredoc with indented terminator\",\n    \"end\": \"\\\\s*\\\\1$\",\n    \"endCaptures\": {\n      \"0\": {\n        \"name\": \"punctuation.definition.string.end.ruby\"\n      }\n    },\n    \"name\": \"string.unquoted.heredoc.ruby\",\n    \"patterns\": [{\n      \"include\": \"#heredoc\"\n    }, {\n      \"include\": \"#interpolated_ruby\"\n    }, {\n      \"include\": \"#escaped_char\"\n    }]\n  }, {\n    \"begin\": \"(?<=\\\\{|do|\\\\{\\\\s|do\\\\s)(\\\\|)\",\n    \"captures\": {\n      \"1\": {\n        \"name\": \"punctuation.separator.arguments.ruby\"\n      }\n    },\n    \"end\": \"(?<!\\\\|)(\\\\|)(?!\\\\|)\",\n    \"patterns\": [{\n      \"include\": \"$self\"\n    }, {\n      \"match\": \"[_a-zA-Z][_a-zA-Z0-9]*\",\n      \"name\": \"variable.other.block.ruby\"\n    }, {\n      \"match\": \",\",\n      \"name\": \"punctuation.separator.variable.ruby\"\n    }]\n  }, {\n    \"match\": \"=>\",\n    \"name\": \"punctuation.separator.key-value\"\n  }, {\n    \"match\": \"->\",\n    \"name\": \"support.function.kernel.lambda.ruby\"\n  }, {\n    \"match\": \"<<=|%=|&{1,2}=|\\\\*=|\\\\*\\\\*=|\\\\+=|-=|\\\\^=|\\\\|{1,2}=|<<\",\n    \"name\": \"keyword.operator.assignment.augmented.ruby\"\n  }, {\n    \"match\": \"<=>|<(?!<|=)|>(?!<|=|>)|<=|>=|===|==|=~|!=|!~|(?<=[ \\\\t])\\\\?\",\n    \"name\": \"keyword.operator.comparison.ruby\"\n  }, {\n    \"match\": \"(?<!\\\\.)\\\\b(and|not|or)\\\\b(?![?!])\",\n    \"name\": \"keyword.operator.logical.ruby\"\n  }, {\n    \"comment\": \"Make sure this goes after assignment and comparison\",\n    \"match\": \"(?<=^|[ \\\\t])!|&&|\\\\|\\\\||\\\\^\",\n    \"name\": \"keyword.operator.logical.ruby\"\n  }, {\n    \"captures\": {\n      \"1\": {\n        \"name\": \"punctuation.separator.method.ruby\"\n      }\n    },\n    \"comment\": \"Safe navigation operator - Added in 2.3\",\n    \"match\": \"(&\\\\.)\\\\s*(?![A-Z])\"\n  }, {\n    \"match\": \"(%|&|\\\\*\\\\*|\\\\*|\\\\+|-|/)\",\n    \"name\": \"keyword.operator.arithmetic.ruby\"\n  }, {\n    \"match\": \"=\",\n    \"name\": \"keyword.operator.assignment.ruby\"\n  }, {\n    \"match\": \"\\\\||~|>>\",\n    \"name\": \"keyword.operator.other.ruby\"\n  }, {\n    \"match\": \";\",\n    \"name\": \"punctuation.separator.statement.ruby\"\n  }, {\n    \"match\": \",\",\n    \"name\": \"punctuation.separator.object.ruby\"\n  }, {\n    \"captures\": {\n      \"1\": {\n        \"name\": \"punctuation.separator.namespace.ruby\"\n      }\n    },\n    \"comment\": \"Mark as namespace separator if double colons followed by capital letter\",\n    \"match\": \"(::)\\\\s*(?=[A-Z])\"\n  }, {\n    \"captures\": {\n      \"1\": {\n        \"name\": \"punctuation.separator.method.ruby\"\n      }\n    },\n    \"comment\": \"Mark as method separator if double colons not followed by capital letter\",\n    \"match\": \"(\\\\.|::)\\\\s*(?![A-Z])\"\n  }, {\n    \"comment\": \"Must come after method and constant separators to prefer double colons\",\n    \"match\": \":\",\n    \"name\": \"punctuation.separator.other.ruby\"\n  }, {\n    \"match\": \"\\\\{\",\n    \"name\": \"punctuation.section.scope.begin.ruby\"\n  }, {\n    \"match\": \"\\\\}\",\n    \"name\": \"punctuation.section.scope.end.ruby\"\n  }, {\n    \"match\": \"\\\\[\",\n    \"name\": \"punctuation.section.array.begin.ruby\"\n  }, {\n    \"match\": \"\\\\]\",\n    \"name\": \"punctuation.section.array.end.ruby\"\n  }, {\n    \"match\": \"\\\\(|\\\\)\",\n    \"name\": \"punctuation.section.function.ruby\"\n  }],\n  \"repository\": {\n    \"escaped_char\": {\n      \"match\": \"\\\\\\\\(?:[0-7]{1,3}|x[\\\\da-fA-F]{1,2}|.)\",\n      \"name\": \"constant.character.escape.ruby\"\n    },\n    \"heredoc\": {\n      \"begin\": \"^<<[-~]?\\\\w+\",\n      \"end\": \"$\",\n      \"patterns\": [{\n        \"include\": \"$self\"\n      }]\n    },\n    \"interpolated_ruby\": {\n      \"patterns\": [{\n        \"begin\": \"#\\\\{\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.section.embedded.begin.ruby\"\n          }\n        },\n        \"contentName\": \"source.ruby\",\n        \"end\": \"(\\\\})\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.section.embedded.end.ruby\"\n          },\n          \"1\": {\n            \"name\": \"source.ruby\"\n          }\n        },\n        \"name\": \"meta.embedded.line.ruby\",\n        \"patterns\": [{\n          \"include\": \"#nest_curly_and_self\"\n        }, {\n          \"include\": \"$self\"\n        }],\n        \"repository\": {\n          \"nest_curly_and_self\": {\n            \"patterns\": [{\n              \"begin\": \"\\\\{\",\n              \"captures\": {\n                \"0\": {\n                  \"name\": \"punctuation.section.scope.ruby\"\n                }\n              },\n              \"end\": \"\\\\}\",\n              \"patterns\": [{\n                \"include\": \"#nest_curly_and_self\"\n              }]\n            }, {\n              \"include\": \"$self\"\n            }]\n          }\n        }\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.variable.ruby\"\n          }\n        },\n        \"match\": \"(#@)[a-zA-Z_]\\\\w*\",\n        \"name\": \"variable.other.readwrite.instance.ruby\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.variable.ruby\"\n          }\n        },\n        \"match\": \"(#@@)[a-zA-Z_]\\\\w*\",\n        \"name\": \"variable.other.readwrite.class.ruby\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.variable.ruby\"\n          }\n        },\n        \"match\": \"(#\\\\$)[a-zA-Z_]\\\\w*\",\n        \"name\": \"variable.other.readwrite.global.ruby\"\n      }]\n    },\n    \"percent_literals\": {\n      \"patterns\": [{\n        \"begin\": \"%i(?:([(\\\\[{<])|([^\\\\w\\\\s]|_))\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.section.array.begin.ruby\"\n          }\n        },\n        \"end\": \"[)\\\\]}>]\\\\2|\\\\1\\\\2\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.section.array.end.ruby\"\n          }\n        },\n        \"name\": \"meta.array.symbol.ruby\",\n        \"patterns\": [{\n          \"begin\": \"\\\\G(?<=\\\\()(?!\\\\))\",\n          \"end\": \"(?=\\\\))\",\n          \"patterns\": [{\n            \"include\": \"#parens\"\n          }, {\n            \"include\": \"#symbol\"\n          }]\n        }, {\n          \"begin\": \"\\\\G(?<=\\\\[)(?!\\\\])\",\n          \"end\": \"(?=\\\\])\",\n          \"patterns\": [{\n            \"include\": \"#brackets\"\n          }, {\n            \"include\": \"#symbol\"\n          }]\n        }, {\n          \"begin\": \"\\\\G(?<=\\\\{)(?!\\\\})\",\n          \"end\": \"(?=\\\\})\",\n          \"patterns\": [{\n            \"include\": \"#braces\"\n          }, {\n            \"include\": \"#symbol\"\n          }]\n        }, {\n          \"begin\": \"\\\\G(?<=<)(?!>)\",\n          \"end\": \"(?=>)\",\n          \"patterns\": [{\n            \"include\": \"#angles\"\n          }, {\n            \"include\": \"#symbol\"\n          }]\n        }, {\n          \"include\": \"#symbol\"\n        }],\n        \"repository\": {\n          \"angles\": {\n            \"patterns\": [{\n              \"captures\": {\n                \"0\": {\n                  \"name\": \"constant.character.escape.ruby\"\n                }\n              },\n              \"match\": \"\\\\\\\\<|\\\\\\\\>\",\n              \"name\": \"constant.other.symbol.ruby\"\n            }, {\n              \"begin\": \"<\",\n              \"captures\": {\n                \"0\": {\n                  \"name\": \"constant.other.symbol.ruby\"\n                }\n              },\n              \"end\": \">\",\n              \"patterns\": [{\n                \"include\": \"#angles\"\n              }, {\n                \"include\": \"#symbol\"\n              }]\n            }]\n          },\n          \"braces\": {\n            \"patterns\": [{\n              \"captures\": {\n                \"0\": {\n                  \"name\": \"constant.character.escape.ruby\"\n                }\n              },\n              \"match\": \"\\\\\\\\\\\\{|\\\\\\\\\\\\}\",\n              \"name\": \"constant.other.symbol.ruby\"\n            }, {\n              \"begin\": \"\\\\{\",\n              \"captures\": {\n                \"0\": {\n                  \"name\": \"constant.other.symbol.ruby\"\n                }\n              },\n              \"end\": \"\\\\}\",\n              \"patterns\": [{\n                \"include\": \"#braces\"\n              }, {\n                \"include\": \"#symbol\"\n              }]\n            }]\n          },\n          \"brackets\": {\n            \"patterns\": [{\n              \"captures\": {\n                \"0\": {\n                  \"name\": \"constant.character.escape.ruby\"\n                }\n              },\n              \"match\": \"\\\\\\\\\\\\[|\\\\\\\\\\\\]\",\n              \"name\": \"constant.other.symbol.ruby\"\n            }, {\n              \"begin\": \"\\\\[\",\n              \"captures\": {\n                \"0\": {\n                  \"name\": \"constant.other.symbol.ruby\"\n                }\n              },\n              \"end\": \"\\\\]\",\n              \"patterns\": [{\n                \"include\": \"#brackets\"\n              }, {\n                \"include\": \"#symbol\"\n              }]\n            }]\n          },\n          \"parens\": {\n            \"patterns\": [{\n              \"captures\": {\n                \"0\": {\n                  \"name\": \"constant.character.escape.ruby\"\n                }\n              },\n              \"match\": \"\\\\\\\\\\\\(|\\\\\\\\\\\\)\",\n              \"name\": \"constant.other.symbol.ruby\"\n            }, {\n              \"begin\": \"\\\\(\",\n              \"captures\": {\n                \"0\": {\n                  \"name\": \"constant.other.symbol.ruby\"\n                }\n              },\n              \"end\": \"\\\\)\",\n              \"patterns\": [{\n                \"include\": \"#parens\"\n              }, {\n                \"include\": \"#symbol\"\n              }]\n            }]\n          },\n          \"symbol\": {\n            \"patterns\": [{\n              \"captures\": {\n                \"0\": {\n                  \"name\": \"constant.character.escape.ruby\"\n                }\n              },\n              \"match\": \"\\\\\\\\\\\\\\\\|\\\\\\\\[ ]\",\n              \"name\": \"constant.other.symbol.ruby\"\n            }, {\n              \"match\": \"\\\\S\\\\w*\",\n              \"name\": \"constant.other.symbol.ruby\"\n            }]\n          }\n        }\n      }, {\n        \"begin\": \"%I(?:([(\\\\[{<])|([^\\\\w\\\\s]|_))\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.section.array.begin.ruby\"\n          }\n        },\n        \"end\": \"[)\\\\]}>]\\\\2|\\\\1\\\\2\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.section.array.end.ruby\"\n          }\n        },\n        \"name\": \"meta.array.symbol.interpolated.ruby\",\n        \"patterns\": [{\n          \"begin\": \"\\\\G(?<=\\\\()(?!\\\\))\",\n          \"end\": \"(?=\\\\))\",\n          \"patterns\": [{\n            \"include\": \"#parens\"\n          }, {\n            \"include\": \"#symbol\"\n          }]\n        }, {\n          \"begin\": \"\\\\G(?<=\\\\[)(?!\\\\])\",\n          \"end\": \"(?=\\\\])\",\n          \"patterns\": [{\n            \"include\": \"#brackets\"\n          }, {\n            \"include\": \"#symbol\"\n          }]\n        }, {\n          \"begin\": \"\\\\G(?<=\\\\{)(?!\\\\})\",\n          \"end\": \"(?=\\\\})\",\n          \"patterns\": [{\n            \"include\": \"#braces\"\n          }, {\n            \"include\": \"#symbol\"\n          }]\n        }, {\n          \"begin\": \"\\\\G(?<=<)(?!>)\",\n          \"end\": \"(?=>)\",\n          \"patterns\": [{\n            \"include\": \"#angles\"\n          }, {\n            \"include\": \"#symbol\"\n          }]\n        }, {\n          \"include\": \"#symbol\"\n        }],\n        \"repository\": {\n          \"angles\": {\n            \"patterns\": [{\n              \"begin\": \"<\",\n              \"captures\": {\n                \"0\": {\n                  \"name\": \"constant.other.symbol.ruby\"\n                }\n              },\n              \"end\": \">\",\n              \"patterns\": [{\n                \"include\": \"#angles\"\n              }, {\n                \"include\": \"#symbol\"\n              }]\n            }]\n          },\n          \"braces\": {\n            \"patterns\": [{\n              \"begin\": \"\\\\{\",\n              \"captures\": {\n                \"0\": {\n                  \"name\": \"constant.other.symbol.ruby\"\n                }\n              },\n              \"end\": \"\\\\}\",\n              \"patterns\": [{\n                \"include\": \"#braces\"\n              }, {\n                \"include\": \"#symbol\"\n              }]\n            }]\n          },\n          \"brackets\": {\n            \"patterns\": [{\n              \"begin\": \"\\\\[\",\n              \"captures\": {\n                \"0\": {\n                  \"name\": \"constant.other.symbol.ruby\"\n                }\n              },\n              \"end\": \"\\\\]\",\n              \"patterns\": [{\n                \"include\": \"#brackets\"\n              }, {\n                \"include\": \"#symbol\"\n              }]\n            }]\n          },\n          \"parens\": {\n            \"patterns\": [{\n              \"begin\": \"\\\\(\",\n              \"captures\": {\n                \"0\": {\n                  \"name\": \"constant.other.symbol.ruby\"\n                }\n              },\n              \"end\": \"\\\\)\",\n              \"patterns\": [{\n                \"include\": \"#parens\"\n              }, {\n                \"include\": \"#symbol\"\n              }]\n            }]\n          },\n          \"symbol\": {\n            \"patterns\": [{\n              \"begin\": \"(?=\\\\\\\\|#\\\\{)\",\n              \"end\": \"(?!\\\\G)\",\n              \"name\": \"constant.other.symbol.ruby\",\n              \"patterns\": [{\n                \"include\": \"#escaped_char\"\n              }, {\n                \"include\": \"#interpolated_ruby\"\n              }]\n            }, {\n              \"match\": \"\\\\S\\\\w*\",\n              \"name\": \"constant.other.symbol.ruby\"\n            }]\n          }\n        }\n      }, {\n        \"begin\": \"%q(?:([(\\\\[{<])|([^\\\\w\\\\s]|_))\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.begin.ruby\"\n          }\n        },\n        \"end\": \"[)\\\\]}>]\\\\2|\\\\1\\\\2\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.end.ruby\"\n          }\n        },\n        \"name\": \"string.quoted.other.ruby\",\n        \"patterns\": [{\n          \"begin\": \"\\\\G(?<=\\\\()(?!\\\\))\",\n          \"end\": \"(?=\\\\))\",\n          \"patterns\": [{\n            \"include\": \"#parens\"\n          }]\n        }, {\n          \"begin\": \"\\\\G(?<=\\\\[)(?!\\\\])\",\n          \"end\": \"(?=\\\\])\",\n          \"patterns\": [{\n            \"include\": \"#brackets\"\n          }]\n        }, {\n          \"begin\": \"\\\\G(?<=\\\\{)(?!\\\\})\",\n          \"end\": \"(?=\\\\})\",\n          \"patterns\": [{\n            \"include\": \"#braces\"\n          }]\n        }, {\n          \"begin\": \"\\\\G(?<=<)(?!>)\",\n          \"end\": \"(?=>)\",\n          \"patterns\": [{\n            \"include\": \"#angles\"\n          }]\n        }],\n        \"repository\": {\n          \"angles\": {\n            \"patterns\": [{\n              \"match\": \"\\\\\\\\<|\\\\\\\\>|\\\\\\\\\\\\\\\\\",\n              \"name\": \"constant.character.escape.ruby\"\n            }, {\n              \"begin\": \"<\",\n              \"end\": \">\",\n              \"patterns\": [{\n                \"include\": \"#angles\"\n              }]\n            }]\n          },\n          \"braces\": {\n            \"patterns\": [{\n              \"match\": \"\\\\\\\\\\\\{|\\\\\\\\\\\\}|\\\\\\\\\\\\\\\\\",\n              \"name\": \"constant.character.escape.ruby\"\n            }, {\n              \"begin\": \"\\\\{\",\n              \"end\": \"\\\\}\",\n              \"patterns\": [{\n                \"include\": \"#braces\"\n              }]\n            }]\n          },\n          \"brackets\": {\n            \"patterns\": [{\n              \"match\": \"\\\\\\\\\\\\[|\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\\",\n              \"name\": \"constant.character.escape.ruby\"\n            }, {\n              \"begin\": \"\\\\[\",\n              \"end\": \"\\\\]\",\n              \"patterns\": [{\n                \"include\": \"#brackets\"\n              }]\n            }]\n          },\n          \"parens\": {\n            \"patterns\": [{\n              \"match\": \"\\\\\\\\\\\\(|\\\\\\\\\\\\)|\\\\\\\\\\\\\\\\\",\n              \"name\": \"constant.character.escape.ruby\"\n            }, {\n              \"begin\": \"\\\\(\",\n              \"end\": \"\\\\)\",\n              \"patterns\": [{\n                \"include\": \"#parens\"\n              }]\n            }]\n          }\n        }\n      }, {\n        \"begin\": \"%Q?(?:([(\\\\[{<])|([^\\\\w\\\\s=]|_))\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.begin.ruby\"\n          }\n        },\n        \"end\": \"[)\\\\]}>]\\\\2|\\\\1\\\\2\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.end.ruby\"\n          }\n        },\n        \"name\": \"string.quoted.other.interpolated.ruby\",\n        \"patterns\": [{\n          \"begin\": \"\\\\G(?<=\\\\()(?!\\\\))\",\n          \"end\": \"(?=\\\\))\",\n          \"patterns\": [{\n            \"include\": \"#parens\"\n          }]\n        }, {\n          \"begin\": \"\\\\G(?<=\\\\[)(?!\\\\])\",\n          \"end\": \"(?=\\\\])\",\n          \"patterns\": [{\n            \"include\": \"#brackets\"\n          }]\n        }, {\n          \"begin\": \"\\\\G(?<=\\\\{)(?!\\\\})\",\n          \"end\": \"(?=\\\\})\",\n          \"patterns\": [{\n            \"include\": \"#braces\"\n          }]\n        }, {\n          \"begin\": \"\\\\G(?<=<)(?!>)\",\n          \"end\": \"(?=>)\",\n          \"patterns\": [{\n            \"include\": \"#angles\"\n          }]\n        }, {\n          \"include\": \"#escaped_char\"\n        }, {\n          \"include\": \"#interpolated_ruby\"\n        }],\n        \"repository\": {\n          \"angles\": {\n            \"patterns\": [{\n              \"include\": \"#escaped_char\"\n            }, {\n              \"include\": \"#interpolated_ruby\"\n            }, {\n              \"begin\": \"<\",\n              \"end\": \">\",\n              \"patterns\": [{\n                \"include\": \"#angles\"\n              }]\n            }]\n          },\n          \"braces\": {\n            \"patterns\": [{\n              \"include\": \"#escaped_char\"\n            }, {\n              \"include\": \"#interpolated_ruby\"\n            }, {\n              \"begin\": \"\\\\{\",\n              \"end\": \"\\\\}\",\n              \"patterns\": [{\n                \"include\": \"#braces\"\n              }]\n            }]\n          },\n          \"brackets\": {\n            \"patterns\": [{\n              \"include\": \"#escaped_char\"\n            }, {\n              \"include\": \"#interpolated_ruby\"\n            }, {\n              \"begin\": \"\\\\[\",\n              \"end\": \"\\\\]\",\n              \"patterns\": [{\n                \"include\": \"#brackets\"\n              }]\n            }]\n          },\n          \"parens\": {\n            \"patterns\": [{\n              \"include\": \"#escaped_char\"\n            }, {\n              \"include\": \"#interpolated_ruby\"\n            }, {\n              \"begin\": \"\\\\(\",\n              \"end\": \"\\\\)\",\n              \"patterns\": [{\n                \"include\": \"#parens\"\n              }]\n            }]\n          }\n        }\n      }, {\n        \"begin\": \"%r(?:([(\\\\[{<])|([^\\\\w\\\\s]|_))\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.begin.ruby\"\n          }\n        },\n        \"end\": \"([)\\\\]}>]\\\\2|\\\\1\\\\2)[eimnosux]*\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.end.ruby\"\n          }\n        },\n        \"name\": \"string.regexp.percent.ruby\",\n        \"patterns\": [{\n          \"begin\": \"\\\\G(?<=\\\\()(?!\\\\))\",\n          \"end\": \"(?=\\\\))\",\n          \"patterns\": [{\n            \"include\": \"#parens\"\n          }]\n        }, {\n          \"begin\": \"\\\\G(?<=\\\\[)(?!\\\\])\",\n          \"end\": \"(?=\\\\])\",\n          \"patterns\": [{\n            \"include\": \"#brackets\"\n          }]\n        }, {\n          \"begin\": \"\\\\G(?<=\\\\{)(?!\\\\})\",\n          \"end\": \"(?=\\\\})\",\n          \"patterns\": [{\n            \"include\": \"#braces\"\n          }]\n        }, {\n          \"begin\": \"\\\\G(?<=<)(?!>)\",\n          \"end\": \"(?=>)\",\n          \"patterns\": [{\n            \"include\": \"#angles\"\n          }]\n        }, {\n          \"include\": \"#regex_sub\"\n        }],\n        \"repository\": {\n          \"angles\": {\n            \"patterns\": [{\n              \"include\": \"#regex_sub\"\n            }, {\n              \"begin\": \"<\",\n              \"end\": \">\",\n              \"patterns\": [{\n                \"include\": \"#angles\"\n              }]\n            }]\n          },\n          \"braces\": {\n            \"patterns\": [{\n              \"include\": \"#regex_sub\"\n            }, {\n              \"begin\": \"\\\\{\",\n              \"end\": \"\\\\}\",\n              \"patterns\": [{\n                \"include\": \"#braces\"\n              }]\n            }]\n          },\n          \"brackets\": {\n            \"patterns\": [{\n              \"include\": \"#regex_sub\"\n            }, {\n              \"begin\": \"\\\\[\",\n              \"end\": \"\\\\]\",\n              \"patterns\": [{\n                \"include\": \"#brackets\"\n              }]\n            }]\n          },\n          \"parens\": {\n            \"patterns\": [{\n              \"include\": \"#regex_sub\"\n            }, {\n              \"begin\": \"\\\\(\",\n              \"end\": \"\\\\)\",\n              \"patterns\": [{\n                \"include\": \"#parens\"\n              }]\n            }]\n          }\n        }\n      }, {\n        \"begin\": \"%s(?:([(\\\\[{<])|([^\\\\w\\\\s]|_))\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.constant.begin.ruby\"\n          }\n        },\n        \"end\": \"[)\\\\]}>]\\\\2|\\\\1\\\\2\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.constant.end.ruby\"\n          }\n        },\n        \"name\": \"constant.other.symbol.percent.ruby\",\n        \"patterns\": [{\n          \"begin\": \"\\\\G(?<=\\\\()(?!\\\\))\",\n          \"end\": \"(?=\\\\))\",\n          \"patterns\": [{\n            \"include\": \"#parens\"\n          }]\n        }, {\n          \"begin\": \"\\\\G(?<=\\\\[)(?!\\\\])\",\n          \"end\": \"(?=\\\\])\",\n          \"patterns\": [{\n            \"include\": \"#brackets\"\n          }]\n        }, {\n          \"begin\": \"\\\\G(?<=\\\\{)(?!\\\\})\",\n          \"end\": \"(?=\\\\})\",\n          \"patterns\": [{\n            \"include\": \"#braces\"\n          }]\n        }, {\n          \"begin\": \"\\\\G(?<=<)(?!>)\",\n          \"end\": \"(?=>)\",\n          \"patterns\": [{\n            \"include\": \"#angles\"\n          }]\n        }],\n        \"repository\": {\n          \"angles\": {\n            \"patterns\": [{\n              \"match\": \"\\\\\\\\<|\\\\\\\\>|\\\\\\\\\\\\\\\\\",\n              \"name\": \"constant.character.escape.ruby\"\n            }, {\n              \"begin\": \"<\",\n              \"end\": \">\",\n              \"patterns\": [{\n                \"include\": \"#angles\"\n              }]\n            }]\n          },\n          \"braces\": {\n            \"patterns\": [{\n              \"match\": \"\\\\\\\\\\\\{|\\\\\\\\\\\\}|\\\\\\\\\\\\\\\\\",\n              \"name\": \"constant.character.escape.ruby\"\n            }, {\n              \"begin\": \"\\\\{\",\n              \"end\": \"\\\\}\",\n              \"patterns\": [{\n                \"include\": \"#braces\"\n              }]\n            }]\n          },\n          \"brackets\": {\n            \"patterns\": [{\n              \"match\": \"\\\\\\\\\\\\[|\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\\",\n              \"name\": \"constant.character.escape.ruby\"\n            }, {\n              \"begin\": \"\\\\[\",\n              \"end\": \"\\\\]\",\n              \"patterns\": [{\n                \"include\": \"#brackets\"\n              }]\n            }]\n          },\n          \"parens\": {\n            \"patterns\": [{\n              \"match\": \"\\\\\\\\\\\\(|\\\\\\\\\\\\)|\\\\\\\\\\\\\\\\\",\n              \"name\": \"constant.character.escape.ruby\"\n            }, {\n              \"begin\": \"\\\\(\",\n              \"end\": \"\\\\)\",\n              \"patterns\": [{\n                \"include\": \"#parens\"\n              }]\n            }]\n          }\n        }\n      }, {\n        \"begin\": \"%w(?:([(\\\\[{<])|([^\\\\w\\\\s]|_))\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.section.array.begin.ruby\"\n          }\n        },\n        \"end\": \"[)\\\\]}>]\\\\2|\\\\1\\\\2\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.section.array.end.ruby\"\n          }\n        },\n        \"name\": \"meta.array.string.ruby\",\n        \"patterns\": [{\n          \"begin\": \"\\\\G(?<=\\\\()(?!\\\\))\",\n          \"end\": \"(?=\\\\))\",\n          \"patterns\": [{\n            \"include\": \"#parens\"\n          }, {\n            \"include\": \"#string\"\n          }]\n        }, {\n          \"begin\": \"\\\\G(?<=\\\\[)(?!\\\\])\",\n          \"end\": \"(?=\\\\])\",\n          \"patterns\": [{\n            \"include\": \"#brackets\"\n          }, {\n            \"include\": \"#string\"\n          }]\n        }, {\n          \"begin\": \"\\\\G(?<=\\\\{)(?!\\\\})\",\n          \"end\": \"(?=\\\\})\",\n          \"patterns\": [{\n            \"include\": \"#braces\"\n          }, {\n            \"include\": \"#string\"\n          }]\n        }, {\n          \"begin\": \"\\\\G(?<=<)(?!>)\",\n          \"end\": \"(?=>)\",\n          \"patterns\": [{\n            \"include\": \"#angles\"\n          }, {\n            \"include\": \"#string\"\n          }]\n        }, {\n          \"include\": \"#string\"\n        }],\n        \"repository\": {\n          \"angles\": {\n            \"patterns\": [{\n              \"captures\": {\n                \"0\": {\n                  \"name\": \"constant.character.escape.ruby\"\n                }\n              },\n              \"match\": \"\\\\\\\\<|\\\\\\\\>\",\n              \"name\": \"string.other.ruby\"\n            }, {\n              \"begin\": \"<\",\n              \"captures\": {\n                \"0\": {\n                  \"name\": \"string.other.ruby\"\n                }\n              },\n              \"end\": \">\",\n              \"patterns\": [{\n                \"include\": \"#angles\"\n              }, {\n                \"include\": \"#string\"\n              }]\n            }]\n          },\n          \"braces\": {\n            \"patterns\": [{\n              \"captures\": {\n                \"0\": {\n                  \"name\": \"constant.character.escape.ruby\"\n                }\n              },\n              \"match\": \"\\\\\\\\\\\\{|\\\\\\\\\\\\}\",\n              \"name\": \"string.other.ruby\"\n            }, {\n              \"begin\": \"\\\\{\",\n              \"captures\": {\n                \"0\": {\n                  \"name\": \"string.other.ruby\"\n                }\n              },\n              \"end\": \"\\\\}\",\n              \"patterns\": [{\n                \"include\": \"#braces\"\n              }, {\n                \"include\": \"#string\"\n              }]\n            }]\n          },\n          \"brackets\": {\n            \"patterns\": [{\n              \"captures\": {\n                \"0\": {\n                  \"name\": \"constant.character.escape.ruby\"\n                }\n              },\n              \"match\": \"\\\\\\\\\\\\[|\\\\\\\\\\\\]\",\n              \"name\": \"string.other.ruby\"\n            }, {\n              \"begin\": \"\\\\[\",\n              \"captures\": {\n                \"0\": {\n                  \"name\": \"string.other.ruby\"\n                }\n              },\n              \"end\": \"\\\\]\",\n              \"patterns\": [{\n                \"include\": \"#brackets\"\n              }, {\n                \"include\": \"#string\"\n              }]\n            }]\n          },\n          \"parens\": {\n            \"patterns\": [{\n              \"captures\": {\n                \"0\": {\n                  \"name\": \"constant.character.escape.ruby\"\n                }\n              },\n              \"match\": \"\\\\\\\\\\\\(|\\\\\\\\\\\\)\",\n              \"name\": \"string.other.ruby\"\n            }, {\n              \"begin\": \"\\\\(\",\n              \"captures\": {\n                \"0\": {\n                  \"name\": \"string.other.ruby\"\n                }\n              },\n              \"end\": \"\\\\)\",\n              \"patterns\": [{\n                \"include\": \"#parens\"\n              }, {\n                \"include\": \"#string\"\n              }]\n            }]\n          },\n          \"string\": {\n            \"patterns\": [{\n              \"captures\": {\n                \"0\": {\n                  \"name\": \"constant.character.escape.ruby\"\n                }\n              },\n              \"match\": \"\\\\\\\\\\\\\\\\|\\\\\\\\[ ]\",\n              \"name\": \"string.other.ruby\"\n            }, {\n              \"match\": \"\\\\S\\\\w*\",\n              \"name\": \"string.other.ruby\"\n            }]\n          }\n        }\n      }, {\n        \"begin\": \"%W(?:([(\\\\[{<])|([^\\\\w\\\\s]|_))\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.section.array.begin.ruby\"\n          }\n        },\n        \"end\": \"[)\\\\]}>]\\\\2|\\\\1\\\\2\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.section.array.end.ruby\"\n          }\n        },\n        \"name\": \"meta.array.string.interpolated.ruby\",\n        \"patterns\": [{\n          \"begin\": \"\\\\G(?<=\\\\()(?!\\\\))\",\n          \"end\": \"(?=\\\\))\",\n          \"patterns\": [{\n            \"include\": \"#parens\"\n          }, {\n            \"include\": \"#string\"\n          }]\n        }, {\n          \"begin\": \"\\\\G(?<=\\\\[)(?!\\\\])\",\n          \"end\": \"(?=\\\\])\",\n          \"patterns\": [{\n            \"include\": \"#brackets\"\n          }, {\n            \"include\": \"#string\"\n          }]\n        }, {\n          \"begin\": \"\\\\G(?<=\\\\{)(?!\\\\})\",\n          \"end\": \"(?=\\\\})\",\n          \"patterns\": [{\n            \"include\": \"#braces\"\n          }, {\n            \"include\": \"#string\"\n          }]\n        }, {\n          \"begin\": \"\\\\G(?<=<)(?!>)\",\n          \"end\": \"(?=>)\",\n          \"patterns\": [{\n            \"include\": \"#angles\"\n          }, {\n            \"include\": \"#string\"\n          }]\n        }, {\n          \"include\": \"#string\"\n        }],\n        \"repository\": {\n          \"angles\": {\n            \"patterns\": [{\n              \"begin\": \"<\",\n              \"captures\": {\n                \"0\": {\n                  \"name\": \"string.other.ruby\"\n                }\n              },\n              \"end\": \">\",\n              \"patterns\": [{\n                \"include\": \"#angles\"\n              }, {\n                \"include\": \"#string\"\n              }]\n            }]\n          },\n          \"braces\": {\n            \"patterns\": [{\n              \"begin\": \"\\\\{\",\n              \"captures\": {\n                \"0\": {\n                  \"name\": \"string.other.ruby\"\n                }\n              },\n              \"end\": \"\\\\}\",\n              \"patterns\": [{\n                \"include\": \"#braces\"\n              }, {\n                \"include\": \"#string\"\n              }]\n            }]\n          },\n          \"brackets\": {\n            \"patterns\": [{\n              \"begin\": \"\\\\[\",\n              \"captures\": {\n                \"0\": {\n                  \"name\": \"string.other.ruby\"\n                }\n              },\n              \"end\": \"\\\\]\",\n              \"patterns\": [{\n                \"include\": \"#brackets\"\n              }, {\n                \"include\": \"#string\"\n              }]\n            }]\n          },\n          \"parens\": {\n            \"patterns\": [{\n              \"begin\": \"\\\\(\",\n              \"captures\": {\n                \"0\": {\n                  \"name\": \"string.other.ruby\"\n                }\n              },\n              \"end\": \"\\\\)\",\n              \"patterns\": [{\n                \"include\": \"#parens\"\n              }, {\n                \"include\": \"#string\"\n              }]\n            }]\n          },\n          \"string\": {\n            \"patterns\": [{\n              \"begin\": \"(?=\\\\\\\\|#\\\\{)\",\n              \"end\": \"(?!\\\\G)\",\n              \"name\": \"string.other.ruby\",\n              \"patterns\": [{\n                \"include\": \"#escaped_char\"\n              }, {\n                \"include\": \"#interpolated_ruby\"\n              }]\n            }, {\n              \"match\": \"\\\\S\\\\w*\",\n              \"name\": \"string.other.ruby\"\n            }]\n          }\n        }\n      }, {\n        \"begin\": \"%x(?:([(\\\\[{<])|([^\\\\w\\\\s]|_))\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.begin.ruby\"\n          }\n        },\n        \"end\": \"[)\\\\]}>]\\\\2|\\\\1\\\\2\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.end.ruby\"\n          }\n        },\n        \"name\": \"string.interpolated.percent.ruby\",\n        \"patterns\": [{\n          \"begin\": \"\\\\G(?<=\\\\()(?!\\\\))\",\n          \"end\": \"(?=\\\\))\",\n          \"patterns\": [{\n            \"include\": \"#parens\"\n          }]\n        }, {\n          \"begin\": \"\\\\G(?<=\\\\[)(?!\\\\])\",\n          \"end\": \"(?=\\\\])\",\n          \"patterns\": [{\n            \"include\": \"#brackets\"\n          }]\n        }, {\n          \"begin\": \"\\\\G(?<=\\\\{)(?!\\\\})\",\n          \"end\": \"(?=\\\\})\",\n          \"patterns\": [{\n            \"include\": \"#braces\"\n          }]\n        }, {\n          \"begin\": \"\\\\G(?<=<)(?!>)\",\n          \"end\": \"(?=>)\",\n          \"patterns\": [{\n            \"include\": \"#angles\"\n          }]\n        }, {\n          \"include\": \"#escaped_char\"\n        }, {\n          \"include\": \"#interpolated_ruby\"\n        }],\n        \"repository\": {\n          \"angles\": {\n            \"patterns\": [{\n              \"include\": \"#escaped_char\"\n            }, {\n              \"include\": \"#interpolated_ruby\"\n            }, {\n              \"begin\": \"<\",\n              \"end\": \">\",\n              \"patterns\": [{\n                \"include\": \"#angles\"\n              }]\n            }]\n          },\n          \"braces\": {\n            \"patterns\": [{\n              \"include\": \"#escaped_char\"\n            }, {\n              \"include\": \"#interpolated_ruby\"\n            }, {\n              \"begin\": \"\\\\{\",\n              \"end\": \"\\\\}\",\n              \"patterns\": [{\n                \"include\": \"#braces\"\n              }]\n            }]\n          },\n          \"brackets\": {\n            \"patterns\": [{\n              \"include\": \"#escaped_char\"\n            }, {\n              \"include\": \"#interpolated_ruby\"\n            }, {\n              \"begin\": \"\\\\[\",\n              \"end\": \"\\\\]\",\n              \"patterns\": [{\n                \"include\": \"#brackets\"\n              }]\n            }]\n          },\n          \"parens\": {\n            \"patterns\": [{\n              \"include\": \"#escaped_char\"\n            }, {\n              \"include\": \"#interpolated_ruby\"\n            }, {\n              \"begin\": \"\\\\(\",\n              \"end\": \"\\\\)\",\n              \"patterns\": [{\n                \"include\": \"#parens\"\n              }]\n            }]\n          }\n        }\n      }]\n    },\n    \"regex_sub\": {\n      \"patterns\": [{\n        \"include\": \"#interpolated_ruby\"\n      }, {\n        \"include\": \"#escaped_char\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.quantifier.begin.ruby\"\n          },\n          \"3\": {\n            \"name\": \"punctuation.definition.quantifier.end.ruby\"\n          }\n        },\n        \"match\": \"(\\\\{)\\\\d+(,\\\\d+)?(\\\\})\",\n        \"name\": \"keyword.operator.quantifier.ruby\"\n      }, {\n        \"begin\": \"\\\\[\\\\^?\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.character-class.begin.ruby\"\n          }\n        },\n        \"end\": \"\\\\]\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.character-class.end.ruby\"\n          }\n        },\n        \"name\": \"constant.other.character-class.set.ruby\",\n        \"patterns\": [{\n          \"include\": \"#escaped_char\"\n        }]\n      }, {\n        \"begin\": \"\\\\(\\\\?#\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.comment.begin.ruby\"\n          }\n        },\n        \"end\": \"\\\\)\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.comment.end.ruby\"\n          }\n        },\n        \"name\": \"comment.line.number-sign.ruby\",\n        \"patterns\": [{\n          \"include\": \"#escaped_char\"\n        }]\n      }, {\n        \"begin\": \"\\\\(\",\n        \"captures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.group.ruby\"\n          }\n        },\n        \"end\": \"\\\\)\",\n        \"name\": \"meta.group.regexp.ruby\",\n        \"patterns\": [{\n          \"include\": \"#regex_sub\"\n        }]\n      }, {\n        \"begin\": \"(?<=^|\\\\s)(#)\\\\s(?=[[a-zA-Z0-9,. \\\\t?!-][^\\\\x{00}-\\\\x{7F}]]*$)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.comment.ruby\"\n          }\n        },\n        \"comment\": \"We are restrictive in what we allow to go after the comment character to avoid false positives, since the availability of comments depend on regexp flags.\",\n        \"end\": \"$\\\\n?\",\n        \"name\": \"comment.line.number-sign.ruby\"\n      }]\n    }\n  },\n  \"scopeName\": \"source.ruby\",\n  \"embeddedLangs\": [\"html\", \"xml\", \"sql\", \"css\", \"c\", \"javascript\", \"shellscript\", \"lua\"],\n  \"aliases\": [\"rb\"]\n});\nvar ruby = [...html, ...xml, ...sql, ...css, ...c, ...javascript, ...shellscript, ...lua, lang];\nexport { ruby as default };"],
  "mappings": "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",
  "names": []
}
