{
  "version": 3,
  "sources": ["../../../../../../node_modules/shiki/dist/langs/soy.mjs"],
  "sourcesContent": ["import html from './html.mjs';\nimport './javascript.mjs';\nimport './css.mjs';\nconst lang = Object.freeze({\n  \"displayName\": \"Closure Templates\",\n  \"fileTypes\": [\"soy\"],\n  \"injections\": {\n    \"meta.tag\": {\n      \"patterns\": [{\n        \"include\": \"#body\"\n      }]\n    }\n  },\n  \"name\": \"soy\",\n  \"patterns\": [{\n    \"include\": \"#alias\"\n  }, {\n    \"include\": \"#delpackage\"\n  }, {\n    \"include\": \"#namespace\"\n  }, {\n    \"include\": \"#template\"\n  }, {\n    \"include\": \"#comment\"\n  }],\n  \"repository\": {\n    \"alias\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"storage.type.soy\"\n        },\n        \"2\": {\n          \"name\": \"entity.name.type.soy\"\n        },\n        \"3\": {\n          \"name\": \"storage.type.soy\"\n        },\n        \"4\": {\n          \"name\": \"entity.name.type.soy\"\n        }\n      },\n      \"match\": \"{(alias)\\\\s+([\\\\w\\\\.]+)(?:\\\\s+(as)\\\\s+(\\\\w+))?}\"\n    },\n    \"attribute\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"storage.other.attribute.soy\"\n        },\n        \"2\": {\n          \"name\": \"string.double.quoted.soy\"\n        }\n      },\n      \"match\": '(\\\\w+)=(\"(?:\\\\\\\\?.)*?\")'\n    },\n    \"body\": {\n      \"patterns\": [{\n        \"include\": \"#comment\"\n      }, {\n        \"include\": \"#let\"\n      }, {\n        \"include\": \"#call\"\n      }, {\n        \"include\": \"#css\"\n      }, {\n        \"include\": \"#xid\"\n      }, {\n        \"include\": \"#condition\"\n      }, {\n        \"include\": \"#condition-control\"\n      }, {\n        \"include\": \"#for\"\n      }, {\n        \"include\": \"#literal\"\n      }, {\n        \"include\": \"#msg\"\n      }, {\n        \"include\": \"#special-character\"\n      }, {\n        \"include\": \"#print\"\n      }, {\n        \"include\": \"text.html.basic\"\n      }]\n    },\n    \"boolean\": {\n      \"match\": \"true|false\",\n      \"name\": \"language.constant.boolean.soy\"\n    },\n    \"call\": {\n      \"patterns\": [{\n        \"begin\": \"{((?:del)?call)\\\\s+([\\\\w\\\\.]+)(?=[^/]*?})\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"storage.type.function.soy\"\n          },\n          \"2\": {\n            \"name\": \"entity.name.function.soy\"\n          }\n        },\n        \"end\": \"{/(\\\\1)}\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"storage.type.function.soy\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#comment\"\n        }, {\n          \"include\": \"#variant\"\n        }, {\n          \"include\": \"#attribute\"\n        }, {\n          \"include\": \"#param\"\n        }]\n      }, {\n        \"begin\": \"{((?:del)?call)(\\\\s+[\\\\w\\\\.]+)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"storage.type.function.soy\"\n          },\n          \"2\": {\n            \"name\": \"entity.name.function.soy\"\n          }\n        },\n        \"end\": \"/}\",\n        \"patterns\": [{\n          \"include\": \"#variant\"\n        }, {\n          \"include\": \"#attribute\"\n        }]\n      }]\n    },\n    \"comment\": {\n      \"patterns\": [{\n        \"begin\": \"/\\\\*\",\n        \"end\": \"\\\\*/\",\n        \"name\": \"comment.block.documentation.soy\",\n        \"patterns\": [{\n          \"captures\": {\n            \"1\": {\n              \"name\": \"keyword.parameter.soy\"\n            },\n            \"2\": {\n              \"name\": \"variable.parameter.soy\"\n            }\n          },\n          \"match\": \"(@param\\\\??)\\\\s+(\\\\S+)\"\n        }]\n      }, {\n        \"match\": \"^\\\\s*(\\\\/\\\\/.*)$\",\n        \"name\": \"comment.line.double-slash.soy\"\n      }]\n    },\n    \"condition\": {\n      \"begin\": \"{/?(if|elseif|switch|case)\\\\s*\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.soy\"\n        }\n      },\n      \"end\": \"}\",\n      \"patterns\": [{\n        \"include\": \"#attribute\"\n      }, {\n        \"include\": \"#expression\"\n      }]\n    },\n    \"condition-control\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"keyword.control.soy\"\n        }\n      },\n      \"match\": \"{(else|ifempty|default)}\"\n    },\n    \"css\": {\n      \"begin\": \"{(css)\\\\s+\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.other.soy\"\n        }\n      },\n      \"end\": \"}\",\n      \"patterns\": [{\n        \"include\": \"#expression\"\n      }]\n    },\n    \"delpackage\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"storage.type.soy\"\n        },\n        \"2\": {\n          \"name\": \"entity.name.type.soy\"\n        }\n      },\n      \"match\": \"{(delpackage)\\\\s+([\\\\w\\\\.]+)}\"\n    },\n    \"expression\": {\n      \"patterns\": [{\n        \"include\": \"#boolean\"\n      }, {\n        \"include\": \"#number\"\n      }, {\n        \"include\": \"#function\"\n      }, {\n        \"include\": \"#null\"\n      }, {\n        \"include\": \"#string\"\n      }, {\n        \"include\": \"#variable-ref\"\n      }, {\n        \"include\": \"#operator\"\n      }]\n    },\n    \"for\": {\n      \"begin\": \"{/?(foreach|for)(?=\\\\s|})\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.soy\"\n        }\n      },\n      \"end\": \"}\",\n      \"patterns\": [{\n        \"match\": \"in\",\n        \"name\": \"keyword.control.soy\"\n      }, {\n        \"include\": \"#expression\"\n      }, {\n        \"include\": \"#body\"\n      }]\n    },\n    \"function\": {\n      \"begin\": \"(\\\\w+)\\\\(\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"support.function.soy\"\n        }\n      },\n      \"end\": \"\\\\)\",\n      \"patterns\": [{\n        \"include\": \"#expression\"\n      }]\n    },\n    \"let\": {\n      \"patterns\": [{\n        \"begin\": \"{(let)\\\\s+(\\\\$\\\\w+\\\\s*:)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"storage.type.soy\"\n          },\n          \"2\": {\n            \"name\": \"variable.soy\"\n          }\n        },\n        \"end\": \"/}\",\n        \"patterns\": [{\n          \"include\": \"#comment\"\n        }, {\n          \"include\": \"#expression\"\n        }]\n      }, {\n        \"begin\": \"{(let)\\\\s+(\\\\$\\\\w+)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"storage.type.soy\"\n          },\n          \"2\": {\n            \"name\": \"variable.soy\"\n          }\n        },\n        \"end\": \"{/(\\\\1)}\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"storage.type.soy\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#attribute\"\n        }, {\n          \"include\": \"#body\"\n        }]\n      }]\n    },\n    \"literal\": {\n      \"begin\": \"{(literal)}\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.other.soy\"\n        }\n      },\n      \"end\": \"{/(\\\\1)}\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.other.soy\"\n        }\n      },\n      \"name\": \"meta.literal\"\n    },\n    \"msg\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"keyword.other.soy\"\n        }\n      },\n      \"end\": \"}\",\n      \"match\": \"{/?(msg|fallbackmsg)\",\n      \"patterns\": [{\n        \"include\": \"#attribute\"\n      }]\n    },\n    \"namespace\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"storage.type.soy\"\n        },\n        \"2\": {\n          \"name\": \"entity.name.type.soy\"\n        }\n      },\n      \"match\": \"{(namespace)\\\\s+([\\\\w\\\\.]+)}\"\n    },\n    \"null\": {\n      \"match\": \"null\",\n      \"name\": \"language.constant.null.soy\"\n    },\n    \"number\": {\n      \"match\": \"-?\\\\.?\\\\d+|\\\\d[\\\\.\\\\d]*\",\n      \"name\": \"language.constant.numeric\"\n    },\n    \"operator\": {\n      \"match\": \"-|not|\\\\*|\\\\/|%|\\\\+|<=|>=|<|>|==|!=|and|or|\\\\?:|\\\\?|:\",\n      \"name\": \"keyword.operator.soy\"\n    },\n    \"param\": {\n      \"patterns\": [{\n        \"begin\": \"{(param)\\\\s+(\\\\w+\\\\s*\\\\:)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"storage.type.soy\"\n          },\n          \"2\": {\n            \"name\": \"variable.parameter.soy\"\n          }\n        },\n        \"end\": \"/}\",\n        \"patterns\": [{\n          \"include\": \"#expression\"\n        }]\n      }, {\n        \"begin\": \"{(param)\\\\s+(\\\\w+)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"storage.type.soy\"\n          },\n          \"2\": {\n            \"name\": \"variable.parameter.soy\"\n          }\n        },\n        \"end\": \"{/(\\\\1)}\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"storage.type.soy\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#attribute\"\n        }, {\n          \"include\": \"#body\"\n        }]\n      }]\n    },\n    \"print\": {\n      \"begin\": \"{(print)?\\\\s*\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.other.soy\"\n        }\n      },\n      \"end\": \"}\",\n      \"patterns\": [{\n        \"captures\": {\n          \"1\": {\n            \"name\": \"support.function.soy\"\n          }\n        },\n        \"match\": \"\\\\|\\\\s*(changeNewlineToBr|truncate|bidiSpanWrap|bidiUnicodeWrap)\"\n      }, {\n        \"include\": \"#expression\"\n      }]\n    },\n    \"special-character\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"language.support.constant\"\n        }\n      },\n      \"match\": \"{(sp|nil|\\\\\\\\r|\\\\\\\\n|\\\\\\\\t|lb|rb)}\"\n    },\n    \"string\": {\n      \"begin\": \"'\",\n      \"end\": \"'\",\n      \"name\": \"string.quoted.single.soy\",\n      \"patterns\": [{\n        \"match\": `\\\\\\\\(?:[\\\\\\\\'\"nrtbf]|u[0-9a-fA-F]{4})`,\n        \"name\": \"constant.character.escape.soy\"\n      }]\n    },\n    \"template\": {\n      \"begin\": \"{(template|deltemplate)\\\\s([\\\\w\\\\.]+)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"storage.type.soy\"\n        },\n        \"2\": {\n          \"name\": \"entity.name.function.soy\"\n        }\n      },\n      \"end\": \"{(/\\\\1)}\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"storage.type.soy\"\n        }\n      },\n      \"patterns\": [{\n        \"begin\": \"{(@param)(\\\\??)\\\\s+(\\\\S+\\\\s*:)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.parameter.soy\"\n          },\n          \"2\": {\n            \"name\": \"storage.modifier.keyword.operator.soy\"\n          },\n          \"3\": {\n            \"name\": \"variable.parameter.soy\"\n          }\n        },\n        \"end\": \"}\",\n        \"name\": \"meta.parameter.soy\",\n        \"patterns\": [{\n          \"include\": \"#type\"\n        }]\n      }, {\n        \"include\": \"#variant\"\n      }, {\n        \"include\": \"#body\"\n      }, {\n        \"include\": \"#attribute\"\n      }]\n    },\n    \"type\": {\n      \"patterns\": [{\n        \"match\": \"any|null|\\\\?|string|bool|int|float|number|html|uri|js|css|attributes\",\n        \"name\": \"support.type.soy\"\n      }, {\n        \"begin\": \"(list|map)(<)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"support.type.soy\"\n          },\n          \"2\": {\n            \"name\": \"support.type.punctuation.soy\"\n          }\n        },\n        \"end\": \"(>)\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"support.type.modifier.soy\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#type\"\n        }]\n      }]\n    },\n    \"variable-ref\": {\n      \"match\": \"\\\\$[\\\\a-zA-Z_][\\\\w\\\\.]*\",\n      \"name\": \"variable.other.soy\"\n    },\n    \"variant\": {\n      \"begin\": '(variant)=(\")',\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"storage.other.attribute.soy\"\n        },\n        \"2\": {\n          \"name\": \"string.double.quoted.soy\"\n        }\n      },\n      \"contentName\": \"string.double.quoted.soy\",\n      \"end\": '(\")',\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"string.double.quoted.soy\"\n        }\n      },\n      \"patterns\": [{\n        \"include\": \"#expression\"\n      }]\n    },\n    \"xid\": {\n      \"begin\": \"{(xid)\\\\s+\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.other.soy\"\n        }\n      },\n      \"end\": \"}\",\n      \"patterns\": [{\n        \"include\": \"#expression\"\n      }]\n    }\n  },\n  \"scopeName\": \"text.html.soy\",\n  \"embeddedLangs\": [\"html\"],\n  \"aliases\": [\"closure-templates\"]\n});\nvar soy = [...html, lang];\nexport { soy as default };"],
  "mappings": "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",
  "names": []
}
