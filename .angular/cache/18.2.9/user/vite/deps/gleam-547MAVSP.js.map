{
  "version": 3,
  "sources": ["../../../../../../node_modules/shiki/dist/langs/gleam.mjs"],
  "sourcesContent": ["const lang = Object.freeze({\n  \"displayName\": \"Gleam\",\n  \"name\": \"gleam\",\n  \"patterns\": [{\n    \"include\": \"#comments\"\n  }, {\n    \"include\": \"#keywords\"\n  }, {\n    \"include\": \"#strings\"\n  }, {\n    \"include\": \"#constant\"\n  }, {\n    \"include\": \"#entity\"\n  }, {\n    \"include\": \"#discards\"\n  }],\n  \"repository\": {\n    \"binary_number\": {\n      \"match\": \"\\\\b0[bB](_?[01])+\\\\b\",\n      \"name\": \"constant.numeric.binary.gleam\",\n      \"patterns\": []\n    },\n    \"boolean\": {\n      \"match\": \"\\\\b(True|False)\\\\b\",\n      \"name\": \"constant.language.boolean.gleam\",\n      \"patterns\": []\n    },\n    \"comments\": {\n      \"patterns\": [{\n        \"match\": \"//.*\",\n        \"name\": \"comment.line.gleam\"\n      }]\n    },\n    \"constant\": {\n      \"patterns\": [{\n        \"include\": \"#binary_number\"\n      }, {\n        \"include\": \"#octal_number\"\n      }, {\n        \"include\": \"#hexadecimal_number\"\n      }, {\n        \"include\": \"#decimal_number\"\n      }, {\n        \"include\": \"#boolean\"\n      }, {\n        \"match\": \"[[:upper:]][[:word:]]*\",\n        \"name\": \"entity.name.type.gleam\"\n      }]\n    },\n    \"decimal_number\": {\n      \"match\": \"\\\\b[[:digit:]]+(_?[[:digit:]])*(\\\\.[[:digit:]]*)?(e-?[[:digit:]]*)?\\\\b\",\n      \"name\": \"constant.numeric.decimal.gleam\",\n      \"patterns\": []\n    },\n    \"discards\": {\n      \"match\": \"\\\\b_(?:[[:word:]]+)?\\\\b\",\n      \"name\": \"comment.unused.gleam\"\n    },\n    \"entity\": {\n      \"patterns\": [{\n        \"begin\": \"\\\\b([[:lower:]][[:word:]]*)([[:space:]]*)?\\\\(\",\n        \"captures\": {\n          \"1\": {\n            \"name\": \"entity.name.function.gleam\"\n          }\n        },\n        \"end\": \"\\\\)\",\n        \"patterns\": [{\n          \"include\": \"$self\"\n        }]\n      }, {\n        \"match\": \"\\\\b([[:lower:]][[:word:]]*):\\\\s\",\n        \"name\": \"variable.parameter.gleam\"\n      }, {\n        \"match\": \"\\\\b([[:lower:]][[:word:]]*):\",\n        \"name\": \"entity.name.namespace.gleam\"\n      }]\n    },\n    \"hexadecimal_number\": {\n      \"match\": \"\\\\b0[xX](_?[[:xdigit:]])+\\\\b\",\n      \"name\": \"constant.numeric.hexadecimal.gleam\",\n      \"patterns\": []\n    },\n    \"keywords\": {\n      \"patterns\": [{\n        \"match\": \"\\\\b(as|use|case|if|fn|import|let|assert|pub|type|opaque|const|todo|panic)\\\\b\",\n        \"name\": \"keyword.control.gleam\"\n      }, {\n        \"match\": \"(<\\\\-|\\\\->)\",\n        \"name\": \"keyword.operator.arrow.gleam\"\n      }, {\n        \"match\": \"\\\\|>\",\n        \"name\": \"keyword.operator.pipe.gleam\"\n      }, {\n        \"match\": \"\\\\.\\\\.\",\n        \"name\": \"keyword.operator.splat.gleam\"\n      }, {\n        \"match\": \"(<=\\\\.|>=\\\\.|==\\\\.|!=\\\\.|<\\\\.|>\\\\.)\",\n        \"name\": \"keyword.operator.comparison.float.gleam\"\n      }, {\n        \"match\": \"(<=|>=|==|!=|<|>)\",\n        \"name\": \"keyword.operator.comparison.int.gleam\"\n      }, {\n        \"match\": \"(&&|\\\\|\\\\|)\",\n        \"name\": \"keyword.operator.logical.gleam\"\n      }, {\n        \"match\": \"<>\",\n        \"name\": \"keyword.operator.string.gleam\"\n      }, {\n        \"match\": \"\\\\|\",\n        \"name\": \"keyword.operator.other.gleam\"\n      }, {\n        \"match\": \"(\\\\+\\\\.|\\\\-\\\\.|/\\\\.|\\\\*\\\\.|%\\\\.)\",\n        \"name\": \"keyword.operator.arithmetic.float.gleam\"\n      }, {\n        \"match\": \"(\\\\+|\\\\-|/|\\\\*|%)\",\n        \"name\": \"keyword.operator.arithmetic.int.gleam\"\n      }, {\n        \"match\": \"=\",\n        \"name\": \"keyword.operator.assignment.gleam\"\n      }]\n    },\n    \"octal_number\": {\n      \"match\": \"\\\\b0[oO](_?[0-7])+\\\\b\",\n      \"name\": \"constant.numeric.octal.gleam\",\n      \"patterns\": []\n    },\n    \"strings\": {\n      \"begin\": '\"',\n      \"end\": '\"',\n      \"name\": \"string.quoted.double.gleam\",\n      \"patterns\": [{\n        \"match\": \"\\\\\\\\.\",\n        \"name\": \"constant.character.escape.gleam\"\n      }]\n    }\n  },\n  \"scopeName\": \"source.gleam\"\n});\nvar gleam = [lang];\nexport { gleam as default };"],
  "mappings": ";;;AAAA,IAAM,OAAO,OAAO,OAAO;AAAA,EACzB,eAAe;AAAA,EACf,QAAQ;AAAA,EACR,YAAY,CAAC;AAAA,IACX,WAAW;AAAA,EACb,GAAG;AAAA,IACD,WAAW;AAAA,EACb,GAAG;AAAA,IACD,WAAW;AAAA,EACb,GAAG;AAAA,IACD,WAAW;AAAA,EACb,GAAG;AAAA,IACD,WAAW;AAAA,EACb,GAAG;AAAA,IACD,WAAW;AAAA,EACb,CAAC;AAAA,EACD,cAAc;AAAA,IACZ,iBAAiB;AAAA,MACf,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,YAAY,CAAC;AAAA,IACf;AAAA,IACA,WAAW;AAAA,MACT,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,YAAY,CAAC;AAAA,IACf;AAAA,IACA,YAAY;AAAA,MACV,YAAY,CAAC;AAAA,QACX,SAAS;AAAA,QACT,QAAQ;AAAA,MACV,CAAC;AAAA,IACH;AAAA,IACA,YAAY;AAAA,MACV,YAAY,CAAC;AAAA,QACX,WAAW;AAAA,MACb,GAAG;AAAA,QACD,WAAW;AAAA,MACb,GAAG;AAAA,QACD,WAAW;AAAA,MACb,GAAG;AAAA,QACD,WAAW;AAAA,MACb,GAAG;AAAA,QACD,WAAW;AAAA,MACb,GAAG;AAAA,QACD,SAAS;AAAA,QACT,QAAQ;AAAA,MACV,CAAC;AAAA,IACH;AAAA,IACA,kBAAkB;AAAA,MAChB,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,YAAY,CAAC;AAAA,IACf;AAAA,IACA,YAAY;AAAA,MACV,SAAS;AAAA,MACT,QAAQ;AAAA,IACV;AAAA,IACA,UAAU;AAAA,MACR,YAAY,CAAC;AAAA,QACX,SAAS;AAAA,QACT,YAAY;AAAA,UACV,KAAK;AAAA,YACH,QAAQ;AAAA,UACV;AAAA,QACF;AAAA,QACA,OAAO;AAAA,QACP,YAAY,CAAC;AAAA,UACX,WAAW;AAAA,QACb,CAAC;AAAA,MACH,GAAG;AAAA,QACD,SAAS;AAAA,QACT,QAAQ;AAAA,MACV,GAAG;AAAA,QACD,SAAS;AAAA,QACT,QAAQ;AAAA,MACV,CAAC;AAAA,IACH;AAAA,IACA,sBAAsB;AAAA,MACpB,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,YAAY,CAAC;AAAA,IACfgBAAgB;AAAA,MACd,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,YAAY,CAAC;AAAA,IACf;AAAA,IACA,WAAW;AAAA,MACT,SAAS;AAAA,MACT,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,YAAY,CAAC;AAAA,QACX,SAAS;AAAA,QACT,QAAQ;AAAA,MACV,CAAC;AAAA,IACH;AAAA,EACF;AAAA,EACA,aAAa;AACf,CAAC;AACD,IAAI,QAAQ,CAAC,IAAI;",
  "names": []
}
