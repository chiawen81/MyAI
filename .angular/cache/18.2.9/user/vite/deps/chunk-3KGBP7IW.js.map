{
  "version": 3,
  "sources": ["../../../../../../node_modules/shiki/dist/langs/yaml.mjs"],
  "sourcesContent": ["const lang = Object.freeze({\n  \"displayName\": \"YAML\",\n  \"fileTypes\": [\"yaml\", \"yml\", \"rviz\", \"reek\", \"clang-format\", \"yaml-tmlanguage\", \"syntax\", \"sublime-syntax\"],\n  \"firstLineMatch\": \"^%YAML( ?1.\\\\d+)?\",\n  \"name\": \"yaml\",\n  \"patterns\": [{\n    \"include\": \"#comment\"\n  }, {\n    \"include\": \"#property\"\n  }, {\n    \"include\": \"#directive\"\n  }, {\n    \"match\": \"^---\",\n    \"name\": \"entity.other.document.begin.yaml\"\n  }, {\n    \"match\": \"^\\\\.{3}\",\n    \"name\": \"entity.other.document.end.yaml\"\n  }, {\n    \"include\": \"#node\"\n  }],\n  \"repository\": {\n    \"block-collection\": {\n      \"patterns\": [{\n        \"include\": \"#block-sequence\"\n      }, {\n        \"include\": \"#block-mapping\"\n      }]\n    },\n    \"block-mapping\": {\n      \"patterns\": [{\n        \"include\": \"#block-pair\"\n      }]\n    },\n    \"block-node\": {\n      \"patterns\": [{\n        \"include\": \"#prototype\"\n      }, {\n        \"include\": \"#block-scalar\"\n      }, {\n        \"include\": \"#block-collection\"\n      }, {\n        \"include\": \"#flow-scalar-plain-out\"\n      }, {\n        \"include\": \"#flow-node\"\n      }]\n    },\n    \"block-pair\": {\n      \"patterns\": [{\n        \"begin\": \"\\\\?\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.key-value.begin.yaml\"\n          }\n        },\n        \"end\": \"(?=\\\\?)|^ *(:)|(:)\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.separator.key-value.mapping.yaml\"\n          },\n          \"2\": {\n            \"name\": \"invalid.illegal.expected-newline.yaml\"\n          }\n        },\n        \"name\": \"meta.block-mapping.yaml\",\n        \"patterns\": [{\n          \"include\": \"#block-node\"\n        }]\n      }, {\n        \"begin\": \"(?x)\\n(?=\\n(?x:\\n[^\\\\s[-?:,\\\\[\\\\]{}#&*!|>'\\\"%@`]]\\n| [?:-] \\\\S\\n)\\n(\\n[^\\\\s:]\\n| : \\\\S\\n| \\\\s+ (?![#\\\\s])\\n)*\\n\\\\s*\\n:\\n(\\\\s|$)\\n)\\n\",\n        \"end\": \"(?x)\\n(?=\\n\\\\s* $\\n| \\\\s+ \\\\#\\n| \\\\s* : (\\\\s|$)\\n)\\n\",\n        \"patterns\": [{\n          \"include\": \"#flow-scalar-plain-out-implicit-type\"\n        }, {\n          \"begin\": \"(?x)\\n[^\\\\s[-?:,\\\\[\\\\]{}#&*!|>'\\\"%@`]]\\n| [?:-] \\\\S\\n\",\n          \"beginCaptures\": {\n            \"0\": {\n              \"name\": \"entity.name.tag.yaml\"\n            }\n          },\n          \"contentName\": \"entity.name.tag.yaml\",\n          \"end\": \"(?x)\\n(?=\\n\\\\s* $\\n| \\\\s+ \\\\#\\n| \\\\s* : (\\\\s|$)\\n)\\n\",\n          \"name\": \"string.unquoted.plain.out.yaml\"\n        }]\n      }, {\n        \"match\": \":(?=\\\\s|$)\",\n        \"name\": \"punctuation.separator.key-value.mapping.yaml\"\n      }]\n    },\n    \"block-scalar\": {\n      \"begin\": \"(?:(\\\\|)|(>))([1-9])?([-+])?(.*\\\\n?)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.flow.block-scalar.literal.yaml\"\n        },\n        \"2\": {\n          \"name\": \"keyword.control.flow.block-scalar.folded.yaml\"\n        },\n        \"3\": {\n          \"name\": \"constant.numeric.indentation-indicator.yaml\"\n        },\n        \"4\": {\n          \"name\": \"storage.modifier.chomping-indicator.yaml\"\n        },\n        \"5\": {\n          \"patterns\": [{\n            \"include\": \"#comment\"\n          }, {\n            \"match\": \".+\",\n            \"name\": \"invalid.illegal.expected-comment-or-newline.yaml\"\n          }]\n        }\n      },\n      \"end\": \"^(?=\\\\S)|(?!\\\\G)\",\n      \"patterns\": [{\n        \"begin\": \"^([ ]+)(?! )\",\n        \"end\": \"^(?!\\\\1|\\\\s*$)\",\n        \"name\": \"string.unquoted.block.yaml\"\n      }]\n    },\n    \"block-sequence\": {\n      \"match\": \"(-)(?!\\\\S)\",\n      \"name\": \"punctuation.definition.block.sequence.item.yaml\"\n    },\n    \"comment\": {\n      \"begin\": \"(?:(^[ \\\\t]*)|[ \\\\t]+)(?=#\\\\p{Print}*$)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.whitespace.comment.leading.yaml\"\n        }\n      },\n      \"end\": \"(?!\\\\G)\",\n      \"patterns\": [{\n        \"begin\": \"#\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.comment.yaml\"\n          }\n        },\n        \"end\": \"\\\\n\",\n        \"name\": \"comment.line.number-sign.yaml\"\n      }]\n    },\n    \"directive\": {\n      \"begin\": \"^%\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.directive.begin.yaml\"\n        }\n      },\n      \"end\": \"(?=$|[ \\\\t]+($|#))\",\n      \"name\": \"meta.directive.yaml\",\n      \"patterns\": [{\n        \"captures\": {\n          \"1\": {\n            \"name\": \"keyword.other.directive.yaml.yaml\"\n          },\n          \"2\": {\n            \"name\": \"constant.numeric.yaml-version.yaml\"\n          }\n        },\n        \"match\": \"\\\\G(YAML)[ \\\\t]+(\\\\d+\\\\.\\\\d+)\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"keyword.other.directive.tag.yaml\"\n          },\n          \"2\": {\n            \"name\": \"storage.type.tag-handle.yaml\"\n          },\n          \"3\": {\n            \"name\": \"support.type.tag-prefix.yaml\"\n          }\n        },\n        \"match\": \"(?x)\\n\\\\G\\n(TAG)\\n(?:[ \\\\t]+\\n((?:!(?:[0-9A-Za-z\\\\-]*!)?))\\n(?:[ \\\\t]+ (\\n!              (?x: %[0-9A-Fa-f]{2} | [0-9A-Za-z\\\\-#;/?:@&=+$,_.!~*'()\\\\[\\\\]] )*\\n| (?![,!\\\\[\\\\]{}]) (?x: %[0-9A-Fa-f]{2} | [0-9A-Za-z\\\\-#;/?:@&=+$,_.!~*'()\\\\[\\\\]] )+\\n)\\n)?\\n)?\\n\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"support.other.directive.reserved.yaml\"\n          },\n          \"2\": {\n            \"name\": \"string.unquoted.directive-name.yaml\"\n          },\n          \"3\": {\n            \"name\": \"string.unquoted.directive-parameter.yaml\"\n          }\n        },\n        \"match\": \"(?x) \\\\G (\\\\w+) (?:[ \\\\t]+ (\\\\w+) (?:[ \\\\t]+ (\\\\w+))? )?\"\n      }, {\n        \"match\": \"\\\\S+\",\n        \"name\": \"invalid.illegal.unrecognized.yaml\"\n      }]\n    },\n    \"flow-alias\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"keyword.control.flow.alias.yaml\"\n        },\n        \"2\": {\n          \"name\": \"punctuation.definition.alias.yaml\"\n        },\n        \"3\": {\n          \"name\": \"variable.other.alias.yaml\"\n        },\n        \"4\": {\n          \"name\": \"invalid.illegal.character.anchor.yaml\"\n        }\n      },\n      \"match\": \"((\\\\*))([^\\\\s\\\\[\\\\]/{/},]+)([^\\\\s\\\\]},]\\\\S*)?\"\n    },\n    \"flow-collection\": {\n      \"patterns\": [{\n        \"include\": \"#flow-sequence\"\n      }, {\n        \"include\": \"#flow-mapping\"\n      }]\n    },\n    \"flow-mapping\": {\n      \"begin\": \"\\\\{\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.mapping.begin.yaml\"\n        }\n      },\n      \"end\": \"\\\\}\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.mapping.end.yaml\"\n        }\n      },\n      \"name\": \"meta.flow-mapping.yaml\",\n      \"patterns\": [{\n        \"include\": \"#prototype\"\n      }, {\n        \"match\": \",\",\n        \"name\": \"punctuation.separator.mapping.yaml\"\n      }, {\n        \"include\": \"#flow-pair\"\n      }]\n    },\n    \"flow-node\": {\n      \"patterns\": [{\n        \"include\": \"#prototype\"\n      }, {\n        \"include\": \"#flow-alias\"\n      }, {\n        \"include\": \"#flow-collection\"\n      }, {\n        \"include\": \"#flow-scalar\"\n      }]\n    },\n    \"flow-pair\": {\n      \"patterns\": [{\n        \"begin\": \"\\\\?\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.key-value.begin.yaml\"\n          }\n        },\n        \"end\": \"(?=[},\\\\]])\",\n        \"name\": \"meta.flow-pair.explicit.yaml\",\n        \"patterns\": [{\n          \"include\": \"#prototype\"\n        }, {\n          \"include\": \"#flow-pair\"\n        }, {\n          \"include\": \"#flow-node\"\n        }, {\n          \"begin\": \":(?=\\\\s|$|[\\\\[\\\\]{},])\",\n          \"beginCaptures\": {\n            \"0\": {\n              \"name\": \"punctuation.separator.key-value.mapping.yaml\"\n            }\n          },\n          \"end\": \"(?=[},\\\\]])\",\n          \"patterns\": [{\n            \"include\": \"#flow-value\"\n          }]\n        }]\n      }, {\n        \"begin\": \"(?x)\\n(?=\\n(?:\\n[^\\\\s[-?:,\\\\[\\\\]{}#&*!|>'\\\"%@`]]\\n| [?:-] [^\\\\s[\\\\[\\\\]{},]]\\n)\\n(\\n[^\\\\s:[\\\\[\\\\]{},]]\\n| : [^\\\\s[\\\\[\\\\]{},]]\\n| \\\\s+ (?![#\\\\s])\\n)*\\n\\\\s*\\n:\\n(\\\\s|$)\\n)\\n\",\n        \"end\": \"(?x)\\n(?=\\n\\\\s* $\\n| \\\\s+ \\\\#\\n| \\\\s* : (\\\\s|$)\\n| \\\\s* : [\\\\[\\\\]{},]\\n| \\\\s* [\\\\[\\\\]{},]\\n)\\n\",\n        \"name\": \"meta.flow-pair.key.yaml\",\n        \"patterns\": [{\n          \"include\": \"#flow-scalar-plain-in-implicit-type\"\n        }, {\n          \"begin\": \"(?x)\\n[^\\\\s[-?:,\\\\[\\\\]{}#&*!|>'\\\"%@`]]\\n| [?:-] [^\\\\s[\\\\[\\\\]{},]]\\n\",\n          \"beginCaptures\": {\n            \"0\": {\n              \"name\": \"entity.name.tag.yaml\"\n            }\n          },\n          \"contentName\": \"entity.name.tag.yaml\",\n          \"end\": \"(?x)\\n(?=\\n\\\\s* $\\n| \\\\s+ \\\\#\\n| \\\\s* : (\\\\s|$)\\n| \\\\s* : [\\\\[\\\\]{},]\\n| \\\\s* [\\\\[\\\\]{},]\\n)\\n\",\n          \"name\": \"string.unquoted.plain.in.yaml\"\n        }]\n      }, {\n        \"include\": \"#flow-node\"\n      }, {\n        \"begin\": \":(?=\\\\s|$|[\\\\[\\\\]{},])\",\n        \"captures\": {\n          \"0\": {\n            \"name\": \"punctuation.separator.key-value.mapping.yaml\"\n          }\n        },\n        \"end\": \"(?=[},\\\\]])\",\n        \"name\": \"meta.flow-pair.yaml\",\n        \"patterns\": [{\n          \"include\": \"#flow-value\"\n        }]\n      }]\n    },\n    \"flow-scalar\": {\n      \"patterns\": [{\n        \"include\": \"#flow-scalar-double-quoted\"\n      }, {\n        \"include\": \"#flow-scalar-single-quoted\"\n      }, {\n        \"include\": \"#flow-scalar-plain-in\"\n      }]\n    },\n    \"flow-scalar-double-quoted\": {\n      \"begin\": '\"',\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.begin.yaml\"\n        }\n      },\n      \"end\": '\"',\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.end.yaml\"\n        }\n      },\n      \"name\": \"string.quoted.double.yaml\",\n      \"patterns\": [{\n        \"match\": '\\\\\\\\([0abtnvfre \"/\\\\\\\\N_Lp]|x\\\\d\\\\d|u\\\\d{4}|U\\\\d{8})',\n        \"name\": \"constant.character.escape.yaml\"\n      }, {\n        \"match\": \"\\\\\\\\\\\\n\",\n        \"name\": \"constant.character.escape.double-quoted.newline.yaml\"\n      }]\n    },\n    \"flow-scalar-plain-in\": {\n      \"patterns\": [{\n        \"include\": \"#flow-scalar-plain-in-implicit-type\"\n      }, {\n        \"begin\": \"(?x)\\n[^\\\\s[-?:,\\\\[\\\\]{}#&*!|>'\\\"%@`]]\\n| [?:-] [^\\\\s[\\\\[\\\\]{},]]\\n\",\n        \"end\": \"(?x)\\n(?=\\n\\\\s* $\\n| \\\\s+ \\\\#\\n| \\\\s* : (\\\\s|$)\\n| \\\\s* : [\\\\[\\\\]{},]\\n| \\\\s* [\\\\[\\\\]{},]\\n)\\n\",\n        \"name\": \"string.unquoted.plain.in.yaml\"\n      }]\n    },\n    \"flow-scalar-plain-in-implicit-type\": {\n      \"patterns\": [{\n        \"captures\": {\n          \"1\": {\n            \"name\": \"constant.language.null.yaml\"\n          },\n          \"2\": {\n            \"name\": \"constant.language.boolean.yaml\"\n          },\n          \"3\": {\n            \"name\": \"constant.numeric.integer.yaml\"\n          },\n          \"4\": {\n            \"name\": \"constant.numeric.float.yaml\"\n          },\n          \"5\": {\n            \"name\": \"constant.other.timestamp.yaml\"\n          },\n          \"6\": {\n            \"name\": \"constant.language.value.yaml\"\n          },\n          \"7\": {\n            \"name\": \"constant.language.merge.yaml\"\n          }\n        },\n        \"match\": \"(?x)\\n(?x:\\n(null|Null|NULL|~)\\n| (y|Y|yes|Yes|YES|n|N|no|No|NO|true|True|TRUE|false|False|FALSE|on|On|ON|off|Off|OFF)\\n| (\\n(?:\\n[-+]? 0b [0-1_]+\\n| [-+]? 0  [0-7_]+\\n| [-+]? (?: 0|[1-9][0-9_]*)\\n| [-+]? 0x [0-9a-fA-F_]+\\n| [-+]? [1-9] [0-9_]* (?: :[0-5]?[0-9])+\\n)\\n)\\n| (\\n(?x:\\n[-+]? (?: [0-9] [0-9_]*)? \\\\. [0-9.]* (?: [eE] [-+] [0-9]+)?\\n| [-+]? [0-9] [0-9_]* (?: :[0-5]?[0-9])+ \\\\. [0-9_]*\\n| [-+]? \\\\. (?: inf|Inf|INF)\\n|       \\\\. (?: nan|NaN|NAN)\\n)\\n)\\n| (\\n(?x:\\n\\\\d{4} - \\\\d{2} - \\\\d{2}\\n| \\\\d{4}\\n- \\\\d{1,2}\\n- \\\\d{1,2}\\n(?: [Tt] | [ \\\\t]+) \\\\d{1,2}\\n: \\\\d{2}\\n: \\\\d{2}\\n(?: \\\\.\\\\d*)?\\n(?:\\n(?:[ \\\\t]*) Z\\n| [-+] \\\\d{1,2} (?: :\\\\d{1,2})?\\n)?\\n)\\n)\\n| (=)\\n| (<<)\\n)\\n(?:\\n(?=\\n\\\\s* $\\n| \\\\s+ \\\\#\\n| \\\\s* : (\\\\s|$)\\n| \\\\s* : [\\\\[\\\\]{},]\\n| \\\\s* [\\\\[\\\\]{},]\\n)\\n)\\n\"\n      }]\n    },\n    \"flow-scalar-plain-out\": {\n      \"patterns\": [{\n        \"include\": \"#flow-scalar-plain-out-implicit-type\"\n      }, {\n        \"begin\": \"(?x)\\n[^\\\\s[-?:,\\\\[\\\\]{}#&*!|>'\\\"%@`]]\\n| [?:-] \\\\S\\n\",\n        \"end\": \"(?x)\\n(?=\\n\\\\s* $\\n| \\\\s+ \\\\#\\n| \\\\s* : (\\\\s|$)\\n)\\n\",\n        \"name\": \"string.unquoted.plain.out.yaml\"\n      }]\n    },\n    \"flow-scalar-plain-out-implicit-type\": {\n      \"patterns\": [{\n        \"captures\": {\n          \"1\": {\n            \"name\": \"constant.language.null.yaml\"\n          },\n          \"2\": {\n            \"name\": \"constant.language.boolean.yaml\"\n          },\n          \"3\": {\n            \"name\": \"constant.numeric.integer.yaml\"\n          },\n          \"4\": {\n            \"name\": \"constant.numeric.float.yaml\"\n          },\n          \"5\": {\n            \"name\": \"constant.other.timestamp.yaml\"\n          },\n          \"6\": {\n            \"name\": \"constant.language.value.yaml\"\n          },\n          \"7\": {\n            \"name\": \"constant.language.merge.yaml\"\n          }\n        },\n        \"match\": \"(?x)\\n(?x:\\n(null|Null|NULL|~)\\n| (y|Y|yes|Yes|YES|n|N|no|No|NO|true|True|TRUE|false|False|FALSE|on|On|ON|off|Off|OFF)\\n| (\\n(?:\\n[-+]? 0b [0-1_]+\\n| [-+]? 0  [0-7_]+\\n| [-+]? (?: 0|[1-9][0-9_]*)\\n| [-+]? 0x [0-9a-fA-F_]+\\n| [-+]? [1-9] [0-9_]* (?: :[0-5]?[0-9])+\\n)\\n)\\n| (\\n(?x:\\n[-+]? (?: [0-9] [0-9_]*)? \\\\. [0-9.]* (?: [eE] [-+] [0-9]+)?\\n| [-+]? [0-9] [0-9_]* (?: :[0-5]?[0-9])+ \\\\. [0-9_]*\\n| [-+]? \\\\. (?: inf|Inf|INF)\\n|       \\\\. (?: nan|NaN|NAN)\\n)\\n)\\n| (\\n(?x:\\n\\\\d{4} - \\\\d{2} - \\\\d{2}\\n| \\\\d{4}\\n- \\\\d{1,2}\\n- \\\\d{1,2}\\n(?: [Tt] | [ \\\\t]+) \\\\d{1,2}\\n: \\\\d{2}\\n: \\\\d{2}\\n(?: \\\\.\\\\d*)?\\n(?:\\n(?:[ \\\\t]*) Z\\n| [-+] \\\\d{1,2} (?: :\\\\d{1,2})?\\n)?\\n)\\n)\\n| (=)\\n| (<<)\\n)\\n(?x:\\n(?=\\n\\\\s* $\\n| \\\\s+ \\\\#\\n| \\\\s* : (\\\\s|$)\\n)\\n)\\n\"\n      }]\n    },\n    \"flow-scalar-single-quoted\": {\n      \"begin\": \"'\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.begin.yaml\"\n        }\n      },\n      \"end\": \"'(?!')\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.end.yaml\"\n        }\n      },\n      \"name\": \"string.quoted.single.yaml\",\n      \"patterns\": [{\n        \"match\": \"''\",\n        \"name\": \"constant.character.escape.single-quoted.yaml\"\n      }]\n    },\n    \"flow-sequence\": {\n      \"begin\": \"\\\\[\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.sequence.begin.yaml\"\n        }\n      },\n      \"end\": \"\\\\]\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.sequence.end.yaml\"\n        }\n      },\n      \"name\": \"meta.flow-sequence.yaml\",\n      \"patterns\": [{\n        \"include\": \"#prototype\"\n      }, {\n        \"match\": \",\",\n        \"name\": \"punctuation.separator.sequence.yaml\"\n      }, {\n        \"include\": \"#flow-pair\"\n      }, {\n        \"include\": \"#flow-node\"\n      }]\n    },\n    \"flow-value\": {\n      \"patterns\": [{\n        \"begin\": \"\\\\G(?![},\\\\]])\",\n        \"end\": \"(?=[},\\\\]])\",\n        \"name\": \"meta.flow-pair.value.yaml\",\n        \"patterns\": [{\n          \"include\": \"#flow-node\"\n        }]\n      }]\n    },\n    \"node\": {\n      \"patterns\": [{\n        \"include\": \"#block-node\"\n      }]\n    },\n    \"property\": {\n      \"begin\": \"(?=!|&)\",\n      \"end\": \"(?!\\\\G)\",\n      \"name\": \"meta.property.yaml\",\n      \"patterns\": [{\n        \"captures\": {\n          \"1\": {\n            \"name\": \"keyword.control.property.anchor.yaml\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.definition.anchor.yaml\"\n          },\n          \"3\": {\n            \"name\": \"entity.name.type.anchor.yaml\"\n          },\n          \"4\": {\n            \"name\": \"invalid.illegal.character.anchor.yaml\"\n          }\n        },\n        \"match\": \"\\\\G((&))([^\\\\s\\\\[\\\\]/{/},]+)(\\\\S+)?\"\n      }, {\n        \"match\": \"(?x)\\n\\\\G\\n(?:\\n! < (?: %[0-9A-Fa-f]{2} | [0-9A-Za-z\\\\-#;/?:@&=+$,_.!~*'()\\\\[\\\\]] )+ >\\n| (?:!(?:[0-9A-Za-z\\\\-]*!)?) (?: %[0-9A-Fa-f]{2} | [0-9A-Za-z\\\\-#;/?:@&=+$_.~*'()] )+\\n| !\\n)\\n(?=\\\\ |\\\\t|$)\\n\",\n        \"name\": \"storage.type.tag-handle.yaml\"\n      }, {\n        \"match\": \"\\\\S+\",\n        \"name\": \"invalid.illegal.tag-handle.yaml\"\n      }]\n    },\n    \"prototype\": {\n      \"patterns\": [{\n        \"include\": \"#comment\"\n      }, {\n        \"include\": \"#property\"\n      }]\n    }\n  },\n  \"scopeName\": \"source.yaml\",\n  \"aliases\": [\"yml\"]\n});\nvar yaml = [lang];\nexport { yaml as default };"],
  "mappings": "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",
  "names": []
}
