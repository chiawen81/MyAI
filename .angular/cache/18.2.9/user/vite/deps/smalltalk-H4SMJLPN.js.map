{
  "version": 3,
  "sources": ["../../../../../../node_modules/shiki/dist/langs/smalltalk.mjs"],
  "sourcesContent": ["const lang = Object.freeze({\n  \"displayName\": \"Smalltalk\",\n  \"fileTypes\": [\"st\"],\n  \"foldingStartMarker\": \"\\\\[\",\n  \"foldingStopMarker\": \"^\\\\s*\\\\]|^\\\\s\\\\]\",\n  \"name\": \"smalltalk\",\n  \"patterns\": [{\n    \"match\": \"\\\\$.\",\n    \"name\": \"constant.character.smalltalk\"\n  }, {\n    \"match\": \"\\\\b(class)\\\\b\",\n    \"name\": \"storage.type.$1.smalltalk\"\n  }, {\n    \"match\": \"\\\\b(extend|super|self)\\\\b\",\n    \"name\": \"storage.modifier.$1.smalltalk\"\n  }, {\n    \"match\": \"\\\\b(yourself|new|Smalltalk)\\\\b\",\n    \"name\": \"keyword.control.$1.smalltalk\"\n  }, {\n    \"match\": \":=\",\n    \"name\": \"keyword.operator.assignment.smalltalk\"\n  }, {\n    \"comment\": \"Parse the variable declaration like: |a b c|\",\n    \"match\": \"/^:\\\\w*\\\\s*\\\\|/\",\n    \"name\": \"constant.other.block.smalltalk\"\n  }, {\n    \"captures\": {\n      \"1\": {\n        \"name\": \"punctuation.definition.instance-variables.begin.smalltalk\"\n      },\n      \"2\": {\n        \"patterns\": [{\n          \"match\": \"\\\\w+\",\n          \"name\": \"support.type.variable.declaration.smalltalk\"\n        }]\n      },\n      \"3\": {\n        \"name\": \"punctuation.definition.instance-variables.end.smalltalk\"\n      }\n    },\n    \"match\": \"(\\\\|)(\\\\s*\\\\w[\\\\w ]*)(\\\\|)\"\n  }, {\n    \"captures\": {\n      \"1\": {\n        \"patterns\": [{\n          \"match\": \":\\\\w+\",\n          \"name\": \"entity.name.function.block.smalltalk\"\n        }]\n      }\n    },\n    \"comment\": \"Parse the blocks like: [ :a :b | ...... ]\",\n    \"match\": \"\\\\[((\\\\s+|:\\\\w+)*)\\\\|\"\n  }, {\n    \"include\": \"#numeric\"\n  }, {\n    \"match\": \"<(?!<|=)|>(?!<|=|>)|<=|>=|=|==|~=|~~|>>|\\\\^\",\n    \"name\": \"keyword.operator.comparison.smalltalk\"\n  }, {\n    \"match\": \"(\\\\*|\\\\+|\\\\-|/|\\\\\\\\)\",\n    \"name\": \"keyword.operator.arithmetic.smalltalk\"\n  }, {\n    \"match\": \"(?<=[ \\\\t])!+|\\\\bnot\\\\b|&|\\\\band\\\\b|\\\\||\\\\bor\\\\b\",\n    \"name\": \"keyword.operator.logical.smalltalk\"\n  }, {\n    \"comment\": \"Fake reserved word -> main Smalltalk messages\",\n    \"match\": \"(?<!\\\\.)\\\\b(ensure|resume|retry|signal)\\\\b(?![?!])\",\n    \"name\": \"keyword.control.smalltalk\"\n  }, {\n    \"comment\": \"Fake conditionals. Smalltalk Methods.\",\n    \"match\": \"ifCurtailed:|ifTrue:|ifFalse:|whileFalse:|whileTrue:\",\n    \"name\": \"keyword.control.conditionals.smalltalk\"\n  }, {\n    \"captures\": {\n      \"1\": {\n        \"name\": \"entity.other.inherited-class.smalltalk\"\n      },\n      \"3\": {\n        \"name\": \"keyword.control.smalltalk\"\n      },\n      \"4\": {\n        \"name\": \"entity.name.type.class.smalltalk\"\n      }\n    },\n    \"match\": \"(\\\\w+)(\\\\s+(subclass:))\\\\s*(\\\\w*)\",\n    \"name\": \"meta.class.smalltalk\"\n  }, {\n    \"begin\": '\"',\n    \"beginCaptures\": [{\n      \"name\": \"punctuation.definition.comment.begin.smalltalk\"\n    }],\n    \"end\": '\"',\n    \"endCaptures\": [{\n      \"name\": \"punctuation.definition.comment.end.smalltalk\"\n    }],\n    \"name\": \"comment.block.smalltalk\"\n  }, {\n    \"match\": \"\\\\b(true|false)\\\\b\",\n    \"name\": \"constant.language.boolean.smalltalk\"\n  }, {\n    \"match\": \"\\\\b(nil)\\\\b\",\n    \"name\": \"constant.language.nil.smalltalk\"\n  }, {\n    \"captures\": {\n      \"1\": {\n        \"name\": \"punctuation.definition.constant.smalltalk\"\n      }\n    },\n    \"comment\": \"messages/methods\",\n    \"match\": \"(?>[a-zA-Z_]\\\\w*(?>[?!])?)(:)(?!:)\",\n    \"name\": \"constant.other.messages.smalltalk\"\n  }, {\n    \"captures\": {\n      \"1\": {\n        \"name\": \"punctuation.definition.constant.smalltalk\"\n      }\n    },\n    \"comment\": \"symbols\",\n    \"match\": \"(#)[a-zA-Z_][a-zA-Z0-9_:]*\",\n    \"name\": \"constant.other.symbol.smalltalk\"\n  }, {\n    \"begin\": \"#\\\\[\",\n    \"beginCaptures\": [{\n      \"name\": \"punctuation.definition.constant.begin.smalltalk\"\n    }],\n    \"end\": \"\\\\]\",\n    \"endCaptures\": [{\n      \"name\": \"punctuation.definition.constant.end.smalltalk\"\n    }],\n    \"name\": \"meta.array.byte.smalltalk\",\n    \"patterns\": [{\n      \"match\": \"[0-9]+(r[a-zA-Z0-9]+)?\",\n      \"name\": \"constant.numeric.integer.smalltalk\"\n    }, {\n      \"match\": \"[^\\\\s\\\\]]+\",\n      \"name\": \"invalid.illegal.character-not-allowed-here.smalltalk\"\n    }]\n  }, {\n    \"begin\": \"#\\\\(\",\n    \"beginCaptures\": [{\n      \"name\": \"punctuation.definition.constant.begin.smalltalk\"\n    }],\n    \"comment\": \"Array Constructor\",\n    \"end\": \"\\\\)\",\n    \"endCaptures\": [{\n      \"name\": \"punctuation.definition.constant.end.smalltalk\"\n    }],\n    \"name\": \"constant.other.array.smalltalk\"\n  }, {\n    \"begin\": \"'\",\n    \"beginCaptures\": [{\n      \"name\": \"punctuation.definition.string.begin.smalltalk\"\n    }],\n    \"end\": \"'\",\n    \"endCaptures\": [{\n      \"name\": \"punctuation.definition.string.end.smalltalk\"\n    }],\n    \"name\": \"string.quoted.single.smalltalk\"\n  }, {\n    \"match\": \"\\\\b[A-Z]\\\\w*\\\\b\",\n    \"name\": \"variable.other.constant.smalltalk\"\n  }],\n  \"repository\": {\n    \"numeric\": {\n      \"patterns\": [{\n        \"match\": \"(?<!\\\\w)[0-9]+\\\\.[0-9]+s[0-9]*\",\n        \"name\": \"constant.numeric.float.scaled.smalltalk\"\n      }, {\n        \"match\": \"(?<!\\\\w)[0-9]+\\\\.[0-9]+([edq]-?[0-9]+)?\",\n        \"name\": \"constant.numeric.float.smalltalk\"\n      }, {\n        \"match\": \"(?<!\\\\w)-?[0-9]+r[a-zA-Z0-9]+\",\n        \"name\": \"constant.numeric.integer.radix.smalltalk\"\n      }, {\n        \"match\": \"(?<!\\\\w)-?[0-9]+([edq]-?[0-9]+)?\",\n        \"name\": \"constant.numeric.integer.smalltalk\"\n      }]\n    }\n  },\n  \"scopeName\": \"source.smalltalk\"\n});\nvar smalltalk = [lang];\nexport { smalltalk as default };"],
  "mappings": "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",
  "names": []
}
