{
  "version": 3,
  "sources": ["../../../../../../node_modules/shiki/dist/langs/asm.mjs"],
  "sourcesContent": ["const lang = Object.freeze({\n  \"displayName\": \"Assembly\",\n  \"fileTypes\": [\"asm\", \"nasm\", \"yasm\", \"inc\", \"s\"],\n  \"name\": \"asm\",\n  \"patterns\": [{\n    \"include\": \"#registers\"\n  }, {\n    \"include\": \"#mnemonics\"\n  }, {\n    \"include\": \"#constants\"\n  }, {\n    \"include\": \"#entities\"\n  }, {\n    \"include\": \"#support\"\n  }, {\n    \"include\": \"#comments\"\n  }, {\n    \"include\": \"#preprocessor\"\n  }, {\n    \"include\": \"#strings\"\n  }],\n  \"repository\": {\n    \"comments\": {\n      \"patterns\": [{\n        \"match\": \"(;|(^|\\\\s)#\\\\s).*$\",\n        \"name\": \"comment.line\"\n      }, {\n        \"begin\": \"/\\\\*\",\n        \"end\": \"\\\\*/\",\n        \"name\": \"comment.block\"\n      }, {\n        \"begin\": \"^\\\\s*[\\\\#%]\\\\s*if\\\\s+0\\\\b\",\n        \"end\": \"^\\\\s*[\\\\#%]\\\\s*endif\\\\b\",\n        \"name\": \"comment.preprocessor\"\n      }]\n    },\n    \"constants\": {\n      \"patterns\": [{\n        \"match\": \"(?i)\\\\b0[by](?:[01][01_]*)\\\\.(?:(?:[01][01_]*)?(?:p[+-]?(?:[0-9][0-9_]*))?\\\\b)?\",\n        \"name\": \"constant.numeric.binary.floating-point.asm.x86_64\"\n      }, {\n        \"match\": \"(?i)\\\\b0[by](?:[01][01_]*)(?:p[+-]?(?:[0-9][0-9_]*))\\\\b\",\n        \"name\": \"constant.numeric.binary.floating-point.asm.x86_64\"\n      }, {\n        \"match\": \"(?i)\\\\b0[oq](?:[0-7][0-7_]*)\\\\.(?:(?:[0-7][0-7_]*)?(?:p[+-]?(?:[0-9][0-9_]*))?\\\\b)?\",\n        \"name\": \"constant.numeric.octal.floating-point.asm.x86_64\"\n      }, {\n        \"match\": \"(?i)\\\\b0[oq](?:[0-7][0-7_]*)(?:p[+-]?(?:[0-9][0-9_]*))\\\\b\",\n        \"name\": \"constant.numeric.octal.floating-point.asm.x86_64\"\n      }, {\n        \"match\": \"(?i)\\\\b(?:0[dt])?(?:[0-9][0-9_]*)\\\\.(?:(?:[0-9][0-9_]*)?(?:e[+-]?(?:[0-9][0-9_]*))?\\\\b)?\",\n        \"name\": \"constant.numeric.decimal.floating-point.asm.x86_64\"\n      }, {\n        \"match\": \"(?i)\\\\b(?:[0-9][0-9_]*)(?:e[+-]?(?:[0-9][0-9_]*))\\\\b\",\n        \"name\": \"constant.numeric.decimal.floating-point.asm.x86_64\"\n      }, {\n        \"match\": \"(?i)\\\\b(?:[0-9][0-9_]*)p(?:[0-9][0-9_]*)?\\\\b\",\n        \"name\": \"constant.numeric.decimal.packed-bcd.asm.x86_64\"\n      }, {\n        \"match\": \"(?i)\\\\b0[xh](?:[[:xdigit:]][[:xdigit:]_]*)\\\\.(?:(?:[[:xdigit:]][[:xdigit:]_]*)?(?:p[+-]?(?:[0-9][0-9_]*))?\\\\b)?\",\n        \"name\": \"constant.numeric.hex.floating-point.asm.x86_64\"\n      }, {\n        \"match\": \"(?i)\\\\b0[xh](?:[[:xdigit:]][[:xdigit:]_]*)(?:p[+-]?(?:[0-9][0-9_]*))\\\\b\",\n        \"name\": \"constant.numeric.hex.floating-point.asm.x86_64\"\n      }, {\n        \"match\": \"(?i)\\\\$[0-9]\\\\_?(?:[[:xdigit:]][[:xdigit:]_]*)?\\\\.(?:(?:[[:xdigit:]][[:xdigit:]_]*)?(?:p[+-]?(?:[0-9][0-9_]*))?\\\\b)?\",\n        \"name\": \"constant.numeric.hex.floating-point.asm.x86_64\"\n      }, {\n        \"match\": \"(?i)\\\\$[0-9]\\\\_?(?:[[:xdigit:]][[:xdigit:]_]*)(?:p[+-]?(?:[0-9][0-9_]*))\\\\b\",\n        \"name\": \"constant.numeric.hex.floating-point.asm.x86_64\"\n      }, {\n        \"match\": \"(?i)\\\\b(?:(?:0[by](?:[01][01_]*))|(?:(?:[01][01_]*)[by]))\\\\b\",\n        \"name\": \"constant.numeric.binary.asm.x86_64\"\n      }, {\n        \"match\": \"(?i)\\\\b(?:(?:0[oq](?:[0-7][0-7_]*))|(?:(?:[0-7][0-7_]*)[oq]))\\\\b\",\n        \"name\": \"constant.numeric.octal.asm.x86_64\"\n      }, {\n        \"match\": \"(?i)\\\\b(?:(?:0[dt](?:[0-9][0-9_]*))|(?:(?:[0-9][0-9_]*)[dt]?))\\\\b\",\n        \"name\": \"constant.numeric.decimal.asm.x86_64\"\n      }, {\n        \"match\": \"(?i)(?:\\\\$[0-9]\\\\_?(?:[[:xdigit:]][[:xdigit:]_]*)?)\\\\b\",\n        \"name\": \"constant.numeric.hex.asm.x86_64\"\n      }, {\n        \"match\": \"(?i)\\\\b(?:(?:0[xh](?:[[:xdigit:]][[:xdigit:]_]*))|(?:(?:[[:xdigit:]][[:xdigit:]_]*)[hxHX]))\\\\b\",\n        \"name\": \"constant.numeric.hex.asm.x86_64\"\n      }]\n    },\n    \"entities\": {\n      \"patterns\": [{\n        \"match\": \"((section|segment)\\\\s+)?\\\\.((ro)?data|bss|text)\",\n        \"name\": \"entity.name.section\"\n      }, {\n        \"match\": \"^\\\\.?(globa?l|extern|required)\\\\b\",\n        \"name\": \"entity.directive\"\n      }, {\n        \"match\": \"(\\\\$\\\\w+)\\\\b\",\n        \"name\": \"text.variable\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.separator.asm.x86_64 storage.modifier.asm.x86_64\"\n          },\n          \"2\": {\n            \"name\": \"entity.name.function.special.asm.x86_64\"\n          },\n          \"3\": {\n            \"name\": \"punctuation.separator.asm.x86_64\"\n          }\n        },\n        \"match\": \"(\\\\.\\\\.@)((?:[[:alpha:]_?](?:[[:alnum:]_$#@~.?]*)))(?:(\\\\:)?|\\\\b)\",\n        \"name\": \"entity.name.function.asm.x86_64\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.separator.asm.x86_64 storage.modifier.asm.x86_64\"\n          },\n          \"2\": {\n            \"name\": \"entity.name.function.asm.x86_64\"\n          },\n          \"3\": {\n            \"name\": \"punctuation.separator.asm.x86_64\"\n          }\n        },\n        \"match\": \"(?:(\\\\.)?|\\\\b)((?:[[:alpha:]_?](?:[[:alnum:]_$#@~.?]*)))(?:(\\\\:))\",\n        \"name\": \"entity.name.function.asm.x86_64\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.separator.asm.x86_64 storage.modifier.asm.x86_64\"\n          },\n          \"2\": {\n            \"name\": \"entity.name.function.asm.x86_64\"\n          },\n          \"3\": {\n            \"name\": \"punctuation.separator.asm.x86_64\"\n          }\n        },\n        \"match\": \"(\\\\.)([0-9]+(?:[[:alnum:]_$#@~.?]*))(?:(\\\\:)?|\\\\b)\",\n        \"name\": \"entity.name.function.asm.x86_64\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.separator.asm.x86_64 storage.modifier.asm.x86_64\"\n          },\n          \"2\": {\n            \"name\": \"invalid.illegal.entity.name.function.asm.x86_64\"\n          },\n          \"3\": {\n            \"name\": \"punctuation.separator.asm.x86_64\"\n          }\n        },\n        \"match\": \"(?:(\\\\.)?|\\\\b)([0-9$@~](?:[[:alnum:]_$#@~.?]*))(?:(\\\\:))\",\n        \"name\": \"invalid.illegal.entity.name.function.asm.x86_64\"\n      }]\n    },\n    \"mnemonics\": {\n      \"patterns\": [{\n        \"include\": \"#mnemonics-general-purpose\"\n      }, {\n        \"include\": \"#mnemonics-fpu\"\n      }, {\n        \"include\": \"#mnemonics-mmx\"\n      }, {\n        \"include\": \"#mnemonics-sse\"\n      }, {\n        \"include\": \"#mnemonics-sse2\"\n      }, {\n        \"include\": \"#mnemonics-sse3\"\n      }, {\n        \"include\": \"#mnemonics-sse4\"\n      }, {\n        \"include\": \"#mnemonics-aesni\"\n      }, {\n        \"include\": \"#mnemonics-avx\"\n      }, {\n        \"include\": \"#mnemonics-avx2\"\n      }, {\n        \"include\": \"#mnemonics-tsx\"\n      }, {\n        \"include\": \"#mnemonics-sha\"\n      }, {\n        \"include\": \"#mnemonics-avx512\"\n      }, {\n        \"include\": \"#mnemonics-system\"\n      }, {\n        \"include\": \"#mnemonics-64bit\"\n      }, {\n        \"include\": \"#mnemonics-vmx\"\n      }, {\n        \"include\": \"#mnemonics-smx\"\n      }, {\n        \"include\": \"#mnemonics-mpx\"\n      }, {\n        \"include\": \"#mnemonics-sgx\"\n      }, {\n        \"include\": \"#mnemonics-cet\"\n      }, {\n        \"include\": \"#mnemonics-amx\"\n      }, {\n        \"include\": \"#mnemonics-uirq\"\n      }, {\n        \"include\": \"#mnemonics-esi\"\n      }, {\n        \"include\": \"#mnemonics-intel-manual-listing\"\n      }, {\n        \"include\": \"#mnemonics-intel-isa-xeon-phi\"\n      }, {\n        \"include\": \"#mnemonics-intel-isa-keylocker\"\n      }, {\n        \"include\": \"#mnemonics-supplemental-amd\"\n      }, {\n        \"include\": \"#mnemonics-supplemental-cyrix\"\n      }, {\n        \"include\": \"#mnemonics-supplemental-via\"\n      }, {\n        \"include\": \"#mnemonics-undocumented\"\n      }, {\n        \"include\": \"#mnemonics-future-intel\"\n      }, {\n        \"include\": \"#mnemonics-pseudo-ops\"\n      }]\n    },\n    \"mnemonics-64bit\": {\n      \"patterns\": [{\n        \"match\": \"(?i)\\\\b(cdqe|cqo|(cmp|lod|mov|sto)sq|cmpxchg16b|mov(ntq|sxd)|scasq|swapgs|sys(call|ret))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.64-bit-mode\"\n      }]\n    },\n    \"mnemonics-aesni\": {\n      \"patterns\": [{\n        \"match\": \"(?i)\\\\b(aes((dec|enc)(last)?|imc|keygenassist)|pclmulqdq)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.aesni\"\n      }]\n    },\n    \"mnemonics-amx\": {\n      \"patterns\": [{\n        \"match\": \"(?i)\\\\b((ld|st)tilecfg|tdpb(f16ps|[su]{2}d)|tile(loadd(t1)?|release|stored|zero))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.amx\"\n      }]\n    },\n    \"mnemonics-avx\": {\n      \"patterns\": [{\n        \"match\": \"(?i)\\\\b(v((test|permil|maskmov)p[ds]|zero(all|upper)|(perm2|insert|extract|broadcast)f128|broadcasts[ds]))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.avx\"\n      }, {\n        \"match\": \"(?i)\\\\b(vaes((dec|enc)(last)?|imc|keygenassist)|vpclmulqdq)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.avx.promoted.aes\"\n      }, {\n        \"match\": \"(?i)\\\\b(v((cmp[ps]|u?comis)[ds]|pcmp([ei]str[im]|(eq|gt)[bdqw])))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.avx.promoted.comparison\"\n      }, {\n        \"match\": \"(?i)\\\\b(v(cvt(dq2pd|dq2ps|pd2ps|ps2pd|sd2ss|si2sd|si2ss|ss2sd|t?(pd2dq|ps2dq|sd2si|ss2si))))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.avx.promoted.conversion\"\n      }, {\n        \"match\": \"(?i)\\\\b(vh((add|sub)p[ds])|vph((add|sub)([dw]|sw)|minposuw))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.avx.promoted.horizontal-packed-arithmetic\"\n      }, {\n        \"match\": \"(?i)\\\\b(v((andn?|x?or)p[ds]))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.avx.promoted.logical\"\n      }, {\n        \"match\": \"(?i)\\\\b(v(mov(([ahl]|msk|nt|u)p[ds]|(hl|lh)ps|s([ds]|[hl]dup)|q)))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.avx.promoted.mov\"\n      }, {\n        \"match\": \"(?i)\\\\b(v((add|div|mul|sub|max|min|round|sqrt)[ps][ds]|(addsub|dp)p[ds]|(rcp|rsqrt)[ps]s))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.avx.promoted.packed-arithmetic\"\n      }, {\n        \"match\": \"(?i)\\\\b(v(pack[su]s(dw|wb)|punpck[hl](bw|dq|wd|qdq)|unpck[hl]p[ds]))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.avx.promoted.packed-conversion\"\n      }, {\n        \"match\": \"(?i)\\\\b(vp(shuf([bd]|[hl]w))|vshufp[ds])\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.avx.promoted.packed-shuffle\"\n      }, {\n        \"match\": \"(?i)\\\\b(vp((abs|sign|(max|min)[su])[bdw]|(add|sub)([bdqw]|u?s[bw])|avg[bw]|extr[bdqw]|madd(wd|ubsw)|mul(hu?w|hrsw|l[dw]|u?dq)|sadbw))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.avx.promoted.supplemental.arithmetic\"\n      }, {\n        \"match\": \"(?i)\\\\b(vp(andn?|x?or))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.avx.promoted.supplemental.logical\"\n      }, {\n        \"match\": \"(?i)\\\\b(vpblend(vb|w))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.avx.promoted.supplemental.blending\"\n      }, {\n        \"match\": \"(?i)\\\\b(vpmov(mskb|[sz]x(b[dqw]|w[dq]|dq)))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.avx.promoted.supplemental.mov\"\n      }, {\n        \"match\": \"(?i)\\\\b(vp(insr[bdqw]|sll(dq|[dqw])|srl(dq)))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.avx.promoted.simd-integer\"\n      }, {\n        \"match\": \"(?i)\\\\b(vp(sra[dwq]|srl[dqw]))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.avx.promoted.shift-and-rotate\"\n      }, {\n        \"match\": \"(?i)\\\\b(vblendv?p[ds])\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.avx.promoted.packed-blending\"\n      }, {\n        \"match\": \"(?i)\\\\b(vp(test|alignr))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.avx.promoted.packed-other\"\n      }, {\n        \"match\": \"(?i)\\\\b(vmov(d(dup|qa|qu)?))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.avx.promoted.simd-integer.mov\"\n      }, {\n        \"match\": \"(?i)\\\\b(v((extract|insert)ps|lddqu|(ld|st)mxcsr|mpsadbw))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.avx.promoted.other\"\n      }, {\n        \"match\": \"(?i)\\\\b(v(maskmovdqu|movntdqa?))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.avx.promoted.cacheability-control\"\n      }, {\n        \"match\": \"(?i)\\\\b(vcvt(ph2ps|ps2ph))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.16-bit-floating-point-conversion\"\n      }, {\n        \"match\": \"(?i)\\\\b(vfn?m((add|sub)(132|213|231)[ps][ds])|vfm((addsub|subadd)(132|213|231)p[ds]))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.fma\"\n      }]\n    },\n    \"mnemonics-avx2\": {\n      \"patterns\": [{\n        \"match\": \"(?i)\\\\b(v((broadcast|extract|insert|perm2)i128|pmaskmov[dq]|perm([dsq]|p[sd])))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.avx2.promoted.simd\"\n      }, {\n        \"match\": \"(?i)\\\\b(vpbroadcast[bdqw])\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.avx2.promoted.packed\"\n      }, {\n        \"match\": \"(?i)\\\\b(vp(blendd|s[lr]lv[dq]|sravd))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.avx2.blend\"\n      }, {\n        \"match\": \"(?i)\\\\b(vp?gather[dq][dq]|vgather([dq]|dq)p[ds])\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.avx2.gather\"\n      }]\n    },\n    \"mnemonics-avx512\": {\n      \"patterns\": [{\n        \"include\": \"#mnemonics-avx512f\"\n      }, {\n        \"include\": \"#mnemonics-avx512dq\"\n      }, {\n        \"include\": \"#mnemonics-avx512bw\"\n      }, {\n        \"include\": \"#mnemonics-avx512-opmask\"\n      }, {\n        \"include\": \"#mnemonics-avx512er\"\n      }, {\n        \"include\": \"#mnemonics-avx512pf\"\n      }, {\n        \"include\": \"#mnemonics-avx512fp16\"\n      }]\n    },\n    \"mnemonics-avx512-opmask\": {\n      \"patterns\": [{\n        \"match\": \"(?i)\\\\bk(add|andn?|mov|not|or(test)?|shift[lr]|test|xn?or)[bdqw]\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.avx512.opmask\"\n      }, {\n        \"match\": \"(?i)\\\\bkunpck(bw|wd|dq)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.avx512.opmask.unpack\"\n      }]\n    },\n    \"mnemonics-avx512bw\": {\n      \"patterns\": [{\n        \"match\": \"(?i)\\\\bv(dbpsadbw|movdqu(8|16))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.avx512.bw.dbpsad\"\n      }, {\n        \"match\": \"(?i)\\\\bvp(blendm|cmpu?|movm2)[bw]\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.avx512.bw.pblend\"\n      }, {\n        \"match\": \"(?i)\\\\bvperm(w|i2[bw])\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.avx512.bw.perpmi2\"\n      }, {\n        \"match\": \"(?i)\\\\bvp(mov([bw]2m|u?swb))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.avx512.bw.pmov\"\n      }, {\n        \"match\": \"(?i)\\\\bvp(s(ll|ra|rl)vw|testn?m[bw])\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.avx512.bw.psll\"\n      }, {\n        \"match\": \"(?i)\\\\bvp(broadcastm(b2q|w2d)|(conflict|lzcnt)[dq])\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.avx512.bw.broadcast\"\n      }]\n    },\n    \"mnemonics-avx512dq\": {\n      \"patterns\": [{\n        \"match\": \"(?i)\\\\bvcvt(t?p[ds]2u?qq|uqq2p[ds])\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.avx512.dq.cvt\"\n      }, {\n        \"match\": \"(?i)\\\\bv((extract|insert)[fi]64x2|(fpclass|range|reduce)[ps][ds])\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.avx512.dq.extract\"\n      }, {\n        \"match\": \"(?i)\\\\bvp(mov(m2[dq]|b2d|q2m)|mullq)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.avx512.dq.pmov\"\n      }]\n    },\n    \"mnemonics-avx512er\": {\n      \"patterns\": [{\n        \"match\": \"(?i)\\\\bv(exp2|rcp28|rsqrt28)[ps][ds]\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.avx512.er\"\n      }]\n    },\n    \"mnemonics-avx512f\": {\n      \"patterns\": [{\n        \"match\": \"(?i)\\\\bv(align[dq]|(blendm|compress)p[ds])\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.avx512.f.align\"\n      }, {\n        \"match\": \"(?i)\\\\bv(cvtt?[ps][ds]2u(dq|si))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.avx512.f.cvtt\"\n      }, {\n        \"match\": \"(?i)\\\\bv(cvt((q|ud)q2p|usi2s)[ds])\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.avx512.f.cvt\"\n      }, {\n        \"match\": \"(?i)\\\\bv(expandp[ds]|extract[fi](32|64)x4|fixupimm[ps][ds])\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.avx512.f.expand\"\n      }, {\n        \"match\": \"(?i)\\\\bv(get(exp|mant)[ps][ds]|insertf(32|64)x4|movdq[au](32|64))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.avx512.f.getexp\"\n      }, {\n        \"match\": \"(?i)\\\\bvp(blendm[dq]|cmpu?[dq]|compress[dq])\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.avx512.f.pblend\"\n      }, {\n        \"match\": \"(?i)\\\\bvp(erm[it]2(d|q|p[ds])|expand[dq]|(max|min)[su]q|movu?s(q[bdw]|d[bw]))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.avx512.f.permi\"\n      }, {\n        \"match\": \"(?i)\\\\bvp(rolv?|rorr?|scatter[dq]|testn?m|terlog)[dq]\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.avx512.f.prol\"\n      }, {\n        \"match\": \"(?i)\\\\bvpsravq\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.avx512.f.sravq\"\n      }, {\n        \"match\": \"(?i)\\\\bv(rcp14|(rnd)?scale|rsqrt14)[ps][ds]\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.avx512.f.rcp\"\n      }, {\n        \"match\": \"(?i)\\\\bv(scatter[dq]{2}|shuf[fi](32|64)x[24])\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.avx512.f.scatter\"\n      }]\n    },\n    \"mnemonics-avx512fp16\": {\n      \"patterns\": [{\n        \"match\": \"(?i)\\\\bv((add|cmp|div|fc?(madd|mul)c|fpclass|get(exp|mant)|mul|rcp|reduce|(rnd)?scale|r?sqrt|sub)[ps]h|u?comish)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.avx512.fp16.add\"\n      }, {\n        \"match\": \"(?i)\\\\bvcvt(u?([dq]q|w)|pd)2ph\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.avx512.fp16.cvtx2ph\"\n      }, {\n        \"match\": \"(?i)\\\\bvcvtph2(u?([dq]q|w)|pd)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.avx512.fp16.cvtph2x\"\n      }, {\n        \"match\": \"(?i)\\\\bvcvt(ph2psx|ps2phx)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.avx512.fp16.cvtx\"\n      }, {\n        \"match\": \"(?i)\\\\bvcvt(s[dsi]|usi)2sh\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.avx512.fp16.cvtx2sh\"\n      }, {\n        \"match\": \"(?i)\\\\bvcvtsh2(s[dsi]|usi)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.avx512.fp16.cvtsh2x\"\n      }, {\n        \"match\": \"(?i)\\\\bvcvtt(ph2(u?(dq|qq|w))|sh2u?si)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.avx512.fp16.cvttph2x\"\n      }, {\n        \"match\": \"(?i)\\\\bvfn?m((add|sub)(132|213|231))[ps]h\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.avx512.fp16.fmadd\"\n      }, {\n        \"match\": \"(?i)\\\\bvfm(addsub|subadd)(132|213|231)ph\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.avx512.fp16.fmaddsub\"\n      }, {\n        \"match\": \"(?i)\\\\bv((min|max)ph|mov(sh|w))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.avx512.fp16.max\"\n      }]\n    },\n    \"mnemonics-avx512pf\": {\n      \"patterns\": [{\n        \"match\": \"(?i)\\\\bv(gather|scatter)pf[01][dq]p[ds]\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.avx512.pf\"\n      }]\n    },\n    \"mnemonics-cet\": {\n      \"patterns\": [{\n        \"match\": \"(?i)\\\\b((inc|save(prev)?|rstor|rd)ssp|wru?ss|(set|clr)ssbsy|endbr(32|64))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.cet\"\n      }, {\n        \"match\": \"(?i)\\\\bendbranch\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.cet.misc\"\n      }]\n    },\n    \"mnemonics-esi\": {\n      \"patterns\": [{\n        \"match\": \"(?i)\\\\benqcmds?\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.esi\"\n      }]\n    },\n    \"mnemonics-fpu\": {\n      \"patterns\": [{\n        \"match\": \"(?i)\\\\b(fcmov(n?([beu]|be)))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.fpu.data-transfer.mov\"\n      }, {\n        \"match\": \"(?i)\\\\b(f(i?(ld|stp?)|b(ld|stp)|xch))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.fpu.data-transfer.other\"\n      }, {\n        \"match\": \"(?i)\\\\b(f((add|div|mul|sub)p?|i(add|div|mul|sub)|(div|sub)rp?|i(div|sub)r))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.fpu.basic-arithmetic.basic\"\n      }, {\n        \"match\": \"(?i)\\\\b(f(prem1?|abs|chs|rndint|scale|sqrt|xtract))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.fpu.basic-arithmetic.other\"\n      }, {\n        \"match\": \"(?i)\\\\b(f(u?com[ip]?p?|icomp?|tst|xam))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.fpu.comparison\"\n      }, {\n        \"match\": \"(?i)\\\\b(f(sin|cos|sincos|pa?tan|2xm1|yl2x(p1)?))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.fpu.transcendental\"\n      }, {\n        \"match\": \"(?i)\\\\b(fld(1|z|pi|l2[et]|l[ng]2))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.fpu.load-constants\"\n      }, {\n        \"match\": \"(?i)\\\\b(f((inc|dec)stp|free|n?(init|clex|st[cs]w|stenv|save)|ld(cw|env)|rstor|nop)|f?wait)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.fpu.control-management\"\n      }, {\n        \"match\": \"(?i)\\\\b(fx(save|rstor)(64)?)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.fpu.state-management\"\n      }]\n    },\n    \"mnemonics-future-intel\": {\n      \"patterns\": [{\n        \"include\": \"#mnemonics-future-intel-apx\"\n      }]\n    },\n    \"mnemonics-future-intel-apx\": {\n      \"patterns\": [{\n        \"match\": \"(?i)\\\\b(c(cmp|test)(n?[bl]e?|[ft]|n?[osz]))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.apx.ccmp_test\"\n      }, {\n        \"match\": \"(?i)\\\\b(cfcmovn?([bl]e?|[opsz]))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.apx.cfcmov\"\n      }, {\n        \"match\": \"(?i)\\\\b(cmpn?([bl]e?|[opsz])xadd)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.apx.cmpxadd\"\n      }, {\n        \"match\": \"(?i)\\\\b(jmpabs|(push|pop)2p?)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.apx.other\"\n      }]\n    },\n    \"mnemonics-general-purpose\": {\n      \"patterns\": [{\n        \"match\": \"(?i)\\\\b(?:mov(?:[sz]x)?|cmov(?:n?[abceglopsz]|n?[abgl]e|p[eo]))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.general-purpose.data-transfer.mov\"\n      }, {\n        \"match\": \"(?i)\\\\b(xchg|bswap|xadd|cmpxchg(8b)?)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.general-purpose.data-transfer.xchg\"\n      }, {\n        \"match\": \"(?i)\\\\b((push|pop)(ad?)?|cwde?|cdq|cbw)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.general-purpose.data-transfer.other\"\n      }, {\n        \"match\": \"(?i)\\\\b(adcx?|adox|add|sub|sbb|i?mul|i?div|inc|dec|neg|cmp)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.general-purpose.binary-arithmetic\"\n      }, {\n        \"match\": \"(?i)\\\\b(daa|das|aaa|aas|aam|aad)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.general-purpose.decimal-arithmetic\"\n      }, {\n        \"match\": \"(?i)\\\\b(and|x?or|not)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.general-purpose.logical\"\n      }, {\n        \"match\": \"(?i)\\\\b(s[ah][rl]|sh[rl]d|r[co][rl])\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.general-purpose.rotate\"\n      }, {\n        \"match\": \"(?i)\\\\b(set(n?[abceglopsz]|n?[abgl]e|p[eo]))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.general-purpose.bit-and-byte.set\"\n      }, {\n        \"match\": \"(?i)\\\\b(bt[crs]?|bs[fr]|test|crc32|popcnt)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.general-purpose.bit-and-byte.other\"\n      }, {\n        \"match\": \"(?i)\\\\b(jmp|jn?[abceglopsz]|jn?[abgl]e|jp[eo]|j[er]?cxz)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.general-purpose.control-transfer.jmp\"\n      }, {\n        \"match\": \"(?i)\\\\b(loop(n?[ez])?|call|ret|iret[dq]?|into?|bound|enter|leave)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.general-purpose.control-transfer.other\"\n      }, {\n        \"match\": \"(?i)\\\\b((mov|cmp|sca|lod|sto)(s[bdw]?)|rep(n?[ez])?)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.general-purpose.strings\"\n      }, {\n        \"match\": \"(?i)\\\\b((in|out)(s[bdw]?)?)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.general-purpose.io\"\n      }, {\n        \"match\": \"(?i)\\\\b((st|cl)[cdi]|cmc|[ls]ahf|(push|pop)f[dq]?)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.general-purpose.flag-control\"\n      }, {\n        \"match\": \"(?i)\\\\b(l[defgs]s)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.general-purpose.segment-registers\"\n      }, {\n        \"match\": \"(?i)\\\\b(lea|nop|ud2?|xlatb?|cpuid|movbe)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.general-purpose.misc\"\n      }, {\n        \"match\": \"(?i)\\\\b(cl(flush(opt)?|demote|wb)|pcommit)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.general-purpose.cache-control\"\n      }, {\n        \"match\": \"(?i)\\\\b(rdrand|rdseed)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.general-purpose.rng\"\n      }, {\n        \"match\": \"(?i)\\\\b(andn|bextr|bls(i|r|msk)|bzhi|pdep|pext|[lt]zcnt|(mul|ror|sar|shl|shr)x)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.general-purpose.bmi\"\n      }]\n    },\n    \"mnemonics-intel-isa-keylocker\": {\n      \"patterns\": [{\n        \"match\": \"(?i)\\\\b(aes(enc|dec)(wide)?(128|256)kl|encodekey(128|256)|loadiwkey)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.keylocker\"\n      }]\n    },\n    \"mnemonics-intel-isa-xeon-phi\": {\n      \"patterns\": [{\n        \"match\": \"(?i)\\\\bv(4fn?(madd)[ps]s|p4dpwssds?)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.xeon-phi\"\n      }]\n    },\n    \"mnemonics-intel-manual-listing\": {\n      \"patterns\": [{\n        \"match\": \"(?i)\\\\bcvtt?pd1pi\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.other.c\"\n      }, {\n        \"match\": \"(?i)\\\\bv?gf2p8(affine(inv)?q|mul)b\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.other.g\"\n      }, {\n        \"match\": \"(?i)\\\\bhreset\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.other.h\"\n      }, {\n        \"match\": \"(?i)\\\\bincssp[dq]\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.other.i\"\n      }, {\n        \"match\": \"(?i)\\\\bmovdir(i|64b)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.other.m\"\n      }, {\n        \"match\": \"(?i)\\\\bp((abs|(max|min)[su]?|mull|sra)q|config|twrite)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.other.p\"\n      }, {\n        \"match\": \"(?i)\\\\brd(pid|ssp[dq])\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.other.r\"\n      }, {\n        \"match\": \"(?i)\\\\bserialize\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.other.s\"\n      }, {\n        \"match\": \"(?i)\\\\btpause\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.other.t\"\n      }, {\n        \"match\": \"(?i)\\\\bu(monitor|mwait)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.other.u\"\n      }, {\n        \"match\": \"(?i)\\\\bvbroadcast[fi](32x[248]|64x[24])\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.other.vb\"\n      }, {\n        \"match\": \"(?i)\\\\bv(compressw|cvtne2?ps2bf16)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.other.vc\"\n      }, {\n        \"match\": \"(?i)\\\\bvdpbf16ps\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.other.vd\"\n      }, {\n        \"match\": \"(?i)\\\\bvextract[fi]32x8\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.other.ve\"\n      }, {\n        \"match\": \"(?i)\\\\bv(insert([fi]32x8|i(32|64)x4))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.other.vi\"\n      }, {\n        \"match\": \"(?i)\\\\bv(maskmov|(max|min)sh)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.other.vm\"\n      }, {\n        \"match\": \"(?i)\\\\bvp((2intersect|andn?)[dq]|absq)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.other.vpa\"\n      }, {\n        \"match\": \"(?i)\\\\bvpbroadcasti32x4\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.other.vpb\"\n      }, {\n        \"match\": \"(?i)\\\\bvpcompress[bw]\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.other.vpc\"\n      }, {\n        \"match\": \"(?i)\\\\bvp(dp(bu|ws)sds?)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.other.vpd\"\n      }, {\n        \"match\": \"(?i)\\\\b(vperm(b|t2[bw])|vp(expand[bw]|extrtd))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.other.vpe\"\n      }, {\n        \"match\": \"(?i)\\\\bvp(madd52[hl]uq|mov(d(2m|[bw])|q[bdw]|wb)|mpov[bdqw]2m|multishiftqb)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.other.vpm\"\n      }, {\n        \"match\": \"(?i)\\\\b(vpopcnt[bdqw]|vpor[dq])\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.other.vpo\"\n      }, {\n        \"match\": \"(?i)\\\\bvprorv[dq]\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.other.vpr\"\n      }, {\n        \"match\": \"(?i)\\\\bvp(sh[lr]dv?[dqw]|shufbitqmb|shufps)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.other.vps\"\n      }, {\n        \"match\": \"(?i)\\\\bvpternlog[dq]\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.other.vpt\"\n      }, {\n        \"match\": \"(?i)\\\\bvpxor[dq]\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.other.vpx\"\n      }, {\n        \"match\": \"(?i)\\\\bv(scalef[ps][dhs]|scatter[dq]p[ds])\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.other.vs\"\n      }, {\n        \"match\": \"(?i)\\\\b(wbnoinvd|wru?ss[dq])\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.other.w\"\n      }]\n    },\n    \"mnemonics-invalid\": {\n      \"patterns\": [{\n        \"include\": \"#mnemonics-invalid-amd-sse5\"\n      }]\n    },\n    \"mnemonics-invalid-amd-sse5\": {\n      \"patterns\": [{\n        \"match\": \"(?i)\\\\b(com[ps][ds]|pcomu?[bdqw])\\\\b\",\n        \"name\": \"invalid.keyword.operator.word.mnemonic.sse5.comparison\"\n      }, {\n        \"match\": \"(?i)\\\\b(cvtp(h2ps|s2ph)|frcz[ps][ds])\\\\b\",\n        \"name\": \"invalid.keyword.operator.word.mnemonic.sse5.conversion\"\n      }, {\n        \"match\": \"(?i)\\\\b(fn?m((add|sub)[ps][ds])|ph(addu?(b[dqw]|w[dq]|dq)|sub(bw|dq|wd))|pma(css?(d(d|q[hl])|w[dw])|dcss?wd))\\\\b\",\n        \"name\": \"invalid.keyword.operator.word.mnemonic.sse5.packed-arithmetic\"\n      }, {\n        \"match\": \"(?i)\\\\b(pcmov|permp[ds]|pperm|prot[bdqw]|psh[al][bdqw])\\\\b\",\n        \"name\": \"invalid.keyword.operator.word.mnemonic.sse5.simd-integer\"\n      }]\n    },\n    \"mnemonics-mmx\": {\n      \"patterns\": [{\n        \"match\": \"(?i)\\\\b(mov[dq])\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.mmx.data-transfer\"\n      }, {\n        \"match\": \"(?i)\\\\b(pack(ssdw|[su]swb)|punpck[hl](bw|dq|wd))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.mmx.conversion\"\n      }, {\n        \"match\": \"(?i)\\\\b(p(((add|sub)(d|(u?s)?[bw]))|maddwd|mul[lh]w))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.mmx.packed-arithmetic\"\n      }, {\n        \"match\": \"(?i)\\\\b(pcmp((eq|gt)[bdw]))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.mmx.comparison\"\n      }, {\n        \"match\": \"(?i)\\\\b(pandn?|px?or)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.mmx.logical\"\n      }, {\n        \"match\": \"(?i)\\\\b(ps([rl]l[dwq]|raw|rad))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.mmx.shift-and-rotate\"\n      }, {\n        \"match\": \"(?i)\\\\b(emms)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.mmx.state-management\"\n      }]\n    },\n    \"mnemonics-mpx\": {\n      \"patterns\": [{\n        \"match\": \"(?i)\\\\b(bnd(mk|c[lnu]|mov|ldx|stx))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.mpx\"\n      }]\n    },\n    \"mnemonics-pseudo-ops\": {\n      \"patterns\": [{\n        \"match\": \"(?i)\\\\b(cmp(n?(eq|lt|le)|(un)?ord)[ps][ds])\\\\b\",\n        \"name\": \"keyword.operator.word.pseudo-mnemonic.sse2.compare\"\n      }, {\n        \"match\": \"(?i)\\\\b(v?pclmul([hl]q[hl]q|[hl]qh)dq)\\\\b\",\n        \"name\": \"keyword.operator.word.pseudo-mnemonic.avx.promoted.aes\"\n      }, {\n        \"match\": \"(?i)\\\\b(vcmp(eq(_(os|uq|us))?|neq(_(oq|os|us))?|[gl][et](_oq)?|n[gl][et](_uq)?|(un)?ord(_s)?|false(_os)?|true(_us)?)[ps][ds])\\\\b\",\n        \"name\": \"keyword.operator.word.pseudo-mnemonic.avx.promoted.comparison\"\n      }, {\n        \"match\": \"(?i)\\\\bvp(cmpn?(eq|le|lt))\\\\b\",\n        \"name\": \"keyword.operator.word.pseudo-mnemonic.avx512.compare\"\n      }, {\n        \"match\": \"(?i)\\\\b(vpcom(n?eq|[gl][et]|false|true)(b|uw))\\\\b\",\n        \"name\": \"keyword.operator.word.pseudo-mnemonic.supplemental.amd.xop.simd\"\n      }]\n    },\n    \"mnemonics-sgx\": {\n      \"patterns\": [{\n        \"match\": \"(?i)\\\\bencl[su]\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.sgx\"\n      }, {\n        \"match\": \"(?i)\\\\be(add|block|create|dbg(rd|wr)|extend|init|ld[bu]|pa|remove|track|wb)\\\\b\",\n        \"name\": \"support.constant.sgx1.supervisor\"\n      }, {\n        \"match\": \"(?i)\\\\be(add|block|create|dbg(rd|wr)|extend|init|ld[bu]|pa|remove|track|wb)\\\\b\",\n        \"name\": \"support.constant.sgx1.supervisor\"\n      }, {\n        \"match\": \"(?i)\\\\be(enter|exit|getkey|report|resume)\\\\b\",\n        \"name\": \"support.constant.sgx1.user\"\n      }, {\n        \"match\": \"(?i)\\\\be(aug|mod(pr|t))\\\\b\",\n        \"name\": \"support.constant.sgx2.supervisor\"\n      }, {\n        \"match\": \"(?i)\\\\be(accept(copy)?|modpe)\\\\b\",\n        \"name\": \"support.constant.sgx2.user\"\n      }]\n    },\n    \"mnemonics-sha\": {\n      \"patterns\": [{\n        \"match\": \"(?i)\\\\b(sha(1rnds4|256rnds2|1nexte|(1|256)msg[12]))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.sha\"\n      }]\n    },\n    \"mnemonics-smx\": {\n      \"patterns\": [{\n        \"match\": \"(?i)\\\\b(getsec)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.smx.getsec\"\n      }, {\n        \"match\": \"(?i)\\\\b(capabilities|enteraccs|exitac|senter|sexit|parameters|smctrl|wakeup)\\\\b\",\n        \"name\": \"support.constant.smx\"\n      }]\n    },\n    \"mnemonics-sse\": {\n      \"patterns\": [{\n        \"match\": \"(?i)\\\\b(mov(([ahlu]|hl|lh|msk)ps|ss))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.sse.data-transfer\"\n      }, {\n        \"match\": \"(?i)\\\\b((add|div|max|min|mul|rcp|r?sqrt|sub)[ps]s)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.sse.packed-arithmetic\"\n      }, {\n        \"match\": \"(?i)\\\\b(cmp[ps]s|u?comiss)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.sse.comparison\"\n      }, {\n        \"match\": \"(?i)\\\\b((andn?|x?or)ps)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.sse.logical\"\n      }, {\n        \"match\": \"(?i)\\\\b((shuf|unpck[hl])ps)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.sse.shuffle-and-unpack\"\n      }, {\n        \"match\": \"(?i)\\\\b(cvt(pi2ps|si2ss|ps2pi|tps2pi|ss2si|tss2si))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.sse.conversion\"\n      }, {\n        \"match\": \"(?i)\\\\b((ld|st)mxcsr)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.sse.state-management\"\n      }, {\n        \"match\": \"(?i)\\\\b(p(avg[bw]|extrw|insrw|(max|min)(sw|ub)|sadbw|shufw|mulhuw|movmskb))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.sse.simd-integer\"\n      }, {\n        \"match\": \"(?i)\\\\b(maskmovq|movntps|sfence)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.sse.cacheability-control\"\n      }, {\n        \"match\": \"(?i)\\\\b(prefetch(nta|t[0-2]|w(t1)?))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.sse.prefetch\"\n      }]\n    },\n    \"mnemonics-sse2\": {\n      \"patterns\": [{\n        \"match\": \"(?i)\\\\b(mov([auhl]|msk)pd)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.sse2.data-transfer\"\n      }, {\n        \"match\": \"(?i)\\\\b((add|div|max|min|mul|sub|sqrt)[ps]d)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.sse2.packed-arithmetic\"\n      }, {\n        \"match\": \"(?i)\\\\b((andn?|x?or)pd)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.sse2.logical\"\n      }, {\n        \"match\": \"(?i)\\\\b((cmpp|u?comis)d)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.sse2.compare\"\n      }, {\n        \"match\": \"(?i)\\\\b((shuf|unpck[hl])pd)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.sse2.shuffle-and-unpack\"\n      }, {\n        \"match\": \"(?i)\\\\b(cvt(dq2pd|pi2pd|ps2pd|pd2ps|si2sd|sd2ss|ss2sd|t?(pd2dq|pd2pi|sd2si)))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.sse2.conversion\"\n      }, {\n        \"match\": \"(?i)\\\\b(cvt(dq2ps|ps2dq|tps2dq))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.sse2.packed-floating-point\"\n      }, {\n        \"match\": \"(?i)\\\\b(mov(dq[au]|q2dq|dq2q))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.sse2.simd-integer.mov\"\n      }, {\n        \"match\": \"(?i)\\\\b(p((add|sub|(s[lr]l|mulu|unpck[hl]q)d)q|shuf(d|[hl]w)))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.sse2.simd-integer.other\"\n      }, {\n        \"match\": \"(?i)\\\\b([lm]fence|pause|maskmovdqu|movnt(dq|i|pd))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.sse2.cacheability-control\"\n      }]\n    },\n    \"mnemonics-sse3\": {\n      \"patterns\": [{\n        \"match\": \"(?i)\\\\b(fisttp|lddqu|(addsub|h(add|sub))p[sd]|mov(sh|sl|d)dup|monitor|mwait)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.sse3\"\n      }, {\n        \"match\": \"(?i)\\\\b(ph(add|sub)(s?w|d))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.sse3.supplimental.horizontal-packed-arithmetic\"\n      }, {\n        \"match\": \"(?i)\\\\b(p((abs|sign)[bdw]|maddubsw|mulhrsw|shufb|alignr))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.sse3.supplimental.other\"\n      }]\n    },\n    \"mnemonics-sse4\": {\n      \"patterns\": [{\n        \"match\": \"(?i)\\\\b(pmul(ld|dq)|dpp[ds])\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.sse4.1.arithmetic\"\n      }, {\n        \"match\": \"(?i)\\\\b(movntdqa)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.sse4.1.load-hint\"\n      }, {\n        \"match\": \"(?i)\\\\b(blendv?p[ds]|pblend(vb|w))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.sse4.1.packed-blending\"\n      }, {\n        \"match\": \"(?i)\\\\b(p(min|max)(u[dw]|s[bd]))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.sse4.1.packed-integer\"\n      }, {\n        \"match\": \"(?i)\\\\b(round[ps][sd])\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.sse4.1.packed-floating-point\"\n      }, {\n        \"match\": \"(?i)\\\\b((extract|insert)ps|p((ins|ext)(r[bdq])))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.sse4.1.insertion-and-extraction\"\n      }, {\n        \"match\": \"(?i)\\\\b(pmov([sz]x(b[dqw]|dq|wd|wq)))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.sse4.1.conversion\"\n      }, {\n        \"match\": \"(?i)\\\\b(mpsadbw|phminposuw|ptest|pcmpeqq|packusdw)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.sse4.1.other\"\n      }, {\n        \"match\": \"(?i)\\\\b(pcmp([ei]str[im]|gtq))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.sse4.2\"\n      }]\n    },\n    \"mnemonics-supplemental-amd\": {\n      \"patterns\": [{\n        \"match\": \"(?i)\\\\b(bl([cs](fill|ic?|msk)|cs)|t1mskc|tzmsk)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.supplemental.amd.general-purpose\"\n      }, {\n        \"match\": \"(?i)\\\\b(clgi|int3|invlpga|iretw|skinit|stgi|vm(load|mcall|run|save)|monitorx|mwaitx)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.supplemental.amd.system\"\n      }, {\n        \"match\": \"(?i)\\\\b([ls]lwpcb|lwp(ins|val))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.supplemental.amd.profiling\"\n      }, {\n        \"match\": \"(?i)\\\\b(movnts[ds])\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.supplemental.amd.memory-management\"\n      }, {\n        \"match\": \"(?i)\\\\b(prefetch|clzero)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.supplemental.amd.cache-management\"\n      }, {\n        \"match\": \"(?i)\\\\b((extr|insert)q)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.supplemental.amd.sse4.a\"\n      }, {\n        \"match\": \"(?i)\\\\b(vfn?m((add|sub)[ps][ds])|vfm((addsub|subadd)p[ds]))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.supplemental.amd.fma4\"\n      }, {\n        \"match\": \"(?i)\\\\b(vp(cmov|(comu?|rot|sh[al])[bdqw]|mac(s?s(d(d|q[hl])|w[dw]))|madcss?wd|perm))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.supplemental.amd.xop.simd\"\n      }, {\n        \"match\": \"(?i)\\\\b(vph(addu?(b[dqw]|w[dq]|dq)|sub(bw|dq|wd)))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.supplemental.amd.xop.simd-horizontal\"\n      }, {\n        \"match\": \"(?i)\\\\b(vfrcz[ps][ds]|vpermil2p[ds])\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.supplemental.amd.xop.other\"\n      }, {\n        \"match\": \"(?i)\\\\b(femms)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.supplemental.amd.3dnow\"\n      }, {\n        \"match\": \"(?i)\\\\b(p(avgusb|(f2i|i2f)[dw]|mulhrw|swapd)|pf((p?n)?acc|add|max|min|mul|rcp(it[12])?|rsqit1|rsqrt|subr?))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.supplemental.amd.3dnow.simd\"\n      }, {\n        \"match\": \"(?i)\\\\b(pfcmp(eq|ge|gt))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.supplemental.amd.3dnow.comparison\"\n      }]\n    },\n    \"mnemonics-supplemental-cyrix\": {\n      \"patterns\": [{\n        \"match\": \"(?i)\\\\b((sv|rs)dc|(wr|rd)shr|paddsiw)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.supplemental.cyrix\"\n      }]\n    },\n    \"mnemonics-supplemental-via\": {\n      \"patterns\": [{\n        \"match\": \"(?i)\\\\b(montmul)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.supplemental.via\"\n      }, {\n        \"match\": \"(?i)\\\\b(x(store(rng)?|crypt(ecb|cbc|ctr|cfb|ofb)|sha(1|256)))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.supplemental.via.padlock\"\n      }]\n    },\n    \"mnemonics-system\": {\n      \"patterns\": [{\n        \"match\": \"(?i)\\\\b((cl|st)ac|[ls]([gli]dt|tr|msw)|clts|arpl|lar|lsl|ver[rw]|inv(d|lpg|pcid)|wbinvd)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.system\"\n      }, {\n        \"match\": \"(?i)\\\\b(lock|hlt|rsm|(rd|wr)(msr|pkru|[fg]sbase)|rd(pmc|tscp?)|sys(enter|exit))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.system\"\n      }, {\n        \"match\": \"(?i)\\\\b(x((save(c|opt|s)?|rstors?)(64)?|[gs]etbv))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.system\"\n      }]\n    },\n    \"mnemonics-tsx\": {\n      \"patterns\": [{\n        \"match\": \"(?i)\\\\b(x(abort|begin|end|test|(res|sus)ldtrk))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.tsx\"\n      }]\n    },\n    \"mnemonics-uirq\": {\n      \"patterns\": [{\n        \"match\": \"(?i)\\\\b((cl|st|test)ui|senduipi|uiret)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.uirq\"\n      }]\n    },\n    \"mnemonics-undocumented\": {\n      \"patterns\": [{\n        \"match\": \"(?i)\\\\b(ret[nf]|icebp|int1|int03|smi|ud1)\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.undocumented\"\n      }]\n    },\n    \"mnemonics-vmx\": {\n      \"patterns\": [{\n        \"match\": \"(?i)\\\\b(vm(ptr(ld|st)|clear|read|write|launch|resume|xo(ff|n)|call|func)|inv(ept|vpid))\\\\b\",\n        \"name\": \"keyword.operator.word.mnemonic.vmx\"\n      }]\n    },\n    \"preprocessor\": {\n      \"patterns\": [{\n        \"begin\": \"^\\\\s*[#%]\\\\s*(error|warning)\\\\b\",\n        \"captures\": {\n          \"1\": {\n            \"name\": \"keyword.control.import.error.c\"\n          }\n        },\n        \"end\": \"$\",\n        \"name\": \"meta.preprocessor.diagnostic.c\",\n        \"patterns\": [{\n          \"match\": \"(?>\\\\\\\\\\\\s*\\\\n)\",\n          \"name\": \"punctuation.separator.continuation.c\"\n        }]\n      }, {\n        \"begin\": \"^\\\\s*[#%]\\\\s*(include|import)\\\\b\\\\s+\",\n        \"captures\": {\n          \"1\": {\n            \"name\": \"keyword.control.import.include.c\"\n          }\n        },\n        \"end\": \"(?=(?://|/\\\\*))|$\",\n        \"name\": \"meta.preprocessor.c.include\",\n        \"patterns\": [{\n          \"match\": \"(?>\\\\\\\\\\\\s*\\\\n)\",\n          \"name\": \"punctuation.separator.continuation.c\"\n        }, {\n          \"begin\": '\"',\n          \"beginCaptures\": {\n            \"0\": {\n              \"name\": \"punctuation.definition.string.begin.c\"\n            }\n          },\n          \"end\": '\"',\n          \"endCaptures\": {\n            \"0\": {\n              \"name\": \"punctuation.definition.string.end.c\"\n            }\n          },\n          \"name\": \"string.quoted.double.include.c\"\n        }, {\n          \"begin\": \"<\",\n          \"beginCaptures\": {\n            \"0\": {\n              \"name\": \"punctuation.definition.string.begin.c\"\n            }\n          },\n          \"end\": \">\",\n          \"endCaptures\": {\n            \"0\": {\n              \"name\": \"punctuation.definition.string.end.c\"\n            }\n          },\n          \"name\": \"string.quoted.other.lt-gt.include.c\"\n        }]\n      }, {\n        \"begin\": \"^\\\\s*[%#]\\\\s*(i?x?define|defined|elif(def)?|else|i[fs]n?(?:def|macro|ctx|idni?|id|num|str|token|empty|env)?|line|(i|end|uni?)?macro|pragma|endif)\\\\b\",\n        \"captures\": {\n          \"1\": {\n            \"name\": \"keyword.control.import.c\"\n          }\n        },\n        \"end\": \"(?=(?://|/\\\\*))|$\",\n        \"name\": \"meta.preprocessor.c\",\n        \"patterns\": [{\n          \"match\": \"(?>\\\\\\\\\\\\s*\\\\n)\",\n          \"name\": \"punctuation.separator.continuation.c\"\n        }, {\n          \"include\": \"#preprocessor-functions\"\n        }]\n      }, {\n        \"begin\": \"^\\\\s*[#%]\\\\s*(assign|strlen|substr|(end|exit)?rep|push|pop|rotate|use|ifusing|ifusable|def(?:ailas|str|tok)|undef(?:alias)?)\\\\b\",\n        \"captures\": {\n          \"1\": {\n            \"name\": \"keyword.control\"\n          }\n        },\n        \"end\": \"$\",\n        \"name\": \"meta.preprocessor.nasm\",\n        \"patterns\": [{\n          \"match\": \"(?>\\\\\\\\\\\\s*\\\\n)\",\n          \"name\": \"punctuation.separator.continuation.c\"\n        }, {\n          \"include\": \"#preprocessor-functions\"\n        }]\n      }]\n    },\n    \"preprocessor-functions\": {\n      \"patterns\": [{\n        \"begin\": \"((%)(?:(abs|cond|count|eval|isn?(?:def|macro|ctx|idni?|id|num|str|token|empty|env)?|num|sel|str(?:cat|len)?|substr|tok)\\\\s*(\\\\()))\",\n        \"captures\": {\n          \"3\": {\n            \"name\": \"support.function.preprocessor.asm.x86_64\"\n          }\n        },\n        \"end\": \"(\\\\))|$\",\n        \"name\": \"meta.preprocessor.function.asm.x86_64\",\n        \"patterns\": [{\n          \"include\": \"#preprocessor-functions\"\n        }]\n      }]\n    },\n    \"registers\": {\n      \"patterns\": [{\n        \"match\": \"(?i)\\\\b(?:[abcd][hl]|[er]?[abcd]x|[er]?(?:di|si|bp|sp)|dil|sil|bpl|spl|r(?:8|9|1[0-5])[bdlw]?)\\\\b\",\n        \"name\": \"constant.language.register.general-purpose.asm.x86_64\"\n      }, {\n        \"match\": \"(?i)\\\\b(?:[cdefgs]s)\\\\b\",\n        \"name\": \"constant.language.register.segment.asm.x86_64\"\n      }, {\n        \"match\": \"(?i)\\\\b(?:[er]?flags)\\\\b\",\n        \"name\": \"constant.language.register.flags.asm.x86_64\"\n      }, {\n        \"match\": \"(?i)\\\\b(?:[er]?ip)\\\\b\",\n        \"name\": \"constant.language.register.instruction-pointer.asm.x86_64\"\n      }, {\n        \"match\": \"(?i)\\\\b(?:cr[02-4])\\\\b\",\n        \"name\": \"constant.language.register.control.asm.x86_64\"\n      }, {\n        \"match\": \"(?i)\\\\b(?:(?:mm|st|fpr)[0-7])\\\\b\",\n        \"name\": \"constant.language.register.mmx.asm.x86_64\"\n      }, {\n        \"match\": \"(?i)\\\\b(?:[xy]mm(?:[0-9]|1[0-5])|mxcsr)\\\\b\",\n        \"name\": \"constant.language.register.sse_avx.asm.x86_64\"\n      }, {\n        \"match\": \"(?i)\\\\b(?:zmm(?:[12]?[0-9]|30|31))\\\\b\",\n        \"name\": \"constant.language.register.avx512.asm.x86_64\"\n      }, {\n        \"match\": \"(?i)\\\\b(?:bnd(?:[0-3]|cfg[su]|status))\\\\b\",\n        \"name\": \"constant.language.register.memory-protection.asm.x86_64\"\n      }, {\n        \"match\": \"(?i)\\\\b(?:(?:[gil]dt)r?|tr)\\\\b\",\n        \"name\": \"constant.language.register.system-table-pointer.asm.x86_64\"\n      }, {\n        \"match\": \"(?i)\\\\b(?:dr[0-367])\\\\b\",\n        \"name\": \"constant.language.register.debug.asm.x86_64\"\n      }, {\n        \"match\": \"(?i)\\\\b(?:cr8|dr(?:[89]|1[0-5])|efer|tpr|syscfg)\\\\b\",\n        \"name\": \"constant.language.register.amd.asm.x86_64\"\n      }, {\n        \"match\": \"(?i)\\\\b(?:db[0-367]|t[67]|tr[3-7]|st)\\\\b\",\n        \"name\": \"invalid.deprecated.constant.language.register.asm.x86_64\"\n      }, {\n        \"match\": \"(?i)\\\\b[xy]mm(?:1[6-9]|2[0-9]|3[01])\\\\b\",\n        \"name\": \"constant.language.register.general-purpose.alias.asm.x86_64\"\n      }]\n    },\n    \"strings\": {\n      \"patterns\": [{\n        \"begin\": '\"',\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.begin.asm\"\n          }\n        },\n        \"end\": '\"',\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.end.asm\"\n          }\n        },\n        \"name\": \"string.quoted.double.asm\",\n        \"patterns\": [{\n          \"include\": \"#string_escaped_char\"\n        }, {\n          \"include\": \"#string_placeholder\"\n        }]\n      }, {\n        \"begin\": \"'\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.begin.asm\"\n          }\n        },\n        \"end\": \"'\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.end.asm\"\n          }\n        },\n        \"name\": \"string.quoted.single.asm\",\n        \"patterns\": [{\n          \"include\": \"#string_escaped_char\"\n        }, {\n          \"include\": \"#string_placeholder\"\n        }]\n      }, {\n        \"begin\": \"`\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.begin.asm\"\n          }\n        },\n        \"end\": \"`\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.end.asm\"\n          }\n        },\n        \"name\": \"string.quoted.backquote.asm\",\n        \"patterns\": [{\n          \"include\": \"#string_escaped_char\"\n        }, {\n          \"include\": \"#string_placeholder\"\n        }]\n      }]\n    },\n    \"support\": {\n      \"patterns\": [{\n        \"match\": \"(?i)\\\\b(?:s?byte|(?:[doqtyz]|dq|s[dq]?)?word|(?:d|res)[bdoqtwyz]|ddq)\\\\b\",\n        \"name\": \"storage.type.asm.x86_64\"\n      }, {\n        \"match\": \"(?i)\\\\b(?:incbin|equ|times|dup)\\\\b\",\n        \"name\": \"support.function.asm.x86_64\"\n      }, {\n        \"match\": \"(?i)\\\\b(?:strict|nosplit|near|far|abs|rel)\\\\b\",\n        \"name\": \"storage.modifier.asm.x86_64\"\n      }, {\n        \"match\": \"(?i)\\\\b(?:[ao](?:16|32|64))\\\\b\",\n        \"name\": \"storage.modifier.prefix.asm.x86_64\"\n      }, {\n        \"match\": \"(?i)\\\\b(?:rep(?:n?[ez])?|lock|xacquire|xrelease|(?:no)?bnd)\\\\b\",\n        \"name\": \"storage.modifier.prefix.asm.x86_64\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"storage.modifier.prefix.vex.asm.x86_64\"\n          }\n        },\n        \"match\": \"{(vex[23]?|evex|rex)}\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"storage.modifier.opmask.asm.x86_64\"\n          }\n        },\n        \"match\": \"{(k[1-7])}\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"storage.modifier.precision.asm.x86_64\"\n          }\n        },\n        \"match\": \"{(1to(?:8|16))}\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"storage.modifier.rounding.asm.x86_64\"\n          }\n        },\n        \"match\": \"{(z|(?:r[nudz]-)?sae)}\"\n      }, {\n        \"match\": \"\\\\.\\\\.(?:start|imagebase|tlvp|got(?:pc(?:rel)?|(?:tp)?off)?|plt|sym|tlsie)\\\\b\",\n        \"name\": \"support.constant.asm.x86_64\"\n      }, {\n        \"match\": \"\\\\b__\\\\?(?:utf(?:(?:16|32)(?:[lb]e)?)|float(?:8|16|32|64|80[me]|128[lh])|bfloat16|Infinity|[QS]?NaN)\\\\?__\\\\b\",\n        \"name\": \"support.function.asm.x86_64\"\n      }, {\n        \"match\": \"\\\\b__(?:utf(?:(?:16|32)(?:[lb]e)?)|float(?:8|16|32|64|80[me]|128[lh])|bfloat16|Infinity|[QS]?NaN)__\\\\b\",\n        \"name\": \"support.function.legacy.asm.x86_64\"\n      }, {\n        \"match\": \"\\\\b__\\\\?NASM_(?:MAJOR|(?:SUB)?MINOR|SNAPSHOT|VER(?:SION_ID)?)\\\\?__\\\\b\",\n        \"name\": \"support.function.asm.x86_64\"\n      }, {\n        \"match\": \"\\\\b___\\\\?NASM_PATCHLEVEL\\\\?__\\\\b\",\n        \"name\": \"support.function.asm.x86_64\"\n      }, {\n        \"match\": \"\\\\b__\\\\?(?:FILE|LINE|BITS|OUTPUT_FORMAT|DEBUG_FORMAT)\\\\?__\\\\b\",\n        \"name\": \"support.function.asm.x86_64\"\n      }, {\n        \"match\": \"\\\\b__\\\\?(?:(?:UTC_)?(?:DATE|TIME)(?:_NUM)?|POSIX_TIME)\\\\?__\\\\b\",\n        \"name\": \"support.function.asm.x86_64\"\n      }, {\n        \"match\": \"\\\\b__\\\\?USE_(?:\\\\w+)\\\\?__\\\\b\",\n        \"name\": \"support.function.asm.x86_64\"\n      }, {\n        \"match\": \"\\\\b__\\\\?PASS\\\\?__\\\\b\",\n        \"name\": \"invalid.deprecated.support.constant.altreg.asm.x86_64\"\n      }, {\n        \"match\": \"\\\\b__\\\\?ALIGNMODE\\\\?__\\\\b\",\n        \"name\": \"support.constant.smartalign.asm.x86_64\"\n      }, {\n        \"match\": \"\\\\b__\\\\?ALIGN_(\\\\w+)\\\\?__\\\\b\",\n        \"name\": \"support.function.smartalign.asm.x86_64\"\n      }, {\n        \"match\": \"\\\\b__NASM_(?:MAJOR|(?:SUB)?MINOR|SNAPSHOT|VER(?:SION_ID)?)__\\\\b\",\n        \"name\": \"support.function.asm.x86_64\"\n      }, {\n        \"match\": \"\\\\b___NASM_PATCHLEVEL__\\\\b\",\n        \"name\": \"support.function.asm.x86_64\"\n      }, {\n        \"match\": \"\\\\b__(?:FILE|LINE|BITS|OUTPUT_FORMAT|DEBUG_FORMAT)__\\\\b\",\n        \"name\": \"support.function.asm.x86_64\"\n      }, {\n        \"match\": \"\\\\b__(?:(?:UTC_)?(?:DATE|TIME)(?:_NUM)?|POSIX_TIME)__\\\\b\",\n        \"name\": \"support.function.asm.x86_64\"\n      }, {\n        \"match\": \"\\\\b__USE_(?:\\\\w+)__\\\\b\",\n        \"name\": \"support.function.asm.x86_64\"\n      }, {\n        \"match\": \"\\\\b__PASS__\\\\b\",\n        \"name\": \"invalid.deprecated.support.constant.altreg.asm.x86_64\"\n      }, {\n        \"match\": \"\\\\b__ALIGNMODE__\\\\b\",\n        \"name\": \"support.constant.smartalign.asm.x86_64\"\n      }, {\n        \"match\": \"\\\\b__ALIGN_(\\\\w+)__\\\\b\",\n        \"name\": \"support.function.smartalign.asm.x86_64\"\n      }, {\n        \"match\": \"\\\\b(?:Inf|[QS]?NaN)\\\\b\",\n        \"name\": \"support.constant.fp.asm.x86_64\"\n      }, {\n        \"match\": \"\\\\b(?:float(?:8|16|32|64|80[me]|128[lh]))\\\\b\",\n        \"name\": \"support.function.fp.asm.x86_64\"\n      }, {\n        \"match\": \"(?i)\\\\bilog2(?:[ewfc]|[fc]w)?\\\\b\",\n        \"name\": \"support.function.ifunc.asm.x86_64\"\n      }]\n    }\n  },\n  \"scopeName\": \"source.asm.x86_64\"\n});\nvar asm = [lang];\nexport { asm as default };"],
  "mappings": "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",
  "names": []
}
