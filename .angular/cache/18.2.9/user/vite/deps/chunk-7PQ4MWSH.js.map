{
  "version": 3,
  "sources": ["../../../../../../node_modules/shiki/dist/langs/csharp.mjs"],
  "sourcesContent": ["const lang = Object.freeze({\n  \"displayName\": \"C#\",\n  \"name\": \"csharp\",\n  \"patterns\": [{\n    \"include\": \"#preprocessor\"\n  }, {\n    \"include\": \"#comment\"\n  }, {\n    \"include\": \"#directives\"\n  }, {\n    \"include\": \"#declarations\"\n  }, {\n    \"include\": \"#script-top-level\"\n  }],\n  \"repository\": {\n    \"accessor-getter\": {\n      \"patterns\": [{\n        \"begin\": \"\\\\{\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.curlybrace.open.cs\"\n          }\n        },\n        \"contentName\": \"meta.accessor.getter.cs\",\n        \"end\": \"\\\\}\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.curlybrace.close.cs\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#statement\"\n        }]\n      }, {\n        \"include\": \"#accessor-getter-expression\"\n      }, {\n        \"include\": \"#punctuation-semicolon\"\n      }]\n    },\n    \"accessor-getter-expression\": {\n      \"begin\": \"=>\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"keyword.operator.arrow.cs\"\n        }\n      },\n      \"contentName\": \"meta.accessor.getter.cs\",\n      \"end\": \"(?=;|\\\\})\",\n      \"patterns\": [{\n        \"include\": \"#ref-modifier\"\n      }, {\n        \"include\": \"#expression\"\n      }]\n    },\n    \"accessor-setter\": {\n      \"patterns\": [{\n        \"begin\": \"\\\\{\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.curlybrace.open.cs\"\n          }\n        },\n        \"contentName\": \"meta.accessor.setter.cs\",\n        \"end\": \"\\\\}\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.curlybrace.close.cs\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#statement\"\n        }]\n      }, {\n        \"begin\": \"=>\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"keyword.operator.arrow.cs\"\n          }\n        },\n        \"contentName\": \"meta.accessor.setter.cs\",\n        \"end\": \"(?=;|\\\\})\",\n        \"patterns\": [{\n          \"include\": \"#ref-modifier\"\n        }, {\n          \"include\": \"#expression\"\n        }]\n      }, {\n        \"include\": \"#punctuation-semicolon\"\n      }]\n    },\n    \"anonymous-method-expression\": {\n      \"patterns\": [{\n        \"begin\": \"(?x)\\n((?:\\\\b(?:async|static)\\\\b\\\\s*)*)\\n(?:\\n(@?[_[:alpha:]][_[:alnum:]]*)\\\\b|\\n(\\\\()\\n(?<tuple>(?:[^()]|\\\\(\\\\g<tuple>\\\\))*)\\n(\\\\))\\n)\\\\s*\\n(=>)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"patterns\": [{\n              \"match\": \"async|static\",\n              \"name\": \"storage.modifier.$0.cs\"\n            }]\n          },\n          \"2\": {\n            \"name\": \"entity.name.variable.parameter.cs\"\n          },\n          \"3\": {\n            \"name\": \"punctuation.parenthesis.open.cs\"\n          },\n          \"4\": {\n            \"patterns\": [{\n              \"include\": \"#comment\"\n            }, {\n              \"include\": \"#explicit-anonymous-function-parameter\"\n            }, {\n              \"include\": \"#implicit-anonymous-function-parameter\"\n            }, {\n              \"include\": \"#default-argument\"\n            }, {\n              \"include\": \"#punctuation-comma\"\n            }]\n          },\n          \"5\": {\n            \"name\": \"punctuation.parenthesis.close.cs\"\n          },\n          \"6\": {\n            \"name\": \"keyword.operator.arrow.cs\"\n          }\n        },\n        \"end\": \"(?=[,;)}])\",\n        \"patterns\": [{\n          \"include\": \"#intrusive\"\n        }, {\n          \"begin\": \"(?={)\",\n          \"end\": \"(?=[,;)}])\",\n          \"patterns\": [{\n            \"include\": \"#block\"\n          }, {\n            \"include\": \"#intrusive\"\n          }]\n        }, {\n          \"begin\": \"\\\\b(ref)\\\\b|(?=\\\\S)\",\n          \"beginCaptures\": {\n            \"1\": {\n              \"name\": \"storage.modifier.ref.cs\"\n            }\n          },\n          \"end\": \"(?=[,;)}])\",\n          \"patterns\": [{\n            \"include\": \"#expression\"\n          }]\n        }]\n      }, {\n        \"begin\": \"(?x)\\n((?:\\\\b(?:async|static)\\\\b\\\\s*)*)\\n\\\\b(delegate)\\\\b\\\\s*\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"patterns\": [{\n              \"match\": \"async|static\",\n              \"name\": \"storage.modifier.$0.cs\"\n            }]\n          },\n          \"2\": {\n            \"name\": \"storage.type.delegate.cs\"\n          }\n        },\n        \"end\": \"(?<=})|(?=[,;)}])\",\n        \"patterns\": [{\n          \"include\": \"#intrusive\"\n        }, {\n          \"begin\": \"\\\\(\",\n          \"beginCaptures\": {\n            \"0\": {\n              \"name\": \"punctuation.parenthesis.open.cs\"\n            }\n          },\n          \"end\": \"\\\\)\",\n          \"endCaptures\": {\n            \"0\": {\n              \"name\": \"punctuation.parenthesis.close.cs\"\n            }\n          },\n          \"patterns\": [{\n            \"include\": \"#intrusive\"\n          }, {\n            \"include\": \"#explicit-anonymous-function-parameter\"\n          }, {\n            \"include\": \"#punctuation-comma\"\n          }]\n        }, {\n          \"include\": \"#block\"\n        }]\n      }]\n    },\n    \"anonymous-object-creation-expression\": {\n      \"begin\": \"\\\\b(new)\\\\b\\\\s*(?=\\\\{|//|/\\\\*|$)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.operator.expression.new.cs\"\n        }\n      },\n      \"end\": \"(?<=\\\\})\",\n      \"patterns\": [{\n        \"include\": \"#comment\"\n      }, {\n        \"include\": \"#initializer-expression\"\n      }]\n    },\n    \"argument\": {\n      \"patterns\": [{\n        \"match\": \"\\\\b(ref|in)\\\\b\",\n        \"name\": \"storage.modifier.$1.cs\"\n      }, {\n        \"begin\": \"\\\\b(out)\\\\b\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"storage.modifier.out.cs\"\n          }\n        },\n        \"end\": \"(?=,|\\\\)|\\\\])\",\n        \"patterns\": [{\n          \"include\": \"#declaration-expression-local\"\n        }, {\n          \"include\": \"#expression\"\n        }]\n      }, {\n        \"include\": \"#expression\"\n      }]\n    },\n    \"argument-list\": {\n      \"begin\": \"\\\\(\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.parenthesis.open.cs\"\n        }\n      },\n      \"end\": \"\\\\)\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.parenthesis.close.cs\"\n        }\n      },\n      \"patterns\": [{\n        \"include\": \"#named-argument\"\n      }, {\n        \"include\": \"#argument\"\n      }, {\n        \"include\": \"#punctuation-comma\"\n      }]\n    },\n    \"array-creation-expression\": {\n      \"begin\": \"(?x)\\n\\\\b(new|stackalloc)\\\\b\\\\s*\\n(?<type_name>\\n(?:\\n(?:\\n(?:(?<identifier>@?[_[:alpha:]][_[:alnum:]]*)\\\\s*\\\\:\\\\:\\\\s*)?\\n(?<name_and_type_args>\\n\\\\g<identifier>\\\\s*\\n(?<type_args>\\\\s*<(?:[^<>]|\\\\g<type_args>)+>\\\\s*)?\\n)\\n(?:\\\\s*\\\\.\\\\s*\\\\g<name_and_type_args>)* |\\n(?<tuple>\\\\s*\\\\((?:[^\\\\(\\\\)]|\\\\g<tuple>)+\\\\))\\n)\\n(?:\\\\s*\\\\?\\\\s*)?\\n(?:\\\\s*\\n\\\\[\\n(?:\\\\s*,\\\\s*)*\\n\\\\]\\n\\\\s*\\n(?:\\\\?)?\\n\\\\s*\\n)*\\n)\\n)?\\\\s*\\n(?=\\\\[)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.operator.expression.$1.cs\"\n        },\n        \"2\": {\n          \"patterns\": [{\n            \"include\": \"#type\"\n          }]\n        }\n      },\n      \"end\": \"(?<=\\\\])\",\n      \"patterns\": [{\n        \"include\": \"#bracketed-argument-list\"\n      }]\n    },\n    \"as-expression\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"keyword.operator.expression.as.cs\"\n        },\n        \"2\": {\n          \"patterns\": [{\n            \"include\": \"#type\"\n          }]\n        }\n      },\n      \"match\": \"(?x)\\n(?<!\\\\.)\\\\b(as)\\\\b\\\\s*\\n(?<type_name>\\n(?:\\n(?:\\n(?:(?<identifier>@?[_[:alpha:]][_[:alnum:]]*)\\\\s*\\\\:\\\\:\\\\s*)?\\n(?<name_and_type_args>\\n\\\\g<identifier>\\\\s*\\n(?<type_args>\\\\s*<(?:[^<>]|\\\\g<type_args>)+>\\\\s*)?\\n)\\n(?:\\\\s*\\\\.\\\\s*\\\\g<name_and_type_args>)* |\\n(?<tuple>\\\\s*\\\\((?:[^\\\\(\\\\)]|\\\\g<tuple>)+\\\\))\\n)\\n(?:\\\\s*\\\\?(?!\\\\?))?\\n(?:\\\\s*\\n\\\\[\\n\\\\s*(?:,\\\\s*)*\\n\\\\]\\n(?:\\\\s*\\\\?(?!\\\\?))?\\n)*\\n)\\n)?\"\n    },\n    \"assignment-expression\": {\n      \"begin\": \"(?:\\\\*|/|%|\\\\+|-|\\\\?\\\\?|\\\\&|\\\\^|<<|>>>?|\\\\|)?=(?!=|>)\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"patterns\": [{\n            \"include\": \"#assignment-operators\"\n          }]\n        }\n      },\n      \"end\": \"(?=[,\\\\)\\\\];}])\",\n      \"patterns\": [{\n        \"include\": \"#ref-modifier\"\n      }, {\n        \"include\": \"#expression\"\n      }]\n    },\n    \"assignment-operators\": {\n      \"patterns\": [{\n        \"match\": \"\\\\*=|/=|%=|\\\\+=|-=|\\\\?\\\\?=\",\n        \"name\": \"keyword.operator.assignment.compound.cs\"\n      }, {\n        \"match\": \"\\\\&=|\\\\^=|<<=|>>>?=|\\\\|=\",\n        \"name\": \"keyword.operator.assignment.compound.bitwise.cs\"\n      }, {\n        \"match\": \"\\\\=\",\n        \"name\": \"keyword.operator.assignment.cs\"\n      }]\n    },\n    \"attribute\": {\n      \"patterns\": [{\n        \"include\": \"#type-name\"\n      }, {\n        \"include\": \"#type-arguments\"\n      }, {\n        \"include\": \"#attribute-arguments\"\n      }]\n    },\n    \"attribute-arguments\": {\n      \"begin\": \"(\\\\()\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.parenthesis.open.cs\"\n        }\n      },\n      \"end\": \"(\\\\))\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.parenthesis.close.cs\"\n        }\n      },\n      \"patterns\": [{\n        \"include\": \"#attribute-named-argument\"\n      }, {\n        \"include\": \"#expression\"\n      }, {\n        \"include\": \"#punctuation-comma\"\n      }]\n    },\n    \"attribute-named-argument\": {\n      \"begin\": \"(@?[_[:alpha:]][_[:alnum:]]*)\\\\s*(?==)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"entity.name.variable.property.cs\"\n        }\n      },\n      \"end\": \"(?=(,|\\\\)))\",\n      \"patterns\": [{\n        \"include\": \"#operator-assignment\"\n      }, {\n        \"include\": \"#expression\"\n      }]\n    },\n    \"attribute-section\": {\n      \"begin\": \"(\\\\[)(assembly|module|field|event|method|param|property|return|type)?(\\\\:)?\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.squarebracket.open.cs\"\n        },\n        \"2\": {\n          \"name\": \"keyword.other.attribute-specifier.cs\"\n        },\n        \"3\": {\n          \"name\": \"punctuation.separator.colon.cs\"\n        }\n      },\n      \"end\": \"(\\\\])\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.squarebracket.close.cs\"\n        }\n      },\n      \"patterns\": [{\n        \"include\": \"#comment\"\n      }, {\n        \"include\": \"#attribute\"\n      }, {\n        \"include\": \"#punctuation-comma\"\n      }]\n    },\n    \"await-expression\": {\n      \"match\": \"(?<!\\\\.\\\\s*)\\\\b(await)\\\\b\",\n      \"name\": \"keyword.operator.expression.await.cs\"\n    },\n    \"await-statement\": {\n      \"begin\": \"(?<!\\\\.\\\\s*)\\\\b(await)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.operator.expression.await.cs\"\n        }\n      },\n      \"end\": \"(?<=})|(?=;|})\",\n      \"patterns\": [{\n        \"include\": \"#foreach-statement\"\n      }, {\n        \"include\": \"#using-statement\"\n      }, {\n        \"include\": \"#expression\"\n      }]\n    },\n    \"base-types\": {\n      \"begin\": \":\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.separator.colon.cs\"\n        }\n      },\n      \"end\": \"(?=\\\\{|where|;)\",\n      \"patterns\": [{\n        \"include\": \"#type\"\n      }, {\n        \"include\": \"#punctuation-comma\"\n      }, {\n        \"include\": \"#preprocessor\"\n      }]\n    },\n    \"block\": {\n      \"begin\": \"\\\\{\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.curlybrace.open.cs\"\n        }\n      },\n      \"end\": \"\\\\}\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.curlybrace.close.cs\"\n        }\n      },\n      \"patterns\": [{\n        \"include\": \"#statement\"\n      }]\n    },\n    \"boolean-literal\": {\n      \"patterns\": [{\n        \"match\": \"(?<!\\\\.)\\\\btrue\\\\b\",\n        \"name\": \"constant.language.boolean.true.cs\"\n      }, {\n        \"match\": \"(?<!\\\\.)\\\\bfalse\\\\b\",\n        \"name\": \"constant.language.boolean.false.cs\"\n      }]\n    },\n    \"bracketed-argument-list\": {\n      \"begin\": \"\\\\[\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.squarebracket.open.cs\"\n        }\n      },\n      \"end\": \"\\\\]\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.squarebracket.close.cs\"\n        }\n      },\n      \"patterns\": [{\n        \"include\": \"#named-argument\"\n      }, {\n        \"include\": \"#argument\"\n      }, {\n        \"include\": \"#punctuation-comma\"\n      }]\n    },\n    \"bracketed-parameter-list\": {\n      \"begin\": \"(?=(\\\\[))\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.squarebracket.open.cs\"\n        }\n      },\n      \"end\": \"(?=(\\\\]))\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.squarebracket.close.cs\"\n        }\n      },\n      \"patterns\": [{\n        \"begin\": \"(?<=\\\\[)\",\n        \"end\": \"(?=\\\\])\",\n        \"patterns\": [{\n          \"include\": \"#comment\"\n        }, {\n          \"include\": \"#attribute-section\"\n        }, {\n          \"include\": \"#parameter\"\n        }, {\n          \"include\": \"#punctuation-comma\"\n        }, {\n          \"include\": \"#variable-initializer\"\n        }]\n      }]\n    },\n    \"break-or-continue-statement\": {\n      \"match\": \"(?<!\\\\.)\\\\b(break|continue)\\\\b\",\n      \"name\": \"keyword.control.flow.$1.cs\"\n    },\n    \"case-guard\": {\n      \"patterns\": [{\n        \"include\": \"#parenthesized-expression\"\n      }, {\n        \"include\": \"#expression\"\n      }]\n    },\n    \"cast-expression\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"punctuation.parenthesis.open.cs\"\n        },\n        \"2\": {\n          \"patterns\": [{\n            \"include\": \"#type\"\n          }]\n        },\n        \"7\": {\n          \"name\": \"punctuation.parenthesis.close.cs\"\n        }\n      },\n      \"match\": \"(?x)\\n(\\\\()\\\\s*\\n(?<type_name>\\n(?:\\n(?:\\n(?:(?<identifier>@?[_[:alpha:]][_[:alnum:]]*)\\\\s*\\\\:\\\\:\\\\s*)?\\n(?<name_and_type_args>\\n\\\\g<identifier>\\\\s*\\n(?<type_args>\\\\s*<(?:[^<>]|\\\\g<type_args>)+>\\\\s*)?\\n)\\n(?:\\\\s*\\\\.\\\\s*\\\\g<name_and_type_args>)* |\\n(?<tuple>\\\\s*\\\\((?:[^\\\\(\\\\)]|\\\\g<tuple>)+\\\\))\\n)\\n(?:\\\\s*\\\\?\\\\s*)?\\n(?:\\\\s*\\n\\\\[\\n(?:\\\\s*,\\\\s*)*\\n\\\\]\\n\\\\s*\\n(?:\\\\?)?\\n\\\\s*\\n)*\\n)\\n)\\\\s*\\n(\\\\))(?=\\\\s*-*!*@?[_[:alnum:]\\\\(])\"\n    },\n    \"casted-constant-pattern\": {\n      \"begin\": `(?x)\n(\\\\()\n([\\\\s.:@_[:alnum:]]+)\n(\\\\))\n(?=[\\\\s+\\\\-!~]*@?[_[:alnum:]('\"]+)`,\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.parenthesis.open.cs\"\n        },\n        \"2\": {\n          \"patterns\": [{\n            \"include\": \"#type-builtin\"\n          }, {\n            \"include\": \"#type-name\"\n          }]\n        },\n        \"3\": {\n          \"name\": \"punctuation.parenthesis.close.cs\"\n        }\n      },\n      \"end\": \"(?=[)}\\\\],;:?=&|^]|!=|\\\\b(and|or|when)\\\\b)\",\n      \"patterns\": [{\n        \"include\": \"#casted-constant-pattern\"\n      }, {\n        \"begin\": \"\\\\(\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.parenthesis.open.cs\"\n          }\n        },\n        \"end\": \"\\\\)\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.parenthesis.close.cs\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#constant-pattern\"\n        }]\n      }, {\n        \"include\": \"#constant-pattern\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"entity.name.type.alias.cs\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.separator.coloncolon.cs\"\n          }\n        },\n        \"match\": \"(@?[_[:alpha:]][_[:alnum:]]*)\\\\s*(\\\\:\\\\:)\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"entity.name.type.cs\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.accessor.cs\"\n          }\n        },\n        \"match\": \"(@?[_[:alpha:]][_[:alnum:]]*)\\\\s*(\\\\.)\"\n      }, {\n        \"match\": \"\\\\@?[_[:alpha:]][_[:alnum:]]*\",\n        \"name\": \"variable.other.constant.cs\"\n      }]\n    },\n    \"catch-clause\": {\n      \"begin\": \"(?<!\\\\.)\\\\b(catch)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.exception.catch.cs\"\n        }\n      },\n      \"end\": \"(?<=\\\\})\",\n      \"patterns\": [{\n        \"begin\": \"\\\\(\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.parenthesis.open.cs\"\n          }\n        },\n        \"end\": \"\\\\)\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.parenthesis.close.cs\"\n          }\n        },\n        \"patterns\": [{\n          \"captures\": {\n            \"1\": {\n              \"patterns\": [{\n                \"include\": \"#type\"\n              }]\n            },\n            \"6\": {\n              \"name\": \"entity.name.variable.local.cs\"\n            }\n          },\n          \"match\": \"(?x)\\n(?<type_name>\\n(?:\\n(?:\\n(?:(?<identifier>@?[_[:alpha:]][_[:alnum:]]*)\\\\s*\\\\:\\\\:\\\\s*)?\\n(?<name_and_type_args>\\n\\\\g<identifier>\\\\s*\\n(?<type_args>\\\\s*<(?:[^<>]|\\\\g<type_args>)+>\\\\s*)?\\n)\\n(?:\\\\s*\\\\.\\\\s*\\\\g<name_and_type_args>)* |\\n(?<tuple>\\\\s*\\\\((?:[^\\\\(\\\\)]|\\\\g<tuple>)+\\\\))\\n)\\n(?:\\\\s*\\\\?\\\\s*)?\\n(?:\\\\s*\\n\\\\[\\n(?:\\\\s*,\\\\s*)*\\n\\\\]\\n\\\\s*\\n(?:\\\\?)?\\n\\\\s*\\n)*\\n)\\n)\\\\s*\\n(?:(\\\\g<identifier>)\\\\b)?\"\n        }]\n      }, {\n        \"include\": \"#when-clause\"\n      }, {\n        \"include\": \"#comment\"\n      }, {\n        \"include\": \"#block\"\n      }]\n    },\n    \"char-character-escape\": {\n      \"match\": \"\\\\\\\\(x[0-9a-fA-F]{1,4}|u[0-9a-fA-F]{4}|.)\",\n      \"name\": \"constant.character.escape.cs\"\n    },\n    \"char-literal\": {\n      \"begin\": \"'\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.char.begin.cs\"\n        }\n      },\n      \"end\": \"(\\\\')|((?:[^\\\\\\\\\\\\n])$)\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.definition.char.end.cs\"\n        },\n        \"2\": {\n          \"name\": \"invalid.illegal.newline.cs\"\n        }\n      },\n      \"name\": \"string.quoted.single.cs\",\n      \"patterns\": [{\n        \"include\": \"#char-character-escape\"\n      }]\n    },\n    \"class-declaration\": {\n      \"begin\": \"(?=(\\\\brecord\\\\b\\\\s+)?\\\\bclass\\\\b)\",\n      \"end\": \"(?<=\\\\})|(?=;)\",\n      \"patterns\": [{\n        \"begin\": \"(?x)\\n(\\\\b(record)\\\\b\\\\s+)?\\n\\\\b(class)\\\\b\\\\s+\\n(@?[_[:alpha:]][_[:alnum:]]*)\\\\s*\",\n        \"beginCaptures\": {\n          \"2\": {\n            \"name\": \"storage.type.record.cs\"\n          },\n          \"3\": {\n            \"name\": \"storage.type.class.cs\"\n          },\n          \"4\": {\n            \"name\": \"entity.name.type.class.cs\"\n          }\n        },\n        \"end\": \"(?=\\\\{)|(?=;)\",\n        \"patterns\": [{\n          \"include\": \"#comment\"\n        }, {\n          \"include\": \"#type-parameter-list\"\n        }, {\n          \"include\": \"#parenthesized-parameter-list\"\n        }, {\n          \"include\": \"#base-types\"\n        }, {\n          \"include\": \"#generic-constraints\"\n        }]\n      }, {\n        \"begin\": \"\\\\{\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.curlybrace.open.cs\"\n          }\n        },\n        \"end\": \"\\\\}\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.curlybrace.close.cs\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#class-or-struct-members\"\n        }]\n      }, {\n        \"include\": \"#preprocessor\"\n      }, {\n        \"include\": \"#comment\"\n      }]\n    },\n    \"class-or-struct-members\": {\n      \"patterns\": [{\n        \"include\": \"#preprocessor\"\n      }, {\n        \"include\": \"#comment\"\n      }, {\n        \"include\": \"#storage-modifier\"\n      }, {\n        \"include\": \"#type-declarations\"\n      }, {\n        \"include\": \"#property-declaration\"\n      }, {\n        \"include\": \"#field-declaration\"\n      }, {\n        \"include\": \"#event-declaration\"\n      }, {\n        \"include\": \"#indexer-declaration\"\n      }, {\n        \"include\": \"#variable-initializer\"\n      }, {\n        \"include\": \"#constructor-declaration\"\n      }, {\n        \"include\": \"#destructor-declaration\"\n      }, {\n        \"include\": \"#operator-declaration\"\n      }, {\n        \"include\": \"#conversion-operator-declaration\"\n      }, {\n        \"include\": \"#method-declaration\"\n      }, {\n        \"include\": \"#attribute-section\"\n      }, {\n        \"include\": \"#punctuation-semicolon\"\n      }]\n    },\n    \"combinator-pattern\": {\n      \"match\": \"\\\\b(and|or|not)\\\\b\",\n      \"name\": \"keyword.operator.expression.pattern.combinator.$1.cs\"\n    },\n    \"comment\": {\n      \"patterns\": [{\n        \"begin\": \"(^\\\\s+)?(///)(?!/)\",\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.whitespace.comment.leading.cs\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.definition.comment.cs\"\n          }\n        },\n        \"name\": \"comment.block.documentation.cs\",\n        \"patterns\": [{\n          \"include\": \"#xml-doc-comment\"\n        }],\n        \"while\": \"^(\\\\s*)(///)(?!/)\"\n      }, {\n        \"begin\": \"(^\\\\s+)?(/\\\\*\\\\*)(?!/)\",\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.whitespace.comment.leading.cs\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.definition.comment.cs\"\n          }\n        },\n        \"end\": \"(^\\\\s+)?(\\\\*/)\",\n        \"name\": \"comment.block.documentation.cs\",\n        \"patterns\": [{\n          \"begin\": \"\\\\G(?=(?~\\\\*/)$)\",\n          \"patterns\": [{\n            \"include\": \"#xml-doc-comment\"\n          }],\n          \"while\": \"^(\\\\s*+)(\\\\*(?!/))?(?=(?~\\\\*/)$)\",\n          \"whileCaptures\": {\n            \"1\": {\n              \"name\": \"punctuation.whitespace.comment.leading.cs\"\n            },\n            \"2\": {\n              \"name\": \"punctuation.definition.comment.cs\"\n            }\n          }\n        }, {\n          \"include\": \"#xml-doc-comment\"\n        }]\n      }, {\n        \"begin\": \"(^\\\\s+)?(//).*$\",\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.whitespace.comment.leading.cs\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.definition.comment.cs\"\n          }\n        },\n        \"name\": \"comment.line.double-slash.cs\",\n        \"while\": \"^(\\\\s*)(//).*$\"\n      }, {\n        \"begin\": \"/\\\\*\",\n        \"captures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.comment.cs\"\n          }\n        },\n        \"end\": \"\\\\*/\",\n        \"name\": \"comment.block.cs\"\n      }]\n    },\n    \"conditional-operator\": {\n      \"patterns\": [{\n        \"match\": \"\\\\?(?!\\\\?|\\\\s*[.\\\\[])\",\n        \"name\": \"keyword.operator.conditional.question-mark.cs\"\n      }, {\n        \"match\": \":\",\n        \"name\": \"keyword.operator.conditional.colon.cs\"\n      }]\n    },\n    \"constant-pattern\": {\n      \"patterns\": [{\n        \"include\": \"#boolean-literal\"\n      }, {\n        \"include\": \"#null-literal\"\n      }, {\n        \"include\": \"#numeric-literal\"\n      }, {\n        \"include\": \"#char-literal\"\n      }, {\n        \"include\": \"#string-literal\"\n      }, {\n        \"include\": \"#raw-string-literal\"\n      }, {\n        \"include\": \"#verbatim-string-literal\"\n      }, {\n        \"include\": \"#type-operator-expression\"\n      }, {\n        \"include\": \"#expression-operator-expression\"\n      }, {\n        \"include\": \"#expression-operators\"\n      }, {\n        \"include\": \"#casted-constant-pattern\"\n      }]\n    },\n    \"constructor-declaration\": {\n      \"begin\": \"(?=@?[_[:alpha:]][_[:alnum:]]*\\\\s*\\\\()\",\n      \"end\": \"(?<=\\\\})|(?=;)\",\n      \"patterns\": [{\n        \"captures\": {\n          \"1\": {\n            \"name\": \"entity.name.function.cs\"\n          }\n        },\n        \"match\": \"(@?[_[:alpha:]][_[:alnum:]]*)\\\\b\"\n      }, {\n        \"begin\": \"(:)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.separator.colon.cs\"\n          }\n        },\n        \"end\": \"(?=\\\\{|=>)\",\n        \"patterns\": [{\n          \"include\": \"#constructor-initializer\"\n        }]\n      }, {\n        \"include\": \"#parenthesized-parameter-list\"\n      }, {\n        \"include\": \"#preprocessor\"\n      }, {\n        \"include\": \"#comment\"\n      }, {\n        \"include\": \"#expression-body\"\n      }, {\n        \"include\": \"#block\"\n      }]\n    },\n    \"constructor-initializer\": {\n      \"begin\": \"\\\\b(base|this)\\\\b\\\\s*(?=\\\\()\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"variable.language.$1.cs\"\n        }\n      },\n      \"end\": \"(?<=\\\\))\",\n      \"patterns\": [{\n        \"include\": \"#argument-list\"\n      }]\n    },\n    \"context-control-paren-statement\": {\n      \"patterns\": [{\n        \"include\": \"#fixed-statement\"\n      }, {\n        \"include\": \"#lock-statement\"\n      }, {\n        \"include\": \"#using-statement\"\n      }]\n    },\n    \"context-control-statement\": {\n      \"match\": \"\\\\b(checked|unchecked|unsafe)\\\\b(?!\\\\s*[@_[:alpha:](])\",\n      \"name\": \"keyword.control.context.$1.cs\"\n    },\n    \"conversion-operator-declaration\": {\n      \"begin\": \"(?x)\\n(?<explicit_or_implicit_keyword>(?:\\\\b(?:explicit|implicit)))\\\\s*\\n(?<operator_keyword>(?:\\\\b(?:operator)))\\\\s*\\n(?<type_name>\\n(?:\\n(?:ref\\\\s+(?:readonly\\\\s+)?)?\\n(?:\\n(?:(?<identifier>@?[_[:alpha:]][_[:alnum:]]*)\\\\s*\\\\:\\\\:\\\\s*)?\\n(?<name_and_type_args>\\n\\\\g<identifier>\\\\s*\\n(?<type_args>\\\\s*<(?:[^<>]|\\\\g<type_args>)+>\\\\s*)?\\n)\\n(?:\\\\s*\\\\.\\\\s*\\\\g<name_and_type_args>)* |\\n(?<tuple>\\\\s*\\\\((?:[^\\\\(\\\\)]|\\\\g<tuple>)+\\\\))\\n)\\n(?:\\\\s*\\\\?\\\\s*)?\\n(?:\\\\s*\\n\\\\[\\n(?:\\\\s*,\\\\s*)*\\n\\\\]\\n\\\\s*\\n(?:\\\\?)?\\n\\\\s*\\n)*\\n)\\n)\\\\s*\\n(?=\\\\()\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"patterns\": [{\n            \"captures\": {\n              \"1\": {\n                \"name\": \"storage.modifier.explicit.cs\"\n              }\n            },\n            \"match\": \"\\\\b(explicit)\\\\b\"\n          }, {\n            \"captures\": {\n              \"1\": {\n                \"name\": \"storage.modifier.implicit.cs\"\n              }\n            },\n            \"match\": \"\\\\b(implicit)\\\\b\"\n          }]\n        },\n        \"2\": {\n          \"name\": \"storage.type.operator.cs\"\n        },\n        \"3\": {\n          \"patterns\": [{\n            \"include\": \"#type\"\n          }]\n        }\n      },\n      \"end\": \"(?<=\\\\})|(?=;)\",\n      \"patterns\": [{\n        \"include\": \"#comment\"\n      }, {\n        \"include\": \"#parenthesized-parameter-list\"\n      }, {\n        \"include\": \"#expression-body\"\n      }, {\n        \"include\": \"#block\"\n      }]\n    },\n    \"declaration-expression-local\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"storage.type.var.cs\"\n        },\n        \"2\": {\n          \"patterns\": [{\n            \"include\": \"#type\"\n          }]\n        },\n        \"7\": {\n          \"name\": \"entity.name.variable.local.cs\"\n        }\n      },\n      \"match\": \"(?x)\\n(?:\\n\\\\b(var)\\\\b|\\n(?<type_name>\\n(?:\\n(?:\\n(?:(?<identifier>@?[_[:alpha:]][_[:alnum:]]*)\\\\s*\\\\:\\\\:\\\\s*)?\\n(?<name_and_type_args>\\n\\\\g<identifier>\\\\s*\\n(?<type_args>\\\\s*<(?:[^<>]|\\\\g<type_args>)+>\\\\s*)?\\n)\\n(?:\\\\s*\\\\.\\\\s*\\\\g<name_and_type_args>)* |\\n(?<tuple>\\\\s*\\\\((?:[^\\\\(\\\\)]|\\\\g<tuple>)+\\\\))\\n)\\n(?:\\\\s*\\\\?\\\\s*)?\\n(?:\\\\s*\\n\\\\[\\n(?:\\\\s*,\\\\s*)*\\n\\\\]\\n\\\\s*\\n(?:\\\\?)?\\n\\\\s*\\n)*\\n)\\n)\\n)\\\\s+\\n(\\\\g<identifier>)\\\\b\\\\s*\\n(?=[,)\\\\]])\"\n    },\n    \"declaration-expression-tuple\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"storage.type.var.cs\"\n        },\n        \"2\": {\n          \"patterns\": [{\n            \"include\": \"#type\"\n          }]\n        },\n        \"7\": {\n          \"name\": \"entity.name.variable.tuple-element.cs\"\n        }\n      },\n      \"match\": \"(?x)\\n(?:\\n\\\\b(var)\\\\b|\\n(?<type_name>\\n(?:\\n(?:\\n(?:(?<identifier>@?[_[:alpha:]][_[:alnum:]]*)\\\\s*\\\\:\\\\:\\\\s*)?\\n(?<name_and_type_args>\\n\\\\g<identifier>\\\\s*\\n(?<type_args>\\\\s*<(?:[^<>]|\\\\g<type_args>)+>\\\\s*)?\\n)\\n(?:\\\\s*\\\\.\\\\s*\\\\g<name_and_type_args>)* |\\n(?<tuple>\\\\s*\\\\((?:[^\\\\(\\\\)]|\\\\g<tuple>)+\\\\))\\n)\\n(?:\\\\s*\\\\?\\\\s*)?\\n(?:\\\\s*\\n\\\\[\\n(?:\\\\s*,\\\\s*)*\\n\\\\]\\n\\\\s*\\n(?:\\\\?)?\\n\\\\s*\\n)*\\n)\\n)\\n)\\\\s+\\n(\\\\g<identifier>)\\\\b\\\\s*\\n(?=[,)])\"\n    },\n    \"declarations\": {\n      \"patterns\": [{\n        \"include\": \"#namespace-declaration\"\n      }, {\n        \"include\": \"#type-declarations\"\n      }, {\n        \"include\": \"#punctuation-semicolon\"\n      }]\n    },\n    \"default-argument\": {\n      \"begin\": \"=\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"keyword.operator.assignment.cs\"\n        }\n      },\n      \"end\": \"(?=,|\\\\))\",\n      \"patterns\": [{\n        \"include\": \"#expression\"\n      }]\n    },\n    \"default-literal-expression\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"keyword.operator.expression.default.cs\"\n        }\n      },\n      \"match\": \"\\\\b(default)\\\\b\"\n    },\n    \"delegate-declaration\": {\n      \"begin\": \"(?x)\\n(?:\\\\b(delegate)\\\\b)\\\\s+\\n(?<type_name>\\n(?:\\n(?:ref\\\\s+(?:readonly\\\\s+)?)?\\n(?:\\n(?:(?<identifier>@?[_[:alpha:]][_[:alnum:]]*)\\\\s*\\\\:\\\\:\\\\s*)?\\n(?<name_and_type_args>\\n\\\\g<identifier>\\\\s*\\n(?<type_args>\\\\s*<(?:[^<>]|\\\\g<type_args>)+>\\\\s*)?\\n)\\n(?:\\\\s*\\\\.\\\\s*\\\\g<name_and_type_args>)* |\\n(?<tuple>\\\\s*\\\\((?:[^\\\\(\\\\)]|\\\\g<tuple>)+\\\\))\\n)\\n(?:\\\\s*\\\\?\\\\s*)?\\n(?:\\\\s*\\n\\\\[\\n(?:\\\\s*,\\\\s*)*\\n\\\\]\\n\\\\s*\\n(?:\\\\?)?\\n\\\\s*\\n)*\\n)\\n)\\\\s+\\n(\\\\g<identifier>)\\\\s*\\n(<([^<>]+)>)?\\\\s*\\n(?=\\\\()\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"storage.type.delegate.cs\"\n        },\n        \"2\": {\n          \"patterns\": [{\n            \"include\": \"#type\"\n          }]\n        },\n        \"7\": {\n          \"name\": \"entity.name.type.delegate.cs\"\n        },\n        \"8\": {\n          \"patterns\": [{\n            \"include\": \"#type-parameter-list\"\n          }]\n        }\n      },\n      \"end\": \"(?=;)\",\n      \"patterns\": [{\n        \"include\": \"#comment\"\n      }, {\n        \"include\": \"#parenthesized-parameter-list\"\n      }, {\n        \"include\": \"#generic-constraints\"\n      }]\n    },\n    \"designation-pattern\": {\n      \"patterns\": [{\n        \"include\": \"#intrusive\"\n      }, {\n        \"begin\": \"\\\\(\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.parenthesis.open.cs\"\n          }\n        },\n        \"end\": \"\\\\)\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.parenthesis.close.cs\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#punctuation-comma\"\n        }, {\n          \"include\": \"#designation-pattern\"\n        }]\n      }, {\n        \"include\": \"#simple-designation-pattern\"\n      }]\n    },\n    \"destructor-declaration\": {\n      \"begin\": \"(~)(@?[_[:alpha:]][_[:alnum:]]*)\\\\s*(?=\\\\()\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.tilde.cs\"\n        },\n        \"2\": {\n          \"name\": \"entity.name.function.cs\"\n        }\n      },\n      \"end\": \"(?<=\\\\})|(?=;)\",\n      \"patterns\": [{\n        \"include\": \"#comment\"\n      }, {\n        \"include\": \"#parenthesized-parameter-list\"\n      }, {\n        \"include\": \"#expression-body\"\n      }, {\n        \"include\": \"#block\"\n      }]\n    },\n    \"directives\": {\n      \"patterns\": [{\n        \"include\": \"#extern-alias-directive\"\n      }, {\n        \"include\": \"#using-directive\"\n      }, {\n        \"include\": \"#attribute-section\"\n      }, {\n        \"include\": \"#punctuation-semicolon\"\n      }]\n    },\n    \"discard-pattern\": {\n      \"match\": \"_(?![_[:alnum:]])\",\n      \"name\": \"variable.language.discard.cs\"\n    },\n    \"do-statement\": {\n      \"begin\": \"(?<!\\\\.)\\\\b(do)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.loop.do.cs\"\n        }\n      },\n      \"end\": \"(?=;|})\",\n      \"patterns\": [{\n        \"include\": \"#statement\"\n      }]\n    },\n    \"double-raw-interpolation\": {\n      \"begin\": \"(?<=[^\\\\{][^\\\\{]|^)((?:\\\\{)*)(\\\\{\\\\{)(?=[^\\\\{])\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"string.quoted.double.cs\"\n        },\n        \"2\": {\n          \"name\": \"punctuation.definition.interpolation.begin.cs\"\n        }\n      },\n      \"end\": \"\\\\}\\\\}\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.interpolation.end.cs\"\n        }\n      },\n      \"name\": \"meta.interpolation.cs\",\n      \"patterns\": [{\n        \"include\": \"#expression\"\n      }]\n    },\n    \"element-access-expression\": {\n      \"begin\": \"(?x)\\n(?:\\n(?:(\\\\?)\\\\s*)?\\n(\\\\.)\\\\s*|\\n(->)\\\\s*\\n)?\\n(?:(@?[_[:alpha:]][_[:alnum:]]*)\\\\s*)?\\n(?:(\\\\?)\\\\s*)?\\n(?=\\\\[)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.operator.null-conditional.cs\"\n        },\n        \"2\": {\n          \"name\": \"punctuation.accessor.cs\"\n        },\n        \"3\": {\n          \"name\": \"punctuation.accessor.pointer.cs\"\n        },\n        \"4\": {\n          \"name\": \"variable.other.object.property.cs\"\n        },\n        \"5\": {\n          \"name\": \"keyword.operator.null-conditional.cs\"\n        }\n      },\n      \"end\": \"(?<=\\\\])(?!\\\\s*\\\\[)\",\n      \"patterns\": [{\n        \"include\": \"#bracketed-argument-list\"\n      }]\n    },\n    \"else-part\": {\n      \"begin\": \"(?<!\\\\.)\\\\b(else)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.conditional.else.cs\"\n        }\n      },\n      \"end\": \"(?<=})|(?=;)\",\n      \"patterns\": [{\n        \"include\": \"#statement\"\n      }]\n    },\n    \"enum-declaration\": {\n      \"begin\": \"(?=\\\\benum\\\\b)\",\n      \"end\": \"(?<=\\\\})\",\n      \"patterns\": [{\n        \"begin\": \"(?=enum)\",\n        \"end\": \"(?=\\\\{)\",\n        \"patterns\": [{\n          \"include\": \"#comment\"\n        }, {\n          \"captures\": {\n            \"1\": {\n              \"name\": \"storage.type.enum.cs\"\n            },\n            \"2\": {\n              \"name\": \"entity.name.type.enum.cs\"\n            }\n          },\n          \"match\": \"(enum)\\\\s+(@?[_[:alpha:]][_[:alnum:]]*)\"\n        }, {\n          \"begin\": \":\",\n          \"beginCaptures\": {\n            \"0\": {\n              \"name\": \"punctuation.separator.colon.cs\"\n            }\n          },\n          \"end\": \"(?=\\\\{)\",\n          \"patterns\": [{\n            \"include\": \"#type\"\n          }]\n        }]\n      }, {\n        \"begin\": \"\\\\{\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.curlybrace.open.cs\"\n          }\n        },\n        \"end\": \"\\\\}\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.curlybrace.close.cs\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#preprocessor\"\n        }, {\n          \"include\": \"#comment\"\n        }, {\n          \"include\": \"#attribute-section\"\n        }, {\n          \"include\": \"#punctuation-comma\"\n        }, {\n          \"begin\": \"@?[_[:alpha:]][_[:alnum:]]*\",\n          \"beginCaptures\": {\n            \"0\": {\n              \"name\": \"entity.name.variable.enum-member.cs\"\n            }\n          },\n          \"end\": \"(?=(,|\\\\}))\",\n          \"patterns\": [{\n            \"include\": \"#comment\"\n          }, {\n            \"include\": \"#variable-initializer\"\n          }]\n        }]\n      }, {\n        \"include\": \"#preprocessor\"\n      }, {\n        \"include\": \"#comment\"\n      }]\n    },\n    \"event-accessors\": {\n      \"begin\": \"\\\\{\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.curlybrace.open.cs\"\n        }\n      },\n      \"end\": \"\\\\}\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.curlybrace.close.cs\"\n        }\n      },\n      \"patterns\": [{\n        \"include\": \"#comment\"\n      }, {\n        \"include\": \"#attribute-section\"\n      }, {\n        \"begin\": \"\\\\b(add|remove)\\\\b\\\\s*(?=\\\\{|;|=>|//|/\\\\*|$)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"storage.type.accessor.$1.cs\"\n          }\n        },\n        \"end\": \"(?<=\\\\}|;)|(?=\\\\})\",\n        \"patterns\": [{\n          \"include\": \"#accessor-setter\"\n        }]\n      }]\n    },\n    \"event-declaration\": {\n      \"begin\": \"(?x)\\n\\\\b(event)\\\\b\\\\s*\\n(?<return_type>\\n(?<type_name>\\n(?:\\n(?:\\n(?:(?<identifier>@?[_[:alpha:]][_[:alnum:]]*)\\\\s*\\\\:\\\\:\\\\s*)?\\n(?<name_and_type_args>\\n\\\\g<identifier>\\\\s*\\n(?<type_args>\\\\s*<(?:[^<>]|\\\\g<type_args>)+>\\\\s*)?\\n)\\n(?:\\\\s*\\\\.\\\\s*\\\\g<name_and_type_args>)* |\\n(?<tuple>\\\\s*\\\\((?:[^\\\\(\\\\)]|\\\\g<tuple>)+\\\\))\\n)\\n(?:\\\\s*\\\\?\\\\s*)?\\n(?:\\\\s*\\n\\\\[\\n(?:\\\\s*,\\\\s*)*\\n\\\\]\\n\\\\s*\\n(?:\\\\?)?\\n\\\\s*\\n)*\\n)\\n)\\\\s+\\n)\\n(?<interface_name>\\\\g<type_name>\\\\s*\\\\.\\\\s*)?\\n(\\\\g<identifier>)\\\\s*\\n(?=\\\\{|;|,|=|//|/\\\\*|$)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"storage.type.event.cs\"\n        },\n        \"2\": {\n          \"patterns\": [{\n            \"include\": \"#type\"\n          }]\n        },\n        \"8\": {\n          \"patterns\": [{\n            \"include\": \"#type\"\n          }, {\n            \"include\": \"#punctuation-accessor\"\n          }]\n        },\n        \"9\": {\n          \"name\": \"entity.name.variable.event.cs\"\n        }\n      },\n      \"end\": \"(?<=\\\\})|(?=;)\",\n      \"patterns\": [{\n        \"include\": \"#comment\"\n      }, {\n        \"include\": \"#event-accessors\"\n      }, {\n        \"match\": \"@?[_[:alpha:]][_[:alnum:]]*\",\n        \"name\": \"entity.name.variable.event.cs\"\n      }, {\n        \"include\": \"#punctuation-comma\"\n      }, {\n        \"begin\": \"=\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"keyword.operator.assignment.cs\"\n          }\n        },\n        \"end\": \"(?<=,)|(?=;)\",\n        \"patterns\": [{\n          \"include\": \"#expression\"\n        }, {\n          \"include\": \"#punctuation-comma\"\n        }]\n      }]\n    },\n    \"explicit-anonymous-function-parameter\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"storage.modifier.$1.cs\"\n        },\n        \"2\": {\n          \"patterns\": [{\n            \"include\": \"#type\"\n          }]\n        },\n        \"7\": {\n          \"name\": \"entity.name.variable.parameter.cs\"\n        }\n      },\n      \"match\": \"(?x)\\n(?:\\\\b(ref|params|out|in)\\\\b\\\\s*)?\\n(?<type_name>\\n(?:\\n(?:\\n(?:(?<identifier>@?[_[:alpha:]][_[:alnum:]]*)\\\\s*\\\\:\\\\:\\\\s*)?\\n(?<name_and_type_args>\\n\\\\g<identifier>\\\\s*\\n(?<type_args><(?:[^<>]|\\\\g<type_args>)*>\\\\s*)?\\n)\\n(?:\\\\s*\\\\.\\\\s*\\\\g<name_and_type_args>)* |\\n(?<tuple>\\\\s*\\\\((?:[^()]|\\\\g<tuple>)*\\\\))\\n)\\n(?:\\\\s*\\\\?\\\\s*)?\\n(?:\\\\s*\\n\\\\[\\n(?:\\\\s*,\\\\s*)*\\n\\\\]\\n\\\\s*\\n(?:\\\\?)?\\n\\\\s*\\n)*\\n)\\n)\\\\s*\\n\\\\b(\\\\g<identifier>)\\\\b\"\n    },\n    \"expression\": {\n      \"patterns\": [{\n        \"include\": \"#preprocessor\"\n      }, {\n        \"include\": \"#comment\"\n      }, {\n        \"include\": \"#expression-operator-expression\"\n      }, {\n        \"include\": \"#type-operator-expression\"\n      }, {\n        \"include\": \"#default-literal-expression\"\n      }, {\n        \"include\": \"#throw-expression\"\n      }, {\n        \"include\": \"#raw-interpolated-string\"\n      }, {\n        \"include\": \"#interpolated-string\"\n      }, {\n        \"include\": \"#verbatim-interpolated-string\"\n      }, {\n        \"include\": \"#type-builtin\"\n      }, {\n        \"include\": \"#language-variable\"\n      }, {\n        \"include\": \"#switch-statement-or-expression\"\n      }, {\n        \"include\": \"#with-expression\"\n      }, {\n        \"include\": \"#conditional-operator\"\n      }, {\n        \"include\": \"#assignment-expression\"\n      }, {\n        \"include\": \"#expression-operators\"\n      }, {\n        \"include\": \"#await-expression\"\n      }, {\n        \"include\": \"#query-expression\"\n      }, {\n        \"include\": \"#as-expression\"\n      }, {\n        \"include\": \"#is-expression\"\n      }, {\n        \"include\": \"#anonymous-method-expression\"\n      }, {\n        \"include\": \"#object-creation-expression\"\n      }, {\n        \"include\": \"#array-creation-expression\"\n      }, {\n        \"include\": \"#anonymous-object-creation-expression\"\n      }, {\n        \"include\": \"#invocation-expression\"\n      }, {\n        \"include\": \"#member-access-expression\"\n      }, {\n        \"include\": \"#element-access-expression\"\n      }, {\n        \"include\": \"#cast-expression\"\n      }, {\n        \"include\": \"#literal\"\n      }, {\n        \"include\": \"#parenthesized-expression\"\n      }, {\n        \"include\": \"#tuple-deconstruction-assignment\"\n      }, {\n        \"include\": \"#initializer-expression\"\n      }, {\n        \"include\": \"#identifier\"\n      }]\n    },\n    \"expression-body\": {\n      \"begin\": \"=>\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"keyword.operator.arrow.cs\"\n        }\n      },\n      \"end\": \"(?=[,\\\\);}])\",\n      \"patterns\": [{\n        \"include\": \"#ref-modifier\"\n      }, {\n        \"include\": \"#expression\"\n      }]\n    },\n    \"expression-operator-expression\": {\n      \"begin\": \"\\\\b(checked|unchecked|nameof)\\\\s*(\\\\()\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.operator.expression.$1.cs\"\n        },\n        \"2\": {\n          \"name\": \"punctuation.parenthesis.open.cs\"\n        }\n      },\n      \"end\": \"\\\\)\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.parenthesis.close.cs\"\n        }\n      },\n      \"patterns\": [{\n        \"include\": \"#expression\"\n      }]\n    },\n    \"expression-operators\": {\n      \"patterns\": [{\n        \"match\": \"<<|>>>?\",\n        \"name\": \"keyword.operator.bitwise.shift.cs\"\n      }, {\n        \"match\": \"==|!=\",\n        \"name\": \"keyword.operator.comparison.cs\"\n      }, {\n        \"match\": \"<=|>=|<|>\",\n        \"name\": \"keyword.operator.relational.cs\"\n      }, {\n        \"match\": \"\\\\!|&&|\\\\|\\\\|\",\n        \"name\": \"keyword.operator.logical.cs\"\n      }, {\n        \"match\": \"\\\\&|~|\\\\^|\\\\|\",\n        \"name\": \"keyword.operator.bitwise.cs\"\n      }, {\n        \"match\": \"--\",\n        \"name\": \"keyword.operator.decrement.cs\"\n      }, {\n        \"match\": \"\\\\+\\\\+\",\n        \"name\": \"keyword.operator.increment.cs\"\n      }, {\n        \"match\": \"\\\\+|-(?!>)|\\\\*|/|%\",\n        \"name\": \"keyword.operator.arithmetic.cs\"\n      }, {\n        \"match\": \"\\\\?\\\\?\",\n        \"name\": \"keyword.operator.null-coalescing.cs\"\n      }, {\n        \"match\": \"\\\\.\\\\.\",\n        \"name\": \"keyword.operator.range.cs\"\n      }]\n    },\n    \"extern-alias-directive\": {\n      \"begin\": \"\\\\b(extern)\\\\s+(alias)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.other.directive.extern.cs\"\n        },\n        \"2\": {\n          \"name\": \"keyword.other.directive.alias.cs\"\n        }\n      },\n      \"end\": \"(?=;)\",\n      \"patterns\": [{\n        \"match\": \"\\\\@?[_[:alpha:]][_[:alnum:]]*\",\n        \"name\": \"variable.other.alias.cs\"\n      }]\n    },\n    \"field-declaration\": {\n      \"begin\": \"(?x)\\n(?<type_name>\\n(?:\\n(?:\\n(?:(?<identifier>@?[_[:alpha:]][_[:alnum:]]*)\\\\s*\\\\:\\\\:\\\\s*)?\\n(?<name_and_type_args>\\n\\\\g<identifier>\\\\s*\\n(?<type_args>\\\\s*<(?:[^<>]|\\\\g<type_args>)+>\\\\s*)?\\n)\\n(?:\\\\s*\\\\.\\\\s*\\\\g<name_and_type_args>)* |\\n(?<tuple>\\\\s*\\\\((?:[^\\\\(\\\\)]|\\\\g<tuple>)+\\\\))\\n)\\n(?:\\\\s*\\\\?\\\\s*)?\\n(?:\\\\s*\\n\\\\[\\n(?:\\\\s*,\\\\s*)*\\n\\\\]\\n\\\\s*\\n(?:\\\\?)?\\n\\\\s*\\n)*\\n)\\n)\\\\s+\\n(\\\\g<identifier>)\\\\s*\\n(?!=>|==)(?=,|;|=|$)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"patterns\": [{\n            \"include\": \"#type\"\n          }]\n        },\n        \"6\": {\n          \"name\": \"entity.name.variable.field.cs\"\n        }\n      },\n      \"end\": \"(?=;)\",\n      \"patterns\": [{\n        \"match\": \"@?[_[:alpha:]][_[:alnum:]]*\",\n        \"name\": \"entity.name.variable.field.cs\"\n      }, {\n        \"include\": \"#punctuation-comma\"\n      }, {\n        \"include\": \"#comment\"\n      }, {\n        \"include\": \"#variable-initializer\"\n      }, {\n        \"include\": \"#class-or-struct-members\"\n      }]\n    },\n    \"finally-clause\": {\n      \"begin\": \"(?<!\\\\.)\\\\b(finally)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.exception.finally.cs\"\n        }\n      },\n      \"end\": \"(?<=\\\\})\",\n      \"patterns\": [{\n        \"include\": \"#comment\"\n      }, {\n        \"include\": \"#block\"\n      }]\n    },\n    \"fixed-statement\": {\n      \"begin\": \"\\\\b(fixed)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.context.fixed.cs\"\n        }\n      },\n      \"end\": \"(?<=\\\\))|(?=;|})\",\n      \"patterns\": [{\n        \"include\": \"#intrusive\"\n      }, {\n        \"begin\": \"\\\\(\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.parenthesis.open.cs\"\n          }\n        },\n        \"end\": \"\\\\)\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.parenthesis.close.cs\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#intrusive\"\n        }, {\n          \"include\": \"#local-variable-declaration\"\n        }]\n      }]\n    },\n    \"for-statement\": {\n      \"begin\": \"\\\\b(for)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.loop.for.cs\"\n        }\n      },\n      \"end\": \"(?<=\\\\))|(?=;|})\",\n      \"patterns\": [{\n        \"begin\": \"\\\\(\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.parenthesis.open.cs\"\n          }\n        },\n        \"end\": \"\\\\)\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.parenthesis.close.cs\"\n          }\n        },\n        \"patterns\": [{\n          \"begin\": \"(?=[^;\\\\)])\",\n          \"end\": \"(?=;|\\\\))\",\n          \"patterns\": [{\n            \"include\": \"#intrusive\"\n          }, {\n            \"include\": \"#local-variable-declaration\"\n          }]\n        }, {\n          \"begin\": \"(?=;)\",\n          \"end\": \"(?=\\\\))\",\n          \"patterns\": [{\n            \"include\": \"#intrusive\"\n          }, {\n            \"include\": \"#expression\"\n          }, {\n            \"include\": \"#punctuation-comma\"\n          }, {\n            \"include\": \"#punctuation-semicolon\"\n          }]\n        }]\n      }]\n    },\n    \"foreach-statement\": {\n      \"begin\": \"\\\\b(foreach)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.loop.foreach.cs\"\n        }\n      },\n      \"end\": \"(?<=\\\\))|(?=;|})\",\n      \"patterns\": [{\n        \"include\": \"#intrusive\"\n      }, {\n        \"begin\": \"\\\\(\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.parenthesis.open.cs\"\n          }\n        },\n        \"end\": \"\\\\)\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.parenthesis.close.cs\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#intrusive\"\n        }, {\n          \"captures\": {\n            \"1\": {\n              \"name\": \"storage.modifier.ref.cs\"\n            },\n            \"2\": {\n              \"name\": \"storage.type.var.cs\"\n            },\n            \"3\": {\n              \"patterns\": [{\n                \"include\": \"#type\"\n              }]\n            },\n            \"8\": {\n              \"name\": \"entity.name.variable.local.cs\"\n            },\n            \"9\": {\n              \"name\": \"keyword.control.loop.in.cs\"\n            }\n          },\n          \"match\": \"(?x)\\n(?:\\n(?:(\\\\bref)\\\\s+)?(\\\\bvar\\\\b)|\\n(?<type_name>\\n(?:\\n(?:ref\\\\s+)?\\n(?:\\n(?:(?<identifier>@?[_[:alpha:]][_[:alnum:]]*)\\\\s*\\\\:\\\\:\\\\s*)?\\n(?<name_and_type_args>\\n\\\\g<identifier>\\\\s*\\n(?<type_args>\\\\s*<(?:[^<>]|\\\\g<type_args>)+>\\\\s*)?\\n)\\n(?:\\\\s*\\\\.\\\\s*\\\\g<name_and_type_args>)* |\\n(?<tuple>\\\\s*\\\\((?:[^\\\\(\\\\)]|\\\\g<tuple>)+\\\\))\\n)\\n(?:\\\\s*\\\\?\\\\s*)?\\n(?:\\\\s*\\n\\\\[\\n(?:\\\\s*,\\\\s*)*\\n\\\\]\\n\\\\s*\\n(?:\\\\?)?\\n\\\\s*\\n)*\\n)\\n)\\n)\\\\s+\\n(\\\\g<identifier>)\\\\s+\\n\\\\b(in)\\\\b\"\n        }, {\n          \"captures\": {\n            \"1\": {\n              \"name\": \"storage.type.var.cs\"\n            },\n            \"2\": {\n              \"patterns\": [{\n                \"include\": \"#tuple-declaration-deconstruction-element-list\"\n              }]\n            },\n            \"3\": {\n              \"name\": \"keyword.control.loop.in.cs\"\n            }\n          },\n          \"match\": \"(?x)\\n(?:\\\\b(var)\\\\b\\\\s*)?\\n(?<tuple>\\\\((?:[^\\\\(\\\\)]|\\\\g<tuple>)+\\\\))\\\\s+\\n\\\\b(in)\\\\b\"\n        }, {\n          \"include\": \"#expression\"\n        }]\n      }]\n    },\n    \"generic-constraints\": {\n      \"begin\": \"(where)\\\\s+(@?[_[:alpha:]][_[:alnum:]]*)\\\\s*(:)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"storage.modifier.where.cs\"\n        },\n        \"2\": {\n          \"name\": \"entity.name.type.type-parameter.cs\"\n        },\n        \"3\": {\n          \"name\": \"punctuation.separator.colon.cs\"\n        }\n      },\n      \"end\": \"(?=\\\\{|where|;|=>)\",\n      \"patterns\": [{\n        \"match\": \"\\\\bclass\\\\b\",\n        \"name\": \"storage.type.class.cs\"\n      }, {\n        \"match\": \"\\\\bstruct\\\\b\",\n        \"name\": \"storage.type.struct.cs\"\n      }, {\n        \"match\": \"\\\\bdefault\\\\b\",\n        \"name\": \"keyword.other.constraint.default.cs\"\n      }, {\n        \"match\": \"\\\\bnotnull\\\\b\",\n        \"name\": \"keyword.other.constraint.notnull.cs\"\n      }, {\n        \"match\": \"\\\\bunmanaged\\\\b\",\n        \"name\": \"keyword.other.constraint.unmanaged.cs\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"keyword.operator.expression.new.cs\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.parenthesis.open.cs\"\n          },\n          \"3\": {\n            \"name\": \"punctuation.parenthesis.close.cs\"\n          }\n        },\n        \"match\": \"(new)\\\\s*(\\\\()\\\\s*(\\\\))\"\n      }, {\n        \"include\": \"#type\"\n      }, {\n        \"include\": \"#punctuation-comma\"\n      }, {\n        \"include\": \"#generic-constraints\"\n      }]\n    },\n    \"goto-statement\": {\n      \"begin\": \"(?<!\\\\.)\\\\b(goto)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.flow.goto.cs\"\n        }\n      },\n      \"end\": \"(?=[;}])\",\n      \"patterns\": [{\n        \"begin\": \"\\\\b(case)\\\\b\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.conditional.case.cs\"\n          }\n        },\n        \"end\": \"(?=[;}])\",\n        \"patterns\": [{\n          \"include\": \"#expression\"\n        }]\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"keyword.control.conditional.default.cs\"\n          }\n        },\n        \"match\": \"\\\\b(default)\\\\b\"\n      }, {\n        \"match\": \"@?[_[:alpha:]][_[:alnum:]]*\",\n        \"name\": \"entity.name.label.cs\"\n      }]\n    },\n    \"group-by\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"keyword.operator.expression.query.by.cs\"\n        }\n      },\n      \"match\": \"\\\\b(by)\\\\b\\\\s*\"\n    },\n    \"group-clause\": {\n      \"begin\": \"\\\\b(group)\\\\b\\\\s*\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.operator.expression.query.group.cs\"\n        }\n      },\n      \"end\": \"(?=;|\\\\))\",\n      \"patterns\": [{\n        \"include\": \"#group-by\"\n      }, {\n        \"include\": \"#group-into\"\n      }, {\n        \"include\": \"#query-body\"\n      }, {\n        \"include\": \"#expression\"\n      }]\n    },\n    \"group-into\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"keyword.operator.expression.query.into.cs\"\n        },\n        \"2\": {\n          \"name\": \"entity.name.variable.range-variable.cs\"\n        }\n      },\n      \"match\": \"(?x)\\n\\\\b(into)\\\\b\\\\s*\\n(@?[_[:alpha:]][_[:alnum:]]*)\\\\b\\\\s*\"\n    },\n    \"identifier\": {\n      \"match\": \"@?[_[:alpha:]][_[:alnum:]]*\",\n      \"name\": \"variable.other.readwrite.cs\"\n    },\n    \"if-statement\": {\n      \"begin\": \"(?<!\\\\.)\\\\b(if)\\\\b\\\\s*(?=\\\\()\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.conditional.if.cs\"\n        }\n      },\n      \"end\": \"(?<=})|(?=;)\",\n      \"patterns\": [{\n        \"begin\": \"\\\\(\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.parenthesis.open.cs\"\n          }\n        },\n        \"end\": \"\\\\)\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.parenthesis.close.cs\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#expression\"\n        }]\n      }, {\n        \"include\": \"#statement\"\n      }]\n    },\n    \"implicit-anonymous-function-parameter\": {\n      \"match\": \"\\\\@?[_[:alpha:]][_[:alnum:]]*\\\\b\",\n      \"name\": \"entity.name.variable.parameter.cs\"\n    },\n    \"indexer-declaration\": {\n      \"begin\": \"(?x)\\n(?<return_type>\\n(?<type_name>\\n(?:\\n(?:ref\\\\s+(?:readonly\\\\s+)?)?\\n(?:\\n(?:(?<identifier>@?[_[:alpha:]][_[:alnum:]]*)\\\\s*\\\\:\\\\:\\\\s*)?\\n(?<name_and_type_args>\\n\\\\g<identifier>\\\\s*\\n(?<type_args>\\\\s*<(?:[^<>]|\\\\g<type_args>)+>\\\\s*)?\\n)\\n(?:\\\\s*\\\\.\\\\s*\\\\g<name_and_type_args>)* |\\n(?<tuple>\\\\s*\\\\((?:[^\\\\(\\\\)]|\\\\g<tuple>)+\\\\))\\n)\\n(?:\\\\s*\\\\?\\\\s*)?\\n(?:\\\\s*\\n\\\\[\\n(?:\\\\s*,\\\\s*)*\\n\\\\]\\n\\\\s*\\n(?:\\\\?)?\\n\\\\s*\\n)*\\n)\\n)\\\\s+\\n)\\n(?<interface_name>\\\\g<type_name>\\\\s*\\\\.\\\\s*)?\\n(?<indexer_name>this)\\\\s*\\n(?=\\\\[)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"patterns\": [{\n            \"include\": \"#type\"\n          }]\n        },\n        \"7\": {\n          \"patterns\": [{\n            \"include\": \"#type\"\n          }, {\n            \"include\": \"#punctuation-accessor\"\n          }]\n        },\n        \"8\": {\n          \"name\": \"variable.language.this.cs\"\n        }\n      },\n      \"end\": \"(?<=\\\\})|(?=;)\",\n      \"patterns\": [{\n        \"include\": \"#comment\"\n      }, {\n        \"include\": \"#bracketed-parameter-list\"\n      }, {\n        \"include\": \"#property-accessors\"\n      }, {\n        \"include\": \"#accessor-getter-expression\"\n      }, {\n        \"include\": \"#variable-initializer\"\n      }]\n    },\n    \"initializer-expression\": {\n      \"begin\": \"\\\\{\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.curlybrace.open.cs\"\n        }\n      },\n      \"end\": \"\\\\}\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.curlybrace.close.cs\"\n        }\n      },\n      \"patterns\": [{\n        \"include\": \"#expression\"\n      }, {\n        \"include\": \"#punctuation-comma\"\n      }]\n    },\n    \"interface-declaration\": {\n      \"begin\": \"(?=\\\\binterface\\\\b)\",\n      \"end\": \"(?<=\\\\})\",\n      \"patterns\": [{\n        \"begin\": \"(?x)\\n(interface)\\\\b\\\\s+\\n(@?[_[:alpha:]][_[:alnum:]]*)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"storage.type.interface.cs\"\n          },\n          \"2\": {\n            \"name\": \"entity.name.type.interface.cs\"\n          }\n        },\n        \"end\": \"(?=\\\\{)\",\n        \"patterns\": [{\n          \"include\": \"#comment\"\n        }, {\n          \"include\": \"#type-parameter-list\"\n        }, {\n          \"include\": \"#base-types\"\n        }, {\n          \"include\": \"#generic-constraints\"\n        }]\n      }, {\n        \"begin\": \"\\\\{\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.curlybrace.open.cs\"\n          }\n        },\n        \"end\": \"\\\\}\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.curlybrace.close.cs\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#interface-members\"\n        }]\n      }, {\n        \"include\": \"#preprocessor\"\n      }, {\n        \"include\": \"#comment\"\n      }]\n    },\n    \"interface-members\": {\n      \"patterns\": [{\n        \"include\": \"#preprocessor\"\n      }, {\n        \"include\": \"#comment\"\n      }, {\n        \"include\": \"#storage-modifier\"\n      }, {\n        \"include\": \"#property-declaration\"\n      }, {\n        \"include\": \"#event-declaration\"\n      }, {\n        \"include\": \"#indexer-declaration\"\n      }, {\n        \"include\": \"#method-declaration\"\n      }, {\n        \"include\": \"#operator-declaration\"\n      }, {\n        \"include\": \"#attribute-section\"\n      }, {\n        \"include\": \"#punctuation-semicolon\"\n      }]\n    },\n    \"interpolated-string\": {\n      \"begin\": '\\\\$\"',\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.begin.cs\"\n        }\n      },\n      \"end\": '(\")|((?:[^\\\\\\\\\\\\n])$)',\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.definition.string.end.cs\"\n        },\n        \"2\": {\n          \"name\": \"invalid.illegal.newline.cs\"\n        }\n      },\n      \"name\": \"string.quoted.double.cs\",\n      \"patterns\": [{\n        \"include\": \"#string-character-escape\"\n      }, {\n        \"include\": \"#interpolation\"\n      }]\n    },\n    \"interpolation\": {\n      \"begin\": \"(?<=[^\\\\{]|^)((?:\\\\{\\\\{)*)(\\\\{)(?=[^\\\\{])\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"string.quoted.double.cs\"\n        },\n        \"2\": {\n          \"name\": \"punctuation.definition.interpolation.begin.cs\"\n        }\n      },\n      \"end\": \"\\\\}\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.interpolation.end.cs\"\n        }\n      },\n      \"name\": \"meta.interpolation.cs\",\n      \"patterns\": [{\n        \"include\": \"#expression\"\n      }]\n    },\n    \"intrusive\": {\n      \"patterns\": [{\n        \"include\": \"#preprocessor\"\n      }, {\n        \"include\": \"#comment\"\n      }]\n    },\n    \"invocation-expression\": {\n      \"begin\": \"(?x)\\n(?:\\n(?:(\\\\?)\\\\s*)?\\n(\\\\.)\\\\s*|\\n(->)\\\\s*\\n)?\\n(@?[_[:alpha:]][_[:alnum:]]*)\\\\s*\\n(\\n<\\n(?<type_args>\\n[^<>()]++|\\n<\\\\g<type_args>*+>|\\n\\\\(\\\\g<type_args>*+\\\\)\\n)*+\\n>\\\\s*\\n)?\\n(?=\\\\()\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.operator.null-conditional.cs\"\n        },\n        \"2\": {\n          \"name\": \"punctuation.accessor.cs\"\n        },\n        \"3\": {\n          \"name\": \"punctuation.accessor.pointer.cs\"\n        },\n        \"4\": {\n          \"name\": \"entity.name.function.cs\"\n        },\n        \"5\": {\n          \"patterns\": [{\n            \"include\": \"#type-arguments\"\n          }]\n        }\n      },\n      \"end\": \"(?<=\\\\))\",\n      \"patterns\": [{\n        \"include\": \"#argument-list\"\n      }]\n    },\n    \"is-expression\": {\n      \"begin\": \"(?<!\\\\.)\\\\b(is)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.operator.expression.pattern.is.cs\"\n        }\n      },\n      \"end\": \"(?=[)}\\\\],;:?=&|^]|!=)\",\n      \"patterns\": [{\n        \"include\": \"#pattern\"\n      }]\n    },\n    \"join-clause\": {\n      \"begin\": \"(?x)\\n\\\\b(join)\\\\b\\\\s*\\n(?<type_name>\\n(?:\\n(?:\\n(?:(?<identifier>@?[_[:alpha:]][_[:alnum:]]*)\\\\s*\\\\:\\\\:\\\\s*)?\\n(?<name_and_type_args>\\n\\\\g<identifier>\\\\s*\\n(?<type_args>\\\\s*<(?:[^<>]|\\\\g<type_args>)+>\\\\s*)?\\n)\\n(?:\\\\s*\\\\.\\\\s*\\\\g<name_and_type_args>)* |\\n(?<tuple>\\\\s*\\\\((?:[^\\\\(\\\\)]|\\\\g<tuple>)+\\\\))\\n)\\n(?:\\\\s*\\\\?\\\\s*)?\\n(?:\\\\s*\\n\\\\[\\n(?:\\\\s*,\\\\s*)*\\n\\\\]\\n\\\\s*\\n(?:\\\\?)?\\n\\\\s*\\n)*\\n)\\n)?\\n\\\\s+(\\\\g<identifier>)\\\\b\\\\s*\\n\\\\b(in)\\\\b\\\\s*\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.operator.expression.query.join.cs\"\n        },\n        \"2\": {\n          \"patterns\": [{\n            \"include\": \"#type\"\n          }]\n        },\n        \"7\": {\n          \"name\": \"entity.name.variable.range-variable.cs\"\n        },\n        \"8\": {\n          \"name\": \"keyword.operator.expression.query.in.cs\"\n        }\n      },\n      \"end\": \"(?=;|\\\\))\",\n      \"patterns\": [{\n        \"include\": \"#join-on\"\n      }, {\n        \"include\": \"#join-equals\"\n      }, {\n        \"include\": \"#join-into\"\n      }, {\n        \"include\": \"#query-body\"\n      }, {\n        \"include\": \"#expression\"\n      }]\n    },\n    \"join-equals\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"keyword.operator.expression.query.equals.cs\"\n        }\n      },\n      \"match\": \"\\\\b(equals)\\\\b\\\\s*\"\n    },\n    \"join-into\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"keyword.operator.expression.query.into.cs\"\n        },\n        \"2\": {\n          \"name\": \"entity.name.variable.range-variable.cs\"\n        }\n      },\n      \"match\": \"(?x)\\n\\\\b(into)\\\\b\\\\s*\\n(@?[_[:alpha:]][_[:alnum:]]*)\\\\b\\\\s*\"\n    },\n    \"join-on\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"keyword.operator.expression.query.on.cs\"\n        }\n      },\n      \"match\": \"\\\\b(on)\\\\b\\\\s*\"\n    },\n    \"labeled-statement\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"entity.name.label.cs\"\n        },\n        \"2\": {\n          \"name\": \"punctuation.separator.colon.cs\"\n        }\n      },\n      \"match\": \"(@?[_[:alpha:]][_[:alnum:]]*)\\\\s*(:)\"\n    },\n    \"language-variable\": {\n      \"patterns\": [{\n        \"match\": \"\\\\b(base|this)\\\\b\",\n        \"name\": \"variable.language.$1.cs\"\n      }, {\n        \"match\": \"\\\\b(value)\\\\b\",\n        \"name\": \"variable.other.$1.cs\"\n      }]\n    },\n    \"let-clause\": {\n      \"begin\": \"(?x)\\n\\\\b(let)\\\\b\\\\s*\\n(@?[_[:alpha:]][_[:alnum:]]*)\\\\b\\\\s*\\n(=)\\\\s*\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.operator.expression.query.let.cs\"\n        },\n        \"2\": {\n          \"name\": \"entity.name.variable.range-variable.cs\"\n        },\n        \"3\": {\n          \"name\": \"keyword.operator.assignment.cs\"\n        }\n      },\n      \"end\": \"(?=;|\\\\))\",\n      \"patterns\": [{\n        \"include\": \"#query-body\"\n      }, {\n        \"include\": \"#expression\"\n      }]\n    },\n    \"list-pattern\": {\n      \"begin\": \"(?=\\\\[)\",\n      \"end\": \"(?=[)}\\\\],;:?=&|^]|!=|\\\\b(and|or|when)\\\\b)\",\n      \"patterns\": [{\n        \"begin\": \"\\\\[\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.squarebracket.open.cs\"\n          }\n        },\n        \"end\": \"\\\\]\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.squarebracket.close.cs\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#pattern\"\n        }, {\n          \"include\": \"#punctuation-comma\"\n        }]\n      }, {\n        \"begin\": \"(?<=\\\\])\",\n        \"end\": \"(?=[)}\\\\],;:?=&|^]|!=|\\\\b(and|or|when)\\\\b)\",\n        \"patterns\": [{\n          \"include\": \"#intrusive\"\n        }, {\n          \"include\": \"#simple-designation-pattern\"\n        }]\n      }]\n    },\n    \"literal\": {\n      \"patterns\": [{\n        \"include\": \"#boolean-literal\"\n      }, {\n        \"include\": \"#null-literal\"\n      }, {\n        \"include\": \"#numeric-literal\"\n      }, {\n        \"include\": \"#char-literal\"\n      }, {\n        \"include\": \"#raw-string-literal\"\n      }, {\n        \"include\": \"#string-literal\"\n      }, {\n        \"include\": \"#verbatim-string-literal\"\n      }, {\n        \"include\": \"#tuple-literal\"\n      }]\n    },\n    \"local-constant-declaration\": {\n      \"begin\": \"(?x)\\n(?<const_keyword>\\\\b(?:const)\\\\b)\\\\s*\\n(?<type_name>\\n(?:\\n(?:\\n(?:(?<identifier>@?[_[:alpha:]][_[:alnum:]]*)\\\\s*\\\\:\\\\:\\\\s*)?\\n(?<name_and_type_args>\\n\\\\g<identifier>\\\\s*\\n(?<type_args>\\\\s*<(?:[^<>]|\\\\g<type_args>)+>\\\\s*)?\\n)\\n(?:\\\\s*\\\\.\\\\s*\\\\g<name_and_type_args>)* |\\n(?<tuple>\\\\s*\\\\((?:[^\\\\(\\\\)]|\\\\g<tuple>)+\\\\))\\n)\\n(?:\\\\s*\\\\?\\\\s*)?\\n(?:\\\\s*\\n\\\\[\\n(?:\\\\s*,\\\\s*)*\\n\\\\]\\n\\\\s*\\n(?:\\\\?)?\\n\\\\s*\\n)*\\n)\\n)\\\\s+\\n(\\\\g<identifier>)\\\\s*\\n(?=,|;|=)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"storage.modifier.const.cs\"\n        },\n        \"2\": {\n          \"patterns\": [{\n            \"include\": \"#type\"\n          }]\n        },\n        \"7\": {\n          \"name\": \"entity.name.variable.local.cs\"\n        }\n      },\n      \"end\": \"(?=;)\",\n      \"patterns\": [{\n        \"match\": \"@?[_[:alpha:]][_[:alnum:]]*\",\n        \"name\": \"entity.name.variable.local.cs\"\n      }, {\n        \"include\": \"#punctuation-comma\"\n      }, {\n        \"include\": \"#comment\"\n      }, {\n        \"include\": \"#variable-initializer\"\n      }]\n    },\n    \"local-declaration\": {\n      \"patterns\": [{\n        \"include\": \"#local-constant-declaration\"\n      }, {\n        \"include\": \"#local-variable-declaration\"\n      }, {\n        \"include\": \"#local-function-declaration\"\n      }, {\n        \"include\": \"#local-tuple-var-deconstruction\"\n      }]\n    },\n    \"local-function-declaration\": {\n      \"begin\": \"(?x)\\n\\\\b((?:(?:async|unsafe|static|extern)\\\\s+)*)\\n(?<type_name>\\n(?:ref\\\\s+(?:readonly\\\\s+)?)?\\n(?:\\n(?:(?<identifier>@?[_[:alpha:]][_[:alnum:]]*)\\\\s*\\\\:\\\\:\\\\s*)?\\n(?<name_and_type_args>\\n\\\\g<identifier>\\\\s*\\n(?<type_args>\\\\s*<(?:[^<>]|\\\\g<type_args>)+>\\\\s*)?\\n)\\n(?:\\\\s*\\\\.\\\\s*\\\\g<name_and_type_args>)* |\\n(?<tuple>\\\\s*\\\\((?:[^\\\\(\\\\)]|\\\\g<tuple>)+\\\\))\\n)\\n(?:\\\\s*\\\\?)?\\n(?:\\\\s*\\n\\\\[\\n\\\\s*(?:,\\\\s*)*\\n\\\\]\\n(?:\\\\s*\\\\?)?\\n)*\\n)\\\\s+\\n(\\\\g<identifier>)\\\\s*\\n(<[^<>]+>)?\\\\s*\\n(?=\\\\()\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"patterns\": [{\n            \"include\": \"#storage-modifier\"\n          }]\n        },\n        \"2\": {\n          \"patterns\": [{\n            \"include\": \"#type\"\n          }]\n        },\n        \"7\": {\n          \"name\": \"entity.name.function.cs\"\n        },\n        \"8\": {\n          \"patterns\": [{\n            \"include\": \"#type-parameter-list\"\n          }]\n        }\n      },\n      \"end\": \"(?<=\\\\})|(?=;)\",\n      \"patterns\": [{\n        \"include\": \"#comment\"\n      }, {\n        \"include\": \"#parenthesized-parameter-list\"\n      }, {\n        \"include\": \"#generic-constraints\"\n      }, {\n        \"include\": \"#expression-body\"\n      }, {\n        \"include\": \"#block\"\n      }]\n    },\n    \"local-tuple-var-deconstruction\": {\n      \"begin\": \"(?x)\\n(?:\\\\b(var)\\\\b\\\\s*)\\n(?<tuple>\\\\((?:[^\\\\(\\\\)]|\\\\g<tuple>)+\\\\))\\\\s*\\n(?=;|=|\\\\))\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"storage.type.var.cs\"\n        },\n        \"2\": {\n          \"patterns\": [{\n            \"include\": \"#tuple-declaration-deconstruction-element-list\"\n          }]\n        }\n      },\n      \"end\": \"(?=;|\\\\))\",\n      \"patterns\": [{\n        \"include\": \"#comment\"\n      }, {\n        \"include\": \"#variable-initializer\"\n      }]\n    },\n    \"local-variable-declaration\": {\n      \"begin\": \"(?x)\\n(?:\\n(?:(\\\\bref)\\\\s+(?:(\\\\breadonly)\\\\s+)?)?(\\\\bvar\\\\b)|\\n(?<type_name>\\n(?:\\n(?:ref\\\\s+(?:readonly\\\\s+)?)?\\n(?:\\n(?:(?<identifier>@?[_[:alpha:]][_[:alnum:]]*)\\\\s*\\\\:\\\\:\\\\s*)?\\n(?<name_and_type_args>\\n\\\\g<identifier>\\\\s*\\n(?<type_args>\\\\s*<(?:[^<>]|\\\\g<type_args>)+>\\\\s*)?\\n)\\n(?:\\\\s*\\\\.\\\\s*\\\\g<name_and_type_args>)* |\\n(?<tuple>\\\\s*\\\\((?:[^\\\\(\\\\)]|\\\\g<tuple>)+\\\\))\\n)\\n(?:\\\\s*[?*]\\\\s*)?\\n(?:\\\\s*\\n\\\\[\\n(?:\\\\s*,\\\\s*)*\\n\\\\]\\n\\\\s*\\n(?:\\\\?)?\\n\\\\s*\\n)*\\n)\\n)\\n)\\\\s+\\n(\\\\g<identifier>)\\\\s*\\n(?!=>)\\n(?=,|;|=|\\\\))\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"storage.modifier.ref.cs\"\n        },\n        \"2\": {\n          \"name\": \"storage.modifier.readonly.cs\"\n        },\n        \"3\": {\n          \"name\": \"storage.type.var.cs\"\n        },\n        \"4\": {\n          \"patterns\": [{\n            \"include\": \"#type\"\n          }]\n        },\n        \"9\": {\n          \"name\": \"entity.name.variable.local.cs\"\n        }\n      },\n      \"end\": \"(?=[;)}])\",\n      \"patterns\": [{\n        \"match\": \"@?[_[:alpha:]][_[:alnum:]]*\",\n        \"name\": \"entity.name.variable.local.cs\"\n      }, {\n        \"include\": \"#punctuation-comma\"\n      }, {\n        \"include\": \"#comment\"\n      }, {\n        \"include\": \"#variable-initializer\"\n      }]\n    },\n    \"lock-statement\": {\n      \"begin\": \"\\\\b(lock)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.context.lock.cs\"\n        }\n      },\n      \"end\": \"(?<=\\\\))|(?=;|})\",\n      \"patterns\": [{\n        \"include\": \"#intrusive\"\n      }, {\n        \"begin\": \"\\\\(\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.parenthesis.open.cs\"\n          }\n        },\n        \"end\": \"\\\\)\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.parenthesis.close.cs\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#intrusive\"\n        }, {\n          \"include\": \"#expression\"\n        }]\n      }]\n    },\n    \"member-access-expression\": {\n      \"patterns\": [{\n        \"captures\": {\n          \"1\": {\n            \"name\": \"keyword.operator.null-conditional.cs\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.accessor.cs\"\n          },\n          \"3\": {\n            \"name\": \"punctuation.accessor.pointer.cs\"\n          },\n          \"4\": {\n            \"name\": \"variable.other.object.property.cs\"\n          }\n        },\n        \"match\": \"(?x)\\n(?:\\n(?:(\\\\?)\\\\s*)?\\n(\\\\.)\\\\s*|\\n(->)\\\\s*\\n)\\n(@?[_[:alpha:]][_[:alnum:]]*)\\\\s*\\n(?![_[:alnum:]]|\\\\(|(\\\\?)?\\\\[|<)\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.accessor.cs\"\n          },\n          \"2\": {\n            \"name\": \"variable.other.object.cs\"\n          },\n          \"3\": {\n            \"patterns\": [{\n              \"include\": \"#type-arguments\"\n            }]\n          }\n        },\n        \"match\": \"(?x)\\n(\\\\.)?\\\\s*\\n(@?[_[:alpha:]][_[:alnum:]]*)\\n(?<type_params>\\\\s*<([^<>]|\\\\g<type_params>)+>\\\\s*)\\n(?=\\n(\\\\s*\\\\?)?\\n\\\\s*\\\\.\\\\s*@?[_[:alpha:]][_[:alnum:]]*\\n)\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"variable.other.object.cs\"\n          }\n        },\n        \"match\": \"(?x)\\n(@?[_[:alpha:]][_[:alnum:]]*)\\n(?=\\n\\\\s*(?:(?:\\\\?\\\\s*)?\\\\.|->)\\n\\\\s*@?[_[:alpha:]][_[:alnum:]]*\\n)\"\n      }]\n    },\n    \"method-declaration\": {\n      \"begin\": \"(?x)\\n(?<return_type>\\n(?<type_name>\\n(?:\\n(?:ref\\\\s+(?:readonly\\\\s+)?)?\\n(?:\\n(?:(?<identifier>@?[_[:alpha:]][_[:alnum:]]*)\\\\s*\\\\:\\\\:\\\\s*)?\\n(?<name_and_type_args>\\n\\\\g<identifier>\\\\s*\\n(?<type_args>\\\\s*<(?:[^<>]|\\\\g<type_args>)+>\\\\s*)?\\n)\\n(?:\\\\s*\\\\.\\\\s*\\\\g<name_and_type_args>)* |\\n(?<tuple>\\\\s*\\\\((?:[^\\\\(\\\\)]|\\\\g<tuple>)+\\\\))\\n)\\n(?:\\\\s*\\\\?\\\\s*)?\\n(?:\\\\s*\\n\\\\[\\n(?:\\\\s*,\\\\s*)*\\n\\\\]\\n\\\\s*\\n(?:\\\\?)?\\n\\\\s*\\n)*\\n)\\n)\\\\s+\\n)\\n(?<interface_name>\\\\g<type_name>\\\\s*\\\\.\\\\s*)?\\n(\\\\g<identifier>)\\\\s*\\n(<([^<>]+)>)?\\\\s*\\n(?=\\\\()\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"patterns\": [{\n            \"include\": \"#type\"\n          }]\n        },\n        \"7\": {\n          \"patterns\": [{\n            \"include\": \"#type\"\n          }, {\n            \"include\": \"#punctuation-accessor\"\n          }]\n        },\n        \"8\": {\n          \"name\": \"entity.name.function.cs\"\n        },\n        \"9\": {\n          \"patterns\": [{\n            \"include\": \"#type-parameter-list\"\n          }]\n        }\n      },\n      \"end\": \"(?<=\\\\})|(?=;)\",\n      \"patterns\": [{\n        \"include\": \"#comment\"\n      }, {\n        \"include\": \"#parenthesized-parameter-list\"\n      }, {\n        \"include\": \"#generic-constraints\"\n      }, {\n        \"include\": \"#expression-body\"\n      }, {\n        \"include\": \"#block\"\n      }]\n    },\n    \"named-argument\": {\n      \"begin\": \"(@?[_[:alpha:]][_[:alnum:]]*)\\\\s*(:)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"entity.name.variable.parameter.cs\"\n        },\n        \"2\": {\n          \"name\": \"punctuation.separator.colon.cs\"\n        }\n      },\n      \"end\": \"(?=(,|\\\\)|\\\\]))\",\n      \"patterns\": [{\n        \"include\": \"#argument\"\n      }]\n    },\n    \"namespace-declaration\": {\n      \"begin\": \"\\\\b(namespace)\\\\s+\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"storage.type.namespace.cs\"\n        }\n      },\n      \"end\": \"(?<=\\\\})|(?=;)\",\n      \"patterns\": [{\n        \"include\": \"#comment\"\n      }, {\n        \"match\": \"@?[_[:alpha:]][_[:alnum:]]*\",\n        \"name\": \"entity.name.type.namespace.cs\"\n      }, {\n        \"include\": \"#punctuation-accessor\"\n      }, {\n        \"begin\": \"\\\\{\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.curlybrace.open.cs\"\n          }\n        },\n        \"end\": \"\\\\}\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.curlybrace.close.cs\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#declarations\"\n        }, {\n          \"include\": \"#using-directive\"\n        }, {\n          \"include\": \"#punctuation-semicolon\"\n        }]\n      }]\n    },\n    \"null-literal\": {\n      \"match\": \"(?<!\\\\.)\\\\bnull\\\\b\",\n      \"name\": \"constant.language.null.cs\"\n    },\n    \"numeric-literal\": {\n      \"captures\": {\n        \"0\": {\n          \"patterns\": [{\n            \"begin\": \"(?=.)\",\n            \"end\": \"$\",\n            \"patterns\": [{\n              \"captures\": {\n                \"2\": {\n                  \"name\": \"constant.numeric.decimal.cs\",\n                  \"patterns\": [{\n                    \"match\": \"(?<=[0-9a-fA-F])_(?=[0-9a-fA-F])\",\n                    \"name\": \"constant.numeric.other.separator.thousands.cs\"\n                  }]\n                },\n                \"3\": {\n                  \"name\": \"constant.numeric.other.separator.thousands.cs\"\n                },\n                \"4\": {\n                  \"name\": \"constant.numeric.other.separator.decimals.cs\"\n                },\n                \"5\": {\n                  \"name\": \"constant.numeric.decimal.cs\",\n                  \"patterns\": [{\n                    \"match\": \"(?<=[0-9a-fA-F])_(?=[0-9a-fA-F])\",\n                    \"name\": \"constant.numeric.other.separator.thousands.cs\"\n                  }]\n                },\n                \"6\": {\n                  \"name\": \"constant.numeric.other.separator.thousands.cs\"\n                },\n                \"8\": {\n                  \"name\": \"constant.numeric.other.exponent.cs\"\n                },\n                \"9\": {\n                  \"name\": \"keyword.operator.arithmetic.cs\"\n                },\n                \"10\": {\n                  \"name\": \"keyword.operator.arithmetic.cs\"\n                },\n                \"11\": {\n                  \"name\": \"constant.numeric.decimal.cs\",\n                  \"patterns\": [{\n                    \"match\": \"(?<=[0-9a-fA-F])_(?=[0-9a-fA-F])\",\n                    \"name\": \"constant.numeric.other.separator.thousands.cs\"\n                  }]\n                },\n                \"12\": {\n                  \"name\": \"constant.numeric.other.suffix.cs\"\n                }\n              },\n              \"match\": \"(\\\\G(?=[0-9.])(?!0[xXbB]))([0-9](?:[0-9]|((?<=[0-9a-fA-F])_(?=[0-9a-fA-F])))*)?((?:(?<=[0-9])|\\\\.(?=[0-9])))([0-9](?:[0-9]|((?<=[0-9a-fA-F])_(?=[0-9a-fA-F])))*)?((?<!_)([eE])(\\\\+?)(\\\\-?)((?:[0-9](?:[0-9]|(?:(?<=[0-9a-fA-F])_(?=[0-9a-fA-F])))*)))?([fFdDmM](?!\\\\w))?$\"\n            }, {\n              \"captures\": {\n                \"1\": {\n                  \"name\": \"constant.numeric.other.preffix.binary.cs\"\n                },\n                \"2\": {\n                  \"name\": \"constant.numeric.binary.cs\",\n                  \"patterns\": [{\n                    \"match\": \"(?<=[0-9a-fA-F])_(?=[0-9a-fA-F])\",\n                    \"name\": \"constant.numeric.other.separator.thousands.cs\"\n                  }]\n                },\n                \"3\": {\n                  \"name\": \"constant.numeric.other.separator.thousands.cs\"\n                },\n                \"4\": {\n                  \"name\": \"constant.numeric.other.suffix.cs\"\n                }\n              },\n              \"match\": \"(\\\\G0[bB])([01_](?:[01_]|((?<=[0-9a-fA-F])_(?=[0-9a-fA-F])))*)((?:(?:(?:(?:(?:[uU]|[uU]l)|[uU]L)|l[uU]?)|L[uU]?)|[fFdDmM])(?!\\\\w))?$\"\n            }, {\n              \"captures\": {\n                \"1\": {\n                  \"name\": \"constant.numeric.other.preffix.hex.cs\"\n                },\n                \"2\": {\n                  \"name\": \"constant.numeric.hex.cs\",\n                  \"patterns\": [{\n                    \"match\": \"(?<=[0-9a-fA-F])_(?=[0-9a-fA-F])\",\n                    \"name\": \"constant.numeric.other.separator.thousands.cs\"\n                  }]\n                },\n                \"3\": {\n                  \"name\": \"constant.numeric.other.separator.thousands.cs\"\n                },\n                \"4\": {\n                  \"name\": \"constant.numeric.other.suffix.cs\"\n                }\n              },\n              \"match\": \"(\\\\G0[xX])([0-9a-fA-F](?:[0-9a-fA-F]|((?<=[0-9a-fA-F])_(?=[0-9a-fA-F])))*)((?:(?:(?:(?:(?:[uU]|[uU]l)|[uU]L)|l[uU]?)|L[uU]?)|[fFdDmM])(?!\\\\w))?$\"\n            }, {\n              \"captures\": {\n                \"2\": {\n                  \"name\": \"constant.numeric.decimal.cs\",\n                  \"patterns\": [{\n                    \"match\": \"(?<=[0-9a-fA-F])_(?=[0-9a-fA-F])\",\n                    \"name\": \"constant.numeric.other.separator.thousands.cs\"\n                  }]\n                },\n                \"3\": {\n                  \"name\": \"constant.numeric.other.separator.thousands.cs\"\n                },\n                \"5\": {\n                  \"name\": \"constant.numeric.other.exponent.cs\"\n                },\n                \"6\": {\n                  \"name\": \"keyword.operator.arithmetic.cs\"\n                },\n                \"7\": {\n                  \"name\": \"keyword.operator.arithmetic.cs\"\n                },\n                \"8\": {\n                  \"name\": \"constant.numeric.decimal.cs\",\n                  \"patterns\": [{\n                    \"match\": \"(?<=[0-9a-fA-F])_(?=[0-9a-fA-F])\",\n                    \"name\": \"constant.numeric.other.separator.thousands.cs\"\n                  }]\n                },\n                \"9\": {\n                  \"name\": \"constant.numeric.other.suffix.cs\"\n                }\n              },\n              \"match\": \"(\\\\G(?=[0-9.])(?!0[xXbB]))([0-9](?:[0-9]|((?<=[0-9a-fA-F])_(?=[0-9a-fA-F])))*)((?<!_)([eE])(\\\\+?)(\\\\-?)((?:[0-9](?:[0-9]|(?:(?<=[0-9a-fA-F])_(?=[0-9a-fA-F])))*)))?((?:(?:(?:(?:(?:[uU]|[uU]l)|[uU]L)|l[uU]?)|L[uU]?)|[fFdDmM])(?!\\\\w))?$\"\n            }, {\n              \"match\": \"(?:(?:[0-9a-zA-Z_]|_)|(?<=[eE])[+-]|\\\\.\\\\d)+\",\n              \"name\": \"invalid.illegal.constant.numeric.cs\"\n            }]\n          }]\n        }\n      },\n      \"match\": \"(?<!\\\\w)\\\\.?\\\\d(?:(?:[0-9a-zA-Z_]|_)|(?<=[eE])[+-]|\\\\.\\\\d)*\"\n    },\n    \"object-creation-expression\": {\n      \"patterns\": [{\n        \"include\": \"#object-creation-expression-with-parameters\"\n      }, {\n        \"include\": \"#object-creation-expression-with-no-parameters\"\n      }]\n    },\n    \"object-creation-expression-with-no-parameters\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"keyword.operator.expression.new.cs\"\n        },\n        \"2\": {\n          \"patterns\": [{\n            \"include\": \"#type\"\n          }]\n        }\n      },\n      \"match\": \"(?x)\\n(new)\\\\s+\\n(?<type_name>\\n(?:\\n(?:\\n(?:(?<identifier>@?[_[:alpha:]][_[:alnum:]]*)\\\\s*\\\\:\\\\:\\\\s*)?\\n(?<name_and_type_args>\\n\\\\g<identifier>\\\\s*\\n(?<type_args>\\\\s*<(?:[^<>]|\\\\g<type_args>)+>\\\\s*)?\\n)\\n(?:\\\\s*\\\\.\\\\s*\\\\g<name_and_type_args>)* |\\n(?<tuple>\\\\s*\\\\((?:[^\\\\(\\\\)]|\\\\g<tuple>)+\\\\))\\n)\\n(?:\\\\s*\\\\?\\\\s*)?\\n(?:\\\\s*\\n\\\\[\\n(?:\\\\s*,\\\\s*)*\\n\\\\]\\n\\\\s*\\n(?:\\\\?)?\\n\\\\s*\\n)*\\n)\\n)\\\\s*\\n(?=\\\\{|//|/\\\\*|$)\"\n    },\n    \"object-creation-expression-with-parameters\": {\n      \"begin\": \"(?x)\\n(new)(?:\\\\s+\\n(?<type_name>\\n(?:\\n(?:\\n(?:(?<identifier>@?[_[:alpha:]][_[:alnum:]]*)\\\\s*\\\\:\\\\:\\\\s*)?\\n(?<name_and_type_args>\\n\\\\g<identifier>\\\\s*\\n(?<type_args>\\\\s*<(?:[^<>]|\\\\g<type_args>)+>\\\\s*)?\\n)\\n(?:\\\\s*\\\\.\\\\s*\\\\g<name_and_type_args>)* |\\n(?<tuple>\\\\s*\\\\((?:[^\\\\(\\\\)]|\\\\g<tuple>)+\\\\))\\n)\\n(?:\\\\s*\\\\?\\\\s*)?\\n(?:\\\\s*\\n\\\\[\\n(?:\\\\s*,\\\\s*)*\\n\\\\]\\n\\\\s*\\n(?:\\\\?)?\\n\\\\s*\\n)*\\n)\\n))?\\\\s*\\n(?=\\\\()\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.operator.expression.new.cs\"\n        },\n        \"2\": {\n          \"patterns\": [{\n            \"include\": \"#type\"\n          }]\n        }\n      },\n      \"end\": \"(?<=\\\\))\",\n      \"patterns\": [{\n        \"include\": \"#argument-list\"\n      }]\n    },\n    \"operator-assignment\": {\n      \"match\": \"(?<!=|!)(=)(?!=)\",\n      \"name\": \"keyword.operator.assignment.cs\"\n    },\n    \"operator-declaration\": {\n      \"begin\": \"(?x)\\n(?<type_name>\\n(?:\\n(?:ref\\\\s+(?:readonly\\\\s+)?)?\\n(?:\\n(?:(?<identifier>@?[_[:alpha:]][_[:alnum:]]*)\\\\s*\\\\:\\\\:\\\\s*)?\\n(?<name_and_type_args>\\n\\\\g<identifier>\\\\s*\\n(?<type_args>\\\\s*<(?:[^<>]|\\\\g<type_args>)+>\\\\s*)?\\n)\\n(?:\\\\s*\\\\.\\\\s*\\\\g<name_and_type_args>)* |\\n(?<tuple>\\\\s*\\\\((?:[^\\\\(\\\\)]|\\\\g<tuple>)+\\\\))\\n)\\n(?:\\\\s*\\\\?\\\\s*)?\\n(?:\\\\s*\\n\\\\[\\n(?:\\\\s*,\\\\s*)*\\n\\\\]\\n\\\\s*\\n(?:\\\\?)?\\n\\\\s*\\n)*\\n)\\n)\\\\s*\\n\\\\b(?<operator_keyword>operator)\\\\b\\\\s*\\n(?<operator>[+\\\\-*/%&|\\\\^!=~<>]+|true|false)\\\\s*\\n(?=\\\\()\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"patterns\": [{\n            \"include\": \"#type\"\n          }]\n        },\n        \"6\": {\n          \"name\": \"storage.type.operator.cs\"\n        },\n        \"7\": {\n          \"name\": \"entity.name.function.cs\"\n        }\n      },\n      \"end\": \"(?<=\\\\})|(?=;)\",\n      \"patterns\": [{\n        \"include\": \"#comment\"\n      }, {\n        \"include\": \"#parenthesized-parameter-list\"\n      }, {\n        \"include\": \"#expression-body\"\n      }, {\n        \"include\": \"#block\"\n      }]\n    },\n    \"orderby-clause\": {\n      \"begin\": \"\\\\b(orderby)\\\\b\\\\s*\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.operator.expression.query.orderby.cs\"\n        }\n      },\n      \"end\": \"(?=;|\\\\))\",\n      \"patterns\": [{\n        \"include\": \"#ordering-direction\"\n      }, {\n        \"include\": \"#query-body\"\n      }, {\n        \"include\": \"#expression\"\n      }, {\n        \"include\": \"#punctuation-comma\"\n      }]\n    },\n    \"ordering-direction\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"keyword.operator.expression.query.$1.cs\"\n        }\n      },\n      \"match\": \"\\\\b(ascending|descending)\\\\b\"\n    },\n    \"parameter\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"storage.modifier.$1.cs\"\n        },\n        \"2\": {\n          \"patterns\": [{\n            \"include\": \"#type\"\n          }]\n        },\n        \"7\": {\n          \"name\": \"entity.name.variable.parameter.cs\"\n        }\n      },\n      \"match\": \"(?x)\\n(?:(?:\\\\b(ref|params|out|in|this)\\\\b)\\\\s+)?\\n(?<type_name>\\n(?:\\n(?:ref\\\\s+)?\\n(?:\\n(?:(?<identifier>@?[_[:alpha:]][_[:alnum:]]*)\\\\s*\\\\:\\\\:\\\\s*)?\\n(?<name_and_type_args>\\n\\\\g<identifier>\\\\s*\\n(?<type_args>\\\\s*<(?:[^<>]|\\\\g<type_args>)+>\\\\s*)?\\n)\\n(?:\\\\s*\\\\.\\\\s*\\\\g<name_and_type_args>)* |\\n(?<tuple>\\\\s*\\\\((?:[^()]|\\\\g<tuple>)+\\\\))\\n)\\n(?:\\\\s*\\\\?\\\\s*)?\\n(?:\\\\s*\\n\\\\[\\n(?:\\\\s*,\\\\s*)*\\n\\\\]\\n\\\\s*\\n(?:\\\\?)?\\n\\\\s*\\n)*\\n)\\n)\\\\s+\\n(\\\\g<identifier>)\"\n    },\n    \"parenthesized-expression\": {\n      \"begin\": \"\\\\(\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.parenthesis.open.cs\"\n        }\n      },\n      \"end\": \"\\\\)\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.parenthesis.close.cs\"\n        }\n      },\n      \"patterns\": [{\n        \"include\": \"#expression\"\n      }]\n    },\n    \"parenthesized-parameter-list\": {\n      \"begin\": \"(\\\\()\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.parenthesis.open.cs\"\n        }\n      },\n      \"end\": \"(\\\\))\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.parenthesis.close.cs\"\n        }\n      },\n      \"patterns\": [{\n        \"include\": \"#comment\"\n      }, {\n        \"include\": \"#attribute-section\"\n      }, {\n        \"include\": \"#parameter\"\n      }, {\n        \"include\": \"#punctuation-comma\"\n      }, {\n        \"include\": \"#variable-initializer\"\n      }]\n    },\n    \"pattern\": {\n      \"patterns\": [{\n        \"include\": \"#intrusive\"\n      }, {\n        \"include\": \"#combinator-pattern\"\n      }, {\n        \"include\": \"#discard-pattern\"\n      }, {\n        \"include\": \"#constant-pattern\"\n      }, {\n        \"include\": \"#relational-pattern\"\n      }, {\n        \"include\": \"#var-pattern\"\n      }, {\n        \"include\": \"#type-pattern\"\n      }, {\n        \"include\": \"#positional-pattern\"\n      }, {\n        \"include\": \"#property-pattern\"\n      }, {\n        \"include\": \"#list-pattern\"\n      }, {\n        \"include\": \"#slice-pattern\"\n      }]\n    },\n    \"positional-pattern\": {\n      \"begin\": \"(?=\\\\()\",\n      \"end\": \"(?=[)}\\\\],;:?=&|^]|!=|\\\\b(and|or|when)\\\\b)\",\n      \"patterns\": [{\n        \"begin\": \"\\\\(\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.parenthesis.open.cs\"\n          }\n        },\n        \"end\": \"\\\\)\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.parenthesis.close.cs\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#subpattern\"\n        }, {\n          \"include\": \"#punctuation-comma\"\n        }]\n      }, {\n        \"begin\": \"(?<=\\\\))\",\n        \"end\": \"(?=[)}\\\\],;:?=&|^]|!=|\\\\b(and|or|when)\\\\b)\",\n        \"patterns\": [{\n          \"include\": \"#intrusive\"\n        }, {\n          \"include\": \"#property-pattern\"\n        }, {\n          \"include\": \"#simple-designation-pattern\"\n        }]\n      }]\n    },\n    \"preprocessor\": {\n      \"begin\": \"^\\\\s*(\\\\#)\\\\s*\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.separator.hash.cs\"\n        }\n      },\n      \"end\": \"(?<=$)\",\n      \"name\": \"meta.preprocessor.cs\",\n      \"patterns\": [{\n        \"include\": \"#comment\"\n      }, {\n        \"include\": \"#preprocessor-define-or-undef\"\n      }, {\n        \"include\": \"#preprocessor-if-or-elif\"\n      }, {\n        \"include\": \"#preprocessor-else-or-endif\"\n      }, {\n        \"include\": \"#preprocessor-warning-or-error\"\n      }, {\n        \"include\": \"#preprocessor-region\"\n      }, {\n        \"include\": \"#preprocessor-endregion\"\n      }, {\n        \"include\": \"#preprocessor-load\"\n      }, {\n        \"include\": \"#preprocessor-r\"\n      }, {\n        \"include\": \"#preprocessor-line\"\n      }, {\n        \"include\": \"#preprocessor-pragma-warning\"\n      }, {\n        \"include\": \"#preprocessor-pragma-checksum\"\n      }]\n    },\n    \"preprocessor-define-or-undef\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"keyword.preprocessor.define.cs\"\n        },\n        \"2\": {\n          \"name\": \"keyword.preprocessor.undef.cs\"\n        },\n        \"3\": {\n          \"name\": \"entity.name.variable.preprocessor.symbol.cs\"\n        }\n      },\n      \"match\": \"\\\\b(?:(define)|(undef))\\\\b\\\\s*\\\\b([_[:alpha:]][_[:alnum:]]*)\\\\b\"\n    },\n    \"preprocessor-else-or-endif\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"keyword.preprocessor.else.cs\"\n        },\n        \"2\": {\n          \"name\": \"keyword.preprocessor.endif.cs\"\n        }\n      },\n      \"match\": \"\\\\b(?:(else)|(endif))\\\\b\"\n    },\n    \"preprocessor-endregion\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"keyword.preprocessor.endregion.cs\"\n        }\n      },\n      \"match\": \"\\\\b(endregion)\\\\b\"\n    },\n    \"preprocessor-expression\": {\n      \"patterns\": [{\n        \"begin\": \"\\\\(\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.parenthesis.open.cs\"\n          }\n        },\n        \"end\": \"\\\\)\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.parenthesis.close.cs\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#preprocessor-expression\"\n        }]\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"constant.language.boolean.true.cs\"\n          },\n          \"2\": {\n            \"name\": \"constant.language.boolean.false.cs\"\n          },\n          \"3\": {\n            \"name\": \"entity.name.variable.preprocessor.symbol.cs\"\n          }\n        },\n        \"match\": \"\\\\b(?:(true)|(false)|([_[:alpha:]][_[:alnum:]]*))\\\\b\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"keyword.operator.comparison.cs\"\n          },\n          \"2\": {\n            \"name\": \"keyword.operator.logical.cs\"\n          }\n        },\n        \"match\": \"(==|!=)|(\\\\!|&&|\\\\|\\\\|)\"\n      }]\n    },\n    \"preprocessor-if-or-elif\": {\n      \"begin\": \"\\\\b(?:(if)|(elif))\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.preprocessor.if.cs\"\n        },\n        \"2\": {\n          \"name\": \"keyword.preprocessor.elif.cs\"\n        }\n      },\n      \"end\": \"(?=$)\",\n      \"patterns\": [{\n        \"include\": \"#comment\"\n      }, {\n        \"include\": \"#preprocessor-expression\"\n      }]\n    },\n    \"preprocessor-line\": {\n      \"begin\": \"\\\\b(line)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.preprocessor.line.cs\"\n        }\n      },\n      \"end\": \"(?=$)\",\n      \"patterns\": [{\n        \"captures\": {\n          \"1\": {\n            \"name\": \"keyword.preprocessor.default.cs\"\n          },\n          \"2\": {\n            \"name\": \"keyword.preprocessor.hidden.cs\"\n          }\n        },\n        \"match\": \"\\\\b(?:(default|hidden))\"\n      }, {\n        \"captures\": {\n          \"0\": {\n            \"name\": \"constant.numeric.decimal.cs\"\n          }\n        },\n        \"match\": \"[0-9]+\"\n      }, {\n        \"captures\": {\n          \"0\": {\n            \"name\": \"string.quoted.double.cs\"\n          }\n        },\n        \"match\": '\\\\\"[^\"]*\\\\\"'\n      }]\n    },\n    \"preprocessor-load\": {\n      \"begin\": \"\\\\b(load)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.preprocessor.load.cs\"\n        }\n      },\n      \"end\": \"(?=$)\",\n      \"patterns\": [{\n        \"captures\": {\n          \"0\": {\n            \"name\": \"string.quoted.double.cs\"\n          }\n        },\n        \"match\": '\\\\\"[^\"]*\\\\\"'\n      }]\n    },\n    \"preprocessor-pragma-checksum\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"keyword.preprocessor.pragma.cs\"\n        },\n        \"2\": {\n          \"name\": \"keyword.preprocessor.checksum.cs\"\n        },\n        \"3\": {\n          \"name\": \"string.quoted.double.cs\"\n        },\n        \"4\": {\n          \"name\": \"string.quoted.double.cs\"\n        },\n        \"5\": {\n          \"name\": \"string.quoted.double.cs\"\n        }\n      },\n      \"match\": '\\\\b(pragma)\\\\b\\\\s*\\\\b(checksum)\\\\b\\\\s*(\\\\\"[^\"]*\\\\\")\\\\s*(\\\\\"[^\"]*\\\\\")\\\\s*(\\\\\"[^\"]*\\\\\")'\n    },\n    \"preprocessor-pragma-warning\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"keyword.preprocessor.pragma.cs\"\n        },\n        \"2\": {\n          \"name\": \"keyword.preprocessor.warning.cs\"\n        },\n        \"3\": {\n          \"name\": \"keyword.preprocessor.disable.cs\"\n        },\n        \"4\": {\n          \"name\": \"keyword.preprocessor.restore.cs\"\n        },\n        \"5\": {\n          \"patterns\": [{\n            \"captures\": {\n              \"0\": {\n                \"name\": \"constant.numeric.decimal.cs\"\n              }\n            },\n            \"match\": \"[0-9]+\"\n          }, {\n            \"include\": \"#punctuation-comma\"\n          }]\n        }\n      },\n      \"match\": \"\\\\b(pragma)\\\\b\\\\s*\\\\b(warning)\\\\b\\\\s*\\\\b(?:(disable)|(restore))\\\\b(\\\\s*[0-9]+(?:\\\\s*,\\\\s*[0-9]+)?)?\"\n    },\n    \"preprocessor-r\": {\n      \"begin\": \"\\\\b(r)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.preprocessor.r.cs\"\n        }\n      },\n      \"end\": \"(?=$)\",\n      \"patterns\": [{\n        \"captures\": {\n          \"0\": {\n            \"name\": \"string.quoted.double.cs\"\n          }\n        },\n        \"match\": '\\\\\"[^\"]*\\\\\"'\n      }]\n    },\n    \"preprocessor-region\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"keyword.preprocessor.region.cs\"\n        },\n        \"2\": {\n          \"name\": \"string.unquoted.preprocessor.message.cs\"\n        }\n      },\n      \"match\": \"\\\\b(region)\\\\b\\\\s*(.*)(?=$)\"\n    },\n    \"preprocessor-warning-or-error\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"keyword.preprocessor.warning.cs\"\n        },\n        \"2\": {\n          \"name\": \"keyword.preprocessor.error.cs\"\n        },\n        \"3\": {\n          \"name\": \"string.unquoted.preprocessor.message.cs\"\n        }\n      },\n      \"match\": \"\\\\b(?:(warning)|(error))\\\\b\\\\s*(.*)(?=$)\"\n    },\n    \"property-accessors\": {\n      \"begin\": \"\\\\{\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.curlybrace.open.cs\"\n        }\n      },\n      \"end\": \"\\\\}\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.curlybrace.close.cs\"\n        }\n      },\n      \"patterns\": [{\n        \"include\": \"#comment\"\n      }, {\n        \"include\": \"#attribute-section\"\n      }, {\n        \"match\": \"\\\\b(private|protected|internal)\\\\b\",\n        \"name\": \"storage.modifier.$1.cs\"\n      }, {\n        \"begin\": \"\\\\b(get)\\\\b\\\\s*(?=\\\\{|;|=>|//|/\\\\*|$)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"storage.type.accessor.$1.cs\"\n          }\n        },\n        \"end\": \"(?<=\\\\}|;)|(?=\\\\})\",\n        \"patterns\": [{\n          \"include\": \"#accessor-getter\"\n        }]\n      }, {\n        \"begin\": \"\\\\b(set|init)\\\\b\\\\s*(?=\\\\{|;|=>|//|/\\\\*|$)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"storage.type.accessor.$1.cs\"\n          }\n        },\n        \"end\": \"(?<=\\\\}|;)|(?=\\\\})\",\n        \"patterns\": [{\n          \"include\": \"#accessor-setter\"\n        }]\n      }]\n    },\n    \"property-declaration\": {\n      \"begin\": \"(?x)\\n\\n# The negative lookahead below ensures that we don't match nested types\\n# or other declarations as properties.\\n(?![[:word:][:space:]]*\\\\b(?:class|interface|struct|enum|event)\\\\b)\\n\\n(?<return_type>\\n(?<type_name>\\n(?:\\n(?:ref\\\\s+(?:readonly\\\\s+)?)?\\n(?:\\n(?:(?<identifier>@?[_[:alpha:]][_[:alnum:]]*)\\\\s*\\\\:\\\\:\\\\s*)?\\n(?<name_and_type_args>\\n\\\\g<identifier>\\\\s*\\n(?<type_args>\\\\s*<(?:[^<>]|\\\\g<type_args>)+>\\\\s*)?\\n)\\n(?:\\\\s*\\\\.\\\\s*\\\\g<name_and_type_args>)* |\\n(?<tuple>\\\\s*\\\\((?:[^\\\\(\\\\)]|\\\\g<tuple>)+\\\\))\\n)\\n(?:\\\\s*\\\\?\\\\s*)?\\n(?:\\\\s*\\n\\\\[\\n(?:\\\\s*,\\\\s*)*\\n\\\\]\\n\\\\s*\\n(?:\\\\?)?\\n\\\\s*\\n)*\\n)\\n)\\\\s+\\n)\\n(?<interface_name>\\\\g<type_name>\\\\s*\\\\.\\\\s*)?\\n(?<property_name>\\\\g<identifier>)\\\\s*\\n(?=\\\\{|=>|//|/\\\\*|$)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"patterns\": [{\n            \"include\": \"#type\"\n          }]\n        },\n        \"7\": {\n          \"patterns\": [{\n            \"include\": \"#type\"\n          }, {\n            \"include\": \"#punctuation-accessor\"\n          }]\n        },\n        \"8\": {\n          \"name\": \"entity.name.variable.property.cs\"\n        }\n      },\n      \"end\": \"(?<=\\\\})|(?=;)\",\n      \"patterns\": [{\n        \"include\": \"#comment\"\n      }, {\n        \"include\": \"#property-accessors\"\n      }, {\n        \"include\": \"#accessor-getter-expression\"\n      }, {\n        \"include\": \"#variable-initializer\"\n      }, {\n        \"include\": \"#class-or-struct-members\"\n      }]\n    },\n    \"property-pattern\": {\n      \"begin\": \"(?={)\",\n      \"end\": \"(?=[)}\\\\],;:?=&|^]|!=|\\\\b(and|or|when)\\\\b)\",\n      \"patterns\": [{\n        \"begin\": \"\\\\{\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.curlybrace.open.cs\"\n          }\n        },\n        \"end\": \"\\\\}\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.curlybrace.close.cs\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#subpattern\"\n        }, {\n          \"include\": \"#punctuation-comma\"\n        }]\n      }, {\n        \"begin\": \"(?<=\\\\})\",\n        \"end\": \"(?=[)}\\\\],;:?=&|^]|!=|\\\\b(and|or|when)\\\\b)\",\n        \"patterns\": [{\n          \"include\": \"#intrusive\"\n        }, {\n          \"include\": \"#simple-designation-pattern\"\n        }]\n      }]\n    },\n    \"punctuation-accessor\": {\n      \"match\": \"\\\\.\",\n      \"name\": \"punctuation.accessor.cs\"\n    },\n    \"punctuation-comma\": {\n      \"match\": \",\",\n      \"name\": \"punctuation.separator.comma.cs\"\n    },\n    \"punctuation-semicolon\": {\n      \"match\": \";\",\n      \"name\": \"punctuation.terminator.statement.cs\"\n    },\n    \"query-body\": {\n      \"patterns\": [{\n        \"include\": \"#let-clause\"\n      }, {\n        \"include\": \"#where-clause\"\n      }, {\n        \"include\": \"#join-clause\"\n      }, {\n        \"include\": \"#orderby-clause\"\n      }, {\n        \"include\": \"#select-clause\"\n      }, {\n        \"include\": \"#group-clause\"\n      }]\n    },\n    \"query-expression\": {\n      \"begin\": \"(?x)\\n\\\\b(from)\\\\b\\\\s*\\n(?<type_name>\\n(?:\\n(?:\\n(?:(?<identifier>@?[_[:alpha:]][_[:alnum:]]*)\\\\s*\\\\:\\\\:\\\\s*)?\\n(?<name_and_type_args>\\n\\\\g<identifier>\\\\s*\\n(?<type_args>\\\\s*<(?:[^<>]|\\\\g<type_args>)+>\\\\s*)?\\n)\\n(?:\\\\s*\\\\.\\\\s*\\\\g<name_and_type_args>)* |\\n(?<tuple>\\\\s*\\\\((?:[^\\\\(\\\\)]|\\\\g<tuple>)+\\\\))\\n)\\n(?:\\\\s*\\\\?\\\\s*)?\\n(?:\\\\s*\\n\\\\[\\n(?:\\\\s*,\\\\s*)*\\n\\\\]\\n\\\\s*\\n(?:\\\\?)?\\n\\\\s*\\n)*\\n)\\n)?\\n\\\\s+(\\\\g<identifier>)\\\\b\\\\s*\\n\\\\b(in)\\\\b\\\\s*\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.operator.expression.query.from.cs\"\n        },\n        \"2\": {\n          \"patterns\": [{\n            \"include\": \"#type\"\n          }]\n        },\n        \"7\": {\n          \"name\": \"entity.name.variable.range-variable.cs\"\n        },\n        \"8\": {\n          \"name\": \"keyword.operator.expression.query.in.cs\"\n        }\n      },\n      \"end\": \"(?=;|\\\\))\",\n      \"patterns\": [{\n        \"include\": \"#query-body\"\n      }, {\n        \"include\": \"#expression\"\n      }]\n    },\n    \"raw-interpolated-string\": {\n      \"patterns\": [{\n        \"include\": \"#raw-interpolated-string-five-or-more-quote-one-or-more-interpolation\"\n      }, {\n        \"include\": \"#raw-interpolated-string-three-or-more-quote-three-or-more-interpolation\"\n      }, {\n        \"include\": \"#raw-interpolated-string-quadruple-quote-double-interpolation\"\n      }, {\n        \"include\": \"#raw-interpolated-string-quadruple-quote-single-interpolation\"\n      }, {\n        \"include\": \"#raw-interpolated-string-triple-quote-double-interpolation\"\n      }, {\n        \"include\": \"#raw-interpolated-string-triple-quote-single-interpolation\"\n      }]\n    },\n    \"raw-interpolated-string-five-or-more-quote-one-or-more-interpolation\": {\n      \"begin\": '\\\\$+\"\"\"\"\"+',\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.begin.cs\"\n        }\n      },\n      \"end\": '\"\"\"\"\"+',\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.end.cs\"\n        }\n      },\n      \"name\": \"string.quoted.double.cs\"\n    },\n    \"raw-interpolated-string-quadruple-quote-double-interpolation\": {\n      \"begin\": '\\\\$\\\\$\"\"\"\"',\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.begin.cs\"\n        }\n      },\n      \"end\": '\"\"\"\"',\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.end.cs\"\n        }\n      },\n      \"name\": \"string.quoted.double.cs\",\n      \"patterns\": [{\n        \"include\": \"#double-raw-interpolation\"\n      }]\n    },\n    \"raw-interpolated-string-quadruple-quote-single-interpolation\": {\n      \"begin\": '\\\\$\"\"\"\"',\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.begin.cs\"\n        }\n      },\n      \"end\": '\"\"\"\"',\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.end.cs\"\n        }\n      },\n      \"name\": \"string.quoted.double.cs\",\n      \"patterns\": [{\n        \"include\": \"#raw-interpolation\"\n      }]\n    },\n    \"raw-interpolated-string-three-or-more-quote-three-or-more-interpolation\": {\n      \"begin\": '\\\\$\\\\$\\\\$+\"\"\"+',\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.begin.cs\"\n        }\n      },\n      \"end\": '\"\"\"+',\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.end.cs\"\n        }\n      },\n      \"name\": \"string.quoted.double.cs\"\n    },\n    \"raw-interpolated-string-triple-quote-double-interpolation\": {\n      \"begin\": '\\\\$\\\\$\"\"\"',\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.begin.cs\"\n        }\n      },\n      \"end\": '\"\"\"',\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.end.cs\"\n        }\n      },\n      \"name\": \"string.quoted.double.cs\",\n      \"patterns\": [{\n        \"include\": \"#double-raw-interpolation\"\n      }]\n    },\n    \"raw-interpolated-string-triple-quote-single-interpolation\": {\n      \"begin\": '\\\\$\"\"\"',\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.begin.cs\"\n        }\n      },\n      \"end\": '\"\"\"',\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.end.cs\"\n        }\n      },\n      \"name\": \"string.quoted.double.cs\",\n      \"patterns\": [{\n        \"include\": \"#raw-interpolation\"\n      }]\n    },\n    \"raw-interpolation\": {\n      \"begin\": \"(?<=[^\\\\{]|^)((?:\\\\{)*)(\\\\{)(?=[^\\\\{])\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"string.quoted.double.cs\"\n        },\n        \"2\": {\n          \"name\": \"punctuation.definition.interpolation.begin.cs\"\n        }\n      },\n      \"end\": \"\\\\}\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.interpolation.end.cs\"\n        }\n      },\n      \"name\": \"meta.interpolation.cs\",\n      \"patterns\": [{\n        \"include\": \"#expression\"\n      }]\n    },\n    \"raw-string-literal\": {\n      \"patterns\": [{\n        \"include\": \"#raw-string-literal-more\"\n      }, {\n        \"include\": \"#raw-string-literal-quadruple\"\n      }, {\n        \"include\": \"#raw-string-literal-triple\"\n      }]\n    },\n    \"raw-string-literal-more\": {\n      \"begin\": '\"\"\"\"\"+',\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.begin.cs\"\n        }\n      },\n      \"end\": '\"\"\"\"\"+',\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.end.cs\"\n        }\n      },\n      \"name\": \"string.quoted.double.cs\"\n    },\n    \"raw-string-literal-quadruple\": {\n      \"begin\": '\"\"\"\"',\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.begin.cs\"\n        }\n      },\n      \"end\": '\"\"\"\"',\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.end.cs\"\n        }\n      },\n      \"name\": \"string.quoted.double.cs\"\n    },\n    \"raw-string-literal-triple\": {\n      \"begin\": '\"\"\"',\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.begin.cs\"\n        }\n      },\n      \"end\": '\"\"\"',\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.end.cs\"\n        }\n      },\n      \"name\": \"string.quoted.double.cs\"\n    },\n    \"readonly-modifier\": {\n      \"match\": \"\\\\breadonly\\\\b\",\n      \"name\": \"storage.modifier.readonly.cs\"\n    },\n    \"record-declaration\": {\n      \"begin\": \"(?=\\\\brecord\\\\b)\",\n      \"end\": \"(?<=\\\\})|(?=;)\",\n      \"patterns\": [{\n        \"begin\": \"(?x)\\n(record)\\\\b\\\\s+\\n(@?[_[:alpha:]][_[:alnum:]]*)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"storage.type.record.cs\"\n          },\n          \"2\": {\n            \"name\": \"entity.name.type.class.cs\"\n          }\n        },\n        \"end\": \"(?=\\\\{)|(?=;)\",\n        \"patterns\": [{\n          \"include\": \"#comment\"\n        }, {\n          \"include\": \"#type-parameter-list\"\n        }, {\n          \"include\": \"#parenthesized-parameter-list\"\n        }, {\n          \"include\": \"#base-types\"\n        }, {\n          \"include\": \"#generic-constraints\"\n        }]\n      }, {\n        \"begin\": \"\\\\{\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.curlybrace.open.cs\"\n          }\n        },\n        \"end\": \"\\\\}\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.curlybrace.close.cs\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#class-or-struct-members\"\n        }]\n      }, {\n        \"include\": \"#preprocessor\"\n      }, {\n        \"include\": \"#comment\"\n      }]\n    },\n    \"ref-modifier\": {\n      \"match\": \"\\\\bref\\\\b\",\n      \"name\": \"storage.modifier.ref.cs\"\n    },\n    \"relational-pattern\": {\n      \"begin\": \"<=?|>=?\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"keyword.operator.relational.cs\"\n        }\n      },\n      \"end\": \"(?=[)}\\\\],;:?=&|^]|!=|\\\\b(and|or|when)\\\\b)\",\n      \"patterns\": [{\n        \"include\": \"#expression\"\n      }]\n    },\n    \"return-statement\": {\n      \"begin\": \"(?<!\\\\.)\\\\b(return)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.flow.return.cs\"\n        }\n      },\n      \"end\": \"(?=[;}])\",\n      \"patterns\": [{\n        \"include\": \"#ref-modifier\"\n      }, {\n        \"include\": \"#expression\"\n      }]\n    },\n    \"script-top-level\": {\n      \"patterns\": [{\n        \"include\": \"#statement\"\n      }, {\n        \"include\": \"#method-declaration\"\n      }, {\n        \"include\": \"#punctuation-semicolon\"\n      }]\n    },\n    \"select-clause\": {\n      \"begin\": \"\\\\b(select)\\\\b\\\\s*\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.operator.expression.query.select.cs\"\n        }\n      },\n      \"end\": \"(?=;|\\\\))\",\n      \"patterns\": [{\n        \"include\": \"#query-body\"\n      }, {\n        \"include\": \"#expression\"\n      }]\n    },\n    \"simple-designation-pattern\": {\n      \"patterns\": [{\n        \"include\": \"#discard-pattern\"\n      }, {\n        \"match\": \"@?[_[:alpha:]][_[:alnum:]]*\",\n        \"name\": \"entity.name.variable.local.cs\"\n      }]\n    },\n    \"slice-pattern\": {\n      \"match\": \"\\\\.\\\\.\",\n      \"name\": \"keyword.operator.range.cs\"\n    },\n    \"statement\": {\n      \"patterns\": [{\n        \"include\": \"#preprocessor\"\n      }, {\n        \"include\": \"#comment\"\n      }, {\n        \"include\": \"#while-statement\"\n      }, {\n        \"include\": \"#do-statement\"\n      }, {\n        \"include\": \"#for-statement\"\n      }, {\n        \"include\": \"#foreach-statement\"\n      }, {\n        \"include\": \"#if-statement\"\n      }, {\n        \"include\": \"#else-part\"\n      }, {\n        \"include\": \"#goto-statement\"\n      }, {\n        \"include\": \"#return-statement\"\n      }, {\n        \"include\": \"#break-or-continue-statement\"\n      }, {\n        \"include\": \"#throw-statement\"\n      }, {\n        \"include\": \"#yield-statement\"\n      }, {\n        \"include\": \"#await-statement\"\n      }, {\n        \"include\": \"#try-statement\"\n      }, {\n        \"include\": \"#expression-operator-expression\"\n      }, {\n        \"include\": \"#context-control-statement\"\n      }, {\n        \"include\": \"#context-control-paren-statement\"\n      }, {\n        \"include\": \"#labeled-statement\"\n      }, {\n        \"include\": \"#object-creation-expression\"\n      }, {\n        \"include\": \"#array-creation-expression\"\n      }, {\n        \"include\": \"#anonymous-object-creation-expression\"\n      }, {\n        \"include\": \"#local-declaration\"\n      }, {\n        \"include\": \"#block\"\n      }, {\n        \"include\": \"#expression\"\n      }, {\n        \"include\": \"#punctuation-semicolon\"\n      }]\n    },\n    \"storage-modifier\": {\n      \"match\": \"(?<!\\\\.)\\\\b(new|public|protected|internal|private|abstract|virtual|override|sealed|static|partial|readonly|volatile|const|extern|async|unsafe|ref|required|file)\\\\b\",\n      \"name\": \"storage.modifier.$1.cs\"\n    },\n    \"string-character-escape\": {\n      \"match\": \"\\\\\\\\(x[0-9a-fA-F]{1,4}|U[0-9a-fA-F]{8}|u[0-9a-fA-F]{4}|.)\",\n      \"name\": \"constant.character.escape.cs\"\n    },\n    \"string-literal\": {\n      \"begin\": '(?<!@)\"',\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.begin.cs\"\n        }\n      },\n      \"end\": '(\")|((?:[^\\\\\\\\\\\\n])$)',\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.definition.string.end.cs\"\n        },\n        \"2\": {\n          \"name\": \"invalid.illegal.newline.cs\"\n        }\n      },\n      \"name\": \"string.quoted.double.cs\",\n      \"patterns\": [{\n        \"include\": \"#string-character-escape\"\n      }]\n    },\n    \"struct-declaration\": {\n      \"begin\": \"(?=(\\\\brecord\\\\b\\\\s+)?\\\\bstruct\\\\b)\",\n      \"end\": \"(?<=\\\\})|(?=;)\",\n      \"patterns\": [{\n        \"begin\": \"(?x)\\n(\\\\b(record)\\\\b\\\\s+)?\\n(struct)\\\\b\\\\s+\\n(@?[_[:alpha:]][_[:alnum:]]*)\",\n        \"beginCaptures\": {\n          \"2\": {\n            \"name\": \"storage.type.record.cs\"\n          },\n          \"3\": {\n            \"name\": \"storage.type.struct.cs\"\n          },\n          \"4\": {\n            \"name\": \"entity.name.type.struct.cs\"\n          }\n        },\n        \"end\": \"(?=\\\\{)|(?=;)\",\n        \"patterns\": [{\n          \"include\": \"#comment\"\n        }, {\n          \"include\": \"#type-parameter-list\"\n        }, {\n          \"include\": \"#parenthesized-parameter-list\"\n        }, {\n          \"include\": \"#base-types\"\n        }, {\n          \"include\": \"#generic-constraints\"\n        }]\n      }, {\n        \"begin\": \"\\\\{\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.curlybrace.open.cs\"\n          }\n        },\n        \"end\": \"\\\\}\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.curlybrace.close.cs\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#class-or-struct-members\"\n        }]\n      }, {\n        \"include\": \"#preprocessor\"\n      }, {\n        \"include\": \"#comment\"\n      }]\n    },\n    \"subpattern\": {\n      \"patterns\": [{\n        \"captures\": {\n          \"1\": {\n            \"patterns\": [{\n              \"match\": \"\\\\@?[_[:alpha:]][_[:alnum:]]*\",\n              \"name\": \"variable.other.object.property.cs\"\n            }, {\n              \"include\": \"#punctuation-accessor\"\n            }]\n          },\n          \"2\": {\n            \"name\": \"punctuation.separator.colon.cs\"\n          }\n        },\n        \"match\": \"(@?[_[:alpha:]][_[:alnum:]]*(?:\\\\s*\\\\.\\\\s*@?[_[:alpha:]][_[:alnum:]]*)*)\\\\s*(:)\"\n      }, {\n        \"include\": \"#pattern\"\n      }]\n    },\n    \"switch-expression\": {\n      \"begin\": \"\\\\{\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.curlybrace.open.cs\"\n        }\n      },\n      \"end\": \"\\\\}\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.curlybrace.close.cs\"\n        }\n      },\n      \"patterns\": [{\n        \"include\": \"#punctuation-comma\"\n      }, {\n        \"begin\": \"=>\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"keyword.operator.arrow.cs\"\n          }\n        },\n        \"end\": \"(?=,|})\",\n        \"patterns\": [{\n          \"include\": \"#expression\"\n        }]\n      }, {\n        \"begin\": \"\\\\b(when)\\\\b\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.conditional.when.cs\"\n          }\n        },\n        \"end\": \"(?==>|,|})\",\n        \"patterns\": [{\n          \"include\": \"#case-guard\"\n        }]\n      }, {\n        \"begin\": \"(?!\\\\s)\",\n        \"end\": \"(?=\\\\bwhen\\\\b|=>|,|})\",\n        \"patterns\": [{\n          \"include\": \"#pattern\"\n        }]\n      }]\n    },\n    \"switch-label\": {\n      \"begin\": \"\\\\b(case|default)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.conditional.$1.cs\"\n        }\n      },\n      \"end\": \"(:)|(?=})\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.separator.colon.cs\"\n        }\n      },\n      \"patterns\": [{\n        \"begin\": \"\\\\b(when)\\\\b\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.conditional.when.cs\"\n          }\n        },\n        \"end\": \"(?=:|})\",\n        \"patterns\": [{\n          \"include\": \"#case-guard\"\n        }]\n      }, {\n        \"begin\": \"(?!\\\\s)\",\n        \"end\": \"(?=\\\\bwhen\\\\b|:|})\",\n        \"patterns\": [{\n          \"include\": \"#pattern\"\n        }]\n      }]\n    },\n    \"switch-statement\": {\n      \"patterns\": [{\n        \"include\": \"#intrusive\"\n      }, {\n        \"begin\": \"\\\\(\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.parenthesis.open.cs\"\n          }\n        },\n        \"end\": \"\\\\)\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.parenthesis.close.cs\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#expression\"\n        }]\n      }, {\n        \"begin\": \"\\\\{\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.curlybrace.open.cs\"\n          }\n        },\n        \"end\": \"\\\\}\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.curlybrace.close.cs\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#switch-label\"\n        }, {\n          \"include\": \"#statement\"\n        }]\n      }]\n    },\n    \"switch-statement-or-expression\": {\n      \"begin\": \"(?<!\\\\.)\\\\b(switch)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.conditional.switch.cs\"\n        }\n      },\n      \"end\": \"(?<=})|(?=})\",\n      \"patterns\": [{\n        \"include\": \"#intrusive\"\n      }, {\n        \"begin\": \"(?=\\\\()\",\n        \"end\": \"(?<=\\\\})|(?=\\\\})\",\n        \"patterns\": [{\n          \"include\": \"#switch-statement\"\n        }]\n      }, {\n        \"begin\": \"(?=\\\\{)\",\n        \"end\": \"(?<=\\\\})|(?=\\\\})\",\n        \"patterns\": [{\n          \"include\": \"#switch-expression\"\n        }]\n      }]\n    },\n    \"throw-expression\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"keyword.control.flow.throw.cs\"\n        }\n      },\n      \"match\": \"\\\\b(throw)\\\\b\"\n    },\n    \"throw-statement\": {\n      \"begin\": \"(?<!\\\\.)\\\\b(throw)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.flow.throw.cs\"\n        }\n      },\n      \"end\": \"(?=[;}])\",\n      \"patterns\": [{\n        \"include\": \"#expression\"\n      }]\n    },\n    \"try-block\": {\n      \"begin\": \"(?<!\\\\.)\\\\b(try)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.exception.try.cs\"\n        }\n      },\n      \"end\": \"(?<=\\\\})\",\n      \"patterns\": [{\n        \"include\": \"#comment\"\n      }, {\n        \"include\": \"#block\"\n      }]\n    },\n    \"try-statement\": {\n      \"patterns\": [{\n        \"include\": \"#try-block\"\n      }, {\n        \"include\": \"#catch-clause\"\n      }, {\n        \"include\": \"#finally-clause\"\n      }]\n    },\n    \"tuple-declaration-deconstruction-element-list\": {\n      \"begin\": \"\\\\(\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.parenthesis.open.cs\"\n        }\n      },\n      \"end\": \"\\\\)\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.parenthesis.close.cs\"\n        }\n      },\n      \"patterns\": [{\n        \"include\": \"#comment\"\n      }, {\n        \"include\": \"#tuple-declaration-deconstruction-element-list\"\n      }, {\n        \"include\": \"#declaration-expression-tuple\"\n      }, {\n        \"include\": \"#punctuation-comma\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"entity.name.variable.tuple-element.cs\"\n          }\n        },\n        \"match\": \"(?x)\\n(@?[_[:alpha:]][_[:alnum:]]*)\\\\b\\\\s*\\n(?=[,)])\"\n      }]\n    },\n    \"tuple-deconstruction-assignment\": {\n      \"captures\": {\n        \"1\": {\n          \"patterns\": [{\n            \"include\": \"#tuple-deconstruction-element-list\"\n          }]\n        }\n      },\n      \"match\": \"(?x)\\n(?<tuple>\\\\s*\\\\((?:[^\\\\(\\\\)]|\\\\g<tuple>)+\\\\))\\\\s*\\n(?!=>|==)(?==)\"\n    },\n    \"tuple-deconstruction-element-list\": {\n      \"begin\": \"\\\\(\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.parenthesis.open.cs\"\n        }\n      },\n      \"end\": \"\\\\)\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.parenthesis.close.cs\"\n        }\n      },\n      \"patterns\": [{\n        \"include\": \"#comment\"\n      }, {\n        \"include\": \"#tuple-deconstruction-element-list\"\n      }, {\n        \"include\": \"#declaration-expression-tuple\"\n      }, {\n        \"include\": \"#punctuation-comma\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"variable.other.readwrite.cs\"\n          }\n        },\n        \"match\": \"(?x)\\n(@?[_[:alpha:]][_[:alnum:]]*)\\\\b\\\\s*\\n(?=[,)])\"\n      }]\n    },\n    \"tuple-element\": {\n      \"captures\": {\n        \"1\": {\n          \"patterns\": [{\n            \"include\": \"#type\"\n          }]\n        },\n        \"6\": {\n          \"name\": \"entity.name.variable.tuple-element.cs\"\n        }\n      },\n      \"match\": \"(?x)\\n(?<type_name>\\n(?:\\n(?:\\n(?:(?<identifier>@?[_[:alpha:]][_[:alnum:]]*)\\\\s*\\\\:\\\\:\\\\s*)?\\n(?<name_and_type_args>\\n\\\\g<identifier>\\\\s*\\n(?<type_args>\\\\s*<(?:[^<>]|\\\\g<type_args>)+>\\\\s*)?\\n)\\n(?:\\\\s*\\\\.\\\\s*\\\\g<name_and_type_args>)* |\\n(?<tuple>\\\\s*\\\\((?:[^\\\\(\\\\)]|\\\\g<tuple>)+\\\\))\\n)\\n(?:\\\\s*\\\\?\\\\s*)?\\n(?:\\\\s*\\n\\\\[\\n(?:\\\\s*,\\\\s*)*\\n\\\\]\\n\\\\s*\\n(?:\\\\?)?\\n\\\\s*\\n)*\\n)\\n)\\n(?:(?<tuple_name>\\\\g<identifier>)\\\\b)?\"\n    },\n    \"tuple-literal\": {\n      \"begin\": \"(\\\\()(?=.*[:,])\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.parenthesis.open.cs\"\n        }\n      },\n      \"end\": \"\\\\)\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.parenthesis.close.cs\"\n        }\n      },\n      \"patterns\": [{\n        \"include\": \"#comment\"\n      }, {\n        \"include\": \"#tuple-literal-element\"\n      }, {\n        \"include\": \"#expression\"\n      }, {\n        \"include\": \"#punctuation-comma\"\n      }]\n    },\n    \"tuple-literal-element\": {\n      \"begin\": \"(?x)\\n(@?[_[:alpha:]][_[:alnum:]]*)\\\\s*\\n(?=:)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"entity.name.variable.tuple-element.cs\"\n        }\n      },\n      \"end\": \"(:)\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.separator.colon.cs\"\n        }\n      }\n    },\n    \"tuple-type\": {\n      \"begin\": \"\\\\(\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.parenthesis.open.cs\"\n        }\n      },\n      \"end\": \"\\\\)\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.parenthesis.close.cs\"\n        }\n      },\n      \"patterns\": [{\n        \"include\": \"#tuple-element\"\n      }, {\n        \"include\": \"#punctuation-comma\"\n      }]\n    },\n    \"type\": {\n      \"patterns\": [{\n        \"include\": \"#comment\"\n      }, {\n        \"include\": \"#ref-modifier\"\n      }, {\n        \"include\": \"#readonly-modifier\"\n      }, {\n        \"include\": \"#tuple-type\"\n      }, {\n        \"include\": \"#type-builtin\"\n      }, {\n        \"include\": \"#type-name\"\n      }, {\n        \"include\": \"#type-arguments\"\n      }, {\n        \"include\": \"#type-array-suffix\"\n      }, {\n        \"include\": \"#type-nullable-suffix\"\n      }, {\n        \"include\": \"#type-pointer-suffix\"\n      }]\n    },\n    \"type-arguments\": {\n      \"begin\": \"<\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.typeparameters.begin.cs\"\n        }\n      },\n      \"end\": \">\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.typeparameters.end.cs\"\n        }\n      },\n      \"patterns\": [{\n        \"include\": \"#type\"\n      }, {\n        \"include\": \"#punctuation-comma\"\n      }]\n    },\n    \"type-array-suffix\": {\n      \"begin\": \"\\\\[\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.squarebracket.open.cs\"\n        }\n      },\n      \"end\": \"\\\\]\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.squarebracket.close.cs\"\n        }\n      },\n      \"patterns\": [{\n        \"include\": \"#intrusive\"\n      }, {\n        \"include\": \"#punctuation-comma\"\n      }]\n    },\n    \"type-builtin\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"keyword.type.$1.cs\"\n        }\n      },\n      \"match\": \"\\\\b(bool|s?byte|u?short|n?u?int|u?long|float|double|decimal|char|string|object|void|dynamic)\\\\b\"\n    },\n    \"type-declarations\": {\n      \"patterns\": [{\n        \"include\": \"#preprocessor\"\n      }, {\n        \"include\": \"#comment\"\n      }, {\n        \"include\": \"#storage-modifier\"\n      }, {\n        \"include\": \"#class-declaration\"\n      }, {\n        \"include\": \"#delegate-declaration\"\n      }, {\n        \"include\": \"#enum-declaration\"\n      }, {\n        \"include\": \"#interface-declaration\"\n      }, {\n        \"include\": \"#struct-declaration\"\n      }, {\n        \"include\": \"#record-declaration\"\n      }, {\n        \"include\": \"#attribute-section\"\n      }, {\n        \"include\": \"#punctuation-semicolon\"\n      }]\n    },\n    \"type-name\": {\n      \"patterns\": [{\n        \"captures\": {\n          \"1\": {\n            \"name\": \"entity.name.type.alias.cs\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.separator.coloncolon.cs\"\n          }\n        },\n        \"match\": \"(@?[_[:alpha:]][_[:alnum:]]*)\\\\s*(\\\\:\\\\:)\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"entity.name.type.cs\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.accessor.cs\"\n          }\n        },\n        \"match\": \"(@?[_[:alpha:]][_[:alnum:]]*)\\\\s*(\\\\.)\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.accessor.cs\"\n          },\n          \"2\": {\n            \"name\": \"entity.name.type.cs\"\n          }\n        },\n        \"match\": \"(\\\\.)\\\\s*(@?[_[:alpha:]][_[:alnum:]]*)\"\n      }, {\n        \"match\": \"@?[_[:alpha:]][_[:alnum:]]*\",\n        \"name\": \"entity.name.type.cs\"\n      }]\n    },\n    \"type-nullable-suffix\": {\n      \"match\": \"\\\\?\",\n      \"name\": \"punctuation.separator.question-mark.cs\"\n    },\n    \"type-operator-expression\": {\n      \"begin\": \"\\\\b(default|sizeof|typeof)\\\\s*(\\\\()\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.operator.expression.$1.cs\"\n        },\n        \"2\": {\n          \"name\": \"punctuation.parenthesis.open.cs\"\n        }\n      },\n      \"end\": \"\\\\)\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.parenthesis.close.cs\"\n        }\n      },\n      \"patterns\": [{\n        \"include\": \"#type\"\n      }]\n    },\n    \"type-parameter-list\": {\n      \"begin\": \"\\\\<\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.typeparameters.begin.cs\"\n        }\n      },\n      \"end\": \"\\\\>\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.typeparameters.end.cs\"\n        }\n      },\n      \"patterns\": [{\n        \"match\": \"\\\\b(in|out)\\\\b\",\n        \"name\": \"storage.modifier.$1.cs\"\n      }, {\n        \"match\": \"(@?[_[:alpha:]][_[:alnum:]]*)\\\\b\",\n        \"name\": \"entity.name.type.type-parameter.cs\"\n      }, {\n        \"include\": \"#comment\"\n      }, {\n        \"include\": \"#punctuation-comma\"\n      }, {\n        \"include\": \"#attribute-section\"\n      }]\n    },\n    \"type-pattern\": {\n      \"begin\": \"(?=@?[_[:alpha:]][_[:alnum:]]*)\",\n      \"end\": \"(?=[)}\\\\],;:?=&|^]|!=|\\\\b(and|or|when)\\\\b)\",\n      \"patterns\": [{\n        \"begin\": \"\\\\G\",\n        \"end\": \"(?!\\\\G[@_[:alpha:]])(?=[\\\\({@_[:alpha:])}\\\\],;:=&|^]|(?:\\\\s|^)\\\\?|!=|\\\\b(and|or|when)\\\\b)\",\n        \"patterns\": [{\n          \"include\": \"#intrusive\"\n        }, {\n          \"include\": \"#type-subpattern\"\n        }]\n      }, {\n        \"begin\": \"(?=[\\\\({@_[:alpha:]])\",\n        \"end\": \"(?=[)}\\\\],;:?=&|^]|!=|\\\\b(and|or|when)\\\\b)\",\n        \"patterns\": [{\n          \"include\": \"#intrusive\"\n        }, {\n          \"include\": \"#positional-pattern\"\n        }, {\n          \"include\": \"#property-pattern\"\n        }, {\n          \"include\": \"#simple-designation-pattern\"\n        }]\n      }]\n    },\n    \"type-pointer-suffix\": {\n      \"match\": \"\\\\*\",\n      \"name\": \"punctuation.separator.asterisk.cs\"\n    },\n    \"type-subpattern\": {\n      \"patterns\": [{\n        \"include\": \"#type-builtin\"\n      }, {\n        \"begin\": \"(@?[_[:alpha:]][_[:alnum:]]*)\\\\s*(::)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"entity.name.type.alias.cs\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.separator.coloncolon.cs\"\n          }\n        },\n        \"end\": \"(?<=[_[:alnum:]])|(?=[.<\\\\[\\\\({)}\\\\],;:?=&|^]|!=|\\\\b(and|or|when)\\\\b)\",\n        \"patterns\": [{\n          \"include\": \"#intrusive\"\n        }, {\n          \"match\": \"\\\\@?[_[:alpha:]][_[:alnum:]]*\",\n          \"name\": \"entity.name.type.cs\"\n        }]\n      }, {\n        \"match\": \"\\\\@?[_[:alpha:]][_[:alnum:]]*\",\n        \"name\": \"entity.name.type.cs\"\n      }, {\n        \"begin\": \"\\\\.\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.accessor.cs\"\n          }\n        },\n        \"end\": \"(?<=[_[:alnum:]])|(?=[<\\\\[\\\\({)}\\\\],;:?=&|^]|!=|\\\\b(and|or|when)\\\\b)\",\n        \"patterns\": [{\n          \"include\": \"#intrusive\"\n        }, {\n          \"match\": \"\\\\@?[_[:alpha:]][_[:alnum:]]*\",\n          \"name\": \"entity.name.type.cs\"\n        }]\n      }, {\n        \"include\": \"#type-arguments\"\n      }, {\n        \"include\": \"#type-array-suffix\"\n      }, {\n        \"match\": \"(?<!\\\\s)\\\\?\",\n        \"name\": \"punctuation.separator.question-mark.cs\"\n      }]\n    },\n    \"using-directive\": {\n      \"patterns\": [{\n        \"begin\": \"\\\\b(?:(global)\\\\s+)?(using)\\\\s+(static)\\\\b\\\\s*(?:(unsafe)\\\\b\\\\s*)?\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.other.directive.global.cs\"\n          },\n          \"2\": {\n            \"name\": \"keyword.other.directive.using.cs\"\n          },\n          \"3\": {\n            \"name\": \"keyword.other.directive.static.cs\"\n          },\n          \"4\": {\n            \"name\": \"storage.modifier.unsafe.cs\"\n          }\n        },\n        \"end\": \"(?=;)\",\n        \"patterns\": [{\n          \"include\": \"#type\"\n        }]\n      }, {\n        \"begin\": \"\\\\b(?:(global)\\\\s+)?(using)\\\\b\\\\s*(?:(unsafe)\\\\b\\\\s*)?(@?[_[:alpha:]][_[:alnum:]]*)\\\\s*(=)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.other.directive.global.cs\"\n          },\n          \"2\": {\n            \"name\": \"keyword.other.directive.using.cs\"\n          },\n          \"3\": {\n            \"name\": \"storage.modifier.unsafe.cs\"\n          },\n          \"4\": {\n            \"name\": \"entity.name.type.alias.cs\"\n          },\n          \"5\": {\n            \"name\": \"keyword.operator.assignment.cs\"\n          }\n        },\n        \"end\": \"(?=;)\",\n        \"patterns\": [{\n          \"include\": \"#comment\"\n        }, {\n          \"include\": \"#type\"\n        }]\n      }, {\n        \"begin\": \"\\\\b(?:(global)\\\\s+)?(using)\\\\b\\\\s*+(?!\\\\(|var\\\\b)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.other.directive.global.cs\"\n          },\n          \"2\": {\n            \"name\": \"keyword.other.directive.using.cs\"\n          }\n        },\n        \"end\": \"(?=;)\",\n        \"patterns\": [{\n          \"include\": \"#comment\"\n        }, {\n          \"match\": \"\\\\@?[_[:alpha:]][_[:alnum:]]*\",\n          \"name\": \"entity.name.type.namespace.cs\"\n        }, {\n          \"include\": \"#punctuation-accessor\"\n        }, {\n          \"include\": \"#operator-assignment\"\n        }]\n      }]\n    },\n    \"using-statement\": {\n      \"begin\": \"\\\\b(using)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.context.using.cs\"\n        }\n      },\n      \"end\": \"(?<=\\\\))|(?=;|})\",\n      \"patterns\": [{\n        \"include\": \"#intrusive\"\n      }, {\n        \"begin\": \"\\\\(\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.parenthesis.open.cs\"\n          }\n        },\n        \"end\": \"\\\\)\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.parenthesis.close.cs\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#intrusive\"\n        }, {\n          \"include\": \"#await-expression\"\n        }, {\n          \"include\": \"#local-variable-declaration\"\n        }, {\n          \"include\": \"#expression\"\n        }]\n      }, {\n        \"include\": \"#local-variable-declaration\"\n      }]\n    },\n    \"var-pattern\": {\n      \"begin\": \"\\\\b(var)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"storage.type.var.cs\"\n        }\n      },\n      \"end\": \"(?=[)}\\\\],;:?=&|^]|!=|\\\\b(and|or|when)\\\\b)\",\n      \"patterns\": [{\n        \"include\": \"#designation-pattern\"\n      }]\n    },\n    \"variable-initializer\": {\n      \"begin\": \"(?<!=|!)(=)(?!=|>)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.operator.assignment.cs\"\n        }\n      },\n      \"end\": \"(?=[,\\\\)\\\\];}])\",\n      \"patterns\": [{\n        \"include\": \"#ref-modifier\"\n      }, {\n        \"include\": \"#expression\"\n      }]\n    },\n    \"verbatim-interpolated-string\": {\n      \"begin\": '(?:\\\\$@|@\\\\$)\"',\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.begin.cs\"\n        }\n      },\n      \"end\": '\"(?=[^\"])',\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.end.cs\"\n        }\n      },\n      \"name\": \"string.quoted.double.cs\",\n      \"patterns\": [{\n        \"include\": \"#verbatim-string-character-escape\"\n      }, {\n        \"include\": \"#interpolation\"\n      }]\n    },\n    \"verbatim-string-character-escape\": {\n      \"match\": '\"\"',\n      \"name\": \"constant.character.escape.cs\"\n    },\n    \"verbatim-string-literal\": {\n      \"begin\": '@\"',\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.begin.cs\"\n        }\n      },\n      \"end\": '\"(?=[^\"])',\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.end.cs\"\n        }\n      },\n      \"name\": \"string.quoted.double.cs\",\n      \"patterns\": [{\n        \"include\": \"#verbatim-string-character-escape\"\n      }]\n    },\n    \"when-clause\": {\n      \"begin\": \"(?<!\\\\.)\\\\b(when)\\\\b\\\\s*(\\\\()\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.exception.when.cs\"\n        },\n        \"2\": {\n          \"name\": \"punctuation.parenthesis.open.cs\"\n        }\n      },\n      \"end\": \"\\\\)\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.parenthesis.close.cs\"\n        }\n      },\n      \"patterns\": [{\n        \"include\": \"#expression\"\n      }, {\n        \"include\": \"#comment\"\n      }]\n    },\n    \"where-clause\": {\n      \"begin\": \"(?x)\\n\\\\b(where)\\\\b\\\\s*\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.operator.expression.query.where.cs\"\n        }\n      },\n      \"end\": \"(?=;|\\\\))\",\n      \"patterns\": [{\n        \"include\": \"#query-body\"\n      }, {\n        \"include\": \"#expression\"\n      }]\n    },\n    \"while-statement\": {\n      \"begin\": \"(?<!\\\\.)\\\\b(while)\\\\b\\\\s*(?=\\\\()\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.loop.while.cs\"\n        }\n      },\n      \"end\": \"(?<=\\\\})|(?=;)\",\n      \"patterns\": [{\n        \"begin\": \"\\\\(\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.parenthesis.open.cs\"\n          }\n        },\n        \"end\": \"\\\\)\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.parenthesis.close.cs\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#expression\"\n        }]\n      }, {\n        \"include\": \"#statement\"\n      }]\n    },\n    \"with-expression\": {\n      \"begin\": \"(?<!\\\\.)\\\\b(with)\\\\b\\\\s*(?=\\\\{|//|/\\\\*|$)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.operator.expression.with.cs\"\n        }\n      },\n      \"end\": \"(?<=\\\\})\",\n      \"patterns\": [{\n        \"include\": \"#comment\"\n      }, {\n        \"include\": \"#initializer-expression\"\n      }]\n    },\n    \"xml-attribute\": {\n      \"patterns\": [{\n        \"captures\": {\n          \"1\": {\n            \"name\": \"entity.other.attribute-name.cs\"\n          },\n          \"2\": {\n            \"name\": \"entity.other.attribute-name.namespace.cs\"\n          },\n          \"3\": {\n            \"name\": \"punctuation.separator.colon.cs\"\n          },\n          \"4\": {\n            \"name\": \"entity.other.attribute-name.localname.cs\"\n          },\n          \"5\": {\n            \"name\": \"punctuation.separator.equals.cs\"\n          }\n        },\n        \"match\": \"(?x)\\n(?:^|\\\\s+)\\n(\\n(?:\\n([-_[:alnum:]]+)\\n(:)\\n)?\\n([-_[:alnum:]]+)\\n)\\n(=)\"\n      }, {\n        \"include\": \"#xml-string\"\n      }]\n    },\n    \"xml-cdata\": {\n      \"begin\": \"<!\\\\[CDATA\\\\[\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.begin.cs\"\n        }\n      },\n      \"end\": \"\\\\]\\\\]>\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.end.cs\"\n        }\n      },\n      \"name\": \"string.unquoted.cdata.cs\"\n    },\n    \"xml-character-entity\": {\n      \"patterns\": [{\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.constant.cs\"\n          },\n          \"3\": {\n            \"name\": \"punctuation.definition.constant.cs\"\n          }\n        },\n        \"match\": \"(?x)\\n(&)\\n(\\n(?:[[:alpha:]:_][[:alnum:]:_.-]*)|\\n(?:\\\\#[[:digit:]]+)|\\n(?:\\\\#x[[:xdigit:]]+)\\n)\\n(;)\",\n        \"name\": \"constant.character.entity.cs\"\n      }, {\n        \"match\": \"&\",\n        \"name\": \"invalid.illegal.bad-ampersand.cs\"\n      }]\n    },\n    \"xml-comment\": {\n      \"begin\": \"<!--\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.comment.cs\"\n        }\n      },\n      \"end\": \"-->\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.comment.cs\"\n        }\n      },\n      \"name\": \"comment.block.cs\"\n    },\n    \"xml-doc-comment\": {\n      \"patterns\": [{\n        \"include\": \"#xml-comment\"\n      }, {\n        \"include\": \"#xml-character-entity\"\n      }, {\n        \"include\": \"#xml-cdata\"\n      }, {\n        \"include\": \"#xml-tag\"\n      }]\n    },\n    \"xml-string\": {\n      \"patterns\": [{\n        \"begin\": \"\\\\'\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.begin.cs\"\n          }\n        },\n        \"end\": \"\\\\'\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.end.cs\"\n          }\n        },\n        \"name\": \"string.quoted.single.cs\",\n        \"patterns\": [{\n          \"include\": \"#xml-character-entity\"\n        }]\n      }, {\n        \"begin\": '\\\\\"',\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.begin.cs\"\n          }\n        },\n        \"end\": '\\\\\"',\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.end.cs\"\n          }\n        },\n        \"name\": \"string.quoted.double.cs\",\n        \"patterns\": [{\n          \"include\": \"#xml-character-entity\"\n        }]\n      }]\n    },\n    \"xml-tag\": {\n      \"begin\": \"(?x)\\n(</?)\\n(\\n(?:\\n([-_[:alnum:]]+)\\n(:)\\n)?\\n([-_[:alnum:]]+)\\n)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.definition.tag.cs\"\n        },\n        \"2\": {\n          \"name\": \"entity.name.tag.cs\"\n        },\n        \"3\": {\n          \"name\": \"entity.name.tag.namespace.cs\"\n        },\n        \"4\": {\n          \"name\": \"punctuation.separator.colon.cs\"\n        },\n        \"5\": {\n          \"name\": \"entity.name.tag.localname.cs\"\n        }\n      },\n      \"end\": \"(/?>)\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.definition.tag.cs\"\n        }\n      },\n      \"name\": \"meta.tag.cs\",\n      \"patterns\": [{\n        \"include\": \"#xml-attribute\"\n      }]\n    },\n    \"yield-break-statement\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"keyword.control.flow.yield.cs\"\n        },\n        \"2\": {\n          \"name\": \"keyword.control.flow.break.cs\"\n        }\n      },\n      \"match\": \"(?<!\\\\.)\\\\b(yield)\\\\b\\\\s*\\\\b(break)\\\\b\"\n    },\n    \"yield-return-statement\": {\n      \"begin\": \"(?<!\\\\.)\\\\b(yield)\\\\b\\\\s*\\\\b(return)\\\\b\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.control.flow.yield.cs\"\n        },\n        \"2\": {\n          \"name\": \"keyword.control.flow.return.cs\"\n        }\n      },\n      \"end\": \"(?=[;}])\",\n      \"patterns\": [{\n        \"include\": \"#expression\"\n      }]\n    },\n    \"yield-statement\": {\n      \"patterns\": [{\n        \"include\": \"#yield-return-statement\"\n      }, {\n        \"include\": \"#yield-break-statement\"\n      }]\n    }\n  },\n  \"scopeName\": \"source.cs\",\n  \"aliases\": [\"c#\", \"cs\"]\n});\nvar csharp = [lang];\nexport { csharp as default };"],
  "mappings": "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",
  "names": []
}
