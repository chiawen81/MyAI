{
  "version": 3,
  "sources": ["../../../../../../node_modules/shiki/dist/langs/typst.mjs"],
  "sourcesContent": ["const lang = Object.freeze({\n  \"displayName\": \"Typst\",\n  \"name\": \"typst\",\n  \"patterns\": [{\n    \"include\": \"#markup\"\n  }],\n  \"repository\": {\n    \"arguments\": {\n      \"patterns\": [{\n        \"match\": \"\\\\b[[:alpha:]_][[:alnum:]_-]*(?=:)\",\n        \"name\": \"variable.parameter.typst\"\n      }, {\n        \"include\": \"#code\"\n      }]\n    },\n    \"code\": {\n      \"patterns\": [{\n        \"include\": \"#common\"\n      }, {\n        \"begin\": \"{\",\n        \"captures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.block.code.typst\"\n          }\n        },\n        \"end\": \"}\",\n        \"name\": \"meta.block.code.typst\",\n        \"patterns\": [{\n          \"include\": \"#code\"\n        }]\n      }, {\n        \"begin\": \"\\\\[\",\n        \"captures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.block.content.typst\"\n          }\n        },\n        \"end\": \"\\\\]\",\n        \"name\": \"meta.block.content.typst\",\n        \"patterns\": [{\n          \"include\": \"#markup\"\n        }]\n      }, {\n        \"begin\": \"//\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.comment.typst\"\n          }\n        },\n        \"end\": \"\\n\",\n        \"name\": \"comment.line.double-slash.typst\"\n      }, {\n        \"match\": \":\",\n        \"name\": \"punctuation.separator.colon.typst\"\n      }, {\n        \"match\": \",\",\n        \"name\": \"punctuation.separator.comma.typst\"\n      }, {\n        \"match\": \"=>|\\\\.\\\\.\",\n        \"name\": \"keyword.operator.typst\"\n      }, {\n        \"match\": \"==|!=|<=|<|>=|>\",\n        \"name\": \"keyword.operator.relational.typst\"\n      }, {\n        \"match\": \"\\\\+=|-=|\\\\*=|/=|=\",\n        \"name\": \"keyword.operator.assignment.typst\"\n      }, {\n        \"match\": \"\\\\+|\\\\*|/|(?<![[:alpha:]_][[:alnum:]_-]*)-(?![:alnum:]_-]*[[:alpha:]_])\",\n        \"name\": \"keyword.operator.arithmetic.typst\"\n      }, {\n        \"match\": \"\\\\b(and|or|not)\\\\b\",\n        \"name\": \"keyword.operator.word.typst\"\n      }, {\n        \"match\": \"\\\\b(let|as|in|set|show)\\\\b\",\n        \"name\": \"keyword.other.typst\"\n      }, {\n        \"match\": \"\\\\b(if|else)\\\\b\",\n        \"name\": \"keyword.control.conditional.typst\"\n      }, {\n        \"match\": \"\\\\b(for|while|break|continue)\\\\b\",\n        \"name\": \"keyword.control.loop.typst\"\n      }, {\n        \"match\": \"\\\\b(import|include|export)\\\\b\",\n        \"name\": \"keyword.control.import.typst\"\n      }, {\n        \"match\": \"\\\\b(return)\\\\b\",\n        \"name\": \"keyword.control.flow.typst\"\n      }, {\n        \"include\": \"#constants\"\n      }, {\n        \"comment\": \"Function name\",\n        \"match\": \"\\\\b[[:alpha:]_][[:alnum:]_-]*!?(?=\\\\[|\\\\()\",\n        \"name\": \"entity.name.function.typst\"\n      }, {\n        \"comment\": \"Function name\",\n        \"match\": \"(?<=\\\\bshow\\\\s*)\\\\b[[:alpha:]_][[:alnum:]_-]*(?=\\\\s*[:.])\",\n        \"name\": \"entity.name.function.typst\"\n      }, {\n        \"begin\": \"(?<=\\\\b[[:alpha:]_][[:alnum:]_-]*!?)\\\\(\",\n        \"captures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.group.typst\"\n          }\n        },\n        \"comment\": \"Function arguments\",\n        \"end\": \"\\\\)\",\n        \"patterns\": [{\n          \"include\": \"#arguments\"\n        }]\n      }, {\n        \"match\": \"\\\\b[[:alpha:]_][[:alnum:]_-]*\\\\b\",\n        \"name\": \"variable.other.typst\"\n      }, {\n        \"begin\": \"\\\\(\",\n        \"captures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.group.typst\"\n          }\n        },\n        \"end\": \"\\\\)|(?=;)\",\n        \"name\": \"meta.group.typst\",\n        \"patterns\": [{\n          \"include\": \"#code\"\n        }]\n      }]\n    },\n    \"comments\": {\n      \"patterns\": [{\n        \"begin\": \"/\\\\*\",\n        \"captures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.comment.typst\"\n          }\n        },\n        \"end\": \"\\\\*/\",\n        \"name\": \"comment.block.typst\",\n        \"patterns\": [{\n          \"include\": \"#comments\"\n        }]\n      }, {\n        \"begin\": \"(?<!:)//\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.comment.typst\"\n          }\n        },\n        \"end\": \"\\n\",\n        \"name\": \"comment.line.double-slash.typst\",\n        \"patterns\": [{\n          \"include\": \"#comments\"\n        }]\n      }]\n    },\n    \"common\": {\n      \"patterns\": [{\n        \"include\": \"#comments\"\n      }]\n    },\n    \"constants\": {\n      \"patterns\": [{\n        \"match\": \"\\\\bnone\\\\b\",\n        \"name\": \"constant.language.none.typst\"\n      }, {\n        \"match\": \"\\\\bauto\\\\b\",\n        \"name\": \"constant.language.auto.typst\"\n      }, {\n        \"match\": \"\\\\b(true|false)\\\\b\",\n        \"name\": \"constant.language.boolean.typst\"\n      }, {\n        \"match\": \"\\\\b(\\\\d*)?\\\\.?\\\\d+([eE][+-]?\\\\d+)?(mm|pt|cm|in|em)\\\\b\",\n        \"name\": \"constant.numeric.length.typst\"\n      }, {\n        \"match\": \"\\\\b(\\\\d*)?\\\\.?\\\\d+([eE][+-]?\\\\d+)?(rad|deg)\\\\b\",\n        \"name\": \"constant.numeric.angle.typst\"\n      }, {\n        \"match\": \"\\\\b(\\\\d*)?\\\\.?\\\\d+([eE][+-]?\\\\d+)?%\",\n        \"name\": \"constant.numeric.percentage.typst\"\n      }, {\n        \"match\": \"\\\\b(\\\\d*)?\\\\.?\\\\d+([eE][+-]?\\\\d+)?fr\",\n        \"name\": \"constant.numeric.fr.typst\"\n      }, {\n        \"match\": \"\\\\b\\\\d+\\\\b\",\n        \"name\": \"constant.numeric.integer.typst\"\n      }, {\n        \"match\": \"\\\\b(\\\\d*)?\\\\.?\\\\d+([eE][+-]?\\\\d+)?\\\\b\",\n        \"name\": \"constant.numeric.float.typst\"\n      }, {\n        \"begin\": '\"',\n        \"captures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.typst\"\n          }\n        },\n        \"end\": '\"',\n        \"name\": \"string.quoted.double.typst\",\n        \"patterns\": [{\n          \"match\": '\\\\\\\\([\\\\\\\\\"nrt]|u\\\\{?[0-9a-zA-Z]*\\\\}?)',\n          \"name\": \"constant.character.escape.string.typst\"\n        }]\n      }, {\n        \"begin\": \"\\\\$\",\n        \"captures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.math.typst\"\n          }\n        },\n        \"end\": \"\\\\$\",\n        \"name\": \"string.other.math.typst\"\n      }]\n    },\n    \"markup\": {\n      \"patterns\": [{\n        \"include\": \"#common\"\n      }, {\n        \"match\": \"\\\\\\\\([\\\\\\\\/\\\\[\\\\]{}#*_=~`$-.]|u\\\\{[0-9a-zA-Z]*\\\\}?)\",\n        \"name\": \"constant.character.escape.content.typst\"\n      }, {\n        \"match\": \"\\\\\\\\\",\n        \"name\": \"punctuation.definition.linebreak.typst\"\n      }, {\n        \"match\": \"~\",\n        \"name\": \"punctuation.definition.nonbreaking-space.typst\"\n      }, {\n        \"match\": \"-\\\\?\",\n        \"name\": \"punctuation.definition.shy.typst\"\n      }, {\n        \"match\": \"---\",\n        \"name\": \"punctuation.definition.em-dash.typst\"\n      }, {\n        \"match\": \"--\",\n        \"name\": \"punctuation.definition.en-dash.typst\"\n      }, {\n        \"match\": \"\\\\.\\\\.\\\\.\",\n        \"name\": \"punctuation.definition.ellipsis.typst\"\n      }, {\n        \"match\": \":([a-zA-Z0-9]+:)+\",\n        \"name\": \"constant.symbol.typst\"\n      }, {\n        \"begin\": \"(^\\\\*|\\\\*$|((?<=\\\\W|_)\\\\*)|(\\\\*(?=\\\\W|_)))\",\n        \"captures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.bold.typst\"\n          }\n        },\n        \"end\": \"(^\\\\*|\\\\*$|((?<=\\\\W|_)\\\\*)|(\\\\*(?=\\\\W|_)))|\\n|(?=\\\\])\",\n        \"name\": \"markup.bold.typst\",\n        \"patterns\": [{\n          \"include\": \"#markup\"\n        }]\n      }, {\n        \"begin\": \"(^_|_$|((?<=\\\\W|_)_)|(_(?=\\\\W|_)))\",\n        \"captures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.italic.typst\"\n          }\n        },\n        \"end\": \"(^_|_$|((?<=\\\\W|_)_)|(_(?=\\\\W|_)))|\\n|(?=\\\\])\",\n        \"name\": \"markup.italic.typst\",\n        \"patterns\": [{\n          \"include\": \"#markup\"\n        }]\n      }, {\n        \"match\": \"https?://[0-9a-zA-Z~/%#&=',;\\\\.\\\\+\\\\?]*\",\n        \"name\": \"markup.underline.link.typst\"\n      }, {\n        \"begin\": \"`{3,}\",\n        \"captures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.raw.typst\"\n          }\n        },\n        \"end\": \"\\\\0\",\n        \"name\": \"markup.raw.block.typst\"\n      }, {\n        \"begin\": \"`\",\n        \"captures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.raw.typst\"\n          }\n        },\n        \"end\": \"`\",\n        \"name\": \"markup.raw.inline.typst\"\n      }, {\n        \"begin\": \"\\\\$\",\n        \"captures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.math.typst\"\n          }\n        },\n        \"end\": \"\\\\$\",\n        \"name\": \"string.other.math.typst\"\n      }, {\n        \"begin\": \"^\\\\s*=+\\\\s+\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.heading.typst\"\n          }\n        },\n        \"contentName\": \"entity.name.section.typst\",\n        \"end\": \"\\n|(?=<)\",\n        \"name\": \"markup.heading.typst\",\n        \"patterns\": [{\n          \"include\": \"#markup\"\n        }]\n      }, {\n        \"match\": \"^\\\\s*-\\\\s+\",\n        \"name\": \"punctuation.definition.list.unnumbered.typst\"\n      }, {\n        \"match\": \"^\\\\s*([0-9]*\\\\.|\\\\+)\\\\s+\",\n        \"name\": \"punctuation.definition.list.numbered.typst\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.list.description.typst\"\n          },\n          \"2\": {\n            \"name\": \"markup.list.term.typst\"\n          }\n        },\n        \"match\": \"^\\\\s*(/)\\\\s+([^:]*:)\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.label.typst\"\n          }\n        },\n        \"match\": \"<[[:alpha:]_][[:alnum:]_-]*>\",\n        \"name\": \"entity.other.label.typst\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.reference.typst\"\n          }\n        },\n        \"match\": \"(@)[[:alpha:]_][[:alnum:]_-]*\",\n        \"name\": \"entity.other.reference.typst\"\n      }, {\n        \"begin\": \"(#)(let|set|show)\\\\b\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"keyword.other.typst\"\n          },\n          \"1\": {\n            \"name\": \"punctuation.definition.keyword.typst\"\n          }\n        },\n        \"end\": \"\\n|(;)|(?=])\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.terminator.statement.typst\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#code\"\n        }]\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.keyword.typst\"\n          }\n        },\n        \"match\": \"(#)(as|in)\\\\b\",\n        \"name\": \"keyword.other.typst\"\n      }, {\n        \"begin\": \"((#)if|(?<=(}|])\\\\s*)else)\\\\b\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"keyword.control.conditional.typst\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.definition.keyword.typst\"\n          }\n        },\n        \"end\": \"\\n|(?=])|(?<=}|])\",\n        \"patterns\": [{\n          \"include\": \"#code\"\n        }]\n      }, {\n        \"begin\": \"(#)(for|while)\\\\b\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"keyword.control.loop.typst\"\n          },\n          \"1\": {\n            \"name\": \"punctuation.definition.keyword.typst\"\n          }\n        },\n        \"end\": \"\\n|(?=])|(?<=}|])\",\n        \"patterns\": [{\n          \"include\": \"#code\"\n        }]\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.keyword.typst\"\n          }\n        },\n        \"match\": \"(#)(break|continue)\\\\b\",\n        \"name\": \"keyword.control.loop.typst\"\n      }, {\n        \"begin\": \"(#)(import|include|export)\\\\b\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"keyword.control.import.typst\"\n          },\n          \"1\": {\n            \"name\": \"punctuation.definition.keyword.typst\"\n          }\n        },\n        \"end\": \"\\n|(;)|(?=])\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.terminator.statement.typst\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#code\"\n        }]\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.keyword.typst\"\n          }\n        },\n        \"match\": \"(#)(return)\\\\b\",\n        \"name\": \"keyword.control.flow.typst\"\n      }, {\n        \"captures\": {\n          \"2\": {\n            \"name\": \"punctuation.definition.function.typst\"\n          }\n        },\n        \"comment\": \"Function name\",\n        \"match\": \"((#)[[:alpha:]_][[:alnum:]_-]*!?)(?=\\\\[|\\\\()\",\n        \"name\": \"entity.name.function.typst\"\n      }, {\n        \"begin\": \"(?<=#[[:alpha:]_][[:alnum:]_-]*!?)\\\\(\",\n        \"captures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.group.typst\"\n          }\n        },\n        \"comment\": \"Function arguments\",\n        \"end\": \"\\\\)\",\n        \"patterns\": [{\n          \"include\": \"#arguments\"\n        }]\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.variable.typst\"\n          }\n        },\n        \"match\": \"(#)[[:alpha:]_][.[:alnum:]_-]*\",\n        \"name\": \"entity.other.interpolated.typst\"\n      }, {\n        \"begin\": \"#\",\n        \"end\": \"\\\\s\",\n        \"name\": \"meta.block.content.typst\",\n        \"patterns\": [{\n          \"include\": \"#code\"\n        }]\n      }]\n    }\n  },\n  \"scopeName\": \"source.typst\",\n  \"aliases\": [\"typ\"]\n});\nvar typst = [lang];\nexport { typst as default };"],
  "mappings": "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",
  "names": []
}
