{
  "version": 3,
  "sources": ["../../../../../../node_modules/shiki/dist/langs/rust.mjs"],
  "sourcesContent": ["const lang = Object.freeze({\n  \"displayName\": \"Rust\",\n  \"name\": \"rust\",\n  \"patterns\": [{\n    \"begin\": \"(<)(\\\\[)\",\n    \"beginCaptures\": {\n      \"1\": {\n        \"name\": \"punctuation.brackets.angle.rust\"\n      },\n      \"2\": {\n        \"name\": \"punctuation.brackets.square.rust\"\n      }\n    },\n    \"comment\": \"boxed slice literal\",\n    \"end\": \">\",\n    \"endCaptures\": {\n      \"0\": {\n        \"name\": \"punctuation.brackets.angle.rust\"\n      }\n    },\n    \"patterns\": [{\n      \"include\": \"#block-comments\"\n    }, {\n      \"include\": \"#comments\"\n    }, {\n      \"include\": \"#gtypes\"\n    }, {\n      \"include\": \"#lvariables\"\n    }, {\n      \"include\": \"#lifetimes\"\n    }, {\n      \"include\": \"#punctuation\"\n    }, {\n      \"include\": \"#types\"\n    }]\n  }, {\n    \"captures\": {\n      \"1\": {\n        \"name\": \"keyword.operator.macro.dollar.rust\"\n      },\n      \"3\": {\n        \"name\": \"keyword.other.crate.rust\"\n      },\n      \"4\": {\n        \"name\": \"entity.name.type.metavariable.rust\"\n      },\n      \"6\": {\n        \"name\": \"keyword.operator.key-value.rust\"\n      },\n      \"7\": {\n        \"name\": \"variable.other.metavariable.specifier.rust\"\n      }\n    },\n    \"comment\": \"macro type metavariables\",\n    \"match\": \"(\\\\$)((crate)|([A-Z][A-Za-z0-9_]*))((:)(block|expr|ident|item|lifetime|literal|meta|path?|stmt|tt|ty|vis))?\",\n    \"name\": \"meta.macro.metavariable.type.rust\",\n    \"patterns\": [{\n      \"include\": \"#keywords\"\n    }]\n  }, {\n    \"captures\": {\n      \"1\": {\n        \"name\": \"keyword.operator.macro.dollar.rust\"\n      },\n      \"2\": {\n        \"name\": \"variable.other.metavariable.name.rust\"\n      },\n      \"4\": {\n        \"name\": \"keyword.operator.key-value.rust\"\n      },\n      \"5\": {\n        \"name\": \"variable.other.metavariable.specifier.rust\"\n      }\n    },\n    \"comment\": \"macro metavariables\",\n    \"match\": \"(\\\\$)([a-z][A-Za-z0-9_]*)((:)(block|expr|ident|item|lifetime|literal|meta|path?|stmt|tt|ty|vis))?\",\n    \"name\": \"meta.macro.metavariable.rust\",\n    \"patterns\": [{\n      \"include\": \"#keywords\"\n    }]\n  }, {\n    \"captures\": {\n      \"1\": {\n        \"name\": \"entity.name.function.macro.rules.rust\"\n      },\n      \"3\": {\n        \"name\": \"entity.name.function.macro.rust\"\n      },\n      \"4\": {\n        \"name\": \"entity.name.type.macro.rust\"\n      },\n      \"5\": {\n        \"name\": \"punctuation.brackets.curly.rust\"\n      }\n    },\n    \"comment\": \"macro rules\",\n    \"match\": \"\\\\b(macro_rules!)\\\\s+(([a-z0-9_]+)|([A-Z][a-z0-9_]*))\\\\s+(\\\\{)\",\n    \"name\": \"meta.macro.rules.rust\"\n  }, {\n    \"captures\": {\n      \"1\": {\n        \"name\": \"storage.type.rust\"\n      },\n      \"2\": {\n        \"name\": \"entity.name.module.rust\"\n      }\n    },\n    \"comment\": \"modules\",\n    \"match\": \"(mod)\\\\s+((?:r#(?!crate|[Ss]elf|super))?[a-z][A-Za-z0-9_]*)\"\n  }, {\n    \"begin\": \"\\\\b(extern)\\\\s+(crate)\",\n    \"beginCaptures\": {\n      \"1\": {\n        \"name\": \"storage.type.rust\"\n      },\n      \"2\": {\n        \"name\": \"keyword.other.crate.rust\"\n      }\n    },\n    \"comment\": \"external crate imports\",\n    \"end\": \";\",\n    \"endCaptures\": {\n      \"0\": {\n        \"name\": \"punctuation.semi.rust\"\n      }\n    },\n    \"name\": \"meta.import.rust\",\n    \"patterns\": [{\n      \"include\": \"#block-comments\"\n    }, {\n      \"include\": \"#comments\"\n    }, {\n      \"include\": \"#keywords\"\n    }, {\n      \"include\": \"#punctuation\"\n    }]\n  }, {\n    \"begin\": \"\\\\b(use)\\\\s\",\n    \"beginCaptures\": {\n      \"1\": {\n        \"name\": \"keyword.other.rust\"\n      }\n    },\n    \"comment\": \"use statements\",\n    \"end\": \";\",\n    \"endCaptures\": {\n      \"0\": {\n        \"name\": \"punctuation.semi.rust\"\n      }\n    },\n    \"name\": \"meta.use.rust\",\n    \"patterns\": [{\n      \"include\": \"#block-comments\"\n    }, {\n      \"include\": \"#comments\"\n    }, {\n      \"include\": \"#keywords\"\n    }, {\n      \"include\": \"#namespaces\"\n    }, {\n      \"include\": \"#punctuation\"\n    }, {\n      \"include\": \"#types\"\n    }, {\n      \"include\": \"#lvariables\"\n    }]\n  }, {\n    \"include\": \"#block-comments\"\n  }, {\n    \"include\": \"#comments\"\n  }, {\n    \"include\": \"#attributes\"\n  }, {\n    \"include\": \"#lvariables\"\n  }, {\n    \"include\": \"#constants\"\n  }, {\n    \"include\": \"#gtypes\"\n  }, {\n    \"include\": \"#functions\"\n  }, {\n    \"include\": \"#types\"\n  }, {\n    \"include\": \"#keywords\"\n  }, {\n    \"include\": \"#lifetimes\"\n  }, {\n    \"include\": \"#macros\"\n  }, {\n    \"include\": \"#namespaces\"\n  }, {\n    \"include\": \"#punctuation\"\n  }, {\n    \"include\": \"#strings\"\n  }, {\n    \"include\": \"#variables\"\n  }],\n  \"repository\": {\n    \"attributes\": {\n      \"begin\": \"(#)(\\\\!?)(\\\\[)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.definition.attribute.rust\"\n        },\n        \"3\": {\n          \"name\": \"punctuation.brackets.attribute.rust\"\n        }\n      },\n      \"comment\": \"attributes\",\n      \"end\": \"\\\\]\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.brackets.attribute.rust\"\n        }\n      },\n      \"name\": \"meta.attribute.rust\",\n      \"patterns\": [{\n        \"include\": \"#block-comments\"\n      }, {\n        \"include\": \"#comments\"\n      }, {\n        \"include\": \"#keywords\"\n      }, {\n        \"include\": \"#lifetimes\"\n      }, {\n        \"include\": \"#punctuation\"\n      }, {\n        \"include\": \"#strings\"\n      }, {\n        \"include\": \"#gtypes\"\n      }, {\n        \"include\": \"#types\"\n      }]\n    },\n    \"block-comments\": {\n      \"patterns\": [{\n        \"comment\": \"empty block comments\",\n        \"match\": \"/\\\\*\\\\*/\",\n        \"name\": \"comment.block.rust\"\n      }, {\n        \"begin\": \"/\\\\*\\\\*\",\n        \"comment\": \"block documentation comments\",\n        \"end\": \"\\\\*/\",\n        \"name\": \"comment.block.documentation.rust\",\n        \"patterns\": [{\n          \"include\": \"#block-comments\"\n        }]\n      }, {\n        \"begin\": \"/\\\\*(?!\\\\*)\",\n        \"comment\": \"block comments\",\n        \"end\": \"\\\\*/\",\n        \"name\": \"comment.block.rust\",\n        \"patterns\": [{\n          \"include\": \"#block-comments\"\n        }]\n      }]\n    },\n    \"comments\": {\n      \"patterns\": [{\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.comment.rust\"\n          }\n        },\n        \"comment\": \"documentation comments\",\n        \"match\": \"(///).*$\",\n        \"name\": \"comment.line.documentation.rust\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.comment.rust\"\n          }\n        },\n        \"comment\": \"line comments\",\n        \"match\": \"(//).*$\",\n        \"name\": \"comment.line.double-slash.rust\"\n      }]\n    },\n    \"constants\": {\n      \"patterns\": [{\n        \"comment\": \"ALL CAPS constants\",\n        \"match\": \"\\\\b[A-Z]{2}[A-Z0-9_]*\\\\b\",\n        \"name\": \"constant.other.caps.rust\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"storage.type.rust\"\n          },\n          \"2\": {\n            \"name\": \"constant.other.caps.rust\"\n          }\n        },\n        \"comment\": \"constant declarations\",\n        \"match\": \"\\\\b(const)\\\\s+([A-Z][A-Za-z0-9_]*)\\\\b\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.separator.dot.decimal.rust\"\n          },\n          \"2\": {\n            \"name\": \"keyword.operator.exponent.rust\"\n          },\n          \"3\": {\n            \"name\": \"keyword.operator.exponent.sign.rust\"\n          },\n          \"4\": {\n            \"name\": \"constant.numeric.decimal.exponent.mantissa.rust\"\n          },\n          \"5\": {\n            \"name\": \"entity.name.type.numeric.rust\"\n          }\n        },\n        \"comment\": \"decimal integers and floats\",\n        \"match\": \"\\\\b\\\\d[\\\\d_]*(\\\\.?)[\\\\d_]*(?:(E|e)([+-]?)([\\\\d_]+))?(f32|f64|i128|i16|i32|i64|i8|isize|u128|u16|u32|u64|u8|usize)?\\\\b\",\n        \"name\": \"constant.numeric.decimal.rust\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"entity.name.type.numeric.rust\"\n          }\n        },\n        \"comment\": \"hexadecimal integers\",\n        \"match\": \"\\\\b0x[\\\\da-fA-F_]+(i128|i16|i32|i64|i8|isize|u128|u16|u32|u64|u8|usize)?\\\\b\",\n        \"name\": \"constant.numeric.hex.rust\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"entity.name.type.numeric.rust\"\n          }\n        },\n        \"comment\": \"octal integers\",\n        \"match\": \"\\\\b0o[0-7_]+(i128|i16|i32|i64|i8|isize|u128|u16|u32|u64|u8|usize)?\\\\b\",\n        \"name\": \"constant.numeric.oct.rust\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"entity.name.type.numeric.rust\"\n          }\n        },\n        \"comment\": \"binary integers\",\n        \"match\": \"\\\\b0b[01_]+(i128|i16|i32|i64|i8|isize|u128|u16|u32|u64|u8|usize)?\\\\b\",\n        \"name\": \"constant.numeric.bin.rust\"\n      }, {\n        \"comment\": \"booleans\",\n        \"match\": \"\\\\b(true|false)\\\\b\",\n        \"name\": \"constant.language.bool.rust\"\n      }]\n    },\n    \"escapes\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"constant.character.escape.backslash.rust\"\n        },\n        \"2\": {\n          \"name\": \"constant.character.escape.bit.rust\"\n        },\n        \"3\": {\n          \"name\": \"constant.character.escape.unicode.rust\"\n        },\n        \"4\": {\n          \"name\": \"constant.character.escape.unicode.punctuation.rust\"\n        },\n        \"5\": {\n          \"name\": \"constant.character.escape.unicode.punctuation.rust\"\n        }\n      },\n      \"comment\": \"escapes: ASCII, byte, Unicode, quote, regex\",\n      \"match\": \"(\\\\\\\\)(?:(?:(x[0-7][\\\\da-fA-F])|(u(\\\\{)[\\\\da-fA-F]{4,6}(\\\\}))|.))\",\n      \"name\": \"constant.character.escape.rust\"\n    },\n    \"functions\": {\n      \"patterns\": [{\n        \"captures\": {\n          \"1\": {\n            \"name\": \"keyword.other.rust\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.brackets.round.rust\"\n          }\n        },\n        \"comment\": \"pub as a function\",\n        \"match\": \"\\\\b(pub)(\\\\()\"\n      }, {\n        \"begin\": \"\\\\b(fn)\\\\s+((?:r#(?!crate|[Ss]elf|super))?[A-Za-z0-9_]+)((\\\\()|(<))\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.other.fn.rust\"\n          },\n          \"2\": {\n            \"name\": \"entity.name.function.rust\"\n          },\n          \"4\": {\n            \"name\": \"punctuation.brackets.round.rust\"\n          },\n          \"5\": {\n            \"name\": \"punctuation.brackets.angle.rust\"\n          }\n        },\n        \"comment\": \"function definition\",\n        \"end\": \"\\\\{|;\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.brackets.curly.rust\"\n          }\n        },\n        \"name\": \"meta.function.definition.rust\",\n        \"patterns\": [{\n          \"include\": \"#block-comments\"\n        }, {\n          \"include\": \"#comments\"\n        }, {\n          \"include\": \"#keywords\"\n        }, {\n          \"include\": \"#lvariables\"\n        }, {\n          \"include\": \"#constants\"\n        }, {\n          \"include\": \"#gtypes\"\n        }, {\n          \"include\": \"#functions\"\n        }, {\n          \"include\": \"#lifetimes\"\n        }, {\n          \"include\": \"#macros\"\n        }, {\n          \"include\": \"#namespaces\"\n        }, {\n          \"include\": \"#punctuation\"\n        }, {\n          \"include\": \"#strings\"\n        }, {\n          \"include\": \"#types\"\n        }, {\n          \"include\": \"#variables\"\n        }]\n      }, {\n        \"begin\": \"((?:r#(?!crate|[Ss]elf|super))?[A-Za-z0-9_]+)(\\\\()\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"entity.name.function.rust\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.brackets.round.rust\"\n          }\n        },\n        \"comment\": \"function/method calls, chaining\",\n        \"end\": \"\\\\)\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.brackets.round.rust\"\n          }\n        },\n        \"name\": \"meta.function.call.rust\",\n        \"patterns\": [{\n          \"include\": \"#block-comments\"\n        }, {\n          \"include\": \"#comments\"\n        }, {\n          \"include\": \"#attributes\"\n        }, {\n          \"include\": \"#keywords\"\n        }, {\n          \"include\": \"#lvariables\"\n        }, {\n          \"include\": \"#constants\"\n        }, {\n          \"include\": \"#gtypes\"\n        }, {\n          \"include\": \"#functions\"\n        }, {\n          \"include\": \"#lifetimes\"\n        }, {\n          \"include\": \"#macros\"\n        }, {\n          \"include\": \"#namespaces\"\n        }, {\n          \"include\": \"#punctuation\"\n        }, {\n          \"include\": \"#strings\"\n        }, {\n          \"include\": \"#types\"\n        }, {\n          \"include\": \"#variables\"\n        }]\n      }, {\n        \"begin\": \"((?:r#(?!crate|[Ss]elf|super))?[A-Za-z0-9_]+)(?=::<.*>\\\\()\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"entity.name.function.rust\"\n          }\n        },\n        \"comment\": \"function/method calls with turbofish\",\n        \"end\": \"\\\\)\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.brackets.round.rust\"\n          }\n        },\n        \"name\": \"meta.function.call.rust\",\n        \"patterns\": [{\n          \"include\": \"#block-comments\"\n        }, {\n          \"include\": \"#comments\"\n        }, {\n          \"include\": \"#attributes\"\n        }, {\n          \"include\": \"#keywords\"\n        }, {\n          \"include\": \"#lvariables\"\n        }, {\n          \"include\": \"#constants\"\n        }, {\n          \"include\": \"#gtypes\"\n        }, {\n          \"include\": \"#functions\"\n        }, {\n          \"include\": \"#lifetimes\"\n        }, {\n          \"include\": \"#macros\"\n        }, {\n          \"include\": \"#namespaces\"\n        }, {\n          \"include\": \"#punctuation\"\n        }, {\n          \"include\": \"#strings\"\n        }, {\n          \"include\": \"#types\"\n        }, {\n          \"include\": \"#variables\"\n        }]\n      }]\n    },\n    \"gtypes\": {\n      \"patterns\": [{\n        \"comment\": \"option types\",\n        \"match\": \"\\\\b(Some|None)\\\\b\",\n        \"name\": \"entity.name.type.option.rust\"\n      }, {\n        \"comment\": \"result types\",\n        \"match\": \"\\\\b(Ok|Err)\\\\b\",\n        \"name\": \"entity.name.type.result.rust\"\n      }]\n    },\n    \"interpolations\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"punctuation.definition.interpolation.rust\"\n        },\n        \"2\": {\n          \"name\": \"punctuation.definition.interpolation.rust\"\n        }\n      },\n      \"comment\": \"curly brace interpolations\",\n      \"match\": '({)[^\"{}]*(})',\n      \"name\": \"meta.interpolation.rust\"\n    },\n    \"keywords\": {\n      \"patterns\": [{\n        \"comment\": \"control flow keywords\",\n        \"match\": \"\\\\b(await|break|continue|do|else|for|if|loop|match|return|try|while|yield)\\\\b\",\n        \"name\": \"keyword.control.rust\"\n      }, {\n        \"comment\": \"storage keywords\",\n        \"match\": \"\\\\b(extern|let|macro|mod)\\\\b\",\n        \"name\": \"keyword.other.rust storage.type.rust\"\n      }, {\n        \"comment\": \"const keyword\",\n        \"match\": \"\\\\b(const)\\\\b\",\n        \"name\": \"storage.modifier.rust\"\n      }, {\n        \"comment\": \"type keyword\",\n        \"match\": \"\\\\b(type)\\\\b\",\n        \"name\": \"keyword.declaration.type.rust storage.type.rust\"\n      }, {\n        \"comment\": \"enum keyword\",\n        \"match\": \"\\\\b(enum)\\\\b\",\n        \"name\": \"keyword.declaration.enum.rust storage.type.rust\"\n      }, {\n        \"comment\": \"trait keyword\",\n        \"match\": \"\\\\b(trait)\\\\b\",\n        \"name\": \"keyword.declaration.trait.rust storage.type.rust\"\n      }, {\n        \"comment\": \"struct keyword\",\n        \"match\": \"\\\\b(struct)\\\\b\",\n        \"name\": \"keyword.declaration.struct.rust storage.type.rust\"\n      }, {\n        \"comment\": \"storage modifiers\",\n        \"match\": \"\\\\b(abstract|static)\\\\b\",\n        \"name\": \"storage.modifier.rust\"\n      }, {\n        \"comment\": \"other keywords\",\n        \"match\": \"\\\\b(as|async|become|box|dyn|move|final|gen|impl|in|override|priv|pub|ref|typeof|union|unsafe|unsized|use|virtual|where)\\\\b\",\n        \"name\": \"keyword.other.rust\"\n      }, {\n        \"comment\": \"fn\",\n        \"match\": \"\\\\bfn\\\\b\",\n        \"name\": \"keyword.other.fn.rust\"\n      }, {\n        \"comment\": \"crate\",\n        \"match\": \"\\\\bcrate\\\\b\",\n        \"name\": \"keyword.other.crate.rust\"\n      }, {\n        \"comment\": \"mut\",\n        \"match\": \"\\\\bmut\\\\b\",\n        \"name\": \"storage.modifier.mut.rust\"\n      }, {\n        \"comment\": \"logical operators\",\n        \"match\": \"(\\\\^|\\\\||\\\\|\\\\||&&|<<|>>|!)(?!=)\",\n        \"name\": \"keyword.operator.logical.rust\"\n      }, {\n        \"comment\": \"logical AND, borrow references\",\n        \"match\": \"&(?![&=])\",\n        \"name\": \"keyword.operator.borrow.and.rust\"\n      }, {\n        \"comment\": \"assignment operators\",\n        \"match\": \"(\\\\+=|-=|\\\\*=|/=|%=|\\\\^=|&=|\\\\|=|<<=|>>=)\",\n        \"name\": \"keyword.operator.assignment.rust\"\n      }, {\n        \"comment\": \"single equal\",\n        \"match\": \"(?<![<>])=(?!=|>)\",\n        \"name\": \"keyword.operator.assignment.equal.rust\"\n      }, {\n        \"comment\": \"comparison operators\",\n        \"match\": \"(=(=)?(?!>)|!=|<=|(?<!=)>=)\",\n        \"name\": \"keyword.operator.comparison.rust\"\n      }, {\n        \"comment\": \"math operators\",\n        \"match\": \"(([+%]|(\\\\*(?!\\\\w)))(?!=))|(-(?!>))|(/(?!/))\",\n        \"name\": \"keyword.operator.math.rust\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.brackets.round.rust\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.brackets.square.rust\"\n          },\n          \"3\": {\n            \"name\": \"punctuation.brackets.curly.rust\"\n          },\n          \"4\": {\n            \"name\": \"keyword.operator.comparison.rust\"\n          },\n          \"5\": {\n            \"name\": \"punctuation.brackets.round.rust\"\n          },\n          \"6\": {\n            \"name\": \"punctuation.brackets.square.rust\"\n          },\n          \"7\": {\n            \"name\": \"punctuation.brackets.curly.rust\"\n          }\n        },\n        \"comment\": \"less than, greater than (special case)\",\n        \"match\": \"(?:\\\\b|(?:(\\\\))|(\\\\])|(\\\\})))[ \\\\t]+([<>])[ \\\\t]+(?:\\\\b|(?:(\\\\()|(\\\\[)|(\\\\{)))\"\n      }, {\n        \"comment\": \"namespace operator\",\n        \"match\": \"::\",\n        \"name\": \"keyword.operator.namespace.rust\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"keyword.operator.dereference.rust\"\n          }\n        },\n        \"comment\": \"dereference asterisk\",\n        \"match\": \"(\\\\*)(?=\\\\w+)\"\n      }, {\n        \"comment\": \"subpattern binding\",\n        \"match\": \"@\",\n        \"name\": \"keyword.operator.subpattern.rust\"\n      }, {\n        \"comment\": \"dot access\",\n        \"match\": \"\\\\.(?!\\\\.)\",\n        \"name\": \"keyword.operator.access.dot.rust\"\n      }, {\n        \"comment\": \"ranges, range patterns\",\n        \"match\": \"\\\\.{2}(=|\\\\.)?\",\n        \"name\": \"keyword.operator.range.rust\"\n      }, {\n        \"comment\": \"colon\",\n        \"match\": \":(?!:)\",\n        \"name\": \"keyword.operator.key-value.rust\"\n      }, {\n        \"comment\": \"dashrocket, skinny arrow\",\n        \"match\": \"->\",\n        \"name\": \"keyword.operator.arrow.skinny.rust\"\n      }, {\n        \"comment\": \"hashrocket, fat arrow\",\n        \"match\": \"=>\",\n        \"name\": \"keyword.operator.arrow.fat.rust\"\n      }, {\n        \"comment\": \"dollar macros\",\n        \"match\": \"\\\\$\",\n        \"name\": \"keyword.operator.macro.dollar.rust\"\n      }, {\n        \"comment\": \"question mark operator, questionably sized, macro kleene matcher\",\n        \"match\": \"\\\\?\",\n        \"name\": \"keyword.operator.question.rust\"\n      }]\n    },\n    \"lifetimes\": {\n      \"patterns\": [{\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.lifetime.rust\"\n          },\n          \"2\": {\n            \"name\": \"entity.name.type.lifetime.rust\"\n          }\n        },\n        \"comment\": \"named lifetime parameters\",\n        \"match\": \"(['])([a-zA-Z_][0-9a-zA-Z_]*)(?!['])\\\\b\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"keyword.operator.borrow.rust\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.definition.lifetime.rust\"\n          },\n          \"3\": {\n            \"name\": \"entity.name.type.lifetime.rust\"\n          }\n        },\n        \"comment\": \"borrowing references to named lifetimes\",\n        \"match\": \"(\\\\&)(['])([a-zA-Z_][0-9a-zA-Z_]*)(?!['])\\\\b\"\n      }]\n    },\n    \"lvariables\": {\n      \"patterns\": [{\n        \"comment\": \"self\",\n        \"match\": \"\\\\b[Ss]elf\\\\b\",\n        \"name\": \"variable.language.self.rust\"\n      }, {\n        \"comment\": \"super\",\n        \"match\": \"\\\\bsuper\\\\b\",\n        \"name\": \"variable.language.super.rust\"\n      }]\n    },\n    \"macros\": {\n      \"patterns\": [{\n        \"captures\": {\n          \"2\": {\n            \"name\": \"entity.name.function.macro.rust\"\n          },\n          \"3\": {\n            \"name\": \"entity.name.type.macro.rust\"\n          }\n        },\n        \"comment\": \"macros\",\n        \"match\": \"(([a-z_][A-Za-z0-9_]*!)|([A-Z_][A-Za-z0-9_]*!))\",\n        \"name\": \"meta.macro.rust\"\n      }]\n    },\n    \"namespaces\": {\n      \"patterns\": [{\n        \"captures\": {\n          \"1\": {\n            \"name\": \"entity.name.namespace.rust\"\n          },\n          \"2\": {\n            \"name\": \"keyword.operator.namespace.rust\"\n          }\n        },\n        \"comment\": \"namespace (non-type, non-function path segment)\",\n        \"match\": \"(?<![A-Za-z0-9_])([A-Za-z0-9_]+)((?<!super|self)::)\"\n      }]\n    },\n    \"punctuation\": {\n      \"patterns\": [{\n        \"comment\": \"comma\",\n        \"match\": \",\",\n        \"name\": \"punctuation.comma.rust\"\n      }, {\n        \"comment\": \"curly braces\",\n        \"match\": \"[{}]\",\n        \"name\": \"punctuation.brackets.curly.rust\"\n      }, {\n        \"comment\": \"parentheses, round brackets\",\n        \"match\": \"[()]\",\n        \"name\": \"punctuation.brackets.round.rust\"\n      }, {\n        \"comment\": \"semicolon\",\n        \"match\": \";\",\n        \"name\": \"punctuation.semi.rust\"\n      }, {\n        \"comment\": \"square brackets\",\n        \"match\": \"[\\\\[\\\\]]\",\n        \"name\": \"punctuation.brackets.square.rust\"\n      }, {\n        \"comment\": \"angle brackets\",\n        \"match\": \"(?<!=)[<>]\",\n        \"name\": \"punctuation.brackets.angle.rust\"\n      }]\n    },\n    \"strings\": {\n      \"patterns\": [{\n        \"begin\": '(b?)(\")',\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"string.quoted.byte.raw.rust\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.definition.string.rust\"\n          }\n        },\n        \"comment\": \"double-quoted strings and byte strings\",\n        \"end\": '\"',\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.rust\"\n          }\n        },\n        \"name\": \"string.quoted.double.rust\",\n        \"patterns\": [{\n          \"include\": \"#escapes\"\n        }, {\n          \"include\": \"#interpolations\"\n        }]\n      }, {\n        \"begin\": '(b?r)(#*)(\")',\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"string.quoted.byte.raw.rust\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.definition.string.raw.rust\"\n          },\n          \"3\": {\n            \"name\": \"punctuation.definition.string.rust\"\n          }\n        },\n        \"comment\": \"double-quoted raw strings and raw byte strings\",\n        \"end\": '(\")(\\\\2)',\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.string.rust\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.definition.string.raw.rust\"\n          }\n        },\n        \"name\": \"string.quoted.double.rust\"\n      }, {\n        \"begin\": \"(b)?(')\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"string.quoted.byte.raw.rust\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.definition.char.rust\"\n          }\n        },\n        \"comment\": \"characters and bytes\",\n        \"end\": \"'\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.char.rust\"\n          }\n        },\n        \"name\": \"string.quoted.single.char.rust\",\n        \"patterns\": [{\n          \"include\": \"#escapes\"\n        }]\n      }]\n    },\n    \"types\": {\n      \"patterns\": [{\n        \"captures\": {\n          \"1\": {\n            \"name\": \"entity.name.type.numeric.rust\"\n          }\n        },\n        \"comment\": \"numeric types\",\n        \"match\": \"(?<![A-Za-z])(f32|f64|i128|i16|i32|i64|i8|isize|u128|u16|u32|u64|u8|usize)\\\\b\"\n      }, {\n        \"begin\": \"\\\\b(_?[A-Z][A-Za-z0-9_]*)(<)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"entity.name.type.rust\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.brackets.angle.rust\"\n          }\n        },\n        \"comment\": \"parameterized types\",\n        \"end\": \">\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.brackets.angle.rust\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#block-comments\"\n        }, {\n          \"include\": \"#comments\"\n        }, {\n          \"include\": \"#keywords\"\n        }, {\n          \"include\": \"#lvariables\"\n        }, {\n          \"include\": \"#lifetimes\"\n        }, {\n          \"include\": \"#punctuation\"\n        }, {\n          \"include\": \"#types\"\n        }, {\n          \"include\": \"#variables\"\n        }]\n      }, {\n        \"comment\": \"primitive types\",\n        \"match\": \"\\\\b(bool|char|str)\\\\b\",\n        \"name\": \"entity.name.type.primitive.rust\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"keyword.declaration.trait.rust storage.type.rust\"\n          },\n          \"2\": {\n            \"name\": \"entity.name.type.trait.rust\"\n          }\n        },\n        \"comment\": \"trait declarations\",\n        \"match\": \"\\\\b(trait)\\\\s+(_?[A-Z][A-Za-z0-9_]*)\\\\b\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"keyword.declaration.struct.rust storage.type.rust\"\n          },\n          \"2\": {\n            \"name\": \"entity.name.type.struct.rust\"\n          }\n        },\n        \"comment\": \"struct declarations\",\n        \"match\": \"\\\\b(struct)\\\\s+(_?[A-Z][A-Za-z0-9_]*)\\\\b\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"keyword.declaration.enum.rust storage.type.rust\"\n          },\n          \"2\": {\n            \"name\": \"entity.name.type.enum.rust\"\n          }\n        },\n        \"comment\": \"enum declarations\",\n        \"match\": \"\\\\b(enum)\\\\s+(_?[A-Z][A-Za-z0-9_]*)\\\\b\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"keyword.declaration.type.rust storage.type.rust\"\n          },\n          \"2\": {\n            \"name\": \"entity.name.type.declaration.rust\"\n          }\n        },\n        \"comment\": \"type declarations\",\n        \"match\": \"\\\\b(type)\\\\s+(_?[A-Z][A-Za-z0-9_]*)\\\\b\"\n      }, {\n        \"comment\": \"types\",\n        \"match\": \"\\\\b_?[A-Z][A-Za-z0-9_]*\\\\b(?!!)\",\n        \"name\": \"entity.name.type.rust\"\n      }]\n    },\n    \"variables\": {\n      \"patterns\": [{\n        \"comment\": \"variables\",\n        \"match\": \"\\\\b(?<!(?<!\\\\.)\\\\.)(?:r#(?!(crate|[Ss]elf|super)))?[a-z0-9_]+\\\\b\",\n        \"name\": \"variable.other.rust\"\n      }]\n    }\n  },\n  \"scopeName\": \"source.rust\",\n  \"aliases\": [\"rs\"]\n});\nvar rust = [lang];\nexport { rust as default };"],
  "mappings": "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",
  "names": []
}
