{
  "version": 3,
  "sources": ["../../../../../../node_modules/shiki/dist/langs/turtle.mjs"],
  "sourcesContent": ["const lang = Object.freeze({\n  \"displayName\": \"Turtle\",\n  \"fileTypes\": [\"turtle\", \"ttl\", \"acl\"],\n  \"name\": \"turtle\",\n  \"patterns\": [{\n    \"include\": \"#rule-constraint\"\n  }, {\n    \"include\": \"#iriref\"\n  }, {\n    \"include\": \"#prefix\"\n  }, {\n    \"include\": \"#prefixed-name\"\n  }, {\n    \"include\": \"#comment\"\n  }, {\n    \"include\": \"#special-predicate\"\n  }, {\n    \"include\": \"#literals\"\n  }, {\n    \"include\": \"#language-tag\"\n  }],\n  \"repository\": {\n    \"boolean\": {\n      \"match\": \"\\\\b(?i:true|false)\\\\b\",\n      \"name\": \"constant.language.sparql\"\n    },\n    \"comment\": {\n      \"match\": \"#.*$\",\n      \"name\": \"comment.line.number-sign.turtle\"\n    },\n    \"integer\": {\n      \"match\": \"[+-]?(?:\\\\d+|[0-9]+\\\\.[0-9]*|\\\\.[0-9]+(?:[eE][+-]?\\\\d+)?)\",\n      \"name\": \"constant.numeric.turtle\"\n    },\n    \"iriref\": {\n      \"match\": '<[^\\\\x20-\\\\x20<>\"{}|^`\\\\\\\\]*>',\n      \"name\": \"entity.name.type.iriref.turtle\"\n    },\n    \"language-tag\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"entity.name.class.turtle\"\n        }\n      },\n      \"match\": \"@(\\\\w+)\",\n      \"name\": \"meta.string-literal-language-tag.turtle\"\n    },\n    \"literals\": {\n      \"patterns\": [{\n        \"include\": \"#string\"\n      }, {\n        \"include\": \"#numeric\"\n      }, {\n        \"include\": \"#boolean\"\n      }]\n    },\n    \"numeric\": {\n      \"patterns\": [{\n        \"include\": \"#integer\"\n      }]\n    },\n    \"prefix\": {\n      \"match\": \"(?i:@?base|@?prefix)\\\\s\",\n      \"name\": \"keyword.operator.turtle\"\n    },\n    \"prefixed-name\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"storage.type.PNAME_NS.turtle\"\n        },\n        \"2\": {\n          \"name\": \"support.variable.PN_LOCAL.turtle\"\n        }\n      },\n      \"match\": \"(\\\\w*:)(\\\\w*)\",\n      \"name\": \"constant.complex.turtle\"\n    },\n    \"rule-constraint\": {\n      \"begin\": '(rule:content) (\"\"\")',\n      \"beginCaptures\": {\n        \"1\": {\n          \"patterns\": [{\n            \"include\": \"#prefixed-name\"\n          }]\n        },\n        \"2\": {\n          \"name\": \"string.quoted.triple.turtle\"\n        }\n      },\n      \"end\": '\"\"\"',\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"string.quoted.triple.turtle\"\n        }\n      },\n      \"name\": \"meta.rule-constraint.turtle\",\n      \"patterns\": [{\n        \"include\": \"source.srs\"\n      }]\n    },\n    \"single-dquote-string-literal\": {\n      \"begin\": '\"',\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.begin.turtle\"\n        }\n      },\n      \"end\": '\"',\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.end.turtle\"\n        }\n      },\n      \"name\": \"string.quoted.double.turtle\",\n      \"patterns\": [{\n        \"include\": \"#string-character-escape\"\n      }]\n    },\n    \"single-squote-string-literal\": {\n      \"begin\": \"'\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.begin.turtle\"\n        }\n      },\n      \"end\": \"'\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.definition.string.end.turtle\"\n        },\n        \"2\": {\n          \"name\": \"invalid.illegal.newline.turtle\"\n        }\n      },\n      \"name\": \"string.quoted.single.turtle\",\n      \"patterns\": [{\n        \"include\": \"#string-character-escape\"\n      }]\n    },\n    \"special-predicate\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"keyword.control.turtle\"\n        }\n      },\n      \"match\": \"\\\\s(a)\\\\s\",\n      \"name\": \"meta.specialPredicate.turtle\"\n    },\n    \"string\": {\n      \"patterns\": [{\n        \"include\": \"#triple-squote-string-literal\"\n      }, {\n        \"include\": \"#triple-dquote-string-literal\"\n      }, {\n        \"include\": \"#single-squote-string-literal\"\n      }, {\n        \"include\": \"#single-dquote-string-literal\"\n      }, {\n        \"include\": \"#triple-tick-string-literal\"\n      }]\n    },\n    \"string-character-escape\": {\n      \"match\": \"\\\\\\\\(x\\\\h{2}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.|$)\",\n      \"name\": \"constant.character.escape.turtle\"\n    },\n    \"triple-dquote-string-literal\": {\n      \"begin\": '\"\"\"',\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.begin.turtle\"\n        }\n      },\n      \"end\": '\"\"\"',\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.end.turtle\"\n        }\n      },\n      \"name\": \"string.quoted.triple.turtle\",\n      \"patterns\": [{\n        \"include\": \"#string-character-escape\"\n      }]\n    },\n    \"triple-squote-string-literal\": {\n      \"begin\": \"'''\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.begin.turtle\"\n        }\n      },\n      \"end\": \"'''\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.end.turtle\"\n        }\n      },\n      \"name\": \"string.quoted.triple.turtle\",\n      \"patterns\": [{\n        \"include\": \"#string-character-escape\"\n      }]\n    },\n    \"triple-tick-string-literal\": {\n      \"begin\": \"```\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.begin.turtle\"\n        }\n      },\n      \"end\": \"```\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.end.turtle\"\n        }\n      },\n      \"name\": \"string.quoted.triple.turtle\",\n      \"patterns\": [{\n        \"include\": \"#string-character-escape\"\n      }]\n    }\n  },\n  \"scopeName\": \"source.turtle\"\n});\nvar turtle = [lang];\nexport { turtle as default };"],
  "mappings": "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",
  "names": []
}
