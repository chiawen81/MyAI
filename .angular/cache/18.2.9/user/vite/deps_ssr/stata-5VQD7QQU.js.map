{
  "version": 3,
  "sources": ["../../../../../../node_modules/shiki/dist/langs/stata.mjs"],
  "sourcesContent": ["import sql from './sql.mjs';\nconst lang = Object.freeze({\n  \"displayName\": \"Stata\",\n  \"fileTypes\": [\"do\", \"ado\", \"mata\"],\n  \"foldingStartMarker\": \"\\\\{\\\\s*$\",\n  \"foldingStopMarker\": \"^\\\\s*\\\\}\",\n  \"name\": \"stata\",\n  \"patterns\": [{\n    \"include\": \"#ascii-regex-functions\"\n  }, {\n    \"include\": \"#unicode-regex-functions\"\n  }, {\n    \"include\": \"#constants\"\n  }, {\n    \"include\": \"#functions\"\n  }, {\n    \"include\": \"#comments\"\n  }, {\n    \"include\": \"#subscripts\"\n  }, {\n    \"include\": \"#operators\"\n  }, {\n    \"include\": \"#macro-local\"\n  }, {\n    \"include\": \"#macro-global\"\n  }, {\n    \"include\": \"#string-compound\"\n  }, {\n    \"include\": \"#string-regular\"\n  }, {\n    \"include\": \"#builtin_variables\"\n  }, {\n    \"include\": \"#macro-commands\"\n  }, {\n    \"comment\": \"keywords that delimit flow conditionals\",\n    \"match\": \"\\\\b(if|else if|else)\\\\b\",\n    \"name\": \"keyword.control.conditional.stata\"\n  }, {\n    \"captures\": {\n      \"1\": {\n        \"name\": \"storage.type.scalar.stata\"\n      }\n    },\n    \"match\": \"^\\\\s*(sca(lar|la|l)?(\\\\s+de(fine|fin|fi|f)?)?)\\\\s+(?!(drop|dir?|l(ist|is|i)?)\\\\s+)\"\n  }, {\n    \"begin\": \"\\\\b(mer(ge|g)?)\\\\s+(1|m|n)(:)(1|m|n)\",\n    \"beginCaptures\": {\n      \"1\": {\n        \"name\": \"keyword.control.flow.stata\"\n      },\n      \"3\": {\n        \"patterns\": [{\n          \"include\": \"#constants\"\n        }, {\n          \"match\": \"m|n\",\n          \"name\": \"\"\n        }]\n      },\n      \"4\": {\n        \"name\": \"punctuation.separator.key-value\"\n      },\n      \"5\": {\n        \"patterns\": [{\n          \"include\": \"#constants\"\n        }, {\n          \"match\": \"m|n\",\n          \"name\": \"\"\n        }]\n      }\n    },\n    \"end\": \"using\",\n    \"patterns\": [{\n      \"include\": \"#builtin_variables\"\n    }, {\n      \"include\": \"#macro-local\"\n    }, {\n      \"include\": \"#macro-global\"\n    }, {\n      \"include\": \"#comments\"\n    }]\n  }, {\n    \"captures\": {\n      \"1\": {\n        \"name\": \"keyword.control.flow.stata\"\n      },\n      \"2\": {\n        \"patterns\": [{\n          \"include\": \"#macro-local-identifiers\"\n        }, {\n          \"include\": \"#macro-local\"\n        }, {\n          \"include\": \"#macro-global\"\n        }]\n      },\n      \"3\": {\n        \"name\": \"keyword.control.flow.stata\"\n      }\n    },\n    \"match\": \"\\\\b(foreach)\\\\s+((?!in|of).+)\\\\s+(in|of var(list|lis|li|l)?|of new(list|lis|li|l)?|of num(list|lis|li|l)?)\\\\b\"\n  }, {\n    \"begin\": \"\\\\b(foreach)\\\\s+((?!in|of).+)\\\\s+(of loc(al|a)?|of glo(bal|ba|b)?)\\\\b\\\\s*\",\n    \"beginCaptures\": {\n      \"1\": {\n        \"name\": \"keyword.control.flow.stata\"\n      },\n      \"2\": {\n        \"patterns\": [{\n          \"include\": \"#macro-local-identifiers\"\n        }, {\n          \"include\": \"#macro-local\"\n        }, {\n          \"include\": \"#macro-global\"\n        }]\n      },\n      \"3\": {\n        \"name\": \"keyword.control.flow.stata\"\n      }\n    },\n    \"end\": \"(?=\\\\s*\\\\{)\",\n    \"patterns\": [{\n      \"include\": \"#macro-local-identifiers\"\n    }, {\n      \"include\": \"#macro-local\"\n    }, {\n      \"include\": \"#macro-global\"\n    }]\n  }, {\n    \"begin\": \"\\\\b(forvalues|forvalue|forvalu|forval|forva|forv)\\\\s*\",\n    \"beginCaptures\": {\n      \"1\": {\n        \"name\": \"keyword.control.flow.stata\"\n      }\n    },\n    \"end\": \"\\\\s*(=)\\\\s*([^\\\\{]+)\\\\s*|(?=\\\\n)\",\n    \"endCaptures\": {\n      \"1\": {\n        \"name\": \"keyword.operator.assignment.stata\"\n      },\n      \"2\": {\n        \"patterns\": [{\n          \"include\": \"#constants\"\n        }, {\n          \"include\": \"#operators\"\n        }, {\n          \"include\": \"#macro-local\"\n        }, {\n          \"include\": \"#macro-global\"\n        }]\n      }\n    },\n    \"patterns\": [{\n      \"include\": \"#macro-local-identifiers\"\n    }, {\n      \"include\": \"#macro-local\"\n    }, {\n      \"include\": \"#macro-global\"\n    }]\n  }, {\n    \"comment\": \"keywords that delimit loops\",\n    \"match\": \"\\\\b(while|continue)\\\\b\",\n    \"name\": \"keyword.control.flow.stata\"\n  }, {\n    \"captures\": {\n      \"1\": {\n        \"name\": \"keyword.other.stata\"\n      }\n    },\n    \"comment\": \"keywords that haven't fit into other groups (yet).\",\n    \"match\": \"\\\\b(as|ass|asse|asser|assert)\\\\b\"\n  }, {\n    \"comment\": \"prefixes that require a colon\",\n    \"match\": \"\\\\b(by(sort|sor|so|s)?|statsby|rolling|bootstrap|jackknife|permute|simulate|svy|mi est(imate|imat|ima|im|i)?|nestreg|stepwise|xi|fp|mfp|vers(ion|io|i)?)\\\\b\",\n    \"name\": \"storage.type.function.stata\"\n  }, {\n    \"comment\": \"prefixes that don't need a colon\",\n    \"match\": \"\\\\b(qui(etly|etl|et|e)?|n(oisily|oisil|oisi|ois|oi|o)?|cap(ture|tur|tu|t)?)\\\\b:?\",\n    \"name\": \"keyword.control.flow.stata\"\n  }, {\n    \"captures\": {\n      \"1\": {\n        \"name\": \"storage.type.function.stata\"\n      },\n      \"3\": {\n        \"name\": \"storage.type.function.stata\"\n      },\n      \"7\": {\n        \"name\": \"entity.name.function.stata\"\n      }\n    },\n    \"match\": \"\\\\s*(pr(ogram|ogra|ogr|og|o)?)\\\\s+((di(r)?|drop|l(ist|is|i)?)\\\\s+)([\\\\w&&[^0-9]]\\\\w{0,31})\"\n  }, {\n    \"begin\": \"^\\\\s*(pr(ogram|ogra|ogr|og|o)?)\\\\s+(de(fine|fin|fi|f)?\\\\s+)?\",\n    \"beginCaptures\": {\n      \"1\": {\n        \"name\": \"storage.type.function.stata\"\n      },\n      \"3\": {\n        \"name\": \"storage.type.function.stata\"\n      }\n    },\n    \"end\": \"(?=,|\\\\n|/)\",\n    \"patterns\": [{\n      \"include\": \"#macro-local\"\n    }, {\n      \"include\": \"#macro-global\"\n    }, {\n      \"match\": \"[\\\\w&&[^0-9]]\\\\w{0,31}\",\n      \"name\": \"entity.name.function.stata\"\n    }, {\n      \"match\": \"[^A-za-z_0-9,\\\\n/ ]+\",\n      \"name\": \"invalid.illegal.name.stata\"\n    }]\n  }, {\n    \"captures\": {\n      \"1\": \"keyword.functions.data.stata.test\"\n    },\n    \"match\": \"\\\\b(form(at|a)?)\\\\s*([\\\\w&&[^0-9]]\\\\w{0,31})*\\\\s*(%)(-)?(0)?([0-9]+)(.)([0-9]+)(e|f|g)(c)?\"\n  }, {\n    \"include\": \"#braces-with-error\"\n  }, {\n    \"begin\": \"(?=syntax)\",\n    \"end\": \"\\\\n\",\n    \"patterns\": [{\n      \"begin\": \"syntax\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"keyword.functions.program.stata\"\n        }\n      },\n      \"comment\": \"color before the comma\",\n      \"end\": \"(?=,|\\\\n)\",\n      \"patterns\": [{\n        \"begin\": \"///\",\n        \"end\": \"\\\\n\",\n        \"name\": \"comment.block.stata\"\n      }, {\n        \"match\": \"\\\\[\",\n        \"name\": \"punctuation.definition.parameters.begin.stata\"\n      }, {\n        \"match\": \"\\\\]\",\n        \"name\": \"punctuation.definition.parameters.end.stata\"\n      }, {\n        \"match\": \"\\\\b(varlist|varname|newvarlist|newvarname|namelist|name|anything)\\\\b\",\n        \"name\": \"entity.name.type.class.stata\"\n      }, {\n        \"captures\": {\n          \"2\": {\n            \"name\": \"entity.name.type.class.stata\"\n          },\n          \"3\": {\n            \"name\": \"keyword.operator.arithmetic.stata\"\n          }\n        },\n        \"match\": \"\\\\b((if|in|using|fweight|aweight|pweight|iweight))\\\\b(/)?\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"keyword.operator.arithmetic.stata\"\n          },\n          \"2\": {\n            \"name\": \"entity.name.type.class.stata\"\n          }\n        },\n        \"match\": \"(/)?(exp)\"\n      }, {\n        \"include\": \"#constants\"\n      }, {\n        \"include\": \"#operators\"\n      }, {\n        \"include\": \"#string-compound\"\n      }, {\n        \"include\": \"#string-regular\"\n      }, {\n        \"include\": \"#macro-local\"\n      }, {\n        \"include\": \"#macro-global\"\n      }, {\n        \"include\": \"#builtin_variables\"\n      }]\n    }, {\n      \"begin\": \",\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.variable.begin.stata\"\n        }\n      },\n      \"comment\": \"things to color after the comma\",\n      \"end\": \"(?=\\\\n)\",\n      \"patterns\": [{\n        \"begin\": \"///\",\n        \"end\": \"\\\\n\",\n        \"name\": \"comment.block.stata\"\n      }, {\n        \"begin\": \"([^\\\\s\\\\[\\\\]]+)(\\\\()\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"comment\": \"these are the names that become macros\",\n            \"patterns\": [{\n              \"include\": \"#macro-local-identifiers\"\n            }, {\n              \"include\": \"#macro-local\"\n            }, {\n              \"include\": \"#macro-global\"\n            }]\n          },\n          \"2\": {\n            \"name\": \"keyword.operator.parentheses.stata\"\n          }\n        },\n        \"comment\": \"color options with parentheses\",\n        \"end\": \"\\\\)\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"keyword.operator.parentheses.stata\"\n          }\n        },\n        \"patterns\": [{\n          \"captures\": {\n            \"0\": {\n              \"name\": \"support.type.stata\"\n            }\n          },\n          \"comment\": \"the first word is often a type\",\n          \"match\": \"\\\\b(integer|intege|integ|inte|int|real|string|strin|stri|str)\\\\b\"\n        }, {\n          \"include\": \"#constants\"\n        }, {\n          \"include\": \"#operators\"\n        }, {\n          \"include\": \"#string-compound\"\n        }, {\n          \"include\": \"#string-regular\"\n        }, {\n          \"include\": \"#macro-local\"\n        }, {\n          \"include\": \"#macro-global\"\n        }, {\n          \"include\": \"#builtin_variables\"\n        }]\n      }, {\n        \"include\": \"#macro-local-identifiers\"\n      }, {\n        \"include\": \"#constants\"\n      }, {\n        \"include\": \"#operators\"\n      }, {\n        \"include\": \"#string-compound\"\n      }, {\n        \"include\": \"#string-regular\"\n      }, {\n        \"include\": \"#macro-local\"\n      }, {\n        \"include\": \"#macro-global\"\n      }, {\n        \"include\": \"#builtin_variables\"\n      }]\n    }]\n  }, {\n    \"captures\": {\n      \"1\": {\n        \"name\": \"keyword.functions.data.stata\"\n      }\n    },\n    \"comment\": \"one-word commands\",\n    \"match\": \"\\\\b(sa(v|ve)|saveold|destring|tostring|u(se|s)?|note(s)?|form(at|a)?)\\\\b\"\n  }, {\n    \"comment\": \"programming commands\",\n    \"match\": \"\\\\b(exit|end)\\\\b\",\n    \"name\": \"keyword.functions.data.stata\"\n  }, {\n    \"captures\": {\n      \"1\": {\n        \"name\": \"keyword.functions.data.stata\"\n      },\n      \"2\": {\n        \"patterns\": [{\n          \"include\": \"#macro-local\"\n        }]\n      },\n      \"4\": {\n        \"name\": \"invalid.illegal.name.stata\"\n      },\n      \"5\": {\n        \"name\": \"keyword.operator.assignment.stata\"\n      }\n    },\n    \"match\": \"\\\\b(replace)\\\\s+([^=]+)\\\\s*((==)|(=))\"\n  }, {\n    \"captures\": {\n      \"1\": {\n        \"name\": \"keyword.functions.data.stata\"\n      },\n      \"3\": {\n        \"name\": \"support.type.stata\"\n      },\n      \"5\": {\n        \"patterns\": [{\n          \"include\": \"#reserved-names\"\n        }, {\n          \"include\": \"#macro-local\"\n        }]\n      },\n      \"7\": {\n        \"name\": \"invalid.illegal.name.stata\"\n      },\n      \"8\": {\n        \"name\": \"keyword.operator.assignment.stata\"\n      }\n    },\n    \"match\": \"\\\\b(g(enerate|enerat|enera|ener|ene|en|e)?|egen)\\\\s+((byte|int|long|float|double|str[1-9]?[0-9]?[0-9]?[0-9]?|strL)\\\\s+)?([^=\\\\s]+)\\\\s*((==)|(=))\"\n  }, {\n    \"captures\": {\n      \"1\": {\n        \"name\": \"keyword.functions.data.stata\"\n      },\n      \"3\": {\n        \"name\": \"support.type.stata\"\n      }\n    },\n    \"match\": \"\\\\b(set ty(pe|p)?)\\\\s+((byte|int|long|float|double|str[1-9]?[0-9]?[0-9]?[0-9]?|strL)?\\\\s+)\\\\b\"\n  }, {\n    \"captures\": {\n      \"1\": {\n        \"name\": \"keyword.functions.data.stata\"\n      },\n      \"3\": {\n        \"name\": \"keyword.functions.data.stata\"\n      },\n      \"6\": {\n        \"name\": \"punctuation.definition.string.begin.stata\"\n      },\n      \"7\": {\n        \"patterns\": [{\n          \"include\": \"#string-compound\"\n        }, {\n          \"include\": \"#macro-local-escaped\"\n        }, {\n          \"include\": \"#macro-global-escaped\"\n        }, {\n          \"include\": \"#macro-local\"\n        }, {\n          \"include\": \"#macro-global\"\n        }, {\n          \"match\": \"[^`\\\\$]{81,}\",\n          \"name\": \"invalid.illegal.name.stata\"\n        }, {\n          \"match\": \".\",\n          \"name\": \"string.quoted.double.compound.stata\"\n        }]\n      },\n      \"8\": {\n        \"name\": \"punctuation.definition.string.begin.stata\"\n      }\n    },\n    \"match\": '\\\\b(la(bel|be|b)?)\\\\s+(var(iable|iabl|iab|ia|i)?)\\\\s+([\\\\w&&[^0-9]]\\\\w{0,31})\\\\s+(`\")(.+)(\"\\')'\n  }, {\n    \"captures\": {\n      \"1\": {\n        \"name\": \"keyword.functions.data.stata\"\n      },\n      \"3\": {\n        \"name\": \"keyword.functions.data.stata\"\n      },\n      \"6\": {\n        \"name\": \"punctuation.definition.string.begin.stata\"\n      },\n      \"7\": {\n        \"patterns\": [{\n          \"include\": \"#macro-local-escaped\"\n        }, {\n          \"include\": \"#macro-global-escaped\"\n        }, {\n          \"include\": \"#macro-local\"\n        }, {\n          \"include\": \"#macro-global\"\n        }, {\n          \"match\": \"[^`\\\\$]{81,}\",\n          \"name\": \"invalid.illegal.name.stata\"\n        }, {\n          \"match\": \".\",\n          \"name\": \"string.quoted.double.stata\"\n        }]\n      },\n      \"8\": {\n        \"name\": \"punctuation.definition.string.begin.stata\"\n      }\n    },\n    \"match\": '\\\\b(la(bel|be|b)?)\\\\s+(var(iable|iabl|iab|ia|i)?)\\\\s+([\\\\w&&[^0-9]]\\\\w{0,31})\\\\s+(\")(.+)(\")'\n  }, {\n    \"captures\": {\n      \"1\": {\n        \"name\": \"keyword.functions.data.stata\"\n      },\n      \"3\": {\n        \"name\": \"keyword.functions.data.stata\"\n      }\n    },\n    \"match\": \"\\\\b(la(bel|be|b)?)\\\\s+(da(ta|t)?|var(iable|iabl|iab|ia|i)?|de(f|fi|fin|fine)?|val(ues|ue|u)?|di(r)?|l(ist|is|i)?|copy|drop|save|lang(uage|uag|ua|u)?)\\\\b\"\n  }, {\n    \"begin\": \"\\\\b(drop|keep)\\\\b(?!\\\\s+(if|in)\\\\b)\",\n    \"beginCaptures\": {\n      \"1\": {\n        \"name\": \"keyword.functions.data.stata\"\n      }\n    },\n    \"end\": \"\\\\n\",\n    \"patterns\": [{\n      \"match\": \"\\\\b(if|in)\\\\b\",\n      \"name\": \"invalid.illegal.name.stata\"\n    }, {\n      \"include\": \"#comments\"\n    }, {\n      \"include\": \"#macro-local\"\n    }, {\n      \"include\": \"#macro-global\"\n    }, {\n      \"include\": \"#operators\"\n    }]\n  }, {\n    \"captures\": {\n      \"1\": {\n        \"name\": \"keyword.functions.data.stata\"\n      },\n      \"2\": {\n        \"name\": \"keyword.functions.data.stata\"\n      }\n    },\n    \"match\": \"\\\\b(drop|keep)\\\\s+(if|in)\\\\b\"\n  }, {\n    \"begin\": \"^\\\\s*mata:?\\\\s*$\",\n    \"comment\": \"won't match single-line Mata statements\",\n    \"end\": \"^\\\\s*end\\\\s*$\\\\n?\",\n    \"name\": \"meta.embedded.block.mata\",\n    \"patterns\": [{\n      \"match\": \"(?<![^$\\\\s])(version|pragma|if|else|for|while|do|break|continue|goto|return)(?=\\\\s)\",\n      \"name\": \"keyword.control.mata\"\n    }, {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"storage.type.eltype.mata\"\n        },\n        \"4\": {\n          \"name\": \"storage.type.orgtype.mata\"\n        }\n      },\n      \"match\": \"\\\\b(transmorphic|string|numeric|real|complex|(pointer(\\\\([^)]+\\\\))?))\\\\s+(matrix|vector|rowvector|colvector|scalar)\\\\b\",\n      \"name\": \"storage.type.mata\"\n    }, {\n      \"comment\": \"need to end with whitespace character here or last group doesn't match\",\n      \"match\": \"\\\\b(transmorphic|string|numeric|real|complex|(pointer(\\\\([^)]+\\\\))?))\\\\s\",\n      \"name\": \"storage.type.eltype.mata\"\n    }, {\n      \"match\": \"\\\\b(matrix|vector|rowvector|colvector|scalar)\\\\b\",\n      \"name\": \"storage.type.orgtype.mata\"\n    }, {\n      \"match\": \"\\\\!|\\\\+\\\\+|\\\\-\\\\-|\\\\&|\\\\'|\\\\?|\\\\\\\\|\\\\:\\\\:|\\\\,|\\\\.\\\\.|\\\\||\\\\=|\\\\=\\\\=|\\\\>\\\\=|\\\\<\\\\=|\\\\<|\\\\>|\\\\!\\\\=|\\\\#|\\\\+|\\\\-|\\\\*|\\\\^|\\\\/\",\n      \"name\": \"keyword.operator.mata\"\n    }, {\n      \"include\": \"$self\"\n    }]\n  }, {\n    \"begin\": \"\\\\b(odbc)\\\\b\",\n    \"beginCaptures\": {\n      \"0\": {\n        \"name\": \"keyword.control.flow.stata\"\n      }\n    },\n    \"end\": \"\\\\n\",\n    \"patterns\": [{\n      \"begin\": \"///\",\n      \"end\": \"\\\\n\",\n      \"name\": \"comment.block.stata\"\n    }, {\n      \"begin\": '(exec?)(\\\\(\")',\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"support.function.builtin.stata\"\n        },\n        \"2\": {\n          \"name\": \"punctuation.definition.parameters.begin.stata\"\n        }\n      },\n      \"end\": '\"\\\\)',\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.parameters.end.stata\"\n        }\n      },\n      \"patterns\": [{\n        \"include\": \"source.sql\"\n      }]\n    }, {\n      \"include\": \"$self\"\n    }]\n  }, {\n    \"include\": \"#commands-other\"\n  }],\n  \"repository\": {\n    \"ascii-regex-character-class\": {\n      \"patterns\": [{\n        \"match\": \"\\\\\\\\[\\\\*\\\\+\\\\?\\\\-\\\\.\\\\^\\\\$\\\\|\\\\[\\\\]\\\\(\\\\)\\\\\\\\]\",\n        \"name\": \"constant.character.escape.backslash.stata\"\n      }, {\n        \"match\": \"\\\\.\",\n        \"name\": \"constant.character.character-class.stata\"\n      }, {\n        \"match\": \"\\\\\\\\.\",\n        \"name\": \"illegal.invalid.character-class.stata\"\n      }, {\n        \"begin\": \"(\\\\[)(\\\\^)?\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.character-class.stata\"\n          },\n          \"2\": {\n            \"name\": \"keyword.operator.negation.stata\"\n          }\n        },\n        \"end\": \"(\\\\])\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.character-class.stata\"\n          }\n        },\n        \"name\": \"constant.other.character-class.set.stata\",\n        \"patterns\": [{\n          \"include\": \"#ascii-regex-character-class\"\n        }, {\n          \"captures\": {\n            \"2\": {\n              \"name\": \"constant.character.escape.backslash.stata\"\n            },\n            \"4\": {\n              \"name\": \"constant.character.escape.backslash.stata\"\n            }\n          },\n          \"match\": \"((\\\\\\\\.)|.)\\\\-((\\\\\\\\.)|[^\\\\]])\",\n          \"name\": \"constant.other.character-class.range.stata\"\n        }]\n      }]\n    },\n    \"ascii-regex-functions\": {\n      \"patterns\": [{\n        \"captures\": {\n          \"1\": {\n            \"name\": \"support.function.builtin.stata\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.definition.parameters.begin.stata\"\n          },\n          \"3\": {\n            \"patterns\": [{\n              \"include\": \"#string-compound\"\n            }, {\n              \"include\": \"#string-regular\"\n            }, {\n              \"include\": \"#macro-local\"\n            }, {\n              \"include\": \"#macro-global\"\n            }, {\n              \"include\": \"#functions\"\n            }, {\n              \"match\": \"[\\\\w&&[^0-9]]\\\\w{0,31}\",\n              \"name\": \"variable.parameter.function.stata\"\n            }, {\n              \"include\": \"#comments-triple-slash\"\n            }]\n          },\n          \"4\": {\n            \"name\": \"punctuation.definition.variable.begin.stata\"\n          },\n          \"5\": {\n            \"name\": \"punctuation.definition.string.begin.stata\"\n          },\n          \"6\": {\n            \"patterns\": [{\n              \"include\": \"#ascii-regex-internals\"\n            }]\n          },\n          \"7\": {\n            \"name\": \"punctuation.definition.string.end.stata\"\n          },\n          \"8\": {\n            \"name\": \"invalid.illegal.punctuation.stata\"\n          },\n          \"9\": {\n            \"name\": \"punctuation.definition.parameters.end.stata\"\n          }\n        },\n        \"comment\": 'color regexm with regular quotes i.e. \" ',\n        \"match\": `\\\\b(regexm)(\\\\()([^,]+)(,)\\\\s*(\")([^\"]+)(\"(')?)\\\\s*(\\\\))`\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"support.function.builtin.stata\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.definition.parameters.begin.stata\"\n          },\n          \"3\": {\n            \"patterns\": [{\n              \"include\": \"#string-compound\"\n            }, {\n              \"include\": \"#string-regular\"\n            }, {\n              \"include\": \"#macro-local\"\n            }, {\n              \"include\": \"#macro-global\"\n            }, {\n              \"include\": \"#functions\"\n            }, {\n              \"match\": \"[\\\\w&&[^0-9]]\\\\w{0,31}\",\n              \"name\": \"variable.parameter.function.stata\"\n            }, {\n              \"include\": \"#comments-triple-slash\"\n            }]\n          },\n          \"4\": {\n            \"name\": \"punctuation.definition.variable.begin.stata\"\n          },\n          \"5\": {\n            \"name\": \"punctuation.definition.string.begin.stata\"\n          },\n          \"6\": {\n            \"patterns\": [{\n              \"include\": \"#ascii-regex-internals\"\n            }]\n          },\n          \"7\": {\n            \"name\": \"punctuation.definition.string.end.stata\"\n          },\n          \"8\": {\n            \"name\": \"punctuation.definition.parameters.end.stata\"\n          }\n        },\n        \"comment\": \"color regexm with compound quotes\",\n        \"match\": '\\\\b(regexm)(\\\\()([^,]+)(,)\\\\s*(`\")([^\"]+)(\"\\')\\\\s*(\\\\))'\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"support.function.builtin.stata\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.definition.parameters.begin.stata\"\n          },\n          \"3\": {\n            \"patterns\": [{\n              \"include\": \"#string-compound\"\n            }, {\n              \"include\": \"#string-regular\"\n            }, {\n              \"include\": \"#macro-local\"\n            }, {\n              \"include\": \"#macro-global\"\n            }, {\n              \"include\": \"#functions\"\n            }, {\n              \"match\": \"[\\\\w&&[^0-9]]\\\\w{0,31}\",\n              \"name\": \"variable.parameter.function.stata\"\n            }, {\n              \"include\": \"#comments\"\n            }]\n          },\n          \"4\": {\n            \"name\": \"punctuation.definition.variable.begin.stata\"\n          },\n          \"5\": {\n            \"name\": \"punctuation.definition.string.begin.stata\"\n          },\n          \"6\": {\n            \"patterns\": [{\n              \"include\": \"#ascii-regex-internals\"\n            }]\n          },\n          \"7\": {\n            \"name\": \"punctuation.definition.string.end.stata\"\n          },\n          \"8\": {\n            \"name\": \"invalid.illegal.punctuation.stata\"\n          },\n          \"9\": {\n            \"patterns\": [{\n              \"match\": \",\",\n              \"name\": \"punctuation.definition.variable.begin.stata\"\n            }, {\n              \"include\": \"#string-compound\"\n            }, {\n              \"include\": \"#string-regular\"\n            }, {\n              \"include\": \"#macro-local\"\n            }, {\n              \"include\": \"#macro-global\"\n            }, {\n              \"include\": \"#functions\"\n            }, {\n              \"match\": \"[\\\\w&&[^0-9]]\\\\w{0,31}\",\n              \"name\": \"variable.parameter.function.stata\"\n            }, {\n              \"include\": \"#comments-triple-slash\"\n            }]\n          },\n          \"10\": {\n            \"name\": \"punctuation.definition.parameters.end.stata\"\n          }\n        },\n        \"comment\": 'color regexr with regular quotes i.e. \" ',\n        \"match\": `\\\\b(regexr)(\\\\()([^,]+)(,)\\\\s*(\")([^\"]+)(\"(')?)\\\\s*([^\\\\)]*)(\\\\))`\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"support.function.builtin.stata\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.definition.parameters.begin.stata\"\n          },\n          \"3\": {\n            \"patterns\": [{\n              \"include\": \"#string-compound\"\n            }, {\n              \"include\": \"#string-regular\"\n            }, {\n              \"include\": \"#macro-local\"\n            }, {\n              \"include\": \"#macro-global\"\n            }, {\n              \"include\": \"#functions\"\n            }, {\n              \"match\": \"[\\\\w&&[^0-9]]\\\\w{0,31}\",\n              \"name\": \"variable.parameter.function.stata\"\n            }, {\n              \"include\": \"#comments\"\n            }]\n          },\n          \"4\": {\n            \"name\": \"punctuation.definition.variable.begin.stata\"\n          },\n          \"5\": {\n            \"name\": \"punctuation.definition.string.begin.stata\"\n          },\n          \"6\": {\n            \"patterns\": [{\n              \"include\": \"#ascii-regex-internals\"\n            }]\n          },\n          \"7\": {\n            \"name\": \"punctuation.definition.string.end.stata\"\n          },\n          \"8\": {\n            \"patterns\": [{\n              \"match\": \",\",\n              \"name\": \"punctuation.definition.variable.begin.stata\"\n            }, {\n              \"include\": \"#string-compound\"\n            }, {\n              \"include\": \"#string-regular\"\n            }, {\n              \"include\": \"#macro-local\"\n            }, {\n              \"include\": \"#macro-global\"\n            }, {\n              \"include\": \"#functions\"\n            }, {\n              \"match\": \"[\\\\w&&[^0-9]]\\\\w{0,31}\",\n              \"name\": \"variable.parameter.function.stata\"\n            }, {\n              \"include\": \"#comments-triple-slash\"\n            }]\n          },\n          \"9\": {\n            \"name\": \"punctuation.definition.parameters.end.stata\"\n          }\n        },\n        \"comment\": 'color regexr with compound quotes i.e. `\"text\"\\' ',\n        \"match\": '\\\\b(regexr)(\\\\()([^,]+)(,)\\\\s*(`\")([^\"]+)(\"\\')\\\\s*([^\\\\)]*)(\\\\))'\n      }]\n    },\n    \"ascii-regex-internals\": {\n      \"patterns\": [{\n        \"match\": \"\\\\^\",\n        \"name\": \"keyword.control.anchor.stata\"\n      }, {\n        \"comment\": \"matched when not a global, but must be ascii\",\n        \"match\": \"\\\\$(?![a-zA-Z_\\\\{])\",\n        \"name\": \"keyword.control.anchor.stata\"\n      }, {\n        \"match\": \"[\\\\?\\\\+\\\\*]\",\n        \"name\": \"keyword.control.quantifier.stata\"\n      }, {\n        \"match\": \"\\\\|\",\n        \"name\": \"keyword.control.or.stata\"\n      }, {\n        \"begin\": \"(\\\\()(?=\\\\?|\\\\*|\\\\+)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.operator.group.stata\"\n          }\n        },\n        \"contentName\": \"invalid.illegal.regexm.stata\",\n        \"end\": \"\\\\)\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"keyword.operator.group.stata\"\n          }\n        }\n      }, {\n        \"begin\": \"(\\\\()\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.operator.group.stata\"\n          }\n        },\n        \"end\": \"(\\\\))\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.operator.group.stata\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#ascii-regex-internals\"\n        }]\n      }, {\n        \"include\": \"#ascii-regex-character-class\"\n      }, {\n        \"include\": \"#macro-local\"\n      }, {\n        \"include\": \"#macro-global\"\n      }, {\n        \"comment\": \"NOTE: Error if I have .+ No idea why but it works fine it seems with just .\",\n        \"match\": \".\",\n        \"name\": \"string.quoted.stata\"\n      }]\n    },\n    \"braces-with-error\": {\n      \"patterns\": [{\n        \"begin\": \"(\\\\{)\\\\s*([^\\\\n]*)(?=\\\\n)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.block.begin.stata\"\n          },\n          \"2\": {\n            \"patterns\": [{\n              \"include\": \"#comments\"\n            }, {\n              \"match\": \"[^\\\\n]+\",\n              \"name\": \"illegal.invalid.name.stata\"\n            }]\n          }\n        },\n        \"comment\": \"correct with nothing else on the line but whitespace; before and after; before; after; correct\",\n        \"end\": '^\\\\s*(\\\\})\\\\s*$|^\\\\s*([^\\\\*\"\\\\}]+)\\\\s+(\\\\})\\\\s*([^\\\\*\"\\\\}/\\\\n]+)|^\\\\s*([^\"\\\\*\\\\}]+)\\\\s+(\\\\})|\\\\s*(\\\\})\\\\s*([^\"\\\\*\\\\}/\\\\n]+)|(\\\\})$',\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.block.end.stata\"\n          },\n          \"2\": {\n            \"name\": \"invalid.illegal.name.stata\"\n          },\n          \"3\": {\n            \"name\": \"keyword.control.block.end.stata\"\n          },\n          \"4\": {\n            \"name\": \"invalid.illegal.name.stata\"\n          },\n          \"5\": {\n            \"name\": \"invalid.illegal.name.stata\"\n          },\n          \"6\": {\n            \"name\": \"keyword.control.block.end.stata\"\n          },\n          \"7\": {\n            \"name\": \"keyword.control.block.end.stata\"\n          },\n          \"8\": {\n            \"name\": \"invalid.illegal.name.stata\"\n          },\n          \"9\": {\n            \"name\": \"keyword.control.block.end.stata\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"$self\"\n        }]\n      }]\n    },\n    \"braces-without-error\": {\n      \"patterns\": [{\n        \"begin\": \"\\\\{\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"keyword.control.block.begin.stata\"\n          }\n        },\n        \"end\": \"\\\\}\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"keyword.control.block.end.stata\"\n          }\n        }\n      }]\n    },\n    \"builtin_types\": {\n      \"patterns\": [{\n        \"match\": \"\\\\b(byte|int|long|float|double|str[1-9]?[0-9]?[0-9]?[0-9]?|strL)\\\\b\",\n        \"name\": \"support.type.stata\"\n      }]\n    },\n    \"builtin_variables\": {\n      \"patterns\": [{\n        \"match\": \"\\\\b(_b|_coef|_cons|_n|_N|_rc|_se)\\\\b\",\n        \"name\": \"variable.object.stata\"\n      }]\n    },\n    \"commands-other\": {\n      \"patterns\": [{\n        \"comment\": \"Add on commands\",\n        \"match\": \"\\\\b(reghdfe|ivreghdfe|ivreg2|outreg|gcollapse|gcontract|gegen|gisid|glevelsof|gquantiles)\\\\b\",\n        \"name\": \"keyword.control.flow.stata\"\n      }, {\n        \"comment\": \"Built in commands\",\n        \"match\": \"\\\\b(about|ac|acprplot|ado|adopath|adoupdate|alpha|ameans|an|ano|anov|anova|anova_terms|anovadef|aorder|ap|app|appe|appen|append|arch|arch_dr|arch_estat|arch_p|archlm|areg|areg_p|args|arima|arima_dr|arima_estat|arima_p|asmprobit|asmprobit_estat|asmprobit_lf|asmprobit_mfx__dlg|asmprobit_p|avplot|avplots|bcskew0|bgodfrey|binreg|bip0_lf|biplot|bipp_lf|bipr_lf|bipr_p|biprobit|bitest|bitesti|bitowt|blogit|bmemsize|boot|bootsamp|boxco_l|boxco_p|boxcox|boxcox_p|bprobit|br|break|brier|bro|brow|brows|browse|brr|brrstat|bs|bsampl_w|bsample|bsqreg|bstat|bstrap|ca|ca_estat|ca_p|cabiplot|camat|canon|canon_estat|canon_p|caprojection|cat|cc|cchart|cci|cd|censobs_table|centile|cf|char|chdir|checkdlgfiles|checkestimationsample|checkhlpfiles|checksum|chelp|ci|cii|cl|class|classutil|clear|cli|clis|clist|clog|clog_lf|clog_p|clogi|clogi_sw|clogit|clogit_lf|clogit_p|clogitp|clogl_sw|cloglog|clonevar|clslistarray|cluster|cluster_measures|cluster_stop|cluster_tree|cluster_tree_8|clustermat|cmdlog|cnr|cnre|cnreg|cnreg_p|cnreg_sw|cnsreg|codebook|collaps4|collapse|colormult_nb|colormult_nw|compare|compress|conf|confi|confir|confirm|conren|cons|const|constr|constra|constrai|constrain|constraint|contract|copy|copyright|copysource|cor|corc|corr|corr2data|corr_anti|corr_kmo|corr_smc|corre|correl|correla|correlat|correlate|corrgram|cou|coun|count|cprplot|crc|cret|cretu|cretur|creturn|cross|cs|cscript|cscript_log|csi|ct|ct_is|ctset|ctst_st|cttost|cumsp|cumul|cusum|cutil|d|datasig|datasign|datasigna|datasignat|datasignatu|datasignatur|datasignature|datetof|db|dbeta|de|dec|deco|decod|decode|deff|des|desc|descr|descri|describ|describe|dfbeta|dfgls|dfuller|di|di_g|dir|dirstats|dis|discard|disp|disp_res|disp_s|displ|displa|display|do|doe|doed|doedi|doedit|dotplot|dprobit|drawnorm|ds|ds_util|dstdize|duplicates|durbina|dwstat|dydx|ed|edi|edit|eivreg|emdef|en|enc|enco|encod|encode|eq|erase|ereg|ereg_lf|ereg_p|ereg_sw|ereghet|ereghet_glf|ereghet_glf_sh|ereghet_gp|ereghet_ilf|ereghet_ilf_sh|ereghet_ip|eret|eretu|eretur|ereturn|err|erro|error|est|est_cfexist|est_cfname|est_clickable|est_expand|est_hold|est_table|est_unhold|est_unholdok|estat|estat_default|estat_summ|estat_vce_only|esti|estimates|etodow|etof|etomdy|expand|expandcl|fac|fact|facto|factor|factor_estat|factor_p|factor_pca_rotated|factor_rotate|factormat|fcast|fcast_compute|fcast_graph|fdades|fdadesc|fdadescr|fdadescri|fdadescrib|fdadescribe|fdasav|fdasave|fdause|fh_st|file|filefilter|fillin|find_hlp_file|findfile|findit|fit|fl|fli|flis|flist|fpredict|frac_adj|frac_chk|frac_cox|frac_ddp|frac_dis|frac_dv|frac_in|frac_mun|frac_pp|frac_pq|frac_pv|frac_wgt|frac_xo|fracgen|fracplot|fracpoly|fracpred|fron_ex|fron_hn|fron_p|fron_tn|fron_tn2|frontier|ftodate|ftoe|ftomdy|ftowdate|gamhet_glf|gamhet_gp|gamhet_ilf|gamhet_ip|gamma|gamma_d2|gamma_p|gamma_sw|gammahet|gdi_hexagon|gdi_spokes|genrank|genstd|genvmean|gettoken|gladder|glim_l01|glim_l02|glim_l03|glim_l04|glim_l05|glim_l06|glim_l07|glim_l08|glim_l09|glim_l10|glim_l11|glim_l12|glim_lf|glim_mu|glim_nw1|glim_nw2|glim_nw3|glim_p|glim_v1|glim_v2|glim_v3|glim_v4|glim_v5|glim_v6|glim_v7|glm|glm_p|glm_sw|glmpred|glogit|glogit_p|gmeans|gnbre_lf|gnbreg|gnbreg_p|gomp_lf|gompe_sw|gomper_p|gompertz|gompertzhet|gomphet_glf|gomphet_glf_sh|gomphet_gp|gomphet_ilf|gomphet_ilf_sh|gomphet_ip|gphdot|gphpen|gphprint|gprefs|gprobi_p|gprobit|gr|gr7|gr_copy|gr_current|gr_db|gr_describe|gr_dir|gr_draw|gr_draw_replay|gr_drop|gr_edit|gr_editviewopts|gr_example|gr_example2|gr_export|gr_print|gr_qscheme|gr_query|gr_read|gr_rename|gr_replay|gr_save|gr_set|gr_setscheme|gr_table|gr_undo|gr_use|graph|grebar|greigen|grmeanby|gs_fileinfo|gs_filetype|gs_graphinfo|gs_stat|gsort|gwood|h|hareg|hausman|haver|he|heck_d2|heckma_p|heckman|heckp_lf|heckpr_p|heckprob|hel|help|hereg|hetpr_lf|hetpr_p|hetprob|hettest|hexdump|hilite|hist|histogram|hlogit|hlu|hmeans|hotel|hotelling|hprobit|hreg|hsearch|icd9|icd9_ff|icd9p|iis|impute|imtest|inbase|include|inf|infi|infil|infile|infix|inp|inpu|input|ins|insheet|insp|inspe|inspec|inspect|integ|inten|intreg|intreg_p|intrg2_ll|intrg_ll|intrg_ll2|ipolate|iqreg|ir|irf|irf_create|irfm|iri|is_svy|is_svysum|isid|istdize|ivprobit|ivprobit_p|ivreg|ivreg_footnote|ivtob_lf|ivtobit|ivtobit_p|jacknife|jknife|jkstat|joinby|kalarma1|kap|kapmeier|kappa|kapwgt|kdensity|ksm|ksmirnov|ktau|kwallis|labelbook|ladder|levelsof|leverage|lfit|lfit_p|li|lincom|line|linktest|lis|list|lloghet_glf|lloghet_glf_sh|lloghet_gp|lloghet_ilf|lloghet_ilf_sh|lloghet_ip|llogi_sw|llogis_p|llogist|llogistic|llogistichet|lnorm_lf|lnorm_sw|lnorma_p|lnormal|lnormalhet|lnormhet_glf|lnormhet_glf_sh|lnormhet_gp|lnormhet_ilf|lnormhet_ilf_sh|lnormhet_ip|lnskew0|loadingplot|(?<!\\\\.)log|logi|logis_lf|logistic|logistic_p|logit|logit_estat|logit_p|loglogs|logrank|loneway|lookfor|lookup|lowess|lpredict|lrecomp|lroc|lrtest|ls|lsens|lsens_x|lstat|ltable|ltriang|lv|lvr2plot|m|ma|mac|macr|macro|makecns|man|manova|manovatest|mantel|mark|markin|markout|marksample|mat|mat_capp|mat_order|mat_put_rr|mat_rapp|mata|mata_clear|mata_describe|mata_drop|mata_matdescribe|mata_matsave|mata_matuse|mata_memory|mata_mlib|mata_mosave|mata_rename|mata_which|matalabel|matcproc|matlist|matname|matr|matri|matrix|matrix_input__dlg|matstrik|mcc|mcci|md0_|md1_|md1debug_|md2_|md2debug_|mds|mds_estat|mds_p|mdsconfig|mdslong|mdsmat|mdsshepard|mdytoe|mdytof|me_derd|mean|means|median|memory|memsize|mfp|mfx|mhelp|mhodds|minbound|mixed_ll|mixed_ll_reparm|mkassert|mkdir|mkmat|mkspline|ml|ml_adjs|ml_bhhhs|ml_c_d|ml_check|ml_clear|ml_cnt|ml_debug|ml_defd|ml_e0|ml_e0_bfgs|ml_e0_cycle|ml_e0_dfp|ml_e0i|ml_e1|ml_e1_bfgs|ml_e1_bhhh|ml_e1_cycle|ml_e1_dfp|ml_e2|ml_e2_cycle|ml_ebfg0|ml_ebfr0|ml_ebfr1|ml_ebh0q|ml_ebhh0|ml_ebhr0|ml_ebr0i|ml_ecr0i|ml_edfp0|ml_edfr0|ml_edfr1|ml_edr0i|ml_eds|ml_eer0i|ml_egr0i|ml_elf|ml_elf_bfgs|ml_elf_bhhh|ml_elf_cycle|ml_elf_dfp|ml_elfi|ml_elfs|ml_enr0i|ml_enrr0|ml_erdu0|ml_erdu0_bfgs|ml_erdu0_bhhh|ml_erdu0_bhhhq|ml_erdu0_cycle|ml_erdu0_dfp|ml_erdu0_nrbfgs|ml_exde|ml_footnote|ml_geqnr|ml_grad0|ml_graph|ml_hbhhh|ml_hd0|ml_hold|ml_init|ml_inv|ml_log|ml_max|ml_mlout|ml_mlout_8|ml_model|ml_nb0|ml_opt|ml_p|ml_plot|ml_query|ml_rdgrd|ml_repor|ml_s_e|ml_score|ml_searc|ml_technique|ml_unhold|mleval|mlf_|mlmatbysum|mlmatsum|mlog|mlogi|mlogit|mlogit_footnote|mlogit_p|mlopts|mlsum|mlvecsum|mnl0_|mor|more|mov|move|mprobit|mprobit_lf|mprobit_p|mrdu0_|mrdu1_|mvdecode|mvencode|mvreg|mvreg_estat|nbreg|nbreg_al|nbreg_lf|nbreg_p|nbreg_sw|nestreg|net|newey|newey_p|news|nl|nlcom|nlcom_p|nlexp2|nlexp2a|nlexp3|nlgom3|nlgom4|nlinit|nllog3|nllog4|nlog_rd|nlogit|nlogit_p|nlogitgen|nlogittree|nlpred|nobreak|notes_dlg|nptrend|numlabel|numlist|old_ver|olo|olog|ologi|ologi_sw|ologit|ologit_p|ologitp|on|one|onew|onewa|oneway|op_colnm|op_comp|op_diff|op_inv|op_str|opr|opro|oprob|oprob_sw|oprobi|oprobi_p|oprobit|oprobitp|opts_exclusive|order|orthog|orthpoly|ou|out|outf|outfi|outfil|outfile|outs|outsh|outshe|outshee|outsheet|ovtest|pac|palette|parse_dissim|pause|pca|pca_display|pca_estat|pca_p|pca_rotate|pcamat|pchart|pchi|pcorr|pctile|pentium|pergram|personal|peto_st|pkcollapse|pkcross|pkequiv|pkexamine|pkshape|pksumm|plugin|pnorm|poisgof|poiss_lf|poiss_sw|poisso_p|poisson|poisson_estat|post|postclose|postfile|postutil|pperron|prais|prais_e|prais_e2|prais_p|predict|predictnl|preserve|print|prob|probi|probit|probit_estat|probit_p|proc_time|procoverlay|procrustes|procrustes_estat|procrustes_p|profiler|prop|proportion|prtest|prtesti|pwcorr|pwd|qs|qby|qbys|qchi|qladder|qnorm|qqplot|qreg|qreg_c|qreg_p|qreg_sw|qu|quadchk|quantile|que|quer|query|range|ranksum|ratio|rchart|rcof|recast|recode|reg|reg3|reg3_p|regdw|regr|regre|regre_p2|regres|regres_p|regress|regress_estat|regriv_p|remap|ren|rena|renam|rename|renpfix|repeat|reshape|restore|ret|retu|retur|return|rmdir|robvar|roccomp|rocf_lf|rocfit|rocgold|rocplot|roctab|rologit|rologit_p|rot|rota|rotat|rotate|rotatemat|rreg|rreg_p|ru|run|runtest|rvfplot|rvpplot|safesum|sample|sampsi|savedresults|sc|scatter|scm_mine|sco|scob_lf|scob_p|scobi_sw|scobit|scor|score|scoreplot|scoreplot_help|scree|screeplot|screeplot_help|sdtest|sdtesti|se|search|separate|seperate|serrbar|serset|set|set_defaults|sfrancia|sh|she|shel|shell|shewhart|signestimationsample|signrank|signtest|simul|sktest|sleep|slogit|slogit_d2|slogit_p|smooth|snapspan|so|sor|sort|spearman|spikeplot|spikeplt|spline_x|split|sqreg|sqreg_p|sret|sretu|sretur|sreturn|ssc|st|st_ct|st_hc|st_hcd|st_hcd_sh|st_is|st_issys|st_note|st_promo|st_set|st_show|st_smpl|st_subid|stack|stbase|stci|stcox|stcox_estat|stcox_fr|stcox_fr_ll|stcox_p|stcox_sw|stcoxkm|stcstat|stcurv|stcurve|stdes|stem|stepwise|stfill|stgen|stir|stjoin|stmc|stmh|stphplot|stphtest|stptime|strate|streg|streg_sw|streset|sts|stset|stsplit|stsum|sttocc|sttoct|stvary|su|suest|sum|summ|summa|summar|summari|summariz|summarize|sunflower|sureg|survcurv|survsum|svar|svar_p|svmat|svy_disp|svy_dreg|svy_est|svy_est_7|svy_estat|svy_get|svy_gnbreg_p|svy_head|svy_header|svy_heckman_p|svy_heckprob_p|svy_intreg_p|svy_ivreg_p|svy_logistic_p|svy_logit_p|svy_mlogit_p|svy_nbreg_p|svy_ologit_p|svy_oprobit_p|svy_poisson_p|svy_probit_p|svy_regress_p|svy_sub|svy_sub_7|svy_x|svy_x_7|svy_x_p|svydes|svygen|svygnbreg|svyheckman|svyheckprob|svyintreg|svyintrg|svyivreg|svylc|svylog_p|svylogit|svymarkout|svymean|svymlog|svymlogit|svynbreg|svyolog|svyologit|svyoprob|svyoprobit|svyopts|svypois|svypoisson|svyprobit|svyprobt|svyprop|svyratio|svyreg|svyreg_p|svyregress|svyset|svytab|svytest|svytotal|sw|swilk|symmetry|symmi|symplot|sysdescribe|sysdir|sysuse|szroeter|ta|tab|tab1|tab2|tab_or|tabd|tabdi|tabdis|tabdisp|tabi|table|tabodds|tabstat|tabu|tabul|tabula|tabulat|tabulate|te|tes|test|testnl|testparm|teststd|tetrachoric|time_it|timer|tis|tob|tobi|tobit|tobit_p|tobit_sw|token|tokeni|tokeniz|tokenize|total|translate|translator|transmap|treat_ll|treatr_p|treatreg|trim|trnb_cons|trnb_mean|trpoiss_d2|trunc_ll|truncr_p|truncreg|tsappend|tset|tsfill|tsline|tsline_ex|tsreport|tsrevar|tsrline|tsset|tssmooth|tsunab|ttest|ttesti|tut_chk|tut_wait|tutorial|tw|tware_st|two|twoway|twoway__fpfit_serset|twoway__function_gen|twoway__histogram_gen|twoway__ipoint_serset|twoway__ipoints_serset|twoway__kdensity_gen|twoway__lfit_serset|twoway__normgen_gen|twoway__pci_serset|twoway__qfit_serset|twoway__scatteri_serset|twoway__sunflower_gen|twoway_ksm_serset|ty|typ|type|typeof|unab|unabbrev|unabcmd|update|uselabel|var|var_mkcompanion|var_p|varbasic|varfcast|vargranger|varirf|varirf_add|varirf_cgraph|varirf_create|varirf_ctable|varirf_describe|varirf_dir|varirf_drop|varirf_erase|varirf_graph|varirf_ograph|varirf_rename|varirf_set|varirf_table|varlmar|varnorm|varsoc|varstable|varstable_w|varstable_w2|varwle|vec|vec_fevd|vec_mkphi|vec_p|vec_p_w|vecirf_create|veclmar|veclmar_w|vecnorm|vecnorm_w|vecrank|vecstable|verinst|vers|versi|versio|version|view|viewsource|vif|vwls|wdatetof|webdescribe|webseek|webuse|wh|whelp|whi|which|wilc_st|wilcoxon|win|wind|windo|window|winexec|wntestb|wntestq|xchart|xcorr|xi|xmlsav|xmlsave|xmluse|xpose|xsh|xshe|xshel|xshell|xt_iis|xt_tis|xtab_p|xtabond|xtbin_p|xtclog|xtcloglog|xtcloglog_d2|xtcloglog_pa_p|xtcloglog_re_p|xtcnt_p|xtcorr|xtdata|xtdes|xtfront_p|xtfrontier|xtgee|xtgee_elink|xtgee_estat|xtgee_makeivar|xtgee_p|xtgee_plink|xtgls|xtgls_p|xthaus|xthausman|xtht_p|xthtaylor|xtile|xtint_p|xtintreg|xtintreg_d2|xtintreg_p|xtivreg|xtline|xtline_ex|xtlogit|xtlogit_d2|xtlogit_fe_p|xtlogit_pa_p|xtlogit_re_p|xtmixed|xtmixed_estat|xtmixed_p|xtnb_fe|xtnb_lf|xtnbreg|xtnbreg_pa_p|xtnbreg_refe_p|xtpcse|xtpcse_p|xtpois|xtpoisson|xtpoisson_d2|xtpoisson_pa_p|xtpoisson_refe_p|xtpred|xtprobit|xtprobit_d2|xtprobit_re_p|xtps_fe|xtps_lf|xtps_ren|xtps_ren_8|xtrar_p|xtrc|xtrc_p|xtrchh|xtrefe_p|yx|yxview__barlike_draw|yxview_area_draw|yxview_bar_draw|yxview_dot_draw|yxview_dropline_draw|yxview_function_draw|yxview_iarrow_draw|yxview_ilabels_draw|yxview_normal_draw|yxview_pcarrow_draw|yxview_pcbarrow_draw|yxview_pccapsym_draw|yxview_pcscatter_draw|yxview_pcspike_draw|yxview_rarea_draw|yxview_rbar_draw|yxview_rbarm_draw|yxview_rcap_draw|yxview_rcapsym_draw|yxview_rconnected_draw|yxview_rline_draw|yxview_rscatter_draw|yxview_rspike_draw|yxview_spike_draw|yxview_sunflower_draw|zap_s|zinb|zinb_llf|zinb_plf|zip|zip_llf|zip_p|zip_plf|zt_ct_5|zt_hc_5|zt_hcd_5|zt_is_5|zt_iss_5|zt_sho_5|zt_smp_5|ztnb|ztnb_p|ztp|ztp_p|prtab|prchange|eststo|estout|esttab|estadd|estpost|ivregress|xtreg|xtreg_be|xtreg_fe|xtreg_ml|xtreg_pa_p|xtreg_re|xtregar|xtrere_p|xtset|xtsf_ll|xtsf_llti|xtsum|xttab|xttest0|xttobit|xttobit_p|xttrans)\\\\b\",\n        \"name\": \"keyword.control.flow.stata\"\n      }]\n    },\n    \"comments\": {\n      \"patterns\": [{\n        \"include\": \"#comments-double-slash\"\n      }, {\n        \"include\": \"#comments-star\"\n      }, {\n        \"include\": \"#comments-block\"\n      }, {\n        \"include\": \"#comments-triple-slash\"\n      }]\n    },\n    \"comments-block\": {\n      \"patterns\": [{\n        \"begin\": \"/\\\\*\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.comment.begin.stata\"\n          }\n        },\n        \"end\": \"(\\\\*/\\\\s+\\\\*[^\\\\n]*)|(\\\\*/(?!\\\\*))\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.comment.end.stata\"\n          }\n        },\n        \"name\": \"comment.block.stata\",\n        \"patterns\": [{\n          \"comment\": \"this ends and restarts a comment block. but need to catch this so that it doesn't start _another_ level of comment blocks\",\n          \"match\": \"\\\\*/\\\\*\"\n        }, {\n          \"include\": \"#docblockr-comment\"\n        }, {\n          \"include\": \"#comments-block\"\n        }, {\n          \"include\": \"#docstring\"\n        }]\n      }]\n    },\n    \"comments-double-slash\": {\n      \"patterns\": [{\n        \"begin\": \"(^//|(?<=\\\\s)//)(?!/)\",\n        \"captures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.comment.stata\"\n          }\n        },\n        \"end\": \"(?=\\\\n)\",\n        \"name\": \"comment.line.double-slash.stata\",\n        \"patterns\": [{\n          \"include\": \"#docblockr-comment\"\n        }]\n      }]\n    },\n    \"comments-star\": {\n      \"patterns\": [{\n        \"begin\": \"^\\\\s*(\\\\*)\",\n        \"captures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.comment.stata\"\n          }\n        },\n        \"comment\": \"TODO! need to except out the occasion that a * comes after a /// on the previous line. May be easiest to join with the comment.line.triple-slash.stata below\",\n        \"end\": \"(?=\\\\n)\",\n        \"name\": \"comment.line.star.stata\",\n        \"patterns\": [{\n          \"include\": \"#docblockr-comment\"\n        }, {\n          \"begin\": \"///\",\n          \"end\": \"\\\\n\",\n          \"name\": \"comment.line-continuation.stata\"\n        }, {\n          \"include\": \"#comments\"\n        }]\n      }]\n    },\n    \"comments-triple-slash\": {\n      \"patterns\": [{\n        \"begin\": \"(^///|(?<=\\\\s)///)\",\n        \"captures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.comment.stata\"\n          }\n        },\n        \"end\": \"(?=\\\\n)\",\n        \"name\": \"comment.line.triple-slash.stata\",\n        \"patterns\": [{\n          \"include\": \"#docblockr-comment\"\n        }]\n      }]\n    },\n    \"constants\": {\n      \"patterns\": [{\n        \"include\": \"#factorvariables\"\n      }, {\n        \"match\": \"\\\\b(?i:(\\\\d+\\\\.\\\\d*(e[\\\\-\\\\+]?\\\\d+)?))(?=[^a-zA-Z_])\",\n        \"name\": \"constant.numeric.float.stata\"\n      }, {\n        \"match\": \"(?<=[^0-9a-zA-Z_])(?i:(\\\\.\\\\d+(e[\\\\-\\\\+]?\\\\d+)?))\",\n        \"name\": \"constant.numeric.float.stata\"\n      }, {\n        \"match\": \"\\\\b(?i:(\\\\d+e[\\\\-\\\\+]?\\\\d+))\",\n        \"name\": \"constant.numeric.float.stata\"\n      }, {\n        \"match\": \"\\\\b(\\\\d+)\\\\b\",\n        \"name\": \"constant.numeric.integer.decimal.stata\"\n      }, {\n        \"match\": \"(?<![\\\\w])(\\\\.(?![\\\\./]))(?![\\\\w])\",\n        \"name\": \"constant.language.missing.stata\"\n      }, {\n        \"match\": \"\\\\b_all\\\\b\",\n        \"name\": \"constant.language.allvars.stata\"\n      }]\n    },\n    \"docblockr-comment\": {\n      \"patterns\": [{\n        \"captures\": {\n          \"1\": {\n            \"name\": \"invalid.illegal.name.stata\"\n          }\n        },\n        \"match\": \"(?<!\\\\w)(@(error|ERROR|Error))\\\\b\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"keyword.docblockr.stata\"\n          }\n        },\n        \"match\": \"(?<!\\\\w)(@\\\\w+)\\\\b\"\n      }]\n    },\n    \"docstring\": {\n      \"patterns\": [{\n        \"begin\": \"'''\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.begin.stata\"\n          }\n        },\n        \"end\": \"'''\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.begin.stata\"\n          }\n        },\n        \"name\": \"string.quoted.docstring.stata\"\n      }, {\n        \"begin\": '\"\"\"',\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.begin.stata\"\n          }\n        },\n        \"end\": '\"\"\"',\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.begin.stata\"\n          }\n        },\n        \"name\": \"string.quoted.docstring.stata\"\n      }]\n    },\n    \"factorvariables\": {\n      \"patterns\": [{\n        \"match\": \"\\\\b(i|c|o)\\\\.(?=[\\\\w&&[^0-9]]|\\\\([\\\\w&&[^0-9]])\",\n        \"name\": \"constant.language.factorvars.stata\"\n      }, {\n        \"captures\": {\n          \"0\": {\n            \"name\": \"constant.language.factorvars.stata\"\n          },\n          \"3\": {\n            \"patterns\": [{\n              \"include\": \"#constants\"\n            }]\n          }\n        },\n        \"match\": \"\\\\b(i?b)((\\\\d+)|n)\\\\.(?=[\\\\w&&[^0-9]]|\\\\([\\\\w&&[^0-9]])\"\n      }, {\n        \"captures\": {\n          \"0\": {\n            \"name\": \"constant.language.factorvars.stata\"\n          },\n          \"2\": {\n            \"name\": \"keyword.operator.parentheses.stata\"\n          },\n          \"3\": {\n            \"patterns\": [{\n              \"include\": \"#constants\"\n            }, {\n              \"include\": \"#operators\"\n            }]\n          },\n          \"4\": {\n            \"name\": \"keyword.operator.parentheses.stata\"\n          }\n        },\n        \"match\": \"\\\\b(i?b)(\\\\()(#\\\\d+|first|last|freq)(\\\\))\\\\.(?=[\\\\w&&[^0-9]]|\\\\([\\\\w&&[^0-9]])\"\n      }, {\n        \"captures\": {\n          \"0\": {\n            \"name\": \"constant.language.factorvars.stata\"\n          },\n          \"2\": {\n            \"patterns\": [{\n              \"include\": \"#constants\"\n            }]\n          }\n        },\n        \"match\": \"\\\\b(i?o?)(\\\\d+)\\\\.(?=[\\\\w&&[^0-9]]|\\\\([\\\\w&&[^0-9]])\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"constant.language.factorvars.stata\"\n          },\n          \"2\": {\n            \"name\": \"keyword.operator.parentheses.stata\"\n          },\n          \"3\": {\n            \"patterns\": [{\n              \"include\": \"$self\"\n            }]\n          },\n          \"4\": {\n            \"name\": \"keyword.operator.parentheses.stata\"\n          },\n          \"5\": {\n            \"name\": \"constant.language.factorvars.stata\"\n          }\n        },\n        \"match\": \"\\\\b(i?o?)(\\\\()(.*?)(\\\\))(\\\\.)(?=[\\\\w&&[^0-9]]|\\\\([\\\\w&&[^0-9]])\"\n      }]\n    },\n    \"functions\": {\n      \"patterns\": [{\n        \"begin\": \"\\\\b((abbrev|abs|acos|acosh|asin|asinh|atan|atan2|atanh|autocode|betaden|binomial|binomialp|binomialtail|binormalbofd|byteorder|c|cauchy|cauchyden|cauchytail|Cdhms|ceil|char|chi2|chi2den|chi2tail|Chms|cholesky|chop|clip|clock|Clock|cloglog|Cmdyhms|cofC|Cofc|cofd|Cofd|coleqnumb|collatorlocale|collatorversion|colnfreeparms|colnumb|colsof|comb|cond|corr|cos|cosh|daily|date|day|det|dgammapda|dgammapdada|dgammapdadx|dgammapdx|dgammapdxdx|dhms|diag|diag0cnt|digamma|dofb|dofc|dofC|dofh|dofm|dofq|dofw|dofy|dow|doy|dunnettprob|e|el|epsdouble|epsfloat|exp|exponential|exponentialden|exponentialtail|F|Fden|fileexists|fileread|filereaderror|filewrite|float|floor|fmtwidth|Ftail|gammaden|gammap|gammaptail|get|hadamard|halfyear|halfyearly|hh|hhC|hms|hofd|hours|hypergeometric|hypergeometricp|I|ibeta|ibetatail|igaussian|igaussianden|igaussiantail|indexnot|inlist|inrange|int|inv|invbinomial|invbinomialtail|invcauchy|invcauchytail|invchi2|invchi2tail|invcloglog|invdunnettprob|invexponential|invexponentialtail|invF|invFtail|invgammap|invgammaptail|invibeta|invibetatail|invigaussian|invigaussiantail|invlaplace|invlaplacetail|invlogistic|invlogistictail|invlogit|invnbinomial|invnbinomialtail|invnchi2|invnchi2tail|invnF|invnFtail|invnibeta|invnormal|invnt|invnttail|invpoisson|invpoissontail|invsym|invt|invttail|invtukeyprob|invweibull|invweibullph|invweibullphtail|invweibulltail|irecode|issymmetric|itrim|J|laplace|laplaceden|laplacetail|length|ln|lncauchyden|lnfactorial|lngamma|lnigammaden|lnigaussianden|lniwishartden|lnlaplaceden|lnmvnormalden|lnnormal|lnnormalden|lnwishartden|log|log10|logistic|logisticden|logistictail|logit|lower|ltrim|matmissing|matrix|matuniform|max|maxbyte|maxdouble|maxfloat|maxint|maxlong|mdy|mdyhms|mi|min|minbyte|mindouble|minfloat|minint|minlong|minutes|missing|mm|mmC|mod|mofd|month|monthly|mreldif|msofhours|msofminutes|msofseconds|nbetaden|nbinomial|nbinomialp|nbinomialtail|nchi2|nchi2den|nchi2tail|nF|nFden|nFtail|nibeta|normal|normalden|npnchi2|npnF|npnt|nt|ntden|nttail|nullmat|plural|poisson|poissonp|poissontail|proper|qofd|quarter|quarterly|r|rbeta|rbinomial|rcauchy|rchi2|real|recode|regexs|reldif|replay|return|reverse|rexponential|rgamma|rhypergeometric|rigaussian|rlaplace|rlogistic|rnbinomial|rnormal|round|roweqnumb|rownfreeparms|rownumb|rowsof|rpoisson|rt|rtrim|runiform|runiformint|rweibull|rweibullph|s|scalar|seconds|sign|sin|sinh|smallestdouble|soundex|sqrt|ss|ssC|string|stritrim|strlen|strlower|strltrim|strmatch|strofreal|strpos|strproper|strreverse|strrpos|strrtrim|strtoname|strtrim|strupper|subinstr|subinword|substr|sum|sweep|t|tan|tanh|tc|tC|td|tden|th|tin|tm|tobytes|tq|trace|trigamma|trim|trunc|ttail|tukeyprob|tw|twithin|uchar|udstrlen|udsubstr|uisdigit|uisletter|upper|ustrcompare|ustrcompareex|ustrfix|ustrfrom|ustrinvalidcnt|ustrleft|ustrlen|ustrlower|ustrltrim|ustrnormalize|ustrpos|ustrregexs|ustrreverse|ustrright|ustrrpos|ustrrtrim|ustrsortkey|ustrsortkeyex|ustrtitle|ustrto|ustrtohex|ustrtoname|ustrtrim|ustrunescape|ustrupper|ustrword|ustrwordcount|usubinstr|usubstr|vec|vecdiag|week|weekly|weibull|weibullden|weibullph|weibullphden|weibullphtail|weibulltail|wofd|word|wordbreaklocale|wordcount|year|yearly|yh|ym|yofd|yq|yw)|([\\\\w&&[^0-9]]\\\\w{0,31}))(\\\\()\",\n        \"beginCaptures\": {\n          \"2\": {\n            \"name\": \"support.function.builtin.stata\"\n          },\n          \"3\": {\n            \"name\": \"support.function.custom.stata\"\n          },\n          \"4\": {\n            \"name\": \"punctuation.definition.parameters.begin.stata\"\n          }\n        },\n        \"end\": \"(\\\\))\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.parameters.end.stata\"\n          }\n        },\n        \"patterns\": [{\n          \"match\": \"[\\\\w&&[^0-9]]\\\\w{0,31}\",\n          \"name\": \"variable.parameter.function.stata\"\n        }, {\n          \"begin\": \"\\\\(\",\n          \"beginCaptures\": {\n            \"0\": {\n              \"name\": \"keyword.operator.parentheses.stata\"\n            }\n          },\n          \"end\": \"\\\\)\",\n          \"endCaptures\": {\n            \"0\": {\n              \"name\": \"keyword.operator.parentheses.stata\"\n            }\n          },\n          \"patterns\": [{\n            \"include\": \"#ascii-regex-functions\"\n          }, {\n            \"include\": \"#unicode-regex-functions\"\n          }, {\n            \"include\": \"#functions\"\n          }, {\n            \"include\": \"#subscripts\"\n          }, {\n            \"include\": \"#constants\"\n          }, {\n            \"include\": \"#comments\"\n          }, {\n            \"include\": \"#operators\"\n          }, {\n            \"include\": \"#macro-local\"\n          }, {\n            \"include\": \"#macro-global\"\n          }, {\n            \"include\": \"#string-compound\"\n          }, {\n            \"include\": \"#string-regular\"\n          }, {\n            \"include\": \"#builtin_variables\"\n          }, {\n            \"include\": \"#macro-commands\"\n          }, {\n            \"include\": \"#braces-without-error\"\n          }, {\n            \"match\": \"[\\\\w&&[^0-9]]\\\\w{0,31}\",\n            \"name\": \"variable.parameter.function.stata\"\n          }]\n        }, {\n          \"include\": \"#ascii-regex-functions\"\n        }, {\n          \"include\": \"#unicode-regex-functions\"\n        }, {\n          \"include\": \"#functions\"\n        }, {\n          \"include\": \"#subscripts\"\n        }, {\n          \"include\": \"#constants\"\n        }, {\n          \"include\": \"#comments\"\n        }, {\n          \"include\": \"#operators\"\n        }, {\n          \"include\": \"#macro-local\"\n        }, {\n          \"include\": \"#macro-global\"\n        }, {\n          \"include\": \"#string-compound\"\n        }, {\n          \"include\": \"#string-regular\"\n        }, {\n          \"include\": \"#builtin_variables\"\n        }, {\n          \"include\": \"#macro-commands\"\n        }, {\n          \"include\": \"#braces-without-error\"\n        }]\n      }]\n    },\n    \"macro-commands\": {\n      \"patterns\": [{\n        \"begin\": \"\\\\b(loc(al|a)?)\\\\s+([\\\\w'`\\\\$\\\\(\\\\)\\\\{\\\\}]+)\\\\s*(?=:|=)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.macro.stata\"\n          },\n          \"3\": {\n            \"patterns\": [{\n              \"include\": \"#macro-local-identifiers\"\n            }, {\n              \"include\": \"#macro-local\"\n            }, {\n              \"include\": \"#macro-global\"\n            }]\n          }\n        },\n        \"end\": \"\\\\n\",\n        \"patterns\": [{\n          \"begin\": \"=\",\n          \"beginCaptures\": {\n            \"0\": {\n              \"name\": \"keyword.operator.arithmetic.stata\"\n            }\n          },\n          \"end\": \"(?=\\\\n)\",\n          \"patterns\": [{\n            \"include\": \"$self\"\n          }]\n        }, {\n          \"begin\": \":\",\n          \"beginCaptures\": {\n            \"0\": {\n              \"name\": \"keyword.operator.arithmetic.stata\"\n            }\n          },\n          \"end\": \"(?=\\\\n)\",\n          \"patterns\": [{\n            \"include\": \"#macro-extended-functions\"\n          }]\n        }]\n      }, {\n        \"begin\": \"\\\\b(gl(obal|oba|ob|o)?)\\\\s+(?=[\\\\w`\\\\$])\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.macro.stata\"\n          }\n        },\n        \"end\": '(\\\\})|(?=\\\\\"|\\\\s|\\\\n|/|,|=)',\n        \"patterns\": [{\n          \"include\": \"#reserved-names\"\n        }, {\n          \"match\": \"[\\\\w&&[^0-9_]]\\\\w{0,31}\",\n          \"name\": \"entity.name.type.class.stata\"\n        }, {\n          \"include\": \"#macro-local\"\n        }, {\n          \"include\": \"#macro-global\"\n        }]\n      }, {\n        \"begin\": \"\\\\b(loc(al|a)?)\\\\s+(\\\\+\\\\+|\\\\-\\\\-)?(?=[\\\\w`\\\\$])\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.macro.stata\"\n          },\n          \"3\": {\n            \"name\": \"keyword.operator.arithmetic.stata\"\n          }\n        },\n        \"end\": '(?=\\\\\"|\\\\s|\\\\n|/|,|=)',\n        \"patterns\": [{\n          \"include\": \"#macro-local-identifiers\"\n        }, {\n          \"include\": \"#macro-local\"\n        }, {\n          \"include\": \"#macro-global\"\n        }]\n      }, {\n        \"begin\": \"\\\\b(tempvar|tempname|tempfile)\\\\s*(?=\\\\s)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.macro.stata\"\n          }\n        },\n        \"end\": \"\\\\n\",\n        \"patterns\": [{\n          \"begin\": \"///\",\n          \"end\": \"\\\\n\",\n          \"name\": \"comment.block.stata\"\n        }, {\n          \"include\": \"#macro-local-identifiers\"\n        }, {\n          \"include\": \"#macro-local\"\n        }, {\n          \"include\": \"#macro-global\"\n        }]\n      }, {\n        \"begin\": \"\\\\b(ma(cro|cr|c)?)\\\\s+(drop|l(ist|is|i)?)\\\\s*(?=\\\\s)\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"keyword.macro.stata\"\n          }\n        },\n        \"end\": \"\\\\n\",\n        \"patterns\": [{\n          \"begin\": \"///\",\n          \"end\": \"\\\\n\",\n          \"name\": \"comment.block.stata\"\n        }, {\n          \"match\": \"\\\\*\",\n          \"name\": \"keyword.operator.arithmetic.stata\"\n        }, {\n          \"include\": \"#constants\"\n        }, {\n          \"include\": \"#macro-global\"\n        }, {\n          \"include\": \"#macro-local\"\n        }, {\n          \"include\": \"#comments\"\n        }, {\n          \"match\": \"\\\\w{1,31}\",\n          \"name\": \"entity.name.type.class.stata\"\n        }]\n      }]\n    },\n    \"macro-extended-functions\": {\n      \"patterns\": [{\n        \"match\": \"\\\\b(properties)\\\\b\",\n        \"name\": \"keyword.macro.extendedfcn.stata\"\n      }, {\n        \"match\": \"\\\\b(t(ype|yp|y)?|f(ormat|orma|orm|or|o)?|val(ue|u)?\\\\s+l(able|abl|ab|a)?|var(iable|iabl|iab|ia|i)?\\\\s+l(abel|abe|ab|a)?|data\\\\s+l(able|abl|ab|a)?|sort(edby|edb|ed|e)?|lab(el|e)?|maxlength|constraint|char)\\\\b\",\n        \"name\": \"keyword.macro.extendedfcn.stata\"\n      }, {\n        \"match\": \"\\\\b(permname)\\\\b\",\n        \"name\": \"keyword.macro.extendedfcn.stata\"\n      }, {\n        \"match\": \"\\\\b(adosubdir|dir|files?|dirs?|other|sysdir)\\\\b\",\n        \"name\": \"keyword.macro.extendedfcn.stata\"\n      }, {\n        \"match\": \"\\\\b(env(ironment|ironmen|ironme|ironm|iron|iro|ir|i)?)\\\\b\",\n        \"name\": \"keyword.macro.extendedfcn.stata\"\n      }, {\n        \"match\": \"\\\\b(all\\\\s+(globals|scalars|matrices)|((numeric|string)\\\\s+scalars))\\\\b\",\n        \"name\": \"keyword.macro.extendedfcn.stata\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"keyword.macro.extendedfcn.stata\"\n          },\n          \"2\": {\n            \"name\": \"keyword.macro.extendedfcn.stata\"\n          },\n          \"3\": {\n            \"name\": \"entity.name.type.class.stata\"\n          }\n        },\n        \"match\": \"\\\\b(list)\\\\s+(uniq|dups|sort|clean|retok(enize|eniz|eni|en|e)?|sizeof)\\\\s+(\\\\w{1,32})\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"keyword.macro.extendedfcn.stata\"\n          },\n          \"2\": {\n            \"name\": \"entity.name.type.class.stata\"\n          },\n          \"3\": {\n            \"name\": \"keyword.operator.list.stata\"\n          },\n          \"4\": {\n            \"name\": \"entity.name.type.class.stata\"\n          }\n        },\n        \"match\": \"\\\\b(list)\\\\s+(\\\\w{1,32})\\\\s+(\\\\||&|\\\\-|===|==|in)\\\\s+(\\\\w{1,32})\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"keyword.macro.extendedfcn.stata\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.definition.string.begin.stata\"\n          },\n          \"3\": {\n            \"name\": \"string.quoted.double.stata\"\n          },\n          \"4\": {\n            \"name\": \"punctuation.definition.string.end.stata\"\n          },\n          \"5\": {\n            \"name\": \"keyword.macro.extendedfcn.stata\"\n          },\n          \"6\": {\n            \"name\": \"entity.name.type.class.stata\"\n          }\n        },\n        \"match\": '\\\\b(list\\\\s+posof)\\\\s+(\")(\\\\w+)(\")\\\\s+(in)\\\\s+(\\\\w{1,32})'\n      }, {\n        \"match\": \"\\\\b(rown(ames|ame|am|a)?|coln(ames|ame|am|a)?|rowf(ullnames|ullname|ullnam|ullna|ulln|ull|ul|u)?|colf(ullnames|ullname|ullnam|ullna|ulln|ull|ul|u)?|roweq?|coleq?|rownumb|colnumb|roweqnumb|coleqnumb|rownfreeparms|colnfreeparms|rownlfs|colnlfs|rowsof|colsof|rowvarlist|colvarlist|rowlfnames|collfnames)\\\\b\",\n        \"name\": \"keyword.macro.extendedfcn.stata\"\n      }, {\n        \"match\": \"\\\\b(tsnorm)\\\\b\",\n        \"name\": \"keyword.macro.extendedfcn.stata\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"keyword.macro.extendedfcn.stata\"\n          },\n          \"7\": {\n            \"patterns\": [{\n              \"include\": \"#macro-local\"\n            }, {\n              \"include\": \"#macro-global\"\n            }]\n          }\n        },\n        \"match\": \"\\\\b((copy|(ud|u)?strlen)\\\\s+(loc(al|a)?|gl(obal|oba|ob|o)?))\\\\s+([^']+)\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"keyword.macro.extendedfcn.stata\"\n          }\n        },\n        \"match\": \"\\\\b(word\\\\s+count)\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"keyword.macro.extendedfcn.stata\"\n          },\n          \"2\": {\n            \"patterns\": [{\n              \"include\": \"#macro-local\"\n            }, {\n              \"include\": \"#constants\"\n            }]\n          },\n          \"3\": {\n            \"name\": \"keyword.macro.extendedfcn.stata\"\n          }\n        },\n        \"match\": \"(word|piece)\\\\s+([\\\\s`'\\\\w]+)\\\\s+(of)\"\n      }, {\n        \"begin\": \"\\\\b(subinstr\\\\s+(loc(al|a)?|gl(obal|oba|ob|o)?))\\\\s+(\\\\w{1,32})\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.macro.extendedfcn.stata\"\n          },\n          \"5\": {\n            \"name\": \"entity.name.type.class.stata\"\n          }\n        },\n        \"end\": \"(?=//|\\\\n)\",\n        \"patterns\": [{\n          \"include\": \"#macro-local\"\n        }, {\n          \"include\": \"#macro-global\"\n        }, {\n          \"include\": \"#string-compound\"\n        }, {\n          \"include\": \"#string-regular\"\n        }, {\n          \"captures\": {\n            \"1\": {\n              \"name\": \"support.function.builtin.stata\"\n            },\n            \"2\": {\n              \"name\": \"punctuation.definition.parameters.begin.stata\"\n            },\n            \"3\": {\n              \"name\": \"keyword.macro.extendedfcn.stata\"\n            },\n            \"4\": {\n              \"name\": \"entity.name.type.class.stata\"\n            },\n            \"5\": {\n              \"name\": \"punctuation.definition.parameters.end.stata\"\n            }\n          },\n          \"match\": \"(count|coun|cou|co|c)(\\\\()(local|loca|loc|global|globa|glob|glo|gl)\\\\s+(\\\\w{1,32})(\\\\))\"\n        }]\n      }, {\n        \"include\": \"#comments\"\n      }, {\n        \"include\": \"#macro-local\"\n      }, {\n        \"include\": \"#macro-global\"\n      }, {\n        \"include\": \"$self\"\n      }]\n    },\n    \"macro-global\": {\n      \"patterns\": [{\n        \"begin\": \"(\\\\$)(\\\\{)\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.begin.stata\"\n          }\n        },\n        \"end\": \"\\\\}\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.end.stata\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#macro-local\"\n        }, {\n          \"include\": \"#macro-global\"\n        }, {\n          \"include\": \"#comments-block\"\n        }, {\n          \"begin\": \"[^\\\\w]\",\n          \"end\": \"\\\\n|(?=})\",\n          \"name\": \"comment.line.stata\"\n        }, {\n          \"match\": \"\\\\w{1,32}\",\n          \"name\": \"entity.name.type.class.stata\"\n        }]\n      }, {\n        \"begin\": \"\\\\$\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.begin.stata\"\n          }\n        },\n        \"end\": \"(?!\\\\w)\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.string.end.stata\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#macro-local\"\n        }, {\n          \"include\": \"#macro-global\"\n        }, {\n          \"match\": \"[\\\\w&&[^0-9_]]\\\\w{0,31}|_\\\\w{1,31}\",\n          \"name\": \"entity.name.type.class.stata\"\n        }]\n      }]\n    },\n    \"macro-global-escaped\": {\n      \"patterns\": [{\n        \"begin\": \"(\\\\\\\\\\\\$)(\\\\\\\\\\\\{)?\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.begin.stata\"\n          }\n        },\n        \"end\": '(\\\\\\\\\\\\})|(?=\\\\\"|\\\\s|\\\\n|/|,)',\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.string.end.stata\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#macro-local\"\n        }, {\n          \"include\": \"#macro-global\"\n        }, {\n          \"match\": \"[\\\\w&&[^0-9_]]\\\\w{0,31}|_\\\\w{1,31}\",\n          \"name\": \"entity.name.type.class.stata\"\n        }]\n      }]\n    },\n    \"macro-local\": {\n      \"patterns\": [{\n        \"begin\": \"(`)(=)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.string.begin.stata\"\n          },\n          \"2\": {\n            \"name\": \"keyword.operator.comparison.stata\"\n          }\n        },\n        \"end\": \"'\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.end.stata\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"$self\"\n        }]\n      }, {\n        \"begin\": \"(`)(:)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.string.begin.stata\"\n          },\n          \"2\": {\n            \"name\": \"keyword.operator.comparison.stata\"\n          }\n        },\n        \"contentName\": \"meta.macro-extended-function.stata\",\n        \"end\": \"'\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.end.stata\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#macro-local\"\n        }, {\n          \"include\": \"#macro-extended-functions\"\n        }, {\n          \"include\": \"#constants\"\n        }, {\n          \"include\": \"#string-compound\"\n        }, {\n          \"include\": \"#string-regular\"\n        }]\n      }, {\n        \"begin\": \"(`)(macval)(\\\\()\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.string.begin.stata\"\n          },\n          \"2\": {\n            \"name\": \"support.function.builtin.stata\"\n          },\n          \"3\": {\n            \"name\": \"punctuation.definition.parameters.begin.stata\"\n          }\n        },\n        \"contentName\": \"meta.macro-extended-function.stata\",\n        \"end\": \"(\\\\))(')\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.parameters.begin.stata\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.definition.string.end.stata\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#macro-local\"\n        }, {\n          \"include\": \"#macro-global\"\n        }, {\n          \"match\": \"\\\\w{1,31}\",\n          \"name\": \"entity.name.type.class.stata\"\n        }]\n      }, {\n        \"begin\": '`(?!\")',\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.begin.stata\"\n          }\n        },\n        \"end\": \"'\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.end.stata\"\n          }\n        },\n        \"patterns\": [{\n          \"match\": \"\\\\+\\\\+|\\\\-\\\\-\",\n          \"name\": \"keyword.operator.arithmetic.stata\"\n        }, {\n          \"include\": \"#macro-local\"\n        }, {\n          \"include\": \"#macro-global\"\n        }, {\n          \"include\": \"#comments-block\"\n        }, {\n          \"begin\": \"[^\\\\w]\",\n          \"end\": \"\\\\n|(?=')\",\n          \"name\": \"comment.line.stata\"\n        }, {\n          \"match\": \"\\\\w{1,31}\",\n          \"name\": \"entity.name.type.class.stata\"\n        }]\n      }]\n    },\n    \"macro-local-escaped\": {\n      \"patterns\": [{\n        \"begin\": '\\\\\\\\`(?!\")',\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.begin.stata\"\n          }\n        },\n        \"comment\": \"appropriately color macros that have embedded escaped `,', and $ characters for lazy evaluation\",\n        \"end\": \"\\\\\\\\'|'\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.end.stata\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#macro-local\"\n        }, {\n          \"include\": \"#macro-global\"\n        }, {\n          \"match\": \"\\\\w{1,31}\",\n          \"name\": \"entity.name.type.class.stata\"\n        }]\n      }]\n    },\n    \"macro-local-identifiers\": {\n      \"patterns\": [{\n        \"match\": \"[^\\\\w'`\\\\$\\\\(\\\\)\\\\s]\",\n        \"name\": \"invalid.illegal.name.stata\"\n      }, {\n        \"match\": \"\\\\w{32,}\",\n        \"name\": \"invalid.illegal.name.stata\"\n      }, {\n        \"match\": \"\\\\w{1,31}\",\n        \"name\": \"entity.name.type.class.stata\"\n      }]\n    },\n    \"operators\": {\n      \"patterns\": [{\n        \"comment\": \"++ and -- must come first to support ligatures\",\n        \"match\": \"\\\\+\\\\+|\\\\-\\\\-|\\\\+|\\\\-|\\\\*|\\\\^\",\n        \"name\": \"keyword.operator.arithmetic.stata\"\n      }, {\n        \"comment\": \"match division operator but not path separator\",\n        \"match\": \"(?<![\\\\w.&&[^0-9]])/(?![\\\\w.&&[^0-9]]|$)\",\n        \"name\": \"keyword.operator.arithmetic.stata\"\n      }, {\n        \"comment\": \"match division operator but not path separator\",\n        \"match\": \"(?<![\\\\w.&&[^0-9]])\\\\\\\\(?![\\\\w.&&[^0-9]]|$)\",\n        \"name\": \"keyword.operator.matrix.addrow.stata\"\n      }, {\n        \"match\": \"\\\\|\\\\|\",\n        \"name\": \"keyword.operator.graphcombine.stata\"\n      }, {\n        \"match\": \"\\\\&|\\\\|\",\n        \"name\": \"keyword.operator.logical.stata\"\n      }, {\n        \"match\": \"(?:<=|>=|:=|==|!=|~=|<|>|=|!!|!)\",\n        \"name\": \"keyword.operator.comparison.stata\"\n      }, {\n        \"match\": \"\\\\(|\\\\)\",\n        \"name\": \"keyword.operator.parentheses.stata\"\n      }, {\n        \"match\": \"(##|#)\",\n        \"name\": \"keyword.operator.factor-variables.stata\"\n      }, {\n        \"match\": \"%\",\n        \"name\": \"keyword.operator.format.stata\"\n      }, {\n        \"match\": \":\",\n        \"name\": \"punctuation.separator.key-value\"\n      }, {\n        \"match\": \"\\\\[\",\n        \"name\": \"punctuation.definition.parameters.begin.stata\"\n      }, {\n        \"match\": \"\\\\]\",\n        \"name\": \"punctuation.definition.parameters.end.stata\"\n      }, {\n        \"match\": \",\",\n        \"name\": \"punctuation.definition.variable.begin.stata\"\n      }, {\n        \"match\": \";\",\n        \"name\": \"keyword.operator.delimiter.stata\"\n      }]\n    },\n    \"reserved-names\": {\n      \"patterns\": [{\n        \"match\": \"\\\\b(_all|_b|byte|_coef|_cons|double|float|if|in|int|long|_n|_N|_pi|_pred|_rc|_skip|str[0-9]+|strL|using|with)\\\\b\",\n        \"name\": \"invalid.illegal.name.stata\"\n      }, {\n        \"match\": \"[^\\\\w'`\\\\$\\\\(\\\\)\\\\s]\",\n        \"name\": \"invalid.illegal.name.stata\"\n      }, {\n        \"match\": \"[0-9][\\\\w]{31,}\",\n        \"name\": \"invalid.illegal.name.stata\"\n      }, {\n        \"match\": \"\\\\w{33,}\",\n        \"name\": \"invalid.illegal.name.stata\"\n      }]\n    },\n    \"string-compound\": {\n      \"patterns\": [{\n        \"begin\": '`\"',\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.begin.stata\"\n          }\n        },\n        \"end\": `\"'|(?=\n)`,\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.end.stata\"\n          }\n        },\n        \"name\": \"string.quoted.double.compound.stata\",\n        \"patterns\": [{\n          \"comment\": 'This must come before #string-regular and #string-compound to accurately color `\"\"\"\\' in strings',\n          \"match\": '\"',\n          \"name\": \"string.quoted.double.compound.stata\"\n        }, {\n          \"comment\": \"see https://github.com/kylebarron/language-stata/issues/53\",\n          \"match\": \"```(?=[^']*\\\")\",\n          \"name\": \"meta.markdown.code.block.stata\"\n        }, {\n          \"include\": \"#string-regular\"\n        }, {\n          \"include\": \"#string-compound\"\n        }, {\n          \"include\": \"#macro-local-escaped\"\n        }, {\n          \"include\": \"#macro-global-escaped\"\n        }, {\n          \"include\": \"#macro-local\"\n        }, {\n          \"include\": \"#macro-global\"\n        }]\n      }]\n    },\n    \"string-regular\": {\n      \"patterns\": [{\n        \"begin\": '(?<!`)\"',\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.begin.stata\"\n          }\n        },\n        \"end\": `(\")(')?|(?=\n)`,\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.string.end.stata\"\n          },\n          \"2\": {\n            \"name\": \"invalid.illegal.punctuation.stata\"\n          }\n        },\n        \"name\": \"string.quoted.double.stata\",\n        \"patterns\": [{\n          \"comment\": \"see https://github.com/kylebarron/language-stata/issues/53\",\n          \"match\": \"```(?=[^']*\\\")\",\n          \"name\": \"meta.markdown.code.block.stata\"\n        }, {\n          \"include\": \"#macro-local-escaped\"\n        }, {\n          \"include\": \"#macro-global-escaped\"\n        }, {\n          \"include\": \"#macro-local\"\n        }, {\n          \"include\": \"#macro-global\"\n        }]\n      }]\n    },\n    \"subscripts\": {\n      \"patterns\": [{\n        \"begin\": \"(?<=[\\\\w'])(\\\\[)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.parameters.begin.stata\"\n          }\n        },\n        \"comment\": \"highlight expressions, like [_n], when using subscripts on a variable\",\n        \"end\": \"(\\\\])\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.parameters.end.stata\"\n          }\n        },\n        \"name\": \"meta.subscripts.stata\",\n        \"patterns\": [{\n          \"include\": \"#macro-local\"\n        }, {\n          \"include\": \"#macro-global\"\n        }, {\n          \"include\": \"#builtin_variables\"\n        }, {\n          \"include\": \"#operators\"\n        }, {\n          \"include\": \"#constants\"\n        }, {\n          \"include\": \"#functions\"\n        }]\n      }]\n    },\n    \"unicode-regex-character-class\": {\n      \"patterns\": [{\n        \"match\": \"\\\\\\\\[wWsSdD]|\\\\.\",\n        \"name\": \"constant.character.character-class.stata\"\n      }, {\n        \"match\": \"\\\\\\\\.\",\n        \"name\": \"constant.character.escape.backslash.stata\"\n      }, {\n        \"begin\": \"(\\\\[)(\\\\^)?\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.character-class.stata\"\n          },\n          \"2\": {\n            \"name\": \"keyword.operator.negation.stata\"\n          }\n        },\n        \"end\": \"(\\\\])\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.character-class.stata\"\n          }\n        },\n        \"name\": \"constant.other.character-class.set.stata\",\n        \"patterns\": [{\n          \"include\": \"#unicode-regex-character-class\"\n        }, {\n          \"captures\": {\n            \"2\": {\n              \"name\": \"constant.character.escape.backslash.stata\"\n            },\n            \"4\": {\n              \"name\": \"constant.character.escape.backslash.stata\"\n            }\n          },\n          \"match\": \"((\\\\\\\\.)|.)\\\\-((\\\\\\\\.)|[^\\\\]])\",\n          \"name\": \"constant.other.character-class.range.stata\"\n        }]\n      }]\n    },\n    \"unicode-regex-functions\": {\n      \"patterns\": [{\n        \"captures\": {\n          \"1\": {\n            \"name\": \"support.function.builtin.stata\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.definition.parameters.begin.stata\"\n          },\n          \"3\": {\n            \"patterns\": [{\n              \"include\": \"#string-compound\"\n            }, {\n              \"include\": \"#string-regular\"\n            }, {\n              \"include\": \"#macro-local\"\n            }, {\n              \"include\": \"#macro-global\"\n            }, {\n              \"include\": \"#functions\"\n            }, {\n              \"match\": \"[\\\\w&&[^0-9]]\\\\w{0,31}\",\n              \"name\": \"variable.parameter.function.stata\"\n            }, {\n              \"include\": \"#comments-triple-slash\"\n            }]\n          },\n          \"4\": {\n            \"name\": \"punctuation.definition.variable.begin.stata\"\n          },\n          \"5\": {\n            \"name\": \"punctuation.definition.string.begin.stata\"\n          },\n          \"6\": {\n            \"patterns\": [{\n              \"include\": \"#unicode-regex-internals\"\n            }]\n          },\n          \"7\": {\n            \"name\": \"punctuation.definition.string.end.stata\"\n          },\n          \"8\": {\n            \"name\": \"invalid.illegal.punctuation.stata\"\n          },\n          \"9\": {\n            \"patterns\": [{\n              \"include\": \"#constants\"\n            }, {\n              \"match\": \",\",\n              \"name\": \"punctuation.definition.variable.begin.stata\"\n            }]\n          },\n          \"10\": {\n            \"name\": \"punctuation.definition.parameters.end.stata\"\n          }\n        },\n        \"comment\": 'color regexm with regular quotes i.e. \" ',\n        \"match\": `\\\\b(ustrregexm)(\\\\()([^,]+)(,)\\\\s*(\")([^\"]+)(\"(')?)([,0-9\\\\s]*)?\\\\s*(\\\\))`\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"support.function.builtin.stata\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.definition.parameters.begin.stata\"\n          },\n          \"3\": {\n            \"patterns\": [{\n              \"include\": \"#string-compound\"\n            }, {\n              \"include\": \"#string-regular\"\n            }, {\n              \"include\": \"#macro-local\"\n            }, {\n              \"include\": \"#macro-global\"\n            }, {\n              \"include\": \"#functions\"\n            }, {\n              \"match\": \"[\\\\w&&[^0-9]]\\\\w{0,31}\",\n              \"name\": \"variable.parameter.function.stata\"\n            }, {\n              \"include\": \"#comments-triple-slash\"\n            }]\n          },\n          \"4\": {\n            \"name\": \"punctuation.definition.variable.begin.stata\"\n          },\n          \"5\": {\n            \"name\": \"punctuation.definition.string.begin.stata\"\n          },\n          \"6\": {\n            \"patterns\": [{\n              \"include\": \"#unicode-regex-internals\"\n            }]\n          },\n          \"7\": {\n            \"name\": \"punctuation.definition.string.end.stata\"\n          },\n          \"8\": {\n            \"patterns\": [{\n              \"include\": \"#constants\"\n            }, {\n              \"match\": \",\",\n              \"name\": \"punctuation.definition.variable.begin.stata\"\n            }]\n          },\n          \"9\": {\n            \"name\": \"punctuation.definition.parameters.end.stata\"\n          }\n        },\n        \"comment\": \"color regexm with compound quotes\",\n        \"match\": '\\\\b(ustrregexm)(\\\\()([^,]+)(,)\\\\s*(`\")([^\"]+)(\"\\')([,0-9\\\\s]*)?\\\\s*(\\\\))'\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"support.function.builtin.stata\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.definition.parameters.begin.stata\"\n          },\n          \"3\": {\n            \"patterns\": [{\n              \"include\": \"#string-compound\"\n            }, {\n              \"include\": \"#string-regular\"\n            }, {\n              \"include\": \"#macro-local\"\n            }, {\n              \"include\": \"#macro-global\"\n            }, {\n              \"include\": \"#functions\"\n            }, {\n              \"match\": \"[\\\\w&&[^0-9]]\\\\w{0,31}\",\n              \"name\": \"variable.parameter.function.stata\"\n            }, {\n              \"include\": \"#comments\"\n            }]\n          },\n          \"4\": {\n            \"name\": \"punctuation.definition.variable.begin.stata\"\n          },\n          \"5\": {\n            \"name\": \"punctuation.definition.string.begin.stata\"\n          },\n          \"6\": {\n            \"patterns\": [{\n              \"include\": \"#unicode-regex-internals\"\n            }]\n          },\n          \"7\": {\n            \"name\": \"punctuation.definition.string.end.stata\"\n          },\n          \"8\": {\n            \"name\": \"invalid.illegal.punctuation.stata\"\n          },\n          \"9\": {\n            \"patterns\": [{\n              \"match\": \",\",\n              \"name\": \"punctuation.definition.variable.begin.stata\"\n            }, {\n              \"include\": \"#string-compound\"\n            }, {\n              \"include\": \"#string-regular\"\n            }, {\n              \"include\": \"#macro-local\"\n            }, {\n              \"include\": \"#macro-global\"\n            }, {\n              \"include\": \"#functions\"\n            }, {\n              \"match\": \"[\\\\w&&[^0-9]]\\\\w{0,31}\",\n              \"name\": \"variable.parameter.function.stata\"\n            }, {\n              \"include\": \"#comments-triple-slash\"\n            }, {\n              \"include\": \"#constants\"\n            }]\n          },\n          \"10\": {\n            \"name\": \"punctuation.definition.parameters.end.stata\"\n          }\n        },\n        \"comment\": 'color regexr with regular quotes i.e. \" ',\n        \"match\": `\\\\b(ustrregexrf|ustrregexra)(\\\\()([^,]+)(,)\\\\s*(\")([^\"]+)(\"(')?)\\\\s*([^\\\\)]*)(\\\\))`\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"support.function.builtin.stata\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.definition.parameters.begin.stata\"\n          },\n          \"3\": {\n            \"patterns\": [{\n              \"include\": \"#string-compound\"\n            }, {\n              \"include\": \"#string-regular\"\n            }, {\n              \"include\": \"#macro-local\"\n            }, {\n              \"include\": \"#macro-global\"\n            }, {\n              \"include\": \"#functions\"\n            }, {\n              \"match\": \"[\\\\w&&[^0-9]]\\\\w{0,31}\",\n              \"name\": \"variable.parameter.function.stata\"\n            }, {\n              \"include\": \"#comments\"\n            }]\n          },\n          \"4\": {\n            \"name\": \"punctuation.definition.variable.begin.stata\"\n          },\n          \"5\": {\n            \"name\": \"punctuation.definition.string.begin.stata\"\n          },\n          \"6\": {\n            \"patterns\": [{\n              \"include\": \"#unicode-regex-internals\"\n            }]\n          },\n          \"7\": {\n            \"name\": \"punctuation.definition.string.end.stata\"\n          },\n          \"8\": {\n            \"patterns\": [{\n              \"match\": \",\",\n              \"name\": \"punctuation.definition.variable.begin.stata\"\n            }, {\n              \"include\": \"#string-compound\"\n            }, {\n              \"include\": \"#string-regular\"\n            }, {\n              \"include\": \"#macro-local\"\n            }, {\n              \"include\": \"#macro-global\"\n            }, {\n              \"include\": \"#functions\"\n            }, {\n              \"match\": \"[\\\\w&&[^0-9]]\\\\w{0,31}\",\n              \"name\": \"variable.parameter.function.stata\"\n            }, {\n              \"include\": \"#comments-triple-slash\"\n            }, {\n              \"include\": \"#constants\"\n            }]\n          },\n          \"9\": {\n            \"name\": \"punctuation.definition.parameters.end.stata\"\n          }\n        },\n        \"comment\": 'color regexr with compound quotes i.e. `\"text\"\\' ',\n        \"match\": '\\\\b(ustrregexrf|ustrregexra)(\\\\()([^,]+)(,)\\\\s*(`\")([^\"]+)(\"\\')\\\\s*([^\\\\)]*)(\\\\))'\n      }]\n    },\n    \"unicode-regex-internals\": {\n      \"patterns\": [{\n        \"match\": \"\\\\\\\\[bBAZzG]|\\\\^\",\n        \"name\": \"keyword.control.anchor.stata\"\n      }, {\n        \"comment\": \"matched when not a global\",\n        \"match\": \"\\\\$(?![[\\\\w&&[^0-9_]][\\\\w]{0,31}|_[\\\\w]{1,31}\\\\{])\",\n        \"name\": \"keyword.control.anchor.stata\"\n      }, {\n        \"match\": \"\\\\\\\\[1-9][0-9]?\",\n        \"name\": \"keyword.other.back-reference.stata\"\n      }, {\n        \"match\": \"[?+*][?+]?|\\\\{(\\\\d+,\\\\d+|\\\\d+,|,\\\\d+|\\\\d+)\\\\}\\\\??\",\n        \"name\": \"keyword.operator.quantifier.stata\"\n      }, {\n        \"match\": \"\\\\|\",\n        \"name\": \"keyword.operator.or.stata\"\n      }, {\n        \"begin\": \"\\\\((?!\\\\?\\\\#|\\\\?=|\\\\?!|\\\\?<=|\\\\?<!)\",\n        \"end\": \"\\\\)\",\n        \"name\": \"keyword.operator.group.stata\",\n        \"patterns\": [{\n          \"include\": \"#unicode-regex-internals\"\n        }]\n      }, {\n        \"begin\": \"\\\\(\\\\?\\\\#\",\n        \"end\": \"\\\\)\",\n        \"name\": \"comment.block.stata\"\n      }, {\n        \"comment\": \"We are restrictive in what we allow to go after the comment character to avoid false positives, since the availability of comments depend on regexp flags.\",\n        \"match\": \"(?<=^|\\\\s)#\\\\s[[a-zA-Z0-9,. \\\\t?!-:][^\\\\x{00}-\\\\x{7F}]]*$\",\n        \"name\": \"comment.line.number-sign.stata\"\n      }, {\n        \"match\": \"\\\\(\\\\?[iLmsux]+\\\\)\",\n        \"name\": \"keyword.other.option-toggle.stata\"\n      }, {\n        \"begin\": \"(\\\\()((\\\\?=)|(\\\\?!)|(\\\\?<=)|(\\\\?<!))\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.operator.group.stata\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.definition.group.assertion.stata\"\n          },\n          \"3\": {\n            \"name\": \"keyword.assertion.look-ahead.stata\"\n          },\n          \"4\": {\n            \"name\": \"keyword.assertion.negative-look-ahead.stata\"\n          },\n          \"5\": {\n            \"name\": \"keyword.assertion.look-behind.stata\"\n          },\n          \"6\": {\n            \"name\": \"keyword.assertion.negative-look-behind.stata\"\n          }\n        },\n        \"end\": \"(\\\\))\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.operator.group.stata\"\n          }\n        },\n        \"name\": \"meta.group.assertion.stata\",\n        \"patterns\": [{\n          \"include\": \"#unicode-regex-internals\"\n        }]\n      }, {\n        \"begin\": \"(\\\\()(\\\\?\\\\(([1-9][0-9]?|[a-zA-Z_][a-zA-Z_0-9]*)\\\\))\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.group.stata\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.definition.group.assertion.conditional.stata\"\n          },\n          \"3\": {\n            \"name\": \"entity.name.section.back-reference.stata\"\n          }\n        },\n        \"comment\": \"we can make this more sophisticated to match the | character that separates yes-pattern from no-pattern, but it's not really necessary.\",\n        \"end\": \"(\\\\))\",\n        \"name\": \"meta.group.assertion.conditional.stata\",\n        \"patterns\": [{\n          \"include\": \"#unicode-regex-internals\"\n        }]\n      }, {\n        \"include\": \"#unicode-regex-character-class\"\n      }, {\n        \"include\": \"#macro-local\"\n      }, {\n        \"include\": \"#macro-global\"\n      }, {\n        \"comment\": \"NOTE: Error if I have .+ No idea why but it works fine it seems with just .\",\n        \"match\": \".\",\n        \"name\": \"string.quoted.stata\"\n      }]\n    }\n  },\n  \"scopeName\": \"source.stata\",\n  \"embeddedLangs\": [\"sql\"]\n});\nvar stata = [...sql, lang];\nexport { stata as default };"],
  "mappings": "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",
  "names": []
}
