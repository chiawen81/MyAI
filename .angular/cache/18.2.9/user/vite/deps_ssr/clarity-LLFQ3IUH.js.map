{
  "version": 3,
  "sources": ["../../../../../../node_modules/shiki/dist/langs/clarity.mjs"],
  "sourcesContent": ["const lang = Object.freeze({\n  \"displayName\": \"Clarity\",\n  \"name\": \"clarity\",\n  \"patterns\": [{\n    \"include\": \"#expression\"\n  }, {\n    \"include\": \"#define-constant\"\n  }, {\n    \"include\": \"#define-data-var\"\n  }, {\n    \"include\": \"#define-map\"\n  }, {\n    \"include\": \"#define-function\"\n  }, {\n    \"include\": \"#define-fungible-token\"\n  }, {\n    \"include\": \"#define-non-fungible-token\"\n  }, {\n    \"include\": \"#define-trait\"\n  }, {\n    \"include\": \"#use-trait\"\n  }],\n  \"repository\": {\n    \"built-in-func\": {\n      \"begin\": \"(?x) (\\\\() \\\\s* (\\\\-|\\\\+|<\\\\=|>\\\\=|<|>|\\\\*|/|and|append|as-contract|as-max-len\\\\?|asserts!|at-block|begin|bit-and|bit-not|bit-or|bit-shift-left|bit-shift-right|bit-xor|buff-to-int-be|buff-to-int-le|buff-to-uint-be|buff-to-uint-le|concat|contract-call\\\\?|contract-of|default-to|element-at|element-at\\\\?|filter|fold|from-consensus-buff\\\\?|ft-burn\\\\?|ft-get-balance|ft-get-supply|ft-mint\\\\?|ft-transfer\\\\?|get-block-info\\\\?|get-burn-block-info\\\\?|get-stacks-block-info\\\\?|get-tenure-info\\\\?|get-burn-block-info\\\\?|hash160|if|impl-trait|index-of|index-of\\\\?|int-to-ascii|int-to-utf8|is-eq|is-err|is-none|is-ok|is-some|is-standard|keccak256|len|log2|map|match|merge|mod|nft-burn\\\\?|nft-get-owner\\\\?|nft-mint\\\\?|nft-transfer\\\\?|not|or|pow|principal-construct\\\\?|principal-destruct\\\\?|principal-of\\\\?|print|replace-at\\\\?|secp256k1-recover\\\\?|secp256k1-verify|sha256|sha512|sha512/256|slice\\\\?|sqrti|string-to-int\\\\?|string-to-uint\\\\?|stx-account|stx-burn\\\\?|stx-get-balance|stx-transfer-memo\\\\?|stx-transfer\\\\?|to-consensus-buff\\\\?|to-int|to-uint|try!|unwrap!|unwrap-err!|unwrap-err-panic|unwrap-panic|xor) \\\\s+\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.built-in-function.start.clarity\"\n        },\n        \"2\": {\n          \"name\": \"keyword.declaration.built-in-function.clarity\"\n        }\n      },\n      \"end\": \"(\\\\))\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.built-in-function.end.clarity\"\n        }\n      },\n      \"name\": \"meta.built-in-function\",\n      \"patterns\": [{\n        \"include\": \"#expression\"\n      }, {\n        \"include\": \"#user-func\"\n      }]\n    },\n    \"comment\": {\n      \"match\": \"(?x) (?<=^|[()\\\\[\\\\]{}\\\",'`;\\\\s]) (;) .* $\",\n      \"name\": \"comment.line.semicolon.clarity\"\n    },\n    \"data-type\": {\n      \"patterns\": [{\n        \"include\": \"#comment\"\n      }, {\n        \"comment\": \"numerics\",\n        \"match\": \"\\\\b(uint|int)\\\\b\",\n        \"name\": \"entity.name.type.numeric.clarity\"\n      }, {\n        \"comment\": \"principal\",\n        \"match\": \"\\\\b(principal)\\\\b\",\n        \"name\": \"entity.name.type.principal.clarity\"\n      }, {\n        \"comment\": \"bool\",\n        \"match\": \"\\\\b(bool)\\\\b\",\n        \"name\": \"entity.name.type.bool.clarity\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.string_type-def.start.clarity\"\n          },\n          \"2\": {\n            \"name\": \"entity.name.type.string_type.clarity\"\n          },\n          \"3\": {\n            \"name\": \"constant.numeric.string_type-len.clarity\"\n          },\n          \"4\": {\n            \"name\": \"punctuation.string_type-def.end.clarity\"\n          }\n        },\n        \"match\": \"(?x) (\\\\() \\\\s* (?:(string-ascii|string-utf8)\\\\s+(\\\\d+)) \\\\s* (\\\\))\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.buff-def.start.clarity\"\n          },\n          \"2\": {\n            \"name\": \"entity.name.type.buff.clarity\"\n          },\n          \"3\": {\n            \"name\": \"constant.numeric.buf-len.clarity\"\n          },\n          \"4\": {\n            \"name\": \"punctuation.buff-def.end.clarity\"\n          }\n        },\n        \"match\": \"(?x) (\\\\() \\\\s* (buff)\\\\s+(\\\\d+)\\\\s* (\\\\))\"\n      }, {\n        \"begin\": \"(?x) (\\\\() \\\\s* (optional)\\\\s+\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.optional-def.start.clarity\"\n          },\n          \"2\": {\n            \"name\": \"storage.type.modifier\"\n          }\n        },\n        \"comment\": \"optional\",\n        \"end\": \"(\\\\))\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.optional-def.end.clarity\"\n          }\n        },\n        \"name\": \"meta.optional-def\",\n        \"patterns\": [{\n          \"include\": \"#data-type\"\n        }]\n      }, {\n        \"begin\": \"(?x) (\\\\() \\\\s* (response)\\\\s+\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.response-def.start.clarity\"\n          },\n          \"2\": {\n            \"name\": \"storage.type.modifier\"\n          }\n        },\n        \"comment\": \"response\",\n        \"end\": \"(\\\\))\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.response-def.end.clarity\"\n          }\n        },\n        \"name\": \"meta.response-def\",\n        \"patterns\": [{\n          \"include\": \"#data-type\"\n        }]\n      }, {\n        \"begin\": \"(?x) (\\\\() \\\\s* (list) \\\\s+ (\\\\d+) \\\\s+\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.list-def.start.clarity\"\n          },\n          \"2\": {\n            \"name\": \"entity.name.type.list.clarity\"\n          },\n          \"3\": {\n            \"name\": \"constant.numeric.list-len.clarity\"\n          }\n        },\n        \"comment\": \"list\",\n        \"end\": \"(\\\\))\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.list-def.end.clarity\"\n          }\n        },\n        \"name\": \"meta.list-def\",\n        \"patterns\": [{\n          \"include\": \"#data-type\"\n        }]\n      }, {\n        \"begin\": \"(\\\\{)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.tuple-def.start.clarity\"\n          }\n        },\n        \"end\": \"(\\\\})\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.tuple-def.end.clarity\"\n          }\n        },\n        \"name\": \"meta.tuple-def\",\n        \"patterns\": [{\n          \"match\": \"([a-zA-Z][\\\\w\\\\?\\\\!\\\\-]*)(?=:)\",\n          \"name\": \"entity.name.tag.tuple-data-type-key.clarity\"\n        }, {\n          \"include\": \"#data-type\"\n        }]\n      }]\n    },\n    \"define-constant\": {\n      \"begin\": \"(?x) (\\\\() \\\\s* (define-constant) \\\\s+ ([a-zA-Z][\\\\w\\\\?\\\\!\\\\-]*) \\\\s+\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.define-constant.start.clarity\"\n        },\n        \"2\": {\n          \"name\": \"keyword.declaration.define-constant.clarity\"\n        },\n        \"3\": {\n          \"name\": \"entity.name.constant-name.clarity variable.other.clarity\"\n        }\n      },\n      \"end\": \"(\\\\))\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.define-constant.end.clarity\"\n        }\n      },\n      \"name\": \"meta.define-constant\",\n      \"patterns\": [{\n        \"include\": \"#expression\"\n      }]\n    },\n    \"define-data-var\": {\n      \"begin\": \"(?x) (\\\\() \\\\s* (define-data-var) \\\\s+ ([a-zA-Z][\\\\w\\\\?\\\\!\\\\-]*) \\\\s+\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.define-data-var.start.clarity\"\n        },\n        \"2\": {\n          \"name\": \"keyword.declaration.define-data-var.clarity\"\n        },\n        \"3\": {\n          \"name\": \"entity.name.data-var-name.clarity variable.other.clarity\"\n        }\n      },\n      \"end\": \"(\\\\))\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.define-data-var.end.clarity\"\n        }\n      },\n      \"name\": \"meta.define-data-var\",\n      \"patterns\": [{\n        \"include\": \"#data-type\"\n      }, {\n        \"include\": \"#expression\"\n      }]\n    },\n    \"define-function\": {\n      \"begin\": \"(?x) (\\\\() \\\\s* (define-(?:public|private|read-only)) \\\\s+\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.define-function.start.clarity\"\n        },\n        \"2\": {\n          \"name\": \"keyword.declaration.define-function.clarity\"\n        }\n      },\n      \"end\": \"(\\\\))\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.define-function.end.clarity\"\n        }\n      },\n      \"name\": \"meta.define-function\",\n      \"patterns\": [{\n        \"include\": \"#expression\"\n      }, {\n        \"begin\": \"(?x) (\\\\() \\\\s* ([a-zA-Z][\\\\w\\\\?\\\\!\\\\-]*) \\\\s*\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.function-signature.start.clarity\"\n          },\n          \"2\": {\n            \"name\": \"entity.name.function.clarity\"\n          }\n        },\n        \"end\": \"(\\\\))\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.function-signature.end.clarity\"\n          }\n        },\n        \"name\": \"meta.define-function-signature\",\n        \"patterns\": [{\n          \"begin\": \"(?x) (\\\\() \\\\s* ([a-zA-Z][\\\\w\\\\?\\\\!\\\\-]*) \\\\s+\",\n          \"beginCaptures\": {\n            \"1\": {\n              \"name\": \"punctuation.function-argument.start.clarity\"\n            },\n            \"2\": {\n              \"name\": \"variable.parameter.clarity\"\n            }\n          },\n          \"end\": \"(\\\\))\",\n          \"endCaptures\": {\n            \"1\": {\n              \"name\": \"punctuation.function-argument.end.clarity\"\n            }\n          },\n          \"name\": \"meta.function-argument\",\n          \"patterns\": [{\n            \"include\": \"#data-type\"\n          }]\n        }]\n      }, {\n        \"include\": \"#user-func\"\n      }]\n    },\n    \"define-fungible-token\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"punctuation.define-fungible-token.start.clarity\"\n        },\n        \"2\": {\n          \"name\": \"keyword.declaration.define-fungible-token.clarity\"\n        },\n        \"3\": {\n          \"name\": \"entity.name.fungible-token-name.clarity variable.other.clarity\"\n        },\n        \"4\": {\n          \"name\": \"constant.numeric.fungible-token-total-supply.clarity\"\n        },\n        \"5\": {\n          \"name\": \"punctuation.define-fungible-token.end.clarity\"\n        }\n      },\n      \"match\": \"(?x) (\\\\() \\\\s* (define-fungible-token) \\\\s+ ([a-zA-Z][\\\\w\\\\?\\\\!\\\\-]*) (?:\\\\s+(u\\\\d+))?\"\n    },\n    \"define-map\": {\n      \"begin\": \"(?x) (\\\\() \\\\s* (define-map) \\\\s+ ([a-zA-Z][\\\\w\\\\?\\\\!\\\\-]*) \\\\s+\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.define-map.start.clarity\"\n        },\n        \"2\": {\n          \"name\": \"keyword.declaration.define-map.clarity\"\n        },\n        \"3\": {\n          \"name\": \"entity.name.map-name.clarity variable.other.clarity\"\n        }\n      },\n      \"end\": \"(\\\\))\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.define-map.end.clarity\"\n        }\n      },\n      \"name\": \"meta.define-map\",\n      \"patterns\": [{\n        \"include\": \"#data-type\"\n      }, {\n        \"include\": \"#expression\"\n      }]\n    },\n    \"define-non-fungible-token\": {\n      \"begin\": \"(?x) (\\\\() \\\\s* (define-non-fungible-token) \\\\s+ ([a-zA-Z][\\\\w\\\\?\\\\!\\\\-]*) \\\\s+\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.define-non-fungible-token.start.clarity\"\n        },\n        \"2\": {\n          \"name\": \"keyword.declaration.define-non-fungible-token.clarity\"\n        },\n        \"3\": {\n          \"name\": \"entity.name.non-fungible-token-name.clarity variable.other.clarity\"\n        }\n      },\n      \"end\": \"(\\\\))\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.define-non-fungible-token.end.clarity\"\n        }\n      },\n      \"name\": \"meta.define-non-fungible-token\",\n      \"patterns\": [{\n        \"include\": \"#data-type\"\n      }]\n    },\n    \"define-trait\": {\n      \"begin\": \"(?x) (\\\\() \\\\s* (define-trait) \\\\s+ ([a-zA-Z][\\\\w\\\\?\\\\!\\\\-]*) \\\\s+\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.define-trait.start.clarity\"\n        },\n        \"2\": {\n          \"name\": \"keyword.declaration.define-trait.clarity\"\n        },\n        \"3\": {\n          \"name\": \"entity.name.trait-name.clarity variable.other.clarity\"\n        }\n      },\n      \"end\": \"(\\\\))\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.define-trait.end.clarity\"\n        }\n      },\n      \"name\": \"meta.define-trait\",\n      \"patterns\": [{\n        \"begin\": \"(?x) (\\\\() \\\\s*\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.define-trait-body.start.clarity\"\n          }\n        },\n        \"end\": \"(\\\\))\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.define-trait-body.end.clarity\"\n          }\n        },\n        \"name\": \"meta.define-trait-body\",\n        \"patterns\": [{\n          \"include\": \"#expression\"\n        }, {\n          \"begin\": \"(?x) (\\\\() \\\\s* ([a-zA-Z][\\\\w\\\\!\\\\?\\\\-]*) \\\\s+\",\n          \"beginCaptures\": {\n            \"1\": {\n              \"name\": \"punctuation.trait-function.start.clarity\"\n            },\n            \"2\": {\n              \"name\": \"entity.name.function.clarity\"\n            }\n          },\n          \"end\": \"(\\\\))\",\n          \"endCaptures\": {\n            \"1\": {\n              \"name\": \"punctuation.trait-function.end.clarity\"\n            }\n          },\n          \"name\": \"meta.trait-function\",\n          \"patterns\": [{\n            \"include\": \"#data-type\"\n          }, {\n            \"begin\": \"(?x) (\\\\() \\\\s*\",\n            \"beginCaptures\": {\n              \"1\": {\n                \"name\": \"punctuation.trait-function-args.start.clarity\"\n              }\n            },\n            \"end\": \"(\\\\))\",\n            \"endCaptures\": {\n              \"1\": {\n                \"name\": \"punctuation.trait-function-args.end.clarity\"\n              }\n            },\n            \"name\": \"meta.trait-function-args\",\n            \"patterns\": [{\n              \"include\": \"#data-type\"\n            }]\n          }]\n        }]\n      }]\n    },\n    \"expression\": {\n      \"patterns\": [{\n        \"include\": \"#comment\"\n      }, {\n        \"include\": \"#keyword\"\n      }, {\n        \"include\": \"#literal\"\n      }, {\n        \"include\": \"#let-func\"\n      }, {\n        \"include\": \"#built-in-func\"\n      }, {\n        \"include\": \"#get-set-func\"\n      }]\n    },\n    \"get-set-func\": {\n      \"begin\": \"(?x) (\\\\() \\\\s* (var-get|var-set|map-get\\\\?|map-set|map-insert|map-delete|get) \\\\s+ ([a-zA-Z][\\\\w\\\\?\\\\!\\\\-]*) \\\\s*\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.get-set-func.start.clarity\"\n        },\n        \"2\": {\n          \"name\": \"keyword.control.clarity\"\n        },\n        \"3\": {\n          \"name\": \"variable.other.clarity\"\n        }\n      },\n      \"end\": \"(\\\\))\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.get-set-func.end.clarity\"\n        }\n      },\n      \"name\": \"meta.get-set-func\",\n      \"patterns\": [{\n        \"include\": \"#expression\"\n      }]\n    },\n    \"keyword\": {\n      \"match\": \"(?<!\\\\S)(?!-)\\\\b(?:block-height|burn-block-height|chain-id|contract-caller|is-in-regtest|stacks-block-height|stx-liquid-supply|tenure-height|tx-sender|tx-sponsor?)\\\\b(?!\\\\s*-)\",\n      \"name\": \"constant.language.clarity\"\n    },\n    \"let-func\": {\n      \"begin\": \"(?x) (\\\\() \\\\s* (let) \\\\s*\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.let-function.start.clarity\"\n        },\n        \"2\": {\n          \"name\": \"keyword.declaration.let-function.clarity\"\n        }\n      },\n      \"end\": \"(\\\\))\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.let-function.end.clarity\"\n        }\n      },\n      \"name\": \"meta.let-function\",\n      \"patterns\": [{\n        \"include\": \"#expression\"\n      }, {\n        \"include\": \"#user-func\"\n      }, {\n        \"begin\": \"(?x) (\\\\() \\\\s*\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.let-var.start.clarity\"\n          }\n        },\n        \"end\": \"(\\\\))\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.let-var.end.clarity\"\n          }\n        },\n        \"name\": \"meta.let-var\",\n        \"patterns\": [{\n          \"begin\": \"(?x) (\\\\() ([a-zA-Z][\\\\w\\\\?\\\\!\\\\-]*) \\\\s+\",\n          \"beginCaptures\": {\n            \"1\": {\n              \"name\": \"punctuation.let-local-var.start.clarity\"\n            },\n            \"2\": {\n              \"name\": \"entity.name.let-local-var-name.clarity variable.parameter.clarity\"\n            }\n          },\n          \"end\": \"(\\\\))\",\n          \"endCaptures\": {\n            \"1\": {\n              \"name\": \"punctuation.let-local-var.end.clarity\"\n            }\n          },\n          \"name\": \"meta.let-local-var\",\n          \"patterns\": [{\n            \"include\": \"#expression\"\n          }, {\n            \"include\": \"#user-func\"\n          }]\n        }, {\n          \"include\": \"#expression\"\n        }]\n      }]\n    },\n    \"literal\": {\n      \"patterns\": [{\n        \"include\": \"#number-literal\"\n      }, {\n        \"include\": \"#bool-literal\"\n      }, {\n        \"include\": \"#string-literal\"\n      }, {\n        \"include\": \"#tuple-literal\"\n      }, {\n        \"include\": \"#principal-literal\"\n      }, {\n        \"include\": \"#list-literal\"\n      }, {\n        \"include\": \"#optional-literal\"\n      }, {\n        \"include\": \"#response-literal\"\n      }],\n      \"repository\": {\n        \"bool-literal\": {\n          \"match\": \"(?<!\\\\S)(?!-)\\\\b(true|false)\\\\b(?!\\\\s*-)\",\n          \"name\": \"constant.language.bool.clarity\"\n        },\n        \"list-literal\": {\n          \"begin\": \"(?x) (\\\\() \\\\s* (list) \\\\s+\",\n          \"beginCaptures\": {\n            \"1\": {\n              \"name\": \"punctuation.list.start.clarity\"\n            },\n            \"2\": {\n              \"name\": \"entity.name.type.list.clarity\"\n            }\n          },\n          \"end\": \"(\\\\))\",\n          \"endCaptures\": {\n            \"1\": {\n              \"names\": \"punctuation.list.end.clarity\"\n            }\n          },\n          \"name\": \"meta.list\",\n          \"patterns\": [{\n            \"include\": \"#expression\"\n          }, {\n            \"include\": \"#user-func\"\n          }]\n        },\n        \"number-literal\": {\n          \"patterns\": [{\n            \"comment\": \"unsigned integers\",\n            \"match\": \"(?<!\\\\S)(?!-)\\\\bu\\\\d+\\\\b(?!\\\\s*-)\",\n            \"name\": \"constant.numeric.uint.clarity\"\n          }, {\n            \"comment\": \"signed integers\",\n            \"match\": \"(?<!\\\\S)(?!-)\\\\b\\\\d+\\\\b(?!\\\\s*-)\",\n            \"name\": \"constant.numeric.int.clarity\"\n          }, {\n            \"comment\": \"hexadecimals\",\n            \"match\": \"(?<!\\\\S)(?!-)\\\\b0x[0-9a-f]*\\\\b(?!\\\\s*-)\",\n            \"name\": \"constant.numeric.hex.clarity\"\n          }]\n        },\n        \"optional-literal\": {\n          \"patterns\": [{\n            \"match\": \"(?<!\\\\S)(?!-)\\\\b(none)\\\\b(?!\\\\s*-)\",\n            \"name\": \"constant.language.none.clarity\"\n          }, {\n            \"begin\": \"(?x) (\\\\() \\\\s* (some) \\\\s+\",\n            \"beginCaptures\": {\n              \"1\": {\n                \"name\": \"punctuation.some.start.clarity\"\n              },\n              \"2\": {\n                \"name\": \"constant.language.some.clarity\"\n              }\n            },\n            \"end\": \"(\\\\))\",\n            \"endCaptures\": {\n              \"1\": {\n                \"name\": \"punctuation.some.end.clarity\"\n              }\n            },\n            \"name\": \"meta.some\",\n            \"patterns\": [{\n              \"include\": \"#expression\"\n            }]\n          }]\n        },\n        \"principal-literal\": {\n          \"match\": \"(?x)  \\\\'[0-9A-Z]{28,41}(:?\\\\.[a-zA-Z][a-zA-Z0-9\\\\-]+){0,2} | (\\\\.[a-zA-Z][a-zA-Z0-9\\\\-]*){1,2} (?=[\\\\s(){},]|$)\",\n          \"name\": \"constant.other.principal.clarity\"\n        },\n        \"response-literal\": {\n          \"begin\": \"(?x) (\\\\() \\\\s* (ok|err) \\\\s+\",\n          \"beginCaptures\": {\n            \"1\": {\n              \"name\": \"punctuation.response.start.clarity\"\n            },\n            \"2\": {\n              \"name\": \"constant.language.ok-err.clarity\"\n            }\n          },\n          \"end\": \"(\\\\))\",\n          \"endCaptures\": {\n            \"1\": {\n              \"name\": \"punctuation.response.end.clarity\"\n            }\n          },\n          \"name\": \"meta.response\",\n          \"patterns\": [{\n            \"include\": \"#expression\"\n          }, {\n            \"include\": \"#user-func\"\n          }]\n        },\n        \"string-literal\": {\n          \"patterns\": [{\n            \"begin\": '(u?)(\")',\n            \"beginCaptures\": {\n              \"1\": {\n                \"name\": \"string.quoted.utf8.clarity\"\n              },\n              \"2\": {\n                \"name\": \"punctuation.definition.string.begin.clarity\"\n              }\n            },\n            \"end\": '\"',\n            \"endCaptures\": {\n              \"1\": {\n                \"name\": \"punctuation.definition.string.end.clarity\"\n              }\n            },\n            \"name\": \"string.quoted.double.clarity\",\n            \"patterns\": [{\n              \"match\": \"\\\\\\\\.\",\n              \"name\": \"constant.character.escape.quote\"\n            }]\n          }]\n        },\n        \"tuple-literal\": {\n          \"begin\": \"(\\\\{)\",\n          \"beginCaptures\": {\n            \"1\": {\n              \"name\": \"punctuation.tuple.start.clarity\"\n            }\n          },\n          \"end\": \"(\\\\})\",\n          \"endCaptures\": {\n            \"1\": {\n              \"name\": \"punctuation.tuple.end.clarity\"\n            }\n          },\n          \"name\": \"meta.tuple\",\n          \"patterns\": [{\n            \"match\": \"([a-zA-Z][\\\\w\\\\?\\\\!\\\\-]*)(?=:)\",\n            \"name\": \"entity.name.tag.tuple-key.clarity\"\n          }, {\n            \"include\": \"#expression\"\n          }, {\n            \"include\": \"#user-func\"\n          }]\n        }\n      }\n    },\n    \"use-trait\": {\n      \"begin\": \"(?x) (\\\\() \\\\s* (use-trait) \\\\s+ ([a-zA-Z][\\\\w\\\\?\\\\!\\\\-]*) \\\\s+\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.use-trait.start.clarity\"\n        },\n        \"2\": {\n          \"name\": \"keyword.declaration.use-trait.clarity\"\n        },\n        \"3\": {\n          \"name\": \"entity.name.trait-alias.clarity variable.other.clarity\"\n        }\n      },\n      \"end\": \"(\\\\))\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.use-trait.end.clarity\"\n        }\n      },\n      \"name\": \"meta.use-trait\",\n      \"patterns\": [{\n        \"include\": \"#literal\"\n      }]\n    },\n    \"user-func\": {\n      \"begin\": \"(?x) (\\\\() \\\\s* (([a-zA-Z][\\\\w\\\\?\\\\!\\\\-]*)) \\\\s*\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.user-function.start.clarity\"\n        },\n        \"2\": {\n          \"name\": \"entity.name.function.clarity\"\n        }\n      },\n      \"end\": \"(\\\\))\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.user-function.end.clarity\"\n        }\n      },\n      \"name\": \"meta.user-function\",\n      \"patterns\": [{\n        \"include\": \"#expression\"\n      }, {\n        \"include\": \"$self\"\n      }]\n    }\n  },\n  \"scopeName\": \"source.clar\"\n});\nvar clarity = [lang];\nexport { clarity as default };"],
  "mappings": "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",
  "names": []
}
