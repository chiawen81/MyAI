{
  "version": 3,
  "sources": ["../../../../../../node_modules/shiki/dist/langs/ballerina.mjs"],
  "sourcesContent": ["const lang = Object.freeze({\n  \"displayName\": \"Ballerina\",\n  \"fileTypes\": [\"bal\"],\n  \"name\": \"ballerina\",\n  \"patterns\": [{\n    \"include\": \"#statements\"\n  }],\n  \"repository\": {\n    \"access-modifier\": {\n      \"patterns\": [{\n        \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(public|private)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\",\n        \"name\": \"storage.modifier.ballerina keyword.other.ballerina\"\n      }]\n    },\n    \"annotationAttachment\": {\n      \"patterns\": [{\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.decorator.ballerina\"\n          },\n          \"2\": {\n            \"name\": \"support.type.ballerina\"\n          },\n          \"3\": {\n            \"name\": \"punctuation.decorator.ballerina\"\n          },\n          \"4\": {\n            \"name\": \"support.type.ballerina\"\n          }\n        },\n        \"match\": \"(@)((?:[_$[:alpha:]][_$[:alnum:]]*))\\\\s*(:?)\\\\s*((?:[_$[:alpha:]][_$[:alnum:]]*)?)\"\n      }]\n    },\n    \"annotationDefinition\": {\n      \"patterns\": [{\n        \"begin\": \"\\\\bannotation\\\\b\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"keyword.ballerina\"\n          }\n        },\n        \"end\": \";\",\n        \"patterns\": [{\n          \"include\": \"#code\"\n        }]\n      }]\n    },\n    \"array-literal\": {\n      \"begin\": \"\\\\s*(\\\\[)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"meta.brace.square.ballerina\"\n        }\n      },\n      \"end\": \"\\\\]\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"meta.brace.square.ballerina\"\n        }\n      },\n      \"name\": \"meta.array.literal.ballerina\",\n      \"patterns\": [{\n        \"include\": \"#expression\"\n      }, {\n        \"include\": \"#punctuation-comma\"\n      }]\n    },\n    \"booleans\": {\n      \"patterns\": [{\n        \"match\": \"\\\\b(true|false)\\\\b\",\n        \"name\": \"constant.language.boolean.ballerina\"\n      }]\n    },\n    \"butClause\": {\n      \"patterns\": [{\n        \"begin\": \"=>\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"meta.arrow.ballerina storage.type.function.arrow.ballerina\"\n          }\n        },\n        \"end\": \",|(?=\\\\})\",\n        \"patterns\": [{\n          \"include\": \"#code\"\n        }]\n      }]\n    },\n    \"butExp\": {\n      \"patterns\": [{\n        \"begin\": \"\\\\bbut\\\\b\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"keyword.ballerina\"\n          }\n        },\n        \"end\": \"\\\\}\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.block.ballerina.documentation\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#butExpBody\"\n        }, {\n          \"include\": \"#comment\"\n        }]\n      }]\n    },\n    \"butExpBody\": {\n      \"patterns\": [{\n        \"begin\": \"\\\\{\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.block.ballerina.documentation\"\n          }\n        },\n        \"end\": \"(?=\\\\})\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.block.ballerina.documentation\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#parameter\"\n        }, {\n          \"include\": \"#butClause\"\n        }, {\n          \"include\": \"#comment\"\n        }]\n      }]\n    },\n    \"call\": {\n      \"patterns\": [{\n        \"match\": \"(?:\\\\')?([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(?=\\\\()\",\n        \"name\": \"entity.name.function.ballerina\"\n      }]\n    },\n    \"callableUnitBody\": {\n      \"patterns\": [{\n        \"begin\": \"\\\\{\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.block.ballerina\"\n          }\n        },\n        \"end\": \"(?=\\\\})\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.block.ballerina\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#workerDef\"\n        }, {\n          \"include\": \"#service-decl\"\n        }, {\n          \"include\": \"#objectDec\"\n        }, {\n          \"include\": \"#function-defn\"\n        }, {\n          \"include\": \"#forkStatement\"\n        }, {\n          \"include\": \"#code\"\n        }]\n      }]\n    },\n    \"class-body\": {\n      \"begin\": \"\\\\{\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.block.ballerina\"\n        }\n      },\n      \"end\": \"\\\\}\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.block.ballerina\"\n        }\n      },\n      \"name\": \"meta.class.body.ballerina\",\n      \"patterns\": [{\n        \"include\": \"#comment\"\n      }, {\n        \"include\": \"#mdDocumentation\"\n      }, {\n        \"include\": \"#function-defn\"\n      }, {\n        \"include\": \"#var-expr\"\n      }, {\n        \"include\": \"#variable-initializer\"\n      }, {\n        \"include\": \"#access-modifier\"\n      }, {\n        \"include\": \"#keywords\"\n      }, {\n        \"begin\": \"(?<=:)\\\\s*\",\n        \"end\": \"(?=\\\\s|[;),}\\\\]:\\\\-\\\\+]|;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|class|const|declare|enum|export|function|import|interface|let|module|namespace|return|service|type|var)\\\\b))\"\n      }, {\n        \"include\": \"#decl-block\"\n      }, {\n        \"include\": \"#expression\"\n      }, {\n        \"include\": \"#punctuation-comma\"\n      }, {\n        \"include\": \"#punctuation-semicolon\"\n      }]\n    },\n    \"class-defn\": {\n      \"begin\": \"(\\\\s+)(class\\\\b)|^class\\\\b(?=\\\\s+|/[/*])\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"storage.type.class.ballerina keyword.other.ballerina\"\n        }\n      },\n      \"end\": \"(?<=\\\\})\",\n      \"name\": \"meta.class.ballerina\",\n      \"patterns\": [{\n        \"include\": \"#keywords\"\n      }, {\n        \"captures\": {\n          \"0\": {\n            \"name\": \"entity.name.type.class.ballerina\"\n          }\n        },\n        \"match\": \"[_$[:alpha:]][_$[:alnum:]]*\"\n      }, {\n        \"include\": \"#class-body\"\n      }]\n    },\n    \"code\": {\n      \"patterns\": [{\n        \"include\": \"#booleans\"\n      }, {\n        \"include\": \"#matchStatement\"\n      }, {\n        \"include\": \"#butExp\"\n      }, {\n        \"include\": \"#xml\"\n      }, {\n        \"include\": \"#stringTemplate\"\n      }, {\n        \"include\": \"#keywords\"\n      }, {\n        \"include\": \"#strings\"\n      }, {\n        \"include\": \"#comment\"\n      }, {\n        \"include\": \"#mdDocumentation\"\n      }, {\n        \"include\": \"#annotationAttachment\"\n      }, {\n        \"include\": \"#numbers\"\n      }, {\n        \"include\": \"#maps\"\n      }, {\n        \"include\": \"#paranthesised\"\n      }, {\n        \"include\": \"#paranthesisedBracket\"\n      }, {\n        \"include\": \"#regex\"\n      }]\n    },\n    \"comment\": {\n      \"patterns\": [{\n        \"match\": \"\\\\/\\\\/.*\",\n        \"name\": \"comment.ballerina\"\n      }]\n    },\n    \"constrainType\": {\n      \"patterns\": [{\n        \"begin\": \"<\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.parameters.begin.ballerina\"\n          }\n        },\n        \"end\": \">\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.parameters.end.ballerina\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#comment\"\n        }, {\n          \"include\": \"#constrainType\"\n        }, {\n          \"match\": \"\\\\b([_$[:alpha:]][_$[:alnum:]]*)\\\\b\",\n          \"name\": \"storage.type.ballerina\"\n        }]\n      }]\n    },\n    \"control-statement\": {\n      \"patterns\": [{\n        \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(return)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"keyword.control.flow.ballerina\"\n          }\n        },\n        \"end\": \"(?=[;}]|$|;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|class|const|declare|enum|export|function|import|interface|let|module|namespace|return|service|type|var)\\\\b))\",\n        \"patterns\": [{\n          \"include\": \"#expression\"\n        }]\n      }, {\n        \"include\": \"#for-loop\"\n      }, {\n        \"include\": \"#if-statement\"\n      }, {\n        \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(else|if)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\",\n        \"name\": \"keyword.control.conditional.ballerina\"\n      }]\n    },\n    \"decl-block\": {\n      \"begin\": \"\\\\{\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.block.ballerina\"\n        }\n      },\n      \"end\": \"(?=\\\\} external;)|(\\\\})\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.block.ballerina\"\n        }\n      },\n      \"name\": \"meta.block.ballerina\",\n      \"patterns\": [{\n        \"include\": \"#statements\"\n      }, {\n        \"include\": \"#mdDocumentation\"\n      }]\n    },\n    \"declaration\": {\n      \"patterns\": [{\n        \"include\": \"#import-declaration\"\n      }, {\n        \"include\": \"#var-expr\"\n      }, {\n        \"include\": \"#typeDefinition\"\n      }, {\n        \"include\": \"#function-defn\"\n      }, {\n        \"include\": \"#service-decl\"\n      }, {\n        \"include\": \"#class-defn\"\n      }, {\n        \"include\": \"#enum-decl\"\n      }, {\n        \"include\": \"#source\"\n      }, {\n        \"include\": \"#keywords\"\n      }]\n    },\n    \"defaultValue\": {\n      \"patterns\": [{\n        \"begin\": \"[=:]\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"keyword.operator.ballerina\"\n          }\n        },\n        \"end\": \"(?=[,)])\",\n        \"patterns\": [{\n          \"include\": \"#code\"\n        }]\n      }]\n    },\n    \"defaultWithParentheses\": {\n      \"patterns\": [{\n        \"begin\": \"\\\\(\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.block.ballerina\"\n          }\n        },\n        \"end\": \"\\\\)\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.block.ballerina\"\n          }\n        }\n      }]\n    },\n    \"documentationBody\": {\n      \"patterns\": [{\n        \"begin\": \"\\\\{\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.block.ballerina.documentation\"\n          }\n        },\n        \"end\": \"(?=\\\\})\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.block.ballerina.documentation\"\n          }\n        },\n        \"patterns\": [{\n          \"captures\": {\n            \"1\": {\n              \"name\": \"keyword.other.ballerina.documentation\"\n            },\n            \"2\": {\n              \"name\": \"keyword.other.ballerina.documentation\"\n            },\n            \"3\": {\n              \"name\": \"variable.parameter.ballerina.documentation\"\n            },\n            \"4\": {\n              \"name\": \"keyword.other.ballerina.documentation\"\n            }\n          },\n          \"match\": \"(P|R|T|F|V)({{)(.*)(}})\"\n        }, {\n          \"begin\": \"\\\\```\",\n          \"end\": \"\\\\```\",\n          \"name\": \"comment.block.code.ballerina.documentation\"\n        }, {\n          \"begin\": \"\\\\``\",\n          \"end\": \"\\\\``\",\n          \"name\": \"comment.block.code.ballerina.documentation\"\n        }, {\n          \"begin\": \"\\\\`\",\n          \"end\": \"\\\\`\",\n          \"name\": \"comment.block.code.ballerina.documentation\"\n        }, {\n          \"match\": \".\",\n          \"name\": \"comment.block.ballerina.documentation\"\n        }]\n      }]\n    },\n    \"documentationDef\": {\n      \"patterns\": [{\n        \"begin\": \"\\\\b(?:documentation|deprecated)\\\\b\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"keyword.ballerina\"\n          }\n        },\n        \"end\": \"\\\\}\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"delimiter.curly\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#documentationBody\"\n        }, {\n          \"include\": \"#comment\"\n        }]\n      }]\n    },\n    \"enum-decl\": {\n      \"begin\": \"(?:\\\\b(const)\\\\s+)?\\\\b(enum)\\\\s+([_$[:alpha:]][_$[:alnum:]]*)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"storage.modifier.ballerina\"\n        },\n        \"2\": {\n          \"name\": \"keyword.other.ballerina\"\n        },\n        \"3\": {\n          \"name\": \"entity.name.type.enum.ballerina\"\n        }\n      },\n      \"end\": \"(?<=\\\\})\",\n      \"name\": \"meta.enum.declaration.ballerina\",\n      \"patterns\": [{\n        \"include\": \"#comment\"\n      }, {\n        \"include\": \"#mdDocumentation\"\n      }, {\n        \"begin\": \"\\\\{\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.block.ballerina\"\n          }\n        },\n        \"end\": \"\\\\}\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.block.ballerina\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#comment\"\n        }, {\n          \"include\": \"#mdDocumentation\"\n        }, {\n          \"begin\": \"([_$[:alpha:]][_$[:alnum:]]*)\",\n          \"beginCaptures\": {\n            \"0\": {\n              \"name\": \"variable.other.enummember.ballerina\"\n            }\n          },\n          \"end\": \"(?=,|\\\\}|$)\",\n          \"patterns\": [{\n            \"include\": \"#comment\"\n          }, {\n            \"include\": \"#variable-initializer\"\n          }]\n        }, {\n          \"begin\": \"(?=((\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`)|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])+\\\\])))\",\n          \"end\": \"(?=,|\\\\}|$)\",\n          \"patterns\": [{\n            \"include\": \"#string\"\n          }, {\n            \"include\": \"#array-literal\"\n          }, {\n            \"include\": \"#comment\"\n          }, {\n            \"include\": \"#variable-initializer\"\n          }]\n        }, {\n          \"include\": \"#punctuation-comma\"\n        }]\n      }]\n    },\n    \"errorDestructure\": {\n      \"patterns\": [{\n        \"begin\": \"error\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"storage.type.ballerina\"\n          }\n        },\n        \"end\": \"(?==>)\",\n        \"patterns\": [{\n          \"include\": \"#code\"\n        }]\n      }]\n    },\n    \"expression\": {\n      \"patterns\": [{\n        \"include\": \"#keywords\"\n      }, {\n        \"include\": \"#expressionWithoutIdentifiers\"\n      }, {\n        \"include\": \"#identifiers\"\n      }, {\n        \"include\": \"#regex\"\n      }]\n    },\n    \"expression-operators\": {\n      \"patterns\": [{\n        \"match\": \"\\\\*=|(?<!\\\\()/=|%=|\\\\+=|\\\\-=\",\n        \"name\": \"keyword.operator.assignment.compound.ballerina\"\n      }, {\n        \"match\": \"\\\\&=|\\\\^=|<<=|>>=|>>>=|\\\\|=\",\n        \"name\": \"keyword.operator.assignment.compound.bitwise.ballerina\"\n      }, {\n        \"match\": \"<<|>>>|>>\",\n        \"name\": \"keyword.operator.bitwise.shift.ballerina\"\n      }, {\n        \"match\": \"===|!==|==|!=\",\n        \"name\": \"keyword.operator.comparison.ballerina\"\n      }, {\n        \"match\": \"<=|>=|<>|<|>\",\n        \"name\": \"keyword.operator.relational.ballerina\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"keyword.operator.logical.ballerina\"\n          },\n          \"2\": {\n            \"name\": \"keyword.operator.assignment.compound.ballerina\"\n          },\n          \"3\": {\n            \"name\": \"keyword.operator.arithmetic.ballerina\"\n          }\n        },\n        \"match\": \"(?<=[_$[:alnum:]])(\\\\!)\\\\s*(?:(/=)|(?:(/)(?![/*])))\"\n      }, {\n        \"match\": \"\\\\!|&&|\\\\|\\\\||\\\\?\\\\?\",\n        \"name\": \"keyword.operator.logical.ballerina\"\n      }, {\n        \"match\": \"\\\\&|~|\\\\^|\\\\|\",\n        \"name\": \"keyword.operator.bitwise.ballerina\"\n      }, {\n        \"match\": \"\\\\=\",\n        \"name\": \"keyword.operator.assignment.ballerina\"\n      }, {\n        \"match\": \"--\",\n        \"name\": \"keyword.operator.decrement.ballerina\"\n      }, {\n        \"match\": \"\\\\+\\\\+\",\n        \"name\": \"keyword.operator.increment.ballerina\"\n      }, {\n        \"match\": \"%|\\\\*|/|-|\\\\+\",\n        \"name\": \"keyword.operator.arithmetic.ballerina\"\n      }]\n    },\n    \"expressionWithoutIdentifiers\": {\n      \"patterns\": [{\n        \"include\": \"#xml\"\n      }, {\n        \"include\": \"#string\"\n      }, {\n        \"include\": \"#stringTemplate\"\n      }, {\n        \"include\": \"#comment\"\n      }, {\n        \"include\": \"#object-literal\"\n      }, {\n        \"include\": \"#ternary-expression\"\n      }, {\n        \"include\": \"#expression-operators\"\n      }, {\n        \"include\": \"#literal\"\n      }, {\n        \"include\": \"#paranthesised\"\n      }, {\n        \"include\": \"#regex\"\n      }]\n    },\n    \"flags-on-off\": {\n      \"name\": \"meta.flags.regexp.ballerina\",\n      \"patterns\": [{\n        \"begin\": \"(\\\\??)([imsx]*)(-?)([imsx]*)(:)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.other.non-capturing-group-begin.regexp.ballerina\"\n          },\n          \"2\": {\n            \"name\": \"keyword.other.non-capturing-group.flags-on.regexp.ballerina\"\n          },\n          \"3\": {\n            \"name\": \"punctuation.other.non-capturing-group.off.regexp.ballerina\"\n          },\n          \"4\": {\n            \"name\": \"keyword.other.non-capturing-group.flags-off.regexp.ballerina\"\n          },\n          \"5\": {\n            \"name\": \"punctuation.other.non-capturing-group-end.regexp.ballerina\"\n          }\n        },\n        \"end\": \"()\",\n        \"name\": \"constant.other.flag.regexp.ballerina\",\n        \"patterns\": [{\n          \"include\": \"#regexp\"\n        }, {\n          \"include\": \"#template-substitution-element\"\n        }]\n      }]\n    },\n    \"for-loop\": {\n      \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))foreach\\\\s*\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"keyword.control.loop.ballerina\"\n        },\n        \"1\": {\n          \"name\": \"support.type.primitive.ballerina\"\n        }\n      },\n      \"end\": \"(?=\\\\{)\",\n      \"patterns\": [{\n        \"match\": \"\\\\bin\\\\b\",\n        \"name\": \"keyword.other.ballerina\"\n      }, {\n        \"include\": \"#identifiers\"\n      }, {\n        \"include\": \"#comment\"\n      }, {\n        \"include\": \"#var-expr\"\n      }, {\n        \"include\": \"#expression\"\n      }]\n    },\n    \"forkBody\": {\n      \"patterns\": [{\n        \"begin\": \"\\\\{\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.block.ballerina\"\n          }\n        },\n        \"end\": \"(?=\\\\})\",\n        \"patterns\": [{\n          \"include\": \"#workerDef\"\n        }]\n      }]\n    },\n    \"forkStatement\": {\n      \"patterns\": [{\n        \"begin\": \"\\\\bfork\\\\b\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"keyword.control.ballerina\"\n          }\n        },\n        \"end\": \"\\\\}\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.block.ballerina\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#forkBody\"\n        }]\n      }]\n    },\n    \"function-body\": {\n      \"patterns\": [{\n        \"include\": \"#comment\"\n      }, {\n        \"include\": \"#functionParameters\"\n      }, {\n        \"include\": \"#decl-block\"\n      }, {\n        \"begin\": \"\\\\=>\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"meta.arrow.ballerina storage.type.function.arrow.ballerina\"\n          }\n        },\n        \"end\": \"(?=\\\\;)|(?=\\\\,)|(?=)(?=\\\\);)\",\n        \"name\": \"meta.block.ballerina\",\n        \"patterns\": [{\n          \"include\": \"#statements\"\n        }, {\n          \"include\": \"#punctuation-comma\"\n        }]\n      }, {\n        \"match\": \"\\\\*\",\n        \"name\": \"keyword.generator.asterisk.ballerina\"\n      }]\n    },\n    \"function-defn\": {\n      \"begin\": \"(?:(public|private)\\\\s+)?(function\\\\b)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.other.ballerina\"\n        },\n        \"2\": {\n          \"name\": \"keyword.other.ballerina\"\n        }\n      },\n      \"end\": \"(?<=\\\\;)|(?<=\\\\})|(?<=\\\\,)|(?=)(?=\\\\);)\",\n      \"name\": \"meta.function.ballerina\",\n      \"patterns\": [{\n        \"match\": \"\\\\bexternal\\\\b\",\n        \"name\": \"keyword.ballerina\"\n      }, {\n        \"include\": \"#stringTemplate\"\n      }, {\n        \"include\": \"#annotationAttachment\"\n      }, {\n        \"include\": \"#functionReturns\"\n      }, {\n        \"include\": \"#functionName\"\n      }, {\n        \"include\": \"#functionParameters\"\n      }, {\n        \"include\": \"#punctuation-semicolon\"\n      }, {\n        \"include\": \"#function-body\"\n      }, {\n        \"include\": \"#regex\"\n      }]\n    },\n    \"function-parameters-body\": {\n      \"patterns\": [{\n        \"include\": \"#comment\"\n      }, {\n        \"include\": \"#numbers\"\n      }, {\n        \"include\": \"#string\"\n      }, {\n        \"include\": \"#annotationAttachment\"\n      }, {\n        \"include\": \"#recordLiteral\"\n      }, {\n        \"include\": \"#keywords\"\n      }, {\n        \"include\": \"#parameter-name\"\n      }, {\n        \"include\": \"#array-literal\"\n      }, {\n        \"include\": \"#variable-initializer\"\n      }, {\n        \"include\": \"#identifiers\"\n      }, {\n        \"include\": \"#regex\"\n      }, {\n        \"match\": \"\\\\,\",\n        \"name\": \"punctuation.separator.parameter.ballerina\"\n      }]\n    },\n    \"functionName\": {\n      \"patterns\": [{\n        \"match\": \"\\\\bfunction\\\\b\",\n        \"name\": \"keyword.other.ballerina\"\n      }, {\n        \"include\": \"#type-primitive\"\n      }, {\n        \"include\": \"#self-literal\"\n      }, {\n        \"include\": \"#string\"\n      }, {\n        \"captures\": {\n          \"2\": {\n            \"name\": \"variable.language.this.ballerina\"\n          },\n          \"3\": {\n            \"name\": \"keyword.other.ballerina\"\n          },\n          \"4\": {\n            \"name\": \"support.type.primitive.ballerina\"\n          },\n          \"5\": {\n            \"name\": \"storage.type.ballerina\"\n          },\n          \"6\": {\n            \"name\": \"meta.definition.function.ballerina entity.name.function.ballerina\"\n          }\n        },\n        \"match\": \"\\\\s+(\\\\b(self)|\\\\b(is|new|isolated|null|function|in)\\\\b|(string|int|boolean|float|byte|decimal|json|xml|anydata)\\\\b|\\\\b(readonly|error|map)\\\\b|([_$[:alpha:]][_$[:alnum:]]*))\"\n      }]\n    },\n    \"functionParameters\": {\n      \"begin\": \"\\\\(|\\\\[\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.parameters.begin.ballerina\"\n        }\n      },\n      \"end\": \"\\\\)|\\\\]\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.parameters.end.ballerina\"\n        }\n      },\n      \"name\": \"meta.parameters.ballerina\",\n      \"patterns\": [{\n        \"include\": \"#function-parameters-body\"\n      }]\n    },\n    \"functionReturns\": {\n      \"begin\": \"\\\\s*(returns)\\\\s*\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.other.ballerina\"\n        }\n      },\n      \"end\": \"(?==>)|(\\\\=)|(?=\\\\{)|(\\\\))|(?=\\\\;)\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.operator.ballerina\"\n        }\n      },\n      \"name\": \"meta.type.function.return.ballerina\",\n      \"patterns\": [{\n        \"include\": \"#comment\"\n      }, {\n        \"include\": \"#string\"\n      }, {\n        \"include\": \"#numbers\"\n      }, {\n        \"include\": \"#keywords\"\n      }, {\n        \"include\": \"#type-primitive\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"support.type.primitive.ballerina\"\n          }\n        },\n        \"match\": \"\\\\s*\\\\b(var)(?=\\\\s+|\\\\[|\\\\?)\"\n      }, {\n        \"match\": \"\\\\|\",\n        \"name\": \"keyword.operator.ballerina\"\n      }, {\n        \"match\": \"\\\\?\",\n        \"name\": \"keyword.operator.optional.ballerina\"\n      }, {\n        \"include\": \"#type-annotation\"\n      }, {\n        \"include\": \"#type-tuple\"\n      }, {\n        \"include\": \"#keywords\"\n      }, {\n        \"match\": \"[_$[:alpha:]][_$[:alnum:]]*\",\n        \"name\": \"variable.other.readwrite.ballerina\"\n      }]\n    },\n    \"functionType\": {\n      \"patterns\": [{\n        \"begin\": \"\\\\bfunction\\\\b\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"keyword.ballerina\"\n          }\n        },\n        \"end\": \"(?=\\\\,)|(?=\\\\|)|(?=\\\\:)|(?==>)|(?=\\\\))|(?=\\\\])\",\n        \"patterns\": [{\n          \"include\": \"#comment\"\n        }, {\n          \"include\": \"#functionTypeParamList\"\n        }, {\n          \"include\": \"#functionTypeReturns\"\n        }]\n      }]\n    },\n    \"functionTypeParamList\": {\n      \"patterns\": [{\n        \"begin\": \"\\\\(\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"delimiter.parenthesis\"\n          }\n        },\n        \"end\": \"\\\\)\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"delimiter.parenthesis\"\n          }\n        },\n        \"patterns\": [{\n          \"match\": \"public\",\n          \"name\": \"keyword\"\n        }, {\n          \"include\": \"#annotationAttachment\"\n        }, {\n          \"include\": \"#recordLiteral\"\n        }, {\n          \"include\": \"#record\"\n        }, {\n          \"include\": \"#objectDec\"\n        }, {\n          \"include\": \"#functionType\"\n        }, {\n          \"include\": \"#constrainType\"\n        }, {\n          \"include\": \"#parameterTuple\"\n        }, {\n          \"include\": \"#functionTypeType\"\n        }, {\n          \"include\": \"#comment\"\n        }]\n      }]\n    },\n    \"functionTypeReturns\": {\n      \"patterns\": [{\n        \"begin\": \"\\\\breturns\\\\b\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"keyword\"\n          }\n        },\n        \"end\": \"(?=\\\\,)|(?:\\\\|)|(?=\\\\])|(?=\\\\))\",\n        \"patterns\": [{\n          \"include\": \"#functionTypeReturnsParameter\"\n        }, {\n          \"include\": \"#comment\"\n        }]\n      }]\n    },\n    \"functionTypeReturnsParameter\": {\n      \"patterns\": [{\n        \"begin\": \"((?=record|object|function)|(?:[_$[:alpha:]][_$[:alnum:]]*))\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"storage.type.ballerina\"\n          }\n        },\n        \"end\": \"(?=\\\\,)|(?:\\\\|)|(?:\\\\:)|(?==>)|(?=\\\\))|(?=\\\\])\",\n        \"patterns\": [{\n          \"include\": \"#record\"\n        }, {\n          \"include\": \"#objectDec\"\n        }, {\n          \"include\": \"#functionType\"\n        }, {\n          \"include\": \"#constrainType\"\n        }, {\n          \"include\": \"#defaultValue\"\n        }, {\n          \"include\": \"#comment\"\n        }, {\n          \"include\": \"#parameterTuple\"\n        }, {\n          \"match\": \"[_$[:alpha:]][_$[:alnum:]]*\",\n          \"name\": \"default.variable.parameter.ballerina\"\n        }]\n      }]\n    },\n    \"functionTypeType\": {\n      \"patterns\": [{\n        \"begin\": \"[_$[:alpha:]][_$[:alnum:]]*\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"storage.type.ballerina\"\n          }\n        },\n        \"end\": \"(?=\\\\,)|(?:\\\\|)|(?=\\\\])|(?=\\\\))\"\n      }]\n    },\n    \"identifiers\": {\n      \"patterns\": [{\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.accessor.ballerina\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.accessor.optional.ballerina\"\n          },\n          \"3\": {\n            \"name\": \"entity.name.function.ballerina\"\n          }\n        },\n        \"match\": \"(?x)(?:(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))\\\\s*)?([_$[:alpha:]][_$[:alnum:]]*)(?=\\\\s*=\\\\s*(\\n((\\n(function\\\\s*[(<*]) |\\n(function\\\\s+) |\\n([_$[:alpha:]][_$[:alnum:]]*\\\\s*=>)\\n)) |\\n((\\n((<\\\\s*$)|((<\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?[\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))) |\\n\\n(\\n(<\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\n[(]\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*\\n(\\n([)]\\\\s*:) |\\n((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)\\n)\\n) |\\n\\n# arrow function possible to detect only with => on same line\\n(\\n(<\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\n\\\\(\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()\\\\'\\\\\\\"\\\\`]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))*)?\\\\)\\n(\\\\s*:\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+)?\\n\\\\s*=>\\n)\\n))\\n))\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.accessor.ballerina\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.accessor.optional.ballerina\"\n          },\n          \"3\": {\n            \"name\": \"entity.name.function.ballerina\"\n          }\n        },\n        \"match\": \"(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))\\\\s*(\\\\#?[_$[:alpha:]][_$[:alnum:]]*)\\\\s*(?=\\\\()\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.accessor.ballerina\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.accessor.optional.ballerina\"\n          },\n          \"3\": {\n            \"name\": \"variable.other.property.ballerina\"\n          }\n        },\n        \"match\": \"(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))\\\\s*(\\\\#?[_$[:alpha:]][_$[:alnum:]]*)\"\n      }, {\n        \"include\": \"#type-primitive\"\n      }, {\n        \"include\": \"#self-literal\"\n      }, {\n        \"match\": \"\\\\b(check|foreach|if|checkpanic)\\\\b\",\n        \"name\": \"keyword.control.ballerina\"\n      }, {\n        \"include\": \"#call\"\n      }, {\n        \"match\": \"\\\\b(var)\\\\b\",\n        \"name\": \"support.type.primitive.ballerina\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"variable.other.readwrite.ballerina\"\n          },\n          \"3\": {\n            \"name\": \"punctuation.accessor.ballerina\"\n          },\n          \"4\": {\n            \"name\": \"entity.name.function.ballerina\"\n          },\n          \"5\": {\n            \"name\": \"punctuation.definition.parameters.begin.ballerina\"\n          },\n          \"6\": {\n            \"name\": \"punctuation.definition.parameters.end.ballerina\"\n          }\n        },\n        \"match\": \"([_$[:alpha:]][_$[:alnum:]]*)((\\\\.)([_$[:alpha:]][_$[:alnum:]]*)(\\\\()(\\\\)))?\"\n      }, {\n        \"match\": \"(\\\\')([_$[:alpha:]][_$[:alnum:]]*)\",\n        \"name\": \"variable.other.property.ballerina\"\n      }, {\n        \"include\": \"#type-annotation\"\n      }]\n    },\n    \"if-statement\": {\n      \"patterns\": [{\n        \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?=\\\\bif\\\\b\\\\s*(?!\\\\{))\",\n        \"end\": \"(?<=\\\\})\",\n        \"patterns\": [{\n          \"include\": \"#comment\"\n        }, {\n          \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(if)\\\\s*(\\\\()?\",\n          \"beginCaptures\": {\n            \"1\": {\n              \"name\": \"keyword.control.conditional.ballerina\"\n            },\n            \"2\": {\n              \"name\": \"meta.brace.round.ballerina\"\n            }\n          },\n          \"end\": \"(\\\\))|(?=\\\\{)\",\n          \"endCaptures\": {\n            \"1\": {\n              \"name\": \"meta.brace.round.ballerina\"\n            }\n          },\n          \"patterns\": [{\n            \"include\": \"#decl-block\"\n          }, {\n            \"include\": \"#keywords\"\n          }, {\n            \"include\": \"#identifiers\"\n          }, {\n            \"include\": \"#type-primitive\"\n          }, {\n            \"include\": \"#xml\"\n          }, {\n            \"include\": \"#string\"\n          }, {\n            \"include\": \"#stringTemplate\"\n          }, {\n            \"include\": \"#comment\"\n          }, {\n            \"include\": \"#ternary-expression\"\n          }, {\n            \"include\": \"#expression-operators\"\n          }, {\n            \"include\": \"#literal\"\n          }, {\n            \"include\": \"#paranthesised\"\n          }, {\n            \"include\": \"#regex\"\n          }]\n        }, {\n          \"begin\": \"(?<=\\\\))(?=\\\\s|\\\\=)\",\n          \"end\": \"(?=\\\\{)\",\n          \"patterns\": [{\n            \"include\": \"#literal\"\n          }, {\n            \"include\": \"#keywords\"\n          }]\n        }, {\n          \"include\": \"#decl-block\"\n        }]\n      }]\n    },\n    \"import-clause\": {\n      \"patterns\": [{\n        \"include\": \"#comment\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"keyword.control.default.ballerina\"\n          },\n          \"3\": {\n            \"name\": \"variable.other.readwrite.ballerina meta.import.module.ballerina\"\n          },\n          \"5\": {\n            \"name\": \"keyword.control.default.ballerina\"\n          },\n          \"6\": {\n            \"name\": \"variable.other.readwrite.alias.ballerina\"\n          }\n        },\n        \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bdefault)|(\\\\*)|(\\\\b[_$[:alpha:]][_$[:alnum:]]*))\"\n      }, {\n        \"match\": \"([_$[:alpha:]][_$[:alnum:]]*)\",\n        \"name\": \"variable.other.readwrite.alias.ballerina\"\n      }]\n    },\n    \"import-declaration\": {\n      \"begin\": \"\\\\bimport\\\\b\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"keyword.control.import.ballerina\"\n        }\n      },\n      \"end\": \"\\\\;\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.terminator.statement.ballerina\"\n        }\n      },\n      \"name\": \"meta.import.ballerina\",\n      \"patterns\": [{\n        \"match\": \"(\\\\')([_$[:alpha:]][_$[:alnum:]]*)\",\n        \"name\": \"variable.other.property.ballerina\"\n      }, {\n        \"include\": \"#keywords\"\n      }, {\n        \"include\": \"#comment\"\n      }, {\n        \"include\": \"#import-clause\"\n      }, {\n        \"include\": \"#punctuation-accessor\"\n      }]\n    },\n    \"keywords\": {\n      \"patterns\": [{\n        \"match\": \"\\\\b(fork|join|while|returns|transaction|transactional|retry|commit|rollback|typeof|enum|wait|match)\\\\b\",\n        \"name\": \"keyword.control.ballerina\"\n      }, {\n        \"match\": \"\\\\b(return|break|continue|check|checkpanic|panic|trap|from|where)\\\\b\",\n        \"name\": \"keyword.control.flow.ballerina\"\n      }, {\n        \"match\": \"\\\\b(public|private|external|return|record|object|remote|abstract|client|true|false|fail|import|version)\\\\b\",\n        \"name\": \"keyword.other.ballerina\"\n      }, {\n        \"match\": \"\\\\b(as|on|function|resource|listener|const|final|is|null|lock|annotation|source|worker|parameter|field|isolated|in)\\\\b\",\n        \"name\": \"keyword.other.ballerina\"\n      }, {\n        \"match\": \"\\\\b(xmlns|table|key|let|new|select|start|flush|default|do|base16|base64|conflict)\\\\b\",\n        \"name\": \"keyword.other.ballerina\"\n      }, {\n        \"match\": \"\\\\b(limit|outer|equals|order|by|ascending|descending|class|configurable|variable|module|service|group|collect)\\\\b\",\n        \"name\": \"keyword.other.ballerina\"\n      }, {\n        \"match\": \"(=>)\",\n        \"name\": \"meta.arrow.ballerina storage.type.function.arrow.ballerina\"\n      }, {\n        \"match\": \"(!|%|\\\\+|\\\\-|~=|===|==|=|!=|!==|<|>|&|\\\\||\\\\?:|\\\\.\\\\.\\\\.|<=|>=|&&|\\\\|\\\\||~|>>|>>>)\",\n        \"name\": \"keyword.operator.ballerina\"\n      }, {\n        \"include\": \"#types\"\n      }, {\n        \"include\": \"#self-literal\"\n      }, {\n        \"include\": \"#type-primitive\"\n      }]\n    },\n    \"literal\": {\n      \"patterns\": [{\n        \"include\": \"#booleans\"\n      }, {\n        \"include\": \"#numbers\"\n      }, {\n        \"include\": \"#strings\"\n      }, {\n        \"include\": \"#maps\"\n      }, {\n        \"include\": \"#self-literal\"\n      }, {\n        \"include\": \"#array-literal\"\n      }]\n    },\n    \"maps\": {\n      \"patterns\": [{\n        \"begin\": \"\\\\{\",\n        \"end\": \"\\\\}\",\n        \"patterns\": [{\n          \"include\": \"#code\"\n        }]\n      }]\n    },\n    \"matchBindingPattern\": {\n      \"patterns\": [{\n        \"begin\": \"var\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"storage.type.ballerina\"\n          }\n        },\n        \"end\": \"(?==>)|,\",\n        \"patterns\": [{\n          \"include\": \"#errorDestructure\"\n        }, {\n          \"include\": \"#code\"\n        }, {\n          \"match\": \"[_$[:alpha:]][_$[:alnum:]]*\",\n          \"name\": \"variable.parameter.ballerina\"\n        }]\n      }]\n    },\n    \"matchStatement\": {\n      \"patterns\": [{\n        \"begin\": \"\\\\bmatch\\\\b\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"keyword.control.ballerina\"\n          }\n        },\n        \"end\": \"\\\\}\",\n        \"patterns\": [{\n          \"include\": \"#matchStatementBody\"\n        }, {\n          \"include\": \"#comment\"\n        }, {\n          \"include\": \"#code\"\n        }]\n      }]\n    },\n    \"matchStatementBody\": {\n      \"patterns\": [{\n        \"begin\": \"\\\\{\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.block.ballerina.documentation\"\n          }\n        },\n        \"end\": \"(?=\\\\})\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.block.ballerina.documentation\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#literal\"\n        }, {\n          \"include\": \"#matchBindingPattern\"\n        }, {\n          \"include\": \"#matchStatementPatternClause\"\n        }, {\n          \"include\": \"#comment\"\n        }, {\n          \"include\": \"#code\"\n        }]\n      }]\n    },\n    \"matchStatementPatternClause\": {\n      \"patterns\": [{\n        \"begin\": \"=>\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"keyword.ballerina\"\n          }\n        },\n        \"end\": \"((\\\\})|;|,)\",\n        \"patterns\": [{\n          \"include\": \"#callableUnitBody\"\n        }, {\n          \"include\": \"#code\"\n        }]\n      }]\n    },\n    \"mdDocumentation\": {\n      \"begin\": \"\\\\#\",\n      \"end\": \"[\\\\r\\\\n]+\",\n      \"name\": \"comment.mddocs.ballerina\",\n      \"patterns\": [{\n        \"include\": \"#mdDocumentationReturnParamDescription\"\n      }, {\n        \"include\": \"#mdDocumentationParamDescription\"\n      }]\n    },\n    \"mdDocumentationParamDescription\": {\n      \"patterns\": [{\n        \"begin\": \"(\\\\+\\\\s+)(\\\\'?[_$[:alpha:]][_$[:alnum:]]*)(\\\\s*\\\\-\\\\s+)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.operator.ballerina\"\n          },\n          \"2\": {\n            \"name\": \"variable.other.readwrite.ballerina\"\n          },\n          \"3\": {\n            \"name\": \"keyword.operator.ballerina\"\n          }\n        },\n        \"end\": \"(?=[^#\\\\r\\\\n]|(?:# *?\\\\+))\",\n        \"patterns\": [{\n          \"match\": \"#.*\",\n          \"name\": \"comment.mddocs.paramdesc.ballerina\"\n        }]\n      }]\n    },\n    \"mdDocumentationReturnParamDescription\": {\n      \"patterns\": [{\n        \"begin\": \"(#)(?: *?)(\\\\+)(?: *)(return)(?: *)(-)?(.*)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"comment.mddocs.ballerina\"\n          },\n          \"2\": {\n            \"name\": \"keyword.ballerina\"\n          },\n          \"3\": {\n            \"name\": \"keyword.ballerina\"\n          },\n          \"4\": {\n            \"name\": \"keyword.ballerina\"\n          },\n          \"5\": {\n            \"name\": \"comment.mddocs.returnparamdesc.ballerina\"\n          }\n        },\n        \"end\": \"(?=[^#\\\\r\\\\n]|(?:# *?\\\\+))\",\n        \"patterns\": [{\n          \"match\": \"#.*\",\n          \"name\": \"comment.mddocs.returnparamdesc.ballerina\"\n        }]\n      }]\n    },\n    \"multiType\": {\n      \"patterns\": [{\n        \"match\": \"(?<=\\\\|)([_$[:alpha:]][_$[:alnum:]]*)|([_$[:alpha:]][_$[:alnum:]]*)(?=\\\\|)\",\n        \"name\": \"storage.type.ballerina\"\n      }, {\n        \"match\": \"\\\\|\",\n        \"name\": \"keyword.operator.ballerina\"\n      }]\n    },\n    \"numbers\": {\n      \"patterns\": [{\n        \"match\": \"\\\\b0[xX][\\\\da-fA-F]+\\\\b|\\\\b\\\\d+(?:\\\\.(?:\\\\d+|$))?\",\n        \"name\": \"constant.numeric.decimal.ballerina\"\n      }]\n    },\n    \"object-literal\": {\n      \"begin\": \"\\\\{\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.block.ballerina\"\n        }\n      },\n      \"end\": \"\\\\}\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.block.ballerina\"\n        }\n      },\n      \"name\": \"meta.objectliteral.ballerina\",\n      \"patterns\": [{\n        \"include\": \"#object-member\"\n      }, {\n        \"include\": \"#punctuation-comma\"\n      }]\n    },\n    \"object-member\": {\n      \"patterns\": [{\n        \"include\": \"#comment\"\n      }, {\n        \"include\": \"#function-defn\"\n      }, {\n        \"include\": \"#literal\"\n      }, {\n        \"include\": \"#keywords\"\n      }, {\n        \"include\": \"#expression\"\n      }, {\n        \"begin\": \"(?=\\\\[)\",\n        \"end\": \"(?=:)|((?<=[\\\\]])(?=\\\\s*[\\\\(\\\\<]))\",\n        \"name\": \"meta.object.member.ballerina meta.object-literal.key.ballerina\",\n        \"patterns\": [{\n          \"include\": \"#comment\"\n        }]\n      }, {\n        \"begin\": \"(?=[\\\\'\\\\\\\"\\\\`])\",\n        \"end\": \"(?=:)|((?<=[\\\\'\\\\\\\"\\\\`])(?=((\\\\s*[\\\\(\\\\<,}])|(\\\\n*})|(\\\\s+(as)\\\\s+))))\",\n        \"name\": \"meta.object.member.ballerina meta.object-literal.key.ballerina\",\n        \"patterns\": [{\n          \"include\": \"#comment\"\n        }, {\n          \"include\": \"#string\"\n        }]\n      }, {\n        \"begin\": \"(?x)(?=(\\\\b(?<!\\\\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:b|B)[01][01_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:o|O)?[0-7][0-7_]*(n)?\\\\b(?!\\\\$))|((?<!\\\\$)(?:\\n(?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|\\n(?:\\\\b[0-9][0-9_]*(\\\\.)[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|\\n(?:\\\\B(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|\\n(?:\\\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|\\n(?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*(n)?\\\\b)|\\n(?:\\\\b[0-9][0-9_]*(\\\\.)(n)?\\\\B)|\\n(?:\\\\B(\\\\.)[0-9][0-9_]*(n)?\\\\b)|\\n(?:\\\\b[0-9][0-9_]*(n)?\\\\b(?!\\\\.))\\n)(?!\\\\$)))\",\n        \"end\": \"(?=:)|(?=\\\\s*([\\\\(\\\\<,}])|(\\\\s+as\\\\s+))\",\n        \"name\": \"meta.object.member.ballerina meta.object-literal.key.ballerina\",\n        \"patterns\": [{\n          \"include\": \"#comment\"\n        }, {\n          \"include\": \"#numbers\"\n        }]\n      }, {\n        \"begin\": \"(?<=[\\\\]\\\\'\\\\\\\"\\\\`])(?=\\\\s*[\\\\(\\\\<])\",\n        \"end\": \"(?=\\\\}|;|,)|(?<=\\\\})\",\n        \"name\": \"meta.method.declaration.ballerina\",\n        \"patterns\": [{\n          \"include\": \"#function-body\"\n        }]\n      }, {\n        \"captures\": {\n          \"0\": {\n            \"name\": \"meta.object-literal.key.ballerina\"\n          },\n          \"1\": {\n            \"name\": \"constant.numeric.decimal.ballerina\"\n          }\n        },\n        \"match\": \"(?![_$[:alpha:]])([[:digit:]]+)\\\\s*(?=(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*:)\",\n        \"name\": \"meta.object.member.ballerina\"\n      }, {\n        \"captures\": {\n          \"0\": {\n            \"name\": \"meta.object-literal.key.ballerina\"\n          },\n          \"1\": {\n            \"name\": \"entity.name.function.ballerina\"\n          }\n        },\n        \"match\": \"(?x)(?:([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(?=(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*:(\\\\s*\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/)*\\\\s*(\\n((\\n(function\\\\s*[(<*]) |\\n(function\\\\s+) |\\n([_$[:alpha:]][_$[:alnum:]]*\\\\s*=>)\\n)) |\\n((\\n((<\\\\s*$)|((<\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?[\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))) |\\n\\n(\\n(<\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\n[(]\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*\\n(\\n([)]\\\\s*:) |\\n((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)\\n)\\n) |\\n\\n# arrow function possible to detect only with => on same line\\n(\\n(<\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\n\\\\(\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()\\\\'\\\\\\\"\\\\`]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))*)?\\\\)\\n(\\\\s*:\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+)?\\n\\\\s*=>\\n)\\n))\\n)))\",\n        \"name\": \"meta.object.member.ballerina\"\n      }, {\n        \"captures\": {\n          \"0\": {\n            \"name\": \"meta.object-literal.key.ballerina\"\n          }\n        },\n        \"match\": \"(?:[_$[:alpha:]][_$[:alnum:]]*)\\\\s*(?=(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*:)\",\n        \"name\": \"meta.object.member.ballerina\"\n      }, {\n        \"begin\": \"\\\\.\\\\.\\\\.\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"keyword.operator.spread.ballerina\"\n          }\n        },\n        \"end\": \"(?=,|\\\\})\",\n        \"name\": \"meta.object.member.ballerina\",\n        \"patterns\": [{\n          \"include\": \"#expression\"\n        }]\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"variable.other.readwrite.ballerina\"\n          }\n        },\n        \"match\": \"([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(?=,|\\\\}|$|\\\\/\\\\/|\\\\/\\\\*)\",\n        \"name\": \"meta.object.member.ballerina\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"keyword.control.as.ballerina\"\n          },\n          \"2\": {\n            \"name\": \"storage.modifier.ballerina\"\n          }\n        },\n        \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(as)\\\\s+(const)(?=\\\\s*([,}]|$))\",\n        \"name\": \"meta.object.member.ballerina\"\n      }, {\n        \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(as)\\\\s+\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.as.ballerina\"\n          }\n        },\n        \"end\": \"(?=[;),}\\\\]:?\\\\-\\\\+\\\\>]|\\\\|\\\\||\\\\&\\\\&|\\\\!\\\\=\\\\=|$|^|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(as)\\\\s+))\",\n        \"name\": \"meta.object.member.ballerina\"\n      }, {\n        \"begin\": \"(?=[_$[:alpha:]][_$[:alnum:]]*\\\\s*=)\",\n        \"end\": \"(?=,|\\\\}|$|\\\\/\\\\/|\\\\/\\\\*)\",\n        \"name\": \"meta.object.member.ballerina\",\n        \"patterns\": [{\n          \"include\": \"#expression\"\n        }]\n      }]\n    },\n    \"objectDec\": {\n      \"patterns\": [{\n        \"begin\": \"\\\\bobject\\\\b(?!:)\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"keyword.other.ballerina\"\n          }\n        },\n        \"end\": \"(?<=\\\\})\",\n        \"patterns\": [{\n          \"include\": \"#decl-block\"\n        }]\n      }]\n    },\n    \"objectInitBody\": {\n      \"patterns\": [{\n        \"begin\": \"\\\\{\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.block.ballerina\"\n          }\n        },\n        \"end\": \"(?=\\\\})\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.block.ballerina\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#comment\"\n        }, {\n          \"include\": \"#code\"\n        }]\n      }]\n    },\n    \"objectInitParameters\": {\n      \"patterns\": [{\n        \"begin\": \"\\\\(\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.parameters.begin.ballerina\"\n          }\n        },\n        \"end\": \"\\\\)\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.parameters.end.ballerina\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#code\"\n        }, {\n          \"match\": \"\\\\b([_$[:alpha:]][_$[:alnum:]]*)\\\\b\",\n          \"name\": \"variable.parameter.ballerina\"\n        }]\n      }]\n    },\n    \"objectMemberFunctionDec\": {\n      \"patterns\": [{\n        \"begin\": \"\\\\bfunction\\\\b\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"keyword.ballerina\"\n          }\n        },\n        \"end\": \";\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.block.ballerina\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#functionParameters\"\n        }, {\n          \"match\": \"\\\\breturns\\\\b\",\n          \"name\": \"keyword.ballerina\"\n        }, {\n          \"include\": \"#code\"\n        }]\n      }]\n    },\n    \"parameter\": {\n      \"patterns\": [{\n        \"begin\": \"((?=record|object|function)|([_$[:alpha:]][_$[:alnum:]]*)(?=\\\\|)|(?:[_$[:alpha:]][_$[:alnum:]]*))\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"storage.type.ballerina\"\n          }\n        },\n        \"end\": \"(?:\\\\,)|(?:\\\\|)|(?:\\\\:)|(?==>)|(?=\\\\))|(?=\\\\])\",\n        \"patterns\": [{\n          \"include\": \"#parameterWithDescriptor\"\n        }, {\n          \"include\": \"#record\"\n        }, {\n          \"include\": \"#objectDec\"\n        }, {\n          \"include\": \"#functionType\"\n        }, {\n          \"include\": \"#constrainType\"\n        }, {\n          \"include\": \"#defaultValue\"\n        }, {\n          \"include\": \"#comment\"\n        }, {\n          \"include\": \"#parameterTuple\"\n        }, {\n          \"match\": \"[_$[:alpha:]][_$[:alnum:]]*\",\n          \"name\": \"default.variable.parameter.ballerina\"\n        }]\n      }]\n    },\n    \"parameter-name\": {\n      \"patterns\": [{\n        \"captures\": {\n          \"1\": {\n            \"name\": \"support.type.primitive.ballerina\"\n          }\n        },\n        \"match\": \"\\\\s*\\\\b(var)\\\\s+\"\n      }, {\n        \"captures\": {\n          \"2\": {\n            \"name\": \"keyword.operator.rest.ballerina\"\n          },\n          \"3\": {\n            \"name\": \"support.type.primitive.ballerina\"\n          },\n          \"4\": {\n            \"name\": \"keyword.other.ballerina\"\n          },\n          \"5\": {\n            \"name\": \"constant.language.boolean.ballerina\"\n          },\n          \"6\": {\n            \"name\": \"keyword.control.flow.ballerina\"\n          },\n          \"7\": {\n            \"name\": \"storage.type.ballerina\"\n          },\n          \"8\": {\n            \"name\": \"variable.parameter.ballerina\"\n          },\n          \"9\": {\n            \"name\": \"variable.parameter.ballerina\"\n          },\n          \"10\": {\n            \"name\": \"keyword.operator.optional.ballerina\"\n          }\n        },\n        \"match\": \"(?x)(?:(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))\\\\s+)?(?:(\\\\.\\\\.\\\\.)\\\\s*)?(?<!=|:)(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(this)|(string|int|boolean|float|byte|decimal|json|xml|anydata)|\\\\b(is|new|isolated|null|function|in)\\\\b|\\\\b(true|false)\\\\b|\\\\b(check|foreach|if|checkpanic)\\\\b|\\\\b(readonly|error|map)\\\\b|([_$[:alpha:]][_$[:alnum:]]*))(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\\\\s*(\\\\??)\"\n      }]\n    },\n    \"parameterTuple\": {\n      \"patterns\": [{\n        \"begin\": \"\\\\[\",\n        \"end\": \"(?=\\\\,)|(?=\\\\|)|(?=\\\\:)|(?==>)|(?=\\\\))\",\n        \"patterns\": [{\n          \"include\": \"#record\"\n        }, {\n          \"include\": \"#objectDec\"\n        }, {\n          \"include\": \"#parameterTupleType\"\n        }, {\n          \"include\": \"#parameterTupleEnd\"\n        }, {\n          \"include\": \"#comment\"\n        }]\n      }]\n    },\n    \"parameterTupleEnd\": {\n      \"patterns\": [{\n        \"begin\": \"\\\\]\",\n        \"end\": \"(?=\\\\,)|(?=\\\\|)|(?=\\\\:)|(?==>)|(?=\\\\))\",\n        \"patterns\": [{\n          \"include\": \"#defaultWithParentheses\"\n        }, {\n          \"match\": \"[_$[:alpha:]][_$[:alnum:]]*\",\n          \"name\": \"default.variable.parameter.ballerina\"\n        }]\n      }]\n    },\n    \"parameterTupleType\": {\n      \"patterns\": [{\n        \"begin\": \"[_$[:alpha:]][_$[:alnum:]]*\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"storage.type.ballerina\"\n          }\n        },\n        \"end\": \"(?:\\\\,)|(?:\\\\|)|(?=\\\\])\"\n      }]\n    },\n    \"parameterWithDescriptor\": {\n      \"patterns\": [{\n        \"begin\": \"\\\\&\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"keyword.operator.ballerina\"\n          }\n        },\n        \"end\": \"(?=\\\\,)|(?=\\\\|)|(?=\\\\))\",\n        \"patterns\": [{\n          \"include\": \"#parameter\"\n        }]\n      }]\n    },\n    \"parameters\": {\n      \"patterns\": [{\n        \"match\": \"\\\\s*(return|break|continue|check|checkpanic|panic|trap|from|where)\\\\b\",\n        \"name\": \"keyword.control.flow.ballerina\"\n      }, {\n        \"match\": \"\\\\s*(let|select)\\\\b\",\n        \"name\": \"keyword.other.ballerina\"\n      }, {\n        \"match\": \"\\\\,\",\n        \"name\": \"punctuation.separator.parameter.ballerina\"\n      }]\n    },\n    \"paranthesised\": {\n      \"begin\": \"\\\\(\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"meta.brace.round.ballerina\"\n        }\n      },\n      \"end\": \"\\\\)\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"meta.brace.round.ballerina\"\n        }\n      },\n      \"name\": \"meta.brace.round.block.ballerina\",\n      \"patterns\": [{\n        \"include\": \"#self-literal\"\n      }, {\n        \"include\": \"#function-defn\"\n      }, {\n        \"include\": \"#decl-block\"\n      }, {\n        \"include\": \"#comment\"\n      }, {\n        \"include\": \"#string\"\n      }, {\n        \"include\": \"#parameters\"\n      }, {\n        \"include\": \"#annotationAttachment\"\n      }, {\n        \"include\": \"#recordLiteral\"\n      }, {\n        \"include\": \"#stringTemplate\"\n      }, {\n        \"include\": \"#parameter-name\"\n      }, {\n        \"include\": \"#variable-initializer\"\n      }, {\n        \"include\": \"#expression\"\n      }, {\n        \"include\": \"#regex\"\n      }]\n    },\n    \"paranthesisedBracket\": {\n      \"patterns\": [{\n        \"begin\": \"\\\\[\",\n        \"end\": \"\\\\]\",\n        \"patterns\": [{\n          \"include\": \"#comment\"\n        }, {\n          \"include\": \"#code\"\n        }]\n      }]\n    },\n    \"punctuation-accessor\": {\n      \"patterns\": [{\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.accessor.ballerina\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.accessor.optional.ballerina\"\n          }\n        },\n        \"match\": \"(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))\"\n      }]\n    },\n    \"punctuation-comma\": {\n      \"patterns\": [{\n        \"match\": \",\",\n        \"name\": \"punctuation.separator.comma.ballerina\"\n      }]\n    },\n    \"punctuation-semicolon\": {\n      \"patterns\": [{\n        \"match\": \";\",\n        \"name\": \"punctuation.terminator.statement.ballerina\"\n      }]\n    },\n    \"record\": {\n      \"begin\": \"\\\\brecord\\\\b\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"keyword.other.ballerina\"\n        }\n      },\n      \"end\": \"(?<=\\\\})\",\n      \"name\": \"meta.record.ballerina\",\n      \"patterns\": [{\n        \"include\": \"#recordBody\"\n      }]\n    },\n    \"recordBody\": {\n      \"patterns\": [{\n        \"include\": \"#decl-block\"\n      }]\n    },\n    \"recordLiteral\": {\n      \"patterns\": [{\n        \"begin\": \"\\\\{\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.block.ballerina\"\n          }\n        },\n        \"end\": \"\\\\}\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.block.ballerina\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#code\"\n        }]\n      }]\n    },\n    \"regex\": {\n      \"patterns\": [{\n        \"begin\": \"(\\\\bre)(\\\\s*)(`)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"support.type.primitive.ballerina\"\n          },\n          \"3\": {\n            \"name\": \"punctuation.definition.regexp.template.begin.ballerina\"\n          }\n        },\n        \"end\": \"`\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.regexp.template.end.ballerina\"\n          }\n        },\n        \"name\": \"regexp.template.ballerina\",\n        \"patterns\": [{\n          \"include\": \"#template-substitution-element\"\n        }, {\n          \"include\": \"#regexp\"\n        }]\n      }]\n    },\n    \"regex-character-class\": {\n      \"patterns\": [{\n        \"match\": \"\\\\\\\\[wWsSdDtrn]|\\\\.\",\n        \"name\": \"keyword.other.character-class.regexp.ballerina\"\n      }, {\n        \"match\": \"\\\\\\\\[^pPu]\",\n        \"name\": \"constant.character.escape.backslash.regexp\"\n      }]\n    },\n    \"regex-unicode-properties-general-category\": {\n      \"patterns\": [{\n        \"match\": \"(Lu|Ll|Lt|Lm|Lo|L|Mn|Mc|Me|M|Nd|Nl|No|N|Pc|Pd|Ps|Pe|Pi|Pf|Po|P|Sm|Sc|Sk|So|S|Zs|Zl|Zp|Z|Cf|Cc|Cn|Co|C)\",\n        \"name\": \"constant.other.unicode-property-general-category.regexp.ballerina\"\n      }]\n    },\n    \"regex-unicode-property-key\": {\n      \"patterns\": [{\n        \"begin\": \"(sc=|gc=)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.other.unicode-property-key.regexp.ballerina\"\n          }\n        },\n        \"end\": \"()\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.other.unicode-property.end.regexp.ballerina\"\n          }\n        },\n        \"name\": \"keyword.other.unicode-property-key.regexp.ballerina\",\n        \"patterns\": [{\n          \"include\": \"#regex-unicode-properties-general-category\"\n        }]\n      }]\n    },\n    \"regexp\": {\n      \"patterns\": [{\n        \"match\": \"\\\\^|\\\\$\",\n        \"name\": \"keyword.control.assertion.regexp.ballerina\"\n      }, {\n        \"match\": \"[?+*]|\\\\{(\\\\d+,\\\\d+|\\\\d+,|,\\\\d+|\\\\d+)\\\\}\\\\??\",\n        \"name\": \"keyword.operator.quantifier.regexp.ballerina\"\n      }, {\n        \"match\": \"\\\\|\",\n        \"name\": \"keyword.operator.or.regexp.ballerina\"\n      }, {\n        \"begin\": \"(\\\\()\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.group.regexp.ballerina\"\n          }\n        },\n        \"end\": \"(\\\\))\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.group.regexp.ballerina\"\n          }\n        },\n        \"name\": \"meta.group.assertion.regexp.ballerina\",\n        \"patterns\": [{\n          \"include\": \"#template-substitution-element\"\n        }, {\n          \"include\": \"#regexp\"\n        }, {\n          \"include\": \"#flags-on-off\"\n        }, {\n          \"include\": \"#unicode-property-escape\"\n        }]\n      }, {\n        \"begin\": \"(\\\\[)(\\\\^)?\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.character-class.start.regexp.ballerina\"\n          },\n          \"2\": {\n            \"name\": \"keyword.operator.negation.regexp.ballerina\"\n          }\n        },\n        \"end\": \"(\\\\])\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.character-class.end.regexp.ballerina\"\n          }\n        },\n        \"name\": \"constant.other.character-class.set.regexp.ballerina\",\n        \"patterns\": [{\n          \"captures\": {\n            \"1\": {\n              \"name\": \"constant.character.numeric.regexp\"\n            },\n            \"2\": {\n              \"name\": \"constant.character.escape.backslash.regexp\"\n            },\n            \"3\": {\n              \"name\": \"constant.character.numeric.regexp\"\n            },\n            \"4\": {\n              \"name\": \"constant.character.escape.backslash.regexp\"\n            }\n          },\n          \"match\": \"(?:.|(\\\\\\\\(?:[0-7]{3}|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}))|(\\\\\\\\[^pPu]))\\\\-(?:[^\\\\]\\\\\\\\]|(\\\\\\\\(?:[0-7]{3}|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}))|(\\\\\\\\[^pPu]))\",\n          \"name\": \"constant.other.character-class.range.regexp.ballerina\"\n        }, {\n          \"include\": \"#regex-character-class\"\n        }, {\n          \"include\": \"#unicode-values\"\n        }, {\n          \"include\": \"#unicode-property-escape\"\n        }]\n      }, {\n        \"include\": \"#template-substitution-element\"\n      }, {\n        \"include\": \"#regex-character-class\"\n      }, {\n        \"include\": \"#unicode-values\"\n      }, {\n        \"include\": \"#unicode-property-escape\"\n      }]\n    },\n    \"self-literal\": {\n      \"patterns\": [{\n        \"captures\": {\n          \"1\": {\n            \"name\": \"variable.language.this.ballerina\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.accessor.ballerina\"\n          },\n          \"3\": {\n            \"name\": \"entity.name.function.ballerina\"\n          }\n        },\n        \"match\": \"(\\\\bself\\\\b)\\\\s*(.)\\\\s*([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(?=\\\\()\"\n      }, {\n        \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))self\\\\b(?!\\\\$)\",\n        \"name\": \"variable.language.this.ballerina\"\n      }]\n    },\n    \"service-decl\": {\n      \"begin\": \"\\\\bservice\\\\b\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"keyword.ballerina\"\n        }\n      },\n      \"end\": \"(?=;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|class|const|declare|enum|export|function|import|interface|let|module|namespace|return|service|type|var)\\\\b))|(?<=\\\\})|(?<=\\\\,)\",\n      \"name\": \"meta.service.declaration.ballerina\",\n      \"patterns\": [{\n        \"include\": \"#class-defn\"\n      }, {\n        \"include\": \"#serviceName\"\n      }, {\n        \"include\": \"#serviceOn\"\n      }, {\n        \"include\": \"#serviceBody\"\n      }, {\n        \"include\": \"#objectDec\"\n      }]\n    },\n    \"serviceBody\": {\n      \"patterns\": [{\n        \"include\": \"#comment\"\n      }, {\n        \"include\": \"#mdDocumentation\"\n      }, {\n        \"include\": \"#documentationDef\"\n      }, {\n        \"include\": \"#decl-block\"\n      }]\n    },\n    \"serviceName\": {\n      \"patterns\": [{\n        \"include\": \"#string\"\n      }, {\n        \"match\": '(\\\\/([_$[:alpha:]][_$[:alnum:]]*)|\\\\\"[_$[:alpha:]][_$[:alnum:]]*\\\\\")',\n        \"name\": \"entity.service.path.ballerina\"\n      }]\n    },\n    \"serviceOn\": {\n      \"patterns\": [{\n        \"begin\": \"on\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"keyword.other.ballerina\"\n          }\n        },\n        \"end\": \"(?={)\",\n        \"patterns\": [{\n          \"include\": \"#code\"\n        }]\n      }]\n    },\n    \"source\": {\n      \"patterns\": [{\n        \"begin\": \"(\\\\bsource\\\\b)\\\\s+([_$[:alpha:]][_$[:alnum:]]*)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.other.ballerina\"\n          },\n          \"2\": {\n            \"name\": \"variable.other.readwrite.ballerina\"\n          }\n        },\n        \"end\": \"(?=\\\\,)|(?=\\\\;)\"\n      }]\n    },\n    \"statements\": {\n      \"patterns\": [{\n        \"include\": \"#stringTemplate\"\n      }, {\n        \"include\": \"#declaration\"\n      }, {\n        \"include\": \"#control-statement\"\n      }, {\n        \"include\": \"#decl-block\"\n      }, {\n        \"include\": \"#expression\"\n      }, {\n        \"include\": \"#punctuation-semicolon\"\n      }, {\n        \"include\": \"#string\"\n      }, {\n        \"include\": \"#comment\"\n      }, {\n        \"include\": \"#mdDocumentation\"\n      }, {\n        \"include\": \"#keywords\"\n      }, {\n        \"include\": \"#annotationAttachment\"\n      }, {\n        \"include\": \"#regex\"\n      }]\n    },\n    \"string\": {\n      \"patterns\": [{\n        \"begin\": '\"',\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.begin.ballerina\"\n          }\n        },\n        \"end\": '(\")|((?:[^\\\\\\\\\\\\n])$)',\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.string.end.ballerina\"\n          },\n          \"2\": {\n            \"name\": \"invalid.illegal.newline.ballerina\"\n          }\n        },\n        \"name\": \"string.quoted.double.ballerina\",\n        \"patterns\": [{\n          \"include\": \"#string-character-escape\"\n        }]\n      }]\n    },\n    \"string-character-escape\": {\n      \"patterns\": [{\n        \"match\": \"\\\\\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}|u\\\\{[0-9A-Fa-f]+\\\\}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.|$)\",\n        \"name\": \"constant.character.escape.ballerina\"\n      }]\n    },\n    \"stringTemplate\": {\n      \"patterns\": [{\n        \"begin\": \"((string)|([_$[:alpha:]][_$[:alnum:]]*))?(`)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"entity.name.function.tagged-template.ballerina\"\n          },\n          \"2\": {\n            \"name\": \"support.type.primitive.ballerina\"\n          },\n          \"4\": {\n            \"name\": \"punctuation.definition.string.template.begin.ballerina\"\n          }\n        },\n        \"end\": \"\\\\\\\\?`\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.template.end.ballerina\"\n          }\n        },\n        \"name\": \"string.template.ballerina\",\n        \"patterns\": [{\n          \"include\": \"#template-substitution-element\"\n        }, {\n          \"include\": \"#string-character-escape\"\n        }]\n      }]\n    },\n    \"strings\": {\n      \"patterns\": [{\n        \"begin\": '\\\\\"',\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"string.begin.ballerina\"\n          }\n        },\n        \"end\": '\\\\\"',\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"string.end.ballerina\"\n          }\n        },\n        \"patterns\": [{\n          \"match\": \"\\\\\\\\.\",\n          \"name\": \"constant.character.escape.ballerina\"\n        }, {\n          \"match\": \".\",\n          \"name\": \"string\"\n        }]\n      }]\n    },\n    \"template-substitution-element\": {\n      \"patterns\": [{\n        \"begin\": \"\\\\$\\\\{\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.template-expression.begin.ballerina\"\n          }\n        },\n        \"contentName\": \"meta.embedded.line.ballerina\",\n        \"end\": \"\\\\}\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.template-expression.end.ballerina\"\n          }\n        },\n        \"name\": \"meta.template.expression.ballerina\",\n        \"patterns\": [{\n          \"include\": \"#expression\"\n        }]\n      }]\n    },\n    \"templateVariable\": {\n      \"patterns\": [{\n        \"begin\": \"\\\\${\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"constant.character.escape.ballerina\"\n          }\n        },\n        \"end\": \"}\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"constant.character.escape.ballerina\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#code\"\n        }]\n      }]\n    },\n    \"ternary-expression\": {\n      \"begin\": \"(?!\\\\?\\\\.\\\\s*[^[:digit:]])(\\\\?)(?!\\\\?)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.operator.ternary.ballerina\"\n        }\n      },\n      \"end\": \"\\\\s*\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.operator.ternary.ballerina\"\n        }\n      },\n      \"patterns\": [{\n        \"include\": \"#expression\"\n      }]\n    },\n    \"tupleType\": {\n      \"patterns\": [{\n        \"begin\": \"\\\\[\",\n        \"end\": \"(?=\\\\]|;)\",\n        \"patterns\": [{\n          \"include\": \"#comment\"\n        }, {\n          \"include\": \"#constrainType\"\n        }, {\n          \"include\": \"#paranthesisedBracket\"\n        }, {\n          \"match\": \"\\\\b([_$[:alpha:]][_$[:alnum:]]*)\\\\b\",\n          \"name\": \"storage.type.ballerina\"\n        }]\n      }]\n    },\n    \"type\": {\n      \"patterns\": [{\n        \"include\": \"#comment\"\n      }, {\n        \"include\": \"#string\"\n      }, {\n        \"include\": \"#numbers\"\n      }, {\n        \"include\": \"#type-primitive\"\n      }, {\n        \"include\": \"#type-tuple\"\n      }]\n    },\n    \"type-annotation\": {\n      \"patterns\": [{\n        \"begin\": \"(\\\\:)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.operator.type.annotation.ballerina\"\n          }\n        },\n        \"end\": \"(?<![:|&])((?=$|^|[,);\\\\}\\\\]\\\\?\\\\>\\\\=>]|//)|(?==[^>])|((?<=[\\\\}>\\\\]\\\\)]|[_$[:alpha:]])\\\\s*(?=\\\\{)))(\\\\?)?\",\n        \"name\": \"meta.type.annotation.ballerina\",\n        \"patterns\": [{\n          \"include\": \"#booleans\"\n        }, {\n          \"include\": \"#stringTemplate\"\n        }, {\n          \"include\": \"#regex\"\n        }, {\n          \"include\": \"#self-literal\"\n        }, {\n          \"include\": \"#xml\"\n        }, {\n          \"include\": \"#call\"\n        }, {\n          \"captures\": {\n            \"1\": {\n              \"name\": \"keyword.other.ballerina\"\n            },\n            \"2\": {\n              \"name\": \"constant.language.boolean.ballerina\"\n            },\n            \"3\": {\n              \"name\": \"keyword.control.ballerina\"\n            },\n            \"4\": {\n              \"name\": \"storage.type.ballerina\"\n            },\n            \"5\": {\n              \"name\": \"support.type.primitive.ballerina\"\n            },\n            \"6\": {\n              \"name\": \"variable.other.readwrite.ballerina\"\n            },\n            \"8\": {\n              \"name\": \"punctuation.accessor.ballerina\"\n            },\n            \"9\": {\n              \"name\": \"entity.name.function.ballerina\"\n            },\n            \"10\": {\n              \"name\": \"punctuation.definition.parameters.begin.ballerina\"\n            },\n            \"11\": {\n              \"name\": \"punctuation.definition.parameters.end.ballerina\"\n            }\n          },\n          \"match\": \"\\\\b(is|new|isolated|null|function|in)\\\\b|\\\\b(true|false)\\\\b|\\\\b(check|foreach|if|checkpanic)\\\\b|\\\\b(readonly|error|map)\\\\b|\\\\b(var)\\\\b|([_$[:alpha:]][_$[:alnum:]]*)((\\\\.)([_$[:alpha:]][_$[:alnum:]]*)(\\\\()(\\\\)))?\"\n        }, {\n          \"match\": \"\\\\?\",\n          \"name\": \"keyword.operator.optional.ballerina\"\n        }, {\n          \"include\": \"#multiType\"\n        }, {\n          \"include\": \"#type\"\n        }, {\n          \"include\": \"#paranthesised\"\n        }]\n      }]\n    },\n    \"type-primitive\": {\n      \"patterns\": [{\n        \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(string|int|boolean|float|byte|decimal|json|xml|anydata)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\",\n        \"name\": \"support.type.primitive.ballerina\"\n      }]\n    },\n    \"type-tuple\": {\n      \"begin\": \"\\\\[\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"meta.brace.square.ballerina\"\n        }\n      },\n      \"end\": \"\\\\]\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"meta.brace.square.ballerina\"\n        }\n      },\n      \"name\": \"meta.type.tuple.ballerina\",\n      \"patterns\": [{\n        \"include\": \"#self-literal\"\n      }, {\n        \"include\": \"#booleans\"\n      }, {\n        \"match\": \"\\\\.\\\\.\\\\.\",\n        \"name\": \"keyword.operator.rest.ballerina\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"entity.name.label.ballerina\"\n          },\n          \"2\": {\n            \"name\": \"keyword.operator.optional.ballerina\"\n          },\n          \"3\": {\n            \"name\": \"punctuation.separator.label.ballerina\"\n          }\n        },\n        \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(\\\\?)?\\\\s*(:)\"\n      }, {\n        \"include\": \"#identifiers\"\n      }, {\n        \"include\": \"#type\"\n      }, {\n        \"include\": \"#punctuation-comma\"\n      }]\n    },\n    \"typeDefinition\": {\n      \"patterns\": [{\n        \"begin\": \"(\\\\btype\\\\b)\\\\s+([_$[:alpha:]][_$[:alnum:]]*)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.other.ballerina\"\n          },\n          \"2\": {\n            \"name\": \"entity.name.type.ballerina\"\n          }\n        },\n        \"end\": \"\\\\;\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.terminator.statement.ballerina\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#functionParameters\"\n        }, {\n          \"include\": \"#functionReturns\"\n        }, {\n          \"include\": \"#mdDocumentation\"\n        }, {\n          \"include\": \"#record\"\n        }, {\n          \"include\": \"#string\"\n        }, {\n          \"include\": \"#keywords\"\n        }, {\n          \"include\": \"#multiType\"\n        }, {\n          \"include\": \"#type-primitive\"\n        }, {\n          \"match\": \"[_$[:alpha:]][_$[:alnum:]]*\",\n          \"name\": \"variable.other.readwrite.ballerina\"\n        }, {\n          \"include\": \"#type-annotation\"\n        }, {\n          \"include\": \"#typeDescription\"\n        }, {\n          \"include\": \"#decl-block\"\n        }]\n      }]\n    },\n    \"typeDescription\": {\n      \"patterns\": [{\n        \"begin\": \"[_$[:alpha:]][_$[:alnum:]]*\",\n        \"end\": \"(?=;)\",\n        \"patterns\": [{\n          \"include\": \"#numbers\"\n        }, {\n          \"include\": \"#decl-block\"\n        }, {\n          \"include\": \"#type-primitive\"\n        }, {\n          \"match\": \"[_$[:alpha:]][_$[:alnum:]]*\",\n          \"name\": \"storage.type.ballerina\"\n        }]\n      }]\n    },\n    \"types\": {\n      \"patterns\": [{\n        \"match\": \"\\\\b(handle|any|future|typedesc)\\\\b\",\n        \"name\": \"storage.type.ballerina\"\n      }, {\n        \"match\": \"\\\\b(boolean|int|string|float|decimal|byte|json|xml|anydata)\\\\b\",\n        \"name\": \"support.type.primitive.ballerina\"\n      }, {\n        \"match\": \"\\\\b(map|error|never|readonly|distinct)\\\\b\",\n        \"name\": \"storage.type.ballerina\"\n      }, {\n        \"match\": \"\\\\b(stream)\\\\b\",\n        \"name\": \"storage.type.ballerina\"\n      }]\n    },\n    \"unicode-property-escape\": {\n      \"patterns\": [{\n        \"begin\": \"(\\\\\\\\p|\\\\\\\\P)(\\\\{)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.other.unicode-property.regexp.ballerina\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.other.unicode-property.begin.regexp.ballerina\"\n          }\n        },\n        \"end\": \"(\\\\})\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.other.unicode-property.end.regexp.ballerina\"\n          }\n        },\n        \"name\": \"keyword.other.unicode-property.regexp.ballerina\",\n        \"patterns\": [{\n          \"include\": \"#regex-unicode-properties-general-category\"\n        }, {\n          \"include\": \"#regex-unicode-property-key\"\n        }]\n      }]\n    },\n    \"unicode-values\": {\n      \"patterns\": [{\n        \"begin\": \"(\\\\\\\\u)(\\\\{)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.other.unicode-value.regexp.ballerina\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.other.unicode-value.begin.regexp.ballerina\"\n          }\n        },\n        \"end\": \"(\\\\})\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.other.unicode-value.end.regexp.ballerina\"\n          }\n        },\n        \"name\": \"keyword.other.unicode-value.ballerina\",\n        \"patterns\": [{\n          \"match\": \"([0-9A-Fa-f]{1,6})\",\n          \"name\": \"constant.other.unicode-value.regexp.ballerina\"\n        }]\n      }]\n    },\n    \"var-expr\": {\n      \"patterns\": [{\n        \"begin\": \"(?=\\\\b(var))\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"storage.modifier.ballerina support.type.primitive.ballerina\"\n          }\n        },\n        \"end\": \"(?!\\\\b(var))((?=;|}|;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|class|const|declare|enum|export|function|import|interface|let|module|namespace|return|service|type|var)\\\\b))|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?=(if)\\\\s+))|((?<!^string|[^\\\\._$[:alnum:]]string|^int|[^\\\\._$[:alnum:]]int)(?=\\\\s*$)))\",\n        \"name\": \"meta.var.expr.ballerina\",\n        \"patterns\": [{\n          \"begin\": \"\\\\b(var)(?=\\\\s+|\\\\[|\\\\?|\\\\||\\\\:)\",\n          \"beginCaptures\": {\n            \"0\": {\n              \"name\": \"support.type.primitive.ballerina\"\n            }\n          },\n          \"end\": \"(?=\\\\S)\"\n        }, {\n          \"match\": \"\\\\|\",\n          \"name\": \"keyword.operator.type.annotation.ballerina\"\n        }, {\n          \"match\": \"\\\\bin\\\\b\",\n          \"name\": \"keyword.other.ballerina\"\n        }, {\n          \"include\": \"#comment\"\n        }, {\n          \"include\": \"#string\"\n        }, {\n          \"include\": \"#stringTemplate\"\n        }, {\n          \"include\": \"#numbers\"\n        }, {\n          \"include\": \"#multiType\"\n        }, {\n          \"include\": \"#self-literal\"\n        }, {\n          \"include\": \"#var-single-variable\"\n        }, {\n          \"include\": \"#variable-initializer\"\n        }, {\n          \"include\": \"#punctuation-comma\"\n        }, {\n          \"include\": \"#type-annotation\"\n        }, {\n          \"include\": \"#keywords\"\n        }, {\n          \"include\": \"#type-tuple\"\n        }, {\n          \"include\": \"#regex\"\n        }]\n      }, {\n        \"include\": \"#punctuation-comma\"\n      }, {\n        \"begin\": \"(?=\\\\b(const(?!\\\\s+enum\\\\b)))\",\n        \"end\": \"(?!\\\\b(const(?!\\\\s+enum\\\\b)))((?=\\\\bannotation\\\\b|;|}|;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|class|const|declare|enum|export|function|import|interface|let|module|namespace|return|service|type|var)\\\\b))|((?<!^string|[^\\\\._$[:alnum:]]string|^int|[^\\\\._$[:alnum:]]int)(?=\\\\s*$)))\",\n        \"name\": \"meta.var.expr.ballerina\",\n        \"patterns\": [{\n          \"begin\": \"\\\\b(const(?!\\\\s+enum\\\\b))\\\\s+\",\n          \"beginCaptures\": {\n            \"0\": {\n              \"name\": \"keyword.other.ballerina\"\n            }\n          },\n          \"end\": \"(?=\\\\S)\"\n        }, {\n          \"include\": \"#comment\"\n        }, {\n          \"include\": \"#string\"\n        }, {\n          \"include\": \"#stringTemplate\"\n        }, {\n          \"include\": \"#var-single-const\"\n        }, {\n          \"include\": \"#variable-initializer\"\n        }, {\n          \"include\": \"#punctuation-comma\"\n        }, {\n          \"include\": \"#type-annotation\"\n        }]\n      }, {\n        \"include\": \"#punctuation-comma\"\n      }, {\n        \"begin\": \"(string|int|boolean|float|byte|decimal|json|xml|anydata)(?=\\\\s+|\\\\[|\\\\?|\\\\||\\\\:)\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"support.type.primitive.ballerina\"\n          }\n        },\n        \"end\": \"(?!\\\\b(var))((?=;|}|;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|class|const|declare|enum|export|function|import|interface|let|module|namespace|return|service|type|var)\\\\b))|((?<!^string|[^\\\\._$[:alnum:]]string|^int|[^\\\\._$[:alnum:]]int)(?=\\\\s*$)))\",\n        \"name\": \"meta.var.expr.ballerina\",\n        \"patterns\": [{\n          \"include\": \"#xml\"\n        }, {\n          \"begin\": \"(string|int|boolean|float|byte|decimal|json|xml|anydata)(?=\\\\s+|\\\\[|\\\\?|\\\\||\\\\:)\",\n          \"beginCaptures\": {\n            \"0\": {\n              \"name\": \"support.type.primitive.ballerina\"\n            }\n          },\n          \"end\": \"(?=\\\\S)\"\n        }, {\n          \"match\": \"\\\\|\",\n          \"name\": \"keyword.operator.type.annotation.ballerina\"\n        }, {\n          \"include\": \"#string\"\n        }, {\n          \"include\": \"#stringTemplate\"\n        }, {\n          \"include\": \"#numbers\"\n        }, {\n          \"include\": \"#multiType\"\n        }, {\n          \"include\": \"#var-single-variable\"\n        }, {\n          \"include\": \"#variable-initializer\"\n        }, {\n          \"include\": \"#punctuation-comma\"\n        }, {\n          \"include\": \"#type-annotation\"\n        }, {\n          \"include\": \"#keywords\"\n        }, {\n          \"include\": \"#type-tuple\"\n        }, {\n          \"include\": \"#regex\"\n        }]\n      }, {\n        \"include\": \"#punctuation-comma\"\n      }]\n    },\n    \"var-single-const\": {\n      \"patterns\": [{\n        \"name\": \"meta.var-single-variable.expr.ballerina\"\n      }, {\n        \"begin\": \"\\\\b(var)\\\\s*\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"support.type.primitive.ballerina\"\n          }\n        },\n        \"end\": \"(?=\\\\S)\"\n      }, {\n        \"include\": \"#types\"\n      }, {\n        \"begin\": \"([_$[:alpha:]][_$[:alnum:]]*)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"meta.definition.variable.ballerina variable.other.constant.ballerina\"\n          }\n        },\n        \"end\": \"(?=$|^|[;,=}]|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))\\\\s+))\"\n      }]\n    },\n    \"var-single-variable\": {\n      \"patterns\": [{\n        \"begin\": \"((string|int|boolean|float|byte|decimal|json|xml|anydata)|\\\\b(readonly|error|map)\\\\b|([_$[:alpha:]][_$[:alnum:]]*))(?=\\\\s+|\\\\;|\\\\>|\\\\|)\",\n        \"beginCaptures\": {\n          \"2\": {\n            \"name\": \"support.type.primitive.ballerina\"\n          },\n          \"3\": {\n            \"name\": \"storage.type.ballerina\"\n          },\n          \"4\": {\n            \"name\": \"meta.definition.variable.ballerina variable.other.readwrite.ballerina\"\n          }\n        },\n        \"end\": \"(?=$|^|[;,=}])\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.terminator.statement.ballerina\"\n          }\n        },\n        \"name\": \"meta.var-single-variable.expr.ballerina\",\n        \"patterns\": [{\n          \"include\": \"#call\"\n        }, {\n          \"include\": \"#self-literal\"\n        }, {\n          \"include\": \"#if-statement\"\n        }, {\n          \"include\": \"#string\"\n        }, {\n          \"include\": \"#numbers\"\n        }, {\n          \"include\": \"#keywords\"\n        }]\n      }, {\n        \"begin\": \"([_$[:alpha:]][_$[:alnum:]]*)\\\\s+(\\\\!)?\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"meta.definition.variable.ballerina variable.other.readwrite.ballerina\"\n          },\n          \"2\": {\n            \"name\": \"keyword.operator.definiteassignment.ballerina\"\n          }\n        },\n        \"end\": \"(?=$|^|[;,=}]|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))\\\\s+))\",\n        \"name\": \"meta.var-single-variable.expr.ballerina\"\n      }]\n    },\n    \"variable-initializer\": {\n      \"patterns\": [{\n        \"begin\": \"(?<!=|!)(=)(?!=|>)(?=\\\\s*\\\\S)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.operator.assignment.ballerina\"\n          }\n        },\n        \"end\": \"(?=$|[,);}\\\\]])\",\n        \"patterns\": [{\n          \"match\": \"(\\\\')([_$[:alpha:]][_$[:alnum:]]*)\",\n          \"name\": \"variable.other.property.ballerina\"\n        }, {\n          \"include\": \"#xml\"\n        }, {\n          \"include\": \"#function-defn\"\n        }, {\n          \"include\": \"#expression\"\n        }, {\n          \"include\": \"#punctuation-accessor\"\n        }, {\n          \"include\": \"#regex\"\n        }]\n      }, {\n        \"begin\": \"(?<!=|!)(=)(?!=|>)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.operator.assignment.ballerina\"\n          }\n        },\n        \"end\": \"(?=[,);}\\\\]]|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))\\\\s+))|(?=^\\\\s*$)|(?<=\\\\S)(?<!=)(?=\\\\s*$)\",\n        \"patterns\": [{\n          \"include\": \"#expression\"\n        }]\n      }]\n    },\n    \"variableDef\": {\n      \"patterns\": [{\n        \"begin\": \"(?:(?!\\\\+)[_$[:alpha:]][_$[:alnum:]]*)(?: |\\\\t)|(?=\\\\()\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"storage.type.ballerina\"\n          }\n        },\n        \"end\": \"(?:[_$[:alpha:]][_$[:alnum:]]*)|(?=\\\\,)|(?=;)|\\\\.\\\\.\\\\.\",\n        \"patterns\": [{\n          \"include\": \"#tupleType\"\n        }, {\n          \"include\": \"#constrainType\"\n        }, {\n          \"include\": \"#comment\"\n        }]\n      }]\n    },\n    \"variableDefInline\": {\n      \"patterns\": [{\n        \"begin\": \"(?=record)|(?=object)\",\n        \"end\": \"(?=;)\",\n        \"patterns\": [{\n          \"include\": \"#record\"\n        }, {\n          \"include\": \"#objectDec\"\n        }]\n      }]\n    },\n    \"workerBody\": {\n      \"patterns\": [{\n        \"begin\": \"\\\\{\",\n        \"end\": \"(?=\\\\})\",\n        \"patterns\": [{\n          \"include\": \"#code\"\n        }]\n      }]\n    },\n    \"workerDef\": {\n      \"patterns\": [{\n        \"begin\": \"\\\\bworker\\\\b\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"keyword.ballerina\"\n          }\n        },\n        \"end\": \"\\\\}\",\n        \"patterns\": [{\n          \"include\": \"#functionReturns\"\n        }, {\n          \"include\": \"#workerBody\"\n        }]\n      }]\n    },\n    \"xml\": {\n      \"patterns\": [{\n        \"begin\": \"(\\\\bxml)(\\\\s*)(`)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"support.type.primitive.ballerina\"\n          },\n          \"3\": {\n            \"name\": \"punctuation.definition.string.template.begin.ballerina\"\n          }\n        },\n        \"end\": \"`\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.string.template.end.ballerina\"\n          }\n        },\n        \"name\": \"string.template.ballerina\",\n        \"patterns\": [{\n          \"include\": \"#xmlTag\"\n        }, {\n          \"include\": \"#xmlComment\"\n        }, {\n          \"include\": \"#templateVariable\"\n        }, {\n          \"match\": \".\",\n          \"name\": \"string\"\n        }]\n      }]\n    },\n    \"xmlComment\": {\n      \"patterns\": [{\n        \"begin\": \"<!--\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"comment.block.xml.ballerina\"\n          }\n        },\n        \"end\": \"-->\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"comment.block.xml.ballerina\"\n          }\n        },\n        \"name\": \"comment.block.xml.ballerina\"\n      }]\n    },\n    \"xmlDoubleQuotedString\": {\n      \"patterns\": [{\n        \"begin\": '\\\\\"',\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"string.begin.ballerina\"\n          }\n        },\n        \"end\": '\\\\\"',\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"string.end.ballerina\"\n          }\n        },\n        \"patterns\": [{\n          \"match\": \"\\\\\\\\.\",\n          \"name\": \"constant.character.escape.ballerina\"\n        }, {\n          \"match\": \".\",\n          \"name\": \"string\"\n        }]\n      }]\n    },\n    \"xmlSingleQuotedString\": {\n      \"patterns\": [{\n        \"begin\": \"\\\\'\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"string.begin.ballerina\"\n          }\n        },\n        \"end\": \"\\\\'\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"string.end.ballerina\"\n          }\n        },\n        \"patterns\": [{\n          \"match\": \"\\\\\\\\.\",\n          \"name\": \"constant.character.escape.ballerina\"\n        }, {\n          \"match\": \".\",\n          \"name\": \"string\"\n        }]\n      }]\n    },\n    \"xmlTag\": {\n      \"patterns\": [{\n        \"begin\": \"(<\\\\/?\\\\??)\\\\s*([-_a-zA-Z0-9]+)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.tag.begin.xml.ballerina\"\n          },\n          \"2\": {\n            \"name\": \"entity.name.tag.xml.ballerina\"\n          }\n        },\n        \"end\": \"\\\\??\\\\/?>\",\n        \"endCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.tag.end.xml.ballerina\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#xmlSingleQuotedString\"\n        }, {\n          \"include\": \"#xmlDoubleQuotedString\"\n        }, {\n          \"match\": \"xmlns\",\n          \"name\": \"keyword.other.ballerina\"\n        }, {\n          \"match\": \"([a-zA-Z0-9-]+)\",\n          \"name\": \"entity.other.attribute-name.xml.ballerina\"\n        }]\n      }]\n    }\n  },\n  \"scopeName\": \"source.ballerina\"\n});\nvar ballerina = [lang];\nexport { ballerina as default };"],
  "mappings": "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",
  "names": []
}
