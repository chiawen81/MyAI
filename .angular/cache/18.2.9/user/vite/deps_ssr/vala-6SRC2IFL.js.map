{
  "version": 3,
  "sources": ["../../../../../../node_modules/shiki/dist/langs/vala.mjs"],
  "sourcesContent": ["const lang = Object.freeze({\n  \"displayName\": \"Vala\",\n  \"fileTypes\": [\"vala\", \"vapi\", \"gs\"],\n  \"name\": \"vala\",\n  \"patterns\": [{\n    \"include\": \"#code\"\n  }],\n  \"repository\": {\n    \"code\": {\n      \"patterns\": [{\n        \"include\": \"#comments\"\n      }, {\n        \"include\": \"#constants\"\n      }, {\n        \"include\": \"#strings\"\n      }, {\n        \"include\": \"#keywords\"\n      }, {\n        \"include\": \"#types\"\n      }, {\n        \"include\": \"#functions\"\n      }, {\n        \"include\": \"#variables\"\n      }]\n    },\n    \"comments\": {\n      \"patterns\": [{\n        \"captures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.comment.vala\"\n          }\n        },\n        \"match\": \"/\\\\*\\\\*/\",\n        \"name\": \"comment.block.empty.vala\"\n      }, {\n        \"include\": \"text.html.javadoc\"\n      }, {\n        \"include\": \"#comments-inline\"\n      }]\n    },\n    \"comments-inline\": {\n      \"patterns\": [{\n        \"begin\": \"/\\\\*\",\n        \"captures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.comment.vala\"\n          }\n        },\n        \"end\": \"\\\\*/\",\n        \"name\": \"comment.block.vala\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"comment.line.double-slash.vala\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.definition.comment.vala\"\n          }\n        },\n        \"match\": \"\\\\s*((//).*$\\\\n?)\"\n      }]\n    },\n    \"constants\": {\n      \"patterns\": [{\n        \"match\": \"\\\\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\\\\.?[0-9]*)|(\\\\.[0-9]+))((e|E)(\\\\+|-)?[0-9]+)?)([LlFfUuDd]|UL|ul)?\\\\b\",\n        \"name\": \"constant.numeric.vala\"\n      }, {\n        \"match\": \"\\\\b([A-Z][A-Z0-9_]+)\\\\b\",\n        \"name\": \"variable.other.constant.vala\"\n      }]\n    },\n    \"functions\": {\n      \"patterns\": [{\n        \"match\": \"(\\\\w+)(?=\\\\s*(<[\\\\s\\\\w.]+>\\\\s*)?\\\\()\",\n        \"name\": \"entity.name.function.vala\"\n      }]\n    },\n    \"keywords\": {\n      \"patterns\": [{\n        \"match\": \"(?<=^|[^@\\\\w\\\\.])(as|do|if|in|is|not|or|and|for|get|new|out|ref|set|try|var|base|case|else|enum|lock|null|this|true|void|weak|async|break|catch|class|const|false|owned|throw|using|while|with|yield|delete|extern|inline|params|public|return|sealed|signal|sizeof|static|struct|switch|throws|typeof|unlock|default|dynamic|ensures|finally|foreach|private|unowned|virtual|abstract|continue|delegate|internal|override|requires|volatile|construct|interface|namespace|protected|errordomain)\\\\b\",\n        \"name\": \"keyword.vala\"\n      }, {\n        \"match\": \"(?<=^|[^@\\\\w\\\\.])(bool|double|float|unichar|unichar2|char|uchar|int|uint|long|ulong|short|ushort|size_t|ssize_t|string|string16|string32|void|signal|int8|int16|int32|int64|uint8|uint16|uint32|uint64|va_list|time_t)\\\\b\",\n        \"name\": \"keyword.vala\"\n      }, {\n        \"match\": \"(#if|#elif|#else|#endif)\",\n        \"name\": \"keyword.vala\"\n      }]\n    },\n    \"strings\": {\n      \"patterns\": [{\n        \"begin\": '\"\"\"',\n        \"end\": '\"\"\"',\n        \"name\": \"string.quoted.triple.vala\"\n      }, {\n        \"begin\": '@\"',\n        \"end\": '\"',\n        \"name\": \"string.quoted.interpolated.vala\",\n        \"patterns\": [{\n          \"match\": \"\\\\\\\\.\",\n          \"name\": \"constant.character.escape.vala\"\n        }, {\n          \"match\": \"\\\\$\\\\w+\",\n          \"name\": \"constant.character.escape.vala\"\n        }, {\n          \"match\": \"\\\\$\\\\(([^)(]|\\\\(([^)(]|\\\\([^)]*\\\\))*\\\\))*\\\\)\",\n          \"name\": \"constant.character.escape.vala\"\n        }]\n      }, {\n        \"begin\": '\"',\n        \"end\": '\"',\n        \"name\": \"string.quoted.double.vala\",\n        \"patterns\": [{\n          \"match\": \"\\\\\\\\.\",\n          \"name\": \"constant.character.escape.vala\"\n        }]\n      }, {\n        \"begin\": \"'\",\n        \"end\": \"'\",\n        \"name\": \"string.quoted.single.vala\",\n        \"patterns\": [{\n          \"match\": \"\\\\\\\\.\",\n          \"name\": \"constant.character.escape.vala\"\n        }]\n      }, {\n        \"match\": \"/((\\\\\\\\/)|([^/]))*/(?=\\\\s*[,;)\\\\.\\\\n])\",\n        \"name\": \"string.regexp.vala\"\n      }]\n    },\n    \"types\": {\n      \"patterns\": [{\n        \"match\": \"(?<=^|[^@\\\\w\\\\.])(bool|double|float|unichar|unichar2|char|uchar|int|uint|long|ulong|short|ushort|size_t|ssize_t|string|string16|string32|void|signal|int8|int16|int32|int64|uint8|uint16|uint32|uint64|va_list|time_t)\\\\b\",\n        \"name\": \"storage.type.primitive.vala\"\n      }, {\n        \"match\": \"\\\\b([A-Z]+\\\\w*)\\\\b\",\n        \"name\": \"entity.name.type.vala\"\n      }]\n    },\n    \"variables\": {\n      \"patterns\": [{\n        \"match\": \"\\\\b([_a-z]+\\\\w*)\\\\b\",\n        \"name\": \"variable.other.vala\"\n      }]\n    }\n  },\n  \"scopeName\": \"source.vala\"\n});\nvar vala = [lang];\nexport { vala as default };"],
  "mappings": "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",
  "names": []
}
