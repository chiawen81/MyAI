{
  "version": 3,
  "sources": ["../../../../../../node_modules/shiki/dist/langs/ssh-config.mjs"],
  "sourcesContent": ["const lang = Object.freeze({\n  \"displayName\": \"SSH Config\",\n  \"fileTypes\": [\"ssh_config\", \".ssh/config\", \"sshd_config\"],\n  \"name\": \"ssh-config\",\n  \"patterns\": [{\n    \"match\": \"\\\\b(A(cceptEnv|dd(ressFamily|KeysToAgent)|llow(AgentForwarding|Groups|StreamLocalForwarding|TcpForwarding|Users)|uth(enticationMethods|orized((Keys(Command(User)?|File)|Principals(Command(User)?|File)))))|B(anner|atchMode|ind(Address|Interface))|C(anonical(Domains|ize(FallbackLocal|Hostname|MaxDots|PermittedCNAMEs))|ertificateFile|hallengeResponseAuthentication|heckHostIP|hrootDirectory|iphers?|learAllForwardings|ientAlive(CountMax|Interval)|ompression(Level)?|onnect(Timeout|ionAttempts)|ontrolMaster|ontrolPath|ontrolPersist)|D(eny(Groups|Users)|isableForwarding|ynamicForward)|E(nableSSHKeysign|scapeChar|xitOnForwardFailure|xposeAuthInfo)|F(ingerprintHash|orceCommand|orward(Agent|X11(Timeout|Trusted)?))|G(atewayPorts|SSAPI(Authentication|CleanupCredentials|ClientIdentity|DelegateCredentials|KeyExchange|RenewalForcesRekey|ServerIdentity|StrictAcceptorCheck|TrustDns)|atewayPorts|lobalKnownHostsFile)|H(ashKnownHosts|ost(based(AcceptedKeyTypes|Authentication|KeyTypes|UsesNameFromPacketOnly)|Certificate|Key(Agent|Algorithms|Alias)?|Name))|I(dentit(iesOnly|y(Agent|File))|gnore(Rhosts|Unknown|UserKnownHosts)|nclude|PQoS)|K(bdInteractive(Authentication|Devices)|erberos(Authentication|GetAFSToken|OrLocalPasswd|TicketCleanup)|exAlgorithms)|L(istenAddress|ocal(Command|Forward)|oginGraceTime|ogLevel)|M(ACs|atch|ax(AuthTries|Sessions|Startups))|N(oHostAuthenticationForLocalhost|umberOfPasswordPrompts)|P(KCS11Provider|asswordAuthentication|ermit(EmptyPasswords|LocalCommand|Open|RootLogin|TTY|Tunnel|User(Environment|RC))|idFile|ort|referredAuthentications|rint(LastLog|Motd)|rotocol|roxy(Command|Jump|UseFdpass)|ubkey(AcceptedKeyTypes|Authentication))|R(Domain|SAAuthentication|ekeyLimit|emote(Command|Forward)|equestTTY|evoked(HostKeys|Keys)|hostsRSAAuthentication)|S(endEnv|erverAlive(CountMax|Interval)|treamLocalBind(Mask|Unlink)|trict(HostKeyChecking|Modes)|ubsystem|yslogFacility)|T(CPKeepAlive|rustedUserCAKeys|unnel(Device)?)|U(pdateHostKeys|se(BlacklistedKeys|DNS|Keychain|PAM|PrivilegedPort|r(KnownHostsFile)?))|V(erifyHostKeyDNS|ersionAddendum|isualHostKey)|X(11(DisplayOffset|Forwarding|UseLocalhost)|AuthLocation))\\\\b\",\n    \"name\": \"keyword.other.ssh-config\"\n  }, {\n    \"begin\": \"(^[ \\\\t]+)?(?=#)\",\n    \"beginCaptures\": {\n      \"1\": {\n        \"name\": \"punctuation.whitespace.comment.leading.ssh-config\"\n      }\n    },\n    \"end\": \"(?!\\\\G)\",\n    \"patterns\": [{\n      \"begin\": \"#\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.comment.ssh-config\"\n        }\n      },\n      \"end\": \"\\\\n\",\n      \"name\": \"comment.line.number-sign.ssh-config\"\n    }]\n  }, {\n    \"begin\": \"(^[ \\\\t]+)?(?=//)\",\n    \"beginCaptures\": {\n      \"1\": {\n        \"name\": \"punctuation.whitespace.comment.leading.ssh-config\"\n      }\n    },\n    \"end\": \"(?!\\\\G)\",\n    \"patterns\": [{\n      \"begin\": \"//\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.comment.ssh-config\"\n        }\n      },\n      \"end\": \"\\\\n\",\n      \"name\": \"comment.line.double-slash.ssh-config\"\n    }]\n  }, {\n    \"captures\": {\n      \"1\": {\n        \"name\": \"storage.type.ssh-config\"\n      },\n      \"2\": {\n        \"name\": \"entity.name.section.ssh-config\"\n      },\n      \"3\": {\n        \"name\": \"meta.toc-list.ssh-config\"\n      }\n    },\n    \"match\": \"(?:^| |\\\\t)(Host)\\\\s+((.*))$\"\n  }, {\n    \"match\": \"\\\\b(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\b\",\n    \"name\": \"constant.numeric.ssh-config\"\n  }, {\n    \"match\": \"\\\\b[0-9]+\\\\b\",\n    \"name\": \"constant.numeric.ssh-config\"\n  }, {\n    \"match\": \"\\\\b(yes|no)\\\\b\",\n    \"name\": \"constant.language.ssh-config\"\n  }, {\n    \"match\": \"\\\\b[A-Z_]+\\\\b\",\n    \"name\": \"constant.language.ssh-config\"\n  }],\n  \"scopeName\": \"source.ssh-config\"\n});\nvar sshConfig = [lang];\nexport { sshConfig as default };"],
  "mappings": ";;;;AAAA,IAAM,OAAO,OAAO,OAAO;AAAA,EACzB,eAAe;AAAA,EACf,aAAa,CAAC,cAAc,eAAe,aAAa;AAAA,EACxD,QAAQ;AAAA,EACR,YAAY,CAAC;AAAA,IACX,SAAS;AAAA,IACT,QAAQ;AAAA,EACV,GAAG;AAAA,IACD,SAAS;AAAA,IACT,iBAAiB;AAAA,MACf,KAAK;AAAA,QACH,QAAQ;AAAA,MACV;AAAA,IACF;AAAA,IACA,OAAO;AAAA,IACP,YAAY,CAAC;AAAA,MACX,SAAS;AAAA,MACT,iBAAiB;AAAA,QACf,KAAK;AAAA,UACH,QAAQ;AAAA,QACV;AAAA,MACF;AAAA,MACA,OAAO;AAAA,MACP,QAAQ;AAAA,IACV,CAAC;AAAA,EACH,GAAG;AAAA,IACD,SAAS;AAAA,IACT,iBAAiB;AAAA,MACf,KAAK;AAAA,QACH,QAAQ;AAAA,MACV;AAAA,IACF;AAAA,IACA,OAAO;AAAA,IACP,YAAY,CAAC;AAAA,MACX,SAAS;AAAA,MACT,iBAAiB;AAAA,QACf,KAAK;AAAA,UACH,QAAQ;AAAA,QACV;AAAA,MACF;AAAA,MACA,OAAO;AAAA,MACP,QAAQ;AAAA,IACV,CAAC;AAAA,EACH,GAAG;AAAA,IACD,YAAY;AAAA,MACV,KAAK;AAAA,QACH,QAAQ;AAAA,MACV;AAAA,MACA,KAAK;AAAA,QACH,QAAQ;AAAA,MACV;AAAA,MACA,KAAK;AAAA,QACH,QAAQ;AAAA,MACV;AAAA,IACF;AAAA,IACA,SAAS;AAAA,EACX,GAAG;AAAA,IACD,SAAS;AAAA,IACT,QAAQ;AAAA,EACV,GAAG;AAAA,IACD,SAAS;AAAA,IACT,QAAQ;AAAA,EACV,GAAG;AAAA,IACD,SAAS;AAAA,IACT,QAAQ;AAAA,EACV,GAAG;AAAA,IACD,SAAS;AAAA,IACT,QAAQ;AAAA,EACV,CAAC;AAAA,EACD,aAAa;AACf,CAAC;AACD,IAAI,YAAY,CAAC,IAAI;",
  "names": []
}
