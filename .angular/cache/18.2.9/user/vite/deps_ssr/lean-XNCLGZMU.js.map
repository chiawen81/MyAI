{
  "version": 3,
  "sources": ["../../../../../../node_modules/shiki/dist/langs/lean.mjs"],
  "sourcesContent": ["const lang = Object.freeze({\n  \"displayName\": \"Lean 4\",\n  \"fileTypes\": [],\n  \"name\": \"lean\",\n  \"patterns\": [{\n    \"include\": \"#comments\"\n  }, {\n    \"match\": \"\\\\b(Prop|Type|Sort)\\\\b\",\n    \"name\": \"storage.type.lean4\"\n  }, {\n    \"match\": \"\\\\battribute\\\\b\\\\s*\\\\[[^\\\\]]*\\\\]\",\n    \"name\": \"storage.modifier.lean4\"\n  }, {\n    \"match\": \"@\\\\[[^\\\\]]*\\\\]\",\n    \"name\": \"storage.modifier.lean4\"\n  }, {\n    \"match\": \"\\\\b(?<!\\\\.)(global|local|scoped|partial|unsafe|private|protected|noncomputable)(?!\\\\.)\\\\b\",\n    \"name\": \"storage.modifier.lean4\"\n  }, {\n    \"match\": \"\\\\b(sorry|admit|stop)\\\\b\",\n    \"name\": \"invalid.illegal.lean4\"\n  }, {\n    \"match\": \"#(print|eval|reduce|check|check_failure)\\\\b\",\n    \"name\": \"keyword.other.lean4\"\n  }, {\n    \"match\": \"\\\\bderiving\\\\s+instance\\\\b\",\n    \"name\": \"keyword.other.command.lean4\"\n  }, {\n    \"begin\": \"\\\\b(?<!\\\\.)(inductive|coinductive|structure|theorem|axiom|abbrev|lemma|def|instance|class|constant)\\\\b\\\\s+(\\\\{[^}]*\\\\})?\",\n    \"beginCaptures\": {\n      \"1\": {\n        \"name\": \"keyword.other.definitioncommand.lean4\"\n      }\n    },\n    \"end\": \"(?=\\\\bwith\\\\b|\\\\bextends\\\\b|\\\\bwhere\\\\b|[:\\\\|\\\\(\\\\[\\\\{\\u2983<>])\",\n    \"name\": \"meta.definitioncommand.lean4\",\n    \"patterns\": [{\n      \"include\": \"#comments\"\n    }, {\n      \"include\": \"#definitionName\"\n    }, {\n      \"match\": \",\"\n    }]\n  }, {\n    \"match\": \"\\\\b(?<!\\\\.)(theorem|show|have|from|suffices|nomatch|def|class|structure|instance|set_option|initialize|builtin_initialize|example|inductive|coinductive|axiom|constant|universe|universes|variable|variables|import|open|export|theory|prelude|renaming|hiding|exposing|do|by|let|extends|mutual|mut|where|rec|syntax|macro_rules|macro|deriving|fun|section|namespace|end|infix|infixl|infixr|postfix|prefix|notation|abbrev|if|then|else|calc|match|with|for|in|unless|try|catch|finally|return|continue|break)(?!\\\\.)\\\\b\",\n    \"name\": \"keyword.other.lean4\"\n  }, {\n    \"begin\": \"\\xAB\",\n    \"contentName\": \"entity.name.lean4\",\n    \"end\": \"\\xBB\"\n  }, {\n    \"begin\": '(s!)\"',\n    \"beginCaptures\": {\n      \"1\": {\n        \"name\": \"keyword.other.lean4\"\n      }\n    },\n    \"end\": '\"',\n    \"name\": \"string.interpolated.lean4\",\n    \"patterns\": [{\n      \"begin\": \"(\\\\{)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.other.lean4\"\n        }\n      },\n      \"end\": \"(\\\\})\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.other.lean4\"\n        }\n      },\n      \"patterns\": [{\n        \"include\": \"$self\"\n      }]\n    }, {\n      \"match\": `\\\\\\\\[\\\\\\\\\"ntr']`,\n      \"name\": \"constant.character.escape.lean4\"\n    }, {\n      \"match\": \"\\\\\\\\x[0-9A-Fa-f][0-9A-Fa-f]\",\n      \"name\": \"constant.character.escape.lean4\"\n    }, {\n      \"match\": \"\\\\\\\\u[0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f]\",\n      \"name\": \"constant.character.escape.lean4\"\n    }]\n  }, {\n    \"begin\": '\"',\n    \"end\": '\"',\n    \"name\": \"string.quoted.double.lean4\",\n    \"patterns\": [{\n      \"match\": `\\\\\\\\[\\\\\\\\\"ntr']`,\n      \"name\": \"constant.character.escape.lean4\"\n    }, {\n      \"match\": \"\\\\\\\\x[0-9A-Fa-f][0-9A-Fa-f]\",\n      \"name\": \"constant.character.escape.lean4\"\n    }, {\n      \"match\": \"\\\\\\\\u[0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f]\",\n      \"name\": \"constant.character.escape.lean4\"\n    }]\n  }, {\n    \"match\": \"\\\\b(true|false)\\\\b\",\n    \"name\": \"constant.language.lean4\"\n  }, {\n    \"match\": \"'[^\\\\\\\\']'\",\n    \"name\": \"string.quoted.single.lean4\"\n  }, {\n    \"captures\": {\n      \"1\": {\n        \"name\": \"constant.character.escape.lean4\"\n      }\n    },\n    \"match\": \"'(\\\\\\\\(x[0-9A-Fa-f][0-9A-Fa-f]|u[0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f]|.))'\",\n    \"name\": \"string.quoted.single.lean4\"\n  }, {\n    \"match\": \"`+[^\\\\[(]\\\\S+\",\n    \"name\": \"entity.name.lean4\"\n  }, {\n    \"match\": \"\\\\b([0-9]+|0([xX][0-9a-fA-F]+)|[-]?(0|[1-9][0-9]*)(\\\\.[0-9]+)?([eE][+-]?[0-9]+)?)\\\\b\",\n    \"name\": \"constant.numeric.lean4\"\n  }],\n  \"repository\": {\n    \"blockComment\": {\n      \"begin\": \"/-\",\n      \"end\": \"-/\",\n      \"name\": \"comment.block.lean4\",\n      \"patterns\": [{\n        \"include\": \"source.lean4.markdown\"\n      }, {\n        \"include\": \"#blockComment\"\n      }]\n    },\n    \"comments\": {\n      \"patterns\": [{\n        \"include\": \"#dashComment\"\n      }, {\n        \"include\": \"#docComment\"\n      }, {\n        \"include\": \"#stringBlock\"\n      }, {\n        \"include\": \"#modDocComment\"\n      }, {\n        \"include\": \"#blockComment\"\n      }]\n    },\n    \"dashComment\": {\n      \"begin\": \"--\",\n      \"end\": \"$\",\n      \"name\": \"comment.line.double-dash.lean4\",\n      \"patterns\": [{\n        \"include\": \"source.lean4.markdown\"\n      }]\n    },\n    \"definitionName\": {\n      \"patterns\": [{\n        \"match\": \"\\\\b[^:\\xAB\\xBB\\\\(\\\\)\\\\{\\\\}[:space:]=\\u2192\\u03BB\\u2200?][^:\\xAB\\xBB\\\\(\\\\)\\\\{\\\\}[:space:]]*\",\n        \"name\": \"entity.name.function.lean4\"\n      }, {\n        \"begin\": \"\\xAB\",\n        \"contentName\": \"entity.name.function.lean4\",\n        \"end\": \"\\xBB\"\n      }]\n    },\n    \"docComment\": {\n      \"begin\": \"/--\",\n      \"end\": \"-/\",\n      \"name\": \"comment.block.documentation.lean4\",\n      \"patterns\": [{\n        \"include\": \"source.lean4.markdown\"\n      }, {\n        \"include\": \"#blockComment\"\n      }]\n    },\n    \"modDocComment\": {\n      \"begin\": \"/-!\",\n      \"end\": \"-/\",\n      \"name\": \"comment.block.documentation.lean4\",\n      \"patterns\": [{\n        \"include\": \"source.lean4.markdown\"\n      }, {\n        \"include\": \"#blockComment\"\n      }]\n    }\n  },\n  \"scopeName\": \"source.lean4\",\n  \"aliases\": [\"lean4\"]\n});\nvar lean = [lang];\nexport { lean as default };"],
  "mappings": "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",
  "names": []
}
