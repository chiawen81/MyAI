{
  "version": 3,
  "sources": ["../../../../../../node_modules/shiki/dist/langs/awk.mjs"],
  "sourcesContent": ["const lang = Object.freeze({\n  \"displayName\": \"AWK\",\n  \"fileTypes\": [\"awk\"],\n  \"name\": \"awk\",\n  \"patterns\": [{\n    \"include\": \"#comment\"\n  }, {\n    \"include\": \"#procedure\"\n  }, {\n    \"include\": \"#pattern\"\n  }],\n  \"repository\": {\n    \"builtin-pattern\": {\n      \"match\": \"\\\\b(BEGINFILE|BEGIN|ENDFILE|END)\\\\b\",\n      \"name\": \"constant.language.awk\"\n    },\n    \"command\": {\n      \"patterns\": [{\n        \"match\": \"\\\\b(?:next|print|printf)\\\\b\",\n        \"name\": \"keyword.other.command.awk\"\n      }, {\n        \"match\": \"\\\\b(?:close|getline|delete|system)\\\\b\",\n        \"name\": \"keyword.other.command.nawk\"\n      }, {\n        \"match\": \"\\\\b(?:fflush|nextfile)\\\\b\",\n        \"name\": \"keyword.other.command.bell-awk\"\n      }]\n    },\n    \"comment\": {\n      \"match\": \"#.*\",\n      \"name\": \"comment.line.number-sign.awk\"\n    },\n    \"constant\": {\n      \"patterns\": [{\n        \"include\": \"#numeric-constant\"\n      }, {\n        \"include\": \"#string-constant\"\n      }]\n    },\n    \"escaped-char\": {\n      \"match\": '\\\\\\\\(?:[\\\\\\\\abfnrtv/\"]|x[0-9A-Fa-f]{2}|[0-7]{3})',\n      \"name\": \"constant.character.escape.awk\"\n    },\n    \"expression\": {\n      \"patterns\": [{\n        \"include\": \"#command\"\n      }, {\n        \"include\": \"#function\"\n      }, {\n        \"include\": \"#constant\"\n      }, {\n        \"include\": \"#variable\"\n      }, {\n        \"include\": \"#regexp-in-expression\"\n      }, {\n        \"include\": \"#operator\"\n      }, {\n        \"include\": \"#groupings\"\n      }]\n    },\n    \"function\": {\n      \"patterns\": [{\n        \"match\": \"\\\\b(?:exp|int|log|sqrt|index|length|split|sprintf|substr)\\\\b\",\n        \"name\": \"support.function.awk\"\n      }, {\n        \"match\": \"\\\\b(?:atan2|cos|rand|sin|srand|gsub|match|sub|tolower|toupper)\\\\b\",\n        \"name\": \"support.function.nawk\"\n      }, {\n        \"match\": \"\\\\b(?:gensub|strftime|systime)\\\\b\",\n        \"name\": \"support.function.gawk\"\n      }]\n    },\n    \"function-definition\": {\n      \"begin\": \"\\\\b(function)\\\\s+(\\\\w+)(\\\\()\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"storage.type.function.awk\"\n        },\n        \"2\": {\n          \"name\": \"entity.name.function.awk\"\n        },\n        \"3\": {\n          \"name\": \"punctuation.definition.parameters.begin.awk\"\n        }\n      },\n      \"end\": \"\\\\)\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.parameters.end.awk\"\n        }\n      },\n      \"patterns\": [{\n        \"match\": \"\\\\b(\\\\w+)\\\\b\",\n        \"name\": \"variable.parameter.function.awk\"\n      }, {\n        \"match\": \"\\\\b(,)\\\\b\",\n        \"name\": \"punctuation.separator.parameters.awk\"\n      }]\n    },\n    \"groupings\": {\n      \"patterns\": [{\n        \"match\": \"\\\\(\",\n        \"name\": \"meta.brace.round.awk\"\n      }, {\n        \"match\": \"\\\\)\",\n        \"name\": \"meta.brace.round.awk\"\n      }, {\n        \"match\": \"\\\\,\",\n        \"name\": \"punctuation.separator.parameters.awk\"\n      }]\n    },\n    \"keyword\": {\n      \"match\": \"\\\\b(?:break|continue|do|while|exit|for|if|else|return)\\\\b\",\n      \"name\": \"keyword.control.awk\"\n    },\n    \"numeric-constant\": {\n      \"match\": \"\\\\b[0-9]+(?:\\\\.[0-9]+)?(?:e[+-][0-9]+)?\\\\b\",\n      \"name\": \"constant.numeric.awk\"\n    },\n    \"operator\": {\n      \"patterns\": [{\n        \"match\": \"(!?~|[=<>!]=|[<>])\",\n        \"name\": \"keyword.operator.comparison.awk\"\n      }, {\n        \"match\": \"\\\\b(in)\\\\b\",\n        \"name\": \"keyword.operator.comparison.awk\"\n      }, {\n        \"match\": \"([+\\\\-*/%^]=|\\\\+\\\\+|--|>>|=)\",\n        \"name\": \"keyword.operator.assignment.awk\"\n      }, {\n        \"match\": \"(\\\\|\\\\||&&|!)\",\n        \"name\": \"keyword.operator.boolean.awk\"\n      }, {\n        \"match\": \"([+\\\\-*/%^])\",\n        \"name\": \"keyword.operator.arithmetic.awk\"\n      }, {\n        \"match\": \"([?:])\",\n        \"name\": \"keyword.operator.trinary.awk\"\n      }, {\n        \"match\": \"(\\\\[|\\\\])\",\n        \"name\": \"keyword.operator.index.awk\"\n      }]\n    },\n    \"pattern\": {\n      \"patterns\": [{\n        \"include\": \"#regexp-as-pattern\"\n      }, {\n        \"include\": \"#function-definition\"\n      }, {\n        \"include\": \"#builtin-pattern\"\n      }, {\n        \"include\": \"#expression\"\n      }]\n    },\n    \"procedure\": {\n      \"begin\": \"\\\\{\",\n      \"end\": \"\\\\}\",\n      \"patterns\": [{\n        \"include\": \"#comment\"\n      }, {\n        \"include\": \"#procedure\"\n      }, {\n        \"include\": \"#keyword\"\n      }, {\n        \"include\": \"#expression\"\n      }]\n    },\n    \"regex-as-assignment\": {\n      \"begin\": \"([^=<>!+\\\\-*/%^]=)\\\\s*(/)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.operator.assignment.awk\"\n        },\n        \"2\": {\n          \"name\": \"punctuation.definition.regex.begin.awk\"\n        }\n      },\n      \"contentName\": \"string.regexp\",\n      \"end\": \"/\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.regex.end.awk\"\n        }\n      },\n      \"patterns\": [{\n        \"include\": \"source.regexp\"\n      }]\n    },\n    \"regex-as-comparison\": {\n      \"begin\": \"(!?~)\\\\s*(/)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.operator.comparison.awk\"\n        },\n        \"2\": {\n          \"name\": \"punctuation.definition.regex.begin.awk\"\n        }\n      },\n      \"contentName\": \"string.regexp\",\n      \"end\": \"/\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.regex.end.awk\"\n        }\n      },\n      \"patterns\": [{\n        \"include\": \"source.regexp\"\n      }]\n    },\n    \"regex-as-first-argument\": {\n      \"begin\": \"(\\\\()\\\\s*(/)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"meta.brace.round.awk\"\n        },\n        \"2\": {\n          \"name\": \"punctuation.definition.regex.begin.awk\"\n        }\n      },\n      \"contentName\": \"string.regexp\",\n      \"end\": \"/\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.regex.end.awk\"\n        }\n      },\n      \"patterns\": [{\n        \"include\": \"source.regexp\"\n      }]\n    },\n    \"regex-as-nth-argument\": {\n      \"begin\": \"(,)\\\\s*(/)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.separator.parameters.awk\"\n        },\n        \"2\": {\n          \"name\": \"punctuation.definition.regex.begin.awk\"\n        }\n      },\n      \"contentName\": \"string.regexp\",\n      \"end\": \"/\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.regex.end.awk\"\n        }\n      },\n      \"patterns\": [{\n        \"include\": \"source.regexp\"\n      }]\n    },\n    \"regexp-as-pattern\": {\n      \"begin\": \"/\",\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.regex.begin.awk\"\n        }\n      },\n      \"contentName\": \"string.regexp\",\n      \"end\": \"/\",\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.regex.end.awk\"\n        }\n      },\n      \"patterns\": [{\n        \"include\": \"source.regexp\"\n      }]\n    },\n    \"regexp-in-expression\": {\n      \"patterns\": [{\n        \"include\": \"#regex-as-assignment\"\n      }, {\n        \"include\": \"#regex-as-comparison\"\n      }, {\n        \"include\": \"#regex-as-first-argument\"\n      }, {\n        \"include\": \"#regex-as-nth-argument\"\n      }]\n    },\n    \"string-constant\": {\n      \"begin\": '\"',\n      \"beginCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.begin.awk\"\n        }\n      },\n      \"end\": '\"',\n      \"endCaptures\": {\n        \"0\": {\n          \"name\": \"punctuation.definition.string.end.awk\"\n        }\n      },\n      \"name\": \"string.quoted.double.awk\",\n      \"patterns\": [{\n        \"include\": \"#escaped-char\"\n      }]\n    },\n    \"variable\": {\n      \"patterns\": [{\n        \"match\": \"\\\\$[0-9]+\",\n        \"name\": \"variable.language.awk\"\n      }, {\n        \"match\": \"\\\\b(?:FILENAME|FS|NF|NR|OFMT|OFS|ORS|RS)\\\\b\",\n        \"name\": \"variable.language.awk\"\n      }, {\n        \"match\": \"\\\\b(?:ARGC|ARGV|CONVFMT|ENVIRON|FNR|RLENGTH|RSTART|SUBSEP)\\\\b\",\n        \"name\": \"variable.language.nawk\"\n      }, {\n        \"match\": \"\\\\b(?:ARGIND|ERRNO|FIELDWIDTHS|IGNORECASE|RT)\\\\b\",\n        \"name\": \"variable.language.gawk\"\n      }]\n    }\n  },\n  \"scopeName\": \"source.awk\"\n});\nvar awk = [lang];\nexport { awk as default };"],
  "mappings": "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",
  "names": []
}
