{
  "version": 3,
  "sources": ["../../../../../../node_modules/shiki/dist/langs/erlang.mjs"],
  "sourcesContent": ["const lang = Object.freeze({\n  \"displayName\": \"Erlang\",\n  \"fileTypes\": [\"erl\", \"escript\", \"hrl\", \"xrl\", \"yrl\"],\n  \"name\": \"erlang\",\n  \"patterns\": [{\n    \"include\": \"#module-directive\"\n  }, {\n    \"include\": \"#import-export-directive\"\n  }, {\n    \"include\": \"#behaviour-directive\"\n  }, {\n    \"include\": \"#record-directive\"\n  }, {\n    \"include\": \"#define-directive\"\n  }, {\n    \"include\": \"#macro-directive\"\n  }, {\n    \"include\": \"#directive\"\n  }, {\n    \"include\": \"#function\"\n  }, {\n    \"include\": \"#everything-else\"\n  }],\n  \"repository\": {\n    \"atom\": {\n      \"patterns\": [{\n        \"begin\": \"(')\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.symbol.begin.erlang\"\n          }\n        },\n        \"end\": \"(')\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.symbol.end.erlang\"\n          }\n        },\n        \"name\": \"constant.other.symbol.quoted.single.erlang\",\n        \"patterns\": [{\n          \"captures\": {\n            \"1\": {\n              \"name\": \"punctuation.definition.escape.erlang\"\n            },\n            \"3\": {\n              \"name\": \"punctuation.definition.escape.erlang\"\n            }\n          },\n          \"match\": `(\\\\\\\\)([bdefnrstv\\\\\\\\'\"]|(\\\\^)[@-_a-z]|[0-7]{1,3}|x[\\\\da-fA-F]{2})`,\n          \"name\": \"constant.other.symbol.escape.erlang\"\n        }, {\n          \"match\": \"\\\\\\\\\\\\^?.?\",\n          \"name\": \"invalid.illegal.atom.erlang\"\n        }]\n      }, {\n        \"match\": \"[a-z][a-zA-Z\\\\d@_]*+\",\n        \"name\": \"constant.other.symbol.unquoted.erlang\"\n      }]\n    },\n    \"behaviour-directive\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"punctuation.section.directive.begin.erlang\"\n        },\n        \"2\": {\n          \"name\": \"keyword.control.directive.behaviour.erlang\"\n        },\n        \"3\": {\n          \"name\": \"punctuation.definition.parameters.begin.erlang\"\n        },\n        \"4\": {\n          \"name\": \"entity.name.type.class.behaviour.definition.erlang\"\n        },\n        \"5\": {\n          \"name\": \"punctuation.definition.parameters.end.erlang\"\n        },\n        \"6\": {\n          \"name\": \"punctuation.section.directive.end.erlang\"\n        }\n      },\n      \"match\": \"^\\\\s*+(-)\\\\s*+(behaviour)\\\\s*+(\\\\()\\\\s*+([a-z][a-zA-Z\\\\d@_]*+)\\\\s*+(\\\\))\\\\s*+(\\\\.)\",\n      \"name\": \"meta.directive.behaviour.erlang\"\n    },\n    \"binary\": {\n      \"begin\": \"(<<)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.definition.binary.begin.erlang\"\n        }\n      },\n      \"end\": \"(>>)\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.definition.binary.end.erlang\"\n        }\n      },\n      \"name\": \"meta.structure.binary.erlang\",\n      \"patterns\": [{\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.separator.binary.erlang\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.separator.value-size.erlang\"\n          }\n        },\n        \"match\": \"(,)|(:)\"\n      }, {\n        \"include\": \"#internal-type-specifiers\"\n      }, {\n        \"include\": \"#everything-else\"\n      }]\n    },\n    \"character\": {\n      \"patterns\": [{\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.character.erlang\"\n          },\n          \"2\": {\n            \"name\": \"constant.character.escape.erlang\"\n          },\n          \"3\": {\n            \"name\": \"punctuation.definition.escape.erlang\"\n          },\n          \"5\": {\n            \"name\": \"punctuation.definition.escape.erlang\"\n          }\n        },\n        \"match\": `(\\\\$)((\\\\\\\\)([bdefnrstv\\\\\\\\'\"]|(\\\\^)[@-_a-z]|[0-7]{1,3}|x[\\\\da-fA-F]{2}))`,\n        \"name\": \"constant.character.erlang\"\n      }, {\n        \"match\": \"\\\\$\\\\\\\\\\\\^?.?\",\n        \"name\": \"invalid.illegal.character.erlang\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.character.erlang\"\n          }\n        },\n        \"match\": \"(\\\\$)[ \\\\S]\",\n        \"name\": \"constant.character.erlang\"\n      }, {\n        \"match\": \"\\\\$.?\",\n        \"name\": \"invalid.illegal.character.erlang\"\n      }]\n    },\n    \"comment\": {\n      \"begin\": \"(^[ \\\\t]+)?(?=%)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.whitespace.comment.leading.erlang\"\n        }\n      },\n      \"end\": \"(?!\\\\G)\",\n      \"patterns\": [{\n        \"begin\": \"%\",\n        \"beginCaptures\": {\n          \"0\": {\n            \"name\": \"punctuation.definition.comment.erlang\"\n          }\n        },\n        \"end\": \"\\\\n\",\n        \"name\": \"comment.line.percentage.erlang\"\n      }]\n    },\n    \"define-directive\": {\n      \"patterns\": [{\n        \"begin\": \"^\\\\s*+(-)\\\\s*+(define)\\\\s*+(\\\\()\\\\s*+([a-zA-Z\\\\d@_]++)\\\\s*+\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.section.directive.begin.erlang\"\n          },\n          \"2\": {\n            \"name\": \"keyword.control.directive.define.erlang\"\n          },\n          \"3\": {\n            \"name\": \"punctuation.definition.parameters.begin.erlang\"\n          },\n          \"4\": {\n            \"name\": \"entity.name.function.macro.definition.erlang\"\n          }\n        },\n        \"end\": \"(\\\\))\\\\s*+(\\\\.)\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.parameters.end.erlang\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.section.directive.end.erlang\"\n          }\n        },\n        \"name\": \"meta.directive.define.erlang\",\n        \"patterns\": [{\n          \"include\": \"#everything-else\"\n        }]\n      }, {\n        \"begin\": \"(?=^\\\\s*+-\\\\s*+define\\\\s*+\\\\(\\\\s*+[a-zA-Z\\\\d@_]++\\\\s*+\\\\()\",\n        \"end\": \"(\\\\))\\\\s*+(\\\\.)\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.parameters.end.erlang\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.section.directive.end.erlang\"\n          }\n        },\n        \"name\": \"meta.directive.define.erlang\",\n        \"patterns\": [{\n          \"begin\": \"^\\\\s*+(-)\\\\s*+(define)\\\\s*+(\\\\()\\\\s*+([a-zA-Z\\\\d@_]++)\\\\s*+(\\\\()\",\n          \"beginCaptures\": {\n            \"1\": {\n              \"name\": \"punctuation.section.directive.begin.erlang\"\n            },\n            \"2\": {\n              \"name\": \"keyword.control.directive.define.erlang\"\n            },\n            \"3\": {\n              \"name\": \"punctuation.definition.parameters.begin.erlang\"\n            },\n            \"4\": {\n              \"name\": \"entity.name.function.macro.definition.erlang\"\n            },\n            \"5\": {\n              \"name\": \"punctuation.definition.parameters.begin.erlang\"\n            }\n          },\n          \"end\": \"(\\\\))\\\\s*(,)\",\n          \"endCaptures\": {\n            \"1\": {\n              \"name\": \"punctuation.definition.parameters.end.erlang\"\n            },\n            \"2\": {\n              \"name\": \"punctuation.separator.parameters.erlang\"\n            }\n          },\n          \"patterns\": [{\n            \"match\": \",\",\n            \"name\": \"punctuation.separator.parameters.erlang\"\n          }, {\n            \"include\": \"#everything-else\"\n          }]\n        }, {\n          \"match\": \"\\\\|\\\\||\\\\||:|;|,|\\\\.|->\",\n          \"name\": \"punctuation.separator.define.erlang\"\n        }, {\n          \"include\": \"#everything-else\"\n        }]\n      }]\n    },\n    \"directive\": {\n      \"patterns\": [{\n        \"begin\": \"^\\\\s*+(-)\\\\s*+([a-z][a-zA-Z\\\\d@_]*+)\\\\s*+(\\\\(?)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.section.directive.begin.erlang\"\n          },\n          \"2\": {\n            \"name\": \"keyword.control.directive.erlang\"\n          },\n          \"3\": {\n            \"name\": \"punctuation.definition.parameters.begin.erlang\"\n          }\n        },\n        \"end\": \"(\\\\)?)\\\\s*+(\\\\.)\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.parameters.end.erlang\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.section.directive.end.erlang\"\n          }\n        },\n        \"name\": \"meta.directive.erlang\",\n        \"patterns\": [{\n          \"include\": \"#everything-else\"\n        }]\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.section.directive.begin.erlang\"\n          },\n          \"2\": {\n            \"name\": \"keyword.control.directive.erlang\"\n          },\n          \"3\": {\n            \"name\": \"punctuation.section.directive.end.erlang\"\n          }\n        },\n        \"match\": \"^\\\\s*+(-)\\\\s*+([a-z][a-zA-Z\\\\d@_]*+)\\\\s*+(\\\\.)\",\n        \"name\": \"meta.directive.erlang\"\n      }]\n    },\n    \"docstring\": {\n      \"begin\": '(?<!\")(([\"]{3,})\\\\s*)(\\\\S.*)?$',\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"meta.string.quoted.triple.begin.erlang\"\n        },\n        \"2\": {\n          \"name\": \"punctuation.definition.string.begin.erlang\"\n        },\n        \"3\": {\n          \"name\": \"invalid.illegal.string.erlang\"\n        }\n      },\n      \"comment\": \"Only whitespace characters are allowed after the beggining and before the closing sequences and those cannot be in the same line\",\n      \"end\": '^(\\\\s*(\\\\2))(?!\")',\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"meta.string.quoted.triple.end.erlang\"\n        },\n        \"2\": {\n          \"name\": \"punctuation.definition.string.end.erlang\"\n        }\n      },\n      \"name\": \"string.quoted.triple.erlang\"\n    },\n    \"everything-else\": {\n      \"patterns\": [{\n        \"include\": \"#comment\"\n      }, {\n        \"include\": \"#record-usage\"\n      }, {\n        \"include\": \"#macro-usage\"\n      }, {\n        \"include\": \"#expression\"\n      }, {\n        \"include\": \"#keyword\"\n      }, {\n        \"include\": \"#textual-operator\"\n      }, {\n        \"include\": \"#language-constant\"\n      }, {\n        \"include\": \"#function-call\"\n      }, {\n        \"include\": \"#tuple\"\n      }, {\n        \"include\": \"#list\"\n      }, {\n        \"include\": \"#binary\"\n      }, {\n        \"include\": \"#parenthesized-expression\"\n      }, {\n        \"include\": \"#character\"\n      }, {\n        \"include\": \"#number\"\n      }, {\n        \"include\": \"#atom\"\n      }, {\n        \"include\": \"#sigil-docstring\"\n      }, {\n        \"include\": \"#sigil-string\"\n      }, {\n        \"include\": \"#docstring\"\n      }, {\n        \"include\": \"#string\"\n      }, {\n        \"include\": \"#symbolic-operator\"\n      }, {\n        \"include\": \"#variable\"\n      }]\n    },\n    \"expression\": {\n      \"patterns\": [{\n        \"begin\": \"\\\\b(if)\\\\b\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.if.erlang\"\n          }\n        },\n        \"end\": \"\\\\b(end)\\\\b\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.end.erlang\"\n          }\n        },\n        \"name\": \"meta.expression.if.erlang\",\n        \"patterns\": [{\n          \"include\": \"#internal-expression-punctuation\"\n        }, {\n          \"include\": \"#everything-else\"\n        }]\n      }, {\n        \"begin\": \"\\\\b(case)\\\\b\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.case.erlang\"\n          }\n        },\n        \"end\": \"\\\\b(end)\\\\b\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.end.erlang\"\n          }\n        },\n        \"name\": \"meta.expression.case.erlang\",\n        \"patterns\": [{\n          \"include\": \"#internal-expression-punctuation\"\n        }, {\n          \"include\": \"#everything-else\"\n        }]\n      }, {\n        \"begin\": \"\\\\b(receive)\\\\b\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.receive.erlang\"\n          }\n        },\n        \"end\": \"\\\\b(end)\\\\b\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.end.erlang\"\n          }\n        },\n        \"name\": \"meta.expression.receive.erlang\",\n        \"patterns\": [{\n          \"include\": \"#internal-expression-punctuation\"\n        }, {\n          \"include\": \"#everything-else\"\n        }]\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"keyword.control.fun.erlang\"\n          },\n          \"4\": {\n            \"name\": \"entity.name.type.class.module.erlang\"\n          },\n          \"5\": {\n            \"name\": \"variable.other.erlang\"\n          },\n          \"6\": {\n            \"name\": \"punctuation.separator.module-function.erlang\"\n          },\n          \"8\": {\n            \"name\": \"entity.name.function.erlang\"\n          },\n          \"9\": {\n            \"name\": \"variable.other.erlang\"\n          },\n          \"10\": {\n            \"name\": \"punctuation.separator.function-arity.erlang\"\n          }\n        },\n        \"comment\": \"Implicit function expression with optional module qualifier when both module and function can be atom or variable\",\n        \"match\": \"\\\\b(fun)\\\\s+((([a-z][a-zA-Z\\\\d@_]*+)|(_[a-zA-Z\\\\d@_]++|[A-Z][a-zA-Z\\\\d@_]*+))\\\\s*+(:)\\\\s*+)?(([a-z][a-zA-Z\\\\d@_]*+|'[^']*+')|(_[a-zA-Z\\\\d@_]++|[A-Z][a-zA-Z\\\\d@_]*+))\\\\s*(/)\",\n        \"name\": \"meta.expression.fun.implicit.erlang\"\n      }, {\n        \"begin\": \"\\\\b(fun)\\\\s+(([a-z][a-zA-Z\\\\d@_]*+)|(_[a-zA-Z\\\\d@_]++|[A-Z][a-zA-Z\\\\d@_]*+))\\\\s*+(:)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.fun.erlang\"\n          },\n          \"3\": {\n            \"name\": \"entity.name.type.class.module.erlang\"\n          },\n          \"4\": {\n            \"name\": \"variable.other.erlang\"\n          },\n          \"5\": {\n            \"name\": \"punctuation.separator.module-function.erlang\"\n          }\n        },\n        \"comment\": \"Implicit function expression with module qualifier when module can be atom or variable and function can by anything\",\n        \"end\": \"(/)\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.separator.function-arity.erlang\"\n          }\n        },\n        \"name\": \"meta.expression.fun.implicit.erlang\",\n        \"patterns\": [{\n          \"include\": \"#everything-else\"\n        }]\n      }, {\n        \"begin\": \"\\\\b(fun)\\\\s+(?!\\\\()\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.fun.erlang\"\n          }\n        },\n        \"comment\": \"Implicit function expression when both module and function can by anything\",\n        \"end\": \"(/)\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.separator.function-arity.erlang\"\n          }\n        },\n        \"name\": \"meta.expression.fun.implicit.erlang\",\n        \"patterns\": [{\n          \"include\": \"#everything-else\"\n        }]\n      }, {\n        \"begin\": \"\\\\b(fun)\\\\s*+(\\\\()(?=(\\\\s*+\\\\())\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"entity.name.function.erlang\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.definition.parameters.begin.erlang\"\n          }\n        },\n        \"comment\": \"Function type in type specification\",\n        \"end\": \"(\\\\))\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.parameters.end.erlang\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#everything-else\"\n        }]\n      }, {\n        \"begin\": \"\\\\b(fun)\\\\b\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.fun.erlang\"\n          }\n        },\n        \"comment\": \"Explicit function expression\",\n        \"end\": \"\\\\b(end)\\\\b\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.end.erlang\"\n          }\n        },\n        \"name\": \"meta.expression.fun.erlang\",\n        \"patterns\": [{\n          \"begin\": \"(?=\\\\()\",\n          \"end\": \"(;)|(?=\\\\bend\\\\b)\",\n          \"endCaptures\": {\n            \"1\": {\n              \"name\": \"punctuation.separator.clauses.erlang\"\n            }\n          },\n          \"patterns\": [{\n            \"include\": \"#internal-function-parts\"\n          }]\n        }, {\n          \"include\": \"#everything-else\"\n        }]\n      }, {\n        \"begin\": \"\\\\b(try)\\\\b\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.try.erlang\"\n          }\n        },\n        \"end\": \"\\\\b(end)\\\\b\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.end.erlang\"\n          }\n        },\n        \"name\": \"meta.expression.try.erlang\",\n        \"patterns\": [{\n          \"include\": \"#internal-expression-punctuation\"\n        }, {\n          \"include\": \"#everything-else\"\n        }]\n      }, {\n        \"begin\": \"\\\\b(begin)\\\\b\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.begin.erlang\"\n          }\n        },\n        \"end\": \"\\\\b(end)\\\\b\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.end.erlang\"\n          }\n        },\n        \"name\": \"meta.expression.begin.erlang\",\n        \"patterns\": [{\n          \"include\": \"#internal-expression-punctuation\"\n        }, {\n          \"include\": \"#everything-else\"\n        }]\n      }, {\n        \"begin\": \"\\\\b(maybe)\\\\b\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.maybe.erlang\"\n          }\n        },\n        \"end\": \"\\\\b(end)\\\\b\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.control.end.erlang\"\n          }\n        },\n        \"name\": \"meta.expression.maybe.erlang\",\n        \"patterns\": [{\n          \"include\": \"#internal-expression-punctuation\"\n        }, {\n          \"include\": \"#everything-else\"\n        }]\n      }]\n    },\n    \"function\": {\n      \"begin\": \"^\\\\s*+([a-z][a-zA-Z\\\\d@_]*+|'[^']*+')\\\\s*+(?=\\\\()\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"entity.name.function.definition.erlang\"\n        }\n      },\n      \"end\": \"(\\\\.)\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.terminator.function.erlang\"\n        }\n      },\n      \"name\": \"meta.function.erlang\",\n      \"patterns\": [{\n        \"captures\": {\n          \"1\": {\n            \"name\": \"entity.name.function.erlang\"\n          }\n        },\n        \"match\": \"^\\\\s*+([a-z][a-zA-Z\\\\d@_]*+|'[^']*+')\\\\s*+(?=\\\\()\"\n      }, {\n        \"begin\": \"(?=\\\\()\",\n        \"end\": \"(;)|(?=\\\\.)\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.separator.clauses.erlang\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#parenthesized-expression\"\n        }, {\n          \"include\": \"#internal-function-parts\"\n        }]\n      }, {\n        \"include\": \"#everything-else\"\n      }]\n    },\n    \"function-call\": {\n      \"begin\": \"(?=([a-z][a-zA-Z\\\\d@_]*+|'[^']*+'|_[a-zA-Z\\\\d@_]++|[A-Z][a-zA-Z\\\\d@_]*+)\\\\s*+(\\\\(|:\\\\s*+([a-z][a-zA-Z\\\\d@_]*+|'[^']*+'|_[a-zA-Z\\\\d@_]++|[A-Z][a-zA-Z\\\\d@_]*+)\\\\s*+\\\\())\",\n      \"end\": \"(\\\\))\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.definition.parameters.end.erlang\"\n        }\n      },\n      \"name\": \"meta.function-call.erlang\",\n      \"patterns\": [{\n        \"begin\": \"((erlang)\\\\s*+(:)\\\\s*+)?(is_atom|is_binary|is_constant|is_float|is_function|is_integer|is_list|is_number|is_pid|is_port|is_reference|is_tuple|is_record|abs|element|hd|length|node|round|self|size|tl|trunc)\\\\s*+(\\\\()\",\n        \"beginCaptures\": {\n          \"2\": {\n            \"name\": \"entity.name.type.class.module.erlang\"\n          },\n          \"3\": {\n            \"name\": \"punctuation.separator.module-function.erlang\"\n          },\n          \"4\": {\n            \"name\": \"entity.name.function.guard.erlang\"\n          },\n          \"5\": {\n            \"name\": \"punctuation.definition.parameters.begin.erlang\"\n          }\n        },\n        \"end\": \"(?=\\\\))\",\n        \"patterns\": [{\n          \"match\": \",\",\n          \"name\": \"punctuation.separator.parameters.erlang\"\n        }, {\n          \"include\": \"#everything-else\"\n        }]\n      }, {\n        \"begin\": \"((([a-z][a-zA-Z\\\\d@_]*+|'[^']*+')|(_[a-zA-Z\\\\d@_]++|[A-Z][a-zA-Z\\\\d@_]*+))\\\\s*+(:)\\\\s*+)?(([a-z][a-zA-Z\\\\d@_]*+|'[^']*+')|(_[a-zA-Z\\\\d@_]++|[A-Z][a-zA-Z\\\\d@_]*+))\\\\s*+(\\\\()\",\n        \"beginCaptures\": {\n          \"3\": {\n            \"name\": \"entity.name.type.class.module.erlang\"\n          },\n          \"4\": {\n            \"name\": \"variable.other.erlang\"\n          },\n          \"5\": {\n            \"name\": \"punctuation.separator.module-function.erlang\"\n          },\n          \"7\": {\n            \"name\": \"entity.name.function.erlang\"\n          },\n          \"8\": {\n            \"name\": \"variable.other.erlang\"\n          },\n          \"9\": {\n            \"name\": \"punctuation.definition.parameters.begin.erlang\"\n          }\n        },\n        \"end\": \"(?=\\\\))\",\n        \"patterns\": [{\n          \"match\": \",\",\n          \"name\": \"punctuation.separator.parameters.erlang\"\n        }, {\n          \"include\": \"#everything-else\"\n        }]\n      }]\n    },\n    \"import-export-directive\": {\n      \"patterns\": [{\n        \"begin\": \"^\\\\s*+(-)\\\\s*+(import)\\\\s*+(\\\\()\\\\s*+([a-z][a-zA-Z\\\\d@_]*+|'[^']*+')\\\\s*+(,)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.section.directive.begin.erlang\"\n          },\n          \"2\": {\n            \"name\": \"keyword.control.directive.import.erlang\"\n          },\n          \"3\": {\n            \"name\": \"punctuation.definition.parameters.begin.erlang\"\n          },\n          \"4\": {\n            \"name\": \"entity.name.type.class.module.erlang\"\n          },\n          \"5\": {\n            \"name\": \"punctuation.separator.parameters.erlang\"\n          }\n        },\n        \"end\": \"(\\\\))\\\\s*+(\\\\.)\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.parameters.end.erlang\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.section.directive.end.erlang\"\n          }\n        },\n        \"name\": \"meta.directive.import.erlang\",\n        \"patterns\": [{\n          \"include\": \"#internal-function-list\"\n        }]\n      }, {\n        \"begin\": \"^\\\\s*+(-)\\\\s*+(export)\\\\s*+(\\\\()\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.section.directive.begin.erlang\"\n          },\n          \"2\": {\n            \"name\": \"keyword.control.directive.export.erlang\"\n          },\n          \"3\": {\n            \"name\": \"punctuation.definition.parameters.begin.erlang\"\n          }\n        },\n        \"end\": \"(\\\\))\\\\s*+(\\\\.)\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.parameters.end.erlang\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.section.directive.end.erlang\"\n          }\n        },\n        \"name\": \"meta.directive.export.erlang\",\n        \"patterns\": [{\n          \"include\": \"#internal-function-list\"\n        }]\n      }]\n    },\n    \"internal-expression-punctuation\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"punctuation.separator.clause-head-body.erlang\"\n        },\n        \"2\": {\n          \"name\": \"punctuation.separator.clauses.erlang\"\n        },\n        \"3\": {\n          \"name\": \"punctuation.separator.expressions.erlang\"\n        }\n      },\n      \"match\": \"(->)|(;)|(,)\"\n    },\n    \"internal-function-list\": {\n      \"begin\": \"(\\\\[)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.definition.list.begin.erlang\"\n        }\n      },\n      \"end\": \"(\\\\])\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.definition.list.end.erlang\"\n        }\n      },\n      \"name\": \"meta.structure.list.function.erlang\",\n      \"patterns\": [{\n        \"begin\": \"([a-z][a-zA-Z\\\\d@_]*+|'[^']*+')\\\\s*+(/)\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"entity.name.function.erlang\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.separator.function-arity.erlang\"\n          }\n        },\n        \"end\": \"(,)|(?=\\\\])\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.separator.list.erlang\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#everything-else\"\n        }]\n      }, {\n        \"include\": \"#everything-else\"\n      }]\n    },\n    \"internal-function-parts\": {\n      \"patterns\": [{\n        \"begin\": \"(?=\\\\()\",\n        \"end\": \"(->)\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.separator.clause-head-body.erlang\"\n          }\n        },\n        \"patterns\": [{\n          \"begin\": \"(\\\\()\",\n          \"beginCaptures\": {\n            \"1\": {\n              \"name\": \"punctuation.definition.parameters.begin.erlang\"\n            }\n          },\n          \"end\": \"(\\\\))\",\n          \"endCaptures\": {\n            \"1\": {\n              \"name\": \"punctuation.definition.parameters.end.erlang\"\n            }\n          },\n          \"patterns\": [{\n            \"match\": \",\",\n            \"name\": \"punctuation.separator.parameters.erlang\"\n          }, {\n            \"include\": \"#everything-else\"\n          }]\n        }, {\n          \"match\": \",|;\",\n          \"name\": \"punctuation.separator.guards.erlang\"\n        }, {\n          \"include\": \"#everything-else\"\n        }]\n      }, {\n        \"match\": \",\",\n        \"name\": \"punctuation.separator.expressions.erlang\"\n      }, {\n        \"include\": \"#everything-else\"\n      }]\n    },\n    \"internal-record-body\": {\n      \"begin\": \"(\\\\{)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.definition.class.record.begin.erlang\"\n        }\n      },\n      \"end\": \"(\\\\})\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.definition.class.record.end.erlang\"\n        }\n      },\n      \"name\": \"meta.structure.record.erlang\",\n      \"patterns\": [{\n        \"begin\": \"(([a-z][a-zA-Z\\\\d@_]*+|'[^']*+')|(_))\",\n        \"beginCaptures\": {\n          \"2\": {\n            \"name\": \"variable.other.field.erlang\"\n          },\n          \"3\": {\n            \"name\": \"variable.language.omitted.field.erlang\"\n          }\n        },\n        \"end\": \"(,)|(?=\\\\})\",\n        \"endCaptures\": {\n          \"1\": {\n            \"name\": \"punctuation.separator.class.record.erlang\"\n          }\n        },\n        \"patterns\": [{\n          \"include\": \"#everything-else\"\n        }]\n      }, {\n        \"include\": \"#everything-else\"\n      }]\n    },\n    \"internal-string-body\": {\n      \"patterns\": [{\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.escape.erlang\"\n          },\n          \"3\": {\n            \"name\": \"punctuation.definition.escape.erlang\"\n          }\n        },\n        \"comment\": \"escape sequence\",\n        \"match\": `(\\\\\\\\)([bdefnrstv\\\\\\\\'\"]|(\\\\^)[@-_a-z]|[0-7]{1,3}|x[\\\\da-fA-F]{2})`,\n        \"name\": \"constant.character.escape.erlang\"\n      }, {\n        \"match\": \"\\\\\\\\\\\\^?.?\",\n        \"name\": \"invalid.illegal.string.erlang\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.placeholder.erlang\"\n          },\n          \"6\": {\n            \"name\": \"punctuation.separator.placeholder-parts.erlang\"\n          },\n          \"10\": {\n            \"name\": \"punctuation.separator.placeholder-parts.erlang\"\n          }\n        },\n        \"comment\": \"io:fwrite format control sequence\",\n        \"match\": \"(~)((\\\\-)?\\\\d++|(\\\\*))?((\\\\.)(\\\\d++|(\\\\*))?((\\\\.)((\\\\*)|.))?)?[tlkK]*[~cfegswpWPBX#bx\\\\+ni]\",\n        \"name\": \"constant.character.format.placeholder.other.erlang\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.definition.placeholder.erlang\"\n          }\n        },\n        \"comment\": \"io:fread format control sequence\",\n        \"match\": \"(~)(\\\\*)?(\\\\d++)?(t)?[~du\\\\-#fsacl]\",\n        \"name\": \"constant.character.format.placeholder.other.erlang\"\n      }, {\n        \"match\": '~[^\"]?',\n        \"name\": \"invalid.illegal.string.erlang\"\n      }]\n    },\n    \"internal-type-specifiers\": {\n      \"begin\": \"(/)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.separator.value-type.erlang\"\n        }\n      },\n      \"end\": \"(?=,|:|>>)\",\n      \"patterns\": [{\n        \"captures\": {\n          \"1\": {\n            \"name\": \"storage.type.erlang\"\n          },\n          \"2\": {\n            \"name\": \"storage.modifier.signedness.erlang\"\n          },\n          \"3\": {\n            \"name\": \"storage.modifier.endianness.erlang\"\n          },\n          \"4\": {\n            \"name\": \"storage.modifier.unit.erlang\"\n          },\n          \"5\": {\n            \"name\": \"punctuation.separator.unit-specifiers.erlang\"\n          },\n          \"6\": {\n            \"name\": \"constant.numeric.integer.decimal.erlang\"\n          },\n          \"7\": {\n            \"name\": \"punctuation.separator.type-specifiers.erlang\"\n          }\n        },\n        \"match\": \"(integer|float|binary|bytes|bitstring|bits|utf8|utf16|utf32)|(signed|unsigned)|(big|little|native)|(unit)(:)(\\\\d++)|(-)\"\n      }]\n    },\n    \"keyword\": {\n      \"match\": \"\\\\b(after|begin|case|catch|cond|end|fun|if|let|of|try|receive|when|maybe|else)\\\\b\",\n      \"name\": \"keyword.control.erlang\"\n    },\n    \"language-constant\": {\n      \"match\": \"\\\\b(false|true|undefined)\\\\b\",\n      \"name\": \"constant.language\"\n    },\n    \"list\": {\n      \"begin\": \"(\\\\[)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.definition.list.begin.erlang\"\n        }\n      },\n      \"end\": \"(\\\\])\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.definition.list.end.erlang\"\n        }\n      },\n      \"name\": \"meta.structure.list.erlang\",\n      \"patterns\": [{\n        \"match\": \"\\\\||\\\\|\\\\||,\",\n        \"name\": \"punctuation.separator.list.erlang\"\n      }, {\n        \"include\": \"#everything-else\"\n      }]\n    },\n    \"macro-directive\": {\n      \"patterns\": [{\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.section.directive.begin.erlang\"\n          },\n          \"2\": {\n            \"name\": \"keyword.control.directive.ifdef.erlang\"\n          },\n          \"3\": {\n            \"name\": \"punctuation.definition.parameters.begin.erlang\"\n          },\n          \"4\": {\n            \"name\": \"entity.name.function.macro.erlang\"\n          },\n          \"5\": {\n            \"name\": \"punctuation.definition.parameters.end.erlang\"\n          },\n          \"6\": {\n            \"name\": \"punctuation.section.directive.end.erlang\"\n          }\n        },\n        \"match\": \"^\\\\s*+(-)\\\\s*+(ifdef)\\\\s*+(\\\\()\\\\s*+([a-zA-z\\\\d@_]++)\\\\s*+(\\\\))\\\\s*+(\\\\.)\",\n        \"name\": \"meta.directive.ifdef.erlang\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.section.directive.begin.erlang\"\n          },\n          \"2\": {\n            \"name\": \"keyword.control.directive.ifndef.erlang\"\n          },\n          \"3\": {\n            \"name\": \"punctuation.definition.parameters.begin.erlang\"\n          },\n          \"4\": {\n            \"name\": \"entity.name.function.macro.erlang\"\n          },\n          \"5\": {\n            \"name\": \"punctuation.definition.parameters.end.erlang\"\n          },\n          \"6\": {\n            \"name\": \"punctuation.section.directive.end.erlang\"\n          }\n        },\n        \"match\": \"^\\\\s*+(-)\\\\s*+(ifndef)\\\\s*+(\\\\()\\\\s*+([a-zA-z\\\\d@_]++)\\\\s*+(\\\\))\\\\s*+(\\\\.)\",\n        \"name\": \"meta.directive.ifndef.erlang\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.section.directive.begin.erlang\"\n          },\n          \"2\": {\n            \"name\": \"keyword.control.directive.undef.erlang\"\n          },\n          \"3\": {\n            \"name\": \"punctuation.definition.parameters.begin.erlang\"\n          },\n          \"4\": {\n            \"name\": \"entity.name.function.macro.erlang\"\n          },\n          \"5\": {\n            \"name\": \"punctuation.definition.parameters.end.erlang\"\n          },\n          \"6\": {\n            \"name\": \"punctuation.section.directive.end.erlang\"\n          }\n        },\n        \"match\": \"^\\\\s*+(-)\\\\s*+(undef)\\\\s*+(\\\\()\\\\s*+([a-zA-z\\\\d@_]++)\\\\s*+(\\\\))\\\\s*+(\\\\.)\",\n        \"name\": \"meta.directive.undef.erlang\"\n      }]\n    },\n    \"macro-usage\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"keyword.operator.macro.erlang\"\n        },\n        \"2\": {\n          \"name\": \"entity.name.function.macro.erlang\"\n        }\n      },\n      \"match\": \"(\\\\?\\\\??)\\\\s*+([a-zA-Z\\\\d@_]++)\",\n      \"name\": \"meta.macro-usage.erlang\"\n    },\n    \"module-directive\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"punctuation.section.directive.begin.erlang\"\n        },\n        \"2\": {\n          \"name\": \"keyword.control.directive.module.erlang\"\n        },\n        \"3\": {\n          \"name\": \"punctuation.definition.parameters.begin.erlang\"\n        },\n        \"4\": {\n          \"name\": \"entity.name.type.class.module.definition.erlang\"\n        },\n        \"5\": {\n          \"name\": \"punctuation.definition.parameters.end.erlang\"\n        },\n        \"6\": {\n          \"name\": \"punctuation.section.directive.end.erlang\"\n        }\n      },\n      \"match\": \"^\\\\s*+(-)\\\\s*+(module)\\\\s*+(\\\\()\\\\s*+([a-z][a-zA-Z\\\\d@_]*+)\\\\s*+(\\\\))\\\\s*+(\\\\.)\",\n      \"name\": \"meta.directive.module.erlang\"\n    },\n    \"number\": {\n      \"begin\": \"(?=\\\\d)\",\n      \"end\": \"(?!\\\\d)\",\n      \"patterns\": [{\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.separator.integer-float.erlang\"\n          },\n          \"2\": {\n            \"name\": \"punctuation.separator.float-exponent.erlang\"\n          }\n        },\n        \"match\": \"\\\\d++(\\\\.)\\\\d++([eE][\\\\+\\\\-]?\\\\d++)?\",\n        \"name\": \"constant.numeric.float.erlang\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.separator.base-integer.erlang\"\n          }\n        },\n        \"match\": \"2(#)([0-1]++_)*[0-1]++\",\n        \"name\": \"constant.numeric.integer.binary.erlang\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.separator.base-integer.erlang\"\n          }\n        },\n        \"match\": \"3(#)([0-2]++_)*[0-2]++\",\n        \"name\": \"constant.numeric.integer.base-3.erlang\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.separator.base-integer.erlang\"\n          }\n        },\n        \"match\": \"4(#)([0-3]++_)*[0-3]++\",\n        \"name\": \"constant.numeric.integer.base-4.erlang\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.separator.base-integer.erlang\"\n          }\n        },\n        \"match\": \"5(#)([0-4]++_)*[0-4]++\",\n        \"name\": \"constant.numeric.integer.base-5.erlang\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.separator.base-integer.erlang\"\n          }\n        },\n        \"match\": \"6(#)([0-5]++_)*[0-5]++\",\n        \"name\": \"constant.numeric.integer.base-6.erlang\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.separator.base-integer.erlang\"\n          }\n        },\n        \"match\": \"7(#)([0-6]++_)*[0-6]++\",\n        \"name\": \"constant.numeric.integer.base-7.erlang\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.separator.base-integer.erlang\"\n          }\n        },\n        \"match\": \"8(#)([0-7]++_)*[0-7]++\",\n        \"name\": \"constant.numeric.integer.octal.erlang\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.separator.base-integer.erlang\"\n          }\n        },\n        \"match\": \"9(#)([0-8]++_)*[0-8]++\",\n        \"name\": \"constant.numeric.integer.base-9.erlang\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.separator.base-integer.erlang\"\n          }\n        },\n        \"match\": \"10(#)(\\\\d++_)*\\\\d++\",\n        \"name\": \"constant.numeric.integer.decimal.erlang\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.separator.base-integer.erlang\"\n          }\n        },\n        \"match\": \"11(#)([\\\\daA]++_)*[\\\\daA]++\",\n        \"name\": \"constant.numeric.integer.base-11.erlang\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.separator.base-integer.erlang\"\n          }\n        },\n        \"match\": \"12(#)([\\\\da-bA-B]++_)*[\\\\da-bA-B]++\",\n        \"name\": \"constant.numeric.integer.base-12.erlang\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.separator.base-integer.erlang\"\n          }\n        },\n        \"match\": \"13(#)([\\\\da-cA-C]++_)*[\\\\da-cA-C]++\",\n        \"name\": \"constant.numeric.integer.base-13.erlang\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.separator.base-integer.erlang\"\n          }\n        },\n        \"match\": \"14(#)([\\\\da-dA-D]++_)*[\\\\da-dA-D]++\",\n        \"name\": \"constant.numeric.integer.base-14.erlang\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.separator.base-integer.erlang\"\n          }\n        },\n        \"match\": \"15(#)([\\\\da-eA-E]++_)*[\\\\da-eA-E]++\",\n        \"name\": \"constant.numeric.integer.base-15.erlang\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.separator.base-integer.erlang\"\n          }\n        },\n        \"match\": \"16(#)([\\\\da-fA-F]++_)*[\\\\da-fA-F]++\",\n        \"name\": \"constant.numeric.integer.hexadecimal.erlang\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.separator.base-integer.erlang\"\n          }\n        },\n        \"match\": \"17(#)([\\\\da-gA-G]++_)*[\\\\da-gA-G]++\",\n        \"name\": \"constant.numeric.integer.base-17.erlang\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.separator.base-integer.erlang\"\n          }\n        },\n        \"match\": \"18(#)([\\\\da-hA-H]++_)*[\\\\da-hA-H]++\",\n        \"name\": \"constant.numeric.integer.base-18.erlang\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.separator.base-integer.erlang\"\n          }\n        },\n        \"match\": \"19(#)([\\\\da-iA-I]++_)*[\\\\da-iA-I]++\",\n        \"name\": \"constant.numeric.integer.base-19.erlang\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.separator.base-integer.erlang\"\n          }\n        },\n        \"match\": \"20(#)([\\\\da-jA-J]++_)*[\\\\da-jA-J]++\",\n        \"name\": \"constant.numeric.integer.base-20.erlang\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.separator.base-integer.erlang\"\n          }\n        },\n        \"match\": \"21(#)([\\\\da-kA-K]++_)*[\\\\da-kA-K]++\",\n        \"name\": \"constant.numeric.integer.base-21.erlang\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.separator.base-integer.erlang\"\n          }\n        },\n        \"match\": \"22(#)([\\\\da-lA-L]++_)*[\\\\da-lA-L]++\",\n        \"name\": \"constant.numeric.integer.base-22.erlang\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.separator.base-integer.erlang\"\n          }\n        },\n        \"match\": \"23(#)([\\\\da-mA-M]++_)*[\\\\da-mA-M]++\",\n        \"name\": \"constant.numeric.integer.base-23.erlang\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.separator.base-integer.erlang\"\n          }\n        },\n        \"match\": \"24(#)([\\\\da-nA-N]++_)*[\\\\da-nA-N]++\",\n        \"name\": \"constant.numeric.integer.base-24.erlang\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.separator.base-integer.erlang\"\n          }\n        },\n        \"match\": \"25(#)([\\\\da-oA-O]++_)*[\\\\da-oA-O]++\",\n        \"name\": \"constant.numeric.integer.base-25.erlang\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.separator.base-integer.erlang\"\n          }\n        },\n        \"match\": \"26(#)([\\\\da-pA-P]++_)*[\\\\da-pA-P]++\",\n        \"name\": \"constant.numeric.integer.base-26.erlang\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.separator.base-integer.erlang\"\n          }\n        },\n        \"match\": \"27(#)([\\\\da-qA-Q]++_)*[\\\\da-qA-Q]++\",\n        \"name\": \"constant.numeric.integer.base-27.erlang\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.separator.base-integer.erlang\"\n          }\n        },\n        \"match\": \"28(#)([\\\\da-rA-R]++_)*[\\\\da-rA-R]++\",\n        \"name\": \"constant.numeric.integer.base-28.erlang\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.separator.base-integer.erlang\"\n          }\n        },\n        \"match\": \"29(#)([\\\\da-sA-S]++_)*[\\\\da-sA-S]++\",\n        \"name\": \"constant.numeric.integer.base-29.erlang\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.separator.base-integer.erlang\"\n          }\n        },\n        \"match\": \"30(#)([\\\\da-tA-T]++_)*[\\\\da-tA-T]++\",\n        \"name\": \"constant.numeric.integer.base-30.erlang\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.separator.base-integer.erlang\"\n          }\n        },\n        \"match\": \"31(#)([\\\\da-uA-U]++_)*[\\\\da-uA-U]++\",\n        \"name\": \"constant.numeric.integer.base-31.erlang\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.separator.base-integer.erlang\"\n          }\n        },\n        \"match\": \"32(#)([\\\\da-vA-V]++_)*[\\\\da-vA-V]++\",\n        \"name\": \"constant.numeric.integer.base-32.erlang\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.separator.base-integer.erlang\"\n          }\n        },\n        \"match\": \"33(#)([\\\\da-wA-W]++_)*[\\\\da-wA-W]++\",\n        \"name\": \"constant.numeric.integer.base-33.erlang\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.separator.base-integer.erlang\"\n          }\n        },\n        \"match\": \"34(#)([\\\\da-xA-X]++_)*[\\\\da-xA-X]++\",\n        \"name\": \"constant.numeric.integer.base-34.erlang\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.separator.base-integer.erlang\"\n          }\n        },\n        \"match\": \"35(#)([\\\\da-yA-Y]++_)*[\\\\da-yA-Y]++\",\n        \"name\": \"constant.numeric.integer.base-35.erlang\"\n      }, {\n        \"captures\": {\n          \"1\": {\n            \"name\": \"punctuation.separator.base-integer.erlang\"\n          }\n        },\n        \"match\": \"36(#)([\\\\da-zA-Z]++_)*[\\\\da-zA-Z]++\",\n        \"name\": \"constant.numeric.integer.base-36.erlang\"\n      }, {\n        \"match\": \"\\\\d++#([\\\\da-zA-Z]++_)*[\\\\da-zA-Z]++\",\n        \"name\": \"invalid.illegal.integer.erlang\"\n      }, {\n        \"match\": \"(\\\\d++_)*\\\\d++\",\n        \"name\": \"constant.numeric.integer.decimal.erlang\"\n      }]\n    },\n    \"parenthesized-expression\": {\n      \"begin\": \"(\\\\()\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.section.expression.begin.erlang\"\n        }\n      },\n      \"end\": \"(\\\\))\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.section.expression.end.erlang\"\n        }\n      },\n      \"name\": \"meta.expression.parenthesized\",\n      \"patterns\": [{\n        \"include\": \"#everything-else\"\n      }]\n    },\n    \"record-directive\": {\n      \"begin\": \"^\\\\s*+(-)\\\\s*+(record)\\\\s*+(\\\\()\\\\s*+([a-z][a-zA-Z\\\\d@_]*+|'[^']*+')\\\\s*+(,)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.section.directive.begin.erlang\"\n        },\n        \"2\": {\n          \"name\": \"keyword.control.directive.import.erlang\"\n        },\n        \"3\": {\n          \"name\": \"punctuation.definition.parameters.begin.erlang\"\n        },\n        \"4\": {\n          \"name\": \"entity.name.type.class.record.definition.erlang\"\n        },\n        \"5\": {\n          \"name\": \"punctuation.separator.parameters.erlang\"\n        }\n      },\n      \"end\": \"(\\\\))\\\\s*+(\\\\.)\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.definition.parameters.end.erlang\"\n        },\n        \"2\": {\n          \"name\": \"punctuation.section.directive.end.erlang\"\n        }\n      },\n      \"name\": \"meta.directive.record.erlang\",\n      \"patterns\": [{\n        \"include\": \"#internal-record-body\"\n      }, {\n        \"include\": \"#comment\"\n      }]\n    },\n    \"record-usage\": {\n      \"patterns\": [{\n        \"captures\": {\n          \"1\": {\n            \"name\": \"keyword.operator.record.erlang\"\n          },\n          \"2\": {\n            \"name\": \"entity.name.type.class.record.erlang\"\n          },\n          \"3\": {\n            \"name\": \"punctuation.separator.record-field.erlang\"\n          },\n          \"4\": {\n            \"name\": \"variable.other.field.erlang\"\n          }\n        },\n        \"match\": \"(#)\\\\s*+([a-z][a-zA-Z\\\\d@_]*+|'[^']*+')\\\\s*+(\\\\.)\\\\s*+([a-z][a-zA-Z\\\\d@_]*+|'[^']*+')\",\n        \"name\": \"meta.record-usage.erlang\"\n      }, {\n        \"begin\": \"(#)\\\\s*+([a-z][a-zA-Z\\\\d@_]*+|'[^']*+')\",\n        \"beginCaptures\": {\n          \"1\": {\n            \"name\": \"keyword.operator.record.erlang\"\n          },\n          \"2\": {\n            \"name\": \"entity.name.type.class.record.erlang\"\n          }\n        },\n        \"end\": \"(?<=\\\\})\",\n        \"name\": \"meta.record-usage.erlang\",\n        \"patterns\": [{\n          \"include\": \"#internal-record-body\"\n        }]\n      }]\n    },\n    \"sigil-docstring\": {\n      \"begin\": '(~[bBsS]?)(([\"]{3,})\\\\s*)(\\\\S.*)?$',\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"storage.type.string.erlang\"\n        },\n        \"2\": {\n          \"name\": \"meta.string.quoted.triple.begin.erlang\"\n        },\n        \"3\": {\n          \"name\": \"punctuation.definition.string.begin.erlang\"\n        },\n        \"4\": {\n          \"name\": \"invalid.illegal.string.erlang\"\n        }\n      },\n      \"comment\": \"Only whitespace characters are allowed after the beggining and before the closing sequences and those cannot be in the same line\",\n      \"end\": '^(\\\\s*(\\\\3))(?!\")',\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"meta.string.quoted.triple.end.erlang\"\n        },\n        \"2\": {\n          \"name\": \"punctuation.definition.string.end.erlang\"\n        }\n      },\n      \"name\": \"string.quoted.tripple.sigil.erlang\"\n    },\n    \"sigil-string\": {\n      \"patterns\": [{\n        \"include\": \"#sigil-string-parenthesis\"\n      }, {\n        \"include\": \"#sigil-string-parenthesis-verbatim\"\n      }, {\n        \"include\": \"#sigil-string-curly-brackets\"\n      }, {\n        \"include\": \"#sigil-string-curly-brackets-verbatim\"\n      }, {\n        \"include\": \"#sigil-string-square-brackets\"\n      }, {\n        \"include\": \"#sigil-string-square-brackets-verbatim\"\n      }, {\n        \"include\": \"#sigil-string-less-greater\"\n      }, {\n        \"include\": \"#sigil-string-less-greater-verbatim\"\n      }, {\n        \"include\": \"#sigil-string-single-character\"\n      }, {\n        \"include\": \"#sigil-string-single-character-verbatim\"\n      }, {\n        \"include\": \"#sigil-string-single-quote\"\n      }, {\n        \"include\": \"#sigil-string-single-quote-verbatim\"\n      }, {\n        \"include\": \"#sigil-string-double-quote\"\n      }, {\n        \"include\": \"#sigil-string-double-quote-verbatim\"\n      }]\n    },\n    \"sigil-string-curly-brackets\": {\n      \"begin\": \"(~[bs]?)([{])\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"storage.type.string.erlang\"\n        },\n        \"2\": {\n          \"name\": \"punctuation.definition.string.begin.erlang\"\n        }\n      },\n      \"end\": \"([}])\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.definition.string.end.erlang\"\n        }\n      },\n      \"name\": \"string.quoted.curly-brackets.sigil.erlang\",\n      \"patterns\": [{\n        \"include\": \"#internal-string-body\"\n      }]\n    },\n    \"sigil-string-curly-brackets-verbatim\": {\n      \"begin\": \"(~[BS])([{])\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"storage.type.string.erlang\"\n        },\n        \"2\": {\n          \"name\": \"punctuation.definition.string.begin.erlang\"\n        }\n      },\n      \"end\": \"([}])\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.definition.string.end.erlang\"\n        }\n      },\n      \"name\": \"string.quoted.curly-brackets.sigil.erlang\"\n    },\n    \"sigil-string-double-quote\": {\n      \"begin\": '(~[bs]?)(\")',\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"storage.type.string.erlang\"\n        },\n        \"2\": {\n          \"name\": \"punctuation.definition.string.begin.erlang\"\n        }\n      },\n      \"end\": \"(\\\\2)\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.definition.string.end.erlang\"\n        }\n      },\n      \"name\": \"string.quoted.double.sigil.erlang\",\n      \"patterns\": [{\n        \"include\": \"#internal-string-body\"\n      }]\n    },\n    \"sigil-string-double-quote-verbatim\": {\n      \"begin\": '(~[BS])(\")',\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"storage.type.string.erlang\"\n        },\n        \"2\": {\n          \"name\": \"punctuation.definition.string.begin.erlang\"\n        }\n      },\n      \"end\": \"(\\\\2)\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.definition.string.end.erlang\"\n        }\n      },\n      \"name\": \"string.quoted.double.sigil.erlang\"\n    },\n    \"sigil-string-less-greater\": {\n      \"begin\": \"(~[bs]?)(<)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"storage.type.string.erlang\"\n        },\n        \"2\": {\n          \"name\": \"punctuation.definition.string.begin.erlang\"\n        }\n      },\n      \"end\": \"(>)\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.definition.string.end.erlang\"\n        }\n      },\n      \"name\": \"string.quoted.less-greater.sigil.erlang\",\n      \"patterns\": [{\n        \"include\": \"#internal-string-body\"\n      }]\n    },\n    \"sigil-string-less-greater-verbatim\": {\n      \"begin\": \"(~[BS])(<)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"storage.type.string.erlang\"\n        },\n        \"2\": {\n          \"name\": \"punctuation.definition.string.begin.erlang\"\n        }\n      },\n      \"end\": \"(>)\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.definition.string.end.erlang\"\n        }\n      },\n      \"name\": \"string.quoted.less-greater.sigil.erlang\"\n    },\n    \"sigil-string-parenthesis\": {\n      \"begin\": \"(~[bs]?)([(])\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"storage.type.string.erlang\"\n        },\n        \"2\": {\n          \"name\": \"punctuation.definition.string.begin.erlang\"\n        }\n      },\n      \"end\": \"([)])\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.definition.string.end.erlang\"\n        }\n      },\n      \"name\": \"string.quoted.parenthesis.sigil.erlang\",\n      \"patterns\": [{\n        \"include\": \"#internal-string-body\"\n      }]\n    },\n    \"sigil-string-parenthesis-verbatim\": {\n      \"begin\": \"(~[BS])([(])\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"storage.type.string.erlang\"\n        },\n        \"2\": {\n          \"name\": \"punctuation.definition.string.begin.erlang\"\n        }\n      },\n      \"end\": \"([)])\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.definition.string.end.erlang\"\n        }\n      },\n      \"name\": \"string.quoted.parenthesis.sigil.erlang\"\n    },\n    \"sigil-string-single-character\": {\n      \"begin\": \"(~[bs]?)([/\\\\|`#])\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"storage.type.string.erlang\"\n        },\n        \"2\": {\n          \"name\": \"punctuation.definition.string.begin.erlang\"\n        }\n      },\n      \"end\": \"(\\\\2)\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.definition.string.end.erlang\"\n        }\n      },\n      \"name\": \"string.quoted.other.sigil.erlang\",\n      \"patterns\": [{\n        \"include\": \"#internal-string-body\"\n      }]\n    },\n    \"sigil-string-single-character-verbatim\": {\n      \"begin\": \"(~[BS])([/\\\\|`#])\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"storage.type.string.erlang\"\n        },\n        \"2\": {\n          \"name\": \"punctuation.definition.string.begin.erlang\"\n        }\n      },\n      \"end\": \"(\\\\2)\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.definition.string.end.erlang\"\n        }\n      },\n      \"name\": \"string.quoted.other.sigil.erlang\"\n    },\n    \"sigil-string-single-quote\": {\n      \"begin\": \"(~[bs]?)(')\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"storage.type.string.erlang\"\n        },\n        \"2\": {\n          \"name\": \"punctuation.definition.string.begin.erlang\"\n        }\n      },\n      \"end\": \"(\\\\2)\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.definition.string.end.erlang\"\n        }\n      },\n      \"name\": \"string.quoted.single.sigil.erlang\",\n      \"patterns\": [{\n        \"include\": \"#internal-string-body\"\n      }]\n    },\n    \"sigil-string-single-quote-verbatim\": {\n      \"begin\": \"(~[BS])(')\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"storage.type.string.erlang\"\n        },\n        \"2\": {\n          \"name\": \"punctuation.definition.string.begin.erlang\"\n        }\n      },\n      \"end\": \"(\\\\2)\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.definition.string.end.erlang\"\n        }\n      },\n      \"name\": \"string.quoted.single.sigil.erlang\"\n    },\n    \"sigil-string-square-brackets\": {\n      \"begin\": \"(~[bs]?)([\\\\[])\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"storage.type.string.erlang\"\n        },\n        \"2\": {\n          \"name\": \"punctuation.definition.string.begin.erlang\"\n        }\n      },\n      \"end\": \"([\\\\]])\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.definition.string.end.erlang\"\n        }\n      },\n      \"name\": \"string.quoted.square-brackets.sigil.erlang\",\n      \"patterns\": [{\n        \"include\": \"#internal-string-body\"\n      }]\n    },\n    \"sigil-string-square-brackets-verbatim\": {\n      \"begin\": \"(~[BS])([\\\\[])\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"storage.type.string.erlang\"\n        },\n        \"2\": {\n          \"name\": \"punctuation.definition.string.begin.erlang\"\n        }\n      },\n      \"end\": \"([\\\\]])\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.definition.string.end.erlang\"\n        }\n      },\n      \"name\": \"string.quoted.square-brackets.sigil.erlang\"\n    },\n    \"string\": {\n      \"begin\": '(\")',\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.definition.string.begin.erlang\"\n        }\n      },\n      \"end\": '(\")',\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.definition.string.end.erlang\"\n        }\n      },\n      \"name\": \"string.quoted.double.erlang\",\n      \"patterns\": [{\n        \"include\": \"#internal-string-body\"\n      }]\n    },\n    \"symbolic-operator\": {\n      \"match\": \"\\\\+\\\\+|\\\\+|--|-|\\\\*|/=|/|=/=|=:=|==|=<|=|<-|<|>=|>|!|::|\\\\?=\",\n      \"name\": \"keyword.operator.symbolic.erlang\"\n    },\n    \"textual-operator\": {\n      \"match\": \"\\\\b(andalso|band|and|bxor|xor|bor|orelse|or|bnot|not|bsl|bsr|div|rem)\\\\b\",\n      \"name\": \"keyword.operator.textual.erlang\"\n    },\n    \"tuple\": {\n      \"begin\": \"(\\\\{)\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.definition.tuple.begin.erlang\"\n        }\n      },\n      \"end\": \"(\\\\})\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.definition.tuple.end.erlang\"\n        }\n      },\n      \"name\": \"meta.structure.tuple.erlang\",\n      \"patterns\": [{\n        \"match\": \",\",\n        \"name\": \"punctuation.separator.tuple.erlang\"\n      }, {\n        \"include\": \"#everything-else\"\n      }]\n    },\n    \"variable\": {\n      \"captures\": {\n        \"1\": {\n          \"name\": \"variable.other.erlang\"\n        },\n        \"2\": {\n          \"name\": \"variable.language.omitted.erlang\"\n        }\n      },\n      \"match\": \"(_[a-zA-Z\\\\d@_]++|[A-Z][a-zA-Z\\\\d@_]*+)|(_)\"\n    }\n  },\n  \"scopeName\": \"source.erlang\",\n  \"aliases\": [\"erl\"]\n});\nvar erlang = [lang];\nexport { erlang as default };"],
  "mappings": "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",
  "names": []
}
